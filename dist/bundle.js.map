{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uGAAuG;AAC1G;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY;AACZ,aAAa,WAAW,KAAK;AAC7B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,eAAe;AACrC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,aAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","sources":["webpack://witch-game/./node_modules/stackblur-canvas/dist/stackblur-es.js","webpack://witch-game/./src/astarclass.ts","webpack://witch-game/./src/beamEffect.ts","webpack://witch-game/./src/bestiary.ts","webpack://witch-game/./src/drawable.ts","webpack://witch-game/./src/entity/enemy/armoredzombieEnemy.ts","webpack://witch-game/./src/entity/enemy/bigKnightEnemy.ts","webpack://witch-game/./src/entity/enemy/bigSkullEnemy.ts","webpack://witch-game/./src/entity/enemy/bishopEnemy.ts","webpack://witch-game/./src/entity/enemy/chargeEnemy.ts","webpack://witch-game/./src/entity/enemy/crabEnemy.ts","webpack://witch-game/./src/entity/enemy/enemy.ts","webpack://witch-game/./src/entity/enemy/energyWizard.ts","webpack://witch-game/./src/entity/enemy/fireWizard.ts","webpack://witch-game/./src/entity/enemy/frogEnemy.ts","webpack://witch-game/./src/entity/enemy/knightEnemy.ts","webpack://witch-game/./src/entity/enemy/occultistEnemy.ts","webpack://witch-game/./src/entity/enemy/queenEnemy.ts","webpack://witch-game/./src/entity/enemy/rookEnemy.ts","webpack://witch-game/./src/entity/enemy/skullEnemy.ts","webpack://witch-game/./src/entity/enemy/spawner.ts","webpack://witch-game/./src/entity/enemy/wizardEnemy.ts","webpack://witch-game/./src/entity/enemy/zombieEnemy.ts","webpack://witch-game/./src/entity/entity.ts","webpack://witch-game/./src/entity/object/barrel.ts","webpack://witch-game/./src/entity/object/block.ts","webpack://witch-game/./src/entity/object/bomb.ts","webpack://witch-game/./src/entity/object/chest.ts","webpack://witch-game/./src/entity/object/crate.ts","webpack://witch-game/./src/entity/object/mushrooms.ts","webpack://witch-game/./src/entity/object/pot.ts","webpack://witch-game/./src/entity/object/pottedPlant.ts","webpack://witch-game/./src/entity/object/pumpkin.ts","webpack://witch-game/./src/entity/object/tombStone.ts","webpack://witch-game/./src/entity/object/vendingMachine.ts","webpack://witch-game/./src/entity/resource/coalResource.ts","webpack://witch-game/./src/entity/resource/emeraldResource.ts","webpack://witch-game/./src/entity/resource/goldResource.ts","webpack://witch-game/./src/entity/resource/resource.ts","webpack://witch-game/./src/entity/resource/rockResource.ts","webpack://witch-game/./src/environment.ts","webpack://witch-game/./src/eventBus.ts","webpack://witch-game/./src/eventEmitter.ts","webpack://witch-game/./src/events.ts","webpack://witch-game/./src/game.ts","webpack://witch-game/./src/gameConstants.ts","webpack://witch-game/./src/gameState.ts","webpack://witch-game/./src/guiButton.ts","webpack://witch-game/./src/healthbar.ts","webpack://witch-game/./src/hitWarning.ts","webpack://witch-game/./src/input.ts","webpack://witch-game/./src/inventory.ts","webpack://witch-game/./src/item/armor.ts","webpack://witch-game/./src/item/backpack.ts","webpack://witch-game/./src/item/bestiaryBook.ts","webpack://witch-game/./src/item/bluegem.ts","webpack://witch-game/./src/item/bombItem.ts","webpack://witch-game/./src/item/candle.ts","webpack://witch-game/./src/item/coal.ts","webpack://witch-game/./src/item/coin.ts","webpack://witch-game/./src/item/dropTable.ts","webpack://witch-game/./src/item/equippable.ts","webpack://witch-game/./src/item/godStone.ts","webpack://witch-game/./src/item/gold.ts","webpack://witch-game/./src/item/goldenKey.ts","webpack://witch-game/./src/item/greengem.ts","webpack://witch-game/./src/item/hammer.ts","webpack://witch-game/./src/item/heart.ts","webpack://witch-game/./src/item/item.ts","webpack://witch-game/./src/item/key.ts","webpack://witch-game/./src/item/lantern.ts","webpack://witch-game/./src/item/light.ts","webpack://witch-game/./src/item/redgem.ts","webpack://witch-game/./src/item/spellbookPage.ts","webpack://witch-game/./src/item/stone.ts","webpack://witch-game/./src/item/torch.ts","webpack://witch-game/./src/item/usable.ts","webpack://witch-game/./src/item/weaponBlood.ts","webpack://witch-game/./src/item/weaponFragments.ts","webpack://witch-game/./src/item/weaponPoison.ts","webpack://witch-game/./src/level.ts","webpack://witch-game/./src/levelConstants.ts","webpack://witch-game/./src/levelGenerator.ts","webpack://witch-game/./src/levelParametersGenerator.ts","webpack://witch-game/./src/lightSource.ts","webpack://witch-game/./src/lighting.ts","webpack://witch-game/./src/map.ts","webpack://witch-game/./src/menu.ts","webpack://witch-game/./src/mouseCursor.ts","webpack://witch-game/./src/particle/attackAnimation.ts","webpack://witch-game/./src/particle/damageNumber.ts","webpack://witch-game/./src/particle/deathParticle.ts","webpack://witch-game/./src/particle/genericParticle.ts","webpack://witch-game/./src/particle/imageParticle.ts","webpack://witch-game/./src/particle/particle.ts","webpack://witch-game/./src/particle/slashParticle.ts","webpack://witch-game/./src/particle/wizardTeleportParticle.ts","webpack://witch-game/./src/player.ts","webpack://witch-game/./src/postProcess.ts","webpack://witch-game/./src/projectile/enemyShield.ts","webpack://witch-game/./src/projectile/enemySpawnAnimation.ts","webpack://witch-game/./src/projectile/explosion.ts","webpack://witch-game/./src/projectile/playerFireball.ts","webpack://witch-game/./src/projectile/projectile.ts","webpack://witch-game/./src/projectile/wizardFireball.ts","webpack://witch-game/./src/random.ts","webpack://witch-game/./src/reverb.ts","webpack://witch-game/./src/room.ts","webpack://witch-game/./src/sound.ts","webpack://witch-game/./src/stats.ts","webpack://witch-game/./src/textbox.ts","webpack://witch-game/./src/tile/bones.ts","webpack://witch-game/./src/tile/button.ts","webpack://witch-game/./src/tile/chasm.ts","webpack://witch-game/./src/tile/coffinTile.ts","webpack://witch-game/./src/tile/decorations/decoration.ts","webpack://witch-game/./src/tile/decorations/puddle.ts","webpack://witch-game/./src/tile/door.ts","webpack://witch-game/./src/tile/downLadder.ts","webpack://witch-game/./src/tile/floor.ts","webpack://witch-game/./src/tile/fountainTile.ts","webpack://witch-game/./src/tile/insideLevelDoor.ts","webpack://witch-game/./src/tile/spawnfloor.ts","webpack://witch-game/./src/tile/spiketrap.ts","webpack://witch-game/./src/tile/tile.ts","webpack://witch-game/./src/tile/trapdoor.ts","webpack://witch-game/./src/tile/upLadder.ts","webpack://witch-game/./src/tile/wall.ts","webpack://witch-game/./src/tile/wallTorch.ts","webpack://witch-game/./src/tutorialListener.ts","webpack://witch-game/./src/utils.ts","webpack://witch-game/./src/weapon/dagger.ts","webpack://witch-game/./src/weapon/dualdagger.ts","webpack://witch-game/./src/weapon/pickaxe.ts","webpack://witch-game/./src/weapon/shotgun.ts","webpack://witch-game/./src/weapon/spear.ts","webpack://witch-game/./src/weapon/spellbook.ts","webpack://witch-game/./src/weapon/warhammer.ts","webpack://witch-game/./src/weapon/weapon.ts","webpack://witch-game/webpack/bootstrap","webpack://witch-game/webpack/runtime/define property getters","webpack://witch-game/webpack/runtime/hasOwnProperty shorthand","webpack://witch-game/webpack/runtime/make namespace object","webpack://witch-game/webpack/before-startup","webpack://witch-game/webpack/startup","webpack://witch-game/webpack/after-startup"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || Object.prototype.toString.call(img).slice(8, -1) === 'HTMLImageElement' && !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height']; // add ImageBitmap support,can blur texture source\n\n  if (Object.prototype.toString.call(img).slice(8, -1) === 'ImageBitmap') {\n    w = img.width;\n    h = img.height;\n  }\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >>> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >>> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >>> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >>> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >>> shgSum;\n      pixels[yi + 1] = gSum * mulSum >>> shgSum;\n      pixels[yi + 2] = bSum * mulSum >>> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >>> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >>> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >>> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n","import { EntityDirection } from \"./entity/entity\";\r\nimport { Direction } from \"./game\";\r\nimport { SpikeTrap } from \"./tile/spiketrap\";\r\nimport { Wall } from \"./tile/wall\";\r\n\r\nexport namespace astar {\r\n  //================== start graph js\r\n  /* \r\n  graph.js http://github.com/bgrins/javascript-astar\r\n  MIT License\r\n  Creates a Graph class used in the astar search algorithm.\r\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \r\n      URL: http://eloquentjavascript.net/appendix2.html\r\n      License: http://creativecommons.org/licenses/by/3.0/\r\n  */\r\n\r\n  export interface Position {\r\n    x: number;\r\n    y: number;\r\n  }\r\n\r\n  export enum GraphNodeType {\r\n    WALL,\r\n    OPEN,\r\n  }\r\n\r\n  let getTileCost = (tile) => {\r\n    if (tile) return tile.isSolid() || tile.isDoor ? 99999999 : 300;\r\n    else return 99999999;\r\n  };\r\n\r\n  export class Graph {\r\n    nodes: GraphNode[][];\r\n    elements: number[][];\r\n\r\n    constructor(grid: number[][]) {\r\n      this.elements = grid;\r\n      var nodes: GraphNode[][] = [];\r\n      var row: number[],\r\n        rowLength: number,\r\n        len = grid.length;\r\n      for (var x = 0; x < len; ++x) {\r\n        row = grid[x];\r\n        rowLength = row.length;\r\n        nodes[x] = new Array(rowLength); // optimum array with size\r\n        for (var y = 0; y < rowLength; ++y) {\r\n          nodes[x][y] = new GraphNode(x, y, row[y]);\r\n        }\r\n      }\r\n      this.nodes = nodes;\r\n    }\r\n\r\n    toString(): string {\r\n      var graphString = \"\\n\";\r\n      var nodes = this.nodes;\r\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\r\n      for (var x = 0, len = nodes.length; x < len; ) {\r\n        rowDebug = \"\";\r\n        row = nodes[x++];\r\n        for (y = 0, l = row.length; y < l; ) {\r\n          rowDebug += row[y++].type + \" \";\r\n        }\r\n        graphString = graphString + rowDebug + \"\\n\";\r\n      }\r\n      return graphString;\r\n    }\r\n  }\r\n\r\n  export class GraphNode {\r\n    x: number;\r\n    y: number;\r\n    type: GraphNodeType;\r\n    data: any;\r\n    pos: Position;\r\n\r\n    constructor(x: number, y: number, type: GraphNodeType) {\r\n      this.data = {};\r\n      this.x = x;\r\n      this.y = y;\r\n      this.pos = { x: x, y: y };\r\n      this.type = type;\r\n    }\r\n\r\n    toString(): string {\r\n      return \"[\" + this.x + \" \" + this.y + \"]\";\r\n    }\r\n\r\n    isWall() {\r\n      return this.type == GraphNodeType.WALL;\r\n    }\r\n  }\r\n\r\n  export class BinaryHeap {\r\n    content: any[];\r\n    scoreFunction: (node: any) => number;\r\n\r\n    constructor(scoreFunction: (node: any) => number) {\r\n      this.content = [];\r\n      this.scoreFunction = scoreFunction;\r\n    }\r\n\r\n    push(node: any) {\r\n      // Add the new node to the end of the array.\r\n      this.content.push(node);\r\n      // Allow it to sink down.\r\n      this.sinkDown(this.content.length - 1);\r\n    }\r\n\r\n    pop() {\r\n      // Store the first node so we can return it later.\r\n      var result = this.content[0];\r\n      // Get the node at the end of the array.\r\n      var end = this.content.pop();\r\n      // If there are any elements left, put the end node at the\r\n      // start, and let it bubble up.\r\n      if (this.content.length > 0) {\r\n        this.content[0] = end;\r\n        this.bubbleUp(0);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    remove(node: any) {\r\n      var i = this.content.indexOf(node);\r\n\r\n      // When it is found, the process seen in 'pop' is repeated\r\n      // to fill up the hole.\r\n      var end = this.content.pop();\r\n      if (i !== this.content.length - 1) {\r\n        this.content[i] = end;\r\n        if (this.scoreFunction(end) < this.scoreFunction(node))\r\n          this.sinkDown(i);\r\n        else this.bubbleUp(i);\r\n      }\r\n    }\r\n\r\n    size() {\r\n      return this.content.length;\r\n    }\r\n\r\n    rescoreElement(node: any) {\r\n      this.sinkDown(this.content.indexOf(node));\r\n    }\r\n\r\n    sinkDown(n: number) {\r\n      // Fetch the element that has to be sunk.\r\n      var element = this.content[n];\r\n      // When at 0, an element can not sink any further.\r\n      while (n > 0) {\r\n        // Compute the parent element's index, and fetch it.\r\n        var parentN = ((n + 1) >> 1) - 1,\r\n          parent = this.content[parentN];\r\n        // Swap the elements if the parent is greater.\r\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n          this.content[parentN] = element;\r\n          this.content[n] = parent;\r\n          // Update 'n' to continue at the new position.\r\n          n = parentN;\r\n        } else {\r\n          // Found a parent that is less, no need to sink any further.\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    bubbleUp(n: number) {\r\n      // Look up the target element and its score.\r\n      var length = this.content.length,\r\n        element = this.content[n],\r\n        elemScore = this.scoreFunction(element);\r\n\r\n      while (true) {\r\n        // Compute the indices of the child elements.\r\n        var child2N = (n + 1) << 1,\r\n          child1N = child2N - 1;\r\n        // This is used to store the new position of the element,\r\n        // if any.\r\n        var swap = null;\r\n        // If the first child exists (is inside the array)...\r\n        if (child1N < length) {\r\n          // Look it up and compute its score.\r\n          var child1 = this.content[child1N],\r\n            child1Score = this.scoreFunction(child1);\r\n          // If the score is less than our element's, we need to swap.\r\n          if (child1Score < elemScore) swap = child1N;\r\n        }\r\n        // Do the same checks for the other child.\r\n        if (child2N < length) {\r\n          var child2 = this.content[child2N],\r\n            child2Score = this.scoreFunction(child2);\r\n          if (child2Score < (swap === null ? elemScore : child1Score))\r\n            swap = child2N;\r\n        }\r\n\r\n        // If the element needs to be moved, swap it, and continue.\r\n        if (swap !== null) {\r\n          this.content[n] = this.content[swap];\r\n          this.content[swap] = element;\r\n          n = swap;\r\n        } else {\r\n          // Otherwise, we are done.\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //end graph.js ==================\r\n\r\n  // javascript-astar\r\n  // http://github.com/bgrins/javascript-astar\r\n  // Freely distributable under the MIT License.\r\n  // Implements the astar search algorithm in javascript using a binary heap.\r\n  export interface AStarData {\r\n    f: number;\r\n    g: number;\r\n    h: number;\r\n    cost: number;\r\n    visited: boolean;\r\n    closed: boolean;\r\n    parent: AStarData;\r\n    pos: Position;\r\n    org: any;\r\n  }\r\n\r\n  export class AStar {\r\n    static NO_CHECK_START_POINT: boolean = false;\r\n    grid: AStarData[][];\r\n    constructor(\r\n      grid: any[][],\r\n      disablePoints?: Position[],\r\n      lastPlayerPosition?: Position,\r\n      enableCost?: boolean,\r\n    ) {\r\n      this.grid = [];\r\n      for (var x = 0, xl = grid.length; x < xl; x++) {\r\n        this.grid[x] = [];\r\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\r\n          var cost = getTileCost(grid[x][y]);\r\n          this.grid[x][y] = {\r\n            org: grid[x][y],\r\n            f: 0,\r\n            g: 0,\r\n            h: 0,\r\n            cost: cost,\r\n            visited: false,\r\n            closed: false,\r\n            pos: {\r\n              x: x,\r\n              y: y,\r\n            },\r\n            parent: null,\r\n          };\r\n        }\r\n      }\r\n      if (disablePoints !== undefined) {\r\n        for (var i = 0; i < disablePoints.length; i++) {\r\n          if (\r\n            disablePoints[i].x >= 0 &&\r\n            disablePoints[i].x < this.grid.length &&\r\n            disablePoints[i].y >= 0 &&\r\n            disablePoints[i].y < this.grid[0].length\r\n          )\r\n            this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\r\n        }\r\n      }\r\n      if (lastPlayerPosition) {\r\n        if (\r\n          lastPlayerPosition.x >= 0 &&\r\n          lastPlayerPosition.x < this.grid.length &&\r\n          lastPlayerPosition.y >= 0 &&\r\n          lastPlayerPosition.y < this.grid[0].length\r\n        )\r\n          this.grid[lastPlayerPosition.x][lastPlayerPosition.y].cost = 0.5;\r\n      }\r\n    }\r\n\r\n    heap(): BinaryHeap {\r\n      return new BinaryHeap(function (node: AStarData) {\r\n        return node.f;\r\n      });\r\n    }\r\n\r\n    _find(org: any) {\r\n      for (var x = 0; x < this.grid.length; x++)\r\n        for (var y = 0; y < this.grid[x].length; y++)\r\n          if (this.grid[x][y].org == org) return this.grid[x][y];\r\n    }\r\n\r\n    _search(\r\n      start: any,\r\n      end: any,\r\n      diagonal?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      turnCostsExtra?: boolean,\r\n      turnDirection?: Direction,\r\n      heuristic?: Function,\r\n      diagonalsOmni?: boolean,\r\n      lastPlayerPosition?: Position,\r\n    ) {\r\n      heuristic = heuristic || this.manhattan;\r\n      diagonal = !!diagonal;\r\n      diagonalsOnly = !!diagonalsOnly;\r\n      turnCostsExtra = !!turnCostsExtra;\r\n      diagonalsOmni = !!diagonalsOmni;\r\n\r\n      var openHeap = this.heap();\r\n\r\n      var _start: AStarData, _end: AStarData;\r\n      if (start.x !== undefined && start.y !== undefined)\r\n        _start = this.grid[start.x][start.y];\r\n      else _start = this._find(start);\r\n\r\n      if (end.x !== undefined && end.y !== undefined)\r\n        _end = this.grid[end.x][end.y];\r\n      else _end = this._find(end);\r\n\r\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\r\n\r\n      openHeap.push(_start);\r\n\r\n      while (openHeap.size() > 0) {\r\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\r\n        var currentNode: AStarData = openHeap.pop();\r\n\r\n        // End case -- result has been found, return the traced path.\r\n        if (currentNode === _end) {\r\n          var curr = currentNode;\r\n          var ret = [];\r\n          while (curr.parent) {\r\n            ret.push(curr);\r\n            curr = curr.parent;\r\n          }\r\n          return ret.reverse();\r\n        }\r\n\r\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\r\n        currentNode.closed = true;\r\n\r\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\r\n        var neighbors = this.neighbors(\r\n          currentNode,\r\n          diagonal,\r\n          diagonalsOnly,\r\n          diagonalsOmni,\r\n        );\r\n\r\n        for (var i = 0, il = neighbors.length; i < il; i++) {\r\n          var neighbor = neighbors[i];\r\n\r\n          if (neighbor.closed || neighbor.cost <= 0) {\r\n            // Not a valid node to process, skip to next neighbor.\r\n            continue;\r\n          }\r\n\r\n          // The g score is the shortest distance from start to current node.\r\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\r\n\r\n          var gScore = currentNode.g + neighbor.cost;\r\n          if (turnCostsExtra) {\r\n            var isTurn = false;\r\n            if (currentNode.parent)\r\n              isTurn = !(\r\n                (currentNode.parent.pos.x === currentNode.pos.x &&\r\n                  currentNode.pos.x === neighbor.pos.x) ||\r\n                (currentNode.parent.pos.y === currentNode.pos.y &&\r\n                  currentNode.pos.y === neighbor.pos.y)\r\n              );\r\n            else {\r\n              // initial step\r\n              isTurn = true;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 0 &&\r\n                neighbor.pos.y - currentNode.pos.y === -1 &&\r\n                turnDirection === Direction.UP\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 0 &&\r\n                neighbor.pos.y - currentNode.pos.y === 1 &&\r\n                turnDirection === Direction.DOWN\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 1 &&\r\n                neighbor.pos.y - currentNode.pos.y === 0 &&\r\n                turnDirection === Direction.RIGHT\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === -1 &&\r\n                neighbor.pos.y - currentNode.pos.y === 0 &&\r\n                turnDirection === Direction.LEFT\r\n              )\r\n                isTurn = false;\r\n            }\r\n            if (isTurn) gScore++;\r\n          }\r\n          var beenVisited = neighbor.visited;\r\n\r\n          if (!beenVisited || gScore < neighbor.g) {\r\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\r\n            neighbor.visited = true;\r\n            neighbor.parent = currentNode;\r\n            neighbor.h =\r\n              neighbor.h ||\r\n              heuristic(neighbor.pos, _end.pos, lastPlayerPosition);\r\n            neighbor.g = gScore;\r\n            neighbor.f = neighbor.g + neighbor.h;\r\n\r\n            if (!beenVisited) {\r\n              // Pushing to heap will put it in proper place based on the 'f' value.\r\n              openHeap.push(neighbor);\r\n            } else {\r\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\r\n              openHeap.rescoreElement(neighbor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // No result was found - empty array signifies failure to find path.\r\n      return [];\r\n    }\r\n\r\n    static search(\r\n      grid: any[][],\r\n      start: any,\r\n      end: any,\r\n      disablePoints?: Position[],\r\n      diagonal?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      turnCostsExtra?: boolean,\r\n      turnDirection?: Direction,\r\n      heuristic?: Function,\r\n      diagonalsOmni?: boolean,\r\n      lastPlayerPosition?: Position,\r\n    ) {\r\n      var astar = new AStar(grid, disablePoints, lastPlayerPosition);\r\n      return astar._search(\r\n        start,\r\n        end,\r\n        diagonal,\r\n        diagonalsOnly,\r\n        turnCostsExtra,\r\n        turnDirection,\r\n        heuristic,\r\n        diagonalsOmni,\r\n      );\r\n    }\r\n\r\n    manhattan(pos0: Position, pos1: Position): number {\r\n      var d1 = Math.abs(pos1.x - pos0.x);\r\n      var d2 = Math.abs(pos1.y - pos0.y);\r\n      var heuristic = d1 + d2;\r\n\r\n      return heuristic;\r\n    }\r\n\r\n    neighbors(\r\n      node: AStarData,\r\n      diagonals?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      diagonalsOmni?: boolean,\r\n    ): AStarData[] {\r\n      var grid = this.grid;\r\n      var ret = [];\r\n      var x = node.pos.x;\r\n      var y = node.pos.y;\r\n\r\n      if (!diagonalsOnly) {\r\n        // West\r\n        if (grid[x - 1] && grid[x - 1][y]) {\r\n          ret.push(grid[x - 1][y]);\r\n        }\r\n\r\n        // East\r\n        if (grid[x + 1] && grid[x + 1][y]) {\r\n          ret.push(grid[x + 1][y]);\r\n        }\r\n\r\n        // South\r\n        if (grid[x] && grid[x][y - 1]) {\r\n          ret.push(grid[x][y - 1]);\r\n        }\r\n\r\n        // North\r\n        if (grid[x] && grid[x][y + 1]) {\r\n          ret.push(grid[x][y + 1]);\r\n        }\r\n      }\r\n\r\n      if (diagonals) {\r\n        // Southwest\r\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\r\n          ret.push(grid[x - 1][y - 1]);\r\n        }\r\n\r\n        // Southeast\r\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\r\n          ret.push(grid[x + 1][y - 1]);\r\n        }\r\n\r\n        // Northwest\r\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\r\n          ret.push(grid[x - 1][y + 1]);\r\n        }\r\n\r\n        // Northeast\r\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\r\n          ret.push(grid[x + 1][y + 1]);\r\n        }\r\n      }\r\n      function getRandomBoolean(): boolean {\r\n        return Math.random() < 0.5;\r\n      }\r\n      if (diagonalsOmni) {\r\n        const randomBool: boolean = getRandomBoolean();\r\n        // West\r\n        if (grid[x - 1] && grid[x - 1][y]) {\r\n          // Instead of pushing West, choose between Southwest and Northwest\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x - 1][y + 1]);\r\n            return;\r\n          }\r\n        }\r\n        // East\r\n        if (grid[x + 1] && grid[x + 1][y]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x + 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y + 1]);\r\n            return;\r\n          }\r\n        }\r\n        // South\r\n        if (grid[x] && grid[x][y - 1]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y - 1]);\r\n            return;\r\n          }\r\n        }\r\n        // North\r\n        if (grid[x] && grid[x][y + 1]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y + 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y + 1]);\r\n            return;\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n  }\r\n}\r\n","import { Entity } from \"./entity/entity\";\r\nimport { Game } from \"./game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { Particle } from \"./particle/particle\";\r\nimport { Projectile } from \"./projectile/projectile\";\r\nimport { Room } from \"./room\";\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n  oldX: number;\r\n  oldY: number;\r\n  velocityX: number;\r\n  velocityY: number;\r\n  angle: number;\r\n}\r\n\r\nexport class BeamEffect extends Projectile {\r\n  // Number of points that make up the beam (higher = smoother but more expensive)\r\n  // Range: 10-100, recommended: 30\r\n  private static readonly SEGMENTS = 30;\r\n\r\n  // Downward force applied to each point (0 = no gravity)\r\n  // Range: 0-10, recommended: 2\r\n  private static readonly GRAVITY = 2;\r\n\r\n  // Physics simulation steps per frame (higher = more accurate but more expensive)\r\n  // Range: 1-10, recommended: 1\r\n  private static readonly ITERATIONS = 5;\r\n\r\n  // How much the beam reacts to movement of start/end points\r\n  // Range: 0-5, recommended: 1\r\n  private static readonly MOTION_INFLUENCE = 1;\r\n\r\n  // Amount of random movement applied to points (0 = straight beam)\r\n  // Range: 0-1, recommended: 0.5\r\n  private static readonly TURBULENCE = 0.5;\r\n\r\n  // How quickly velocity decreases over time\r\n  // Range: 0-1, recommended: 0.5\r\n  private static readonly VELOCITY_DECAY = 0.1;\r\n\r\n  // How quickly the turbulence angle changes\r\n  // Range: 0-2, recommended: 0.9\r\n  private static readonly ANGLE_CHANGE = 0.01; // for turbulence specifically\r\n\r\n  // Maximum speed any point can move per frame\r\n  // Range: 10-1000, recommended: 100\r\n  private static readonly MAX_VELOCITY = 100;\r\n\r\n  // General movement resistance (1 = no damping, 0 = full stop)\r\n  // Range: 0.9-0.999, recommended: 0.8\r\n  private static readonly DAMPING = 0.8;\r\n\r\n  // How strongly points pull toward their neighbors\r\n  // Range: 0.01-1, recommended: 0.01\r\n  private static readonly SPRING_STIFFNESS = 0.01;\r\n\r\n  // How quickly spring oscillations settle\r\n  // Range: 0.001-0.1, recommended: 0.1\r\n  private static readonly SPRING_DAMPING = 0.1;\r\n\r\n  private points: Point[];\r\n  private prevStartX: number;\r\n  private prevStartY: number;\r\n  private prevEndX: number;\r\n  private prevEndY: number;\r\n  private active: boolean = true;\r\n  private time: number = 0;\r\n  alpha: number = 1;\r\n  targetX: number;\r\n  targetY: number;\r\n  color: string;\r\n  compositeOperation: string;\r\n  gravity: number = BeamEffect.GRAVITY;\r\n  motionInfluence: number = BeamEffect.MOTION_INFLUENCE;\r\n  turbulence: number = BeamEffect.TURBULENCE;\r\n  velocityDecay: number = BeamEffect.VELOCITY_DECAY;\r\n  angleChange: number = BeamEffect.ANGLE_CHANGE;\r\n  maxVelocity: number = BeamEffect.MAX_VELOCITY;\r\n  damping: number = BeamEffect.DAMPING;\r\n  springStiffness: number = BeamEffect.SPRING_STIFFNESS;\r\n  springDamping: number = BeamEffect.SPRING_DAMPING;\r\n  iterations: number = BeamEffect.ITERATIONS;\r\n  segments: number = BeamEffect.SEGMENTS;\r\n  constructor(x1: number, y1: number, x2: number, y2: number, parent: Entity) {\r\n    super(parent, x1, y1);\r\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    this.x = x1;\r\n    this.y = y1;\r\n    this.targetX = x2;\r\n    this.targetY = y2;\r\n\r\n    this.points = this.initializePoints(startX, startY, endX, endY);\r\n    this.prevStartX = startX;\r\n    this.prevStartY = startY;\r\n    this.prevEndX = endX;\r\n    this.prevEndY = endY;\r\n    this.color = \"cyan\";\r\n    this.compositeOperation = \"source-over\";\r\n  }\r\n  /**\r\n   * Sets the physics properties for the beam effect.\r\n   *\r\n   * @param {number} [gravity] - The gravitational force applied to the beam. Default: 2\r\n   * @param {number} [motionInfluence] - The influence of motion on the beam. Default: 1\r\n   * @param {number} [turbulence] - The turbulence applied to the beam. Default: 0.5\r\n   * @param {number} [velocityDecay] - The rate at which velocity decays. Default: 0.1\r\n   * @param {number} [angleChange] - The change in angle of the beam. Default: 0.01\r\n   * @param {number} [maxVelocity] - The maximum velocity of the beam.\r\n   * @param {number} [damping] - The damping factor for the beam's motion.\r\n   * @param {number} [springStiffness] - The stiffness of the spring effect.\r\n   * @param {number} [springDamping] - The damping of the spring effect.\r\n   * @param {number} [iterations] - The number of iterations for the physics simulation.\r\n   * @param {number} [segments] - The number of segments for the beam.\r\n   */\r\n  setPhysics(\r\n    gravity?: number,\r\n    motionInfluence?: number,\r\n    turbulence?: number,\r\n    velocityDecay?: number,\r\n    angleChange?: number,\r\n    maxVelocity?: number,\r\n    damping?: number,\r\n    springStiffness?: number,\r\n    springDamping?: number,\r\n    iterations?: number,\r\n    segments?: number,\r\n  ) {\r\n    this.gravity = gravity ?? BeamEffect.GRAVITY;\r\n    this.motionInfluence = motionInfluence ?? BeamEffect.MOTION_INFLUENCE;\r\n    this.turbulence = turbulence ?? BeamEffect.TURBULENCE;\r\n    this.velocityDecay = velocityDecay ?? BeamEffect.VELOCITY_DECAY;\r\n    this.angleChange = angleChange ?? BeamEffect.ANGLE_CHANGE;\r\n    this.maxVelocity = maxVelocity ?? BeamEffect.MAX_VELOCITY;\r\n    this.damping = damping ?? BeamEffect.DAMPING;\r\n    this.springStiffness = springStiffness ?? BeamEffect.SPRING_STIFFNESS;\r\n    this.springDamping = springDamping ?? BeamEffect.SPRING_DAMPING;\r\n    this.iterations = iterations ?? BeamEffect.ITERATIONS;\r\n    this.segments = segments ?? BeamEffect.SEGMENTS;\r\n  }\r\n\r\n  setTarget(x: number, y: number, x2: number, y2: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.targetX = x2;\r\n    this.targetY = y2;\r\n  }\r\n\r\n  render(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    color: string = this.color,\r\n    lineWidth: number = 2,\r\n    delta: number = 1 / 60,\r\n    compositeOperation: string = this.compositeOperation,\r\n  ): void {\r\n    const startX =\r\n      this.x * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY =\r\n      this.y * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX =\r\n      this.targetX * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY =\r\n      this.targetY * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n\r\n    const startForceX =\r\n      (startX - this.prevStartX) * this.motionInfluence * delta;\r\n    const startForceY =\r\n      (startY - this.prevStartY) * this.motionInfluence * delta;\r\n    const endForceX = (endX - this.prevEndX) * this.motionInfluence * delta;\r\n    const endForceY = (endY - this.prevEndY) * this.motionInfluence * delta;\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      const influence = 1 - i / 4;\r\n      this.points[i].x += startForceX * influence;\r\n      this.points[i].y += startForceY * influence;\r\n    }\r\n    for (let i = this.points.length - 4; i < this.points.length - 1; i++) {\r\n      const influence = 1 - (this.points.length - i) / 4;\r\n      this.points[i].x += endForceX * influence;\r\n      this.points[i].y += endForceY * influence;\r\n    }\r\n\r\n    this.simulateRope(startX, startY, endX, endY, delta);\r\n\r\n    const ctx = Game.ctx;\r\n    ctx.save();\r\n    Game.ctx.globalCompositeOperation =\r\n      compositeOperation as GlobalCompositeOperation;\r\n    for (let i = 0; i < this.points.length - 1; i++) {\r\n      const p1 = this.points[i];\r\n      const p2 = this.points[i + 1];\r\n\r\n      const dx = p2.x - p1.x;\r\n      const dy = p2.y - p1.y;\r\n      const steps = Math.max(Math.abs(dx), Math.abs(dy));\r\n\r\n      const xIncrement = dx / steps;\r\n      const yIncrement = dy / steps;\r\n\r\n      let x = p1.x;\r\n      let y = p1.y;\r\n\r\n      for (let step = 0; step <= steps; step++) {\r\n        for (let w = 0; w < lineWidth; w++) {\r\n          for (let h = 0; h < lineWidth; h++) {\r\n            ctx.fillStyle = color;\r\n            ctx.fillRect(Math.round(x + w), Math.round(y + h), 1, 1);\r\n          }\r\n        }\r\n        x += xIncrement;\r\n        y += yIncrement;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    this.prevStartX = startX;\r\n    this.prevStartY = startY;\r\n    this.prevEndX = endX;\r\n    this.prevEndY = endY;\r\n  }\r\n\r\n  private initializePoints(\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ): Point[] {\r\n    const points: Point[] = [];\r\n    for (let i = 0; i < this.segments; i++) {\r\n      const t = i / (this.segments - 1);\r\n      points.push({\r\n        x: startX + (endX - startX) * t,\r\n        y: startY + (endY - startY) * t,\r\n        oldX: startX + (endX - startX) * t,\r\n        oldY: startY + (endY - startY) * t,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        angle: Math.random() * Math.PI * 2,\r\n      });\r\n    }\r\n    return points;\r\n  }\r\n\r\n  private applyTurbulence(point: Point, index: number): void {\r\n    point.angle += Math.sin(this.time * 0.1 + index * 0.5) * this.angleChange;\r\n\r\n    const turbulenceX = Math.cos(point.angle) * this.turbulence;\r\n    const turbulenceY = Math.sin(point.angle) * this.turbulence;\r\n\r\n    point.velocityX += turbulenceX;\r\n    point.velocityY += turbulenceY;\r\n\r\n    point.velocityX = Math.min(\r\n      Math.max(point.velocityX, -this.maxVelocity),\r\n      this.maxVelocity,\r\n    );\r\n    point.velocityY = Math.min(\r\n      Math.max(point.velocityY, -this.maxVelocity),\r\n      this.maxVelocity,\r\n    );\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.parent.dead) {\r\n      this.destroy();\r\n    }\r\n  };\r\n\r\n  private simulateRope(\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n    delta: number,\r\n  ): void {\r\n    const iterationsThisFrame = Math.ceil(this.iterations * delta);\r\n\r\n    for (let iteration = 0; iteration < iterationsThisFrame; iteration++) {\r\n      for (let i = 1; i < this.points.length - 1; i++) {\r\n        const point = this.points[i];\r\n        const prevPoint = this.points[i - 1];\r\n        const nextPoint = this.points[i + 1];\r\n\r\n        const springForceXPrev = (prevPoint.x - point.x) * this.springStiffness;\r\n        const springForceYPrev = (prevPoint.y - point.y) * this.springStiffness;\r\n        const springForceXNext = (nextPoint.x - point.x) * this.springStiffness;\r\n        const springForceYNext = (nextPoint.y - point.y) * this.springStiffness;\r\n\r\n        this.applyTurbulence(point, i);\r\n\r\n        point.velocityX =\r\n          (point.velocityX + springForceXPrev + springForceXNext) *\r\n          this.damping;\r\n        point.velocityY =\r\n          (point.velocityY + springForceYPrev + springForceYNext) *\r\n          this.damping;\r\n\r\n        const relativeVXPrev = prevPoint.velocityX - point.velocityX;\r\n        const relativeVYPrev = prevPoint.velocityY - point.velocityY;\r\n        const relativeVXNext = nextPoint.velocityX - point.velocityX;\r\n        const relativeVYNext = nextPoint.velocityY - point.velocityY;\r\n\r\n        point.velocityX +=\r\n          (relativeVXPrev + relativeVXNext) * this.springDamping;\r\n        point.velocityY +=\r\n          (relativeVYPrev + relativeVYNext) * this.springDamping;\r\n\r\n        point.oldX = point.x;\r\n        point.oldY = point.y;\r\n\r\n        point.x += point.velocityX;\r\n        point.y += point.velocityY + this.gravity;\r\n      }\r\n\r\n      const segmentLength =\r\n        Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2)) /\r\n        (this.segments - 1);\r\n\r\n      for (\r\n        let constraintIteration = 0;\r\n        constraintIteration < 2;\r\n        constraintIteration++\r\n      ) {\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n          const p1 = this.points[i];\r\n          const p2 = this.points[i + 1];\r\n\r\n          const dx = p2.x - p1.x;\r\n          const dy = p2.y - p1.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          const difference = segmentLength - distance;\r\n          const percent = difference / distance / 2;\r\n          const offsetX = dx * percent;\r\n          const offsetY = dy * percent;\r\n\r\n          if (i > 0) {\r\n            p1.x -= offsetX * 1.5;\r\n            p1.y -= offsetY * 1.5;\r\n          }\r\n          if (i < this.points.length - 2) {\r\n            p2.x += offsetX * 1.5;\r\n            p2.y += offsetY * 1.5;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.points[0].x = startX;\r\n    this.points[0].y = startY;\r\n    this.points[0].oldX = startX;\r\n    this.points[0].oldY = startY;\r\n    this.points[this.points.length - 1].x = endX;\r\n    this.points[this.points.length - 1].y = endY;\r\n    this.points[this.points.length - 1].oldX = endX;\r\n    this.points[this.points.length - 1].oldY = endY;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    this.drawableY = this.y - 0.01;\r\n    this.render(\r\n      this.targetX,\r\n      this.targetY,\r\n      this.x,\r\n      this.y,\r\n      this.color,\r\n      2,\r\n      delta,\r\n      this.compositeOperation,\r\n    );\r\n  };\r\n\r\n  static renderBeam(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    color: string = \"cyan\",\r\n    lineWidth: number = 2,\r\n    alpha: number = 1,\r\n  ): void {\r\n    const ctx = Game.ctx;\r\n    ctx.globalAlpha = alpha;\r\n\r\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(startX, startY);\r\n    ctx.lineTo(endX, endY);\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  destroy(): void {\r\n    this.active = false;\r\n    this.points = [];\r\n    this.dead = true;\r\n  }\r\n\r\n  isActive(): boolean {\r\n    return this.active;\r\n  }\r\n}\r\n","import { Game } from \"./game\";\nimport { Player } from \"./player\";\nimport { Input } from \"./input\";\nimport { MouseCursor } from \"./mouseCursor\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { CrabEnemy } from \"./entity/enemy/crabEnemy\";\nimport { FrogEnemy } from \"./entity/enemy/frogEnemy\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\nimport { ChargeEnemy } from \"./entity/enemy/chargeEnemy\";\nimport { RookEnemy } from \"./entity/enemy/rookEnemy\";\nimport { BishopEnemy } from \"./entity/enemy/bishopEnemy\";\nimport { ArmoredzombieEnemy } from \"./entity/enemy/armoredzombieEnemy\";\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\nimport { QueenEnemy } from \"./entity/enemy/queenEnemy\";\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\nimport { BigKnightEnemy } from \"./entity/enemy/bigKnightEnemy\";\nimport { FireWizardEnemy } from \"./entity/enemy/fireWizard\";\nimport { Spawner } from \"./entity/enemy/spawner\";\nimport { OccultistEnemy } from \"./entity/enemy/occultistEnemy\";\n\n//enemy typeof to class map\nconst enemyClassMap = {\n  CrabEnemy: CrabEnemy,\n  FrogEnemy: FrogEnemy,\n  ZombieEnemy: ZombieEnemy,\n  SkullEnemy: SkullEnemy,\n  EnergyWizardEnemy: EnergyWizardEnemy,\n  ChargeEnemy: ChargeEnemy,\n  RookEnemy: RookEnemy,\n  BishopEnemy: BishopEnemy,\n  ArmoredzombieEnemy: ArmoredzombieEnemy,\n  BigSkullEnemy: BigSkullEnemy,\n  QueenEnemy: QueenEnemy,\n  KnightEnemy: KnightEnemy,\n  BigKnightEnemy: BigKnightEnemy,\n  FireWizardEnemy: FireWizardEnemy,\n  Spawner: Spawner,\n  OccultistEnemy: OccultistEnemy,\n};\n\ninterface BestiaryEntry {\n  name: string;\n  description: string;\n  tileX: number;\n  tileY: number;\n}\n\nexport class Bestiary {\n  game: Game;\n  player: Player;\n  isOpen: boolean = false;\n  openTime: number = Date.now();\n  entries: Array<BestiaryEntry>;\n  seenEnemies: Set<typeof Enemy>;\n  frame: number = 0;\n  activeEntryIndex: number = 0;\n  // Static variables for logbook button position\n  private buttonY: number;\n  private buttonX: number;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.player = player;\n    this.entries = [];\n    this.activeEntryIndex = 0;\n    this.buttonX = Math.round(\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE,\n    );\n    this.buttonY = Math.round(10);\n    this.seenEnemies = new Set();\n  }\n\n  /**\n   * Opens the logbook window.\n   */\n  open = () => {\n    if (this.seenEnemies.size === 0)\n      this.seenEnemies = this.game.tutorialListener.seenEnemies;\n    this.isOpen = true;\n    this.openTime = Date.now();\n  };\n\n  /**\n   * Closes the logbook window.\n   */\n  close = () => {\n    this.isOpen = false;\n  };\n\n  entryUp = () => {\n    this.activeEntryIndex =\n      (this.activeEntryIndex - 1 + this.entries.length) % this.entries.length;\n  };\n\n  entryDown = () => {\n    this.activeEntryIndex = (this.activeEntryIndex + 1) % this.entries.length;\n  };\n\n  /**\n   * Toggles the logbook window's open state.\n   */\n  toggleOpen = () => {\n    this.isOpen ? this.close() : this.open();\n  };\n\n  /**\n   * Adds a new entry to the logbook.\n   * @param enemy The enemy to add.\n   */\n  addEntry = (enemy: typeof Enemy) => {\n    const enemyClass = enemyClassMap[enemy.name];\n    this.entries.push({\n      name: enemy.name,\n      description: enemyClass.prototype.description,\n      tileX: enemyClass.prototype.tileX,\n      tileY: enemyClass.prototype.tileY,\n    });\n  };\n\n  /**\n   * Draws the logbook interface.\n   * @param delta The time delta since the last frame.\n   */\n  draw = (delta: number) => {\n    if (!this.isOpen) return;\n    Game.ctx.save();\n\n    // Draw semi-transparent background\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    // Define dimensions similar to Inventory\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / 100); // example scaling\n    const b = 2; // border\n    const g = -2; // gap\n    const ob = 1; // outer border\n    const width = 5 * (s + 2 * b + g) - g; // assuming 5 columns\n    const height = 4 * (s + 2 * b + g) - g; // assuming 4 rows\n\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n    const startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\n\n    // Draw main logbook background\n    Game.ctx.fillStyle = \"white\";\n    Game.ctx.fillRect(startX, startY, width + 2 * ob, height + 2 * ob);\n\n    // Draw logbook entries\n    Game.ctx.fillStyle = \"black\";\n    const padding = 10;\n\n    if (this.entries.length === 0) {\n      Game.fillText(\"No enemies seen yet\", startX + padding, startY + padding);\n    } else {\n      this.entries.forEach((entry, index) => {\n        Game.fillText(\n          entry.name,\n          startX + padding,\n          startY + padding + index * 20,\n        );\n      });\n\n      this.drawEnemySprite(\n        this.entries[this.activeEntryIndex].tileX,\n        this.entries[this.activeEntryIndex].tileY,\n        delta,\n      );\n    }\n    // Draw logbook button\n    this.drawLogbookButton(delta);\n    Game.ctx.restore();\n  };\n\n  drawEnemySprite = (tileX: number, tileY: number, delta: number) => {\n    this.frame += Math.round(0.1 * delta * 10) / 10;\n    if (this.frame >= 4) this.frame = 0;\n\n    Game.drawMob(tileX, tileY, 1, 1, 1, 1, 1, 1, \"Black\", 0);\n  };\n\n  /**\n   * Draws the logbook button on the screen.\n   * @param delta The time delta since the last frame.\n   */\n  drawLogbookButton = (delta: number) => {\n    Game.ctx.save();\n    this.buttonX = LevelConstants.SCREEN_W - 2;\n    this.buttonY = LevelConstants.SCREEN_H - 2.25;\n    Game.drawFX(0, 0, 2, 2, this.buttonX, this.buttonY, 2, 2);\n    Game.ctx.restore();\n  };\n\n  /**\n   * Handles mouse down events.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   * @param button The mouse button pressed.\n   */\n  handleMouseDown = (x: number, y: number, button: number) => {\n    if (button !== 0) return; // Only respond to left click\n\n    if (this.isPointInLogbookButton(x, y)) {\n      this.toggleOpen();\n    }\n  };\n\n  /**\n   * Handles mouse up events.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   * @param button The mouse button released.\n   */\n  handleMouseUp = (x: number, y: number, button: number) => {\n    // Implement if needed\n  };\n\n  /**\n   * Handles hold detection.\n   */\n  onHoldDetected = () => {\n    // Implement if needed\n  };\n\n  /**\n   * Checks if a point is within the logbook button bounds.\n   * @param x The x-coordinate to check.\n   * @param y The y-coordinate to check.\n   * @returns True if the point is within the button bounds, else false.\n   */\n  isPointInLogbookButton = (x: number, y: number): boolean => {\n    const tX = x / GameConstants.TILESIZE;\n    const tY = y / GameConstants.TILESIZE;\n    return (\n      tX >= this.buttonX &&\n      tX <= this.buttonX + 2 &&\n      tY >= this.buttonY &&\n      tY <= this.buttonY + 2\n    );\n  };\n\n  /**\n   * Updates the logbook state each game tick.\n   */\n  tick = () => {\n    if (this.isOpen) {\n      // Update logbook-related logic here\n    }\n  };\n}\n","export class Drawable {\r\n  drawableY = 0;\r\n\r\n  draw = (delta: number) => {};\r\n\r\n  hasBloom: boolean = false;\r\n  bloomColor: string = \"#FFFFFF\";\r\n  bloomAlpha: number = 1;\r\n  softBloomAlpha: number = 0;\r\n  updateBloom = (delta: number) => {\r\n    if (this.hasBloom) {\r\n      let diff = this.softBloomAlpha - this.bloomAlpha;\r\n      if (Math.abs(diff) > 0.001) {\r\n        this.softBloomAlpha = this.softBloomAlpha - diff * 0.1 * delta;\r\n      } else {\r\n        this.softBloomAlpha = this.bloomAlpha;\r\n      }\r\n    } else {\r\n      this.softBloomAlpha = 0;\r\n    }\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class ArmoredzombieEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 17;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.name = \"armored zombie\";\r\n    this.forwardOnlyAttack = true;\r\n\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n            this.facePlayer(player);\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY &&\r\n                  oldDir == this.direction\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 27;\r\n      this.tileY = 8;\r\n      if (this.health <= 1 || this.dying) {\r\n        this.tileX = 17;\r\n        this.tileY = 8;\r\n      }\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../weapon/spear\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../random\";\r\n\r\nexport class BigKnightEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  readonly REGEN_TICKS = 5;\r\n  drops: Array<Item>;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 29;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 2;\r\n    this.h = 2;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.tileX = 29;\r\n    this.tileY = 0;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.chainPushable = false;\r\n    this.name = \"giant knight\";\r\n\r\n    this.drops = [];\r\n    if (drop) this.drops.push(drop);\r\n    while (this.drops.length < 4) {\r\n      let dropProb = Random.rand();\r\n      if (dropProb < 0.005)\r\n        this.drops.push(new Spear(this.room, this.x, this.y));\r\n      else if (dropProb < 0.04)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.075)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.1)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  addHitWarnings = () => {\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x - 1, this.y, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x - 1, this.y + 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 2, this.y, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 2, this.y + 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x, this.y - 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 1, this.y - 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x, this.y + 2, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 1, this.y + 2, this.x, this.y),\r\n    );\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (this.health == 1) {\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.health++;\r\n          this.ticksSinceFirstHit = 0;\r\n        }\r\n      } else {\r\n        this.ticks++;\r\n        if (!this.seenPlayer) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (distance <= 4) {\r\n              this.targetPlayer = player;\r\n              this.facePlayer(player);\r\n              this.seenPlayer = true;\r\n              if (player === this.game.players[this.game.localPlayerID])\r\n                this.alertTicks = 1;\r\n              if (this.health >= 3) this.addHitWarnings();\r\n            }\r\n          }\r\n        } else if (this.seenPlayer) {\r\n          if (this.room.playerTicked === this.targetPlayer) {\r\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let moveX = this.x;\r\n            let moveY = this.y;\r\n            if (this.ticks % 2 === 0) {\r\n              // horizontal preference\r\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\r\n              else if (this.targetPlayer.x < this.x) moveX--;\r\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\r\n              else if (this.targetPlayer.y < this.y) moveY--;\r\n            } else {\r\n              // vertical preference\r\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\r\n              else if (this.targetPlayer.y < this.y) moveY--;\r\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\r\n              else if (this.targetPlayer.x < this.x) moveX--;\r\n            }\r\n\r\n            let hitPlayer = false;\r\n            if (this.health >= 3) {\r\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\r\n                return (\r\n                  player.x >= moveX &&\r\n                  player.x < moveX + this.w &&\r\n                  player.y >= moveY &&\r\n                  player.y < moveY + this.h\r\n                );\r\n              };\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  wouldHit(this.game.players[i], moveX, moveY)\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.drawX = this.x - oldX;\r\n              this.drawY = this.y - oldY;\r\n              if (this.x > oldX) this.direction = Direction.RIGHT;\r\n              else if (this.x < oldX) this.direction = Direction.LEFT;\r\n              else if (this.y > oldY) this.direction = Direction.DOWN;\r\n              else if (this.y < oldY) this.direction = Direction.UP;\r\n            }\r\n\r\n            if (this.health < this.maxHealth) {\r\n              this.ticksSinceFirstHit++;\r\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n                this.health++;\r\n                this.ticksSinceFirstHit = 0;\r\n              }\r\n            }\r\n\r\n            if (this.health >= 3) this.addHitWarnings();\r\n          }\r\n\r\n          let targetPlayerOffline =\r\n            Object.values(this.game.offlinePlayers).indexOf(\r\n              this.targetPlayer,\r\n            ) !== -1;\r\n          if (!this.aggro || targetPlayerOffline) {\r\n            let p = this.nearestPlayer();\r\n            if (p !== false) {\r\n              let [distance, player] = p;\r\n              if (\r\n                distance <= 4 &&\r\n                (targetPlayerOffline ||\r\n                  distance < this.playerDistance(this.targetPlayer))\r\n              ) {\r\n                if (player !== this.targetPlayer) {\r\n                  this.targetPlayer = player;\r\n                  this.facePlayer(player);\r\n                  if (player === this.game.players[this.game.localPlayerID])\r\n                    this.alertTicks = 1;\r\n                  if (this.health >= 3) this.addHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          18,\r\n          0,\r\n          2,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          2,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        2 * Math.floor((this.tileX + this.frame) / 2) + 1,\r\n        this.tileY,\r\n        2,\r\n        4,\r\n        this.x - this.drawX,\r\n        this.y - 2.5 - this.drawY,\r\n        2,\r\n        4,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  dropLoot = () => {\r\n    let dropOffsets = [\r\n      { x: 0, y: 0 },\r\n      { x: 1, y: 0 },\r\n      { x: 0, y: 1 },\r\n      { x: 1, y: 1 },\r\n    ];\r\n    for (let i = 0; i < this.drops.length; i++) {\r\n      this.drops[i].level = this.room;\r\n      this.drops[i].x = this.x + dropOffsets[i].x;\r\n      this.drops[i].y = this.y + dropOffsets[i].y;\r\n      this.room.items.push(this.drops[i]);\r\n    }\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../weapon/spear\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../random\";\r\n\r\nexport class BigSkullEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  readonly REGEN_TICKS = 5;\r\n  drops: Array<Item>;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 21;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 2;\r\n    this.h = 2;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.tileX = 21;\r\n    this.tileY = 0;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.chainPushable = false;\r\n    this.name = \"giant skeleton\";\r\n\r\n    this.drops = [];\r\n    if (drop) this.drops.push(drop);\r\n    while (this.drops.length < 4) {\r\n      let dropProb = Random.rand();\r\n      if (dropProb < 0.005)\r\n        this.drops.push(new Spear(this.room, this.x, this.y));\r\n      else if (dropProb < 0.04)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.075)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.1)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  addHitWarnings = () => {\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x - 1, this.y, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x - 1, this.y + 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 2, this.y, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 2, this.y + 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x, this.y - 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 1, this.y - 1, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x, this.y + 2, this.x, this.y),\r\n    );\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(this.game, this.x + 1, this.y + 2, this.x, this.y),\r\n    );\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (this.health <= 2) {\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.health++;\r\n          this.ticksSinceFirstHit = 0;\r\n        }\r\n        this.ticks++;\r\n      } else {\r\n        this.ticks++;\r\n        if (!this.seenPlayer) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (distance <= 4) {\r\n              this.targetPlayer = player;\r\n              this.facePlayer(player);\r\n              this.seenPlayer = true;\r\n              if (player === this.game.players[this.game.localPlayerID])\r\n                this.alertTicks = 1;\r\n              if (this.health >= 3) this.addHitWarnings();\r\n            }\r\n          }\r\n        } else if (this.seenPlayer) {\r\n          if (this.room.playerTicked === this.targetPlayer) {\r\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let moveX = this.x;\r\n            let moveY = this.y;\r\n            if (this.ticks % 2 === 0) {\r\n              // horizontal preference\r\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\r\n              else if (this.targetPlayer.x < this.x) moveX--;\r\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\r\n              else if (this.targetPlayer.y < this.y) moveY--;\r\n            } else {\r\n              // vertical preference\r\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\r\n              else if (this.targetPlayer.y < this.y) moveY--;\r\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\r\n              else if (this.targetPlayer.x < this.x) moveX--;\r\n            }\r\n\r\n            let hitPlayer = false;\r\n            if (this.health >= 2.5) {\r\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\r\n                return (\r\n                  player.x >= moveX &&\r\n                  player.x < moveX + this.w &&\r\n                  player.y >= moveY &&\r\n                  player.y < moveY + this.h\r\n                );\r\n              };\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  wouldHit(this.game.players[i], moveX, moveY)\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.drawX = this.x - oldX;\r\n              this.drawY = this.y - oldY;\r\n              if (this.x > oldX) this.direction = Direction.RIGHT;\r\n              else if (this.x < oldX) this.direction = Direction.LEFT;\r\n              else if (this.y > oldY) this.direction = Direction.DOWN;\r\n              else if (this.y < oldY) this.direction = Direction.UP;\r\n            }\r\n\r\n            if (this.health < this.maxHealth) {\r\n              this.ticksSinceFirstHit++;\r\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n                this.health++;\r\n                this.ticksSinceFirstHit = 0;\r\n              }\r\n            }\r\n\r\n            if (this.health >= 2.5) this.addHitWarnings();\r\n          }\r\n\r\n          let targetPlayerOffline =\r\n            Object.values(this.game.offlinePlayers).indexOf(\r\n              this.targetPlayer,\r\n            ) !== -1;\r\n          if (!this.aggro || targetPlayerOffline) {\r\n            let p = this.nearestPlayer();\r\n            if (p !== false) {\r\n              let [distance, player] = p;\r\n              if (\r\n                distance <= 4 &&\r\n                (targetPlayerOffline ||\r\n                  distance < this.playerDistance(this.targetPlayer))\r\n              ) {\r\n                if (player !== this.targetPlayer) {\r\n                  this.targetPlayer = player;\r\n                  this.facePlayer(player);\r\n                  if (player === this.game.players[this.game.localPlayerID])\r\n                    this.alertTicks = 1;\r\n                  if (this.health >= 3) this.addHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 21;\r\n      this.tileY = 0;\r\n      if (this.health === 3) {\r\n        this.tileX = 21;\r\n        this.tileY = 4;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileY = 0;\r\n          }\r\n        }\r\n      } else if (this.health === 2) {\r\n        this.tileX = 21;\r\n        this.tileY = 8;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileY = 4;\r\n          }\r\n        }\r\n      } else if (this.health === 1) {\r\n        this.tileX = 21;\r\n        this.tileY = 12;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileY = 8;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          18,\r\n          0,\r\n          2,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          2,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 20 ? Math.floor(this.frame) * 2 : 0),\r\n        this.tileY,\r\n        2,\r\n        4,\r\n        this.x - this.drawX,\r\n        this.y - 2.5 - this.drawY,\r\n        2,\r\n        4,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  dropLoot = () => {\r\n    let dropOffsets = [\r\n      { x: 0, y: 0 },\r\n      { x: 1, y: 0 },\r\n      { x: 0, y: 1 },\r\n      { x: 1, y: 1 },\r\n    ];\r\n    for (let i = 0; i < this.drops.length; i++) {\r\n      this.drops[i].level = this.room;\r\n      this.drops[i].x = this.x + dropOffsets[i].x;\r\n      this.drops[i].y = this.y + dropOffsets[i].y;\r\n      this.room.items.push(this.drops[i]);\r\n    }\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class BishopEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 31;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 31;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"bishop\";\r\n    this.jumpHeight = 1;\r\n    this.drawMoveSpeed = 0.2;\r\n    this.diagonalAttackRange = 1;\r\n    this.diagonalAttack = true;\r\n    this.orthogonalAttack = false;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 26;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  tryMove = (x: number, y: number) => {\r\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\r\n      return (\r\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\r\n      );\r\n    };\r\n    let enemyCollide = (enemy: Entity): boolean => {\r\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\r\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\r\n      return true;\r\n    };\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && enemyCollide(e)) {\r\n        return;\r\n      }\r\n    }\r\n    for (const i in this.game.players) {\r\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\r\n        return;\r\n      }\r\n    }\r\n    let tiles = [];\r\n    for (let xx = 0; xx < this.w; xx++) {\r\n      for (let yy = 0; yy < this.h; yy++) {\r\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\r\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    for (let tile of tiles) {\r\n      tile.onCollideEnemy(this);\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n\r\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (jumpY < 0.01) jumpY = 0;\r\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\r\n    this.jumpY = jumpY;\r\n  };\r\n\r\n  behavior = () => {\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n              if (this.room.roomArray[xx][yy] instanceof Door) {\r\n                // don't walk into doorways (normally wouldn't be an issue without diagonals)\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\r\n          disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y } as astar.Position);\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            true, //diagonals\r\n          );\r\n          moves = moves.filter((move) => {\r\n            const dx = Math.abs(move.pos.x - this.x);\r\n            const dy = Math.abs(move.pos.y - this.y);\r\n            return dx === 1 && dy === 1;\r\n          });\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                hitPlayer = true;\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount() * (1 + this.jumpY / 3),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport enum ChargeEnemyState {\r\n  IDLE,\r\n  ALERTED,\r\n  CHARGING,\r\n}\r\n\r\nexport class ChargeEnemy extends Enemy {\r\n  startX: number;\r\n  startY: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  visualTargetX: number;\r\n  visualTargetY: number;\r\n  ticks: number;\r\n  frame: number;\r\n  state: ChargeEnemyState;\r\n  trailFrame: number;\r\n  drop: Item;\r\n  static difficulty: number = 3;\r\n  static tileX: number = 13;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 13;\r\n    this.tileY = 8;\r\n    this.trailFrame = 0;\r\n    this.alertTicks = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.name = \"charge knight\";\r\n\r\n    this.state = ChargeEnemyState.IDLE;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  canMoveOver = (x: number, y: number): boolean => {\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && x === e.x && y === e.y) return false;\r\n    }\r\n    let t = this.room.roomArray[x][y];\r\n    return !(t.isSolid() || t instanceof Door);\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (this.state === ChargeEnemyState.IDLE) {\r\n        let blocked = false;\r\n        let dx = 0;\r\n        let dy = 0;\r\n        for (const i in this.game.players) {\r\n          if (this.x === this.game.players[i].x) {\r\n            if (this.y < this.game.players[i].y) dy = 1;\r\n            else dy = -1;\r\n            for (let yy = this.y; yy !== this.game.players[i].y; yy += dy) {\r\n              if (!this.canMoveOver(this.x, yy)) blocked = true;\r\n            }\r\n          } else if (this.y === this.game.players[i].y) {\r\n            if (this.x < this.game.players[i].x) dx = 1;\r\n            else dx = -1;\r\n            for (let xx = this.x; xx !== this.game.players[i].x; xx += dx) {\r\n              if (!this.canMoveOver(xx, this.y)) blocked = true;\r\n            }\r\n          }\r\n          if ((dx !== 0 || dy !== 0) && !blocked) {\r\n            this.state = ChargeEnemyState.ALERTED;\r\n            this.targetX = this.x;\r\n            this.targetY = this.y;\r\n            while (this.canMoveOver(this.targetX + dx, this.targetY + dy)) {\r\n              this.targetX += dx;\r\n              this.targetY += dy;\r\n              if (\r\n                (this.targetX === this.game.players[i].x &&\r\n                  this.targetY === this.game.players[i].y) ||\r\n                (this.targetX === this.game.players[i].x - 1 &&\r\n                  this.targetY === this.game.players[i].y) ||\r\n                (this.targetX === this.game.players[i].x + 1 &&\r\n                  this.targetY === this.game.players[i].y) ||\r\n                (this.targetX === this.game.players[i].x &&\r\n                  this.targetY === this.game.players[i].y - 1) ||\r\n                (this.targetX === this.game.players[i].x &&\r\n                  this.targetY === this.game.players[i].y + 1)\r\n              )\r\n                this.room.hitwarnings.push(\r\n                  new HitWarning(\r\n                    this.game,\r\n                    this.targetX,\r\n                    this.targetY,\r\n                    this.x,\r\n                    this.y,\r\n                  ),\r\n                );\r\n            }\r\n            this.visualTargetX = this.targetX + 0.5 * dx;\r\n            this.visualTargetY = this.targetY + 0.5 * dy;\r\n            if (dy === 1) this.visualTargetY += 0.65;\r\n            if (dx > 0) this.direction = Direction.RIGHT;\r\n            else if (dx < 0) this.direction = Direction.LEFT;\r\n            else if (dy < 0) this.direction = Direction.UP;\r\n            else if (dy > 0) this.direction = Direction.DOWN;\r\n            break;\r\n          }\r\n        }\r\n      } else if (this.state === ChargeEnemyState.ALERTED) {\r\n        this.state = ChargeEnemyState.CHARGING;\r\n        this.trailFrame = 0;\r\n\r\n        for (const i in this.game.players) {\r\n          if (\r\n            (this.y === this.game.players[i].y &&\r\n              ((this.x < this.game.players[i].x &&\r\n                this.game.players[i].x <= this.targetX) ||\r\n                (this.targetX <= this.game.players[i].x &&\r\n                  this.game.players[i].x < this.x))) ||\r\n            (this.x === this.game.players[i].x &&\r\n              ((this.y < this.game.players[i].y &&\r\n                this.game.players[i].y <= this.targetY) ||\r\n                (this.targetY <= this.game.players[i].y &&\r\n                  this.game.players[i].y < this.y)))\r\n          ) {\r\n            this.game.players[i].hurt(this.hit(), this.name);\r\n          }\r\n        }\r\n\r\n        this.startX = this.x;\r\n        this.startY = this.y;\r\n        this.drawX = this.targetX - this.x;\r\n        this.drawY = this.targetY - this.y;\r\n        this.x = this.targetX;\r\n        this.y = this.targetY;\r\n      } else if (this.state === ChargeEnemyState.CHARGING) {\r\n        this.state = ChargeEnemyState.IDLE;\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (\r\n        (this.state === ChargeEnemyState.CHARGING &&\r\n          Math.abs(this.drawX) > 0.1) ||\r\n        Math.abs(this.drawY) > 0.1\r\n      ) {\r\n        GenericParticle.spawnCluster(\r\n          this.room,\r\n          this.x - this.drawX + 0.5,\r\n          this.y - this.drawY + 0.5,\r\n          \"black\",\r\n        );\r\n        GenericParticle.spawnCluster(\r\n          this.room,\r\n          this.x - this.drawX + 0.5,\r\n          this.y - this.drawY + 0.5,\r\n          \"white\",\r\n        );\r\n      }\r\n\r\n      if (this.state === ChargeEnemyState.CHARGING) {\r\n        this.trailFrame += 0.01 * delta;\r\n        let t = this.trailFrame;\r\n\r\n        if (t >= 0 && t <= 1) {\r\n          Game.ctx.strokeStyle = \"white\";\r\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 1 - t;\r\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\r\n          Game.ctx.beginPath();\r\n          Game.ctx.moveTo(\r\n            (this.startX + 0.5) * GameConstants.TILESIZE,\r\n            (this.startY + 0.5) * GameConstants.TILESIZE,\r\n          );\r\n          Game.ctx.lineCap = \"round\";\r\n          Game.ctx.lineTo(\r\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\r\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE,\r\n          );\r\n          Game.ctx.stroke();\r\n          Game.ctx.globalAlpha = 1;\r\n        }\r\n      }\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (!this.cloned) {\r\n        if (this.state === ChargeEnemyState.IDLE) {\r\n          this.drawSleepingZs(delta);\r\n        } else if (this.state === ChargeEnemyState.ALERTED) {\r\n          this.drawExclamation(delta);\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dying) return;\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n    );\r\n    this.drawX += -0.1 * this.drawX;\r\n    this.drawY += -0.1 * this.drawY;\r\n\r\n    if (this.state === ChargeEnemyState.ALERTED) {\r\n      this.trailFrame += 0.4 * delta;\r\n\r\n      if (Math.floor(this.trailFrame) % 2 === 0) {\r\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\r\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\r\n        if (this.direction === Direction.LEFT) startX -= 3;\r\n        else if (this.direction === Direction.RIGHT) startX += 3;\r\n        else if (this.direction === Direction.DOWN) startY += 2;\r\n        else if (this.direction === Direction.UP) startY -= 8;\r\n\r\n        Game.ctx.strokeStyle = \"white\";\r\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\r\n        Game.ctx.beginPath();\r\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\r\n        Game.ctx.lineCap = \"round\";\r\n        Game.ctx.lineTo(\r\n          Math.round((this.visualTargetX + 0.5) * GameConstants.TILESIZE),\r\n          Math.round((this.visualTargetY - 0.25) * GameConstants.TILESIZE),\r\n        );\r\n        Game.ctx.stroke();\r\n        Game.ctx.globalAlpha = 1;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utils\";\r\n\r\nexport class CrabEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 8;\r\n    this.tileY = 4;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"crab\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 0.175;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Crab \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0 // 0.8\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.target,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[0].pos.x &&\r\n                  this.game.players[i].y === moves[0].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n\r\n              if (!hitPlayer) {\r\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            /*\r\n            if (\r\n              (this.target.x === this.targetPlayer.x &&\r\n                this.target.y === this.targetPlayer.y) ||\r\n              Utils.distance(\r\n                this.targetPlayer.x,\r\n                this.targetPlayer.y,\r\n                this.x,\r\n                this.y,\r\n              ) <= 2\r\n            )\r\n              */ {\r\n              this.makeHitWarnings();\r\n            }\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  /*\r\n                  if (\r\n                    (this.target.x === this.targetPlayer.x &&\r\n                      this.target.y === this.targetPlayer.y) ||\r\n                    Utils.distance(\r\n                      this.targetPlayer.x,\r\n                      this.targetPlayer.y,\r\n                      this.x,\r\n                      this.y,\r\n                    ) <= 2\r\n                  ) */ {\r\n                    this.makeHitWarnings();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 9;\r\n        this.tileY = 4;\r\n      } else {\r\n        this.tileX = 8;\r\n        this.tileY = 4;\r\n      }\r\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - 0.25 - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY + this.direction,\r\n        1,\r\n        1,\r\n        this.x - this.drawX + rumbleX,\r\n        this.y - this.drawYOffset - this.drawY + rumbleY,\r\n        1 * this.crushX,\r\n        1 * this.crushY,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { globalEventBus } from \"../../eventBus\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nenum EnemyState {\r\n  SLEEP,\r\n  AGGRO,\r\n  ATTACK,\r\n  DEAD,\r\n  IDLE,\r\n}\r\n\r\ninterface EnemyStatus {\r\n  poison: {\r\n    active: boolean;\r\n    hitCount: number;\r\n    startTick: number;\r\n    effectTick: number;\r\n  };\r\n  bleed: {\r\n    active: boolean;\r\n    hitCount: number;\r\n    startTick: number;\r\n    effectTick: number;\r\n  };\r\n}\r\n\r\nexport abstract class Enemy extends Entity {\r\n  seenPlayer: boolean;\r\n  heardPlayer: boolean;\r\n  frame: number;\r\n  ticks: number;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  status: EnemyStatus;\r\n  protected jumpY: number;\r\n  protected jumpHeight: number;\r\n  static difficulty: number = 1;\r\n  private effectStartTick: number;\r\n  private startTick: number;\r\n  private poisonHitCount;\r\n  private bleedHitCount;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.drawYOffset = 1.5;\r\n    this.name = \"\";\r\n    this.seenPlayer = false;\r\n    this.heardPlayer = false;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.aggro = false;\r\n    this.jumpY = 0;\r\n    this.jumpHeight = 0.3;\r\n    //this.dir = Direction.South;\r\n    this.name = \"generic enemy\";\r\n    this.dropChance = 0.1;\r\n    this.status = {\r\n      poison: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\r\n      bleed: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\r\n    };\r\n    this.effectStartTick = 1;\r\n    this.startTick = 1;\r\n    this.isEnemy = true;\r\n    this.poisonHitCount = 0;\r\n    this.bleedHitCount = 0;\r\n    //this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"gem\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  readonly tryMove = (x: number, y: number, collide: boolean = true) => {\r\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\r\n      return (\r\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\r\n      );\r\n    };\r\n    let entityCollide = (entity: Entity): boolean => {\r\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) return false;\r\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) return false;\r\n      return true;\r\n    };\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && entityCollide(e) && collide) {\r\n        return;\r\n      }\r\n    }\r\n    for (const i in this.game.players) {\r\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\r\n        return;\r\n      }\r\n    }\r\n    let tiles = [];\r\n    for (let xx = 0; xx < this.w; xx++) {\r\n      for (let yy = 0; yy < this.h; yy++) {\r\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\r\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    for (let tile of tiles) {\r\n      tile.onCollideEnemy(this);\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  handleEnemyCase = (playerHitBy?: Player) => {\r\n    if (!playerHitBy) return;\r\n    if (playerHitBy) {\r\n      this.aggro = true;\r\n      this.targetPlayer = playerHitBy;\r\n      //this.facePlayer(playerHitBy);\r\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\r\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\r\n    }\r\n  };\r\n\r\n  poison = () => {\r\n    if (!this.status.poison.active) {\r\n      this.status.poison = {\r\n        active: true,\r\n        hitCount: 0,\r\n        startTick: this.ticks,\r\n        effectTick: this.ticks % 3,\r\n      };\r\n      this.shadeColor = \"#00FF00\";\r\n    }\r\n  };\r\n\r\n  bleed = () => {\r\n    if (!this.status.bleed.active) {\r\n      this.status.bleed = {\r\n        active: true,\r\n        hitCount: 0,\r\n        startTick: this.ticks,\r\n        effectTick: this.ticks % 1,\r\n      };\r\n    }\r\n  };\r\n\r\n  tickPoison = () => {\r\n    if (this.status.poison.active && this.targetPlayer) {\r\n      if (\r\n        this.ticks % 3 === this.status.poison.effectTick &&\r\n        this.ticks !== this.status.poison.startTick &&\r\n        this.health >= 1\r\n      ) {\r\n        this.hurt(this.targetPlayer, 1, \"poison\");\r\n        this.shadeColor = \"#00FF00\";\r\n        //this.status.poison.hitCount++;\r\n\r\n        /*\r\n        if (this.status.poison.hitCount >= 2) {\r\n          this.status.poison = {\r\n            active: false,\r\n            hitCount: 0,\r\n            startTick: 0,\r\n            effectTick: 0,\r\n          };\r\n        }\r\n        */\r\n      }\r\n    }\r\n  };\r\n\r\n  tickBleed = () => {\r\n    if (this.status.bleed.active && this.targetPlayer) {\r\n      if (\r\n        this.ticks % 1 === this.status.bleed.effectTick &&\r\n        this.ticks !== this.status.bleed.startTick\r\n      ) {\r\n        this.hurt(this.targetPlayer, 0.5, \"blood\");\r\n        //this.targetPlayer.heal(0.5);\r\n        this.shadeColor = \"#FF0000\";\r\n        this.status.bleed.hitCount++;\r\n\r\n        if (this.status.bleed.hitCount >= 4) {\r\n          this.status.bleed = {\r\n            active: false,\r\n            hitCount: 0,\r\n            startTick: 0,\r\n            effectTick: 0,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    console.log(this.name, this.ticks);\r\n    this.tickPoison();\r\n    this.tickBleed();\r\n    this.behavior();\r\n    if (this.x !== this.lastX || this.y !== this.lastY) {\r\n      this.emitEntityData();\r\n    }\r\n    if (this.shielded) this.shield.updateLightSourcePos();\r\n  };\r\n\r\n  lookForPlayer = (face: boolean = true) => {\r\n    if (this.seenPlayer) return;\r\n    let p = this.nearestPlayer();\r\n    if (p !== false) {\r\n      let [distance, player] = p;\r\n      if (distance <= 4) {\r\n        this.targetPlayer = player;\r\n        if (face) this.facePlayer(player);\r\n        this.seenPlayer = true;\r\n        let type = this.constructor;\r\n        globalEventBus.emit(\"EnemySeenPlayer\", {\r\n          enemyType: this.constructor.name,\r\n          enemyName: this.name,\r\n        });\r\n        if (player === this.game.players[this.game.localPlayerID])\r\n          this.alertTicks = 1;\r\n        this.makeHitWarnings();\r\n      }\r\n    }\r\n  };\r\n\r\n  getDisablePositions = (): Array<astar.Position> => {\r\n    let disablePositions = Array<astar.Position>();\r\n    for (const e of this.room.entities) {\r\n      if (e !== this) {\r\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n      }\r\n    }\r\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n        if (\r\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n        ) {\r\n          // Don't walk on active spike traps\r\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n        }\r\n      }\r\n    }\r\n    return disablePositions;\r\n  };\r\n\r\n  findPath = () => {\r\n    let disablePositions = Array<astar.Position>();\r\n    for (const e of this.room.entities) {\r\n      if (e !== this) {\r\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n      }\r\n    }\r\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n        if (\r\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n        ) {\r\n          // Don't walk on active spike traps\r\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n        }\r\n      }\r\n    }\r\n    // Create a grid of the room\r\n    let grid = [];\r\n    for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n      grid[x] = [];\r\n      for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n        if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n          grid[x][y] = this.room.roomArray[x][y];\r\n        else grid[x][y] = false;\r\n      }\r\n    }\r\n\r\n    // Find a path to the target player\r\n    let moves = astar.AStar.search(\r\n      grid,\r\n      this,\r\n      this.targetPlayer,\r\n      disablePositions,\r\n      false,\r\n      false,\r\n      true,\r\n      this.direction,\r\n    );\r\n  };\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // Don't walk on active spike traps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  // Attack the player if they are in the way\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(moveX, moveY);\r\n                if (this.x > moveX) this.direction = Direction.RIGHT;\r\n                else if (this.x < moveX) this.direction = Direction.LEFT;\r\n                else if (this.y > moveY) this.direction = Direction.DOWN;\r\n                else if (this.y < moveY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    this.jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (this.jumpY < 0.01) this.jumpY = 0;\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    //putting this here bc i'm lazy\r\n    this.updateHurtFrame(delta);\r\n    this.animateDying(delta);\r\n\r\n    if (!this.doneMoving()) {\r\n      this.drawX *= 0.85 ** delta;\r\n      this.drawY *= 0.85 ** delta;\r\n\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n      this.jump(delta);\r\n    }\r\n\r\n    this.updateShadeColor(delta);\r\n  };\r\n\r\n  setDrawXY = (x: number, y: number) => {\r\n    this.drawX += this.x - x;\r\n    this.drawY += this.y - y;\r\n  };\r\n\r\n  get lastPlayerPos() {\r\n    return {\r\n      x: this.targetPlayer.lastX,\r\n      y: this.targetPlayer.lastY,\r\n    };\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.dying) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n  };\r\n\r\n  get type() {\r\n    return EntityType.ENEMY;\r\n  }\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { WizardEnemy } from \"./wizardEnemy\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport class EnergyWizardEnemy extends WizardEnemy {\r\n  static difficulty: number = 3;\r\n  static tileX: number = 6;\r\n  static tileY: number = 0;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"wizard bomber\";\r\n    this.projectileColor = [0, 50, 150];\r\n\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.state === WizardState.attack) this.tileX = 7;\r\n      else this.tileX = 6;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          Math.floor(this.frame) + 6,\r\n          2,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.5,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        this.frame += 0.4 * delta;\r\n        if (this.frame > 11) this.frame = -1;\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(delta);\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(delta);\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { Random } from \"../../random\";\r\nimport { Item } from \"../../item/item\";\r\nimport { WizardEnemy } from \"./wizardEnemy\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport class FireWizardEnemy extends WizardEnemy {\r\n  static difficulty: number = 3;\r\n  static tileX: number = 35;\r\n  static tileY: number = 8;\r\n  readonly ATTACK_RADIUS = 5;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.tileX = 35;\r\n    this.tileY = 8;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"fire wizard\";\r\n    this.projectileColor = [200, 20, 0];\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  withinAttackingRangeOfPlayer = (): boolean => {\r\n    let withinRange = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        (this.x - this.game.players[i].x) ** 2 +\r\n          (this.y - this.game.players[i].y) ** 2 <=\r\n        this.ATTACK_RADIUS ** 2\r\n      ) {\r\n        withinRange = true;\r\n      }\r\n    }\r\n    return withinRange;\r\n  };\r\n\r\n  shuffle = (a) => {\r\n    let j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Random.rand() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n        switch (this.state) {\r\n          case WizardState.attack:\r\n            const nearestPlayerInfo = this.nearestPlayer();\r\n            if (nearestPlayerInfo !== false) {\r\n              const [distance, targetPlayer] = nearestPlayerInfo;\r\n              const attackLength = 20;\r\n\r\n              const offsets = this.calculateProjectileOffsets(\r\n                targetPlayer.x,\r\n                targetPlayer.y,\r\n                10,\r\n              );\r\n\r\n              this.attemptProjectilePlacement(\r\n                [\r\n                  { x: -1, y: 0 },\r\n                  { x: -2, y: 0 },\r\n                  { x: 1, y: 0 },\r\n                  { x: 2, y: 0 },\r\n                  { x: 0, y: -1 },\r\n                  { x: 0, y: -2 },\r\n                  { x: 0, y: 1 },\r\n                  { x: 0, y: 2 },\r\n                ],\r\n                WizardFireball,\r\n                false,\r\n              );\r\n            }\r\n            this.state = WizardState.justAttacked;\r\n            break;\r\n          case WizardState.justAttacked:\r\n            this.state = WizardState.idle;\r\n            break;\r\n          case WizardState.teleport:\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let min = 100000;\r\n            let bestPos;\r\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\r\n            emptyTiles = emptyTiles.filter(\r\n              (tile) =>\r\n                !this.room.projectiles.some(\r\n                  (projectile) =>\r\n                    projectile.x === tile.x && projectile.y === tile.y,\r\n                ),\r\n            );\r\n\r\n            let optimalDist = Game.randTable(\r\n              [2, 2, 3, 3, 3, 3, 3],\r\n              Random.rand,\r\n            );\r\n            // pick a random player to target\r\n            let player_ids = [];\r\n            for (const i in this.game.players) player_ids.push(i);\r\n            let target_player_id = Game.randTable(player_ids, Random.rand);\r\n            for (let t of emptyTiles) {\r\n              let newPos = t;\r\n              let dist =\r\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\r\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\r\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\r\n                min = dist;\r\n                bestPos = newPos;\r\n              }\r\n            }\r\n            this.tryMove(bestPos.x, bestPos.y);\r\n            this.drawX = this.x - oldX;\r\n            this.drawY = this.y - oldY;\r\n            this.frame = 0; // trigger teleport animation\r\n            this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\r\n            if (this.withinAttackingRangeOfPlayer()) {\r\n              this.state = WizardState.attack;\r\n            } else {\r\n              this.state = WizardState.idle;\r\n            }\r\n            break;\r\n          case WizardState.idle:\r\n            this.state = WizardState.teleport;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          this.tileX + Math.floor(this.frame),\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.3,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n  };\r\n\r\n  kill = () => {\r\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\r\n      let b = new Bones(this.room, this.x, this.y);\r\n      b.skin = this.room.roomArray[this.x][this.y].skin;\r\n      this.room.roomArray[this.x][this.y] = b;\r\n    }\r\n\r\n    this.dead = true;\r\n    this.room.particles.push(new DeathParticle(this.x, this.y));\r\n\r\n    this.dropLoot();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utils\";\r\n\r\nexport class FrogEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  frameLength: number;\r\n  startFrame: number;\r\n  animationSpeed: number;\r\n  tickCount: number;\r\n  rumbling: boolean;\r\n  jumping: boolean;\r\n  jumpDistance: number;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 12;\r\n  static tileY: number = 16;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 12;\r\n    this.tileY = 16;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.frameLength = 3;\r\n    this.startFrame = 0;\r\n    this.animationSpeed = 0.1;\r\n    this.tickCount = 0;\r\n    this.jumping = false;\r\n    this.jumpDistance = 1;\r\n    this.drop = drop ? drop : new Coin(this.room, this.x, this.y);\r\n    this.name = \"frog\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 1;\r\n    this.drawMoveSpeed = 0.2;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 30;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\"weapon\", \"consumable\", \"gem\", \"tool\", \"coin\", \"poison\"]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 0.5;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.tileX = 1;\r\n    this.frameLength = 3;\r\n    this.animationSpeed = 0.1;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.tileX = 12;\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        this.tileX = 1;\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            let targetPosition = {\r\n              x: this.targetPlayer.x,\r\n              y: this.targetPlayer.y,\r\n            };\r\n            let dx = this.targetPlayer.x - this.x;\r\n            let dy = this.targetPlayer.y - this.y;\r\n            if (\r\n              (dx === 0 && dy <= 1) ||\r\n              (dx <= 1 && dy === 0) ||\r\n              (dx === 0 && dy >= -1) ||\r\n              (dx >= -1 && dy === 0)\r\n            ) {\r\n              let jumpOverX = this.targetPlayer.x + dx;\r\n              let jumpOverY = this.targetPlayer.y + dy;\r\n              if (\r\n                this.room.roomArray[jumpOverX] &&\r\n                this.room.roomArray[jumpOverX][jumpOverY]\r\n              ) {\r\n                if (!this.room.roomArray[jumpOverX][jumpOverY].isSolid()) {\r\n                  targetPosition = {\r\n                    x: jumpOverX,\r\n                    y: jumpOverY,\r\n                  };\r\n                }\r\n              }\r\n            }\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              targetPosition,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              false,\r\n              undefined,\r\n              undefined,\r\n              false,\r\n              this.lastPlayerPos,\r\n            );\r\n            //console.log(moves); //DON'T REMOVE THIS\r\n\r\n            if (moves[1]) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[1].pos.x &&\r\n                  this.game.players[i].y === moves[1].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX += 1.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY += 1.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(5 * this.drawX, 5 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                if (moves.length > 1) {\r\n                  let moveX = moves[1].pos.x;\r\n                  let moveY = moves[1].pos.y;\r\n                  this.tryMove(moveX, moveY);\r\n                  this.setDrawXY(this.lastX, this.lastY);\r\n\r\n                  if (this.jumping) {\r\n                    this.frame = 8;\r\n                    this.animationSpeed = 1;\r\n                  }\r\n                  if (this.x > moveX) this.direction = Direction.RIGHT;\r\n                  else if (this.x < moveX) this.direction = Direction.LEFT;\r\n                  else if (this.y > moveY) this.direction = Direction.DOWN;\r\n                  else if (this.y < moveY) this.direction = Direction.UP;\r\n                }\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.makeHitWarnings();\r\n            this.rumbling = true;\r\n            this.tileX = 3;\r\n            this.frame = 0;\r\n            this.frameLength = 2;\r\n            this.animationSpeed = 0.2;\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.makeHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\r\n    if (this.jumping) {\r\n      let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n      if (j > 1) {\r\n        this.jumpDistance = 2;\r\n        this.drawMoveSpeed = 0.2;\r\n      }\r\n      this.jumpY =\r\n        Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\r\n      if (this.jumpY < 0.01 && this.jumpY > -0.01) {\r\n        this.jumpY = 0;\r\n        this.jumpDistance = 1;\r\n        this.drawMoveSpeed = 0.2;\r\n      }\r\n      if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.25;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-2, 0],\r\n            [2, 0],\r\n            [0, -2],\r\n            [0, 2],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = this.x + x;\r\n      const targetY = this.y + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          this.x,\r\n          this.y,\r\n          true,\r\n          false,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += this.animationSpeed * delta;\r\n      if (this.frame >= this.frameLength) {\r\n        this.frame = 0;\r\n      }\r\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame).y;\r\n      if (this.drawX !== 0 || this.drawY !== 0) {\r\n        this.jumping = true;\r\n      } else {\r\n        this.jumping = false;\r\n      }\r\n      if (this.jumping) {\r\n        this.frameLength = 10;\r\n        this.animationSpeed = 0.4;\r\n      } else {\r\n        this.frameLength = 3;\r\n        this.animationSpeed = 0.1;\r\n      }\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX +\r\n          (this.tileX !== 12 && !this.rumbling ? Math.floor(this.frame) : 0),\r\n        this.tileY /*+ this.direction * 2,*/,\r\n        1,\r\n        2,\r\n        this.x + rumbleX - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class KnightEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 9;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.tileX = 9;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.name = \"burrow knight\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 29;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) {\r\n        const result = this.nearestPlayer();\r\n        if (result !== false) {\r\n          let [distance, p] = result;\r\n          if (distance < 4) {\r\n            this.rumbling = true;\r\n            this.seenPlayer = true;\r\n            this.targetPlayer = p;\r\n            this.facePlayer(p);\r\n            if (p === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.targetPlayer,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[0].pos.x &&\r\n                  this.game.players[i].y === moves[0].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.rumbling = true;\r\n                  this.makeHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n    let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 9;\r\n        this.tileY = 8;\r\n      } else {\r\n        this.tileX = 4;\r\n        this.tileY = 0;\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX + rumbleX,\r\n        this.y -\r\n          this.drawYOffset -\r\n          this.drawY +\r\n          (this.tileX === 4 ? 0.1875 : 0),\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\n\r\nimport { Enemy } from \"./enemy\";\r\n\r\nimport { Utils } from \"../../utils\";\r\nimport { BeamEffect } from \"../../beamEffect\";\r\nimport { Player } from \"../../player\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Lighting } from \"../../lighting\";\r\n\r\nexport class OccultistEnemy extends Enemy {\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  shieldedEnemies: Enemy[];\r\n  range: number;\r\n  static tileX: number = 55;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 6;\r\n    this.maxHealth = 6;\r\n    this.tileX = 55;\r\n    this.tileY = 8;\r\n    this.seenPlayer = true;\r\n    this.name = \"occultist\";\r\n    this.range = 6;\r\n    this.aggro = false;\r\n    this.frame = 0;\r\n    this.hasShadow = true;\r\n    this.shieldedBefore = false;\r\n    this.shieldedEnemies = [];\r\n    this.shadeColor = \"#000000\";\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [20, 0, 40],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.room.updateLighting();\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#2E0854\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.unshieldEnemies();\r\n    this.removeLightSource(this.lightSource);\r\n    this.lightSource = null;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    let enemiesToShield = this.room.entities.filter(\r\n      (entity) =>\r\n        entity instanceof Enemy &&\r\n        Utils.distance(this.x, this.y, entity.x, entity.y) <= this.range &&\r\n        !entity.shielded &&\r\n        !entity.dead &&\r\n        entity !== this &&\r\n        !entity.shieldedBefore,\r\n    );\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n\r\n      if (this.ticks % 2 === 0) {\r\n        if (enemiesToShield.length > 0) {\r\n          enemiesToShield.forEach((enemy) => {\r\n            const distance = Utils.distance(this.x, this.y, enemy.x, enemy.y);\r\n            if (Math.random() * 10 > distance) {\r\n              this.applyShieldTo(enemy as Enemy);\r\n            }\r\n          });\r\n\r\n          //this.createBeam(this.shieldedEnemies);\r\n        }\r\n      }\r\n\r\n      this.shieldedEnemies.forEach((enemy) => {\r\n        if (enemy.dead) {\r\n          this.shieldedEnemies = this.shieldedEnemies.filter(\r\n            (e) => e !== enemy,\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.shieldedEnemies.length > 0) {\r\n      this.shadeColor = \"#2E0854\";\r\n    } else {\r\n      this.shadeColor = \"#000000\";\r\n    }\r\n  };\r\n\r\n  unshieldEnemies = () => {\r\n    if (this.shieldedEnemies.length > 0) {\r\n      for (let enemy of this.shieldedEnemies) {\r\n        if (!enemy.cloned) {\r\n          enemy.removeShield();\r\n          console.log(\"unshielded enemy:\", enemy.name);\r\n        }\r\n      }\r\n      this.shieldedEnemies = [];\r\n    }\r\n  };\r\n\r\n  applyShieldTo = (enemy: Enemy) => {\r\n    //this.shadeColor = \"#2E0854\";\r\n    this.shadeMultiplier = 1.5;\r\n    enemy.applyShield();\r\n    this.shieldedEnemies.push(enemy);\r\n    if (enemy.shielded && enemy.shield) {\r\n      let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\r\n      beam.compositeOperation = \"source-over\";\r\n      beam.color = \"#2E0854\";\r\n      beam.turbulence = 0.4;\r\n      beam.gravity = 0.1;\r\n      beam.iterations = 1;\r\n      beam.segments = 100;\r\n      beam.angleChange = 0.001;\r\n      beam.springDamping = 0.01;\r\n      beam.drawableY = enemy.drawableY;\r\n      this.room.projectiles.push(beam);\r\n      console.log(\"beam created\");\r\n    }\r\n  };\r\n\r\n  private createBeam = (enemies: Enemy[]) => {\r\n    for (let enemy of enemies) {\r\n      if (enemy.shielded && enemy.shield) {\r\n        let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\r\n        beam.compositeOperation = \"source-over\";\r\n        beam.color = \"#2E0854\";\r\n        beam.turbulence = 0.5;\r\n        beam.gravity = 0.1;\r\n        beam.iterations = 1;\r\n        beam.segments = 30;\r\n        beam.angleChange = 0.01;\r\n        beam.springDamping = 0.1;\r\n        beam.drawableY = enemy.drawableY;\r\n        this.room.projectiles.push(beam);\r\n        console.log(\"beam created\");\r\n      }\r\n    }\r\n  };\r\n\r\n  updateBeam = (delta: number) => {\r\n    for (let beam of this.room.projectiles) {\r\n      if (beam instanceof BeamEffect) {\r\n        beam.setTarget(\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          beam.parent.x - beam.parent.drawX,\r\n          beam.parent.y - beam.parent.drawY,\r\n        );\r\n        beam.drawableY = beam.parent.drawableY;\r\n\r\n        switch (Math.floor(this.frame)) {\r\n          case 0:\r\n            beam.color = \"#2e0854\";\r\n            break;\r\n          case 1:\r\n            beam.color = \"#331988\";\r\n            break;\r\n          case 2:\r\n            beam.color = \"#4729db\";\r\n            break;\r\n          case 3:\r\n            beam.color = \"#331988\";\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    this.drawableY = this.y;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.updateBeam(delta);\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class QueenEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 23;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 23;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"queen\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 1;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        let p = this.nearestPlayer();\r\n        if (p !== false) {\r\n          let [distance, player] = p;\r\n          if (distance <= 4) {\r\n            this.targetPlayer = player;\r\n            this.facePlayer(player);\r\n            this.seenPlayer = true;\r\n            if (player === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            true, //diagonals\r\n            false, //diagonalsOnly\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            false, //diagonalsOmni\r\n          );\r\n          if (moves.length > 0) {\r\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\r\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\r\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\r\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              //if ()\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n\r\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (jumpY < 0.01) jumpY = 0;\r\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\r\n    this.jumpY = jumpY;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount() * (1 + this.jumpY / 3),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class RookEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 23 + 28;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 23 + 28;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"rook\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = false;\r\n    this.jumpHeight = 0.5;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        let p = this.nearestPlayer();\r\n        if (p !== false) {\r\n          let [distance, player] = p;\r\n          if (distance <= 4) {\r\n            this.targetPlayer = player;\r\n            this.facePlayer(player);\r\n            this.seenPlayer = true;\r\n            if (player === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false, //diagonals\r\n            false, //diagonalsOnly\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            false, //diagonalsOmni\r\n            this.lastPlayerPos,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n\r\n            let moveY = moves[0].pos.y;\r\n\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class SkullEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  readonly REGEN_TICKS = 5;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 5;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.tileX = 5;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.name = \"skeleton\";\r\n    this.forwardOnlyAttack = true;\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\"weapon\", \"consumable\", \"gem\", \"tool\", \"coin\"]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    this.ticksSinceFirstHit = 0;\r\n    if (this.health == 2) this.unconscious = false;\r\n    this.health -= damage;\r\n    this.maxHealth -= shieldHealth;\r\n    this.startHurting();\r\n\r\n    this.healthBar.hurt();\r\n    this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n\r\n    if (this.health == 1) {\r\n      this.unconscious = true;\r\n\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\r\n    } else {\r\n      this.healthBar.hurt();\r\n    }\r\n    if (this.health <= 0) {\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\r\n      this.kill();\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.health <= 1) {\r\n        this.unconscious = true;\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.healthBar.hurt();\r\n          this.health = 2;\r\n          this.unconscious = false;\r\n        }\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n            undefined,\r\n            undefined,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            this.facePlayer(player);\r\n\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 5;\r\n      this.tileY = 8;\r\n\r\n      if (this.health <= 1 || this.dying) {\r\n        this.tileX = 3;\r\n        this.tileY = 0;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileX = 2;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { SkullEnemy } from \"./skullEnemy\";\r\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\r\nimport { KnightEnemy } from \"./knightEnemy\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../random\";\r\nimport { EnergyWizardEnemy } from \"./energyWizard\";\r\nimport { ZombieEnemy } from \"./zombieEnemy\";\r\nimport { BishopEnemy } from \"./bishopEnemy\";\r\nimport { CrabEnemy } from \"./crabEnemy\";\r\nimport { ChargeEnemy } from \"./chargeEnemy\";\r\nimport { BigKnightEnemy } from \"./bigKnightEnemy\";\r\nimport { BigSkullEnemy } from \"./bigSkullEnemy\";\r\nimport { FrogEnemy } from \"./frogEnemy\";\r\nimport { FireWizardEnemy } from \"./fireWizard\";\r\nimport { QueenEnemy } from \"./queenEnemy\";\r\nimport { ArmoredzombieEnemy } from \"./armoredzombieEnemy\";\r\nimport { RookEnemy } from \"./rookEnemy\";\r\nimport { RoomType } from \"../../room\";\r\n\r\nexport class Spawner extends Enemy {\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  enemySpawnType: number;\r\n  enemyTable: number[];\r\n  spawnFrequency: number;\r\n  spawnOffset: number;\r\n  static tileX: number = 6;\r\n  static tileY: number = 4;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    enemyTable: number[] = [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14],\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.tileX = 6;\r\n    this.tileY = 4;\r\n    this.seenPlayer = true;\r\n    this.spawnFrequency = 4;\r\n    this.room.currentSpawnerCount++;\r\n    this.enemyTable = enemyTable.filter((t) => t !== 7);\r\n    const randSpawnType = Game.randTable(this.enemyTable, Random.rand);\r\n    this.enemySpawnType = randSpawnType;\r\n    this.spawnOffset = 0;\r\n\r\n    if (Math.random() < 0.15) {\r\n      switch (this.enemySpawnType) {\r\n        case 0:\r\n          this.getDrop([\"consumable\"]);\r\n          break;\r\n        case 1:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 2:\r\n          this.getDrop([\"consumable\"]);\r\n          break;\r\n        case 3:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 4:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 5:\r\n          this.getDrop([\"consumable\"]);\r\n          break;\r\n        case 6:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 7:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 8:\r\n          this.getDrop([\"gem\"]);\r\n          break;\r\n        case 9:\r\n          this.getDrop([\"equipment\", \"weapon\", \"tool\"]);\r\n          break;\r\n        case 10:\r\n          this.getDrop([\"weapon\"]);\r\n          break;\r\n        case 11:\r\n          this.getDrop([\"weapon\"]);\r\n          break;\r\n        case 12:\r\n          this.getDrop([\"weapon\"]);\r\n          break;\r\n        case 13:\r\n          this.getDrop([\"weapon\"]);\r\n          break;\r\n        case 14:\r\n          this.getDrop([\"weapon\"]);\r\n          break;\r\n      }\r\n    } else {\r\n      this.getDrop([\"consumable\", \"tool\"]);\r\n    }\r\n    this.name = \"reaper\";\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  setSpawnFrequency = () => {\r\n    this.spawnFrequency = Math.min(12, 4 * this.room.currentSpawnerCount);\r\n    const spawners = this.room.entities.filter((e) => e instanceof Spawner);\r\n    this.spawnOffset = (spawners.indexOf(this) + 1) * 4;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.setSpawnFrequency();\r\n    let shouldSpawn = true;\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.tileX = 6;\r\n      if ((this.ticks + this.spawnOffset) % this.spawnFrequency === 0) {\r\n        let positions = this.room\r\n          .getEmptyTiles()\r\n          .filter(\r\n            (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\r\n          );\r\n        if (this.enemySpawnType === 8) {\r\n          const offLimits = [\r\n            { x: this.x, y: this.y },\r\n            { x: this.x + 1, y: this.y + 1 },\r\n            { x: this.x - 1, y: this.y - 1 },\r\n            { x: this.x + 1, y: this.y - 1 },\r\n            { x: this.x - 1, y: this.y + 1 },\r\n          ];\r\n          positions = positions.filter(\r\n            (t) => !offLimits.some((o) => o.x === t.x && o.y === t.y),\r\n          );\r\n        }\r\n        if (positions.length > 0) {\r\n          this.tileX = 7;\r\n\r\n          const position = Game.randTable(positions, Random.rand);\r\n\r\n          let spawned;\r\n          switch (this.enemySpawnType) {\r\n            case 1:\r\n              spawned = new CrabEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 2:\r\n              spawned = new FrogEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 3:\r\n              spawned = new ZombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 4:\r\n              spawned = new SkullEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 5:\r\n              spawned = new EnergyWizardEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 6:\r\n              spawned = new ChargeEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 7:\r\n              spawned = new RookEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 8:\r\n              spawned = new BishopEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 9:\r\n              spawned = new ArmoredzombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 10:\r\n              if (this.room.type !== RoomType.BIGDUNGEON) {\r\n                spawned = new SkullEnemy(\r\n                  this.room,\r\n                  this.game,\r\n                  position.x,\r\n                  position.y,\r\n                );\r\n                break;\r\n              }\r\n              spawned = new BigSkullEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              for (let xx = 0; xx < 2; xx++) {\r\n                for (let yy = 0; yy < 2; yy++) {\r\n                  this.room.roomArray[position.x + xx][position.y + yy] =\r\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\r\n                }\r\n              }\r\n              break;\r\n            case 11:\r\n              spawned = new QueenEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 12:\r\n              spawned = new KnightEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 13:\r\n              if (this.room.type !== RoomType.BIGDUNGEON) {\r\n                spawned = new KnightEnemy(\r\n                  this.room,\r\n                  this.game,\r\n                  position.x,\r\n                  position.y,\r\n                );\r\n                break;\r\n              }\r\n\r\n              spawned = new BigKnightEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              for (let xx = 0; xx < 2; xx++) {\r\n                for (let yy = 0; yy < 2; yy++) {\r\n                  this.room.roomArray[position.x + xx][position.y + yy] =\r\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\r\n                }\r\n              }\r\n              break;\r\n            case 14:\r\n              spawned = new ZombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 15:\r\n              spawned = new FireWizardEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n          }\r\n\r\n          if (shouldSpawn) {\r\n            this.room.projectiles.push(\r\n              new EnemySpawnAnimation(\r\n                this.room,\r\n                spawned,\r\n                position.x,\r\n                position.y,\r\n              ),\r\n            );\r\n            this.room.hitwarnings.push(\r\n              new HitWarning(this.game, position.x, position.y, this.x, this.y),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      this.ticks++;\r\n    }\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.room.currentSpawnerCount--;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.dying) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { Random } from \"../../random\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { LightSource } from \"../../lightSource\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport abstract class WizardEnemy extends Enemy {\r\n  static difficulty: number = 3;\r\n  ticks: number;\r\n  state: WizardState;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  projectileColor: [number, number, number];\r\n  readonly ATTACK_RADIUS = 5;\r\n  static tileX: number = 6;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"wizard bomber\";\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\r\n        \"weapon\",\r\n        \"equipment\",\r\n        \"consumable\",\r\n        \"gem\",\r\n        \"tool\",\r\n        \"coin\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  newLightSource = (\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    brightness: number,\r\n  ) => {\r\n    this.lightSource = new LightSource(x, y, radius, color, brightness);\r\n  };\r\n\r\n  addLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources.push(lightSource);\r\n  };\r\n\r\n  removeLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources = this.room.lightSources.filter(\r\n      (ls) => ls !== lightSource,\r\n    );\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  withinAttackingRangeOfPlayer = (): boolean => {\r\n    let withinRange = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        (this.x - this.game.players[i].x) ** 2 +\r\n          (this.y - this.game.players[i].y) ** 2 <=\r\n        this.ATTACK_RADIUS ** 2\r\n      ) {\r\n        withinRange = true;\r\n      }\r\n    }\r\n    return withinRange;\r\n  };\r\n\r\n  shuffle = (a) => {\r\n    let j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Random.rand() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n        switch (this.state) {\r\n          case WizardState.attack:\r\n            const nearestPlayerInfo = this.nearestPlayer();\r\n            if (nearestPlayerInfo !== false) {\r\n              const [distance, targetPlayer] = nearestPlayerInfo;\r\n              const attackLength = 20;\r\n\r\n              const offsets = this.calculateProjectileOffsets(\r\n                targetPlayer.x,\r\n                targetPlayer.y,\r\n                10,\r\n              );\r\n\r\n              this.attemptProjectilePlacement(\r\n                [\r\n                  { x: -1, y: 0 },\r\n                  { x: -2, y: 0 },\r\n                  { x: 1, y: 0 },\r\n                  { x: 2, y: 0 },\r\n                  { x: 0, y: -1 },\r\n                  { x: 0, y: -2 },\r\n                  { x: 0, y: 1 },\r\n                  { x: 0, y: 2 },\r\n                ],\r\n                WizardFireball,\r\n                false,\r\n              );\r\n            }\r\n            this.state = WizardState.justAttacked;\r\n            break;\r\n          case WizardState.justAttacked:\r\n            this.state = WizardState.idle;\r\n            break;\r\n          case WizardState.teleport:\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let min = 100000;\r\n            let bestPos;\r\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\r\n            emptyTiles = emptyTiles.filter(\r\n              (tile) =>\r\n                !this.room.projectiles.some(\r\n                  (projectile) =>\r\n                    projectile.x === tile.x && projectile.y === tile.y,\r\n                ),\r\n            );\r\n\r\n            let optimalDist = Game.randTable(\r\n              [2, 2, 3, 3, 3, 3, 3],\r\n              Random.rand,\r\n            );\r\n            // pick a random player to target\r\n            let player_ids = [];\r\n            for (const i in this.game.players) player_ids.push(i);\r\n            let target_player_id = Game.randTable(player_ids, Random.rand);\r\n            for (let t of emptyTiles) {\r\n              let newPos = t;\r\n              let dist =\r\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\r\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\r\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\r\n                min = dist;\r\n                bestPos = newPos;\r\n              }\r\n            }\r\n            if (bestPos) {\r\n              this.tryMove(bestPos.x, bestPos.y);\r\n              this.drawX = this.x - oldX;\r\n              this.drawY = this.y - oldY;\r\n              this.frame = 0; // trigger teleport animation\r\n              this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\r\n              if (this.withinAttackingRangeOfPlayer()) {\r\n                this.state = WizardState.attack;\r\n              } else {\r\n                this.state = WizardState.idle;\r\n              }\r\n            }\r\n            break;\r\n          case WizardState.idle:\r\n            this.state = WizardState.teleport;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n\r\n      if (this.state === WizardState.attack) this.tileX = 7;\r\n      else this.tileX = 6;\r\n\r\n      if (this.hasShadow)\r\n        Game.drawMob(\r\n          0,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          Math.floor(this.frame) + 6,\r\n          2,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.5,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        this.frame += 0.2 * delta;\r\n        if (this.frame > 11) this.frame = -1;\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { HitWarning } from \"../../hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../weapon/spear\";\r\nimport { DualDagger } from \"../../weapon/dualdagger\";\r\nimport { GreenGem } from \"../../item/greengem\";\r\nimport { Random } from \"../../random\";\r\nimport { astar } from \"../../astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Pickaxe } from \"../../weapon/pickaxe\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class ZombieEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  dir: Direction;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 17;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.dir = Direction.DOWN;\r\n    this.name = \"zombie\";\r\n    this.forwardOnlyAttack = true;\r\n    this.drawMoveSpeed = 0.2;\r\n    this.jumpHeight = 0.35;\r\n\r\n    if (drop) this.drop = drop;\r\n    if (Math.random() < this.dropChance) {\r\n      this.getDrop([\"consumable\", \"gem\", \"tool\", \"coin\"]);\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // Don't walk on active spike traps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  // Attack the player if they are in the way\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (this.hasShadow)\r\n      Game.drawMob(\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x - this.drawX,\r\n        this.y - this.drawY,\r\n        1,\r\n        1,\r\n        this.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    Game.drawMob(\r\n      this.tileX + Math.floor(this.frame),\r\n      this.tileY + this.direction * 2,\r\n      1,\r\n      2,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n      1,\r\n      2,\r\n      this.softShadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Bones } from \"../tile/bones\";\r\nimport { Player } from \"../player\";\r\nimport { Floor } from \"../tile/floor\";\r\nimport { HealthBar } from \"../healthbar\";\r\nimport { Drawable } from \"../drawable\";\r\nimport { Item } from \"../item/item\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Projectile } from \"../projectile/projectile\";\r\nimport { Utils } from \"../utils\";\r\nimport { globalEventBus } from \"../eventBus\";\r\nimport type { LightSource } from \"../lightSource\";\r\nimport { EVENTS } from \"../events\";\r\nimport { DamageNumber } from \"../particle/damageNumber\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { Door } from \"../tile/door\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { Lighting } from \"../lighting\";\r\n\r\nimport { DropTable } from \"../item/dropTable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\nimport { EnemyShield } from \"../projectile/enemyShield\";\r\nimport { Sound } from \"../sound\";\r\nimport { ImageParticle } from \"../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy/enemy\";\r\nimport { Particle } from \"../particle/particle\";\r\nimport { DeathParticle } from \"../particle/deathParticle\";\r\n\r\nexport enum EntityDirection {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n}\r\n\r\nexport enum EntityType {\r\n  ENEMY,\r\n  FRIENDLY,\r\n  RESOURCE,\r\n  PROP,\r\n  CHEST,\r\n}\r\n\r\nexport interface entityData {\r\n  name: string;\r\n  location: { x: number; y: number };\r\n}\r\n\r\nexport interface bloomData {\r\n  blurAmount: number;\r\n  color: string;\r\n  xOffset: number;\r\n  yOffset: number;\r\n  size: number;\r\n  alpha: number;\r\n}\r\n\r\nexport class Entity extends Drawable {\r\n  room: Room;\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  direction: Direction;\r\n  drawX: number;\r\n  drawY: number;\r\n  dead: boolean;\r\n  game: Game;\r\n  health: number;\r\n  maxHealth: number;\r\n  protected tileX: number;\r\n  protected tileY: number;\r\n  protected hasShadow: boolean;\r\n  skipNextTurns: number;\r\n  //TODO: change these to functions? for enemies that switch states\r\n  destroyable: boolean; // can the player destroy this enemy?\r\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\r\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\r\n  interactable: boolean; // can the player interact\r\n  protected deathParticleColor: string;\r\n  healthBar: HealthBar;\r\n  drop: Item;\r\n  protected sleepingZFrame = 0;\r\n  alertTicks: number;\r\n  protected exclamationFrame: number;\r\n  lastX: number;\r\n  lastY: number;\r\n  protected hitBy: Player;\r\n  protected crushX: number;\r\n  protected crushY: number;\r\n  protected crushVertical: boolean;\r\n  protected crushed: boolean;\r\n  protected rumbling: boolean;\r\n  protected animationSpeed: number;\r\n  drawYOffset: number;\r\n  name: string;\r\n  protected orthogonalAttack: boolean;\r\n  protected diagonalAttack: boolean;\r\n  protected forwardOnlyAttack: boolean;\r\n  protected attackRange: number;\r\n  protected diagonalAttackRange: number;\r\n  lightSource: LightSource;\r\n  drawMoveSpeed: number;\r\n  unconscious: boolean;\r\n  hitWarnings: HitWarning[];\r\n  imageParticleX: number = 0;\r\n  imageParticleY: number = 26;\r\n  dropChance: number = 0.02;\r\n  isEnemy: boolean;\r\n  shielded: boolean;\r\n  //shieldHealth: number;\r\n  frame: number;\r\n  shield: EnemyShield;\r\n  shieldedBefore: boolean;\r\n  //shadeColor: string;\r\n  shadeMultiplier: number = 1;\r\n  hurting: boolean;\r\n  hurtFrame: number;\r\n  softShadeColor: string;\r\n  shadeColor: string;\r\n  dying: boolean;\r\n  dyingFrame: number;\r\n  alpha: number;\r\n  cloned: boolean;\r\n  hasBloom: boolean;\r\n  bloomColor: string = \"#FFFFFF\";\r\n  bloomAlpha: number = 1;\r\n  softBloomAlpha: number = 1;\r\n  bloomSize: number = 1;\r\n  bloomOffsetY: number = 0;\r\n  target: { x: number; y: number };\r\n  moving: boolean;\r\n\r\n  private _imageParticleTiles: { x: number; y: number };\r\n  hitSound: () => void;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super();\r\n\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.game = game;\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.skipNextTurns = 0;\r\n    this.direction = Direction.DOWN;\r\n    this.destroyable = true;\r\n    this.pushable = false;\r\n    this.chainPushable = true;\r\n    this.interactable = false;\r\n    this.healthBar = new HealthBar();\r\n    this.alertTicks = 0;\r\n    this.exclamationFrame = 0;\r\n    this.lastX = x;\r\n    this.lastY = y;\r\n    this.hitBy = null;\r\n    this.crushX = 1;\r\n    this.crushY = 1;\r\n    this.crushVertical = false;\r\n    this.crushed = false;\r\n    this.rumbling = false;\r\n    this.animationSpeed = 0.1;\r\n    this.drawYOffset = 1.175;\r\n    this.hitWarnings = [];\r\n    this.orthogonalAttack = false;\r\n    this.diagonalAttack = false;\r\n    this.forwardOnlyAttack = false;\r\n    this.attackRange = 1;\r\n    this.diagonalAttackRange = 1;\r\n    this.drawMoveSpeed = 0.3;\r\n    this.unconscious = false;\r\n    this.dropChance = 0.02;\r\n    this.isEnemy = false;\r\n    this.shielded = false;\r\n    this.shield = null;\r\n    this.frame = 0;\r\n    this.shieldedBefore = false;\r\n    this._imageParticleTiles = { x: 0, y: 0 };\r\n    this.hitSound = null;\r\n    this.shadeColor = this.room.shadeColor;\r\n    this.hurting = false;\r\n    this.hurtFrame = 0;\r\n    this.softShadeColor = \"#000000\";\r\n    this.dying = false;\r\n    this.dyingFrame = 30;\r\n    this.alpha = 1;\r\n    this.cloned = false;\r\n    this.dead = false;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"#FFFFFF\";\r\n    this.moving = false;\r\n  }\r\n\r\n  static add<\r\n    T extends new (\r\n      room: Room,\r\n      game: Game,\r\n      x: number,\r\n      y: number,\r\n      ...rest: any[]\r\n    ) => Entity,\r\n  >(this: T, room: Room, game: Game, x: number, y: number, ...rest: any[]) {\r\n    room.entities.push(new this(room, game, x, y, ...rest));\r\n  }\r\n\r\n  static cloneEntity(original: Entity): Entity {\r\n    const { room, game, x, y } = original;\r\n\r\n    // Create a new instance using the constructor\r\n    const cloned = new (original.constructor as typeof Entity)(\r\n      room,\r\n      game,\r\n      x,\r\n      y,\r\n    );\r\n\r\n    // Assign other properties\r\n    cloned.cloned = true;\r\n    cloned.dead = false;\r\n    cloned.dying = true;\r\n    cloned.drawableY = original.drawableY;\r\n    cloned.tileX = original.tileX;\r\n    cloned.tileY = original.tileY;\r\n    cloned.frame = original.frame;\r\n    cloned.isEnemy = original.isEnemy;\r\n    cloned.hasShadow = original.hasShadow;\r\n    cloned.skipNextTurns = original.skipNextTurns;\r\n    cloned.direction = original.direction;\r\n    cloned.drawX = original.drawX;\r\n    cloned.drawY = original.drawY;\r\n    cloned.alpha = original.alpha;\r\n    cloned.shadeColor = original.shadeColor;\r\n    cloned.shadeMultiplier = original.shadeMultiplier;\r\n    cloned.softShadeColor = original.softShadeColor;\r\n    cloned.hasBloom = original.hasBloom;\r\n    cloned.bloomColor = original.bloomColor;\r\n    cloned.bloomAlpha = 1;\r\n    cloned.softBloomAlpha = 1;\r\n    cloned.removeLightSource(cloned.lightSource);\r\n    cloned.room.updateLighting();\r\n\r\n    // Add the cloned entity to deadEntities\r\n    room.deadEntities.push(cloned);\r\n\r\n    return cloned;\r\n  }\r\n\r\n  /**\r\n   * Clones the current entity without adding it to deadEntities.\r\n   */\r\n  clone(): Entity {\r\n    const cloned = Entity.cloneEntity(this);\r\n    cloned.dead = false; // Explicitly set as not dead\r\n    cloned.dying = true; // Ensure the clone is in a dying state\r\n\r\n    return cloned;\r\n  }\r\n\r\n  get imageParticleTiles() {\r\n    return this._imageParticleTiles;\r\n  }\r\n\r\n  applyShield = (shieldHealth: number = 1) => {\r\n    if (!this.shieldedBefore) {\r\n      this.shield = new EnemyShield(this, this.x, this.y, shieldHealth);\r\n      this.shielded = true;\r\n      this.shieldedBefore = true;\r\n      this.health += shieldHealth;\r\n      this.maxHealth += shieldHealth;\r\n      this.shadeColor = \"purple\";\r\n      this.shadeMultiplier = 0.5;\r\n      this.hasBloom = true;\r\n      this.bloomColor = \"#2E0854\";\r\n      this.bloomAlpha = 1;\r\n    }\r\n  };\r\n\r\n  removeShield = () => {\r\n    if (this.shield) {\r\n      this.health -= this.shield.health;\r\n      this.maxHealth -= this.shield.health;\r\n      this.shield.remove();\r\n      this.shadeColor = this.room.shadeColor;\r\n      this.shadeMultiplier = 1;\r\n      this.hasBloom = false;\r\n      this.bloomAlpha = 0;\r\n    }\r\n  };\r\n\r\n  getDrop = (useCategory: string[] = [], force: boolean = false) => {\r\n    DropTable.getDrop(this, false, useCategory, force);\r\n    //make monsters drop degraded weapons\r\n    if (this.drop instanceof Weapon && this.type === EntityType.ENEMY) {\r\n      this.drop.durability = Math.floor(\r\n        Math.random() * 0.31 * this.drop.durabilityMax,\r\n      );\r\n      this.drop.durabilityMax;\r\n    }\r\n  };\r\n\r\n  addLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources.push(lightSource);\r\n  };\r\n\r\n  removeLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources = this.room.lightSources.filter(\r\n      (ls) => ls !== lightSource,\r\n    );\r\n    this.lightSource = null;\r\n    this.room.updateLighting();\r\n  };\r\n\r\n  behavior = () => {};\r\n\r\n  hit = (): number => {\r\n    return 0;\r\n  };\r\n\r\n  hurtCallback = () => {};\r\n\r\n  get type() {\r\n    return EntityType.ENEMY;\r\n  }\r\n\r\n  pointIn = (x: number, y: number): boolean => {\r\n    return (\r\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\r\n    );\r\n  };\r\n\r\n  createDamageNumber = (\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    let color = \"red\";\r\n    let outlineColor = GameConstants.OUTLINE;\r\n    if (type === \"poison\") color = \"green\";\r\n    if (type === \"blood\") {\r\n      color = \"#8B0000\";\r\n      outlineColor = \"red\";\r\n    }\r\n    if (type === \"heal\") {\r\n      color = \"#B8A4FF\";\r\n      outlineColor = GameConstants.OUTLINE;\r\n    }\r\n    this.room.particles.push(\r\n      new DamageNumber(this.room, this.x, this.y, damage, color, outlineColor),\r\n    );\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    //putting this here bc i'm lazy\r\n    this.updateHurtFrame(delta);\r\n    this.animateDying(delta);\r\n    this.updateShadeColor(delta);\r\n    //this.updateBloom(delta);\r\n\r\n    if (!this.doneMoving()) {\r\n      this.drawX *= 0.9 ** delta;\r\n      this.drawY *= 0.9 ** delta;\r\n\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n    }\r\n  };\r\n\r\n  setDrawXY = (x: number, y: number) => {\r\n    this.drawX += this.x - x;\r\n    this.drawY += this.y - y;\r\n  };\r\n\r\n  readonly getPlayer = () => {\r\n    const maxDistance = 138291380921; // pulled this straight outta my ass\r\n    let closestDistance = maxDistance;\r\n    let closestPlayer = null;\r\n    for (const i in this.game.players) {\r\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\r\n        let distance = this.playerDistance(this.game.players[i]);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestPlayer = this.game.players[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closestDistance === maxDistance) return false;\r\n    else return closestPlayer;\r\n  };\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    /*\r\n    this.shadeColor = \"red\";\r\n    setTimeout(() => {\r\n      this.shadeColor = this.room.shadeColor;\r\n    }, 100);\r\n    */\r\n\r\n    this.health -= damage;\r\n    this.maxHealth -= shieldHealth;\r\n\r\n    this.startHurting();\r\n    this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n\r\n    this.healthBar.hurt();\r\n\r\n    if (type === \"none\" || this.health <= 0 || !this.isEnemy) {\r\n      this.createHitParticles();\r\n    }\r\n\r\n    if (this.health <= 0) {\r\n      this.kill();\r\n      this.bloomAlpha = 0;\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  startHurting = () => {\r\n    this.hurting = true;\r\n    this.hurtFrame += 15;\r\n    this.shadeColor = \"#FF0000\";\r\n    this.shadeMultiplier = 1.5;\r\n  };\r\n\r\n  stopHurting = () => {\r\n    this.hurting = false;\r\n    this.hurtFrame = 0;\r\n    this.shadeColor = \"#000000\";\r\n  };\r\n\r\n  interact = (player: Player) => {};\r\n\r\n  handleEnemyCase = (playerHitBy?: Player) => {};\r\n\r\n  playHitSound = () => {\r\n    if (this.hitSound) Sound.delayPlay(this.hitSound, 250);\r\n  };\r\n\r\n  createHitParticles = () => {\r\n    ImageParticle.spawnCluster(\r\n      this.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      this.imageParticleX,\r\n      this.imageParticleY,\r\n    );\r\n  };\r\n\r\n  protected dropLoot = () => {\r\n    let coordX: number;\r\n    let coordY: number;\r\n    if (this.crushed) {\r\n      coordX = this.lastX;\r\n      coordY = this.lastY;\r\n    } else {\r\n      coordX = this.x;\r\n      coordY = this.y;\r\n    }\r\n    if (this.drop) {\r\n      this.drop.level = this.room;\r\n      if (!this.room.roomArray[coordX][coordY].isSolid()) {\r\n        this.drop.x = coordX;\r\n        this.drop.y = coordY;\r\n      }\r\n      this.room.items.push(this.drop);\r\n      this.drop.onDrop();\r\n    }\r\n  };\r\n\r\n  kill = () => {\r\n    if (this.cloned) return;\r\n    this.emitEnemyKilled();\r\n    this.removeLightSource(this.lightSource);\r\n\r\n    const deadEntity = this.clone();\r\n\r\n    this.room.deadEntities.push(deadEntity);\r\n    this.dead = true;\r\n    //this.room.entities = this.room.entities.filter((e) => e !== this);\r\n    this.dropLoot();\r\n    this.uniqueKillBehavior();\r\n  };\r\n\r\n  uniqueKillBehavior = () => {};\r\n\r\n  killNoBones = () => {\r\n    this.dead = true;\r\n    this.dropLoot();\r\n  };\r\n\r\n  updateHurtFrame = (delta: number) => {\r\n    if (this.hurting) {\r\n      this.hurtFrame -= delta;\r\n      if (this.hurtFrame < 0) {\r\n        this.stopHurting();\r\n      }\r\n    }\r\n  };\r\n\r\n  shadeAmount = () => {\r\n    let softVis = this.room.softVis[this.x][this.y] * 1;\r\n\r\n    if (this.shadeMultiplier > 1)\r\n      return Math.min(1, softVis * this.shadeMultiplier);\r\n    return this.room.softVis[this.x][this.y];\r\n  };\r\n\r\n  updateShadeColor = (delta: number) => {\r\n    if (this.shadeMultiplier > 1) this.shadeMultiplier -= 0.01 * delta;\r\n    if (this.shadeMultiplier < 1) this.shadeMultiplier = 1;\r\n    let updated = false;\r\n\r\n    // Convert hex color to RGB\r\n    const hexToRgb = (hex: string): [number, number, number] => {\r\n      const bigint = parseInt(hex.slice(1), 16);\r\n      const r = (bigint >> 16) & 255;\r\n      const g = (bigint >> 8) & 255;\r\n      const b = bigint & 255;\r\n      return [r, g, b];\r\n    };\r\n    // Convert RGB to hex color\r\n    const rgbToHex = (rgb: [number, number, number]): string => {\r\n      const [r, g, b] = rgb;\r\n      return (\r\n        \"#\" +\r\n        ((1 << 24) + (r << 16) + (g << 8) + b)\r\n          .toString(16)\r\n          .slice(1)\r\n          .toUpperCase()\r\n      );\r\n    };\r\n\r\n    const [softR, softG, softB] = hexToRgb(this.softShadeColor);\r\n    const [targetR, targetG, targetB] = hexToRgb(this.shadeColor);\r\n\r\n    // Calculate differences\r\n    let diffR = softR - targetR;\r\n    let diffG = softG - targetG;\r\n    let diffB = softB - targetB;\r\n\r\n    let flagR = false;\r\n    let flagG = false;\r\n    let flagB = false;\r\n    if (Math.abs(diffR) > 1) flagR = true;\r\n    if (Math.abs(diffG) > 1) flagG = true;\r\n    if (Math.abs(diffB) > 1) flagB = true;\r\n\r\n    if (!flagR && !flagG && !flagB) {\r\n      return this.softShadeColor;\r\n    }\r\n\r\n    let softShadeRgb = [softR, softG, softB];\r\n\r\n    // Apply smoothing similar to fadeLighting\r\n    if (flagR) {\r\n      diffR *= 0.1 * delta;\r\n      softShadeRgb[0] = this.room.clamp(Math.round(softR - diffR), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (flagG) {\r\n      diffG *= 0.1 * delta;\r\n      softShadeRgb[1] = this.room.clamp(Math.round(softG - diffG), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (flagB) {\r\n      diffB *= 0.1 * delta;\r\n      softShadeRgb[2] = this.room.clamp(Math.round(softB - diffB), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (updated) {\r\n      this.softShadeColor = rgbToHex(softShadeRgb as [number, number, number]);\r\n    }\r\n\r\n    return this.softShadeColor;\r\n  };\r\n\r\n  emitEnemyKilled = () => {\r\n    globalEventBus.emit(EVENTS.ENEMY_KILLED, {\r\n      enemyId: this.name,\r\n    });\r\n  };\r\n\r\n  doneMoving = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\r\n  };\r\n\r\n  nearestPlayer = (): [number, Player] | false => {\r\n    const maxDistance = 138291380921; // pulled this straight outta my ass\r\n    let closestDistance = maxDistance;\r\n    let closestPlayer = null;\r\n    for (const i in this.game.players) {\r\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\r\n        let distance = this.playerDistance(this.game.players[i]);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestPlayer = this.game.players[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closestDistance === maxDistance) return false;\r\n    else return [closestDistance, closestPlayer];\r\n  };\r\n\r\n  playerDistance = (player: Player): number => {\r\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\r\n  };\r\n\r\n  facePlayer = (player: Player) => {\r\n    let dx = player.x - this.x;\r\n    let dy = player.y - this.y;\r\n    if (Math.abs(dx) === Math.abs(dy)) {\r\n      // just moved, already facing player\r\n    } else if (Math.abs(dx) > Math.abs(dy)) {\r\n      if (dx > 0) this.direction = Direction.RIGHT;\r\n      if (dx < 0) this.direction = Direction.LEFT;\r\n    } else {\r\n      if (dy > 0) this.direction = Direction.DOWN;\r\n      if (dy < 0) this.direction = Direction.UP;\r\n    }\r\n  };\r\n\r\n  animateDying = (delta: number) => {\r\n    if (this.cloned) {\r\n      //this.frame = 0;\r\n      this.dyingFrame -= delta / 3;\r\n      this.alpha = Math.max(0, this.alpha - delta / 50);\r\n\r\n      if (this.dyingFrame <= 0) {\r\n        this.dead = true;\r\n        this.dying = false;\r\n        this.uniqueKillBehavior();\r\n        this.room.clearDeadStuff();\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (!this.dead) {\r\n      Game.ctx.globalAlpha = this.alpha;\r\n      if (this.shielded)\r\n        if (this.hasShadow) {\r\n          Game.drawFX(\r\n            0,\r\n            0,\r\n            1,\r\n            1,\r\n            this.x - this.drawX,\r\n            this.y - this.drawY,\r\n            1,\r\n            1,\r\n            this.shadeColor,\r\n            this.shadeAmount(),\r\n          );\r\n        }\r\n      Game.drawMob(\r\n        0,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x - this.drawX,\r\n        this.y - this.drawY,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    /*if (this.crushed) {\r\n      this.crushAnim(delta);\r\n    }*/\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n\r\n  tick = () => {\r\n    this.behavior();\r\n    if (this.shielded) this.shield.updateLightSourcePos();\r\n  };\r\n\r\n  emitEntityData = (): void => {\r\n    globalEventBus.emit(\"EntityData\", {\r\n      name: this.name,\r\n      location: { x: this.x, y: this.y },\r\n    });\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    //this.updateDrawXY(delta);\r\n\r\n    this.drawableY = this.y - this.drawY;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\r\n    this.sleepingZFrame += delta;\r\n\r\n    let numZs = 2;\r\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\r\n    t -= Math.floor(t);\r\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\r\n    for (let off = numZs - 1; off >= 0; off--) {\r\n      let yoff = (t + off) * 7;\r\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\r\n\r\n      let xoff = 0;\r\n      if (off === 0) xoff = 1;\r\n      if (t >= 0.33 && t < 0.66) xoff = off;\r\n      if (t >= 0.33 && t < 0.66) xoff = off;\r\n\r\n      let width = Game.measureText(\"Z\").width;\r\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\r\n      Game.fillTextOutline(\r\n        \"Z\",\r\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\r\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\r\n        GameConstants.OUTLINE,\r\n        \"white\",\r\n      );\r\n      Game.ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\r\n    this.exclamationFrame += delta;\r\n\r\n    let yoff: number | false = 0;\r\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\r\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\r\n    else yoff = yoffs[this.exclamationFrame];\r\n\r\n    let width = Game.measureText(\"!\").width;\r\n    Game.ctx.globalAlpha = 1;\r\n    if (yoff !== false) {\r\n      Game.fillTextOutline(\r\n        \"!\",\r\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\r\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\r\n        GameConstants.OUTLINE,\r\n        GameConstants.WARNING_RED,\r\n      );\r\n    }\r\n  };\r\n\r\n  crush = () => {\r\n    this.crushed = true;\r\n    let player: Player;\r\n    for (let i in this.game.players) {\r\n      player = this.game.players[i];\r\n    }\r\n    if (this.x == player.x) {\r\n      this.crushVertical = true;\r\n    }\r\n    this.kill();\r\n  };\r\n\r\n  crushAnim = (delta: number) => {\r\n    if (this.crushVertical && this.crushY >= 0) {\r\n      this.crushY *= 0.95;\r\n    } else if (this.crushX >= 0) {\r\n      this.crushX *= 0.95;\r\n    }\r\n  };\r\n  //set rumbling in the tick function for the enemies\r\n  //create variables for the rumbling x and y offsets\r\n  //return the rumbling x and y offsets\r\n  //add the rumbling x and y offsets to the enemy's x and y in the draw function\r\n  rumble = (rumbling: boolean, frame: number, direction?: Direction) => {\r\n    let rumbleOffset = { x: 0, y: 0 };\r\n\r\n    if (rumbling) {\r\n      const isOddFrame = Math.floor(frame) % 2 === 1;\r\n      const offset = isOddFrame ? 0.0325 : 0;\r\n\r\n      if (direction === Direction.LEFT || direction === Direction.RIGHT) {\r\n        rumbleOffset.y = offset;\r\n      } else if (\r\n        direction === Direction.UP ||\r\n        direction === Direction.DOWN ||\r\n        !direction\r\n      ) {\r\n        rumbleOffset.x = offset;\r\n      }\r\n      this.animationSpeed = 0.2;\r\n    }\r\n    return rumbleOffset;\r\n  };\r\n\r\n  attemptProjectilePlacement = (\r\n    offsets: { x: number; y: number }[],\r\n    projectileClass: new (parent: Entity, x: number, y: number) => Projectile,\r\n    collide: boolean = false,\r\n    clearPath: boolean = true,\r\n    targetingPlayer: boolean = false,\r\n  ) => {\r\n    for (const offset of offsets) {\r\n      const targetX = this.x + offset.x;\r\n      const targetY = this.y + offset.y;\r\n\r\n      if (\r\n        !this.isValidProjectilePosition(targetX, targetY, collide, clearPath)\r\n      ) {\r\n        if (targetingPlayer) break;\r\n        continue;\r\n      }\r\n\r\n      this.placeProjectile(projectileClass, targetX, targetY);\r\n\r\n      if (targetingPlayer) break;\r\n    }\r\n  };\r\n\r\n  private isValidProjectilePosition = (\r\n    x: number,\r\n    y: number,\r\n    collide: boolean,\r\n    clearPath: boolean,\r\n  ): boolean => {\r\n    if (!this.isWithinRoomBounds(x, y)) return false;\r\n    if (clearPath && !this.isPathClear(this.x, this.y, x, y)) return false;\r\n    if (collide && this.isEntityColliding(x, y)) return false;\r\n\r\n    const targetTile = this.room.roomArray[x][y];\r\n    return targetTile && !targetTile.isSolid() && !targetTile.isDoor;\r\n  };\r\n\r\n  private isEntityColliding = (x: number, y: number): boolean => {\r\n    return this.room.entities.some(\r\n      (entity) => entity.x === x && entity.y === y,\r\n    );\r\n  };\r\n\r\n  private placeProjectile = (\r\n    projectileClass: new (\r\n      parent: Entity,\r\n      x: number,\r\n      y: number,\r\n      color?: [number, number, number],\r\n    ) => Projectile,\r\n    x: number,\r\n    y: number,\r\n    color?: [number, number, number],\r\n  ) => {\r\n    this.room.projectiles.push(new projectileClass(this, x, y, color));\r\n  };\r\n\r\n  isPathClear = (\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ): boolean => {\r\n    const dx = Math.sign(endX - startX);\r\n    const dy = Math.sign(endY - startY);\r\n    let x = startX;\r\n    let y = startY;\r\n\r\n    while (x !== endX || y !== endY) {\r\n      x += dx;\r\n      y += dy;\r\n      if (\r\n        !this.isWithinRoomBounds(x, y) ||\r\n        this.room.roomArray[x][y]?.isSolid()\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  calculateProjectileOffsets(\r\n    targetX: number,\r\n    targetY: number,\r\n    attackLength: number,\r\n  ): { x: number; y: number }[] {\r\n    const dx = targetX - this.x;\r\n    const dy = targetY - this.y;\r\n    let offsets = [];\r\n\r\n    // Normalize the direction\r\n    const stepX = dx !== 0 ? Math.sign(dx) : 0;\r\n    const stepY = dy !== 0 ? Math.sign(dy) : 0;\r\n\r\n    // Generate offsets for the full attackLength\r\n    for (let i = 1; i <= attackLength; i++) {\r\n      offsets.push({ x: i * stepX, y: i * stepY });\r\n    }\r\n\r\n    return offsets;\r\n  }\r\n\r\n  getLuminance = (): number => {\r\n    if (this.room.roomArray[this.x][this.y]) {\r\n      return this.room.vis[this.x][this.y];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  getAverageLuminance = (): number => {\r\n    let total = 0;\r\n    let count = 0;\r\n    for (let x = this.x - 2; x <= this.x + 2; x++) {\r\n      if (this.room.roomArray[x] && this.room.roomArray[x][this.y]) {\r\n        for (let y = this.y - 2; y <= this.y + 2; y++) {\r\n          if (this.room.vis[x][y]) {\r\n            total += this.room.vis[x][y];\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return total / count;\r\n  };\r\n\r\n  getOpenTile = (): { x: number; y: number } => {\r\n    let x, y;\r\n    do {\r\n      x = Math.floor(Math.random() * 3 + this.x - 1);\r\n      y = Math.floor(Math.random() * 3 + this.y - 1);\r\n    } while (\r\n      (x === this.x && y === this.y) ||\r\n      this.room.roomArray[x][y].isSolid() ||\r\n      this.room.roomArray[x][y] instanceof DownLadder ||\r\n      this.room.roomArray[x][y] instanceof Door ||\r\n      this.room.roomArray[x][y] instanceof Wall ||\r\n      this.room.entities.some((e) => e.x === x && e.y === y)\r\n    );\r\n\r\n    if (!x || !y) return { x: this.x, y: this.y };\r\n    return { x, y };\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.45;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [0, 1],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = this.x + x;\r\n      const targetY = this.y + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          this.x,\r\n          this.y,\r\n          true,\r\n          false,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  isWithinRoomBounds = (x: number, y: number): boolean => {\r\n    const xInBounds =\r\n      x >= this.room.roomX && x < this.room.roomX + this.room.width;\r\n    const yInBounds =\r\n      y >= this.room.roomY && y < this.room.roomY + this.room.height;\r\n    const tileExists =\r\n      this.room.roomArray[x] && this.room.roomArray[x][y] !== undefined;\r\n\r\n    return xInBounds && yInBounds && tileExists;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { WeaponFragments } from \"../../item/weaponFragments\";\r\nimport { Coin } from \"../../item/coin\";\r\n\r\nexport class Barrel extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 1;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.pushable = true;\r\n    this.name = \"barrel\";\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 25;\r\n    if (Math.random() < 0.1) {\r\n      this.drop = new WeaponFragments(this.room, this.x, this.y);\r\n    } else {\r\n      this.drop = new Coin(this.room, this.x, this.y);\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class Block extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 10;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.chainPushable = true;\r\n    this.pushable = true;\r\n    this.name = \"block\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  kill = () => {\r\n    Sound.breakRock();\r\n    this.dead = true;\r\n\r\n    ImageParticle.spawnCluster(\r\n      this.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      this.imageParticleX,\r\n      this.imageParticleY,\r\n    );\r\n  };\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Candle } from \"../../item/candle\";\r\nimport { Random } from \"../../random\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Sound } from \"../../sound\";\r\nimport { LightSource } from \"../../lightSource\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { WizardEnemy } from \"../enemy/wizardEnemy\";\r\nimport { Lighting } from \"../../lighting\";\r\nimport { PlayerFireball } from \"../../projectile/playerFireball\";\r\nimport { Player } from \"../../player\";\r\nimport { Explosion } from \"../../projectile/explosion\";\r\nimport { Utils } from \"../../utils\";\r\n\r\nexport class Bomb extends Entity {\r\n  fuseLength: number = 4;\r\n  lit: boolean = false;\r\n  playerHitBy: Player | null = null;\r\n  fuseSound: HTMLAudioElement;\r\n  soundPaused: boolean = false;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 15;\r\n    this.tileY = 4;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"bomb\";\r\n    this.frame = 0;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"yellow\";\r\n    this.bloomAlpha = 0;\r\n    this.bloomSize = 1;\r\n    this.bloomOffsetY = -1;\r\n    this.health = 1;\r\n    this.hitSound = Sound.potSmash;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 29;\r\n    this.createLightSource();\r\n    this.playerHitBy = null;\r\n    this.fuseSound = Sound.fuseLoopSound;\r\n    this.soundPaused = false;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n\r\n    //this.room.addEntity(new Explosion(this.room, this.game, this.x, this.y));\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.lit) {\r\n      this.fuseLength--;\r\n      //if (this.fuseLength < 3 && this.fuseLength > 0)\r\n      if (this.fuseLength <= 0) {\r\n        // Sound.playFuse();\r\n        this.fuseLength = 0;\r\n        Sound.stopSound(this.fuseSound);\r\n        this.explode();\r\n        Sound.playBomb();\r\n      }\r\n    }\r\n  };\r\n\r\n  createLightSource = () => {\r\n    if (!this.lit) return;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      3,\r\n      [200, 200, 30],\r\n      0.75,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.bloomAlpha = 1;\r\n    this.hasBloom = true;\r\n  };\r\n\r\n  hurt = (playerHitBy: Player, damage: number) => {\r\n    if (!this.lit) {\r\n      this.lit = true;\r\n      this.createLightSource();\r\n      this.playerHitBy = playerHitBy;\r\n      Sound.playFuse();\r\n    }\r\n  };\r\n\r\n  explode = () => {\r\n    Sound.stopSound(this.fuseSound);\r\n    for (let x = this.x - 2; x < this.x + 3; x++) {\r\n      for (let y = this.y - 2; y < this.y + 3; y++) {\r\n        if (\r\n          this.room.pointExists(x, y) &&\r\n          !this.room.roomArray[x][y].isSolid() &&\r\n          Utils.distance(this.x, this.y, x, y) < 2.5\r\n        ) {\r\n          const explosion = new Explosion(this, x, y, this.playerHitBy);\r\n          this.room.projectiles.push(explosion);\r\n        }\r\n      }\r\n    }\r\n    this.health = 0;\r\n    Lighting.momentaryLight(\r\n      this.room,\r\n      this.x,\r\n      this.y,\r\n      7,\r\n      [200, 200, 50],\r\n      250,\r\n      50,\r\n      0,\r\n    );\r\n\r\n    console.log(\"screen shake\");\r\n    GenericParticle.spawnCluster(\r\n      this.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      \"white\",\r\n    );\r\n    this.kill();\r\n\r\n    setTimeout(() => {\r\n      this.game.shakeScreen(\r\n        (Math.random() - 0.5) * 5,\r\n        (Math.random() - 0.5) * 0,\r\n        false,\r\n      );\r\n    }, 100);\r\n\r\n    this.game.shakeScreen(0, 20, false);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    this.frame += delta;\r\n    if (this.health === 0) {\r\n      this.frame = 0;\r\n    }\r\n    if (this.frame > 20) this.frame = 0;\r\n    this.bloomAlpha = (this.frame / 10) % 2 === 0 ? 1 : 0.5;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.lit) {\r\n        Game.drawObj(\r\n          this.tileX +\r\n            6 -\r\n            Math.min(3, this.fuseLength) * 2 +\r\n            (Math.floor(this.frame / 10) % 2),\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawYOffset - this.drawY,\r\n          1,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      } else {\r\n        Game.drawObj(\r\n          this.tileX - 1,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawYOffset - this.drawY,\r\n          1,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Entity } from \"../entity\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Random } from \"../../random\";\r\nimport { Player } from \"../../player\";\r\nimport { ChestLayer } from \"./chestLayer\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class Chest extends Entity {\r\n  frame: number;\r\n  opening: boolean;\r\n  dropX: number;\r\n  dropY: number;\r\n  layer: ChestLayer;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 4;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"chest\";\r\n    this.frame = 0;\r\n    this.opening = false;\r\n    this.dropX = 0;\r\n    this.dropY = 0;\r\n    this.drop = null;\r\n    this.destroyable = false;\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n    this.interactable = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 26;\r\n    /*\r\n    this.layer = new ChestLayer(\r\n      this.room,\r\n      this.game,\r\n      this.x,\r\n      this.y,\r\n    );\r\n    this.room.entities.push(this.layer);\r\n    */\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.CHEST;\r\n  }\r\n\r\n  interact = (playerHitBy: Player) => {\r\n    //this.healthBar.hurt();\r\n    this.health -= 1;\r\n    if (this.health === 2 && !this.opening) this.open();\r\n\r\n    if (this.health === 1) {\r\n      this.drop.onPickup(playerHitBy);\r\n      this.destroyable = true;\r\n    }\r\n    if (this.health <= 0) {\r\n      this.kill();\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  private open = () => {\r\n    this.tileX = 0;\r\n    this.tileY = 2;\r\n\r\n    this.opening = true;\r\n    Sound.chest();\r\n\r\n    if (this.drop === null) this.getDrop([\"consumable\", \"gem\", \"coin\"]);\r\n    if (this.drop.name === \"coin\") {\r\n      const stack = Math.ceil(Math.random() * 5);\r\n      this.drop.stackCount = stack;\r\n      this.drop.stack = stack;\r\n    }\r\n    this.dropLoot();\r\n    this.drop.animateFromChest();\r\n  };\r\n\r\n  rollDrop = (): number => {\r\n    return Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 2, 2], Random.rand);\r\n  };\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (this.opening) {\r\n      if (this.tileX <= 6) {\r\n        this.tileX += 0.15 * delta;\r\n      } else {\r\n        this.opening = false;\r\n      }\r\n    }\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        Math.floor(this.tileX),\r\n        Math.floor(this.tileY),\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y - 1;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { WeaponFragments } from \"../../item/weaponFragments\";\r\nimport { Coin } from \"../../item/coin\";\r\n\r\nexport class Crate extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.pushable = true;\r\n    this.name = \"crate\";\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 26;\r\n    if (Math.random() < 0.1) {\r\n      this.drop = new WeaponFragments(this.room, this.x, this.y, 10);\r\n    } else {\r\n      this.drop = new Coin(this.room, this.x, this.y);\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Mushrooms extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 9;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"mushrooms\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 30;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Candle } from \"../../item/candle\";\r\nimport { Random } from \"../../random\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class Pot extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 11;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"pot\";\r\n\r\n    this.hitSound = Sound.potSmash;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 29;\r\n\r\n    let dropProb = Random.rand();\r\n    if (dropProb < 0.025) this.drop = new Heart(this.room, this.x, this.y);\r\n    else this.drop = new Coin(this.room, this.x, this.y);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Random } from \"../../random\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class PottedPlant extends Entity {\r\n  drop: Item;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.tileX = 3;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"plant\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 28;\r\n    if (drop) this.drop = drop;\r\n    else {\r\n      let dropProb = Random.rand();\r\n      if (dropProb < 0.025) this.drop = new Heart(this.room, this.x, this.y);\r\n      else this.drop = new Coin(this.room, this.x, this.y);\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.dead = true;\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 29);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.health <= 1 || this.dying) this.tileX = 2;\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n\r\n  dropLoot = () => {\r\n    this.drop.level = this.room;\r\n    this.drop.x = this.x;\r\n    this.drop.y = this.y;\r\n    this.room.items.push(this.drop);\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { LightSource } from \"../../lightSource\";\r\nimport { Spellbook } from \"../../weapon/spellbook\";\r\nimport { Random } from \"../../random\";\r\nimport { Candle } from \"../../item/candle\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Pumpkin extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 15;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"pumpkin\";\r\n    this.drop = new Candle(this.room, this.x, this.y);\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n    this.bloomColor = \"#FFA500\";\r\n    this.hasBloom = true;\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      5,\r\n      [200, 30, 1],\r\n      3,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.removeLightSource(this.lightSource);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { SkullEnemy } from \"../enemy/skullEnemy\";\r\nimport { Random } from \"../../random\";\r\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\r\nimport { Player } from \"../../player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spellbook } from \"../../weapon/spellbook\";\r\nimport { Sound } from \"../../sound\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { LightSource } from \"../../lightSource\";\r\n\r\nexport class TombStone extends Entity {\r\n  skinType: number;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    skinType: number,\r\n    drop?: Item,\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.skinType = skinType;\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.tileX = 11 + this.skinType;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.pushable = false;\r\n    this.destroyable = true;\r\n    this.skinType = skinType;\r\n    this.chainPushable = false;\r\n    this.name = \"tombstone\";\r\n    let dropProb = Random.rand();\r\n    if (dropProb < 0.05) this.drop = new Spellbook(this.room, this.x, this.y);\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#05FF05\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      7,\r\n      [5, 150, 5],\r\n      1,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  kill = () => {\r\n    this.removeLightSource(this.lightSource);\r\n    this.dead = true;\r\n    this.dropLoot();\r\n  };\r\n\r\n  hurt = (playerHitBy: Player, damage: number) => {\r\n    this.healthBar.hurt();\r\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 25);\r\n\r\n    Sound.delayPlay(Sound.hurt, 0);\r\n\r\n    this.health -= 1;\r\n    if (this.health === 1) {\r\n      const positions = this.room\r\n        .getEmptyTiles()\r\n        .filter(\r\n          (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\r\n        );\r\n      if (positions.length > 0) {\r\n        for (let position of positions) {\r\n          for (const i in this.game.players) {\r\n            const playerX = this.game.players[i].x;\r\n            const playerY = this.game.players[i].y;\r\n            if (\r\n              (playerX !== position.x && playerY === position.y) ||\r\n              (playerX === position.x && playerY !== position.y)\r\n            ) {\r\n              this.room.entities.push(\r\n                new SkullEnemy(this.room, this.game, position.x, position.y),\r\n              );\r\n            }\r\n          }\r\n        }\r\n        Sound.delayPlay(Sound.skeleSpawn, 50);\r\n      }\r\n      this.tileX += 2;\r\n      //draw half broken tombstone based on skintype after it takes one damage\r\n    }\r\n    if (this.health <= 0) {\r\n      this.kill();\r\n      Sound.delayPlay(Sound.breakRock, 50);\r\n    } else {\r\n      this.hurtCallback();\r\n      //Sound.delayPlay(Sound.hit, 0);\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.updateDrawXY(delta);\r\n  };\r\n}\r\n","import { Player } from \"../../player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room\";\r\nimport { Entity } from \"../entity\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Coal } from \"../../item/coal\";\r\nimport { GreenGem } from \"../../item/greengem\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { Shotgun } from \"../../weapon/shotgun\";\r\nimport { Dagger } from \"../../weapon/dagger\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { Spear } from \"../../weapon/spear\";\r\nimport { Gold } from \"../../item/gold\";\r\nimport { BlueGem } from \"../../item/bluegem\";\r\nimport { DualDagger } from \"../../weapon/dualdagger\";\r\nimport { Lantern } from \"../../item/lantern\";\r\nimport { RedGem } from \"../../item/redgem\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Random } from \"../../random\";\r\nimport { Warhammer } from \"../../weapon/warhammer\";\r\nimport { Torch } from \"../../item/torch\";\r\nimport { Spellbook } from \"../../weapon/spellbook\";\r\n\r\nlet OPEN_TIME = 150;\r\nlet FILL_COLOR = \"#5a595b\";\r\nlet OUTLINE_COLOR = \"#292c36\";\r\nlet FULL_OUTLINE = \"white\";\r\n\r\nexport class VendingMachine extends Entity {\r\n  playerOpened: Player;\r\n  open = false;\r\n  openTime = 0;\r\n  costItems: Array<Item>;\r\n  item: Item;\r\n  isInf = false;\r\n  quantity = 1;\r\n  buyAnimAmount = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, item: Item) {\r\n    super(room, game, x, y);\r\n\r\n    this.destroyable = false;\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n    this.interactable = true;\r\n\r\n    this.costItems = [];\r\n\r\n    this.item = item;\r\n    this.name = \"vending machine\";\r\n    if (this.item instanceof Shotgun) {\r\n      let g = new BlueGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([7], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof Heart) {\r\n      let c = new Coin(room, 0, 0);\r\n      c.stackCount = 10;\r\n      this.costItems = [c];\r\n      this.quantity = 3;\r\n    } else if (this.item instanceof Spear) {\r\n      let g = new GreenGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([5], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof Armor) {\r\n      let g = new GreenGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([5], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof DualDagger) {\r\n      let g = new BlueGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([5], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof Lantern) {\r\n      let c = new Coin(room, 0, 0);\r\n      c.stackCount = Game.randTable([50], Random.rand);\r\n      this.costItems = [c];\r\n    } else if (this.item instanceof Warhammer) {\r\n      let g = new RedGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([5], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof Spellbook) {\r\n      let g = new RedGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([7], Random.rand);\r\n      this.costItems = [g];\r\n    } else if (this.item instanceof Torch) {\r\n      let g = new RedGem(room, 0, 0);\r\n      g.stackCount = Game.randTable([1], Random.rand);\r\n      this.costItems = [g];\r\n    }\r\n  }\r\n\r\n  isPointInVendingMachineBounds = (x: number, y: number): boolean => {\r\n    // First check if this is the currently open vending machine\r\n    if (!this.open || this !== this.playerOpened?.openVendingMachine)\r\n      return false;\r\n\r\n    const OPEN_TIME = 200; // Match the constant from drawTopLayer\r\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const ob = 1; // outer border\r\n\r\n    // Calculate total width and height of the UI\r\n    const width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\r\n    const height = s + 2 * b + g - g;\r\n\r\n    // Calculate center position (matches drawTopLayer positioning)\r\n    const cx = (this.x + 0.5) * GameConstants.TILESIZE;\r\n    const cy = (this.y - 1.5) * GameConstants.TILESIZE;\r\n\r\n    // Calculate bounds\r\n    const left = Math.round(cx - 0.5 * width) - ob;\r\n    const right =\r\n      Math.round(cx - 0.5 * width) - ob + Math.round(width + 2 * ob);\r\n    const top = Math.round(cy - 0.5 * height) - ob;\r\n    const bottom =\r\n      Math.round(cy - 0.5 * height) - ob + Math.round(height + 2 * ob);\r\n\r\n    // Check if point is within bounds\r\n    return x >= left && x <= right && y >= top && y <= bottom;\r\n  };\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  interact = (player: Player) => {\r\n    if (this.isInf || this.quantity > 0) {\r\n      if (this.open) this.playerOpened.openVendingMachine = null;\r\n      this.open = true;\r\n      this.playerOpened = player;\r\n      this.openTime = Date.now();\r\n      if (\r\n        this.playerOpened.openVendingMachine &&\r\n        this.playerOpened.openVendingMachine !== this\r\n      )\r\n        this.playerOpened.openVendingMachine.close();\r\n      this.playerOpened.openVendingMachine = this;\r\n    }\r\n  };\r\n\r\n  close = () => {\r\n    this.open = false;\r\n    this.playerOpened.openVendingMachine = null;\r\n  };\r\n\r\n  space = () => {\r\n    if (this.open) {\r\n      // Check if player can pay\r\n      for (const i of this.costItems) {\r\n        if (!this.playerOpened.inventory.hasItemCount(i)) {\r\n          let numOfItem = 0;\r\n          this.playerOpened.inventory.items.forEach((item) => {\r\n            if (item instanceof i.constructor) numOfItem++;\r\n          });\r\n          const difference = this.costItems[0].stackCount - numOfItem;\r\n          const pluralLetter = this.costItems[0].stackCount > 1 ? \"s\" : \"\";\r\n\r\n          this.game.pushMessage(\r\n            `You need ${difference} more ${(this.costItems[0].constructor as any).itemName}${pluralLetter} to buy that. `,\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create the new item instance\r\n      let newItem = new (this.item.constructor as { new (): Item })();\r\n      newItem = newItem.constructor(this.room, this.x, this.y);\r\n\r\n      // **Attempt to add the item directly to the player's inventory**\r\n      const addedSuccessfully = this.playerOpened.inventory.addItem(newItem);\r\n\r\n      if (!addedSuccessfully) {\r\n        // If adding the item failed, refund the cost items\r\n        for (const i of this.costItems) {\r\n          this.playerOpened.inventory.addItem(i);\r\n        }\r\n        this.game.pushMessage(\r\n          \"Your inventory is full. Cannot purchase the item.\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Subtract the cost items from player's inventory\r\n      for (const i of this.costItems) {\r\n        this.playerOpened.inventory.subtractItemCount(i);\r\n      }\r\n\r\n      const cost = this.costItems[0].stackCount;\r\n      const pluralLetter = cost > 1 ? \"s\" : \"\";\r\n\r\n      // Decrement the quantity of items available in the vending machine, if not infinite\r\n      if (!this.isInf) {\r\n        this.quantity--;\r\n        if (this.quantity <= 0) this.close();\r\n      }\r\n\r\n      // Notify the player of the successful purchase\r\n      this.game.pushMessage(\r\n        `Purchased ${(newItem.constructor as any).itemName} for ${cost} ${(this.costItems[0].constructor as any).itemName}${pluralLetter}`,\r\n      );\r\n      this.game.pushMessage(`${this.quantity} available to buy.`);\r\n\r\n      // Handle visual feedback and screen shake\r\n      this.buyAnimAmount = 0.99;\r\n      if (this.playerOpened === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(0, 4);\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let tileX = 19;\r\n    if (!this.isInf && this.quantity === 0) tileX = 20;\r\n    Game.drawObj(\r\n      tileX,\r\n      0,\r\n      1,\r\n      2,\r\n      this.x,\r\n      this.y - 1,\r\n      1,\r\n      2,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.open && this.playerOpened.inventory.isOpen) {\r\n      this.close();\r\n      return;\r\n    }\r\n    this.drawableY = this.y;\r\n\r\n    if (\r\n      this.open &&\r\n      this.playerOpened === this.game.players[this.game.localPlayerID]\r\n    ) {\r\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\r\n      let b = 2; // border\r\n      let g = -2; // gap\r\n      let hg = 3; // highlighted growth\r\n      let ob = 1; // outer border\r\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\r\n      let height = s + 2 * b + g - g;\r\n\r\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\r\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\r\n\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      Game.ctx.fillRect(\r\n        Math.round(cx - 0.5 * width) - ob,\r\n        Math.round(cy - 0.5 * height) - ob,\r\n        Math.round(width + 2 * ob),\r\n        Math.round(height + 2 * ob),\r\n      );\r\n      for (let x = 0; x < this.costItems.length + 2; x++) {\r\n        Game.ctx.fillStyle = OUTLINE_COLOR;\r\n        Game.ctx.fillRect(\r\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\r\n          Math.round(cy - 0.5 * height),\r\n          Math.round(s + 2 * b),\r\n          Math.round(s + 2 * b),\r\n        );\r\n        if (x !== this.costItems.length) {\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(\r\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\r\n            Math.round(cy - 0.5 * height + b),\r\n            Math.round(s),\r\n            Math.round(s),\r\n          );\r\n        }\r\n      }\r\n\r\n      if (Date.now() - this.openTime >= OPEN_TIME) {\r\n        for (let i = 0; i < this.costItems.length + 2; i++) {\r\n          let drawX = Math.round(\r\n            cx -\r\n              0.5 * width +\r\n              i * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n          let drawY = Math.round(\r\n            cy -\r\n              0.5 * height +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n\r\n          let drawXScaled = drawX / GameConstants.TILESIZE;\r\n          let drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n          if (i < this.costItems.length) {\r\n            let a = 1;\r\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i]))\r\n              a = 0.15;\r\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\r\n          } else if (i === this.costItems.length) {\r\n            Game.drawFX(2, 0, 1, 1, drawXScaled, drawYScaled, 1, 1);\r\n          } else if (i === this.costItems.length + 1) {\r\n            this.item.drawIcon(\r\n              delta,\r\n              drawXScaled,\r\n              drawYScaled,\r\n              1,\r\n              this.quantity,\r\n            );\r\n          }\r\n        }\r\n      }\r\n      this.buyAnimAmount *= this.buyAnimAmount;\r\n      if (GameConstants.ALPHA_ENABLED)\r\n        Game.ctx.globalAlpha = this.buyAnimAmount;\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      Game.ctx.fillRect(\r\n        Math.round(cx - 0.5 * width) - ob,\r\n        Math.round(cy - 0.5 * height) - ob,\r\n        Math.round(width + 2 * ob),\r\n        Math.round(height + 2 * ob),\r\n      );\r\n      Game.ctx.globalAlpha = 1.0;\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coal } from \"../../item/coal\";\r\nimport { Sound } from \"../../sound\";\r\nimport { Inventory } from \"../../inventory\";\r\nimport { Weapon } from \"../../weapon/weapon\";\r\nimport { Pickaxe } from \"../../weapon/pickaxe\";\r\nimport { Player } from \"../../player\";\r\nimport { ItemState, ItemType } from \"../../gameState\";\r\n\r\nexport class CoalResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n    this.health = 1;\r\n    this.name = \"coal\";\r\n    this.drop = new Coal(this.room, this.x, this.y);\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { GreenGem } from \"../../item/greengem\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class EmeraldResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 14;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"emerald\";\r\n    this.drop = new GreenGem(this.room, this.x, this.y);\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Gold } from \"../../item/gold\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class GoldResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 13;\r\n    this.tileY = 0;\r\n    this.health = 2;\r\n    this.name = \"gold\";\r\n    this.drop = new Gold(this.room, this.x, this.y);\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Entity } from \"../entity\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GreenGem } from \"../../item/greengem\";\r\nimport { Player } from \"../../player\";\r\nimport { Pickaxe } from \"../../weapon/pickaxe\";\r\nimport { Spellbook } from \"../../weapon/spellbook\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Sound } from \"../../sound\";\r\n\r\nexport class Resource extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n    this.health = 1;\r\n    this.chainPushable = false;\r\n    this.name = \"resource\";\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.RESOURCE;\r\n  }\r\n\r\n  hurt = (playerHitBy: Player, damage: number) => {\r\n    if (\r\n      (playerHitBy !== null &&\r\n        playerHitBy.inventory.getWeapon().canMine === true) ||\r\n      playerHitBy === null\r\n    ) {\r\n      this.healthBar.hurt();\r\n      this.health -= damage;\r\n      Sound.mine();\r\n    } else {\r\n      this.game.pushMessage(\"Your weapon fails to damage the rock.\");\r\n      this.hurtCallback();\r\n    }\r\n    if (this.health <= 0) {\r\n      this.kill();\r\n    }\r\n  };\r\n\r\n  kill = () => {\r\n    Sound.breakRock();\r\n    this.dead = true;\r\n    this.dropLoot();\r\n  };\r\n\r\n  killNoBones = () => {\r\n    this.kill();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (!this.dead) {\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - 1 - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Room } from \"../../room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/heart\";\r\nimport { LevelConstants } from \"../../levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Player } from \"../../player\";\r\nimport { Sound } from \"../../sound\";\r\nimport { Stone } from \"../../item/stone\";\r\nimport { Resource } from \"./resource\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Rock extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.tileX = 8;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"rock\";\r\n    this.drop = new Stone(this.room, this.x, this.y);\r\n  }\r\n}\r\n","import { SkinType } from \"./tile/tile\";\r\nexport enum EnvType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  SWAMP = 3,\r\n  GLACIER = 4,\r\n  CASTLE = 5,\r\n}\r\nexport class Environment {\r\n  type: EnvType;\r\n  skin: SkinType;\r\n  constructor(type: EnvType) {\r\n    this.type = type;\r\n    this.skin = this.type as unknown as SkinType;\r\n  }\r\n}\r\n","import { EventEmitter } from \"./eventEmitter\";\r\n\r\nclass EventBus {\r\n  private static instance: EventBus;\r\n  private eventEmitter: EventEmitter;\r\n\r\n  private constructor() {\r\n    this.eventEmitter = new EventEmitter();\r\n  }\r\n\r\n  public static getInstance(): EventBus {\r\n    if (!EventBus.instance) {\r\n      EventBus.instance = new EventBus();\r\n    }\r\n    return EventBus.instance;\r\n  }\r\n\r\n  public emit<T>(event: string, data: T): void {\r\n    this.eventEmitter.emit(event, data);\r\n  }\r\n\r\n  public on<T>(event: string, callback: (data: T) => void): void {\r\n    this.eventEmitter.on(event, callback);\r\n  }\r\n\r\n  public off<T>(event: string, callback: (data: T) => void): void {\r\n    this.eventEmitter.off(event, callback);\r\n  }\r\n}\r\n\r\nexport const globalEventBus = EventBus.getInstance();\r\n","type EventCallback<T = any> = (data: T) => void;\r\n\r\nexport class EventEmitter {\r\n  private events: Record<string, EventCallback[]> = {};\r\n\r\n  on<T>(event: string, listener: EventCallback<T>): void {\r\n    if (!this.events[event]) {\r\n      this.events[event] = [];\r\n    }\r\n    this.events[event].push(listener);\r\n  }\r\n\r\n  off<T>(event: string, listener: EventCallback<T>): void {\r\n    if (!this.events[event]) return;\r\n    this.events[event] = this.events[event].filter((l) => l !== listener);\r\n  }\r\n\r\n  emit<T>(event: string, data: T): void {\r\n    if (!this.events[event]) return;\r\n    this.events[event].forEach((listener) => listener(data));\r\n  }\r\n\r\n  // New method to remove all listeners for an event\r\n  removeAllListeners(event: string): void {\r\n    delete this.events[event];\r\n  }\r\n}\r\n","export const EVENTS = {\r\n  KEY_DOWN: \"KEY_DOWN\",\r\n  KEY_UP: \"KEY_UP\",\r\n  MOUSE_LEFT_CLICK: \"MOUSE_LEFT_CLICK\",\r\n  MOUSE_RIGHT_CLICK: \"MOUSE_RIGHT_CLICK\",\r\n  MOUSE_MOVE: \"MOUSE_MOVE\",\r\n  TOUCH_START: \"TOUCH_START\",\r\n  TOUCH_MOVE: \"TOUCH_MOVE\",\r\n  TOUCH_END: \"TOUCH_END\",\r\n  TAP: \"TAP\",\r\n  TAP_HOLD: \"TAP_HOLD\",\r\n  MOUSE_DOWN: \"MOUSE_DOWN\",\r\n  MOUSE_UP: \"MOUSE_UP\",\r\n\r\n  // **Additional Custom Events:**\r\n  CHAT_MESSAGE: \"ChatMessage\",\r\n  ENEMY_SEEN_PLAYER: \"EnemySeenPlayer\",\r\n  ENEMY_KILLED: \"ENEMY_KILLED\",\r\n  DAMAGE_DONE: \"DAMAGE_DONE\",\r\n  DAMAGE_TAKEN: \"DAMAGE_TAKEN\",\r\n  TURN_PASSED: \"TURN_PASSED\",\r\n  COIN_COLLECTED: \"COIN_COLLECTED\",\r\n  ITEM_COLLECTED: \"ITEM_COLLECTED\",\r\n  LEVEL_GENERATION_STARTED: \"LEVEL_GENERATION_STARTED\",\r\n  LEVEL_GENERATION_COMPLETED: \"LEVEL_GENERATION_COMPLETED\",\r\n  // Add other custom events as needed\r\n} as const;\r\n\r\n// **TypeScript Interfaces for Event Payloads:**\r\n\r\nexport interface MouseClickEvent {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface MouseMoveEvent {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface KeyEvent {\r\n  key: string;\r\n}\r\n\r\nexport interface TouchEventData {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ChatMessageEvent {\r\n  message: string;\r\n}\r\n\r\nexport interface EnemySeenPlayerEvent {\r\n  enemyId: string;\r\n  playerId: string;\r\n  // Add other relevant properties\r\n}\r\n\r\nexport interface EnemyKilledEvent {\r\n  enemyId: string;\r\n}\r\n\r\nexport interface DamageDoneEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface DamageTakenEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface CoinCollectedEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface ItemCollectedEvent {\r\n  itemId: string;\r\n}\r\n\r\n// **Union Type for Events:**\r\nexport type AppEvents =\r\n  | typeof EVENTS.KEY_DOWN\r\n  | typeof EVENTS.KEY_UP\r\n  | typeof EVENTS.MOUSE_LEFT_CLICK\r\n  | typeof EVENTS.MOUSE_RIGHT_CLICK\r\n  | typeof EVENTS.MOUSE_MOVE\r\n  | typeof EVENTS.TOUCH_START\r\n  | typeof EVENTS.TOUCH_MOVE\r\n  | typeof EVENTS.TOUCH_END\r\n  | typeof EVENTS.TAP\r\n  | typeof EVENTS.TAP_HOLD\r\n  | typeof EVENTS.MOUSE_DOWN\r\n  | typeof EVENTS.MOUSE_UP\r\n  | typeof EVENTS.CHAT_MESSAGE\r\n  | typeof EVENTS.ENEMY_SEEN_PLAYER\r\n  | typeof EVENTS.ENEMY_KILLED\r\n  | typeof EVENTS.DAMAGE_DONE\r\n  | typeof EVENTS.DAMAGE_TAKEN\r\n  | typeof EVENTS.TURN_PASSED\r\n  | typeof EVENTS.COIN_COLLECTED\r\n  | typeof EVENTS.ITEM_COLLECTED\r\n  | typeof EVENTS.LEVEL_GENERATION_STARTED\r\n  | typeof EVENTS.LEVEL_GENERATION_COMPLETED;\r\n// | Add other events as needed\r\n\r\n// **Type Mapping for Event Payloads:**\r\nexport type EventPayloads = {\r\n  [EVENTS.KEY_DOWN]: string; // key identifier\r\n  [EVENTS.KEY_UP]: string;\r\n  [EVENTS.MOUSE_LEFT_CLICK]: MouseClickEvent;\r\n  [EVENTS.MOUSE_RIGHT_CLICK]: MouseClickEvent;\r\n  [EVENTS.MOUSE_MOVE]: MouseMoveEvent;\r\n  [EVENTS.TOUCH_START]: TouchEventData;\r\n  [EVENTS.TOUCH_MOVE]: TouchEventData;\r\n  [EVENTS.TOUCH_END]: TouchEventData;\r\n  [EVENTS.TAP]: MouseClickEvent;\r\n  [EVENTS.TAP_HOLD]: MouseClickEvent;\r\n  [EVENTS.MOUSE_DOWN]: MouseClickEvent;\r\n  [EVENTS.MOUSE_UP]: MouseClickEvent;\r\n\r\n  [EVENTS.CHAT_MESSAGE]: ChatMessageEvent;\r\n  [EVENTS.ENEMY_SEEN_PLAYER]: EnemySeenPlayerEvent;\r\n  [EVENTS.ENEMY_KILLED]: EnemyKilledEvent;\r\n  [EVENTS.DAMAGE_DONE]: DamageDoneEvent;\r\n  [EVENTS.DAMAGE_TAKEN]: DamageTakenEvent;\r\n  [EVENTS.TURN_PASSED]: void;\r\n  [EVENTS.COIN_COLLECTED]: CoinCollectedEvent;\r\n  [EVENTS.ITEM_COLLECTED]: ItemCollectedEvent;\r\n  [EVENTS.LEVEL_GENERATION_STARTED]: void;\r\n  [EVENTS.LEVEL_GENERATION_COMPLETED]: void;\r\n  // | Add other event payloads as needed\r\n};\r\n","import { GameConstants } from \"./gameConstants\";\r\nimport { EnemyType, Room, RoomType } from \"./room\";\r\nimport { Player } from \"./player\";\r\nimport { Door, DoorType } from \"./tile/door\";\r\nimport { Sound } from \"./sound\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { LevelGenerator } from \"./levelGenerator\";\r\nimport { Input, InputEnum } from \"./input\";\r\nimport { DownLadder } from \"./tile/downLadder\";\r\nimport { TextBox } from \"./textbox\";\r\nimport { GameState, loadGameState } from \"./gameState\";\r\nimport { DoorDir } from \"./tile/door\";\r\nimport { Enemy } from \"./entity/enemy/enemy\";\r\nimport { TutorialListener } from \"./tutorialListener\";\r\nimport { MouseCursor } from \"./mouseCursor\";\r\nimport { PostProcessor } from \"./postProcess\";\r\nimport { globalEventBus } from \"./eventBus\";\r\nimport { ReverbEngine } from \"./reverb\";\r\nimport { Level } from \"./level\";\r\nimport { statsTracker } from \"./stats\";\r\nimport { EVENTS } from \"./events\";\r\nimport { UpLadder } from \"./tile/upLadder\";\r\n\r\nexport enum LevelState {\r\n  IN_LEVEL,\r\n  TRANSITIONING,\r\n  TRANSITIONING_LADDER,\r\n  LEVEL_GENERATION,\r\n}\r\n\r\nexport enum Direction {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n  DOWN_RIGHT,\r\n  UP_LEFT,\r\n  UP_RIGHT,\r\n  DOWN_LEFT,\r\n  CENTER,\r\n}\r\n\r\nexport class ChatMessage {\r\n  message: string;\r\n  timestamp: number;\r\n  constructor(message: string) {\r\n    this.message = message;\r\n    this.timestamp = Date.now();\r\n  }\r\n}\r\n\r\nlet getShadeCanvasKey = (\r\n  set: HTMLImageElement,\r\n  sX: number,\r\n  sY: number,\r\n  sW: number,\r\n  sH: number,\r\n  opacity: number,\r\n  shadeColor: string,\r\n): string => {\r\n  return (\r\n    set.src +\r\n    \",\" +\r\n    sX +\r\n    \",\" +\r\n    sY +\r\n    \",\" +\r\n    sW +\r\n    \",\" +\r\n    sH +\r\n    \",\" +\r\n    opacity +\r\n    \",\" +\r\n    shadeColor\r\n  );\r\n};\r\n\r\n// fps counter\r\nconst times = [];\r\nlet fps = 60;\r\n\r\nexport class Game {\r\n  static ctx: CanvasRenderingContext2D;\r\n  static shade_canvases: Record<string, HTMLCanvasElement>;\r\n  prevLevel: Room; // for transitions\r\n  room: Room;\r\n  rooms: Array<Room>;\r\n  level: Level;\r\n  levels: Array<Level>;\r\n  levelgen: LevelGenerator;\r\n  readonly localPlayerID = \"localplayer\";\r\n  players: Record<string, Player>;\r\n  offlinePlayers: Record<string, Player>;\r\n  levelState: LevelState;\r\n  transitionStartTime: number;\r\n  transitionX: number;\r\n  transitionY: number;\r\n  upwardTransition: boolean;\r\n  sideTransition: boolean;\r\n  sideTransitionDirection: number;\r\n  transition: boolean;\r\n  transitioningLadder: UpLadder | DownLadder;\r\n  screenShakeX: number;\r\n  screenShakeY: number;\r\n  shakeAmountX: number;\r\n  shakeAmountY: number;\r\n  shakeFrame: number;\r\n  screenShakeCutoff: number;\r\n  chat: Array<ChatMessage>;\r\n  chatOpen: boolean;\r\n  chatTextBox: TextBox;\r\n  previousFrameTimestamp: number;\r\n  player: Player;\r\n\r\n  static inputReceived = false;\r\n\r\n  loginMessage: string = \"\";\r\n  username: string;\r\n  usernameTextBox: TextBox;\r\n  passwordTextBox: TextBox;\r\n  worldCodes: Array<string>;\r\n  private selectedWorldCode: number;\r\n  tutorialActive: boolean;\r\n  static scale;\r\n  static tileset: HTMLImageElement;\r\n  static objset: HTMLImageElement;\r\n  static mobset: HTMLImageElement;\r\n  static itemset: HTMLImageElement;\r\n  static fxset: HTMLImageElement;\r\n  static fontsheet: HTMLImageElement;\r\n  isMobile: boolean;\r\n  started: boolean;\r\n  startedFadeOut: boolean;\r\n  screenShakeActive: boolean;\r\n  encounteredEnemies: Array<number>;\r\n  paused: boolean;\r\n  private startScreenAlpha = 1;\r\n  static delta: number;\r\n  currentDepth: number;\r\n  previousDepth: number;\r\n\r\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\r\n  static readonly letters = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\";\r\n  static readonly letter_widths = [\r\n    4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5,\r\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3,\r\n  ];\r\n  static readonly letter_height = 6;\r\n  static letter_positions = [];\r\n\r\n  // [min, max] inclusive\r\n  static rand = (min: number, max: number, rand): number => {\r\n    if (max < min) return min;\r\n    return Math.floor(rand() * (max - min + 1) + min);\r\n  };\r\n\r\n  static randTable = (table: any[], rand): any => {\r\n    return table[Game.rand(0, table.length - 1, rand)];\r\n  };\r\n  tutorialListener: TutorialListener;\r\n\r\n  private focusTimeout: number | null = null;\r\n  private readonly FOCUS_TIMEOUT_DURATION = 15000; // 5 seconds\r\n  private wasMuted = false;\r\n  private wasStarted = false;\r\n\r\n  constructor() {\r\n    window.addEventListener(\"load\", () => {\r\n      let canvas = document.getElementById(\"gameCanvas\");\r\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\r\n        alpha: false,\r\n      }) as CanvasRenderingContext2D;\r\n\r\n      // Create TextBox instances and associate them with HTML elements\r\n      const usernameElement = document.createElement(\"input\");\r\n      usernameElement.type = \"text\";\r\n      usernameElement.autocomplete = \"off\";\r\n      usernameElement.autocapitalize = \"off\";\r\n      usernameElement.style.position = \"absolute\";\r\n      usernameElement.style.left = \"-1000px\"; // Position off-screen\r\n      //const passwordElement = document.createElement(\"input\");\r\n      //passwordElement.type = \"password\";\r\n      //passwordElement.style.position = \"absolute\";\r\n      //passwordElement.style.left = \"-1000px\"; // Position off-screen\r\n      const chatElement = document.createElement(\"input\");\r\n      chatElement.type = \"text\";\r\n      chatElement.style.position = \"absolute\";\r\n      chatElement.style.left = \"-1000px\"; // Position off-screen\r\n      //document.body.appendChild(usernameElement);\r\n      //document.body.appendChild(passwordElement);\r\n      document.body.appendChild(chatElement);\r\n\r\n      document.addEventListener(\r\n        \"click\",\r\n        () => {\r\n          usernameElement.focus();\r\n        },\r\n        { once: true },\r\n      );\r\n\r\n      this.chat = [];\r\n      this.chatTextBox = new TextBox(chatElement);\r\n      this.chatTextBox.setEnterCallback(() => {\r\n        if (this.chatTextBox.text.length > 0) {\r\n          this.chat.push(new ChatMessage(this.chatTextBox.text));\r\n          this.chatTextBox.clear();\r\n        } else {\r\n          this.chatOpen = false;\r\n        }\r\n      });\r\n      this.chatTextBox.setEscapeCallback(() => {\r\n        this.chatOpen = false;\r\n      });\r\n      this.worldCodes = [];\r\n      this.selectedWorldCode = 0;\r\n\r\n      Game.shade_canvases = {};\r\n      Game.text_rendering_canvases = {};\r\n\r\n      let resourcesLoaded = 0;\r\n      const NUM_RESOURCES = 6;\r\n\r\n      Game.tileset = new Image();\r\n      Game.tileset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.tileset.src = \"res/tileset.png\";\r\n      Game.objset = new Image();\r\n      Game.objset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.objset.src = \"res/objset.png\";\r\n      Game.mobset = new Image();\r\n      Game.mobset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.mobset.src = \"res/mobset.png\";\r\n      Game.itemset = new Image();\r\n      Game.itemset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.itemset.src = \"res/itemset.png\";\r\n      Game.fxset = new Image();\r\n      Game.fxset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.fxset.src = \"res/fxset.png\";\r\n      Game.fontsheet = new Image();\r\n      Game.fontsheet.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.fontsheet.src = \"res/font.png\";\r\n\r\n      this.levelState = LevelState.LEVEL_GENERATION;\r\n\r\n      let checkResourcesLoaded = () => {\r\n        if (resourcesLoaded < NUM_RESOURCES) {\r\n          window.setTimeout(checkResourcesLoaded, 500);\r\n        } else {\r\n          // proceed with constructor\r\n\r\n          Game.scale = GameConstants.SCALE;\r\n\r\n          document.addEventListener(\r\n            \"touchstart\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n          document.addEventListener(\r\n            \"touchend\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n          document.addEventListener(\r\n            \"touchmove\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n\r\n          document.addEventListener(\"touchstart\", Input.handleTouchStart, {\r\n            passive: false,\r\n          });\r\n          document.addEventListener(\"touchmove\", Input.handleTouchMove, {\r\n            passive: false,\r\n          });\r\n          document.addEventListener(\"touchend\", Input.handleTouchEnd, {\r\n            passive: false,\r\n          });\r\n\r\n          Input.keyDownListener = (key: string) => {\r\n            this.keyDownListener(key);\r\n          };\r\n\r\n          window.requestAnimationFrame(this.run);\r\n          this.onResize();\r\n          window.addEventListener(\"resize\", this.onResize);\r\n          window.addEventListener(\"orientationchange\", () => {\r\n            // Small delay to ensure new dimensions are available\r\n            setTimeout(this.onResize, 100);\r\n          });\r\n\r\n          //Sound.playMusic(); // loops forever\r\n\r\n          this.players = {};\r\n          this.offlinePlayers = {};\r\n          this.chatOpen = false;\r\n\r\n          this.screenShakeX = 0;\r\n          this.screenShakeY = 0;\r\n          this.shakeAmountX = 0;\r\n          this.shakeAmountY = 0;\r\n          this.shakeFrame = (3 * Math.PI) / 2;\r\n          this.screenShakeCutoff = 0;\r\n          this.tutorialActive = false;\r\n          this.screenShakeActive = false;\r\n          this.levels = [];\r\n          this.encounteredEnemies = [];\r\n          this.newGame();\r\n        }\r\n      };\r\n      checkResourcesLoaded();\r\n    });\r\n    ReverbEngine.initialize();\r\n\r\n    Sound.loadSounds();\r\n\r\n    this.started = false;\r\n    this.tutorialListener = null;\r\n\r\n    this.setupEventListeners();\r\n\r\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_STARTED, () => {\r\n      this.levelState = LevelState.LEVEL_GENERATION;\r\n    });\r\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, () => {\r\n      this.levelState = LevelState.IN_LEVEL;\r\n    });\r\n\r\n    // Add focus/blur event listeners\r\n    window.addEventListener(\"blur\", this.handleWindowBlur);\r\n    window.addEventListener(\"focus\", this.handleWindowFocus);\r\n  }\r\n\r\n  updateDepth = (depth: number) => {\r\n    this.previousDepth = this.currentDepth;\r\n    this.currentDepth = depth;\r\n    this.players[this.localPlayerID].depth = depth;\r\n  };\r\n\r\n  updateLevel = () => {\r\n    this.level = this.levels[this.currentDepth];\r\n    if (this.level.rooms.length > 0) this.rooms = this.level.rooms;\r\n  };\r\n\r\n  setPlayer = () => {\r\n    this.player = this.players[this.localPlayerID];\r\n  };\r\n\r\n  newGame = () => {\r\n    statsTracker.resetStats();\r\n    this.currentDepth = 0;\r\n    this.encounteredEnemies = [];\r\n    this.levels = [];\r\n    let gs = new GameState();\r\n    gs.seed = (Math.random() * 4294967296) >>> 0;\r\n    gs.randomState = (Math.random() * 4294967296) >>> 0;\r\n    loadGameState(this, [this.localPlayerID], gs, true);\r\n    this.levelState = LevelState.LEVEL_GENERATION;\r\n  };\r\n\r\n  keyDownListener = (key: string) => {\r\n    Game.inputReceived = true;\r\n    if (!this.started) {\r\n      this.startedFadeOut = true;\r\n      return;\r\n    }\r\n    if (!this.chatOpen) {\r\n      switch (key.toUpperCase()) {\r\n        case \"M\":\r\n          Sound.audioMuted = !Sound.audioMuted;\r\n          const message = Sound.audioMuted ? \"Audio muted\" : \"Audio unmuted\";\r\n          this.pushMessage(message);\r\n          break;\r\n        case \"C\":\r\n          this.chatOpen = true;\r\n          break;\r\n        case \"/\":\r\n          this.chatOpen = true;\r\n          this.chatTextBox.clear();\r\n          this.chatTextBox.handleKeyPress(key);\r\n          break;\r\n        case \"A\":\r\n        case \"ARROWLEFT\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.LEFT);\r\n          break;\r\n        case \"D\":\r\n        case \"ARROWRIGHT\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.RIGHT);\r\n          break;\r\n        case \"W\":\r\n        case \"ARROWUP\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.UP);\r\n          break;\r\n        case \"S\":\r\n        case \"ARROWDOWN\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.DOWN);\r\n          break;\r\n        case \" \":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.SPACE);\r\n          break;\r\n        case \"I\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.I);\r\n          break;\r\n        case \"Q\":\r\n          this.players[this.localPlayerID].inputHandler(InputEnum.Q);\r\n          break;\r\n        case \"1\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 1;\r\n          break;\r\n        case \"2\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 2;\r\n          break;\r\n        case \"3\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 5;\r\n          break;\r\n        case \"4\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 10000;\r\n          break;\r\n        case \"0\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 0;\r\n          break;\r\n      }\r\n    } else {\r\n      this.chatTextBox.handleKeyPress(key);\r\n    }\r\n  };\r\n\r\n  changeLevel = (player: Player, newLevel: Room) => {\r\n    if (this.tutorialListener === null) {\r\n      this.tutorialListener = new TutorialListener(this);\r\n    }\r\n\r\n    player.levelID = this.levels[player.depth].rooms.indexOf(newLevel);\r\n    if (this.players[this.localPlayerID] === player) {\r\n      //this.level.exitLevel();\r\n\r\n      this.room = newLevel;\r\n    }\r\n    this.level = this.room.level;\r\n    newLevel.enterLevel(player);\r\n  };\r\n\r\n  changeLevelThroughLadder = (\r\n    player: Player,\r\n    ladder: UpLadder | DownLadder,\r\n  ) => {\r\n    player.map.saveOldMap();\r\n    if (ladder instanceof DownLadder && !ladder.linkedLevel) ladder.generate();\r\n\r\n    const newRoom = ladder.linkedLevel;\r\n\r\n    if (this.players[this.localPlayerID] === player) {\r\n      player.levelID = newRoom.id;\r\n      if (ladder instanceof UpLadder) {\r\n        this.players[this.localPlayerID].levelID =\r\n          newRoom.level.rooms.indexOf(newRoom);\r\n      }\r\n    }\r\n\r\n    this.updateDepth(newRoom.depth);\r\n\r\n    this.levelState = LevelState.TRANSITIONING_LADDER;\r\n    this.transitionStartTime = Date.now();\r\n    this.transitioningLadder = ladder;\r\n  };\r\n\r\n  changeLevelThroughDoor = (player: Player, door: Door, side?: number) => {\r\n    door.linkedDoor.room.entered = true;\r\n    player.levelID = door.room.id;\r\n\r\n    if (this.players[this.localPlayerID] === player) {\r\n      this.levelState = LevelState.TRANSITIONING;\r\n      this.transitionStartTime = Date.now();\r\n      const hasDir = door.doorDir !== door.linkedDoor.doorDir;\r\n\r\n      let oldX = this.players[this.localPlayerID].x;\r\n      let oldY = this.players[this.localPlayerID].y;\r\n\r\n      this.prevLevel = this.room;\r\n      this.prevLevel.exitLevel();\r\n\r\n      //this.level.exitLevel();\r\n      this.room = door.room;\r\n\r\n      door.room.enterLevelThroughDoor(player, door, side);\r\n\r\n      this.transitionX =\r\n        (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\r\n      this.transitionY =\r\n        (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\r\n\r\n      this.upwardTransition = false;\r\n      this.sideTransition = false;\r\n      this.sideTransitionDirection = side;\r\n      if (\r\n        door instanceof Door &&\r\n        [Direction.RIGHT, Direction.LEFT].includes(door.doorDir) &&\r\n        hasDir\r\n      )\r\n        this.sideTransition = true;\r\n      else if (\r\n        door instanceof Door &&\r\n        door.doorDir === Direction.DOWN &&\r\n        hasDir\r\n      )\r\n        this.upwardTransition = true;\r\n    } else {\r\n      door.room.enterLevelThroughDoor(player, door, side);\r\n    }\r\n    player.map.saveMapData();\r\n  };\r\n\r\n  run = (timestamp: number) => {\r\n    if (this.paused) {\r\n      // Still request next frame even when paused to maintain loop\r\n      window.requestAnimationFrame(this.run);\r\n      return;\r\n    }\r\n\r\n    if (!this.previousFrameTimestamp) {\r\n      this.previousFrameTimestamp = timestamp;\r\n      window.requestAnimationFrame(this.run);\r\n      return;\r\n    }\r\n\r\n    // Calculate elapsed time in milliseconds\r\n    let elapsed = timestamp - this.previousFrameTimestamp;\r\n\r\n    // Normalize delta to 60 FPS\r\n    let delta = (elapsed * 60) / 1000.0;\r\n\r\n    // Define minimum and maximum delta values\r\n    const deltaMin = 1 / 10; // 600fps\r\n    const deltaMax = 8; //7.5fps\r\n    // Cap delta within [deltaMin, deltaMax]\r\n    if (Game.delta) delta = Game.delta;\r\n    if (delta < deltaMin) {\r\n      delta = deltaMin;\r\n    } else if (delta > deltaMax) {\r\n      delta = deltaMax;\r\n    }\r\n    // Update FPS tracking\r\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\r\n      times.shift();\r\n    }\r\n    times.push(timestamp);\r\n    fps = times.length;\r\n\r\n    // Update game logic\r\n    if (\r\n      Math.floor(timestamp / (1000 / 60)) >\r\n      Math.floor(this.previousFrameTimestamp / (1000 / 60))\r\n    ) {\r\n      this.update();\r\n    }\r\n\r\n    // Render the frame with capped delta\r\n    this.draw(delta * GameConstants.ANIMATION_SPEED * 1);\r\n\r\n    // Request the next frame\r\n    window.requestAnimationFrame(this.run);\r\n\r\n    // Update the previous frame timestamp\r\n    this.previousFrameTimestamp = timestamp;\r\n  };\r\n\r\n  update = () => {\r\n    Input.checkIsTapHold();\r\n\r\n    if (\r\n      Input.lastPressTime !== 0 &&\r\n      Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\r\n    ) {\r\n      Input.onKeydown({\r\n        repeat: false,\r\n        key: Input.lastPressKey,\r\n      } as KeyboardEvent);\r\n    }\r\n\r\n    if (this.levelState === LevelState.TRANSITIONING) {\r\n      if (\r\n        Date.now() - this.transitionStartTime >=\r\n        LevelConstants.LEVEL_TRANSITION_TIME\r\n      ) {\r\n        this.levelState = LevelState.IN_LEVEL;\r\n      }\r\n    }\r\n    if (this.levelState === LevelState.TRANSITIONING_LADDER) {\r\n      if (\r\n        Date.now() - this.transitionStartTime >=\r\n        LevelConstants.LEVEL_TRANSITION_TIME_LADDER\r\n      ) {\r\n        this.levelState = LevelState.IN_LEVEL;\r\n        this.players[this.localPlayerID].map.saveMapData();\r\n      }\r\n    }\r\n    if (this.levelState !== LevelState.LEVEL_GENERATION) {\r\n      for (const i in this.players) {\r\n        this.players[i].update();\r\n        this.levels[this.players[i].depth].rooms[\r\n          this.players[i].levelID\r\n        ].update();\r\n\r\n        if (this.players[i].dead) {\r\n          for (const j in this.players) {\r\n            this.players[j].dead = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  lerp = (a: number, b: number, t: number): number => {\r\n    return (1 - t) * a + t * b;\r\n  };\r\n\r\n  pushMessage = (message: string) => {\r\n    this.chat.push(new ChatMessage(message));\r\n  };\r\n\r\n  commandHandler = (command: string): void => {\r\n    const player = this.room.game.players[0];\r\n    command = command.toLowerCase();\r\n    switch (command) {\r\n      case \"devmode\":\r\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\r\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\r\n        break;\r\n      case \"new\":\r\n        this.newGame();\r\n        break;\r\n      case \"dev\":\r\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\r\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\r\n        this.newGame();\r\n        break;\r\n      case \"kill\":\r\n        for (const i in this.players) {\r\n          this.players[i].dead = true;\r\n        }\r\n        break;\r\n      case \"killall\":\r\n        for (const i in this.players) {\r\n          this.players[i].game.room.entities.forEach((e) => {\r\n            e.kill();\r\n          });\r\n        }\r\n        break;\r\n      case \"bomb\":\r\n        this.room.addBombs(1, () => Math.random());\r\n        break;\r\n      case \"col\":\r\n        GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false);\r\n        break;\r\n      case \"scl\":\r\n        GameConstants.SET_SCALE();\r\n        this.onResize();\r\n        break;\r\n      case \"shd\":\r\n        GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false, true);\r\n        break;\r\n      case \"smooth\":\r\n        GameConstants.SMOOTH_LIGHTING = !GameConstants.SMOOTH_LIGHTING;\r\n        break;\r\n      case \"rooms\":\r\n        GameConstants.drawOtherRooms = !GameConstants.drawOtherRooms;\r\n      default:\r\n        if (command.startsWith(\"new \")) {\r\n          this.room.addNewEnemy(command.slice(4) as EnemyType);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  private setupEventListeners(): void {\r\n    //console.log(\"Setting up event listeners\");\r\n    globalEventBus.on(\"ChatCommand\", this.commandHandler.bind(this));\r\n  }\r\n\r\n  maxScale = () => {\r\n    for (let i = GameConstants.MIN_SCALE; i <= GameConstants.MAX_SCALE; i++) {\r\n      if (window.innerWidth / i < 130) {\r\n        return i;\r\n      }\r\n    }\r\n    return GameConstants.MAX_SCALE;\r\n  };\r\n\r\n  onResize = () => {\r\n    // Determine device pixel ratio\r\n    const dpr = window.devicePixelRatio;\r\n    // Define scale adjustment based on device pixel ratio\r\n    let scaleOffset = 0;\r\n    //if (dpr > 1.5) {\r\n    // High DPI devices like MacBook Air\r\n    //scaleOffset = 2;\r\n    //} else {\r\n    // Standard DPI devices\r\n    //   scaleOffset = 0;\r\n    //}\r\n\r\n    // Calculate maximum possible scale based on window size\r\n    let maxWidthScale = Math.floor(\r\n      window.innerWidth / GameConstants.DEFAULTWIDTH,\r\n    );\r\n    let maxHeightScale = Math.floor(\r\n      window.innerHeight / GameConstants.DEFAULTHEIGHT,\r\n    );\r\n    const zoomLevel =\r\n      Math.round((window.outerWidth / window.innerWidth) * 20) / 20;\r\n\r\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    if (this.isMobile) {\r\n      if (!GameConstants.isMobile) this.pushMessage(\"Mobile detected\");\r\n      GameConstants.isMobile = true;\r\n\r\n      // Use smaller scale for mobile devices based on screen size\r\n      // Adjust max scale with scaleOffset\r\n      const integerScale = GameConstants.MAX_SCALE - 3 + scaleOffset;\r\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale); // Cap at 3 + offset for mobile\r\n    } else {\r\n      GameConstants.isMobile = false;\r\n      // For desktop, use standard scaling logic\r\n      // Ensure GameConstants.SCALE is an integer. If not, round it.\r\n      const integerScale = GameConstants.SCALE + scaleOffset;\r\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale);\r\n    }\r\n\r\n    // Handle case where scale would be 0\r\n    if (Game.scale === 0) {\r\n      // Recalculate max scales without flooring to check for minimum scale\r\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\r\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\r\n      // Ensure Game.scale is at least 1 and an integer\r\n      Game.scale = Math.max(\r\n        1,\r\n        Math.min(maxWidthScale, maxHeightScale, 1 + scaleOffset),\r\n      );\r\n    }\r\n\r\n    // Apply device pixel ratio negation by setting scale to compensate for DPI\r\n    const NEGATE_DPR_FACTOR = 1;\r\n    Game.scale *= NEGATE_DPR_FACTOR / window.devicePixelRatio;\r\n    console.log(window.devicePixelRatio);\r\n\r\n    //Game.scale = Math.ceil(Math.min(Game.scale, this.maxScale()));\r\n    //GameConstants.SCALE = Game.scale;\r\n\r\n    // Calculate screen width and height in tiles, ensuring integer values\r\n    LevelConstants.SCREEN_W = Math.floor(\r\n      window.innerWidth / Game.scale / GameConstants.TILESIZE,\r\n    );\r\n    LevelConstants.SCREEN_H = Math.floor(\r\n      window.innerHeight / Game.scale / GameConstants.TILESIZE,\r\n    );\r\n\r\n    // Calculate canvas width and height in pixels\r\n    GameConstants.WIDTH = Math.floor(window.innerWidth / Game.scale);\r\n    GameConstants.HEIGHT = Math.floor(window.innerHeight / Game.scale);\r\n\r\n    // Set canvas width and height attributes\r\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\r\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\r\n\r\n    // Set CSS styles for scaling, applying negated DPR factor\r\n    Game.ctx.canvas.setAttribute(\r\n      \"style\",\r\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${\r\n        GameConstants.HEIGHT * Game.scale\r\n      }px;\r\n      display: block;\r\n      margin: 0 auto;\r\n      image-rendering: optimizeSpeed; /* Older versions of FF */\r\n      image-rendering: -moz-crisp-edges; /* FF 6.0+ */\r\n      image-rendering: -webkit-optimize-contrast; /* Safari */\r\n      image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\r\n      image-rendering: pixelated; /* Future-browsers */\r\n      -ms-interpolation-mode: nearest-neighbor; /* IE */\r\n      `,\r\n    );\r\n\r\n    // Optional: Log the new scale and canvas size for debugging\r\n  };\r\n\r\n  shakeScreen = (shakeX: number, shakeY: number, clamp: boolean = false) => {\r\n    let finalX = clamp ? Math.max(-3, Math.min(3, shakeX)) : shakeX;\r\n    let finalY = clamp ? Math.max(-3, Math.min(3, shakeY)) : shakeY;\r\n\r\n    this.screenShakeActive = true;\r\n    this.screenShakeX += finalX;\r\n    this.screenShakeY += finalY;\r\n    this.shakeAmountX += Math.abs(finalX);\r\n    this.shakeAmountY += Math.abs(finalY);\r\n    if (finalX < 0 || finalY < 0) this.shakeFrame = (3 * Math.PI) / 2;\r\n    if (finalX > 0 || finalY > 0) this.shakeFrame = Math.PI / 2;\r\n    this.screenShakeCutoff = Date.now();\r\n  };\r\n\r\n  drawRooms = (delta: number, skipLocalPlayer: boolean = false) => {\r\n    if (!GameConstants.drawOtherRooms) {\r\n      this.room.draw(delta);\r\n      this.room.drawEntities(delta, true);\r\n    } else if (GameConstants.drawOtherRooms) {\r\n      // Create a sorted copy of the rooms array based on roomY + height\r\n      const sortedRooms = this.levels[this.currentDepth].rooms\r\n        .slice()\r\n        .sort((a, b) => {\r\n          const aPosition = a.roomY + a.height;\r\n          const bPosition = b.roomY + b.height;\r\n          return aPosition - bPosition; // Ascending order\r\n        });\r\n\r\n      for (const room of sortedRooms) {\r\n        if (room.active || (room.entered && room.onScreen)) {\r\n          room.draw(delta);\r\n          room.drawEntities(delta, skipLocalPlayer);\r\n          //room.drawShade(delta); // this used to come after the color layer\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  drawRoomShadeAndColor = (delta: number) => {\r\n    for (const room of this.levels[this.currentDepth].rooms) {\r\n      if (room.active || room.entered) {\r\n        room.drawShadeLayer();\r\n        room.drawColorLayer();\r\n        room.drawBloomLayer(delta);\r\n        if (room.active) room.drawOverShade(delta);\r\n      }\r\n    }\r\n    for (const room of this.levels[this.currentDepth].rooms) {\r\n      if (room.active || room.entered) {\r\n      }\r\n    }\r\n  };\r\n\r\n  static measureText = (text: string): { width: number; height: number } => {\r\n    let w = 0;\r\n    for (const letter of text.toLowerCase()) {\r\n      if (letter === \" \") w += 4;\r\n      else\r\n        for (let i = 0; i < Game.letters.length; i++) {\r\n          if (Game.letters[i] === letter) {\r\n            w += Game.letter_widths[i] + 1;\r\n          }\r\n        }\r\n    }\r\n    return { width: w, height: Game.letter_height };\r\n  };\r\n\r\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\r\n    x = Math.round(x);\r\n    y = Math.round(y);\r\n\r\n    if (Game.letter_positions.length === 0) {\r\n      // calculate letter positions\r\n      for (let i = 0; i < Game.letter_widths.length; i++) {\r\n        if (i === 0) Game.letter_positions[0] = 0;\r\n        else\r\n          Game.letter_positions[i] =\r\n            Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\r\n      }\r\n    } else {\r\n      let dimensions = Game.measureText(text);\r\n      if (dimensions.width > 0) {\r\n        let key = text + Game.ctx.fillStyle;\r\n\r\n        if (!Game.text_rendering_canvases[key]) {\r\n          Game.text_rendering_canvases[key] = document.createElement(\"canvas\");\r\n          Game.text_rendering_canvases[key].width = dimensions.width;\r\n          Game.text_rendering_canvases[key].height = dimensions.height;\r\n          let bx = Game.text_rendering_canvases[key].getContext(\"2d\");\r\n\r\n          let letter_x = 0;\r\n          for (const letter of text.toLowerCase()) {\r\n            if (letter === \" \") letter_x += 4;\r\n            else\r\n              for (let i = 0; i < Game.letters.length; i++) {\r\n                if (Game.letters[i] === letter) {\r\n                  bx.drawImage(\r\n                    Game.fontsheet,\r\n                    Game.letter_positions[i] + 1,\r\n                    0,\r\n                    Game.letter_widths[i],\r\n                    Game.letter_height,\r\n                    letter_x,\r\n                    0,\r\n                    Game.letter_widths[i],\r\n                    Game.letter_height,\r\n                  );\r\n                  letter_x += Game.letter_widths[i] + 1;\r\n                }\r\n              }\r\n          }\r\n          bx.fillStyle = Game.ctx.fillStyle;\r\n          bx.globalCompositeOperation = \"source-in\";\r\n          bx.fillRect(\r\n            0,\r\n            0,\r\n            Game.text_rendering_canvases[key].width,\r\n            Game.text_rendering_canvases[key].height,\r\n          );\r\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\r\n        } else {\r\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  static fillTextOutline = (\r\n    text: string,\r\n    x: number,\r\n    y: number,\r\n    outlineColor: string,\r\n    fillColor: string,\r\n  ) => {\r\n    Game.ctx.fillStyle = outlineColor;\r\n    for (let xx = -1; xx <= 1; xx++) {\r\n      for (let yy = -1; yy <= 1; yy++) {\r\n        Game.fillText(text, x + xx, y + yy);\r\n      }\r\n    }\r\n    Game.ctx.fillStyle = fillColor;\r\n    Game.fillText(text, x, y);\r\n  };\r\n\r\n  drawStuff = (delta: number) => {\r\n    this.room.drawShadeLayer();\r\n    this.room.drawColorLayer();\r\n    this.room.drawBloomLayer(delta);\r\n    //this.room.drawShade(delta);\r\n    this.room.drawOverShade(delta);\r\n  };\r\n\r\n  drawStartScreen = (delta: number) => {\r\n    let startString = \"Welcome to Turnarchist\";\r\n\r\n    Game.ctx.globalAlpha = this.startScreenAlpha;\r\n    if (!this.started && !this.startedFadeOut) {\r\n      this.startScreenAlpha = 1;\r\n      if (this.startScreenAlpha <= 0) this.startScreenAlpha = 0;\r\n    } else if (!this.started && this.startedFadeOut) {\r\n      this.startScreenAlpha -= delta * 0.025;\r\n      if (this.startScreenAlpha <= 0) {\r\n        this.startScreenAlpha = 0;\r\n        this.started = true;\r\n        Sound.playAmbient();\r\n      }\r\n    }\r\n\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n\r\n    Game.fillText(\r\n      startString,\r\n      GameConstants.WIDTH / 2 - Game.measureText(startString).width / 2,\r\n      GameConstants.HEIGHT / 2 - Game.letter_height + 2,\r\n    );\r\n    let restartButton = \"Press space or click to start\";\r\n    if (this.isMobile) restartButton = \"Tap to start\";\r\n    Game.fillText(\r\n      restartButton,\r\n      GameConstants.WIDTH / 2 - Game.measureText(restartButton).width / 2,\r\n      GameConstants.HEIGHT / 2 + Game.letter_height + 5,\r\n    );\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    // Reset transformations to ensure the black background covers the entire canvas\r\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    //if (this.room) Game.ctx.fillStyle = this.room.shadeColor;\r\n    //else Game.ctx.fillStyle = \"black\";\r\n    //Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    if (this.levelState === LevelState.TRANSITIONING) {\r\n      this.screenShakeX = 0;\r\n      this.screenShakeY = 0;\r\n      this.screenShakeActive = false;\r\n\r\n      let levelOffsetX = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          -this.transitionX,\r\n        ),\r\n      );\r\n      let levelOffsetY = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          -this.transitionY,\r\n        ),\r\n      );\r\n      let playerOffsetX = levelOffsetX - this.transitionX;\r\n      let playerOffsetY = levelOffsetY - this.transitionY;\r\n\r\n      let playerCX =\r\n        (this.players[this.localPlayerID].x -\r\n          this.players[this.localPlayerID].drawX +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n      let playerCY =\r\n        (this.players[this.localPlayerID].y -\r\n          this.players[this.localPlayerID].drawY +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n\r\n      Game.ctx.translate(\r\n        -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\r\n        -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      let extraTileLerp = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          GameConstants.TILESIZE,\r\n        ),\r\n      );\r\n\r\n      let newLevelOffsetX = playerOffsetX;\r\n      let newLevelOffsetY = playerOffsetY;\r\n\r\n      if (this.sideTransition) {\r\n        if (this.sideTransitionDirection > 0) {\r\n          levelOffsetX += extraTileLerp;\r\n          newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\r\n        } else {\r\n          levelOffsetX -= extraTileLerp;\r\n          newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\r\n        }\r\n      } else if (this.upwardTransition) {\r\n        levelOffsetY -= extraTileLerp;\r\n        newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\r\n      } else {\r\n        levelOffsetY += extraTileLerp;\r\n        newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\r\n      }\r\n\r\n      let ditherFrame = Math.floor(\r\n        (7 * (Date.now() - this.transitionStartTime)) /\r\n          LevelConstants.LEVEL_TRANSITION_TIME,\r\n      );\r\n\r\n      Game.ctx.translate(levelOffsetX, levelOffsetY);\r\n      if (!GameConstants.drawOtherRooms) {\r\n        this.prevLevel.draw(delta);\r\n        this.prevLevel.drawEntities(delta);\r\n        this.prevLevel.drawColorLayer();\r\n        this.prevLevel.drawShade(delta);\r\n        this.prevLevel.drawOverShade(delta);\r\n\r\n        /*\r\n        for (\r\n          let x = this.prevLevel.roomX - 1;\r\n          x <= this.prevLevel.roomX + this.prevLevel.width;\r\n          x++\r\n        ) {\r\n          for (\r\n            let y = this.prevLevel.roomY - 1;\r\n            y <= this.prevLevel.roomY + this.prevLevel.height;\r\n            y++\r\n          ) {\r\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n          }\r\n        }\r\n      \r\n      */\r\n      }\r\n      Game.ctx.translate(-levelOffsetX, -levelOffsetY);\r\n\r\n      Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\r\n\r\n      if (GameConstants.drawOtherRooms) {\r\n        this.drawRooms(delta, true);\r\n\r\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\r\n        Game.ctx.translate(playerOffsetX, playerOffsetY);\r\n        this.players[this.localPlayerID].draw(delta); // draw the translation\r\n\r\n        Game.ctx.translate(-playerOffsetX, -playerOffsetY);\r\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\r\n\r\n        this.drawRoomShadeAndColor(delta);\r\n      }\r\n\r\n      for (\r\n        let x = this.room.roomX - 1;\r\n        x <= this.room.roomX + this.room.width;\r\n        x++\r\n      ) {\r\n        for (\r\n          let y = this.room.roomY - 1;\r\n          y <= this.room.roomY + this.room.height;\r\n          y++\r\n        ) {\r\n          //Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n        }\r\n      }\r\n\r\n      //this.drawStuff(delta);\r\n\r\n      Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\r\n\r\n      Game.ctx.translate(\r\n        Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\r\n        Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      this.players[this.localPlayerID].drawGUI(delta);\r\n\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n    } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\r\n      let playerCX =\r\n        (this.players[this.localPlayerID].x -\r\n          this.players[this.localPlayerID].drawX +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n      let playerCY =\r\n        (this.players[this.localPlayerID].y -\r\n          this.players[this.localPlayerID].drawY +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n\r\n      Game.ctx.translate(\r\n        -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\r\n        -Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      let deadFrames = 6;\r\n      let ditherFrame = Math.floor(\r\n        ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\r\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER,\r\n      );\r\n\r\n      if (ditherFrame < 7) {\r\n        this.drawRooms(delta);\r\n        this.drawRoomShadeAndColor(delta);\r\n\r\n        if (!GameConstants.drawOtherRooms) {\r\n          for (\r\n            let x = this.room.roomX - 1;\r\n            x <= this.room.roomX + this.room.width;\r\n            x++\r\n          ) {\r\n            for (\r\n              let y = this.room.roomY - 1;\r\n              y <= this.room.roomY + this.room.height;\r\n              y++\r\n            ) {\r\n              Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n            }\r\n          }\r\n        }\r\n      } else if (ditherFrame >= 7 + deadFrames) {\r\n        if (this.transitioningLadder) {\r\n          this.prevLevel = this.room;\r\n          this.room.exitLevel();\r\n          this.room = this.transitioningLadder.linkedLevel;\r\n\r\n          //this.players[this.localPlayerID].levelID = this.room.id;\r\n          this.room.enterLevel(this.players[this.localPlayerID]);\r\n          this.transitioningLadder = null;\r\n        }\r\n\r\n        this.drawRooms(delta);\r\n        this.drawRoomShadeAndColor(delta);\r\n\r\n        //        this.room.draw(delta);\r\n        //        this.room.drawEntities(delta);\r\n        //        this.drawStuff(delta);\r\n        if (!GameConstants.drawOtherRooms) {\r\n          for (\r\n            let x = this.room.roomX - 1;\r\n            x <= this.room.roomX + this.room.width;\r\n            x++\r\n          ) {\r\n            for (\r\n              let y = this.room.roomY - 1;\r\n              y <= this.room.roomY + this.room.height;\r\n              y++\r\n            ) {\r\n              Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      Game.ctx.translate(\r\n        Math.round(playerCX - 0.5 * GameConstants.WIDTH),\r\n        Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      this.players[this.localPlayerID].drawGUI(delta);\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n    } else if (this.levelState === LevelState.LEVEL_GENERATION) {\r\n      this.levelgen.draw(delta);\r\n    } else if (this.levelState === LevelState.IN_LEVEL) {\r\n      // Start of Selection\r\n\r\n      this.drawScreenShake(delta);\r\n\r\n      let playerDrawX = this.players[this.localPlayerID].drawX;\r\n      let playerDrawY = this.players[this.localPlayerID].drawY;\r\n\r\n      let cameraX = Math.round(\r\n        (this.players[this.localPlayerID].x - playerDrawX + 0.5) *\r\n          GameConstants.TILESIZE -\r\n          0.5 * GameConstants.WIDTH -\r\n          this.screenShakeX,\r\n      );\r\n      let cameraY = Math.round(\r\n        (this.players[this.localPlayerID].y - playerDrawY + 0.5) *\r\n          GameConstants.TILESIZE -\r\n          0.5 * GameConstants.HEIGHT -\r\n          this.screenShakeY,\r\n      );\r\n\r\n      Game.ctx.translate(-cameraX, -cameraY);\r\n      this.drawRooms(delta);\r\n      this.drawRoomShadeAndColor(delta);\r\n\r\n      //      this.room.draw(delta);\r\n      //      this.room.drawEntities(delta);\r\n\r\n      // this.drawStuff(delta);\r\n\r\n      Game.ctx.translate(cameraX, cameraY);\r\n\r\n      this.room.drawTopLayer(delta);\r\n      this.players[this.localPlayerID].drawGUI(delta);\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n    }\r\n    let CHAT_X = 10;\r\n    let CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 32;\r\n    let CHAT_OPACITY = 0.5;\r\n    if (this.chatOpen) {\r\n      Game.ctx.fillStyle = \"black\";\r\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      Game.ctx.globalAlpha = 1;\r\n      Game.ctx.fillStyle = \"white\";\r\n      Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\r\n      const cursorX = Game.measureText(\r\n        this.chatTextBox.text.substring(0, this.chatTextBox.cursor),\r\n      ).width;\r\n      Game.ctx.fillRect(CHAT_X + cursorX, CHAT_BOTTOM_Y, 1, Game.letter_height);\r\n    }\r\n    for (let i = 0; i < this.chat.length; i++) {\r\n      Game.ctx.fillStyle = \"white\";\r\n      if (this.chat[i][0] === \"/\") Game.ctx.fillStyle = GameConstants.GREEN;\r\n      let y =\r\n        CHAT_BOTTOM_Y - (this.chat.length - 1 - i) * (Game.letter_height + 1);\r\n      if (this.chatOpen) y -= Game.letter_height + 1;\r\n\r\n      let age = Date.now() - this.chat[i].timestamp;\r\n      if (this.chatOpen) {\r\n        Game.ctx.globalAlpha = 1;\r\n      } else {\r\n        if (age <= GameConstants.CHAT_APPEAR_TIME) {\r\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = CHAT_OPACITY;\r\n        } else if (\r\n          age <=\r\n          GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME\r\n        ) {\r\n          if (GameConstants.ALPHA_ENABLED)\r\n            Game.ctx.globalAlpha =\r\n              CHAT_OPACITY *\r\n              (1 -\r\n                (age - GameConstants.CHAT_APPEAR_TIME) /\r\n                  GameConstants.CHAT_FADE_TIME);\r\n        } else {\r\n          Game.ctx.globalAlpha = 0;\r\n        }\r\n      }\r\n      Game.fillText(this.chat[i].message, CHAT_X, y);\r\n    }\r\n\r\n    // game version\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(\r\n      GameConstants.VERSION,\r\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\r\n      1,\r\n    );\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    // fps\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(fps + \"fps\", 1, 1);\r\n    Game.ctx.globalAlpha = 1;\r\n    if (!this.started && this.levelState !== LevelState.LEVEL_GENERATION) {\r\n      this.drawStartScreen(delta * 10);\r\n    }\r\n    MouseCursor.getInstance().draw();\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawScreenShake = (delta: number) => {\r\n    if (!this.screenShakeActive) {\r\n      this.resetScreenShake();\r\n      return;\r\n    }\r\n\r\n    this.shakeAmountX *= 0.9 ** delta;\r\n    this.shakeAmountY *= 0.9 ** delta;\r\n    this.screenShakeX = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountX;\r\n    this.screenShakeY = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountY;\r\n    this.shakeFrame += 0.3 * delta;\r\n\r\n    if (\r\n      Math.abs(this.shakeAmountX) < 0.5 &&\r\n      Math.abs(this.shakeAmountY) < 0.5\r\n    ) {\r\n      this.resetScreenShake();\r\n    }\r\n  };\r\n\r\n  private resetScreenShake = () => {\r\n    this.shakeAmountX = 0;\r\n    this.shakeAmountY = 0;\r\n    this.shakeFrame = 0;\r\n    this.screenShakeX = 0;\r\n    this.screenShakeY = 0;\r\n    this.screenShakeActive = false;\r\n  };\r\n\r\n  static drawHelper = (\r\n    set: HTMLImageElement,\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    // Snap to nearest shading increment\r\n    shadeOpacity =\r\n      Math.round(shadeOpacity * GameConstants.SHADE_LEVELS) /\r\n      GameConstants.SHADE_LEVELS;\r\n\r\n    // Include shadeColor in the cache key\r\n    let key = getShadeCanvasKey(set, sX, sY, sW, sH, shadeOpacity, shadeColor);\r\n\r\n    if (!Game.shade_canvases[key]) {\r\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\r\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\r\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\r\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\r\n\r\n      shCtx.clearRect(\r\n        0,\r\n        0,\r\n        Game.shade_canvases[key].width,\r\n        Game.shade_canvases[key].height,\r\n      );\r\n\r\n      shCtx.globalCompositeOperation = \"source-over\";\r\n      shCtx.drawImage(\r\n        set,\r\n        Math.round(sX * GameConstants.TILESIZE),\r\n        Math.round(sY * GameConstants.TILESIZE),\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n        0,\r\n        0,\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n      );\r\n\r\n      shCtx.globalAlpha = shadeOpacity;\r\n      shCtx.fillStyle = shadeColor;\r\n      shCtx.fillRect(\r\n        0,\r\n        0,\r\n        Game.shade_canvases[key].width,\r\n        Game.shade_canvases[key].height,\r\n      );\r\n      shCtx.globalAlpha = 1.0;\r\n\r\n      shCtx.globalCompositeOperation = \"destination-in\";\r\n      shCtx.drawImage(\r\n        set,\r\n        Math.round(sX * GameConstants.TILESIZE),\r\n        Math.round(sY * GameConstants.TILESIZE),\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n        0,\r\n        0,\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n      );\r\n    }\r\n\r\n    Game.ctx.drawImage(\r\n      Game.shade_canvases[key],\r\n      Math.round(dX * GameConstants.TILESIZE),\r\n      Math.round(dY * GameConstants.TILESIZE),\r\n      Math.round(dW * GameConstants.TILESIZE),\r\n      Math.round(dH * GameConstants.TILESIZE),\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  static drawTile = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.tileset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n    );\r\n  };\r\n\r\n  static drawObj = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.objset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n    );\r\n  };\r\n\r\n  static drawMob = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.mobset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n    );\r\n  };\r\n\r\n  static drawItem = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.itemset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n    );\r\n  };\r\n\r\n  static drawFX = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.fxset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n    );\r\n  };\r\n\r\n  private handleWindowBlur = () => {\r\n    // Start a timeout when window loses focus\r\n    this.focusTimeout = window.setTimeout(() => {\r\n      // Store current state\r\n      this.wasMuted = Sound.audioMuted;\r\n      this.wasStarted = this.started;\r\n\r\n      // Mute audio and pause game\r\n      Sound.audioMuted = true;\r\n      this.started = false;\r\n      this.paused = true;\r\n\r\n      // Optional: Show a message in chat\r\n      this.pushMessage(\"Game paused - window inactive\");\r\n    }, this.FOCUS_TIMEOUT_DURATION);\r\n  };\r\n\r\n  private handleWindowFocus = () => {\r\n    // Clear the timeout if it exists\r\n    if (this.focusTimeout) {\r\n      clearTimeout(this.focusTimeout);\r\n      this.focusTimeout = null;\r\n    }\r\n\r\n    // If game was paused due to inactivity, restore previous state\r\n    if (this.paused) {\r\n      Sound.audioMuted = this.wasMuted;\r\n      this.started = this.wasStarted;\r\n      this.paused = false;\r\n\r\n      // Optional: Show a message in chat\r\n      this.pushMessage(\"Game resumed\");\r\n    }\r\n  };\r\n\r\n  destroy() {\r\n    window.removeEventListener(\"blur\", this.handleWindowBlur);\r\n    window.removeEventListener(\"focus\", this.handleWindowFocus);\r\n    if (this.focusTimeout) {\r\n      clearTimeout(this.focusTimeout);\r\n    }\r\n  }\r\n}\r\n\r\nlet game = new Game();\r\n","import { Armor } from \"./item/armor\";\r\nimport { Backpack } from \"./item/backpack\";\r\nimport { Candle } from \"./item/candle\";\r\nimport { Coal } from \"./item/coal\";\r\nimport { EntitySpawner } from \"./item/entitySpawner\";\r\nimport { GodStone } from \"./item/godStone\";\r\nimport { Heart } from \"./item/heart\";\r\nimport { Key } from \"./item/key\";\r\nimport { Lantern } from \"./item/lantern\";\r\nimport { Torch } from \"./item/torch\";\r\nimport { WeaponBlood } from \"./item/weaponBlood\";\r\nimport { WeaponFragments } from \"./item/weaponFragments\";\r\nimport { WeaponPoison } from \"./item/weaponPoison\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { Dagger } from \"./weapon/dagger\";\r\nimport { DualDagger } from \"./weapon/dualdagger\";\r\nimport { Spear } from \"./weapon/spear\";\r\nimport { Spellbook } from \"./weapon/spellbook\";\r\nimport { Warhammer } from \"./weapon/warhammer\";\r\nimport { Hammer } from \"./item/hammer\";\r\nimport { SpellbookPage } from \"./item/spellbookPage\";\r\nimport { BombItem } from \"./item/bombItem\";\r\nimport { BestiaryBook } from \"./item/bestiaryBook\";\r\n\r\nexport class GameConstants {\r\n  static readonly VERSION = \"v1.0.4\"; //\"v0.6.3\";\r\n  static DEVELOPER_MODE = false;\r\n  static isMobile = false;\r\n\r\n  static readonly FPS = 120;\r\n  static readonly ALPHA_ENABLED = true;\r\n  static readonly SHADE_LEVELS = 50;\r\n\r\n  static readonly TILESIZE = 16;\r\n  static SCALE = 6;\r\n  static readonly MAX_SCALE = 10;\r\n  static readonly MIN_SCALE = 1;\r\n\r\n  static readonly SWIPE_THRESH = 25 ** 2; // (size of swipe threshold circle)^2\r\n  static readonly HOLD_THRESH = 250; // milliseconds\r\n\r\n  static readonly KEY_REPEAT_TIME = 500; // millseconds\r\n  static readonly MOVEMENT_COOLDOWN = 150; // milliseconds\r\n\r\n  static readonly CHAT_APPEAR_TIME = 2500;\r\n  static readonly CHAT_FADE_TIME = 500;\r\n  static ANIMATION_SPEED = 1;\r\n\r\n  static readonly DEFAULTWIDTH = GameConstants.TILESIZE;\r\n  static readonly DEFAULTHEIGHT = GameConstants.TILESIZE;\r\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\r\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\r\n\r\n  static drawOtherRooms = true;\r\n\r\n  static readonly SCRIPT_FONT_SIZE = 16;\r\n  static readonly FONT_SIZE = 7;\r\n  static readonly BIG_FONT_SIZE = 15;\r\n\r\n  static readonly RED = \"#ac3232\";\r\n  static readonly WARNING_RED = \"#ff0000\";\r\n  static readonly GREEN = \"#6abe30\";\r\n  static readonly ARMOR_GREY = \"#9badb7\";\r\n  static readonly OUTLINE = \"#222034\";\r\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\r\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\r\n  static readonly MISS_COLOR = \"#639bff\";\r\n\r\n  static CUSTOM_SHADER_COLOR_ENABLED = false;\r\n\r\n  static COLOR_LAYER_COMPOSITE_OPERATION = \"soft-light\"; //\"soft-light\";\r\n  static SHADE_LAYER_COMPOSITE_OPERATION = \"screen\"; //\"soft-light\";\r\n  static USE_OPTIMIZED_SHADING = false;\r\n  static SMOOTH_LIGHTING = false;\r\n  static ctxBlurEnabled = true;\r\n  static BLUR_ENABLED = true;\r\n\r\n  static readonly COLOR_LAYER_COMPOSITE_OPERATIONS = [\r\n    \"soft-light\",\r\n    //\"addition\",\r\n    //\"darken\",\r\n    \"overlay\",\r\n    //\"hue\",\r\n    //\"source-over\",\r\n    //\"screen\",\r\n    \"multiply\",\r\n    //\"difference\",\r\n    //\"exclusion\",\r\n    //\"luminosity\",\r\n    //\"color-dodge\",\r\n    //\"color-burn\",\r\n    //\"hard-light\",\r\n    //\"soft-light\",\r\n    //\"lighten\",\r\n  ];\r\n\r\n  static readonly SET_COLOR_LAYER_COMPOSITE_OPERATION = (\r\n    shade?: boolean,\r\n    back: boolean = false,\r\n  ) => {\r\n    let operation = shade\r\n      ? GameConstants.SHADE_LAYER_COMPOSITE_OPERATION\r\n      : GameConstants.COLOR_LAYER_COMPOSITE_OPERATION;\r\n    const currentIndex =\r\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.indexOf(operation);\r\n    let nextIndex;\r\n\r\n    if (back) {\r\n      // Decrement the index to move backward in the operations array\r\n      nextIndex =\r\n        (currentIndex -\r\n          1 +\r\n          GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length) %\r\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\r\n    } else {\r\n      // Increment the index to move forward in the operations array\r\n      nextIndex =\r\n        (currentIndex + 1) %\r\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\r\n    }\r\n\r\n    operation = GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS[nextIndex];\r\n\r\n    if (shade) {\r\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATION = operation;\r\n    } else {\r\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATION = operation;\r\n    }\r\n\r\n    console.log(`Color layer composite operation set to ${operation}`);\r\n  };\r\n\r\n  static readonly TOGGLE_USE_OPTIMIZED_SHADING = () => {\r\n    GameConstants.USE_OPTIMIZED_SHADING = !GameConstants.USE_OPTIMIZED_SHADING;\r\n  };\r\n\r\n  static readonly SET_SCALE = () => {\r\n    GameConstants.SCALE++;\r\n    if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\r\n      GameConstants.SCALE = GameConstants.MIN_SCALE;\r\n    }\r\n  };\r\n\r\n  static readonly INCREASE_SCALE = () => {\r\n    if (GameConstants.SCALE < GameConstants.MAX_SCALE) {\r\n      GameConstants.SCALE++;\r\n      if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\r\n        GameConstants.SCALE = GameConstants.MIN_SCALE;\r\n      }\r\n    }\r\n  };\r\n\r\n  static readonly DECREASE_SCALE = () => {\r\n    if (GameConstants.SCALE > GameConstants.MIN_SCALE) {\r\n      GameConstants.SCALE--;\r\n      if (GameConstants.SCALE < GameConstants.MIN_SCALE) {\r\n        GameConstants.SCALE = GameConstants.MAX_SCALE;\r\n      }\r\n    }\r\n  };\r\n\r\n  static readonly STARTING_INVENTORY = [Dagger, Torch];\r\n  static readonly STARTING_DEV_INVENTORY = [\r\n    Dagger,\r\n    Warhammer,\r\n    BestiaryBook,\r\n    Torch,\r\n    GodStone,\r\n    Candle,\r\n    Spear,\r\n    WeaponPoison,\r\n    WeaponBlood,\r\n    Spellbook,\r\n    Armor,\r\n    Heart,\r\n    Backpack,\r\n    Hammer,\r\n    Coal,\r\n    Coal,\r\n\r\n    Coal,\r\n    Coal,\r\n    Coal,\r\n    Coal,\r\n\r\n    WeaponFragments,\r\n    WeaponFragments,\r\n    WeaponFragments,\r\n  ];\r\n}\r\n","import { Barrel } from \"./entity/object/barrel\";\r\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\r\nimport { ChargeEnemy, ChargeEnemyState } from \"./entity/enemy/chargeEnemy\";\r\nimport { Chest } from \"./entity/object/chest\";\r\nimport { CoalResource } from \"./entity/resource/coalResource\";\r\nimport { Crate } from \"./entity/object/crate\";\r\nimport { EmeraldResource } from \"./entity/resource/emeraldResource\";\r\nimport { Entity, EntityDirection } from \"./entity/entity\";\r\nimport { GoldResource } from \"./entity/resource/goldResource\";\r\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\r\nimport { PottedPlant } from \"./entity/object/pottedPlant\";\r\nimport { Pot } from \"./entity/object/pot\";\r\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\r\nimport { CrabEnemy } from \"./entity/enemy/crabEnemy\";\r\nimport { Spawner } from \"./entity/enemy/spawner\";\r\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\r\nimport { WizardEnemy, WizardState } from \"./entity/enemy/wizardEnemy\";\r\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\r\nimport { Direction, Game } from \"./game\";\r\nimport { HitWarning } from \"./hitWarning\";\r\nimport { Inventory } from \"./inventory\";\r\nimport { Armor } from \"./item/armor\";\r\nimport { BlueGem } from \"./item/bluegem\";\r\nimport { Candle } from \"./item/candle\";\r\nimport { Coal } from \"./item/coal\";\r\nimport { Coin } from \"./item/coin\";\r\nimport { Equippable } from \"./item/equippable\";\r\nimport { Gold } from \"./item/gold\";\r\nimport { GoldenKey } from \"./item/goldenKey\";\r\nimport { GreenGem } from \"./item/greengem\";\r\nimport { Heart } from \"./item/heart\";\r\nimport { Item } from \"./item/item\";\r\nimport { Key } from \"./item/key\";\r\nimport { Lantern } from \"./item/lantern\";\r\nimport { RedGem } from \"./item/redgem\";\r\nimport { Torch } from \"./item/torch\";\r\nimport { Room } from \"./room\";\r\nimport { LevelGenerator } from \"./levelGenerator\";\r\nimport { Player, PlayerDirection } from \"./player\";\r\nimport { EnemySpawnAnimation } from \"./projectile/enemySpawnAnimation\";\r\nimport { Projectile } from \"./projectile/projectile\";\r\nimport { WizardFireball } from \"./projectile/wizardFireball\";\r\nimport { Random } from \"./random\";\r\nimport { Dagger } from \"./weapon/dagger\";\r\nimport { DualDagger } from \"./weapon/dualdagger\";\r\nimport { Shotgun } from \"./weapon/shotgun\";\r\nimport { Spear } from \"./weapon/spear\";\r\nimport { Weapon } from \"./weapon/weapon\";\r\nimport { Pickaxe } from \"./weapon/pickaxe\";\r\nimport { Backpack } from \"./item/backpack\";\r\nimport { TutorialListener } from \"./tutorialListener\";\r\nimport { DoorType } from \"./tile/door\";\r\nimport { Mushrooms } from \"./entity/object/mushrooms\";\r\nimport { Pumpkin } from \"./entity/object/pumpkin\";\r\nimport { Block } from \"./entity/object/block\";\r\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\r\nimport { Level } from \"./level\";\r\nimport { globalEventBus } from \"./eventBus\";\r\nimport { EVENTS } from \"./events\";\r\n\r\nexport class HitWarningState {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n\r\n  constructor(hw: HitWarning) {\r\n    this.x = hw.x;\r\n    this.y = hw.y;\r\n    this.dead = hw.dead;\r\n  }\r\n}\r\n\r\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\r\n  let hw = new HitWarning(game, hws.x, hws.y, hws.x, hws.y);\r\n  hw.dead = hws.dead;\r\n  return hw;\r\n};\r\n\r\nexport enum ProjectileType {\r\n  SPAWN,\r\n  WIZARD,\r\n}\r\n\r\nexport class ProjectileState {\r\n  type: ProjectileType;\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  levelID: number;\r\n  enemySpawn: EnemyState;\r\n  wizardState: number;\r\n  wizardParentID: number;\r\n\r\n  constructor(projectile: Projectile, game: Game) {\r\n    this.x = projectile.x;\r\n    this.y = projectile.y;\r\n    this.dead = projectile.dead;\r\n    if (projectile instanceof EnemySpawnAnimation) {\r\n      this.type = ProjectileType.SPAWN;\r\n      this.levelID = game.rooms.indexOf(projectile.room);\r\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\r\n    }\r\n    if (projectile instanceof WizardFireball) {\r\n      this.type = ProjectileType.WIZARD;\r\n      this.wizardState = projectile.state;\r\n      this.levelID = game.rooms.indexOf(projectile.parent.room);\r\n      this.wizardParentID = projectile.parent.room.entities.indexOf(\r\n        projectile.parent,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\r\n  if (ps.type === ProjectileType.SPAWN) {\r\n    let level = game.rooms[ps.levelID];\r\n    let enemy = loadEnemy(ps.enemySpawn, game);\r\n    let p = new EnemySpawnAnimation(level, enemy, ps.x, ps.y);\r\n    p.dead = ps.dead;\r\n    return p;\r\n  }\r\n  if (ps.type === ProjectileType.WIZARD) {\r\n    let wizard = game.rooms[ps.levelID].entities[\r\n      ps.wizardParentID\r\n    ] as EnergyWizardEnemy;\r\n    let p = new WizardFireball(wizard, ps.x, ps.y);\r\n    p.state = ps.wizardState;\r\n    return p;\r\n  }\r\n};\r\n\r\nexport enum EnemyType {\r\n  BARREL,\r\n  BIGSKULL,\r\n  CHARGE,\r\n  CHEST,\r\n  COAL,\r\n  CRATE,\r\n  EMERALD,\r\n  GOLD,\r\n  KNIGHT,\r\n  PLANT,\r\n  SKULL,\r\n  CRAB,\r\n  SPAWNER,\r\n  VENDINGMACHINE,\r\n  WIZARD,\r\n  ZOMBIE,\r\n}\r\n\r\nexport class EnemyState {\r\n  type: EnemyType;\r\n  levelID: number;\r\n  x: number;\r\n  y: number;\r\n  health: number;\r\n  direction: Direction;\r\n  dead: boolean;\r\n  skipNextTurns: number;\r\n  hasDrop: boolean;\r\n  drop: ItemState;\r\n  alertTicks: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  targetPlayerID: string;\r\n  // skeleton\r\n  ticksSinceFirstHit: number;\r\n  // big skeleton\r\n  drops: Array<ItemState>;\r\n  // charge enemy\r\n  startX: number;\r\n  startY: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  visualTargetX: number;\r\n  visualTargetY: number;\r\n  chargeEnemyState: ChargeEnemyState;\r\n  // spawner\r\n  enemySpawnType: number;\r\n  // vending machine\r\n  isPlayerOpened: boolean;\r\n  playerOpenedID: string;\r\n  open: boolean;\r\n  costItems: Array<ItemState>;\r\n  item: ItemState;\r\n  isInf: boolean;\r\n  quantity: number;\r\n  // wizard\r\n  wizardState: WizardState;\r\n\r\n  constructor(enemy: Entity, game: Game) {\r\n    this.levelID = game.rooms.indexOf(enemy.room);\r\n    this.x = enemy.x;\r\n    this.y = enemy.y;\r\n    this.health = enemy.health;\r\n    this.direction = enemy.direction;\r\n    this.dead = enemy.dead;\r\n    this.skipNextTurns = enemy.skipNextTurns;\r\n    this.hasDrop = false;\r\n    if (enemy.drop) {\r\n      this.hasDrop = true;\r\n      this.drop = new ItemState(enemy.drop, game);\r\n    }\r\n    this.alertTicks = enemy.alertTicks;\r\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\r\n    if (enemy instanceof BigSkullEnemy) {\r\n      this.type = EnemyType.BIGSKULL;\r\n      this.ticks = enemy.ticks;\r\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n      this.drops = [];\r\n      for (const d of enemy.drops) this.drops.push(new ItemState(d, game));\r\n    }\r\n    if (enemy instanceof ChargeEnemy) {\r\n      this.type = EnemyType.CHARGE;\r\n      this.ticks = enemy.ticks;\r\n      this.chargeEnemyState = enemy.state;\r\n      this.startX = enemy.startX;\r\n      this.startY = enemy.startY;\r\n      this.targetX = enemy.targetX;\r\n      this.targetY = enemy.targetY;\r\n      this.visualTargetX = enemy.visualTargetX;\r\n      this.visualTargetY = enemy.visualTargetY;\r\n    }\r\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\r\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\r\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\r\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\r\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\r\n    if (enemy instanceof KnightEnemy) {\r\n      this.type = EnemyType.KNIGHT;\r\n      this.ticks = enemy.ticks;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n    }\r\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\r\n    if (enemy instanceof Pot) this.type = EnemyType.PLANT;\r\n    if (enemy instanceof SkullEnemy) {\r\n      this.type = EnemyType.SKULL;\r\n      this.ticks = enemy.ticks;\r\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n    }\r\n    if (enemy instanceof CrabEnemy) {\r\n      this.type = EnemyType.CRAB;\r\n      this.ticks = enemy.ticks;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n    }\r\n    if (enemy instanceof Spawner) {\r\n      this.type = EnemyType.SPAWNER;\r\n      this.ticks = enemy.ticks;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      this.enemySpawnType = enemy.enemySpawnType;\r\n    }\r\n    if (enemy instanceof VendingMachine) {\r\n      this.type = EnemyType.VENDINGMACHINE;\r\n      this.isPlayerOpened = false;\r\n      if (enemy.playerOpened) {\r\n        this.isPlayerOpened = true;\r\n        this.playerOpenedID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.playerOpened,\r\n        );\r\n        if (!this.playerOpenedID)\r\n          this.playerOpenedID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.playerOpened,\r\n          );\r\n      }\r\n      this.open = enemy.open;\r\n      this.costItems = [];\r\n      for (const item of enemy.costItems)\r\n        this.costItems.push(new ItemState(item, game));\r\n      this.item = new ItemState(enemy.item, game);\r\n      this.isInf = enemy.isInf;\r\n      this.quantity = enemy.quantity;\r\n    }\r\n    if (enemy instanceof WizardEnemy) {\r\n      this.type = EnemyType.WIZARD;\r\n      this.ticks = enemy.ticks;\r\n      this.wizardState = enemy.state;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n    }\r\n    if (enemy instanceof ZombieEnemy) {\r\n      this.type = EnemyType.ZOMBIE;\r\n      this.ticks = enemy.ticks;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nlet loadEnemy = (es: EnemyState, game: Game): Entity => {\r\n  let enemy;\r\n  let level = game.rooms[es.levelID];\r\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.BIGSKULL) {\r\n    enemy = new BigSkullEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n    enemy.drops = [];\r\n    for (const d of es.drops) enemy.drops.push(loadItem(d, game));\r\n  }\r\n  if (es.type === EnemyType.CHARGE) {\r\n    enemy = new ChargeEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.state = es.chargeEnemyState;\r\n    enemy.startX = es.startX;\r\n    enemy.startY = es.startY;\r\n    enemy.targetX = es.targetX;\r\n    enemy.targetY = es.targetY;\r\n    enemy.visualTargetX = es.visualTargetX;\r\n    enemy.visualTargetY = es.visualTargetY;\r\n  }\r\n  if (es.type === EnemyType.CHEST) enemy = new Chest(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.COAL)\r\n    enemy = new CoalResource(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.CRATE) enemy = new Crate(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.EMERALD)\r\n    enemy = new EmeraldResource(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.GOLD)\r\n    enemy = new GoldResource(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.KNIGHT) {\r\n    enemy = new KnightEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n  }\r\n  if (es.type === EnemyType.PLANT)\r\n    enemy = new PottedPlant(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.PLANT) enemy = new Pot(level, game, es.x, es.y);\r\n  if (es.type === EnemyType.SKULL) {\r\n    enemy = new SkullEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n  }\r\n  if (es.type === EnemyType.CRAB) {\r\n    enemy = new CrabEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n  }\r\n  if (es.type === EnemyType.SPAWNER) {\r\n    enemy = new Spawner(level, game, es.x, es.y, [es.enemySpawnType]);\r\n    enemy.ticks = es.ticks;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    enemy.enemySpawnType = es.enemySpawnType;\r\n  }\r\n  if (es.type === EnemyType.VENDINGMACHINE) {\r\n    let item = loadItem(es.item, game);\r\n    enemy = new VendingMachine(level, game, es.x, es.y, item);\r\n    if (es.isPlayerOpened) {\r\n      enemy.playerOpened = game.players[es.playerOpenedID];\r\n      if (!enemy.playerOpened)\r\n        enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\r\n    }\r\n    enemy.open = es.open;\r\n    enemy.costItems = [];\r\n    for (const item of es.costItems) enemy.costItems.push(loadItem(item, game));\r\n    enemy.isInf = es.isInf;\r\n    enemy.quantity = es.quantity;\r\n  }\r\n  if (es.type === EnemyType.WIZARD) {\r\n    enemy = new EnergyWizardEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.state = es.wizardState;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n  }\r\n  if (es.type === EnemyType.ZOMBIE) {\r\n    enemy = new ZombieEnemy(level, game, es.x, es.y);\r\n    enemy.ticks = es.ticks;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n  }\r\n\r\n  enemy.x = es.x;\r\n  enemy.y = es.y;\r\n  enemy.health = es.health;\r\n  enemy.direction = es.direction;\r\n  enemy.dead = es.dead;\r\n  enemy.skipNextTurns = es.skipNextTurns;\r\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\r\n  enemy.alertTicks = es.alertTicks;\r\n\r\n  return enemy;\r\n};\r\n\r\nexport class LevelState {\r\n  levelID: number;\r\n  entered: boolean;\r\n  enemies: Array<EnemyState>;\r\n  items: Array<ItemState>;\r\n  projectiles: Array<ProjectileState>;\r\n  hitwarnings: Array<HitWarningState>;\r\n\r\n  constructor(level: Room, game: Game) {\r\n    this.levelID = game.rooms.indexOf(level);\r\n    this.entered = level.entered;\r\n    this.enemies = [];\r\n    this.items = [];\r\n    this.projectiles = [];\r\n    this.hitwarnings = [];\r\n    for (const enemy of level.entities)\r\n      this.enemies.push(new EnemyState(enemy, game));\r\n    for (const item of level.items) this.items.push(new ItemState(item, game));\r\n    for (const projectile of level.projectiles)\r\n      this.projectiles.push(new ProjectileState(projectile, game));\r\n    for (const hw of level.hitwarnings)\r\n      this.hitwarnings.push(new HitWarningState(hw));\r\n  }\r\n}\r\n\r\nlet loadLevel = (level: Room, levelState: LevelState, game: Game) => {\r\n  level.entered = levelState.entered;\r\n  level.entities = [];\r\n  level.items = [];\r\n  level.projectiles = [];\r\n  level.hitwarnings = [];\r\n  for (const enemy of levelState.enemies)\r\n    level.entities.push(loadEnemy(enemy, game));\r\n  for (const item of levelState.items) level.items.push(loadItem(item, game));\r\n  for (const projectile of levelState.projectiles)\r\n    level.projectiles.push(loadProjectile(projectile, game));\r\n  for (const hw of levelState.hitwarnings)\r\n    level.hitwarnings.push(loadHitWarning(hw, game));\r\n};\r\n//use the other one\r\nexport enum ItemType {\r\n  ARMOR,\r\n  BLUEGEM,\r\n  CANDLE,\r\n  COAL,\r\n  COIN,\r\n  GOLD,\r\n  GOLDENKEY,\r\n  GREENGEM,\r\n  KEY,\r\n  LANTERN,\r\n  REDGEM,\r\n  TORCH,\r\n  DAGGER,\r\n  DUALDAGGER,\r\n  SHOTGUN,\r\n  SPEAR,\r\n  PICKAXE,\r\n  BACKPACK,\r\n  SPELLBOOK,\r\n  WEAPON_FRAGMENTS,\r\n  WARHAMMER,\r\n  HAMMER,\r\n  WEAPON_POISON,\r\n  WEAPON_BLOOD,\r\n  HEART,\r\n  MUSHROOMS,\r\n  STONE,\r\n  BLUE_POTION,\r\n}\r\n\r\nexport class ItemState {\r\n  type: ItemType;\r\n  x: number;\r\n  y: number;\r\n  levelID: number;\r\n  stackCount: number;\r\n  pickedUp: boolean;\r\n  equipped: boolean;\r\n\r\n  constructor(item: Item, game: Game) {\r\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\r\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\r\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\r\n    if (item instanceof Coal) this.type = ItemType.COAL;\r\n    if (item instanceof Coin) this.type = ItemType.COIN;\r\n    if (item instanceof Gold) this.type = ItemType.GOLD;\r\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\r\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\r\n    if (item instanceof Heart) this.type = ItemType.HEART;\r\n    if (item instanceof Key) this.type = ItemType.KEY;\r\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\r\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\r\n    if (item instanceof Torch) this.type = ItemType.TORCH;\r\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\r\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\r\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\r\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\r\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\r\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\r\n\r\n    this.equipped = item instanceof Equippable && item.equipped;\r\n    this.x = item.x;\r\n    this.y = item.y;\r\n    this.levelID = game.rooms.indexOf(item.level);\r\n    if (this.levelID === -1) this.levelID = 0;\r\n    this.stackCount = item.stackCount;\r\n    this.pickedUp = item.pickedUp;\r\n  }\r\n}\r\n\r\nlet loadItem = (i: ItemState, game: Game, player?: Player): Item => {\r\n  let level = game.rooms[i.levelID];\r\n  let item;\r\n  if (i.type === ItemType.ARMOR) item = new Armor(level, i.x, i.y);\r\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(level, i.x, i.y);\r\n  if (i.type === ItemType.CANDLE) item = new Candle(level, i.x, i.y);\r\n  if (i.type === ItemType.COAL) item = new Coal(level, i.x, i.y);\r\n  if (i.type === ItemType.COIN) item = new Coin(level, i.x, i.y);\r\n  if (i.type === ItemType.GOLD) item = new Gold(level, i.x, i.y);\r\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(level, i.x, i.y);\r\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(level, i.x, i.y);\r\n  if (i.type === ItemType.HEART) item = new Heart(level, i.x, i.y);\r\n  if (i.type === ItemType.KEY) item = new Key(level, i.x, i.y);\r\n  if (i.type === ItemType.LANTERN) item = new Lantern(level, i.x, i.y);\r\n  if (i.type === ItemType.REDGEM) item = new RedGem(level, i.x, i.y);\r\n  if (i.type === ItemType.TORCH) item = new Torch(level, i.x, i.y);\r\n  if (i.type === ItemType.DAGGER) {\r\n    item = new Dagger(level, i.x, i.y);\r\n  }\r\n  if (i.type === ItemType.DUALDAGGER) {\r\n    item = new DualDagger(level, i.x, i.y);\r\n  }\r\n  if (i.type === ItemType.SHOTGUN) {\r\n    item = new Shotgun(level, i.x, i.y);\r\n  }\r\n  if (i.type === ItemType.SPEAR) {\r\n    item = new Spear(level, i.x, i.y);\r\n  }\r\n  if (i.type === ItemType.PICKAXE) {\r\n    item = new Pickaxe(level, i.x, i.y);\r\n  }\r\n  if (i.type === ItemType.BACKPACK) {\r\n    item = new Backpack(level, i.x, i.y);\r\n  }\r\n  if (i.equipped) item.equipped = true;\r\n  if (item instanceof Equippable) item.setWielder(player);\r\n  item.stackCount = i.stackCount;\r\n  item.pickedUp = i.pickedUp;\r\n  return item;\r\n};\r\n\r\nexport class InventoryState {\r\n  isOpen: boolean;\r\n  cols: number;\r\n  rows: number;\r\n  selX: number;\r\n  selY: number;\r\n  equipAnimAmount: Array<number>;\r\n  isWeaponEquipped: boolean;\r\n  weaponI: number;\r\n  coins: number;\r\n  items: Array<ItemState>;\r\n\r\n  constructor(inventory: Inventory, game: Game) {\r\n    this.isOpen = inventory.isOpen;\r\n    this.cols = inventory.cols;\r\n    this.rows = inventory.rows;\r\n    this.equipAnimAmount = inventory.equipAnimAmount.map((x) => x);\r\n    this.isWeaponEquipped = false;\r\n    if (inventory.weapon) {\r\n      this.isWeaponEquipped = true;\r\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\r\n    }\r\n    this.coins = inventory.coins;\r\n    this.selX = inventory.selX;\r\n    this.selY = inventory.selY;\r\n    this.items = Array<ItemState>();\r\n    for (const item of inventory.items) {\r\n      this.items.push(new ItemState(item, game));\r\n    }\r\n  }\r\n}\r\n\r\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\r\n  inventory.clear();\r\n  inventory.isOpen = i.isOpen;\r\n  inventory.cols = i.cols;\r\n  inventory.rows = i.rows;\r\n  inventory.selX = i.selX;\r\n  inventory.selY = i.selY;\r\n  inventory.equipAnimAmount = i.equipAnimAmount.map((x) => x);\r\n  inventory.coins = i.coins;\r\n  for (const item of i.items)\r\n    inventory.items.push(loadItem(item, game, inventory.player));\r\n\r\n  if (i.isWeaponEquipped)\r\n    inventory.weapon = inventory.items[i.weaponI] as Weapon;\r\n};\r\n\r\nexport class PlayerState {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  levelID: number;\r\n  direction: Direction;\r\n  health: number;\r\n  maxHealth: number;\r\n  lastTickHealth: number;\r\n  inventory: InventoryState;\r\n  hasOpenVendingMachine: boolean;\r\n  openVendingMachineLevelID: number;\r\n  openVendingMachineID: number;\r\n  sightRadius: number;\r\n\r\n  constructor(player: Player, game: Game) {\r\n    this.x = player.x;\r\n    this.y = player.y;\r\n    this.dead = player.dead;\r\n    this.levelID = player.levelID;\r\n    this.direction = player.direction;\r\n    this.health = player.health;\r\n    this.maxHealth = player.maxHealth;\r\n    this.lastTickHealth = player.lastTickHealth;\r\n    this.inventory = new InventoryState(player.inventory, game);\r\n    this.hasOpenVendingMachine = false;\r\n    if (player.openVendingMachine) {\r\n      this.hasOpenVendingMachine = true;\r\n      this.openVendingMachineLevelID = game.rooms.indexOf(\r\n        player.openVendingMachine.room,\r\n      );\r\n      this.openVendingMachineID =\r\n        player.openVendingMachine.room.entities.indexOf(\r\n          player.openVendingMachine,\r\n        );\r\n    }\r\n    this.sightRadius = player.sightRadius;\r\n  }\r\n}\r\n\r\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\r\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\r\n  player.dead = p.dead;\r\n\r\n  player.levelID = p.levelID;\r\n  if (player.levelID < game.levelgen.currentFloorFirstLevelID) {\r\n    // catch up to the current level\r\n    player.levelID = game.levelgen.currentFloorFirstLevelID;\r\n    player.x =\r\n      game.rooms[player.levelID].roomX +\r\n      Math.floor(game.rooms[player.levelID].width / 2);\r\n    player.y =\r\n      game.rooms[player.levelID].roomY +\r\n      Math.floor(game.rooms[player.levelID].height / 2);\r\n  }\r\n  player.direction = p.direction;\r\n  player.health = p.health;\r\n  player.maxHealth = p.maxHealth;\r\n  player.lastTickHealth = p.lastTickHealth;\r\n  loadInventory(player.inventory, p.inventory, game);\r\n  if (p.hasOpenVendingMachine) {\r\n    player.openVendingMachine = game.rooms[p.openVendingMachineLevelID]\r\n      .entities[p.openVendingMachineID] as VendingMachine;\r\n  }\r\n  player.sightRadius = p.sightRadius;\r\n\r\n  return player;\r\n};\r\n\r\nexport class GameState {\r\n  seed: number;\r\n  randomState: number;\r\n  depth: number;\r\n  players: Record<string, PlayerState>;\r\n  offlinePlayers: Record<string, PlayerState>;\r\n  levels: Array<LevelState>;\r\n\r\n  constructor() {\r\n    this.seed = 0;\r\n    this.randomState = 0;\r\n    this.depth = 0;\r\n    this.players = {};\r\n    this.offlinePlayers = {};\r\n    this.levels = [];\r\n  }\r\n}\r\n\r\nexport const createGameState = (game: Game): GameState => {\r\n  let gs = new GameState();\r\n  gs.seed = game.levelgen.seed; // random state for generating levels\r\n  gs.randomState = Random.state; // current random state\r\n  gs.depth = game.level.depth;\r\n  for (const i in game.players)\r\n    gs.players[i] = new PlayerState(game.players[i], game);\r\n  for (const i in game.offlinePlayers) {\r\n    gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\r\n  }\r\n  for (let level of game.rooms) {\r\n    level.catchUp();\r\n    gs.levels.push(new LevelState(level, game));\r\n  }\r\n  return gs;\r\n};\r\n\r\nexport const loadGameState = (\r\n  game: Game,\r\n  activeUsernames: Array<string>,\r\n  gameState: GameState,\r\n  newWorld: boolean,\r\n) => {\r\n  game.rooms = Array<Room>();\r\n\r\n  game.levelgen = new LevelGenerator();\r\n  game.levelgen.setSeed(gameState.seed);\r\n  if (newWorld) gameState.depth = 0;\r\n  globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\r\n  game.levelgen.generateFirstNFloors(game, gameState.depth).then(() => {\r\n    globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\r\n    if (!newWorld) {\r\n      if (gameState.players) {\r\n        for (const i in gameState.players) {\r\n          if (activeUsernames.includes(i))\r\n            game.players[i] = loadPlayer(i, gameState.players[i], game);\r\n          else\r\n            game.offlinePlayers[i] = loadPlayer(i, gameState.players[i], game);\r\n        }\r\n      }\r\n      if (gameState.offlinePlayers) {\r\n        for (const i in gameState.offlinePlayers) {\r\n          if (i === game.localPlayerID)\r\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\r\n          else if (activeUsernames.includes(i))\r\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\r\n          else\r\n            game.offlinePlayers[i] = loadPlayer(\r\n              i,\r\n              gameState.offlinePlayers[i],\r\n              game,\r\n            );\r\n        }\r\n      }\r\n      for (let levelState of gameState.levels) {\r\n        for (let i = 0; i < game.rooms.length; i++) {\r\n          if (i === levelState.levelID) {\r\n            loadLevel(game.rooms[i], levelState, game);\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        !(game.localPlayerID in gameState.players) &&\r\n        !(game.localPlayerID in gameState.offlinePlayers)\r\n      ) {\r\n        // we're not in the gamestate, create a new player\r\n        game.players[game.localPlayerID] = new Player(game, 0, 0, true);\r\n        game.players[game.localPlayerID].levelID =\r\n          game.levelgen.currentFloorFirstLevelID;\r\n        game.players[game.localPlayerID].x =\r\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomX +\r\n          Math.floor(\r\n            game.rooms[game.levelgen.currentFloorFirstLevelID].width / 2,\r\n          );\r\n        game.players[game.localPlayerID].y =\r\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomY +\r\n          Math.floor(\r\n            game.rooms[game.levelgen.currentFloorFirstLevelID].height / 2,\r\n          );\r\n        game.room = game.rooms[game.levelgen.currentFloorFirstLevelID];\r\n\r\n        game.room.enterLevel(game.players[game.localPlayerID]);\r\n      } else {\r\n        game.room = game.rooms[game.players[game.localPlayerID].levelID];\r\n      }\r\n    } else {\r\n      // stub game state, start a new world\r\n      game.players[game.localPlayerID] = new Player(game, 0, 0, true);\r\n      game.room = game.rooms[game.players[game.localPlayerID].levelID];\r\n      game.room.enterLevel(game.players[game.localPlayerID]);\r\n    }\r\n    Random.setState(gameState.randomState);\r\n    game.room.updateLighting();\r\n    let p = game.players[game.localPlayerID];\r\n    game.room.items.push(new Key(game.room, p.x - 1, p.y + 1));\r\n\r\n    //choose one door to lock\r\n    let locked = false;\r\n    game.room.doors.forEach((door) => {\r\n      if (!locked) {\r\n        door.lock();\r\n        locked = true;\r\n      }\r\n    });\r\n\r\n    game.chat = [];\r\n  });\r\n};\r\n","export class guiButton {\n  toggleable: boolean;\n  toggled: boolean;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  text: string;\n  onClick: () => void;\n  constructor(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    text: string,\n    onClick: () => void,\n    toggleable: boolean = false,\n  ) {\n    this.toggleable = toggleable;\n    this.toggled = false;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.text = text;\n    this.onClick = onClick;\n  }\n}\n","import { Game } from \"./game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\n\r\nexport class HealthBar {\r\n  hurtTimer: number;\r\n\r\n  constructor() {\r\n    this.hurtTimer = 0;\r\n  }\r\n\r\n  hurt = () => {\r\n    this.hurtTimer = Date.now();\r\n  };\r\n\r\n  draw = (\r\n    delta: number,\r\n    hearts: number,\r\n    maxHearts: number,\r\n    x: number,\r\n    y: number,\r\n    flashing: boolean,\r\n  ) => {\r\n    let t = Date.now() - this.hurtTimer;\r\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\r\n      let fullHearts = Math.floor(hearts);\r\n\r\n      let halfHearts = Math.ceil(hearts - fullHearts);\r\n\r\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\r\n\r\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\r\n      //   (which isn't really parameterizable)\r\n      let drawWidth = Math.round(\r\n        Math.min(\r\n          9,\r\n          Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t),\r\n        ),\r\n      );\r\n      let drawHeight =\r\n        Math.round(\r\n          Math.min(\r\n            0.5,\r\n            Math.min(\r\n              0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t),\r\n              0.003 * t,\r\n            ),\r\n          ) * 16,\r\n        ) / 16.0;\r\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\r\n      let xxStart = 0.5 + -width / 2;\r\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\r\n        let tileX = 0;\r\n        if (!flashing) tileX = 1.5;\r\n        else if (i < fullHearts) tileX = 0;\r\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\r\n        else tileX = 1;\r\n        let xx = (drawWidth * i) / 16.0 + xxStart;\r\n        Game.drawFX(\r\n          tileX,\r\n          8,\r\n          0.5,\r\n          0.5,\r\n          x + xx,\r\n          y - 1 - drawHeight / 2,\r\n          0.5,\r\n          drawHeight,\r\n        );\r\n        xx += 9.0 / 16.0;\r\n\r\n        let j = maxHearts - i - 1;\r\n        if (j !== i) {\r\n          let tileX = 0;\r\n          if (!flashing) tileX = 1.5;\r\n          else if (j < fullHearts) tileX = 0;\r\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\r\n          else tileX = 1;\r\n          let xx = (drawWidth * j) / 16.0 + xxStart;\r\n          Game.drawFX(\r\n            tileX,\r\n            8,\r\n            0.5,\r\n            0.5,\r\n            x + xx,\r\n            y - 1 - drawHeight / 2,\r\n            0.5,\r\n            drawHeight,\r\n          );\r\n          xx += 9.0 / 16.0;\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"./game\";\r\nimport { Drawable } from \"./drawable\";\r\nimport { Room } from \"./room\";\r\nimport { Entity } from \"./entity/entity\";\r\nimport { Utils } from \"./utils\";\r\n\r\nenum Direction {\r\n  North,\r\n  NorthEast,\r\n  East,\r\n  SouthEast,\r\n  South,\r\n  SouthWest,\r\n  West,\r\n  NorthWest,\r\n  Center,\r\n}\r\n\r\nexport class HitWarning extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  static frame = 0;\r\n  private game: Game;\r\n  parent: Entity | null = null;\r\n  private _pointerDir: Direction | null = null;\r\n  private _pointerOffset: { x: number; y: number } | null = null;\r\n  private tileX: number;\r\n  private tileY: number;\r\n  private eX: number;\r\n  private eY: number;\r\n  private offsetY: number;\r\n  private pointerOffset: { x: number; y: number };\r\n  private isEnemy: Boolean;\r\n  private dirOnly: Boolean;\r\n  private alpha: number = 0;\r\n  private ticks: number;\r\n  private tickedForDeath = false;\r\n\r\n  constructor(\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    eX?: number,\r\n    eY?: number,\r\n    isEnemy?: Boolean,\r\n    dirOnly: Boolean = false,\r\n    parent: Entity | null = null,\r\n  ) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.game = game;\r\n    this.parent = parent;\r\n    this.tileX = 0;\r\n    this.tileY = 22;\r\n    this.eX = eX;\r\n    this.eY = eY;\r\n    this.offsetY = 0.2;\r\n    this.dirOnly = dirOnly;\r\n\r\n    this.isEnemy = isEnemy !== undefined ? isEnemy : true;\r\n    this.pointerOffset = this.getPointerOffset();\r\n    this.removeOverlapping();\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.tickedForDeath) this.dead = true;\r\n    this.tickedForDeath = true;\r\n  };\r\n\r\n  static updateFrame = (delta: number) => {\r\n    HitWarning.frame += 0.125 * delta;\r\n    if (HitWarning.frame >= 2) HitWarning.frame = 0;\r\n  };\r\n\r\n  removeOverlapping = () => {\r\n    for (const entity of this.game.room.entities) {\r\n      if (\r\n        entity.x === this.x &&\r\n        entity.y === this.y &&\r\n        entity.pushable === false\r\n      ) {\r\n        this.dead = true;\r\n        break;\r\n      }\r\n    }\r\n    for (const door of this.game.room.doors) {\r\n      if (door.x === this.x && door.y === this.y) {\r\n        this.dead = true;\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  private getPointerDir(): Direction {\r\n    if (this._pointerDir === null) {\r\n      const dx = this.eX - this.x;\r\n      const dy = this.eY - this.y;\r\n\r\n      if (dx === 0 && dy === 0) {\r\n        this._pointerDir = Direction.Center;\r\n      } else if (dx === 0) {\r\n        this._pointerDir = dy < 0 ? Direction.South : Direction.North;\r\n      } else if (dy === 0) {\r\n        this._pointerDir = dx < 0 ? Direction.East : Direction.West;\r\n      } else if (dx < 0) {\r\n        this._pointerDir = dy < 0 ? Direction.SouthEast : Direction.NorthEast;\r\n      } else {\r\n        this._pointerDir = dy < 0 ? Direction.SouthWest : Direction.NorthWest;\r\n      }\r\n\r\n      this.tileX = 0 + 2 * this._pointerDir;\r\n    }\r\n    return this._pointerDir;\r\n  }\r\n\r\n  private getPointerOffset(): { x: number; y: number } {\r\n    if (this._pointerOffset === null) {\r\n      const offsets = {\r\n        [Direction.North]: { x: 0, y: 0.5 },\r\n        [Direction.South]: { x: 0, y: -0.6 },\r\n        [Direction.West]: { x: 0.6, y: 0 },\r\n        [Direction.East]: { x: -0.6, y: 0 },\r\n        [Direction.NorthEast]: { x: -0.5, y: 0.5 },\r\n        [Direction.NorthWest]: { x: 0.5, y: 0.5 },\r\n        [Direction.SouthEast]: { x: -0.5, y: -0.5 },\r\n        [Direction.SouthWest]: { x: 0.5, y: -0.5 },\r\n        [Direction.Center]: { x: 0, y: -0.25 },\r\n      };\r\n\r\n      this._pointerOffset = offsets[this.getPointerDir()];\r\n    }\r\n    return this._pointerOffset;\r\n  }\r\n\r\n  fadeHitwarnings = (delta: number) => {\r\n    if (!this.tickedForDeath) {\r\n      if (this.alpha < 1) this.alpha += 0.03 * delta;\r\n      if (this.alpha > 1) this.alpha = 1;\r\n    } else {\r\n      if (this.alpha > 0) this.alpha -= 0.03 * delta;\r\n      if (this.alpha < 0) this.alpha = 0;\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.fadeHitwarnings(delta);\r\n    if (\r\n      Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1 &&\r\n      Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1\r\n    ) {\r\n      Game.ctx.globalAlpha = this.alpha;\r\n      if (\r\n        this.isEnemy &&\r\n        Utils.distance(\r\n          this.x,\r\n          this.y,\r\n          this.game.players[this.game.localPlayerID].x,\r\n          this.game.players[this.game.localPlayerID].y,\r\n        ) <= 1\r\n      ) {\r\n        // Red Arrow that only renders one square away\r\n\r\n        Game.drawFX(\r\n          this.tileX + Math.floor(HitWarning.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x + this.pointerOffset.x,\r\n          this.y + this.pointerOffset.y - this.offsetY,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n      if (false) {\r\n        // removed for now because unneeded and overlaps poorly with top layer x\r\n        // Red X that only renders one square away\r\n        Game.drawFX(\r\n          18 + Math.floor(HitWarning.frame),\r\n          5,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - this.offsetY + 0,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n      Game.ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.fadeHitwarnings(delta);\r\n\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (this.isEnemy && this.getPointerDir() !== Direction.North) {\r\n      //white arrow top layer\r\n      Game.drawFX(\r\n        this.tileX + Math.floor(HitWarning.frame),\r\n        this.tileY + 1,\r\n        1,\r\n        1,\r\n        this.x + this.pointerOffset.x,\r\n        this.y + this.pointerOffset.y - this.offsetY,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n    if (\r\n      Utils.distance(\r\n        this.x,\r\n        this.y,\r\n        this.game.players[this.game.localPlayerID].x,\r\n        this.game.players[this.game.localPlayerID].y,\r\n      ) <= 1\r\n    ) {\r\n      if (!this.dirOnly) {\r\n        // Red X that renders 1 square away for top layer\r\n        Game.drawFX(\r\n          18 + Math.floor(HitWarning.frame),\r\n          6,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - this.offsetY + 0,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { GameConstants } from \"./gameConstants\";\r\nimport { Game } from \"./game\";\r\n\r\nexport enum InputEnum {\r\n  I,\r\n  M,\r\n  M_UP,\r\n  Q,\r\n  LEFT,\r\n  RIGHT,\r\n  UP,\r\n  DOWN,\r\n  SPACE,\r\n  COMMA,\r\n  PERIOD,\r\n  LEFT_CLICK,\r\n  RIGHT_CLICK,\r\n  MOUSE_MOVE,\r\n  NUMBER_1,\r\n  NUMBER_2,\r\n  NUMBER_3,\r\n  NUMBER_4,\r\n  NUMBER_5,\r\n  NUMBER_6,\r\n  NUMBER_7,\r\n  NUMBER_8,\r\n  NUMBER_9,\r\n  MINUS,\r\n  EQUALS,\r\n  ESCAPE,\r\n}\r\n\r\nexport const Input = {\r\n  _pressed: {},\r\n\r\n  isTapHold: false,\r\n  tapStartTime: null,\r\n  IS_TAP_HOLD_THRESH: 300,\r\n  keyDownListener: function (key: string) {},\r\n  iListener: function () {},\r\n  mListener: function () {},\r\n  mUpListener: function () {},\r\n  qListener: function () {},\r\n  leftListener: function () {},\r\n  rightListener: function () {},\r\n  upListener: function () {},\r\n  downListener: function () {},\r\n  aListener: function () {\r\n    Input.leftListener();\r\n  },\r\n  dListener: function () {\r\n    Input.rightListener();\r\n  },\r\n  wListener: function () {\r\n    Input.upListener();\r\n  },\r\n  sListener: function () {\r\n    Input.downListener();\r\n  },\r\n  spaceListener: function () {},\r\n  leftSwipeListener: function () {},\r\n  rightSwipeListener: function () {},\r\n  upSwipeListener: function () {},\r\n  downSwipeListener: function () {},\r\n  tapListener: function () {},\r\n  commaListener: function () {},\r\n  periodListener: function () {},\r\n  numKeyListener: function (num: number) {},\r\n  equalsListener: function () {},\r\n  minusListener: function () {},\r\n  escapeListener: function () {},\r\n  mouseLeftClickListeners: [],\r\n  mouseRightClickListeners: [],\r\n  mouseMoveListeners: [],\r\n  mouseDownListeners: [],\r\n  mouseUpListeners: [],\r\n\r\n  touchStartListeners: [],\r\n  touchEndListeners: [],\r\n\r\n  mouseX: 0,\r\n  mouseY: 0,\r\n  mouseDown: false,\r\n\r\n  lastPressTime: 0,\r\n  lastPressKey: \"\",\r\n\r\n  SPACE: \"Space\",\r\n  LEFT: \"ArrowLeft\",\r\n  UP: \"ArrowUp\",\r\n  RIGHT: \"ArrowRight\",\r\n  DOWN: \"ArrowDown\",\r\n  W: \"KeyW\",\r\n  A: \"KeyA\",\r\n  S: \"KeyS\",\r\n  D: \"KeyD\",\r\n  M: \"KeyM\",\r\n  N: \"KeyN\",\r\n  I: \"KeyI\",\r\n  Q: \"KeyQ\",\r\n  NUMBER_1: \"Digit1\",\r\n  NUMBER_2: \"Digit2\",\r\n  NUMBER_3: \"Digit3\",\r\n  NUMBER_4: \"Digit4\",\r\n  NUMBER_5: \"Digit5\",\r\n  NUMBER_6: \"Digit6\",\r\n  NUMBER_7: \"Digit7\",\r\n  NUMBER_8: \"Digit8\",\r\n  NUMBER_9: \"Digit9\",\r\n  COMMA: \"Comma\",\r\n  PERIOD: \"Period\",\r\n  MINUS: \"Minus\",\r\n  EQUALS: \"Equal\",\r\n  ESCAPE: \"Escape\",\r\n\r\n  isDown: function (keyCode: string) {\r\n    return this._pressed[keyCode];\r\n  },\r\n\r\n  onKeydown: (event: KeyboardEvent) => {\r\n    if (event.repeat) return; // ignore repeat keypresses\r\n    if (event.key) Input.keyDownListener(event.key);\r\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\")\r\n      event.preventDefault();\r\n    Input.lastPressTime = Date.now();\r\n    Input.lastPressKey = event.key;\r\n    Input._pressed[event.code] = true;\r\n    switch (event.code) {\r\n      case Input.LEFT:\r\n        Input.leftListener();\r\n        break;\r\n      case Input.A:\r\n        Input.aListener();\r\n        break;\r\n      case Input.RIGHT:\r\n        Input.rightListener();\r\n        break;\r\n      case Input.D:\r\n        Input.dListener();\r\n        break;\r\n      case Input.UP:\r\n        Input.upListener();\r\n        break;\r\n      case Input.W:\r\n        Input.wListener();\r\n        break;\r\n      case Input.DOWN:\r\n        Input.downListener();\r\n        break;\r\n      case Input.S:\r\n        Input.sListener();\r\n        break;\r\n      case Input.SPACE:\r\n        Input.spaceListener();\r\n        break;\r\n      case Input.M:\r\n        Input.mListener();\r\n        break;\r\n      case Input.I:\r\n        Input.iListener();\r\n        break;\r\n      case Input.Q:\r\n        Input.qListener();\r\n        break;\r\n      case Input.COMMA:\r\n        Input.commaListener();\r\n        break;\r\n      case Input.PERIOD:\r\n        Input.periodListener();\r\n        break;\r\n      case Input.NUMBER_1:\r\n      case Input.NUMBER_2:\r\n      case Input.NUMBER_3:\r\n      case Input.NUMBER_4:\r\n      case Input.NUMBER_5:\r\n      case Input.NUMBER_6:\r\n      case Input.NUMBER_7:\r\n      case Input.NUMBER_8:\r\n      case Input.NUMBER_9:\r\n        Input.numKeyListener(parseInt(event.code.slice(-1)));\r\n        break;\r\n      case Input.EQUALS:\r\n        Input.equalsListener();\r\n        break;\r\n      case Input.MINUS:\r\n        Input.minusListener();\r\n        break;\r\n      case Input.ESCAPE:\r\n        Input.escapeListener();\r\n        break;\r\n    }\r\n  },\r\n\r\n  onKeyup: function (event: KeyboardEvent) {\r\n    delete this._pressed[event.code];\r\n    if (event.key === this.lastPressKey) {\r\n      this.lastPressTime = 0;\r\n      this.lastPressKey = 0;\r\n    }\r\n    if (event.code === Input.M) Input.mUpListener();\r\n  },\r\n\r\n  mouseLeftClickListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\r\n      Input.mouseLeftClickListeners[i](x, y);\r\n  },\r\n\r\n  mouseRightClickListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseRightClickListeners.length; i++)\r\n      Input.mouseRightClickListeners[i](x, y);\r\n  },\r\n\r\n  mouseMoveListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseMoveListeners.length; i++)\r\n      Input.mouseMoveListeners[i](x, y);\r\n  },\r\n\r\n  mouseDownListener: function (x: number, y: number, button: number) {\r\n    for (let i = 0; i < Input.mouseDownListeners.length; i++)\r\n      Input.mouseDownListeners[i](x, y, button);\r\n  },\r\n\r\n  mouseUpListener: function (x: number, y: number, button: number) {\r\n    for (let i = 0; i < Input.mouseUpListeners.length; i++)\r\n      Input.mouseUpListeners[i](x, y, button);\r\n  },\r\n\r\n  mouseClickListener: function (event: MouseEvent) {\r\n    if (event.button === 0 || event.button === 2) {\r\n      let rect = window.document\r\n        .getElementById(\"gameCanvas\")\r\n        .getBoundingClientRect();\r\n      let x = event.clientX - rect.left;\r\n      let y = event.clientY - rect.top;\r\n      let scaledX = Math.floor(x / Game.scale);\r\n      let scaledY = Math.floor(y / Game.scale);\r\n\r\n      if (event.button === 0) {\r\n        Input.mouseLeftClickListener(scaledX, scaledY);\r\n      } else if (event.button === 2) {\r\n        Input.mouseRightClickListener(scaledX, scaledY);\r\n      }\r\n    }\r\n  },\r\n\r\n  updateMousePos: function (event: MouseEvent) {\r\n    Game.inputReceived = true;\r\n\r\n    let rect = window.document\r\n      .getElementById(\"gameCanvas\")\r\n      .getBoundingClientRect();\r\n    let x = event.clientX - rect.left;\r\n    let y = event.clientY - rect.top;\r\n\r\n    Input.mouseX = Math.floor(x / Game.scale);\r\n    Input.mouseY = Math.floor(y / Game.scale);\r\n\r\n    Input.mouseMoveListener(Input.mouseX, Input.mouseY);\r\n  },\r\n\r\n  handleMouseDown: function (event: MouseEvent) {\r\n    if (Input.mouseDown) return; // Prevent multiple triggers\r\n\r\n    Input.mouseDown = true;\r\n    Input.mouseDownStartTime = Date.now();\r\n    Input.isMouseHold = false;\r\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, event.button);\r\n\r\n    // Start checking for hold\r\n    if (!Input._holdCheckInterval) {\r\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16); // Check every frame\r\n    }\r\n  },\r\n\r\n  handleMouseUp: function (event: MouseEvent) {\r\n    Input.mouseDown = false;\r\n    Input.mouseDownStartTime = null;\r\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, event.button);\r\n\r\n    // Clear hold check interval\r\n    if (Input._holdCheckInterval) {\r\n      clearInterval(Input._holdCheckInterval);\r\n      Input._holdCheckInterval = null;\r\n    }\r\n\r\n    // Clear isMouseHold after a short delay to ensure click handler sees it\r\n    setTimeout(() => {\r\n      Input.isMouseHold = false;\r\n    }, 50);\r\n  },\r\n\r\n  _holdCheckInterval: null,\r\n\r\n  checkIsMouseHold: function () {\r\n    if (!Input.mouseDown || Input.mouseDownStartTime === null) return;\r\n\r\n    if (Date.now() >= Input.mouseDownStartTime + Input.HOLD_THRESH) {\r\n      if (!Input.isMouseHold) {\r\n        Input.isMouseHold = true;\r\n        // Call the hold callback if one is registered\r\n        if (Input.holdCallback) {\r\n          Input.holdCallback();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  getTouches: function (evt) {\r\n    Game.inputReceived = true;\r\n\r\n    return (\r\n      evt.touches || evt.originalEvent.touches // browser API\r\n    ); // jQuery\r\n  },\r\n\r\n  xDown: null,\r\n  yDown: null,\r\n  currentX: 0,\r\n  currentY: 0,\r\n  swiped: false,\r\n\r\n  handleTouchStart: function (evt: TouchEvent) {\r\n    //console.log(\"handleTouchStart triggered\");\r\n    Game.inputReceived = true;\r\n\r\n    evt.preventDefault();\r\n\r\n    const firstTouch = Input.getTouches(evt)[0];\r\n    Input.xDown = firstTouch.clientX;\r\n    Input.yDown = firstTouch.clientY;\r\n    Input.currentX = firstTouch.clientX;\r\n    Input.currentY = firstTouch.clientY;\r\n\r\n    Input.tapStartTime = Date.now();\r\n\r\n    Input.updateMousePos({\r\n      clientX: Input.currentX,\r\n      clientY: Input.currentY,\r\n    } as MouseEvent);\r\n\r\n    Input.swiped = false;\r\n\r\n    // Unify with mouseDown logic, but force button=0 (left-click equivalent)\r\n    Input.mouseDown = true;\r\n    Input.mouseDownStartTime = Date.now();\r\n    Input.isMouseHold = false;\r\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, 0);\r\n\r\n    if (!Input._holdCheckInterval) {\r\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16);\r\n      // console.log(\"_holdCheckInterval started\");\r\n    }\r\n  },\r\n\r\n  handleTouchMove: function (evt) {\r\n    //console.log(\"handleTouchMove triggered\");\r\n    evt.preventDefault();\r\n\r\n    Input.currentX = evt.touches[0].clientX;\r\n    Input.currentY = evt.touches[0].clientY;\r\n\r\n    Input.updateMousePos({\r\n      clientX: Input.currentX,\r\n      clientY: Input.currentY,\r\n    } as MouseEvent);\r\n\r\n    if (Input.swiped) return;\r\n\r\n    var xDiff = Input.xDown - Input.currentX;\r\n    var yDiff = Input.yDown - Input.currentY;\r\n\r\n    // we have not swiped yet\r\n    // check if we've swiped\r\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\r\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n        /*most significant*/\r\n        if (xDiff > 0) {\r\n          Input.leftSwipeListener();\r\n        } else {\r\n          Input.rightSwipeListener();\r\n        }\r\n        Input.swiped = true;\r\n      } else {\r\n        if (yDiff > 0) {\r\n          Input.upSwipeListener();\r\n        } else {\r\n          Input.downSwipeListener();\r\n        }\r\n        Input.swiped = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  handleTouchEnd: function (evt: TouchEvent) {\r\n    //console.log(\"handleTouchEnd triggered\");\r\n    evt.preventDefault();\r\n\r\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\r\n    Input.isTapHold = false;\r\n    Input.tapStartTime = null;\r\n\r\n    //if (Input.swiped) return;\r\n\r\n    // Also unify with mouseUp logic, again forcing button=0\r\n    Input.mouseDown = false;\r\n    Input.mouseDownStartTime = null;\r\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, 0);\r\n\r\n    if (Input._holdCheckInterval) {\r\n      clearInterval(Input._holdCheckInterval);\r\n      Input._holdCheckInterval = null;\r\n      //console.log(\"_holdCheckInterval cleared\");\r\n    }\r\n    setTimeout(() => {\r\n      Input.isMouseHold = false;\r\n      //console.log(\"isMouseHold reset\");\r\n    }, 50);\r\n  },\r\n\r\n  checkIsTapHold: function () {\r\n    if (\r\n      Input.tapStartTime !== null &&\r\n      Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH\r\n    )\r\n      Input.isTapHold = true;\r\n  },\r\n\r\n  set isMouseHold(value: boolean) {\r\n    //console.log(`isMouseHold set to: ${value}`);\r\n    this._isMouseHold = value;\r\n  },\r\n\r\n  get isMouseHold() {\r\n    return this._isMouseHold;\r\n  },\r\n\r\n  _isMouseHold: false,\r\n\r\n  mouseDownStartTime: null,\r\n  HOLD_THRESH: 200, // Adjust this value as needed\r\n\r\n  holdCallback: null as (() => void) | null,\r\n};\r\nwindow.addEventListener(\r\n  \"keyup\",\r\n  function (event) {\r\n    Input.onKeyup(event);\r\n  },\r\n  false,\r\n);\r\nwindow.addEventListener(\r\n  \"keydown\",\r\n  function (event) {\r\n    Input.onKeydown(event);\r\n  },\r\n  false,\r\n);\r\nwindow.addEventListener(\r\n  \"touchstart\",\r\n  function (event) {\r\n    Input.handleTouchStart(event);\r\n  },\r\n  false,\r\n);\r\nwindow.addEventListener(\r\n  \"touchend\",\r\n  function (event) {\r\n    Input.handleTouchEnd(event);\r\n  },\r\n  false,\r\n);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"click\", (event) => Input.mouseClickListener(event), false);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"mousemove\", (event) => Input.updateMousePos(event), false);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\r\n    \"mousedown\",\r\n    (event) => Input.handleMouseDown(event),\r\n    false,\r\n  );\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"mouseup\", (event) => Input.handleMouseUp(event), false);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"contextmenu\", (event) => event.preventDefault(), false);\r\n\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\r\n    \"touchstart\",\r\n    (event) => Input.handleTouchStart(event),\r\n    false,\r\n  );\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"touchend\", (event) => Input.handleTouchEnd(event), false);\r\n","import { Item } from \"./item/item\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { Game } from \"./game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { Equippable } from \"./item/equippable\";\r\nimport { Armor } from \"./item/armor\";\r\nimport { Coin } from \"./item/coin\";\r\nimport { Weapon } from \"./weapon/weapon\";\r\nimport { Room } from \"./room\";\r\nimport { Usable } from \"./item/usable\";\r\nimport { Player } from \"./player\";\r\nimport { MouseCursor } from \"./mouseCursor\";\r\nimport { Input } from \"./input\";\r\n\r\nlet OPEN_TIME = 100; // milliseconds\r\n// Dark gray color used for the background of inventory slots\r\nlet FILL_COLOR = \"#5a595b\";\r\n// Very dark blue-gray color used for outlines and borders\r\nlet OUTLINE_COLOR = \"#292c36\";\r\n// Light blue color used to indicate equipped items\r\nlet EQUIP_COLOR = \"#85a8e6\";\r\n// White color used for the outer border of the inventory\r\nlet FULL_OUTLINE = \"white\";\r\n\r\nexport class Inventory {\r\n  player: Player;\r\n  items: Array<Item | null>;\r\n  rows = 4;\r\n  cols = 5;\r\n  selX = 0;\r\n  selY = 0;\r\n  game: Game;\r\n  isOpen: boolean = false;\r\n  openTime: number = Date.now();\r\n  coins: number = 0;\r\n  equipAnimAmount: Array<number>;\r\n  weapon: Weapon | null = null;\r\n  private _expansion: number = 0;\r\n  grabbedItem: Item | null = null;\r\n  private _mouseDownStartX: number | null = null;\r\n  private _mouseDownStartY: number | null = null;\r\n  private _mouseDownItem: Item | null = null;\r\n  private _wasHoldDetected: boolean = false;\r\n  private _isDragging: boolean = false;\r\n  private _dragStartItem: Item | null = null;\r\n  private _dragStartSlot: number | null = null;\r\n  private itemEquipAnimations: Map<Item, number> = new Map();\r\n\r\n  // New state for using items on other items\r\n  private usingItem: Usable | null = null;\r\n  private usingItemIndex: number | null = null;\r\n  mostRecentInput: \"mouse\" | \"keyboard\" = \"keyboard\";\r\n\r\n  // Static variables for inventory button position\r\n  private buttonY: number;\r\n  private buttonX: number;\r\n\r\n  constructor(game: Game, player: Player) {\r\n    this.game = game;\r\n    this.player = player;\r\n\r\n    this.buttonX =\r\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE;\r\n    this.buttonY = 10;\r\n\r\n    Input.mouseDownListeners.push((x, y, button) =>\r\n      this.handleMouseDown(x, y, button),\r\n    );\r\n    Input.mouseUpListeners.push((x, y, button) =>\r\n      this.handleMouseUp(x, y, button),\r\n    );\r\n\r\n    Input.holdCallback = () => this.onHoldDetected();\r\n\r\n    this.items = new Array<Item | null>(\r\n      (this.rows + this._expansion) * this.cols,\r\n    ).fill(null);\r\n    this.equipAnimAmount = new Array<number>(\r\n      (this.rows + this._expansion) * this.cols,\r\n    ).fill(0);\r\n    let a = (i: Item | null) => {\r\n      if (i === null) return;\r\n      if (i instanceof Equippable) {\r\n        i.setWielder(this.player);\r\n      }\r\n      if (i instanceof Weapon && this.weapon === null) {\r\n        i.toggleEquip();\r\n        this.weapon = i;\r\n        //this.player.weapon = this.weapon;\r\n      }\r\n\r\n      this.addItem(i);\r\n    };\r\n    let startingInv = GameConstants.DEVELOPER_MODE\r\n      ? GameConstants.STARTING_DEV_INVENTORY\r\n      : GameConstants.STARTING_INVENTORY;\r\n\r\n    startingInv.forEach((item) => {\r\n      a(new item({ game: this.game } as Room, 0, 0));\r\n    });\r\n  }\r\n\r\n  clear = () => {\r\n    this.items.fill(null);\r\n    this.equipAnimAmount.fill(0);\r\n  };\r\n\r\n  open = () => {\r\n    this.isOpen = !this.isOpen;\r\n    if (this.isOpen) this.openTime = Date.now();\r\n    if (!this.isOpen) {\r\n      this.selY = 0;\r\n      this.usingItem = null;\r\n      this.usingItemIndex = null;\r\n    }\r\n  };\r\n\r\n  toggleOpen = () => {\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  };\r\n\r\n  close = () => {\r\n    this.isOpen = false;\r\n    if (this.selY > 0) {\r\n      this.selY = 0;\r\n    }\r\n    this.usingItem = null;\r\n    this.usingItemIndex = null;\r\n  };\r\n\r\n  left = () => {\r\n    if (this.selX > 0) {\r\n      this.selX--;\r\n    }\r\n  };\r\n\r\n  right = () => {\r\n    if (this.selX < this.cols - 1) {\r\n      this.selX++;\r\n    }\r\n  };\r\n\r\n  up = () => {\r\n    if (this.selY > 0) {\r\n      this.selY--;\r\n    }\r\n  };\r\n\r\n  down = () => {\r\n    if (this.selY < this.rows + this._expansion - 1) {\r\n      this.selY++;\r\n    }\r\n  };\r\n\r\n  space = () => {\r\n    this.itemUse();\r\n  };\r\n\r\n  itemAtSelectedSlot = (): Item | null => {\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) {\r\n      return null;\r\n    }\r\n    return this.items[index];\r\n  };\r\n\r\n  getIndexOfItem = (item: Item): number => {\r\n    if (item === null) return -1;\r\n    return this.items.indexOf(item);\r\n  };\r\n\r\n  itemUse = () => {\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) return;\r\n    const item = this.items[index];\r\n\r\n    if (this.usingItem) {\r\n      // Attempt to use 'usingItem' on the currently selected item\r\n      if (item === null) {\r\n        // Clicked on empty slot; cancel the using state\r\n        this.usingItem = null;\r\n        this.usingItemIndex = null;\r\n        return;\r\n      }\r\n      // Attempt to use on other\r\n      if (item instanceof Item) {\r\n        this.usingItem.useOnOther(this.player, item);\r\n      }\r\n      // Exit tryingToUse state\r\n      this.usingItem = null;\r\n      this.usingItemIndex = null;\r\n    } else {\r\n      // Not in tryingToUse state\r\n      if (item instanceof Usable) {\r\n        if (item.canUseOnOther) {\r\n          // Enter tryingToUse state\r\n          this.usingItem = item;\r\n          this.usingItemIndex = index;\r\n        } else {\r\n          // Use normally\r\n          item.onUse(this.player);\r\n          // Optionally remove the item\r\n          // this.items[index] = null;\r\n        }\r\n      } else if (item instanceof Equippable) {\r\n        // Existing equipping logic\r\n        item.toggleEquip();\r\n        if (item instanceof Weapon) {\r\n          this.weapon = item.equipped ? item : null;\r\n        }\r\n        if (item.equipped) {\r\n          this.items.forEach((i, idx) => {\r\n            if (\r\n              i instanceof Equippable &&\r\n              i !== item &&\r\n              !item.coEquippable(i)\r\n            ) {\r\n              i.equipped = false;\r\n              this.equipAnimAmount[idx] = 0;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseLeftClick = () => {\r\n    this.mostRecentInput = \"mouse\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n\r\n    // Only close inventory if clicking outside\r\n    //if (!this.isPointInInventoryBounds(x, y) && this.open) {\r\n    //this.close();\r\n    //}\r\n  };\r\n\r\n  mouseRightClick = () => {\r\n    this.mostRecentInput = \"mouse\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n\r\n    if (bounds.inBounds) {\r\n      this.drop();\r\n    }\r\n  };\r\n\r\n  leftQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n\r\n    this.left();\r\n  };\r\n\r\n  rightQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n    this.right();\r\n  };\r\n\r\n  spaceQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n    this.itemUse();\r\n  };\r\n\r\n  handleNumKey = (num: number) => {\r\n    this.mostRecentInput = \"keyboard\";\r\n    if (num <= 5) {\r\n      this.selX = Math.max(0, Math.min(num - 1, this.cols - 1));\r\n      this.selY = 0;\r\n      this.itemUse();\r\n    } else {\r\n      if (GameConstants.DEVELOPER_MODE) {\r\n        switch (num) {\r\n          case 6:\r\n            GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false, true);\r\n            break;\r\n          case 7:\r\n            GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false);\r\n            break;\r\n        }\r\n      }\r\n      {\r\n        switch (num) {\r\n          case 9:\r\n            GameConstants.ctxBlurEnabled = !GameConstants.ctxBlurEnabled;\r\n            this.game.pushMessage(\r\n              \"Custom shade color is now \" +\r\n                (GameConstants.ctxBlurEnabled ? \"on\" : \"off\"),\r\n            );\r\n            break;\r\n          case 8:\r\n            GameConstants.BLUR_ENABLED = !GameConstants.BLUR_ENABLED;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseMove = () => {\r\n    this.mostRecentInput = \"mouse\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n\r\n    if (bounds.inBounds) {\r\n      const s = this.isOpen\r\n        ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n        : 18;\r\n      const b = 2;\r\n      const g = -2;\r\n\r\n      const oldSelX = this.selX;\r\n      const oldSelY = this.selY;\r\n\r\n      this.selX = Math.max(\r\n        0,\r\n        Math.min(\r\n          Math.floor((x - bounds.startX) / (s + 2 * b + g)),\r\n          this.cols - 1,\r\n        ),\r\n      );\r\n      this.selY = this.isOpen\r\n        ? Math.max(\r\n            0,\r\n            Math.min(\r\n              Math.floor((y - bounds.startY) / (s + 2 * b + g)),\r\n              this.rows + this._expansion - 1,\r\n            ),\r\n          )\r\n        : 0;\r\n\r\n      if (oldSelX !== this.selX || oldSelY !== this.selY) {\r\n        // Optional: Handle selection change\r\n      }\r\n    }\r\n  };\r\n\r\n  moveItemToSlot = (\r\n    item: Item | null,\r\n    index: number,\r\n    otherItem: Item | null,\r\n    otherIndex: number,\r\n  ) => {\r\n    if (item === null) return;\r\n\r\n    // Preserve animation states before moving\r\n    const itemAnim = this.equipAnimAmount[index];\r\n    const otherAnim = otherItem ? this.equipAnimAmount[otherIndex] : 0;\r\n\r\n    if (otherItem === null) {\r\n      this.items[index] = item;\r\n      this.equipAnimAmount[index] = this.itemEquipAnimations.get(item) ?? 0;\r\n    } else {\r\n      this.items[index] = otherItem;\r\n      this.items[otherIndex] = item;\r\n      this.equipAnimAmount[index] =\r\n        this.itemEquipAnimations.get(otherItem) ?? 0;\r\n      this.equipAnimAmount[otherIndex] =\r\n        this.itemEquipAnimations.get(item) ?? 0;\r\n    }\r\n  };\r\n\r\n  grabItem = (item: Item) => {\r\n    if (item === null) {\r\n      return;\r\n    }\r\n    if (this.grabbedItem !== null) {\r\n      return;\r\n    }\r\n\r\n    // Remove the item from its slot when grabbed\r\n    const index = this.getIndexOfItem(item);\r\n\r\n    if (index !== -1) {\r\n      this.items[index] = null;\r\n      this.grabbedItem = item;\r\n    } else {\r\n    }\r\n  };\r\n\r\n  releaseItem = () => {\r\n    if (this.grabbedItem === null) {\r\n      return;\r\n    }\r\n\r\n    const targetIndex = this.selX + this.selY * this.cols;\r\n    const existingItem = this.items[targetIndex];\r\n\r\n    // If target slot is empty, place item there\r\n    if (existingItem === null) {\r\n      this.items[targetIndex] = this.grabbedItem;\r\n    } else {\r\n      // Swap items\r\n      this.items[targetIndex] = this.grabbedItem;\r\n    }\r\n\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  drawDraggedItem = (delta: number) => {\r\n    if (this.grabbedItem === null) return;\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n\r\n    const drawX = Math.round(x - 0.5 * GameConstants.TILESIZE);\r\n    const drawY = Math.round(y - 0.5 * GameConstants.TILESIZE);\r\n    const drawXScaled = drawX / GameConstants.TILESIZE;\r\n    const drawYScaled = drawY / GameConstants.TILESIZE;\r\n    this.grabbedItem.drawIcon(delta, drawXScaled, drawYScaled);\r\n  };\r\n\r\n  drop = () => {\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) return;\r\n    const item = this.items[index];\r\n    if (item === null) return;\r\n    this.dropItem(item, index);\r\n  };\r\n\r\n  dropItem = (item: Item, index: number) => {\r\n    item.level = this.game.levels[this.player.depth].rooms[this.player.levelID];\r\n    item.x = this.player.x;\r\n    item.y = this.player.y;\r\n    item.alpha = 1;\r\n    item.pickedUp = false;\r\n    item.dropFromInventory();\r\n    this.equipAnimAmount[index] = 0;\r\n    item.drawableY = this.player.y;\r\n    this.game.levels[this.player.depth].rooms[this.player.levelID].items.push(\r\n      item,\r\n    );\r\n    this.items[index] = null;\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    // Intentionally left blank or implement if needed\r\n  };\r\n\r\n  hasItem = <T extends Item>(itemType: new (...args: any[]) => T): T | null => {\r\n    return this.items.find((i): i is T => i instanceof itemType) || null;\r\n  };\r\n\r\n  hasItemCount = (item: Item | null): boolean => {\r\n    if (item === null) return false;\r\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\r\n    return this.items.some(\r\n      (i) =>\r\n        i !== null &&\r\n        i.constructor === item.constructor &&\r\n        i.stackCount >= item.stackCount,\r\n    );\r\n  };\r\n\r\n  subtractItemCount = (item: Item | null) => {\r\n    if (item === null) return;\r\n    if (item instanceof Coin) {\r\n      this.subtractCoins(item.stackCount);\r\n      return;\r\n    }\r\n    this.items.forEach((i, idx) => {\r\n      if (i === null) return;\r\n      if (i.constructor === item.constructor) {\r\n        i.stackCount -= item.stackCount;\r\n        if (i.stackCount <= 0) {\r\n          this.items[idx] = null;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  coinCount = (): number => {\r\n    return this.coins;\r\n  };\r\n\r\n  subtractCoins = (n: number) => {\r\n    this.coins = Math.max(0, this.coins - n);\r\n  };\r\n\r\n  addCoins = (n: number) => {\r\n    this.coins += n;\r\n  };\r\n\r\n  isFull = (): boolean => {\r\n    return (\r\n      this.items.filter((i) => i !== null).length >=\r\n      (this.rows + this._expansion) * this.cols\r\n    );\r\n  };\r\n\r\n  addItem = (item: Item | null): boolean => {\r\n    if (item === null) return false;\r\n    if (item instanceof Coin) {\r\n      this.coins += item.stack;\r\n      return true;\r\n    }\r\n    if (item instanceof Equippable) {\r\n      item.setWielder(this.player);\r\n    }\r\n    if (item.stackable) {\r\n      for (let i = 0; i < this.items.length; i++) {\r\n        if (\r\n          this.items[i] !== null &&\r\n          this.items[i]!.constructor === item.constructor\r\n        ) {\r\n          this.items[i]!.stackCount += item.stackCount;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if (!this.isFull()) {\r\n      for (let i = 0; i < this.items.length; i++) {\r\n        if (this.items[i] === null) {\r\n          this.items[i] = item;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  removeItem = (item: Item | null) => {\r\n    if (item === null) return;\r\n    const index = this.items.indexOf(item);\r\n    if (index !== -1) {\r\n      this.items[index] = null;\r\n    }\r\n  };\r\n\r\n  getArmor = (): Armor | null => {\r\n    return (\r\n      this.items.find((i): i is Armor => i instanceof Armor && i.equipped) ||\r\n      null\r\n    );\r\n  };\r\n\r\n  hasWeapon = (): boolean => {\r\n    return this.weapon !== null;\r\n  };\r\n\r\n  getWeapon = (): Weapon | null => {\r\n    return this.weapon;\r\n  };\r\n\r\n  tick = () => {\r\n    this.items.forEach((i) => {\r\n      if (i !== null) i.tickInInventory();\r\n    });\r\n\r\n    // Check for drag initiation\r\n    this.checkForDragStart();\r\n  };\r\n\r\n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\r\n    // Returns y value for next line\r\n    if (text === \"\") return y;\r\n    let words = text.split(\" \");\r\n    let line = \"\";\r\n\r\n    while (words.length > 0) {\r\n      if (Game.measureText(line + words[0]).width > maxWidth) {\r\n        Game.fillText(line, x, y);\r\n        line = \"\";\r\n        y += 8;\r\n      } else {\r\n        if (line !== \"\") line += \" \";\r\n        line += words[0];\r\n        words.splice(0, 1);\r\n      }\r\n    }\r\n    if (line.trim() !== \"\") {\r\n      Game.fillText(line, x, y);\r\n      y += 8;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  drawCoins = (delta: number) => {\r\n    let coinTileX = 19;\r\n    if (this.coins === 2) coinTileX = 20;\r\n    else if (this.coins >= 3) coinTileX = 21;\r\n    let coinX = GameConstants.WIDTH / GameConstants.TILESIZE - 2.25;\r\n    let coinY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.25;\r\n    if (GameConstants.WIDTH < 170) {\r\n      //coinX -= 1.25;\r\n      coinY -= 1.25;\r\n    }\r\n\r\n    Game.drawItem(coinTileX, 0, 1, 2, coinX, coinY - 1, 1, 2);\r\n\r\n    const countText = `${this.coins}`;\r\n    const width = Game.measureText(countText).width;\r\n    const countX = 10;\r\n    const countY = 9;\r\n\r\n    Game.fillTextOutline(\r\n      countText,\r\n      coinX * GameConstants.TILESIZE + countX,\r\n      coinY * GameConstants.TILESIZE + countY,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    /*\r\n    const turnCountText = `${this.player.turnCount}`;\r\n    Game.fillTextOutline(\r\n      turnCountText,\r\n      coinX * GameConstants.TILESIZE + countX,\r\n      coinY * GameConstants.TILESIZE + countY - 15,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    */\r\n  };\r\n\r\n  pointInside = (x: number, y: number): boolean => {\r\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n    const height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\r\n\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n    const startY = this.isOpen\r\n      ? Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob\r\n      : GameConstants.HEIGHT - (s + 2 * b) - 5 - ob;\r\n    const checkHeight = this.isOpen ? height + 2 * ob : s + 2 * b + 2 * ob;\r\n\r\n    return (\r\n      x >= startX &&\r\n      x <= startX + width + 2 * ob &&\r\n      y >= startY &&\r\n      y <= startY + checkHeight\r\n    );\r\n  };\r\n\r\n  drawQuickbar = (delta: number) => {\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\r\n\r\n    const s = 18; // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 1; // + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    const height = Math.floor(s + 2 * b);\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n    const startY = Math.floor(GameConstants.HEIGHT - height - 2);\r\n\r\n    // Draw main background\r\n    /*\r\n    Game.ctx.fillStyle = FULL_OUTLINE;\r\n    Game.ctx.fillRect(startX - ob, startY - 1, width + 2, height + 2);\r\n    */\r\n    //Game.ctx.globalCompositeOperation = \"xor\";\r\n\r\n    // Draw highlighted background for selected item only if mouse is in bounds\r\n    if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n      /*\r\n      Game.ctx.fillRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) - hg - ob),\r\n        Math.floor(startY - hg - ob),\r\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\r\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\r\n      );\r\n      */\r\n    }\r\n\r\n    // Draw individual item slots\r\n    for (let xIdx = 0; xIdx < this.cols; xIdx++) {\r\n      // Skip drawing normal background and icon if this is the selected slot\r\n      const idx = xIdx;\r\n\r\n      // Draw slot background\r\n      if (xIdx !== this.selX) {\r\n        Game.ctx.fillStyle = FILL_COLOR;\r\n        Game.ctx.fillRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\r\n          Math.floor(startY + b),\r\n          Math.floor(s),\r\n          Math.floor(s),\r\n        );\r\n\r\n        Game.ctx.clearRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\r\n          Math.floor(startY + b + 1),\r\n          Math.floor(s - 2),\r\n          Math.floor(s - 2),\r\n        );\r\n\r\n        // Draw equip animation (this should always show)\r\n        Game.ctx.fillStyle = EQUIP_COLOR;\r\n        Game.ctx.globalAlpha = 0.3;\r\n        const yOff = Math.floor(s * (1 - this.equipAnimAmount[idx]));\r\n        Game.ctx.fillRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\r\n          Math.floor(startY + b + yOff),\r\n          Math.floor(s),\r\n          Math.floor(s - yOff),\r\n        );\r\n        Game.ctx.globalAlpha = 1;\r\n        /*\r\n        Game.ctx.clearRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\r\n          Math.floor(startY + b + 1),\r\n          Math.floor(s - 2),\r\n          Math.floor(s - 2),\r\n        );\r\n        */\r\n      }\r\n\r\n      // Draw item icon if exists\r\n      if (idx < this.items.length && this.items[idx] !== null) {\r\n        const drawX =\r\n          startX +\r\n          xIdx * (s + 2 * b + g) +\r\n          b +\r\n          Math.floor(0.5 * s) -\r\n          0.5 * GameConstants.TILESIZE;\r\n        const drawY =\r\n          startY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawXScaled = drawX / GameConstants.TILESIZE;\r\n        const drawYScaled = drawY / GameConstants.TILESIZE;\r\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n      }\r\n    }\r\n\r\n    // Draw selection box only if mouse is in bounds\r\n    if (true) {\r\n      const selStartX = Math.floor(startX + this.selX * (s + 2 * b + g));\r\n      const selStartY = Math.floor(startY);\r\n      /*\r\n      // Outer selection box (dark)\r\n      Game.ctx.fillStyle = OUTLINE_COLOR;\r\n      Game.ctx.fillRect(\r\n        selStartX - hg,\r\n        selStartY - hg,\r\n        s + 2 * b + 2 * hg,\r\n        s + 2 * b + 2 * hg,\r\n      );\r\n      */\r\n\r\n      // Inner selection box (light grey)\r\n      Game.ctx.fillStyle = FILL_COLOR;\r\n      Game.ctx.fillRect(\r\n        Math.floor(selStartX + b - hg),\r\n        Math.floor(selStartY + b - hg),\r\n        Math.floor(s + 2 * hg),\r\n        Math.floor(s + 2 * hg),\r\n      );\r\n\r\n      Game.ctx.clearRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b),\r\n        Math.floor(startY + b),\r\n        Math.floor(s),\r\n        Math.floor(s),\r\n      );\r\n\r\n      // Draw equip animation for selected slot with highlight\r\n      const idx = this.selX;\r\n      Game.ctx.fillStyle = EQUIP_COLOR;\r\n      Game.ctx.globalAlpha = 0.3;\r\n      const yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[idx]);\r\n      Game.ctx.fillRect(\r\n        Math.round(startX + this.selX * (s + 2 * b + g) + b - hg),\r\n        Math.round(startY + b + yOff - hg),\r\n        Math.round(s + 2 * hg),\r\n        Math.round(s + 2 * hg - yOff),\r\n      );\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      /*\r\n      Game.ctx.clearRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b),\r\n        Math.floor(startY + b),\r\n        Math.floor(s),\r\n        Math.floor(s),\r\n      );\r\n      */\r\n      this.drawUsingItem(delta, startX, startY, s, b, g);\r\n\r\n      // Redraw the selected item\r\n      if (idx < this.items.length && this.items[idx] !== null) {\r\n        const drawX =\r\n          selStartX + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawY =\r\n          selStartY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawXScaled = drawX / GameConstants.TILESIZE;\r\n        const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n      }\r\n      this.drawUsingItem(delta, startX, startY, s, b, g);\r\n    }\r\n    this.drawUsingItem(delta, startX, startY, s, b, g);\r\n  };\r\n\r\n  drawUsingItem = (\r\n    delta: number,\r\n    startX: number,\r\n    startY: number,\r\n    s: number,\r\n    b: number,\r\n    g: number,\r\n  ) => {\r\n    // Highlight the usingItem's slot if in using state and it's different from current selection\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    if (this.usingItem && this.usingItemIndex !== null) {\r\n      const usingX = this.usingItemIndex % this.cols;\r\n      const usingY = Math.floor(this.usingItemIndex / this.cols);\r\n      const highlightStartX = startX + usingX * (s + 2 * b + g);\r\n      const highlightStartY = startY + usingY * (s + 2 * b + g);\r\n\r\n      Game.ctx.strokeStyle = \"yellow\"; // Choose a distinct color for using item\r\n      Game.ctx.lineWidth = 2;\r\n      Game.ctx.strokeRect(\r\n        highlightStartX,\r\n        highlightStartY,\r\n        s + 2 * b,\r\n        s + 2 * b,\r\n      );\r\n      Game.ctx.lineWidth = 1; // Reset line width\r\n    }\r\n  };\r\n\r\n  updateEquipAnimAmount = (delta: number) => {\r\n    this.equipAnimAmount.forEach((amount, idx) => {\r\n      const item = this.items[idx];\r\n      if (item instanceof Equippable) {\r\n        let targetAmount = item.equipped ? 1 : 0;\r\n        let currentAmount = this.itemEquipAnimations.get(item) ?? amount;\r\n\r\n        currentAmount += 0.2 * delta * (targetAmount - currentAmount);\r\n        currentAmount = Math.max(0, Math.min(1, currentAmount));\r\n\r\n        this.itemEquipAnimations.set(item, currentAmount);\r\n        this.equipAnimAmount[idx] = currentAmount;\r\n      } else {\r\n        this.equipAnimAmount[idx] = 0;\r\n        if (item) this.itemEquipAnimations.delete(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n    Game.ctx.imageSmoothingQuality = \"low\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\r\n    const s = Math.floor(\r\n      Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\r\n    ); // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const invRows = Math.floor(this.rows + this._expansion);\r\n    const ob = 1; // outer border\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    const height = Math.floor(invRows * (s + 2 * b + g) - g);\r\n    const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n    const mainBgY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\r\n\r\n    // Draw coins and quickbar (these are always visible)\r\n    this.drawCoins(delta);\r\n    this.drawQuickbar(delta);\r\n    this.updateEquipAnimAmount(delta);\r\n    this.drawInventoryButton(delta);\r\n\r\n    if (this.isOpen) {\r\n      // Draw semi-transparent background for full inventory\r\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      // Define dimensions and styling variables (similar to drawQuickbar)\r\n      const s = Math.floor(\r\n        Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\r\n      ); // size of box\r\n      const b = 2; // border\r\n      const g = -2; // gap\r\n      const hg = Math.floor(\r\n        3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5),\r\n      ); // highlighted growth\r\n      const invRows = this.rows + this._expansion;\r\n      const ob = 1; // outer border\r\n      const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n      const height = Math.floor(invRows * (s + 2 * b + g) - g);\r\n\r\n      // Draw main inventory background (similar to drawQuickbar)\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n      const mainBgY =\r\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\r\n      Game.ctx.fillRect(mainBgX, mainBgY, width + 2 * ob, height + 2 * ob);\r\n\r\n      // Draw highlighted background for selected item only if mouse is in bounds\r\n      if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n        const highlightX =\r\n          Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              this.selX * (s + 2 * b + g),\r\n          ) -\r\n          hg -\r\n          ob;\r\n        const highlightY =\r\n          Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              this.selY * (s + 2 * b + g),\r\n          ) -\r\n          hg -\r\n          ob;\r\n\r\n        Game.ctx.fillRect(\r\n          highlightX,\r\n          highlightY,\r\n          s + 2 * b + 2 * hg + 2 * ob,\r\n          s + 2 * b + 2 * hg + 2 * ob,\r\n        );\r\n      }\r\n\r\n      // Draw individual inventory slots (similar to drawQuickbar, but for all rows)\r\n      for (let xIdx = 0; xIdx < this.cols; xIdx++) {\r\n        for (let yIdx = 0; yIdx < this.rows + this._expansion; yIdx++) {\r\n          // Draw slot outline\r\n          const slotX = Math.round(\r\n            0.5 * GameConstants.WIDTH - 0.5 * width + xIdx * (s + 2 * b + g),\r\n          );\r\n          const slotY = Math.round(\r\n            0.5 * GameConstants.HEIGHT - 0.5 * height + yIdx * (s + 2 * b + g),\r\n          );\r\n          Game.ctx.fillStyle = OUTLINE_COLOR;\r\n          Game.ctx.fillRect(slotX, slotY, s + 2 * b, s + 2 * b);\r\n\r\n          // Draw slot background\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(slotX + b, slotY + b, s, s);\r\n\r\n          // Draw equip animation (unique to full inventory view)\r\n          const idx = xIdx + yIdx * this.cols;\r\n          Game.ctx.fillStyle = EQUIP_COLOR;\r\n          const yOff = Math.round(s * (1 - this.equipAnimAmount[idx]));\r\n          Game.ctx.fillRect(slotX + b, slotY + b + yOff, s, s - yOff);\r\n\r\n          // Draw item icon if exists\r\n          if (idx < this.items.length && this.items[idx] !== null) {\r\n            const drawX = Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                xIdx * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawY = Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                yIdx * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawXScaled = drawX / GameConstants.TILESIZE;\r\n            const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Draw item icons after animation delay (similar to drawQuickbar, but for all items)\r\n      if (Date.now() - this.openTime >= OPEN_TIME) {\r\n        this.items.forEach((item, idx) => {\r\n          if (item === null) return;\r\n          const x = idx % this.cols;\r\n          const y = Math.floor(idx / this.cols);\r\n\r\n          const drawX = Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              x * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n          const drawY = Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              y * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n\r\n          const drawXScaled = drawX / GameConstants.TILESIZE;\r\n          const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n          item.drawIcon(delta, drawXScaled, drawYScaled);\r\n        });\r\n\r\n        // Draw selection box and related elements only if mouse is in bounds\r\n        if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n          // Draw selection box\r\n          Game.ctx.fillStyle = OUTLINE_COLOR;\r\n          Game.ctx.fillRect(\r\n            Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                this.selX * (s + 2 * b + g) -\r\n                hg,\r\n            ),\r\n            Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                this.selY * (s + 2 * b + g) -\r\n                hg,\r\n            ),\r\n            s + 2 * b + 2 * hg,\r\n            s + 2 * b + 2 * hg,\r\n          );\r\n\r\n          const slotX = Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              this.selX * (s + 2 * b + g) +\r\n              b -\r\n              hg,\r\n          );\r\n          const slotY = Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              this.selY * (s + 2 * b + g) +\r\n              b -\r\n              hg,\r\n          );\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(slotX, slotY, s + 2 * hg, s + 2 * hg);\r\n\r\n          // Draw equip animation for selected item (unique to full inventory view)\r\n          const idx = this.selX + this.selY * this.cols;\r\n          if (idx < this.items.length && this.items[idx] !== null) {\r\n            Game.ctx.fillStyle = EQUIP_COLOR;\r\n            const yOff = Math.round(\r\n              (s + 2 * hg) * (1 - this.equipAnimAmount[idx]),\r\n            );\r\n            Game.ctx.fillRect(\r\n              Math.round(\r\n                0.5 * GameConstants.WIDTH -\r\n                  0.5 * width +\r\n                  this.selX * (s + 2 * b + g) +\r\n                  b -\r\n                  hg,\r\n              ),\r\n              Math.round(\r\n                0.5 * GameConstants.HEIGHT -\r\n                  0.5 * height +\r\n                  this.selY * (s + 2 * b + g) +\r\n                  b -\r\n                  hg +\r\n                  yOff,\r\n              ),\r\n              s + 2 * hg,\r\n              s + 2 * hg - yOff,\r\n            );\r\n\r\n            // Redraw selected item icon (similar to drawQuickbar)\r\n            const drawX = Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                this.selX * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawY = Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                this.selY * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n\r\n            const drawXScaled = drawX / GameConstants.TILESIZE;\r\n            const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n          }\r\n\r\n          // **Move drawUsingItem here, after the main selection box**\r\n        }\r\n\r\n        // **Ensure drawUsingItem is not called again here**\r\n        // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\r\n      }\r\n\r\n      // **Ensure drawUsingItem is not called again here**\r\n      // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\r\n      // Draw item description and action text (unique to full inventory view)\r\n      const selectedIdx = this.selX + this.selY * this.cols;\r\n\r\n      if (selectedIdx < this.items.length && this.items[selectedIdx] !== null) {\r\n        const item = this.items[selectedIdx]!;\r\n        Game.ctx.fillStyle = \"white\";\r\n\r\n        // Determine action text\r\n        let topPhrase = \"\";\r\n        if (item instanceof Equippable) {\r\n          topPhrase = item.equipped ? \"[SPACE] to unequip\" : \"[SPACE] to equip\";\r\n        }\r\n        if (item instanceof Usable) {\r\n          topPhrase = \"[SPACE] to use\";\r\n        }\r\n\r\n        // Draw action text\r\n        const actionTextWidth = Game.measureText(topPhrase).width;\r\n        Game.fillText(\r\n          topPhrase,\r\n          Math.round(0.5 * (GameConstants.WIDTH - actionTextWidth)),\r\n          5,\r\n        );\r\n\r\n        // Draw item description\r\n        const lines = item.getDescription().split(\"\\n\");\r\n        let nextY = Math.round(\r\n          0.5 * GameConstants.HEIGHT -\r\n            0.5 * height +\r\n            (this.rows + this.expansion) * (s + 2 * b + g) +\r\n            b +\r\n            5,\r\n        );\r\n        lines.forEach((line) => {\r\n          nextY = this.textWrap(line, 5, nextY, GameConstants.WIDTH - 10);\r\n        });\r\n      }\r\n    }\r\n    if (this.isOpen) {\r\n      this.drawUsingItem(delta, mainBgX + 1, mainBgY + 1, s, b, g);\r\n    }\r\n\r\n    this.drawDraggedItem(delta);\r\n  };\r\n\r\n  isPointInInventoryBounds = (\r\n    x: number,\r\n    y: number,\r\n  ): { inBounds: boolean; startX: number; startY: number } => {\r\n    const s = this.isOpen\r\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n      : 18;\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n\r\n    let startX: number;\r\n    let startY: number;\r\n    let height: number;\r\n\r\n    if (this.isOpen) {\r\n      // Full inventory bounds\r\n      height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\r\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n      startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height);\r\n    } else {\r\n      // Quickbar bounds\r\n      height = s + 2 * b;\r\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n      startY = Math.round(GameConstants.HEIGHT - height - 5);\r\n    }\r\n\r\n    const inBounds =\r\n      x >= startX - ob &&\r\n      x <= startX + width + ob &&\r\n      y >= startY - ob &&\r\n      y <= startY + height + ob;\r\n\r\n    return {\r\n      inBounds,\r\n      startX,\r\n      startY,\r\n    };\r\n  };\r\n  isPointInQuickbarBounds = (\r\n    x: number,\r\n    y: number,\r\n  ): { inBounds: boolean; startX: number; startY: number } => {\r\n    const s = this.isOpen\r\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n      : 18;\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n    const startY = Math.round(GameConstants.HEIGHT - (s + 2 * b) - 5);\r\n    const quickbarHeight = s + 2 * b;\r\n\r\n    const inBounds =\r\n      x >= startX &&\r\n      x <= startX + width &&\r\n      y >= startY &&\r\n      y <= startY + quickbarHeight;\r\n\r\n    return {\r\n      inBounds,\r\n      startX,\r\n      startY,\r\n    };\r\n  };\r\n\r\n  isPointInInventoryButton = (x: number, y: number): boolean => {\r\n    const tX = x / GameConstants.TILESIZE;\r\n    const tY = y / GameConstants.TILESIZE;\r\n    return (\r\n      tX >= this.buttonX &&\r\n      tX <= this.buttonX + 1 &&\r\n      tY >= this.buttonY &&\r\n      tY <= this.buttonY + 1\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draws the inventory button to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawInventoryButton = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n    this.buttonX = GameConstants.WIDTH / GameConstants.TILESIZE - 1.25;\r\n    this.buttonY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.25;\r\n    if (GameConstants.WIDTH < 145) {\r\n      //this.buttonX -= 1;\r\n      this.buttonY -= 1.25;\r\n    }\r\n    Game.drawFX(0, 0, 1, 1, this.buttonX, this.buttonY, 1, 1);\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  getQuickbarStartX = () => {\r\n    const s = 18; // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    return Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n  };\r\n\r\n  handleMouseDown = (x: number, y: number, button: number) => {\r\n    // Ignore if not left click\r\n    if (button !== 0) return;\r\n\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n    if (bounds.inBounds) {\r\n      const selectedItem = this.itemAtSelectedSlot();\r\n      if (selectedItem !== null) {\r\n        this._dragStartItem = selectedItem;\r\n        this._dragStartSlot = this.selX + this.selY * this.cols;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Unified method to initiate dragging.\r\n   */\r\n  initiateDrag = () => {\r\n    if (this._dragStartItem === null || this._isDragging) {\r\n      return;\r\n    }\r\n\r\n    this._isDragging = true;\r\n    this.grabbedItem = this._dragStartItem;\r\n\r\n    // Remove item from original slot\r\n    if (this._dragStartSlot !== null) {\r\n      this.items[this._dragStartSlot] = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle hold detection for both mouse and touch.\r\n   */\r\n  onHoldDetected = () => {\r\n    this.initiateDrag();\r\n  };\r\n\r\n  /**\r\n   * Continuously check for mouse hold during tick.\r\n   */\r\n  checkForDragStart = () => {\r\n    if (Input.mouseDown && Input.isMouseHold) {\r\n      this.initiateDrag();\r\n    } else if (Input.isTapHold) {\r\n      this.initiateDrag();\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (x: number, y: number, button: number) => {\r\n    // Ignore if not left click\r\n    if (button !== 0) return;\r\n\r\n    const invBounds = this.isPointInInventoryBounds(x, y);\r\n    const quickbarBounds = this.isPointInQuickbarBounds(x, y);\r\n    const isValidDropZone = this.isOpen\r\n      ? invBounds.inBounds\r\n      : quickbarBounds.inBounds;\r\n\r\n    if (isValidDropZone) {\r\n      if (this._isDragging && this.grabbedItem !== null) {\r\n        // We were dragging, place the item\r\n        const targetSlot = this.selX + this.selY * this.cols;\r\n        this.placeItemInSlot(targetSlot);\r\n      } else if (this._dragStartItem !== null) {\r\n        // We had an item but weren't dragging (quick click)\r\n        this.itemUse();\r\n      }\r\n    } else if (this.grabbedItem !== null) {\r\n      // Drop the item in the world\r\n      this.dropItem(this.grabbedItem, this._dragStartSlot);\r\n\r\n      this.grabbedItem = null;\r\n      this.items[this._dragStartSlot] = null;\r\n    }\r\n\r\n    // Reset all drag/hold state\r\n    this._isDragging = false;\r\n    this._dragStartItem = null;\r\n    this._dragStartSlot = null;\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  placeItemInSlot = (targetSlot: number) => {\r\n    if (this.grabbedItem === null) return;\r\n\r\n    const existingItem = this.items[targetSlot];\r\n\r\n    // If target slot is empty\r\n    if (existingItem === null) {\r\n      this.items[targetSlot] = this.grabbedItem;\r\n    } else {\r\n      // Swap items\r\n      if (this._dragStartSlot !== null) {\r\n        this.items[this._dragStartSlot] = existingItem;\r\n      }\r\n      this.items[targetSlot] = this.grabbedItem;\r\n    }\r\n\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  get expansion(): number {\r\n    return this._expansion;\r\n  }\r\n\r\n  set expansion(value: number) {\r\n    if (value !== this._expansion) {\r\n      const oldTotalSlots = (this.rows + this._expansion) * this.cols;\r\n      this._expansion = value;\r\n      const newTotalSlots = (this.rows + this._expansion) * this.cols;\r\n\r\n      // Resize items array\r\n      if (newTotalSlots > oldTotalSlots) {\r\n        this.items.push(...Array(newTotalSlots - oldTotalSlots).fill(null));\r\n        this.equipAnimAmount.push(\r\n          ...Array(newTotalSlots - oldTotalSlots).fill(0),\r\n        );\r\n      } else if (newTotalSlots < oldTotalSlots) {\r\n        this.items.length = newTotalSlots;\r\n        this.equipAnimAmount.length = newTotalSlots;\r\n      }\r\n    }\r\n  }\r\n\r\n  expandInventory(additionalRows: number) {\r\n    this.expansion += additionalRows;\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { LevelConstants } from \"../levelConstants\";\r\nimport { Room } from \"../room\";\r\nimport { Equippable } from \"./equippable\";\r\n\r\nexport class Armor extends Equippable {\r\n  health: number;\r\n  rechargeTurnCounter: number;\r\n  readonly RECHARGE_TURNS = 25;\r\n  static itemName = \"armor\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.health = 1;\r\n    this.rechargeTurnCounter = -1;\r\n    this.tileX = 5;\r\n    this.tileY = 0;\r\n  }\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    if (other instanceof Armor) return false;\r\n    return true;\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return (\r\n      \"ENCHANTED ARMOR\\nA magic suit of armor. Absorbs one hit and regenerates after \" +\r\n      this.RECHARGE_TURNS +\r\n      \" turns.\"\r\n    );\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    if (this.rechargeTurnCounter > 0) {\r\n      this.rechargeTurnCounter--;\r\n      if (this.rechargeTurnCounter === 0) {\r\n        this.rechargeTurnCounter = -1;\r\n        this.health = 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  hurt = (damage: number) => {\r\n    if (this.health <= 0) return;\r\n    this.health -= Math.max(damage, 1);\r\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\r\n  };\r\n\r\n  drawGUI = (delta: number, playerHealth: number) => {\r\n    if (this.rechargeTurnCounter === -1)\r\n      Game.drawFX(\r\n        5,\r\n        2,\r\n        0.75,\r\n        0.75,\r\n        playerHealth * 0.75 + 0.1,\r\n        LevelConstants.SCREEN_H - 1,\r\n        0.75,\r\n        0.75,\r\n      );\r\n    else {\r\n      let rechargeProportion =\r\n        1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\r\n\r\n      if (rechargeProportion < 0.5)\r\n        Game.drawFX(\r\n          7,\r\n          2,\r\n          0.75,\r\n          0.75,\r\n          playerHealth * 0.75 + 0.1,\r\n          LevelConstants.SCREEN_H - 1,\r\n          0.75,\r\n          0.75,\r\n        );\r\n      else\r\n        Game.drawFX(\r\n          8,\r\n          2,\r\n          0.75,\r\n          0.75,\r\n          playerHealth * 0.75 + 0.1,\r\n          LevelConstants.SCREEN_H - 1,\r\n          0.75,\r\n          0.75,\r\n        );\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Inventory } from \"../inventory\";\r\n\r\nexport class Backpack extends Usable {\r\n  static itemName = \"backpack\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 4;\r\n    this.tileY = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n    player.inventory.removeItem(this);\r\n    player.inventory.expansion += 1;\r\n    this.level.game.pushMessage(\r\n      \"You equip the backpack, increasing the amount you can carry.\",\r\n    );\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n  getDescription = () => {\r\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Bestiary } from \"../bestiary\";\r\n\r\nexport class BestiaryBook extends Usable {\r\n  static itemName = \"bestiary book\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 8;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = BestiaryBook.itemName;\r\n    this.description = \"opens the bestiary\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.bestiary === null) {\r\n      player.bestiary = new Bestiary(player.game, player);\r\n    }\r\n    player.bestiary.toggleOpen();\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class BlueGem extends Item {\r\n  static itemName = \"zircon\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 13;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"ZIRCON\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\n//import { Bomb } from \"../entity/object/bomb\";\r\n\r\nexport class BombItem extends Usable {\r\n  static itemName = \"bomb\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 20;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.name = BombItem.itemName;\r\n    this.description = \"explodes\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    const { Bomb } = require(\"../entity/object/bomb\");\r\n    Bomb.add(player.game.room, player.game, player.x, player.y);\r\n    player.inventory.removeItem(this);\r\n    Sound.mine();\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Torch } from \"./torch\";\r\nimport { Lantern } from \"./lantern\";\r\nimport { Inventory } from \"../inventory\";\r\nimport { Player } from \"../player\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class Candle extends Light {\r\n  static itemName = \"candle\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.fuel = 50; //how many turns before it burns out\r\n    this.tileX = 27;\r\n    this.tileY = 0;\r\n    this.name = \"candle\";\r\n    this.fuelCap = 50;\r\n    this.radius = 4;\r\n    this.stackable = true;\r\n    this.maxBrightness = 2;\r\n    this.maxBrightness = 0.25;\r\n  }\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Usable } from \"./usable\";\r\nimport { Lantern } from \"./lantern\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class Coal extends Usable {\r\n  static itemName = \"coal\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 17;\r\n    this.tileY = 0;\r\n    this.stackable = true;\r\n    this.stackCount = Math.ceil(Math.random() * 7 + 3);\r\n    this.name = Coal.itemName;\r\n    this.description = \"A piece of coal. Fuels lantern.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n  onUse = (player: Player) => {\r\n    let l = player.inventory.hasItem(Lantern);\r\n    if (l instanceof Lantern) {\r\n      if (l.fuel <= l.fuelCap - 50) {\r\n        player.game.pushMessage(\"You add some fuel to your lantern.\");\r\n        this.stackCount -= 1;\r\n        if (this.stackCount <= 0) {\r\n          player.inventory.removeItem(this);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Light) {\r\n      if (other.canRefuel && other.fuel <= 0 && other.broken) {\r\n        let amountToRefuel = Math.min(this.stackCount * 25, other.fuelCap);\r\n        other.fuel += amountToRefuel;\r\n        this.stackCount -= amountToRefuel / 25;\r\n        other.broken = false;\r\n        this.level.game.pushMessage(\r\n          `You add refuel your ${other.name} with ${amountToRefuel / 25} coal.`,\r\n        );\r\n\r\n        if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\n\r\nexport class Coin extends Item {\r\n  stack: number;\r\n  static itemName = \"coin\";\r\n  //checked: boolean;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 19;\r\n    this.tileY = 0;\r\n    this.stack = 1;\r\n    this.stackable = true;\r\n    this.name = Coin.itemName;\r\n  }\r\n  onDrop = () => {\r\n    const coinList = []; //array to store coin objects\r\n    for (const item of this.level.items) {\r\n      if (item instanceof Coin) coinList.push(item);\r\n    }\r\n    for (const otherCoin of coinList) {\r\n      if (\r\n        this !== otherCoin &&\r\n        this.x === otherCoin.x &&\r\n        this.y === otherCoin.y\r\n      ) {\r\n        this.stack += otherCoin.stack;\r\n        this.level.items = this.level.items.filter((x) => x !== otherCoin);\r\n      }\r\n      if (this.stack === 2) this.tileX = 20;\r\n      else if (this.stack >= 3) this.tileX = 21;\r\n    }\r\n  };\r\n  get distanceToBottomRight() {\r\n    return Math.sqrt(\r\n      (this.x + this.w - window.innerWidth) ** 2 +\r\n        (this.y + this.h - window.innerHeight) ** 2,\r\n    );\r\n  }\r\n\r\n  pickupSound = () => {\r\n    if (this.level === this.level.game.room) Sound.pickupCoin();\r\n  };\r\n}\r\n","import { Entity } from \"../entity/entity\";\r\nimport { Armor } from \"./armor\";\r\nimport { BlueGem } from \"./bluegem\";\r\nimport { Candle } from \"./candle\";\r\nimport { Coin } from \"./coin\";\r\nimport { GreenGem } from \"./greengem\";\r\nimport { Heart } from \"./heart\";\r\nimport { Item } from \"./item\";\r\nimport { RedGem } from \"./redgem\";\r\nimport { WeaponFragments } from \"./weaponFragments\";\r\nimport { Spear } from \"../weapon/spear\";\r\nimport { Warhammer } from \"../weapon/warhammer\";\r\nimport { DualDagger } from \"../weapon/dualdagger\";\r\nimport { WeaponPoison } from \"./weaponPoison\";\r\nimport { WeaponBlood } from \"./weaponBlood\";\r\nimport { Gold } from \"./gold\";\r\nimport { Stone } from \"./stone\";\r\nimport { Pickaxe } from \"../weapon/pickaxe\";\r\nimport { Hammer } from \"./hammer\";\r\nimport { Coal } from \"./coal\";\r\nimport { Torch } from \"./torch\";\r\nimport { Lantern } from \"./lantern\";\r\nimport { Spellbook } from \"../weapon/spellbook\";\r\nimport { SpellbookPage } from \"./spellbookPage\";\r\nimport { Backpack } from \"./backpack\";\r\nimport { BombItem } from \"./bombItem\";\r\n\r\ninterface Drop {\r\n  itemType: string;\r\n  dropWeight: number;\r\n  category: string[];\r\n  minDepth?: number;\r\n}\r\n\r\nexport const ItemTypeMap: { [key: string]: typeof Item } = {\r\n  dualdagger: DualDagger,\r\n  warhammer: Warhammer,\r\n  spear: Spear,\r\n  spellbook: Spellbook,\r\n\r\n  armor: Armor,\r\n\r\n  pickaxe: Pickaxe,\r\n  hammer: Hammer,\r\n\r\n  heart: Heart,\r\n  weaponpoison: WeaponPoison,\r\n  weaponblood: WeaponBlood,\r\n\r\n  coin: Coin,\r\n\r\n  weaponfragments: WeaponFragments,\r\n  spellbookPage: SpellbookPage,\r\n\r\n  backpack: Backpack,\r\n\r\n  candle: Candle,\r\n  torch: Torch,\r\n  lantern: Lantern,\r\n\r\n  redgem: RedGem,\r\n  bluegem: BlueGem,\r\n  greengem: GreenGem,\r\n  gold: Gold,\r\n  stone: Stone,\r\n  coal: Coal,\r\n  bomb: BombItem,\r\n};\r\n\r\nexport class DropTable {\r\n  static drops: Drop[] = [\r\n    // Weapons\r\n    { itemType: \"dualdagger\", dropWeight: 1, category: [\"weapon\", \"melee\"] },\r\n    { itemType: \"warhammer\", dropWeight: 2, category: [\"weapon\", \"melee\"] },\r\n    { itemType: \"spear\", dropWeight: 5, category: [\"weapon\", \"melee\"] },\r\n    { itemType: \"spellbook\", dropWeight: 1, category: [\"weapon\", \"magic\"] },\r\n\r\n    // Equipment\r\n    { itemType: \"armor\", dropWeight: 8, category: [\"equipment\"] },\r\n\r\n    // Tools\r\n    { itemType: \"pickaxe\", dropWeight: 3, category: [\"tool\"] },\r\n    { itemType: \"hammer\", dropWeight: 3, category: [\"tool\"] },\r\n\r\n    // Consumables\r\n    { itemType: \"heart\", dropWeight: 5, category: [\"consumable\"] },\r\n    { itemType: \"weaponpoison\", dropWeight: 1, category: [\"consumable\"] },\r\n    { itemType: \"weaponblood\", dropWeight: 1, category: [\"consumable\"] },\r\n\r\n    { itemType: \"coin\", dropWeight: 100, category: [\"coin\"] },\r\n\r\n    {\r\n      itemType: \"weaponfragments\",\r\n      dropWeight: 5,\r\n      category: [\"consumable\", \"melee\"],\r\n    },\r\n    {\r\n      itemType: \"spellbookPage\",\r\n      dropWeight: 2,\r\n      category: [\"consumable\", \"magic\"],\r\n    },\r\n\r\n    // Upgrades\r\n    { itemType: \"backpack\", dropWeight: 5, category: [\"upgrade\"] },\r\n\r\n    // Light sources\r\n    { itemType: \"candle\", dropWeight: 10, category: [\"light\"] },\r\n    { itemType: \"torch\", dropWeight: 5, category: [\"light\"] },\r\n    { itemType: \"lantern\", dropWeight: 2, category: [\"light\"] },\r\n\r\n    // Gems and minerals\r\n    { itemType: \"redgem\", dropWeight: 5, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"bluegem\", dropWeight: 5, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"greengem\", dropWeight: 5, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"gold\", dropWeight: 5, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"stone\", dropWeight: 5, category: [\"gem\", \"resource\"] },\r\n    {\r\n      itemType: \"coal\",\r\n      dropWeight: 15,\r\n      category: [\"fuel\", \"lantern\", \"resource\"],\r\n    },\r\n    { itemType: \"bomb\", dropWeight: 30, category: [\"bomb\", \"weapon\"] },\r\n  ];\r\n\r\n  static getDrop = (\r\n    entity: Entity,\r\n    uniqueTable: boolean = false,\r\n    useCategory: string[] = [\"coin\"],\r\n    force: boolean = false,\r\n    currentDepth: number = 0,\r\n  ) => {\r\n    let filteredDropsByCategory: Drop[] = [];\r\n    let filteredDropsByItem: Drop[] = [];\r\n    let filteredDropsByDepth: Drop[] = [];\r\n\r\n    const allCategories = Array.from(\r\n      new Set(this.drops.flatMap((drop) => drop.category)),\r\n    );\r\n    const allItemTypes = Object.keys(ItemTypeMap);\r\n\r\n    const allDepth = this.drops.map((drop) => drop.minDepth);\r\n\r\n    // Separate categories and specific item names from useCategory\r\n    const categories = useCategory.filter((cat) => allCategories.includes(cat));\r\n    const specificItems = useCategory.filter((item) =>\r\n      allItemTypes.includes(item),\r\n    );\r\n    const itemsByDepth = this.drops.filter(\r\n      (drop) => drop.minDepth === undefined || drop.minDepth <= currentDepth,\r\n    );\r\n\r\n    // Get drops from specified categories\r\n    if (categories.length > 0) {\r\n      filteredDropsByCategory = itemsByDepth.filter((drop) =>\r\n        drop.category.some((cat) => categories.includes(cat)),\r\n      );\r\n    }\r\n\r\n    // Get specific drops by item name\r\n    if (specificItems.length > 0) {\r\n      filteredDropsByItem = itemsByDepth.filter((drop) =>\r\n        specificItems.includes(drop.itemType),\r\n      );\r\n    }\r\n\r\n    // Combine and remove duplicates\r\n    const combinedDropsMap: { [key: string]: Drop } = {};\r\n\r\n    filteredDropsByCategory.forEach((drop) => {\r\n      combinedDropsMap[drop.itemType] = drop;\r\n    });\r\n\r\n    filteredDropsByItem.forEach((drop) => {\r\n      combinedDropsMap[drop.itemType] = drop;\r\n    });\r\n\r\n    let combinedDrops = Object.values(combinedDropsMap);\r\n\r\n    // If no categories or specific items matched, use items by depth\r\n    if (combinedDrops.length === 0) {\r\n      combinedDrops = itemsByDepth;\r\n    }\r\n\r\n    if (combinedDrops.length === 0) {\r\n      if (force) {\r\n        combinedDrops = itemsByDepth;\r\n        if (combinedDrops.length === 0) return null;\r\n      } else return null;\r\n    }\r\n\r\n    const totalWeight = combinedDrops.reduce(\r\n      (acc, drop) => acc + drop.dropWeight,\r\n      0,\r\n    );\r\n\r\n    const randomWeight = Math.floor(Math.random() * totalWeight);\r\n\r\n    let cumulativeWeight = 0;\r\n    for (const drop of combinedDrops) {\r\n      cumulativeWeight += drop.dropWeight;\r\n\r\n      if (randomWeight <= cumulativeWeight) {\r\n        this.addNewItem(drop.itemType, entity);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (force && combinedDrops.length > 0) {\r\n      this.addNewItem(combinedDrops[0].itemType, entity);\r\n      return;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  static addNewItem = (itemType: string, entity: Entity): void => {\r\n    const ItemClass = ItemTypeMap[itemType];\r\n    if (!ItemClass) {\r\n      console.error(`Item type \"${itemType}\" is not recognized.`);\r\n      return;\r\n    }\r\n    entity.drop = ItemClass.add(entity.room, entity.x, entity.y);\r\n    //console.log(\r\n    //  `Drop for ${entity.constructor.name}:`,\r\n    //  entity.drop.constructor.name,\r\n    //);\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Player } from \"../player\";\r\n\r\nexport class Equippable extends Item {\r\n  wielder: Player;\r\n  equipped: boolean;\r\n  equipTick: boolean = false;\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.equipped = false;\r\n  }\r\n\r\n  setWielder = (wielder: Player) => {\r\n    this.wielder = wielder;\r\n  };\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    return true;\r\n  };\r\n\r\n  toggleEquip = () => {\r\n    this.equipped = !this.equipped;\r\n    if (this.broken) {\r\n      this.equipped = false;\r\n      let pronoun = this.name.endsWith(\"s\") ? \"them\" : \"it\";\r\n      this.level.game.pushMessage(\r\n        \"You'll have to fix your \" +\r\n          this.name +\r\n          \" before you can use \" +\r\n          pronoun +\r\n          \".\",\r\n      );\r\n    }\r\n  };\r\n\r\n  drawEquipped = (delta: number, x: number, y: number) => {\r\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\r\n  };\r\n\r\n  degrade = (degradeAmount: number = 1) => {\r\n    this.durability -= degradeAmount;\r\n    if (this.durability <= 0) this.break();\r\n  };\r\n\r\n  break = () => {\r\n    this.durability = 0;\r\n    this.broken = true;\r\n    this.toggleEquip();\r\n    //this.wielder.inventory.removeItem(this);\r\n    //this.wielder = null;\r\n  };\r\n\r\n  onDrop = () => {};\r\n\r\n  dropFromInventory = () => {\r\n    this.wielder = null;\r\n    this.equipped = false;\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Usable } from \"./usable\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\n\r\nexport class GodStone extends Usable {\r\n  room: Room;\r\n  count: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.room = level;\r\n    this.count = 0;\r\n    this.tileX = 31;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n  onUse = (player: Player): void => {\r\n    this.teleportToExit(player);\r\n  };\r\n  teleportToExit = (player: Player): void => {\r\n    let downLadders = this.room.game.rooms.filter(\r\n      (room) => room.type === RoomType.DOWNLADDER,\r\n    );\r\n    console.log(\"downLadders\", downLadders);\r\n    const room = downLadders[downLadders.length - 1];\r\n    this.room.game.rooms.forEach((room) => {\r\n      room.entered = true;\r\n      room.calculateWallInfo();\r\n    });\r\n    room.game.changeLevelThroughDoor(player, room.doors[0], 1);\r\n    player.x = room.roomX + 2;\r\n    player.y = room.roomY + 3;\r\n  };\r\n  getDescription = (): string => {\r\n    return \"YOU SHOULD NOT HAVE THIS\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class Gold extends Item {\r\n  static itemName = \"gold\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 18;\r\n    this.tileY = 0;\r\n    this.name = Gold.itemName;\r\n    this.stackable = true;\r\n    this.description = \"A bar of gold\";\r\n  }\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class GoldenKey extends Equippable {\r\n  static itemName = \"goldenKey\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"GOLD KEY\\nA heavy gold key.\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class GreenGem extends Item {\r\n  static itemName = \"peridot\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 11;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"PERIDOT\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\nimport { Dagger } from \"../weapon/dagger\";\r\n\r\nexport class Hammer extends Usable {\r\n  static itemName = \"hammer\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 21;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n    this.description = \"useful for breaking weapons down into fragments\";\r\n    this.name = Hammer.itemName;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon && other.name !== \"dagger\") {\r\n      other.disassemble();\r\n      this.level.game.pushMessage(\r\n        `You dissassemble your ${other.name} into fragments.`,\r\n      );\r\n    } else if (other.name === \"dagger\") {\r\n      this.level.game.pushMessage(\r\n        `You probably shouldn't disassemble your dagger...`,\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\n\r\nexport class Heart extends Usable {\r\n  static itemName = \"health potion\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 8;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = Heart.itemName;\r\n    this.description = \"restores 1 health\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.health < player.maxHealth) {\r\n      player.health = Math.min(player.maxHealth, player.health + 1);\r\n      if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n        Sound.heal();\r\n      player.inventory.removeItem(this);\r\n    }\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Player } from \"../player\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { Drawable } from \"../drawable\";\r\nimport { Utils } from \"../utils\";\r\n\r\n// Item class extends Drawable class and represents an item in the game\r\nexport class Item extends Drawable {\r\n  // Item properties\r\n  x: number; // x-coordinate of the item\r\n  y: number; // y-coordinate of the item\r\n  w: number; // width of the item\r\n  h: number; // height of the item\r\n  offsetY: number; // offset of the item on the y-axis\r\n  tileX: number; // x-coordinate of the tile where the item is located\r\n  tileY: number; // y-coordinate of the tile where the item is located\r\n  frame: number; // frame number for animation\r\n  level: Room; // level where the item is located\r\n  stackable: boolean; // whether the item is stackable or not\r\n  stackCount: number; // number of items in the stack\r\n  pickedUp: boolean; // whether the item has been picked up or not\r\n  alpha: number; // alpha value for transparency\r\n  scaleFactor: number; // scale factor for size adjustment\r\n  name: string;\r\n  startY: number;\r\n  randomOffset: number;\r\n  durability: number;\r\n  durabilityMax: number;\r\n  broken: boolean;\r\n  description: string;\r\n  drawOffset: number;\r\n  pickupOffsetY: number;\r\n  static itemName: string;\r\n  inChest: boolean;\r\n  chestOffsetY: number;\r\n  sineAnimateFactor: number;\r\n  stack: number;\r\n\r\n  // Constructor for the Item class\r\n  constructor(level: Room, x: number, y: number) {\r\n    super();\r\n\r\n    // Initialize properties\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.w = 1;\r\n    this.h = 2;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.stackable = false;\r\n    this.stackCount = 1;\r\n    this.pickedUp = false;\r\n    this.alpha = 1;\r\n    this.scaleFactor = 5;\r\n    this.offsetY = -0.25;\r\n    this.name = \"\";\r\n    this.startY = y;\r\n    this.randomOffset = Math.random();\r\n    this.durability = 50;\r\n    this.durabilityMax = 50;\r\n    this.broken = false;\r\n    this.description = \"\";\r\n    this.drawOffset = 0;\r\n    this.pickupOffsetY = 1;\r\n    this.chestOffsetY = 0;\r\n    this.sineAnimateFactor = 1;\r\n  }\r\n\r\n  static add<\r\n    T extends new (room: Room, x: number, y: number, ...rest: any[]) => Item,\r\n  >(this: T, room: Room, x: number, y: number, ...rest: any[]) {\r\n    return new this(room, x, y, ...rest);\r\n  }\r\n\r\n  // Empty tick function to be overridden by subclasses\r\n  tick = () => {};\r\n  // Empty tick function for inventory behavior to be overridden by subclasses\r\n  tickInInventory = () => {};\r\n\r\n  // Function to get description of the item, to be overridden by subclasses\r\n  getDescription = (): string => {\r\n    const stackText = this.stackable ? `\\nAmount: ${this.stackCount}` : \"\";\r\n    return `${this.name} \\n${this.description} \\n${stackText}`;\r\n  };\r\n\r\n  animateFromChest = () => {\r\n    this.chestOffsetY = 0.5;\r\n    this.alpha = 0;\r\n    this.inChest = true;\r\n    this.sineAnimateFactor = 0;\r\n  };\r\n\r\n  // Function to play sound when item is picked up\r\n  pickupSound = () => {\r\n    if (this.level === this.level.game.room) Sound.genericPickup();\r\n  };\r\n\r\n  // Empty function to be called when item is dropped, to be overridden by subclasses\r\n  onDrop = () => {};\r\n  // Function to be called when item is picked up\r\n  onPickup = (player: Player) => {\r\n    if (!this.pickedUp) {\r\n      this.startY = player.y;\r\n\r\n      this.drawableY = this.y;\r\n      this.alpha = 1;\r\n      this.pickedUp = player.inventory.addItem(this);\r\n      if (this.pickedUp) this.pickupSound();\r\n    }\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    this.setDrawOffset();\r\n  };\r\n\r\n  // Function to get the amount of shade at the item's location\r\n  shadeAmount = () => {\r\n    if (!this.x || !this.y) return 0;\r\n    else return this.level.softVis[this.x][this.y];\r\n  };\r\n\r\n  drawStatus = (x: number, y: number) => {};\r\n\r\n  drawBrokenSymbol = (x: number, y: number) => {\r\n    if (this.broken) {\r\n      Game.drawFX(\r\n        5,\r\n        0,\r\n        1,\r\n        1,\r\n        x - 0.5 / GameConstants.TILESIZE,\r\n        y - 0.5 / GameConstants.TILESIZE,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n\r\n  // Function to draw the item\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    if (!this.pickedUp) {\r\n      Game.ctx.globalAlpha = this.alpha;\r\n      if (this.alpha < 1) this.alpha += 0.01 * delta;\r\n      this.drawableY = this.y;\r\n      if (this.inChest) {\r\n        this.chestOffsetY -= Math.abs(this.chestOffsetY + 0.5) * 0.035 * delta;\r\n\r\n        if (this.chestOffsetY < -0.47) {\r\n          this.chestOffsetY = -0.5;\r\n        }\r\n      }\r\n      if (this.sineAnimateFactor < 1 && this.chestOffsetY < -0.45)\r\n        this.sineAnimateFactor += 0.2 * delta;\r\n      if (this.scaleFactor > 0) this.scaleFactor *= 0.5 ** delta;\r\n      else this.scaleFactor = 0;\r\n      const scale = 1 / (this.scaleFactor + 1);\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n\r\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\r\n      this.frame += (delta * (Math.PI * 2)) / 60;\r\n      Game.drawItem(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x + this.w * (scale * -0.5 + 0.5) + this.drawOffset,\r\n        this.y +\r\n          this.sineAnimateFactor * Math.sin(this.frame) * 0.07 -\r\n          1 +\r\n          this.offsetY +\r\n          this.h * (scale * -0.5 + 0.5) +\r\n          this.chestOffsetY,\r\n        this.w * scale,\r\n        this.h * scale,\r\n        this.level.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  setDrawOffset = () => {\r\n    const itemsOnTile = this.level.items.filter(\r\n      (item) => item.x === this.x && item.y === this.y,\r\n    );\r\n    if (itemsOnTile.length > 1) {\r\n      itemsOnTile.forEach((item) => {\r\n        item.drawOffset =\r\n          (-itemsOnTile.length / 2 + itemsOnTile.indexOf(item) + 1) /\r\n          itemsOnTile.length;\r\n      });\r\n    }\r\n  };\r\n\r\n  degrade = () => {\r\n    this.durability -= 1;\r\n  };\r\n\r\n  // Function to draw the top layer of the item\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.pickedUp) {\r\n      this.pickupOffsetY += (4.5 - this.pickupOffsetY) * 0.1 * delta;\r\n\r\n      //this.x += (Math.sin(Date.now() / 50) * delta) / 10;\r\n      this.alpha *= 0.9 ** delta;\r\n      if (Math.abs(this.alpha) < 0.01) {\r\n        this.drawOffset = 0;\r\n        this.pickupOffsetY = 1;\r\n\r\n        this.level.items = this.level.items.filter((x) => x !== this);\r\n      }\r\n\r\n      if (GameConstants.ALPHA_ENABLED)\r\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\r\n\r\n      Game.drawItem(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y - this.pickupOffsetY,\r\n        this.w,\r\n        this.h,\r\n      );\r\n\r\n      Game.ctx.globalAlpha = 1.0;\r\n    }\r\n  };\r\n  // Function to draw the item's icon\r\n  drawIcon = (delta: number, x: number, y: number, opacity = 1, count?) => {\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\r\n    this.drawDurability(x, y);\r\n    let shake = 0;\r\n    if (this.durability <= 1 && !this.broken)\r\n      shake =\r\n        Math.round(Math.sin(Date.now() / 25) + 1 / 2) /\r\n        2 /\r\n        GameConstants.TILESIZE;\r\n\r\n    Game.drawItem(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      2,\r\n      x + shake,\r\n      y - 1,\r\n      this.w,\r\n      this.h,\r\n    );\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    let countToUse = count ? count : this.stackCount;\r\n    let countText = countToUse <= 1 ? \"\" : \"\" + countToUse;\r\n    let width = Game.measureText(countText).width;\r\n    let countX = 16 - width;\r\n    let countY = 10;\r\n\r\n    Game.fillTextOutline(\r\n      countText,\r\n      x * GameConstants.TILESIZE + countX,\r\n      y * GameConstants.TILESIZE + countY,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    this.drawStatus(x, y);\r\n    this.drawBrokenSymbol(x, y);\r\n  };\r\n\r\n  // Function to draw the item's durability bar with color transitioning from green to red\r\n  drawDurability = (x: number, y: number) => {\r\n    if (this.durability < this.durabilityMax) {\r\n      // Calculate durability ratio (1 = full, 0 = broken)\r\n      const durabilityRatio = this.durability / this.durabilityMax;\r\n\r\n      // Map durability ratio to hue (120 = green, 0 = red)\r\n      let color = Utils.hsvToHex(\r\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\r\n        1, // Full saturation\r\n        1, // Full value\r\n      );\r\n\r\n      const iconWidth = GameConstants.TILESIZE;\r\n      const barWidth = Math.ceil(durabilityRatio * iconWidth); // Round to nearest pixel\r\n      const barHeight = 2; // 2 pixels tall\r\n\r\n      // Calculate the position of the durability bar\r\n      const barX = Math.ceil(x * GameConstants.TILESIZE); // Round to nearest pixel\r\n      const barY = Math.ceil(\r\n        y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2,\r\n      ); // Round to nearest pixel\r\n\r\n      // Set the fill style for the durability bar\r\n      Game.ctx.fillStyle = color;\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n\r\n      // Draw the durability bar\r\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\r\n\r\n      // Reset settings\r\n      Game.ctx.fillStyle = \"white\";\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { Player } from \"../player\";\r\n\r\nexport class Key extends Item {\r\n  static itemName = \"key\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 1;\r\n    this.tileY = 0;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"KEY\\nAn iron key.\";\r\n  };\r\n\r\n  onPickup = (player: Player) => {\r\n    if (!this.pickedUp) {\r\n      this.pickedUp = player.inventory.addItem(this);\r\n      if (this.pickedUp) Sound.keyPickup();\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Candle } from \"./candle\";\r\nimport { Torch } from \"./torch\";\r\nimport { Coal } from \"./coal\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class Lantern extends Light {\r\n  fuelCap: number;\r\n  static itemName = \"lantern\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.fuel = 0;\r\n    this.tileX = 29;\r\n    this.tileY = 0;\r\n    this.fuelCap = 250;\r\n    this.name = \"lantern\";\r\n    this.canRefuel = true;\r\n    this.maxBrightness = 20;\r\n    this.minBrightness = 5;\r\n    this.radius = 7;\r\n    this.broken = this.fuel <= 0 ? true : false;\r\n  }\r\n\r\n  getDescription = () => {\r\n    const percentage = Math.round((this.fuel / this.fuelCap) * 100);\r\n    return `LANTERN - Fuel: ${percentage}%, Capacity: ${this.fuelCap / 50}`;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Utils } from \"../utils\";\r\n\r\nexport abstract class Light extends Equippable {\r\n  fuel: number;\r\n  fuelCap: number;\r\n  radius: number;\r\n  maxBrightness: number;\r\n  minBrightness: number;\r\n  canRefuel: boolean = false;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 28;\r\n    this.tileY = 0;\r\n    this.fuel = 0;\r\n    this.fuelCap = 250;\r\n    this.maxBrightness = 5;\r\n    this.minBrightness = 2;\r\n    this.radius = 6;\r\n    this.equipped = false;\r\n  }\r\n\r\n  updateLighting = () => {\r\n    this.wielder.game.rooms[this.wielder.levelID].updateLighting();\r\n  };\r\n\r\n  get fuelPercentage() {\r\n    return this.fuel / this.fuelCap;\r\n  }\r\n\r\n  isIgnited = () => {\r\n    if (this.fuel > 0 && this.equipped) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  setRadius = () => {\r\n    this.wielder.sightRadius = this.radius + this.fuelPercentage * this.radius;\r\n  };\r\n\r\n  setBrightness = () => {\r\n    this.wielder.lightBrightness =\r\n      this.minBrightness + this.fuelPercentage * this.maxBrightness;\r\n  };\r\n\r\n  toggleEquip = () => {\r\n    if (this.fuel > 0) {\r\n      this.equipped = !this.equipped;\r\n      if (this.isIgnited()) {\r\n        //this.setRadius();\r\n        this.setBrightness();\r\n        this.wielder.lightEquipped = true;\r\n      } else {\r\n        //this.resetRadius();\r\n        this.resetBrightness();\r\n        this.wielder.lightEquipped = false;\r\n      }\r\n    } else {\r\n      this.wielder.game.pushMessage(\r\n        \"I'll need some fuel before I can use this\",\r\n      );\r\n    }\r\n\r\n    this.updateLighting();\r\n  };\r\n\r\n  coEquippable = (other: Light): boolean => {\r\n    return !(other instanceof Light);\r\n  };\r\n\r\n  resetRadius = () => {\r\n    this.wielder.sightRadius = this.wielder.defaultSightRadius;\r\n  };\r\n\r\n  resetBrightness = () => {\r\n    this.wielder.lightBrightness = 0.5;\r\n  };\r\n\r\n  burn = () => {\r\n    // Handle active burning\r\n    if (this.isIgnited()) {\r\n      this.fuel--;\r\n      this.setRadius();\r\n      this.setBrightness();\r\n    }\r\n\r\n    // Handle depleted fuel\r\n    if (this.fuel <= 0) {\r\n      if (this.stackable) {\r\n        this.stackCount--;\r\n        this.fuel = this.fuelCap;\r\n      }\r\n\r\n      // Check if item should be removed after stack reduction\r\n      if (this.equipped) {\r\n        if (\r\n          (this.stackable && this.stackCount <= 0) ||\r\n          (!this.stackable && !this.canRefuel)\r\n        ) {\r\n          this.resetRadius();\r\n          this.wielder.lightEquipped = false;\r\n          this.wielder.inventory.removeItem(this);\r\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\r\n        } else if (this.canRefuel) {\r\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\r\n          this.equipped = false;\r\n          this.resetRadius();\r\n          this.wielder.lightEquipped = false;\r\n          this.broken = true;\r\n        }\r\n\r\n        this.updateLighting();\r\n      }\r\n    }\r\n  };\r\n\r\n  drawDurability = (x: number, y: number) => {\r\n    if (this.fuel < this.fuelCap) {\r\n      // Calculate durability ratio (1 = full, 0 = broken)\r\n      const durabilityRatio = this.fuel / this.fuelCap;\r\n\r\n      // Map durability ratio to hue (120 = green, 0 = red)\r\n      let color = Utils.hsvToHex(\r\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\r\n        1, // Full saturation\r\n        1, // Full value\r\n      );\r\n\r\n      const iconWidth = GameConstants.TILESIZE;\r\n      const barWidth = durabilityRatio * iconWidth;\r\n      const barHeight = 2; // 2 pixels tall\r\n\r\n      // Calculate the position of the durability bar\r\n      const barX = x * GameConstants.TILESIZE;\r\n      const barY = y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2;\r\n\r\n      // Set the fill style for the durability bar\r\n      Game.ctx.fillStyle = color;\r\n      // Set the interpolation mode to nearest neighbor\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n\r\n      // Draw the durability bar\r\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\r\n\r\n      // Reset fill style to default\r\n      Game.ctx.fillStyle = \"white\";\r\n    }\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    this.burn();\r\n  };\r\n\r\n  getDescription = () => {\r\n    return `${this.name}: ${Math.ceil(this.fuelPercentage * 100)}%`;\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class RedGem extends Item {\r\n  static itemName = \"garnet\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"GARNET\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Equippable } from \"./equippable\";\r\n\r\nexport class SpellbookPage extends Usable {\r\n  static itemName = \"weapon fragments\";\r\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\r\n    super(level, x, y);\r\n    this.tileX = 25;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.name = \"spellbook pages\";\r\n    this.canUseOnOther = true;\r\n    this.stackable = true;\r\n    this.stackCount = stackCount || Math.ceil(Math.random() * 3);\r\n    this.description = \"Can be used to restore power to a depleted spellbook\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (\r\n      other instanceof Equippable &&\r\n      other.broken &&\r\n      other.name === \"spellbook\"\r\n    ) {\r\n      let repairAmount = Math.min(\r\n        other.durabilityMax - other.durability,\r\n        this.stackCount,\r\n      );\r\n      other.durability += repairAmount;\r\n      this.stackCount -= repairAmount;\r\n      other.broken = false;\r\n      this.level.game.pushMessage(\r\n        `You feel your ${other.name}'s power return as you add ${repairAmount} pages to it.`,\r\n      );\r\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class Stone extends Item {\r\n  static itemName = \"stones\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 15;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"STONE\\nSome fragments of stone.\";\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\n\r\nimport { Light } from \"./light\";\r\n\r\nexport class Torch extends Light {\r\n  static itemName = \"torch\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 28;\r\n    this.tileY = 0;\r\n    this.name = \"torch\";\r\n    this.fuelCap = 250;\r\n    this.fuel = 250;\r\n    this.radius = 7;\r\n    this.maxBrightness = 5;\r\n    this.minBrightness = 2;\r\n  }\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class Usable extends Item {\r\n  user: Player;\r\n  canUseOnOther: boolean;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.canUseOnOther = false;\r\n  }\r\n  onUse = (player: Player) => {};\r\n  useOnOther = (player: Player, other: Item) => {};\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\n\r\nexport class WeaponBlood extends Usable {\r\n  static itemName = \"cursed blood\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 12;\r\n    this.tileY = 4;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon) {\r\n      other.applyStatus({ blood: true, poison: false });\r\n      player.inventory.removeItem(this);\r\n      this.level.game.pushMessage(\r\n        `You coat your ${other.name} in cursed blood.`,\r\n      );\r\n    }\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"WEAPON BLOOD\\nCan be applied to weapons to deal bleed damage\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Equippable } from \"./equippable\";\r\n\r\nexport class WeaponFragments extends Usable {\r\n  static itemName = \"weapon fragments\";\r\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\r\n    super(level, x, y);\r\n    this.tileX = 3;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = \"weapon fragments\";\r\n    this.canUseOnOther = true;\r\n    this.stackable = true;\r\n    this.stackCount = stackCount || Math.ceil(Math.random() * 10) + 7;\r\n    this.description = \"Can be used to repair broken weapons\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (\r\n      other instanceof Equippable &&\r\n      other.durabilityMax - other.durability >= 1 &&\r\n      other.name !== \"spellbook\"\r\n    ) {\r\n      let repairAmount = Math.min(\r\n        other.durabilityMax - other.durability,\r\n        this.stackCount,\r\n      );\r\n      other.durability += repairAmount;\r\n      this.stackCount -= repairAmount;\r\n      other.broken = false;\r\n      this.level.game.pushMessage(\r\n        `You repair your ${other.name} with ${repairAmount} fragments.`,\r\n      );\r\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n    } else if (other.name === \"spellbook\") {\r\n      this.level.game.pushMessage(\r\n        \"You'll need some book pages to replenish that.\",\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player\";\r\nimport { Sound } from \"../sound\";\r\nimport { Room } from \"../room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\n\r\nexport class WeaponPoison extends Usable {\r\n  static itemName = \"weapon poison\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 11;\r\n    this.tileY = 4;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon) {\r\n      other.applyStatus({ poison: true, blood: false });\r\n      player.inventory.removeItem(this);\r\n      this.level.game.pushMessage(\r\n        `You apply the poison to your ${other.name}.`,\r\n      );\r\n      console.log(`weapon poison used on ${other.name}`);\r\n    }\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"WEAPON POISON\\nCan be applied to weapons to deal poison damage\";\r\n  };\r\n}\r\n","import { Room, RoomType } from \"./room\";\r\nimport { Game } from \"./game\";\r\nimport { Entity, EntityType } from \"./entity/entity\";\r\nimport { Item } from \"./item/item\";\r\nimport { DoorType } from \"./tile/door\";\r\nimport { Tile } from \"./tile/tile\";\r\nimport { Enemy } from \"./entity/enemy/enemy\";\r\nimport { LevelParameterGenerator } from \"./levelParametersGenerator\";\r\nimport { Environment } from \"./environment\";\r\n\r\nexport interface EnemyParameters {\r\n  enemyTables: Record<number, number[]>;\r\n  maxDepthTable: number;\r\n  minDepths: Record<number, number>;\r\n}\r\n\r\nexport const enemyMinimumDepth: Record<number, number> = {\r\n  1: 0, // CrabEnemy\r\n  2: 1, // FrogEnemy\r\n  3: 0, // ZombieEnemy\r\n  4: 0, // SkullEnemy\r\n  5: 1, // EnergyWizardEnemy\r\n  6: 2, // ChargeEnemy\r\n  7: 1, // RookEnemy\r\n  8: 1, // BishopEnemy\r\n  9: 1, // ArmoredzombieEnemy\r\n  10: 2, // BigSkullEnemy\r\n  11: 2, // QueenEnemy\r\n  12: 1, // KnightEnemy\r\n  13: 2, // BigKnightEnemy\r\n  14: 2, // FireWizardEnemy\r\n};\r\n/*\r\ninterface enemySpawnPoolData {\r\n  maxCount: number;\r\n  minCount: number;\r\n}\r\n\r\ninterface environmentData {\r\n  name: string;\r\n  preferredEnemies: Array<Enemy>;\r\n  preferredEntities: Array<Entity>;\r\n  entityBlacklist: Array<Entity>;\r\n  enemySpawnPoolData: enemySpawnPoolData;\r\n  roomData: roomData;\r\n}\r\n\r\ninterface entitySpawnData {\r\n  enemy: Enemy;\r\n  spawnChance: number;\r\n  maximumCount: number;\r\n}\r\n*/\r\n\r\nexport class Level {\r\n  depth: number;\r\n  levelArray: (Tile | null)[][];\r\n  width: number;\r\n  height: number;\r\n  game: Game;\r\n  rooms: Room[];\r\n  environment: Environment;\r\n  exitRoom: Room;\r\n  startRoom: Room;\r\n  //environmentData: environmentData;\r\n  //enemySpawnPool: Array<entitySpawnData>;\r\n  enemyParameters: EnemyParameters;\r\n  constructor(game: Game, depth: number, width: number, height: number) {\r\n    this.game = game;\r\n    this.depth = depth;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.rooms = [];\r\n    this.initializeLevelArray();\r\n    //this.loadRoomsIntoLevelArray();\r\n    //console.log(`level depth: ${this.depth}`);\r\n\r\n    this.enemyParameters = this.getEnemyParameters();\r\n    let envType = Math.floor(Math.random() * 3); //multiply by number of environments to choose from\r\n    this.environment = new Environment(envType);\r\n  }\r\n\r\n  setExitRoom() {\r\n    this.exitRoom = this.rooms.find(\r\n      (room) => room.type === RoomType.DOWNLADDER,\r\n    );\r\n  }\r\n\r\n  setStartRoom() {\r\n    this.startRoom = this.rooms.find((room) => room.type === RoomType.START);\r\n  }\r\n\r\n  setRooms(rooms: Room[]) {\r\n    this.rooms = rooms;\r\n    this.setExitRoom();\r\n    this.setStartRoom();\r\n    this.rooms.filter((room) => room.depth === this.depth);\r\n    rooms.forEach((room) => {\r\n      room.id = this.rooms.indexOf(room);\r\n    });\r\n  }\r\n\r\n  initializeLevelArray = () => {\r\n    // Create a 300x300 grid for depth 0\r\n    this.levelArray = [];\r\n    for (let x = 0; x < this.width; x++) {\r\n      this.levelArray[x] = [];\r\n      for (let y = 0; y < this.height; y++) {\r\n        this.levelArray[x][y] = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  loadRoomsIntoLevelArray = () => {\r\n    for (let room of this.rooms) {\r\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n          this.levelArray[x][y] = room.roomArray[x][y];\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates enemy parameters based on the current depth.\r\n   * @param depth The current depth level.\r\n   * @returns An object conforming to the EnemyParameters interface.\r\n   */\r\n  getEnemyParameters(): EnemyParameters {\r\n    let currentDepth = this.depth;\r\n    // Generate the enemy pool based on current depth\r\n    const enemyPoolIds = this.generateEnemyPoolIds(currentDepth);\r\n\r\n    // Create enemyTables where each level maps to the enemyPoolIds\r\n    const enemyTables: Record<number, number[]> = {};\r\n\r\n    for (let tableDepth = 0; tableDepth <= currentDepth; tableDepth++) {\r\n      // Assign the same pool for all tables up to current depth\r\n      enemyTables[tableDepth] = enemyPoolIds;\r\n    }\r\n    const newEnemies = enemyTables[currentDepth].filter(\r\n      (id) => !this.game.encounteredEnemies.includes(id),\r\n    );\r\n    this.game.encounteredEnemies.push(...newEnemies);\r\n    //console.log(\r\n    //`encounteredEnemies for depth ${this.depth}: ${this.game.encounteredEnemies}`,\r\n    //);\r\n\r\n    return {\r\n      enemyTables,\r\n      maxDepthTable: currentDepth,\r\n      minDepths: enemyMinimumDepth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates the enemy pool IDs based on the current depth, introducing up to 2 new enemies each level.\r\n   * @param depth The current depth level.\r\n   * @returns An array of selected enemy IDs.\r\n   */\r\n  generateEnemyPoolIds(depth: number): number[] {\r\n    const availableEnemies = Object.entries(enemyMinimumDepth)\r\n      .filter(([enemyId, minDepth]) => depth >= minDepth)\r\n      .map(([enemyId]) => Number(enemyId));\r\n\r\n    // Determine which enemies are new (not yet encountered)\r\n    const newEnemies = availableEnemies.filter(\r\n      (id) => !this.game.encounteredEnemies.includes(id),\r\n    );\r\n\r\n    // Decide how many new enemies to introduce (1 or 2)\r\n    const newEnemiesToAddCount = Math.min(newEnemies.length, 2);\r\n    const newEnemiesToAdd = this.getRandomElements(\r\n      newEnemies,\r\n      newEnemiesToAddCount,\r\n    );\r\n\r\n    // Add the new enemies to encounteredEnemies\r\n    this.game.encounteredEnemies.push(...newEnemiesToAdd);\r\n\r\n    // Log the newly added enemies for debugging\r\n    // console.log(`New enemies introduced at depth ${depth}: ${newEnemiesToAdd}`);\r\n\r\n    // Combine encountered enemies to form the enemy pool\r\n    const enemyPoolIds = this.game.encounteredEnemies.slice();\r\n\r\n    // Determine the number of enemy types for the current depth\r\n    const numberOfTypes = this.getNumberOfEnemyTypes(depth);\r\n\r\n    // Select the final set of enemy IDs for the pool\r\n    const selectedEnemyIds = this.getRandomElements(\r\n      enemyPoolIds,\r\n      numberOfTypes,\r\n    );\r\n\r\n    // Ensure uniqueness and limit based on available enemies\r\n    return Array.from(new Set(selectedEnemyIds)).slice(0, numberOfTypes);\r\n  }\r\n\r\n  /**\r\n   * Determines the number of enemy types allowed based on the current depth.\r\n   * @param depth The current depth level.\r\n   * @returns The number of enemy types.\r\n   */\r\n  getNumberOfEnemyTypes(depth: number): number {\r\n    // Example logic: depth 0 -> 2 types, depth 1 -> 4, depth 2 -> 6, etc.\r\n    let numberOfTypes = depth === 0 ? 2 : Math.ceil(Math.sqrt(depth + 1)) + 4;\r\n    //console.log(`numberOfTypes: ${numberOfTypes}`);\r\n    return numberOfTypes;\r\n  }\r\n\r\n  /**\r\n   * Utility function to get random elements from an array.\r\n   * @param array The array to select from.\r\n   * @param count The number of elements to select.\r\n   * @returns An array of randomly selected elements.\r\n   */\r\n  getRandomElements<T>(array: T[], count: number): T[] {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled.slice(0, Math.min(count, shuffled.length));\r\n  }\r\n}\r\n","import { GameConstants } from \"./gameConstants\";\r\n\r\nexport class LevelConstants {\r\n  static SCREEN_W = 1;\r\n  static SCREEN_H = 1;\r\n\r\n  static readonly COMPUTER_TURN_DELAY = 300; // milliseconds\r\n  static readonly TURN_TIME = 3000; // milliseconds\r\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\r\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\r\n  static readonly ROOM_COUNT = 50;\r\n\r\n  static readonly HEALTH_BAR_FADEIN = 100;\r\n  static readonly HEALTH_BAR_FADEOUT = 350;\r\n  static readonly HEALTH_BAR_TOTALTIME = 1000;\r\n\r\n  static readonly SHADED_TILE_CUTOFF = 1;\r\n  static readonly MIN_VISIBILITY = 0; // visibility level of places you've already seen\r\n  static readonly LIGHTING_ANGLE_STEP = 2; // how many degrees between each ray, previously 5\r\n  static readonly LIGHTING_MAX_DISTANCE = 7;\r\n  static readonly LIGHT_RESOLUTION = 0.1; //1 is default\r\n\r\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\r\n  static readonly AMBIENT_LIGHT_COLOR: [number, number, number] = [12, 15, 12];\r\n  static readonly TORCH_LIGHT_COLOR: [number, number, number] = [120, 35, 10];\r\n}\r\n","import { ChatMessage, Game } from \"./game\";\r\nimport { Room, RoomType } from \"./room\";\r\nimport { Door } from \"./tile/door\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { Random } from \"./random\";\r\nimport { DownLadder } from \"./tile/downLadder\";\r\nimport {\r\n  LevelParameterGenerator,\r\n  LevelParameters,\r\n} from \"./levelParametersGenerator\";\r\nimport { Level } from \"./level\";\r\nimport { GameConstants } from \"./gameConstants\";\r\n\r\n// animation delays in ms\r\nlet ANIMATION_PARTITION_SPLIT_DELAY = 0; // for partition splitting\r\nlet ANIMATION_PATHFINDING_DELAY = 0; // for pathfinding\r\nlet ANIMATION_LARGE_DELAY = 0; // in between larger steps\r\nif (document.cookie.includes(\"showgeneration=true\")) {\r\n  ANIMATION_PARTITION_SPLIT_DELAY = 10; // for partition splitting\r\n  ANIMATION_PATHFINDING_DELAY = 100; // for pathfinding\r\n  ANIMATION_LARGE_DELAY = 100; // in between larger steps\r\n}\r\n\r\nclass PartitionConnection {\r\n  x: number;\r\n  y: number;\r\n  other: Partition;\r\n\r\n  constructor(x: number, y: number, other: Partition) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.other = other;\r\n  }\r\n}\r\n\r\nclass Partition {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  type: RoomType;\r\n  fillStyle: string;\r\n  connections: Array<PartitionConnection>;\r\n  distance: number;\r\n  isTopOpen: boolean;\r\n  isRightOpen: boolean;\r\n  isBottomOpen: boolean;\r\n  isLeftOpen: boolean;\r\n  pathIndex: number;\r\n\r\n  constructor(x: number, y: number, w: number, h: number, fillStyle: string) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.fillStyle = fillStyle;\r\n    this.type = RoomType.DUNGEON;\r\n    this.connections = [];\r\n    this.distance = 1000;\r\n    this.isTopOpen = true;\r\n    this.isRightOpen = true;\r\n    this.isBottomOpen = true;\r\n    this.isLeftOpen = true;\r\n    this.pathIndex = 0;\r\n  }\r\n\r\n  split = async (): Promise<Array<Partition>> => {\r\n    await new Promise((resolve) =>\r\n      setTimeout(\r\n        resolve,\r\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PARTITION_SPLIT_DELAY,\r\n      ),\r\n    );\r\n\r\n    // Reset open walls when a partition is split\r\n    this.isTopOpen = true;\r\n    this.isRightOpen = true;\r\n    this.isBottomOpen = true;\r\n    this.isLeftOpen = true;\r\n\r\n    // This function generates a random number around the center (0.5) within a certain width (0.6).\r\n    // It uses the Random.rand() function to generate a random number between 0 and 1, subtracts 0.5 to center it around 0,\r\n    // multiplies it by the width to scale it, and then adds the center (0.5) to shift it back to being between 0 and 1.\r\n    let rand_mid = () => {\r\n      let center = 0.5;\r\n      let width = 0.6;\r\n      return (Random.rand() - 0.5) * width + center;\r\n    };\r\n\r\n    let sizeRange = () => {\r\n      let sizes = [\r\n        { size: 1, probability: 0.2 },\r\n        { size: 3, probability: 0.6 },\r\n        { size: 10, probability: 0.2 },\r\n      ];\r\n      let rand = Random.rand();\r\n      let sum = 0;\r\n      for (let size of sizes) {\r\n        sum += size.probability;\r\n        if (rand <= sum) return size.size;\r\n      }\r\n      return sizes[sizes.length - 1].size;\r\n    };\r\n    let MIN_SIZE = 4;\r\n\r\n    if (this.w > this.h) {\r\n      //if the partitions width is greater than its height\r\n      let w1 = Math.floor(rand_mid() * this.w);\r\n      //choose a random tile within the width of the tiles\r\n      let w2 = this.w - w1 - 1;\r\n      //The remaining border - 1\r\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\r\n      //if either of these are less than the min size: return an array with this Partition\r\n      return [\r\n        new Partition(this.x, this.y, w1, this.h, this.fillStyle),\r\n        new Partition(this.x + w1 + 1, this.y, w2, this.h, this.fillStyle),\r\n      ];\r\n      //return an array with two new partitions\r\n    } else {\r\n      let h1 = Math.floor(rand_mid() * this.h);\r\n      let h2 = this.h - h1 - 1;\r\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\r\n      return [\r\n        new Partition(this.x, this.y, this.w, h1, this.fillStyle),\r\n        new Partition(this.x, this.y + h1 + 1, this.w, h2, this.fillStyle),\r\n      ];\r\n      //identical code for case where height > width\r\n    }\r\n  };\r\n\r\n  point_in = (x: number, y: number): boolean => {\r\n    //given the input argument x,y coordinates output boolean\r\n    return (\r\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\r\n    );\r\n\r\n    //only return true if both input x and input y are within the partitions x and y\r\n  };\r\n\r\n  point_next_to = (x: number, y: number): boolean => {\r\n    return (\r\n      (x >= this.x - 1 &&\r\n        x < this.x + this.w + 1 &&\r\n        y >= this.y &&\r\n        y < this.y + this.h) ||\r\n      (x >= this.x &&\r\n        x < this.x + this.w &&\r\n        y >= this.y - 1 &&\r\n        y < this.y + this.h + 1)\r\n    );\r\n    //return true if the input x and y are next to any point of the partition\r\n  };\r\n\r\n  area = (): number => {\r\n    return this.w * this.h;\r\n    //return the damn area\r\n  };\r\n\r\n  overlaps = (other: Partition): boolean => {\r\n    return (\r\n      other.x < this.x + this.w + 1 &&\r\n      other.x + other.w > this.x - 1 &&\r\n      other.y < this.y + this.h + 1 &&\r\n      other.y + other.h > this.y - 1\r\n    );\r\n    //takes another partition instance as argument\r\n    //returns true if any points of each overlap\r\n  };\r\n\r\n  setOpenWall = (connection: PartitionConnection) => {\r\n    if (\r\n      connection.y === this.y - 1 &&\r\n      connection.x >= this.x &&\r\n      connection.x < this.x + this.w\r\n    ) {\r\n      this.isTopOpen = false;\r\n    }\r\n    if (\r\n      connection.y === this.y + this.h &&\r\n      connection.x >= this.x &&\r\n      connection.x < this.x + this.w\r\n    ) {\r\n      this.isBottomOpen = false;\r\n    }\r\n    if (\r\n      connection.x === this.x + this.w &&\r\n      connection.y >= this.y &&\r\n      connection.y < this.y + this.h\r\n    ) {\r\n      this.isRightOpen = false;\r\n    }\r\n    if (\r\n      connection.x === this.x - 1 &&\r\n      connection.y >= this.y &&\r\n      connection.y < this.y + this.h\r\n    ) {\r\n      this.isLeftOpen = false;\r\n    }\r\n  };\r\n\r\n  get_branch_point = (): { x: number; y: number } => {\r\n    let points = [];\r\n    for (let x = this.x; x < this.x + this.w; x++) {\r\n      //count up from the partitions x to its width\r\n      points.push({ x: x, y: this.y - 1 /*one row above partition*/ });\r\n      points.push({ x: x, y: this.y + this.h /*one row below partition*/ });\r\n    } // pushes the points above and below the partition\r\n    for (let y = this.y; y < this.y + this.h; y++) {\r\n      points.push({ x: this.x - 1, y: y });\r\n      points.push({ x: this.x + this.w, y: y });\r\n    } //pushes points to left and right of the partition\r\n    points = points.filter(\r\n      (p) =>\r\n        !this.connections.some(\r\n          (c) => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1,\r\n        ),\r\n      //if the sum of the distance between the input x and y values and the partitions x and y values is > 1\r\n      //delete those from the points array\r\n    );\r\n    points.sort(() => 0.5 - Random.rand());\r\n    return points[0]; //return first object of x y points in array points\r\n  };\r\n\r\n  draw = (delta: number, levelCenterX: number, levelCenterY: number) => {\r\n    Game.ctx.fillStyle = this.fillStyle;\r\n    Game.ctx.fillRect(\r\n      Math.round(GameConstants.WIDTH / 2 + this.x - levelCenterX),\r\n      Math.round(GameConstants.HEIGHT / 2 + this.y - levelCenterY),\r\n      this.w,\r\n      this.h,\r\n    );\r\n\r\n    for (let connection of this.connections) {\r\n      Game.ctx.fillRect(\r\n        Math.round(GameConstants.WIDTH / 2 + connection.x - levelCenterX),\r\n        Math.round(GameConstants.HEIGHT / 2 + connection.y - levelCenterY),\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n} //end of Partition class\r\n\r\nlet split_partitions = async (\r\n  partitions: Array<Partition>,\r\n  prob: number,\r\n): Promise<Array<Partition>> => {\r\n  for (let partition of partitions) {\r\n    if (Random.rand() < prob) {\r\n      partitions = partitions.filter((p) => p !== partition); // remove partition\r\n      partitions = partitions.concat(await partition.split()); // add splits\r\n    }\r\n  }\r\n  return partitions;\r\n  //takes input partitions array, randomly removes partitions and adds splits, output modified partitions array\r\n};\r\n\r\nlet split_partition = async (\r\n  partition: Partition,\r\n  prob: number,\r\n): Promise<Array<Partition>> => {\r\n  if (Random.rand() < prob) {\r\n    return await partition.split();\r\n  } else {\r\n    return [partition];\r\n  }\r\n  // Takes a single partition and probability\r\n  // Returns an array with either the split partitions or the original partition\r\n};\r\n\r\nlet reduce_dimensions = (partition: Partition, params: LevelParameters) => {\r\n  let reduceY = 0;\r\n  let reduceX = 0;\r\n  let translateX = 0;\r\n  let translateY = 0;\r\n  partition.connections.forEach((connection) => {\r\n    if (connection.y === partition.y) reduceY++, translateY++;\r\n    if (connection.y === partition.y + partition.h) reduceY++;\r\n    if (connection.x === partition.x) reduceX++, translateX++;\r\n    if (connection.x === partition.x + partition.w) reduceX++;\r\n  });\r\n\r\n  if (partition.w > 7) {\r\n    partition.w -= translateX;\r\n    partition.x += translateX;\r\n  }\r\n  if (partition.h > 7) {\r\n    partition.h -= translateY;\r\n    partition.y += translateY;\r\n  }\r\n};\r\n\r\nlet get_wall_rooms = (\r\n  partitions: Array<Partition>,\r\n  mapWidth: number,\r\n  mapHeight: number,\r\n): Array<Partition> => {\r\n  return partitions.filter((partition, index) => {\r\n    // Helper function to check if a specific path is clear\r\n    const isPathClear = (\r\n      direction: \"left\" | \"right\" | \"top\" | \"bottom\",\r\n    ): boolean => {\r\n      switch (direction) {\r\n        case \"left\":\r\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\r\n            let blocked = partitions.some((other) => {\r\n              if (other === partition) return false;\r\n              // Check if other partition overlaps this y-coordinate and is to the left\r\n              return (\r\n                other.y <= y &&\r\n                y < other.y + other.h &&\r\n                other.x + other.w > 0 &&\r\n                other.x + other.w <= partition.x\r\n              );\r\n            });\r\n            if (!blocked) return true; // Found at least one y without a blocker\r\n          }\r\n          return false;\r\n\r\n        case \"right\":\r\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\r\n            let blocked = partitions.some((other) => {\r\n              if (other === partition) return false;\r\n              // Check if other partition overlaps this y-coordinate and is to the right\r\n              return (\r\n                other.y <= y &&\r\n                y < other.y + other.h &&\r\n                other.x < mapWidth &&\r\n                other.x >= partition.x + partition.w\r\n              );\r\n            });\r\n            if (!blocked) return true;\r\n          }\r\n          return false;\r\n\r\n        case \"top\":\r\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\r\n            let blocked = partitions.some((other) => {\r\n              if (other === partition) return false;\r\n              // Check if other partition overlaps this x-coordinate and is above\r\n              return (\r\n                other.x <= x &&\r\n                x < other.x + other.w &&\r\n                other.y + other.h > 0 &&\r\n                other.y + other.h <= partition.y\r\n              );\r\n            });\r\n            if (!blocked) return true;\r\n          }\r\n          return false;\r\n\r\n        case \"bottom\":\r\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\r\n            let blocked = partitions.some((other) => {\r\n              if (other === partition) return false;\r\n              // Check if other partition overlaps this x-coordinate and is below\r\n              return (\r\n                other.x <= x &&\r\n                x < other.x + other.w &&\r\n                other.y < mapHeight &&\r\n                other.y >= partition.y + partition.h\r\n              );\r\n            });\r\n            if (!blocked) return true;\r\n          }\r\n          return false;\r\n\r\n        default:\r\n          return false;\r\n      }\r\n    };\r\n\r\n    const hasLeftPath = isPathClear(\"left\");\r\n    const hasRightPath = isPathClear(\"right\");\r\n    const hasTopPath = isPathClear(\"top\");\r\n    const hasBottomPath = isPathClear(\"bottom\");\r\n\r\n    // Count the number of open paths\r\n    const openPaths = [\r\n      hasLeftPath,\r\n      hasRightPath,\r\n      hasTopPath,\r\n      hasBottomPath,\r\n    ].filter(Boolean).length;\r\n\r\n    // Define wall rooms as those with exactly one open path\r\n    const isWallRoom = openPaths === 1;\r\n\r\n    return isWallRoom;\r\n  });\r\n};\r\n\r\nlet remove_wall_rooms = (\r\n  partitions: Array<Partition>,\r\n  w: number,\r\n  h: number,\r\n  prob: number = 1.0,\r\n): Array<Partition> => {\r\n  // Get all wall rooms\r\n  const wallRooms = get_wall_rooms(partitions, w, h);\r\n\r\n  // Remove wall rooms based on probability\r\n  for (const wallRoom of wallRooms) {\r\n    if (Random.rand() < prob) {\r\n      partitions = partitions.filter((p) => p !== wallRoom);\r\n    }\r\n  }\r\n\r\n  return partitions;\r\n};\r\n\r\nlet populate_grid = (\r\n  partitions: Array<Partition>,\r\n  grid: Array<Array<Partition | false>>,\r\n  w: number,\r\n  h: number,\r\n): Array<Array<Partition | false>> => {\r\n  for (let x = 0; x < w; x++) {\r\n    //loop through the horizontal tiles\r\n    grid[x] = []; //empty array at x index\r\n    for (let y = 0; y < h; y++) {\r\n      grid[x][y] = false;\r\n      for (const partition of partitions) {\r\n        if (partition.point_in(x, y)) grid[x][y] = partition;\r\n      }\r\n    }\r\n  }\r\n  return grid;\r\n  //input grid array, partitions array and width and height\r\n  //output grid array that indicates which cells are in which partition\r\n};\r\n\r\nlet generate_dungeon_candidate = async (\r\n  game: Game,\r\n  partialLevel: PartialLevel,\r\n  map_w: number,\r\n  map_h: number,\r\n  depth: number,\r\n  params: LevelParameters,\r\n) => {\r\n  const {\r\n    minRoomCount,\r\n    maxRoomCount,\r\n    maxRoomArea,\r\n    splitProbabilities,\r\n    wallRemoveProbability,\r\n    softMaxRoomArea,\r\n  } = params;\r\n\r\n  partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\r\n  let grid = [];\r\n\r\n  // Use splitProbabilities for splitting\r\n  while (partialLevel.partitions.length < params.maxRoomCount) {\r\n    for (let i = 0; i < splitProbabilities.length; i++) {\r\n      partialLevel.partitions = await split_partitions(\r\n        partialLevel.partitions,\r\n        splitProbabilities[i],\r\n      );\r\n    }\r\n  }\r\n  for (let i = 0; i < 100; i++) {\r\n    partialLevel.partitions.forEach(async (partition) => {\r\n      let roomArea = Math.random() > 0.95 ? softMaxRoomArea : maxRoomArea; //Math.random() > 0.95 ? params.softMaxRoomArea : params.maxRoomArea;\r\n      if (partition.area() > roomArea) {\r\n        partialLevel.partitions = partialLevel.partitions.filter(\r\n          (p) => p !== partition,\r\n        );\r\n        partialLevel.partitions = partialLevel.partitions.concat(\r\n          await split_partition(partition, 0.5),\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //visualize_partialLevel.partitions(partialLevel.partitions, map_w, map_h);\r\n  partialLevel.partitions = remove_wall_rooms(\r\n    partialLevel.partitions,\r\n    map_w,\r\n    map_h,\r\n    wallRemoveProbability,\r\n  );\r\n\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n\r\n  // Remove wall rooms based on probability\r\n  /*\r\n  if (partitions.length > params.minRoomCount) {\r\n    for (let i = 0; i < 1; i++) {\r\n      partitions = remove_wall_rooms(partitions, map_w, map_h, wallRemoveProbability);\r\n    }\r\n  }\r\n  \r\n  /*\r\n    partitions = partitions.filter((p) => {\r\n      if (p.area() > maxRoomArea && partitions.length > params.minRoomCount) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n   \r\n    while (partitions.length > maxRoomCount) {\r\n      partitions.pop();\r\n    }\r\n  */\r\n\r\n  // Check if we have any partitions before proceeding\r\n  if (partialLevel.partitions.length === 0) {\r\n    partialLevel.partitions = [];\r\n    return;\r\n  }\r\n\r\n  //populate the grid with partitions\r\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\r\n  // shade each partition's fillStyle based on its area, medium gray for smallest, white for largest\r\n  partialLevel.partitions.forEach((partition) => {\r\n    partition.fillStyle = `rgba(128, 128, 128, ${partition.area() / partialLevel.partitions[0].area()})`;\r\n  });\r\n\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n\r\n  // Make sure we have at least one partition before assigning spawn\r\n  if (partialLevel.partitions.length === 0) {\r\n    partialLevel.partitions = [];\r\n    return;\r\n  }\r\n\r\n  let spawn = partialLevel.partitions[0];\r\n  if (!spawn) {\r\n    partialLevel.partitions = [];\r\n    return;\r\n  }\r\n\r\n  spawn.type = RoomType.START;\r\n  spawn.fillStyle = \"rgb(0, 255, 0)\";\r\n  if (partialLevel.partitions.length > 1) {\r\n    partialLevel.partitions[partialLevel.partitions.length - 1].type =\r\n      RoomType.BOSS;\r\n    partialLevel.partitions[partialLevel.partitions.length - 1].fillStyle =\r\n      \"red\";\r\n  }\r\n\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n\r\n  let connected = [spawn];\r\n  let frontier = [spawn];\r\n\r\n  let found_boss = false;\r\n\r\n  // connect rooms until we find the boss\r\n  while (frontier.length > 0 && !found_boss) {\r\n    let room = frontier[0];\r\n    if (room !== spawn) room.fillStyle = \"green\";\r\n    frontier.splice(0, 1);\r\n\r\n    let doors_found = 0;\r\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\r\n\r\n    let tries = 0;\r\n    const max_tries = 1000;\r\n\r\n    while (doors_found < num_doors && tries < max_tries) {\r\n      let point = room.get_branch_point();\r\n      for (const p of partialLevel.partitions) {\r\n        if (\r\n          p !== room &&\r\n          connected.indexOf(p) === -1 &&\r\n          p.point_next_to(point.x, point.y)\r\n        ) {\r\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n\r\n          // Set open walls based on connection\r\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\r\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\r\n\r\n          frontier.push(p);\r\n          connected.push(p);\r\n          doors_found++;\r\n          if (p.type === RoomType.BOSS) {\r\n            found_boss = true;\r\n            p.fillStyle = \"rgb(255, 0, 0)\";\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      tries++;\r\n    }\r\n\r\n    await new Promise((resolve) =>\r\n      setTimeout(\r\n        resolve,\r\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PATHFINDING_DELAY,\r\n      ),\r\n    );\r\n  }\r\n\r\n  // remove rooms we haven't connected to yet\r\n  for (const partition of partialLevel.partitions) {\r\n    if (partition.connections.length === 0)\r\n      partialLevel.partitions = partialLevel.partitions.filter(\r\n        (p) => p !== partition,\r\n      );\r\n  }\r\n\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n\r\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\r\n\r\n  // make sure we haven't removed all the rooms\r\n  if (partialLevel.partitions.length === 0) {\r\n    partialLevel.partitions = [];\r\n    return; // for now just return an empty list so we can retry\r\n  }\r\n\r\n  // make some loops\r\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\r\n  for (let i = 0; i < num_loop_doors; i++) {\r\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\r\n    let room = partialLevel.partitions[roomIndex];\r\n\r\n    let found_door = false;\r\n\r\n    let tries = 0;\r\n    const max_tries = 10;\r\n\r\n    let not_already_connected = partialLevel.partitions.filter(\r\n      (p) => !room.connections.some((c) => c.other === p),\r\n    );\r\n\r\n    while (!found_door && tries < max_tries) {\r\n      let point = room.get_branch_point();\r\n      for (const p of not_already_connected) {\r\n        if (p !== room && p.point_next_to(point.x, point.y)) {\r\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n\r\n          // Set open walls based on connection\r\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\r\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\r\n\r\n          found_door = true;\r\n          break;\r\n        }\r\n      }\r\n      tries++;\r\n    }\r\n  }\r\n\r\n  // add stair room\r\n  if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\r\n    partialLevel.partitions = [];\r\n    return;\r\n  }\r\n  let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\r\n  let found_stair = false;\r\n  const max_stair_tries = 5;\r\n  const stairRoomWidth = 5;\r\n  const stairRoomHeight = 5;\r\n\r\n  for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\r\n    let stair = new Partition(\r\n      Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand),\r\n      boss.y - stairRoomHeight - 1,\r\n      stairRoomWidth,\r\n      stairRoomHeight,\r\n      \"white\",\r\n    );\r\n    stair.type = RoomType.DOWNLADDER;\r\n    stair.fillStyle = \"blue\";\r\n    if (!partialLevel.partitions.some((p) => p.overlaps(stair))) {\r\n      found_stair = true;\r\n      partialLevel.partitions.push(stair);\r\n      stair.connections.push(\r\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, boss),\r\n      );\r\n\r\n      boss.connections.push(\r\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, stair),\r\n      );\r\n\r\n      // Set open walls for stair and boss connection\r\n      stair.setOpenWall(\r\n        new PartitionConnection(stair.x + 1, stair.y + 3, boss),\r\n      );\r\n      boss.setOpenWall(\r\n        new PartitionConnection(stair.x + 1, stair.y + 3, stair),\r\n      );\r\n      break;\r\n    }\r\n  }\r\n  if (!found_stair) {\r\n    console.log(\"No stair found\");\r\n    partialLevel.partitions = [];\r\n    //game.pushMessage(\"No stair found\");\r\n    return;\r\n  }\r\n\r\n  // calculate room distances\r\n  frontier = [spawn];\r\n  let seen = [];\r\n  spawn.distance = 0;\r\n  while (frontier.length > 0) {\r\n    let room = frontier[0];\r\n    frontier.splice(0, 1);\r\n    seen.push(room);\r\n\r\n    for (let c of room.connections) {\r\n      let other = c.other;\r\n      other.distance = Math.min(other.distance, room.distance + 1);\r\n\r\n      if (seen.indexOf(other) === -1) frontier.push(other);\r\n    }\r\n  }\r\n  /*\r\n  // add special rooms\r\n  let added_rope_hole = false;\r\n  for (const p of partialLevel.partitions) {\r\n    if (p.type === RoomType.DUNGEON) {\r\n      if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0) {\r\n        p.type = RoomType.TREASURE;\r\n      } else if (\r\n        !added_rope_hole //&&\r\n        //p.distance > 1 &&\r\n        //p.area() <= 40 &&\r\n        //Random.rand() < 0.5\r\n      ) {\r\n        p.type = RoomType.ROPEHOLE;\r\n        added_rope_hole = true;\r\n        console.log(\"ADDED ROPEHOLE!!!!!!\");\r\n      }\r\n    }\r\n  }\r\n*/\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n};\r\n\r\nlet generate_dungeon = async (\r\n  game: Game,\r\n  partialLevel: PartialLevel,\r\n  map_w: number,\r\n  map_h: number,\r\n  depth: number,\r\n  params: LevelParameters,\r\n) => {\r\n  let passes_checks = false;\r\n\r\n  let tries = 0;\r\n\r\n  while (!passes_checks) {\r\n    await generate_dungeon_candidate(\r\n      game,\r\n      partialLevel,\r\n      map_w,\r\n      map_h,\r\n      depth,\r\n      params,\r\n    );\r\n\r\n    passes_checks = true;\r\n    if (partialLevel.partitions.length < params.minRoomCount) {\r\n      passes_checks = false;\r\n      if (document.cookie.includes(\"showgeneration=true\"))\r\n        game.pushMessage(\"Not enough rooms\");\r\n    } else if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\r\n      passes_checks = false;\r\n      if (document.cookie.includes(\"showgeneration=true\"))\r\n        game.pushMessage(\"Boss room unreachable\");\r\n    } else if (\r\n      partialLevel.partitions.find((p) => p.type === RoomType.BOSS).distance < 3\r\n    ) {\r\n      passes_checks = false;\r\n      if (document.cookie.includes(\"showgeneration=true\"))\r\n        game.pushMessage(\"Boss room too close to spawn\");\r\n    }\r\n\r\n    tries++;\r\n    //if (tries > 100) break;\r\n  }\r\n\r\n  //game.pushMessage(\"Dungeon passed all checks\");\r\n\r\n  await new Promise((resolve) =>\r\n    setTimeout(\r\n      resolve,\r\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\r\n    ),\r\n  );\r\n\r\n  console.log(\"finished generation\");\r\n  //partialLevel.partitions.forEach((partition) => reduce_dimensions(partition, params));\r\n};\r\n\r\nlet generate_cave_candidate = async (\r\n  partialLevel: PartialLevel,\r\n  map_w: number,\r\n  map_h: number,\r\n  num_rooms: number,\r\n) => {\r\n  partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\r\n  let grid = [];\r\n\r\n  for (let i = 0; i < 3; i++)\r\n    partialLevel.partitions = await split_partitions(\r\n      partialLevel.partitions,\r\n      0.75,\r\n    );\r\n  for (let i = 0; i < 3; i++)\r\n    partialLevel.partitions = await split_partitions(\r\n      partialLevel.partitions,\r\n      1,\r\n    );\r\n  for (let i = 0; i < 3; i++)\r\n    partialLevel.partitions = await split_partitions(\r\n      partialLevel.partitions,\r\n      0.5,\r\n    );\r\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h);\r\n\r\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\r\n\r\n  if (partialLevel.partitions.length === 0) {\r\n    throw new Error(\"No partitions generated.\"); // Throw an error if no partitions\r\n  }\r\n\r\n  let spawn = partialLevel.partitions[0];\r\n  spawn.type = RoomType.ROPECAVE;\r\n  for (let i = 1; i < partialLevel.partitions.length; i++)\r\n    partialLevel.partitions[i].type = RoomType.CAVE;\r\n\r\n  let connected = [spawn];\r\n  let frontier = [spawn];\r\n\r\n  // connect rooms until we hit num_rooms\r\n  while (frontier.length > 0 && connected.length < num_rooms) {\r\n    let room = frontier[0];\r\n    frontier.splice(0, 1);\r\n\r\n    let doors_found = 0;\r\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\r\n\r\n    let tries = 0;\r\n    const max_tries = 1000;\r\n\r\n    while (\r\n      doors_found < num_doors &&\r\n      tries < max_tries &&\r\n      connected.length < num_rooms\r\n    ) {\r\n      let point = room.get_branch_point();\r\n      if (!point) {\r\n      }\r\n\r\n      for (const p of partialLevel.partitions) {\r\n        if (\r\n          p !== room &&\r\n          connected.indexOf(p) === -1 &&\r\n          p.point_next_to(point.x, point.y)\r\n        ) {\r\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n          frontier.push(p);\r\n          connected.push(p);\r\n          doors_found++;\r\n          break;\r\n        }\r\n      }\r\n      tries++;\r\n    }\r\n  }\r\n\r\n  // remove rooms we haven't connected to yet\r\n  partialLevel.partitions = partialLevel.partitions.filter(\r\n    (partition) => partition.connections.length > 0,\r\n  );\r\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\r\n\r\n  // make sure we haven't removed all the rooms\r\n  if (partialLevel.partitions.length === 0) {\r\n    throw new Error(\"No valid rooms after filtering.\"); // Throw an error if no valid rooms\r\n  }\r\n\r\n  // make some loops\r\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\r\n  for (let i = 0; i < num_loop_doors; i++) {\r\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\r\n    let room = partialLevel.partitions[roomIndex];\r\n\r\n    let found_door = false;\r\n\r\n    let tries = 0;\r\n    const max_tries = 100;\r\n\r\n    let not_already_connected = partialLevel.partitions.filter(\r\n      (p) => !room.connections.some((c) => c.other === p),\r\n    );\r\n\r\n    while (!found_door && tries < max_tries) {\r\n      let point = room.get_branch_point();\r\n      if (!point) {\r\n        break; // Skip if no valid branch point found\r\n      }\r\n\r\n      for (const p of not_already_connected) {\r\n        if (p !== room && p.point_next_to(point.x, point.y)) {\r\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n          found_door = true;\r\n          break;\r\n        }\r\n      }\r\n      tries++;\r\n    }\r\n  }\r\n\r\n  // calculate room distances\r\n  frontier = [spawn];\r\n  let seen = [];\r\n  spawn.distance = 0;\r\n  while (frontier.length > 0) {\r\n    let room = frontier[0];\r\n    frontier.splice(0, 1);\r\n    seen.push(room);\r\n\r\n    for (let c of room.connections) {\r\n      let other = c.other;\r\n      other.distance = Math.min(other.distance, room.distance + 1);\r\n\r\n      if (seen.indexOf(other) === -1) frontier.push(other);\r\n    }\r\n  }\r\n\r\n  return partialLevel.partitions;\r\n};\r\n\r\nlet generate_cave = async (\r\n  partialLevel: PartialLevel,\r\n  mapWidth: number,\r\n  mapHeight: number,\r\n): Promise<Array<Partition>> => {\r\n  const numberOfRooms = 5; // don't set this too high or cave generation will time out\r\n\r\n  do {\r\n    await generate_cave_candidate(\r\n      partialLevel,\r\n      mapWidth,\r\n      mapHeight,\r\n      numberOfRooms,\r\n    );\r\n  } while (partialLevel.partitions.length < numberOfRooms);\r\n\r\n  return partialLevel.partitions;\r\n};\r\n\r\nlet generate_tutorial = (\r\n  height: number = 7,\r\n  width: number = 7,\r\n): Array<Partition> => {\r\n  let partitions: Array<Partition>;\r\n\r\n  partitions = [new Partition(0, 0, height, width, \"white\")];\r\n  partitions[0].type = RoomType.TUTORIAL;\r\n\r\n  return partitions;\r\n};\r\n\r\nlet visualize_partitions = (\r\n  partitions: Array<Partition>,\r\n  mapWidth: number,\r\n  mapHeight: number,\r\n) => {\r\n  // Create grid with padded spaces\r\n  const grid = Array.from(\r\n    { length: mapHeight },\r\n    () => Array(mapWidth).fill(\" . \"), // Pad dots with spaces\r\n  );\r\n\r\n  // Calculate the maximum number of digits needed\r\n  const maxIndex = partitions.length - 1;\r\n  const padLength = maxIndex.toString().length;\r\n\r\n  partitions.forEach((partition, index) => {\r\n    // Pad the index number with spaces to maintain consistent width\r\n    const paddedIndex = index.toString().padStart(padLength, \" \");\r\n\r\n    for (let x = partition.x; x < partition.x + partition.w; x++) {\r\n      for (let y = partition.y; y < partition.y + partition.h; y++) {\r\n        if (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\r\n          grid[y][x] = ` ${paddedIndex} `; // Pad numbers with spaces\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  console.log(\"Partition Layout:\");\r\n  console.log(\r\n    \"   \" + [...Array(mapWidth)].map((_, i) => i % 10).join(\"  \") + \" X\",\r\n  ); // Column headers\r\n  grid.forEach((row, index) => {\r\n    const paddedIndex = index.toString().padStart(2, \" \");\r\n    console.log(`${paddedIndex} ${row.join(\"\")}`);\r\n  });\r\n  console.log(\"Y\");\r\n};\r\n\r\nlet check_overlaps = (partitions: Array<Partition>): boolean => {\r\n  for (let i = 0; i < partitions.length; i++) {\r\n    for (let j = i + 1; j < partitions.length; j++) {\r\n      const a = partitions[i];\r\n      const b = partitions[j];\r\n      if (\r\n        a.x < b.x + b.w &&\r\n        a.x + a.w > b.x &&\r\n        a.y < b.y + b.h &&\r\n        a.y + a.h > b.y\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport class PartialLevel {\r\n  partitions: Array<Partition>;\r\n}\r\n\r\nexport class LevelGenerator {\r\n  game: Game;\r\n  seed: number;\r\n  depthReached = 0;\r\n  currentFloorFirstLevelID = 0;\r\n  partialLevel: PartialLevel;\r\n  levelParams: LevelParameters;\r\n  static ANIMATION_CONSTANT = 1;\r\n\r\n  private setOpenWallsForPartitions = (\r\n    partitions: Array<Partition>,\r\n    mapWidth: number,\r\n    mapHeight: number,\r\n  ) => {\r\n    for (const partition of partitions) {\r\n      // Reset all walls to closed by default\r\n      partition.isTopOpen = false;\r\n      partition.isRightOpen = false;\r\n      partition.isBottomOpen = false;\r\n      partition.isLeftOpen = false;\r\n\r\n      // Check if partition touches map boundaries\r\n      if (partition.x === 0) {\r\n        partition.isLeftOpen = true;\r\n      }\r\n      if (partition.y === 0) {\r\n        partition.isTopOpen = true;\r\n      }\r\n      if (partition.x + partition.w === mapWidth) {\r\n        partition.isRightOpen = true;\r\n      }\r\n      if (partition.y + partition.h === mapHeight) {\r\n        partition.isBottomOpen = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  createLevel = (depth: number) => {\r\n    let newLevel = new Level(this.game, depth, 100, 100);\r\n    return newLevel;\r\n  };\r\n\r\n  getRooms = (\r\n    partitions: Array<Partition>,\r\n    depth: number,\r\n    mapGroup: number,\r\n  ): Array<Room> => {\r\n    //this.setOpenWallsForPartitions(partitions, 35, 35); // Using standard map size\r\n\r\n    let rooms: Array<Room> = [];\r\n\r\n    for (let i = 0; i < partitions.length; i++) {\r\n      let partition = partitions[i];\r\n\r\n      // Pass open walls information to the Room constructor\r\n      let room = new Room(\r\n        this.game,\r\n        partition.x - 1,\r\n        partition.y - 1,\r\n        partition.w + 2,\r\n        partition.h + 2,\r\n        partition.type,\r\n        depth,\r\n        mapGroup,\r\n        this.game.levels[depth],\r\n        Random.rand,\r\n      );\r\n      rooms.push(room);\r\n    }\r\n\r\n    let doors_added: Array<Door> = [];\r\n\r\n    partitions.forEach((partition, index) => {\r\n      partition.connections.forEach((connection) => {\r\n        let door = rooms[index].addDoor(connection.x, connection.y);\r\n        let existingDoor = doors_added.find(\r\n          (existing) => existing.x === door.x && existing.y === door.y,\r\n        );\r\n        if (existingDoor) {\r\n          existingDoor.link(door);\r\n          door.link(existingDoor);\r\n        }\r\n        doors_added.push(door);\r\n      });\r\n    });\r\n\r\n    for (let room of rooms) {\r\n      room.populate(Random.rand);\r\n    }\r\n\r\n    return rooms;\r\n  };\r\n\r\n  setSeed = (seed: number) => {\r\n    this.seed = seed;\r\n  };\r\n\r\n  generate = async (\r\n    game: Game,\r\n    depth: number,\r\n    cave = false,\r\n    callback: (linkedLevel: Room) => void,\r\n  ) => {\r\n    this.levelParams = LevelParameterGenerator.getParameters(depth);\r\n    this.depthReached = depth;\r\n\r\n    // Set the random state based on the seed and depth\r\n    Random.setState(this.seed + depth);\r\n\r\n    this.game = game;\r\n\r\n    // Determine the map group\r\n    let mapGroup =\r\n      this.game.rooms.length > 0\r\n        ? this.game.rooms[this.game.rooms.length - 1].mapGroup + 1\r\n        : 0;\r\n\r\n    this.partialLevel = new PartialLevel();\r\n\r\n    // Generate partitions based on whether it's a cave or a dungeon\r\n    if (cave)\r\n      await generate_cave(this.partialLevel, 20, 20); // You might want to make these dynamic based on params\r\n    else\r\n      await generate_dungeon(\r\n        game,\r\n        this.partialLevel,\r\n        this.levelParams.mapWidth,\r\n        this.levelParams.mapHeight,\r\n        depth,\r\n        this.levelParams,\r\n      );\r\n\r\n    // Call this function before get_wall_rooms\r\n    if (check_overlaps(this.partialLevel.partitions)) {\r\n      console.warn(\"There are overlapping partitions.\");\r\n    }\r\n\r\n    // Get the levels based on the partitions\r\n    let newLevel = this.createLevel(depth);\r\n\r\n    this.game.levels.push(newLevel);\r\n    this.game.level = newLevel;\r\n    let rooms = this.getRooms(this.partialLevel.partitions, depth, mapGroup);\r\n\r\n    newLevel.setRooms(rooms);\r\n    newLevel.exitRoom.linkExitToStart();\r\n\r\n    // Update the current floor first level ID if it's not a cave\r\n    if (!cave) this.currentFloorFirstLevelID = this.game.rooms.length;\r\n\r\n    // Add the new levels to the game rooms\r\n    this.game.rooms = rooms;\r\n\r\n    // // Generate the rope hole if it exists\r\n    for (let room of rooms) {\r\n      if (room.type === RoomType.ROPEHOLE) {\r\n        for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n          for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n            let tile = room.roomArray[x][y];\r\n            if (tile instanceof DownLadder && tile.isRope) {\r\n              tile.generate();\r\n\r\n              callback(\r\n                cave\r\n                  ? rooms.find((r) => r.type === RoomType.ROPECAVE)\r\n                  : rooms.find((r) => r.type === RoomType.START),\r\n              );\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return the start room or the rope cave room\r\n    callback(\r\n      cave\r\n        ? rooms.find((r) => r.type === RoomType.ROPECAVE)\r\n        : rooms.find((r) => r.type === RoomType.START),\r\n    );\r\n  };\r\n\r\n  generateFirstNFloors = async (game, numFloors) => {\r\n    await this.generate(game, 0, false, () => {});\r\n    for (let i = 0; i < numFloors; i++) {\r\n      let foundRoom = this.game.rooms\r\n        .slice()\r\n        .reverse()\r\n        .find((room) => room.type === RoomType.DOWNLADDER);\r\n\r\n      if (foundRoom) {\r\n        for (\r\n          let x = foundRoom.roomX;\r\n          x < foundRoom.roomX + foundRoom.width;\r\n          x++\r\n        ) {\r\n          for (\r\n            let y = foundRoom.roomY;\r\n            y < foundRoom.roomY + foundRoom.height;\r\n            y++\r\n          ) {\r\n            let tile = foundRoom.roomArray[x][y];\r\n            if (tile instanceof DownLadder) {\r\n              tile.generate();\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    if (document.cookie.includes(\"showgeneration=true\")) {\r\n      if (this.partialLevel.partitions) {\r\n        this.partialLevel.partitions.forEach((partition) => {\r\n          partition.draw(\r\n            delta,\r\n            this.levelParams.mapWidth / 2,\r\n            this.levelParams.mapHeight / 2,\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      Game.ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n      let dimensions = Game.measureText(\"generating level...\");\r\n      Game.fillText(\r\n        \"generating level...\",\r\n        GameConstants.WIDTH / 2 - dimensions.width / 2,\r\n        GameConstants.HEIGHT / 2 - dimensions.height / 2,\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { CrabEnemy } from \"./entity/enemy/crabEnemy\";\r\nimport { FrogEnemy } from \"./entity/enemy/frogEnemy\";\r\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\r\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\r\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\r\nimport { ChargeEnemy } from \"./entity/enemy/chargeEnemy\";\r\nimport { Spawner } from \"./entity/enemy/spawner\";\r\nimport { BishopEnemy } from \"./entity/enemy/bishopEnemy\";\r\nimport { ArmoredzombieEnemy } from \"./entity/enemy/armoredzombieEnemy\";\r\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\r\nimport { QueenEnemy } from \"./entity/enemy/queenEnemy\";\r\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\r\nimport { BigKnightEnemy } from \"./entity/enemy/bigKnightEnemy\";\r\nimport { FireWizardEnemy } from \"./entity/enemy/fireWizard\";\r\nimport { RookEnemy } from \"./entity/enemy/rookEnemy\";\r\n\r\nexport const enemyClasses = {\r\n  1: CrabEnemy,\r\n  2: FrogEnemy,\r\n  3: ZombieEnemy,\r\n  4: SkullEnemy,\r\n  5: EnergyWizardEnemy,\r\n  6: ChargeEnemy,\r\n  7: RookEnemy,\r\n  8: BishopEnemy,\r\n  9: ArmoredzombieEnemy,\r\n  10: BigSkullEnemy,\r\n  11: QueenEnemy,\r\n  12: KnightEnemy,\r\n  13: BigKnightEnemy,\r\n  14: FireWizardEnemy,\r\n};\r\n\r\nexport interface LevelParameters {\r\n  minRoomCount: number;\r\n  maxRoomCount: number;\r\n  maxRoomArea: number;\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n  splitProbabilities: number[];\r\n  wallRemoveProbability: number;\r\n  numLoopDoorsRange: [number, number];\r\n  numberOfRooms: number;\r\n  softMaxRoomArea: number;\r\n}\r\n\r\nexport class LevelParameterGenerator {\r\n  /**\r\n   * Generates level parameters based on the current depth.\r\n   * @param depth The current depth level.\r\n   * @returns An object conforming to the LevelParameters interface.\r\n   */\r\n  static getParameters(depth: number): LevelParameters {\r\n    return {\r\n      minRoomCount: depth > 0 ? 0 : 0,\r\n      maxRoomCount: depth > 0 ? 12 : 6,\r\n      maxRoomArea: depth > 0 ? 120 + 10 * depth : 40,\r\n      mapWidth: 25 + 5 * depth,\r\n      mapHeight: 25 + 5 * depth,\r\n      splitProbabilities: [0.75, 1.0, 0.25], // Example probabilities\r\n      wallRemoveProbability: depth > 0 ? 0.1 : 1,\r\n      numLoopDoorsRange: [4, 8], // Random between 4 and 8\r\n      numberOfRooms: depth > 0 ? 5 : 3,\r\n      softMaxRoomArea: depth > 0 ? 0.5 * (120 + 10 * depth) : 40,\r\n    };\r\n  }\r\n}\r\n","import { Room } from \"./room\";\r\n\r\nexport class LightSource {\r\n  x: number;\r\n  y: number;\r\n  r: number;\r\n  c: [number, number, number];\r\n  b: number = 1;\r\n\r\n  oldX: number;\r\n  oldY: number;\r\n  oldR: number;\r\n  oldC: [number, number, number];\r\n  oldB: number;\r\n\r\n  hasChanged: boolean;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    r: number,\r\n    c: [number, number, number] = [180, 60, 5],\r\n    b: number = 1,\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.c = c;\r\n    this.b = b;\r\n    this.oldX = x;\r\n    this.oldY = y;\r\n    this.oldR = r;\r\n    this.oldC = c;\r\n    this.oldB = b;\r\n    this.hasChanged = true;\r\n  }\r\n\r\n  updatePosition = (x: number, y: number) => {\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  shouldUpdate = () => {\r\n    return true;\r\n    this.hasChanged =\r\n      this.x !== this.oldX ||\r\n      this.y !== this.oldY ||\r\n      this.r !== this.oldR ||\r\n      this.c !== this.oldC ||\r\n      this.b !== this.oldB ||\r\n      this.hasChanged;\r\n    return this.hasChanged;\r\n  };\r\n}\r\n","import { LightSource } from \"./lightSource\";\r\nimport { Room } from \"./room\";\r\n\r\nexport class Lighting {\r\n  static momentaryLight = (\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    duration: number,\r\n    brightness: number,\r\n    delay: number,\r\n  ) => {\r\n    const lightSource = Lighting.newLightSource(\r\n      x,\r\n      y,\r\n      color,\r\n      radius,\r\n      brightness,\r\n    );\r\n    setTimeout(() => {\r\n      room.updateLightSources(lightSource);\r\n\r\n      setTimeout(() => {\r\n        room.updateLightSources(lightSource, true);\r\n      }, duration);\r\n    }, delay);\r\n  };\r\n\r\n  static newLightSource = (\r\n    x: number,\r\n    y: number,\r\n    color: [number, number, number],\r\n    radius: number,\r\n    brightness: number,\r\n  ) => {\r\n    return new LightSource(x, y, radius, color, brightness);\r\n  };\r\n\r\n  static addLightSource = (room: Room, lightSource: LightSource) => {\r\n    room.lightSources.push(lightSource);\r\n  };\r\n\r\n  static removeLightSource = (room: Room, lightSource: LightSource) => {\r\n    room.lightSources = room.lightSources.filter((ls) => ls !== lightSource);\r\n  };\r\n}\r\n","import { Game } from \"./game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { Room, RoomType } from \"./room\";\r\nimport { Entity, EntityType } from \"./entity/entity\";\r\nimport { Wall } from \"./tile/wall\";\r\nimport { Player } from \"./player\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\n\r\nexport class Map {\r\n  game: Game;\r\n  mapData: any[] = [];\r\n  oldMapData: any[] = [];\r\n  depth: number;\r\n  scale: number;\r\n\r\n  offsetX: number = 0;\r\n  offsetY: number = 0;\r\n  softOffsetX: number = 0;\r\n  softOffsetY: number = 0;\r\n  player: Player;\r\n  constructor(game: Game, player: Player) {\r\n    this.game = game;\r\n    this.scale = 1;\r\n    this.player = player;\r\n    //this.depth = player.game.level.depth\r\n  }\r\n\r\n  saveMapData = () => {\r\n    this.clearMap();\r\n    for (const room of this.game.levels[this.player.depth].rooms) {\r\n      if (\r\n        this.game.room.mapGroup === room.mapGroup &&\r\n        (room.entered === true || GameConstants.DEVELOPER_MODE)\r\n      ) {\r\n        this.mapData.push({\r\n          room: room,\r\n          walls: room.innerWalls,\r\n          doors: room.doors,\r\n          entities: room.entities,\r\n          items: room.items,\r\n          players: this.game.players,\r\n        });\r\n      }\r\n    }\r\n\r\n    const enteredRooms = this.mapData\r\n      .map((data) => data.room)\r\n      .filter((room) => room.entered);\r\n\r\n    if (enteredRooms.length > 0) {\r\n      const sortedByX = [...enteredRooms].sort((a, b) => a.roomX - b.roomX);\r\n      const sortedByY = [...enteredRooms].sort((a, b) => a.roomY - b.roomY);\r\n\r\n      const maxX = sortedByX[sortedByX.length - 1].roomX;\r\n      const minY = sortedByY[0].roomY;\r\n\r\n      this.offsetX = maxX;\r\n      this.offsetY = minY;\r\n    } else {\r\n      this.offsetX = 0;\r\n      this.offsetY = 0;\r\n    }\r\n  };\r\n\r\n  clearMap = () => {\r\n    this.mapData = [];\r\n  };\r\n\r\n  saveOldMap = () => {\r\n    this.oldMapData = [...this.mapData];\r\n  };\r\n\r\n  renderMap = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    this.setInitialCanvasSettings(1);\r\n    this.translateCanvas(0);\r\n    for (const data of this.mapData) {\r\n      this.drawRoom(data, delta);\r\n    }\r\n    /*for (const data of this.oldMapData) {\r\n      this.drawRoom(data);\r\n    }*/\r\n    this.resetCanvasTransform();\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n  updateOffsetXY = () => {\r\n    let diffX = this.offsetX - this.softOffsetX;\r\n    let diffY = this.offsetY - this.softOffsetY;\r\n\r\n    if (Math.abs(diffX) > 0.01) {\r\n      this.softOffsetX += diffX * 0.1;\r\n      this.softOffsetX = this.softOffsetX;\r\n    } else this.softOffsetX = this.offsetX;\r\n    if (Math.abs(diffY) > 0.01) {\r\n      this.softOffsetY += diffY * 0.1;\r\n      this.softOffsetY = this.softOffsetY;\r\n    } else this.softOffsetY = this.offsetY;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.updateOffsetXY();\r\n    this.renderMap(delta);\r\n  };\r\n\r\n  setInitialCanvasSettings = (alpha: number) => {\r\n    Game.ctx.globalAlpha = alpha;\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n  };\r\n\r\n  translateCanvas = (offset: number) => {\r\n    Game.ctx.translate(\r\n      Math.floor(0.95 * GameConstants.WIDTH) -\r\n        //this.game.room.roomX -\r\n        //Math.floor(0.5 * this.game.room.width) +\r\n        15 * this.scale -\r\n        Math.floor(this.softOffsetX),\r\n      Math.floor(0.05 * GameConstants.HEIGHT) -\r\n        //this.game.room.roomY -\r\n        //Math.floor(0.5 * this.game.room.height) -\r\n        1 * this.scale -\r\n        offset -\r\n        Math.floor(this.softOffsetY),\r\n    );\r\n  };\r\n\r\n  drawRoom = (data, delta: number) => {\r\n    //this.drawUnderRoomPlayers(data.players, delta);\r\n\r\n    this.drawRoomOutline(data.room);\r\n\r\n    this.drawRoomWalls(data.walls);\r\n    this.drawRoomDoors(data.doors);\r\n    this.drawRoomEntities(data.entities);\r\n    this.drawRoomItems(data.items);\r\n    this.drawRoomPlayers(data.players, delta);\r\n  };\r\n\r\n  drawRoomOutline = (level) => {\r\n    const s = this.scale;\r\n    Game.ctx.fillStyle = \"#5A5A5A\";\r\n    Game.ctx.fillRect(\r\n      level.roomX * s + 0,\r\n      level.roomY * s + 0,\r\n      level.width * s - 0,\r\n      level.height * s - 0,\r\n    );\r\n    if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\r\n    if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(\r\n      level.roomX * s + 1,\r\n      level.roomY * s + 1,\r\n      level.width * s - 2,\r\n      level.height * s - 2,\r\n    );\r\n  };\r\n\r\n  drawRoomWalls = (walls) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const wall of walls) {\r\n      Game.ctx.fillStyle = \"#404040\";\r\n      Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomDoors = (doors) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const door of doors) {\r\n      if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\r\n      if (door.opened === true) {\r\n        Game.ctx.fillStyle = \"black\";\r\n        Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\r\n      }\r\n      Game.ctx.fillStyle = \"#5A5A5A\"; // Reset to default after each door\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomPlayers = (players, delta: number) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const i in players) {\r\n      Game.ctx.fillStyle = \"white\";\r\n      if (\r\n        this.game.levels[players[i].depth].rooms[players[i].levelID]\r\n          .mapGroup === this.game.room.mapGroup\r\n      ) {\r\n        Game.ctx.fillRect(players[i].x * s, players[i].y * s, 1 * s, 1 * s);\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawUnderRoomPlayers = (players, delta: number) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const i in players) {\r\n      this.game.rooms[players[i].levelID].mapGroup === this.game.room.mapGroup;\r\n      {\r\n        if (Math.floor(Date.now() / 300) % 2) {\r\n          Game.ctx.fillStyle = \"#4D8C8C\";\r\n          // Draw 3x3 outline box around player\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top left\r\n          Game.ctx.fillRect(\r\n            players[i].x * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top middle\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top right\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            players[i].y * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Middle left\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            players[i].y * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Middle right\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom left\r\n          Game.ctx.fillRect(\r\n            players[i].x * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom middle\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom right\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomEntities = (entities) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const enemy of entities) {\r\n      this.setEntityColor(enemy);\r\n      Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  setEntityColor = (enemy) => {\r\n    // No need to save/restore here as only fillStyle is being set\r\n    if (enemy.type === EntityType.ENEMY) {\r\n      Game.ctx.fillStyle = \"yellow\";\r\n    }\r\n    if (enemy.type === EntityType.PROP) {\r\n      Game.ctx.fillStyle = \"#847e87\";\r\n    }\r\n    if (enemy.type === EntityType.RESOURCE) {\r\n      Game.ctx.fillStyle = \"#5a595b\";\r\n    }\r\n    if (enemy.type === EntityType.FRIENDLY) {\r\n      Game.ctx.fillStyle = \"cyan\";\r\n    }\r\n  };\r\n\r\n  drawRoomItems = (items) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const item of items) {\r\n      let x = item.x;\r\n      let y = item.y;\r\n      Game.ctx.fillStyle = \"#ac3232\";\r\n      if (!item.pickedUp) {\r\n        Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  resetCanvasTransform = () => {\r\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  };\r\n}\r\n","import { Game } from \"./game\";\nimport { guiButton } from \"./guiButton\";\nimport { InputEnum } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\n\nexport class Menu {\n  buttons: guiButton[];\n  open: boolean;\n  selectedButton: number;\n  subMenus: { [key: string]: Menu };\n  currentSubMenu: string | null;\n\n  constructor() {\n    this.buttons = [];\n    this.open = false;\n    this.selectedButton = 0;\n    this.subMenus = {};\n    this.currentSubMenu = null;\n    //this.initializeMainMenu();\n  }\n\n  initializeMainMenu() {\n    this.addButton(new guiButton(0, 0, 200, 50, \"Start Game\", this.startGame));\n    this.addButton(\n      new guiButton(0, 60, 200, 50, \"Settings\", () =>\n        this.openSubMenu(\"Settings\"),\n      ),\n    );\n    this.addButton(new guiButton(0, 120, 200, 50, \"Exit\", this.exitGame));\n    this.initializeSettingsMenu();\n    this.positionButtons();\n  }\n\n  initializeSettingsMenu() {\n    const settingsMenu = new Menu();\n    settingsMenu.addButton(\n      new guiButton(0, 0, 200, 50, \"Audio\", this.openAudioSettings),\n    );\n    settingsMenu.addButton(\n      new guiButton(0, 60, 200, 50, \"Graphics\", this.openGraphicsSettings),\n    );\n    settingsMenu.addButton(\n      new guiButton(0, 120, 200, 50, \"Controls\", this.openControlsSettings),\n    );\n    settingsMenu.addButton(\n      new guiButton(0, 180, 200, 50, \"Back\", () => this.closeSubMenu()),\n    );\n    settingsMenu.positionButtons();\n    this.subMenus[\"Settings\"] = settingsMenu;\n  }\n\n  addButton(button: guiButton) {\n    this.buttons.push(button);\n  }\n\n  drawMenu() {\n    if (!this.open && !this.currentSubMenu) return;\n\n    Game.ctx.save();\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n    Game.ctx.fillRect(0, 0, innerWidth, innerHeight);\n\n    const menuToDraw = this.currentSubMenu\n      ? this.subMenus[this.currentSubMenu]\n      : this;\n    menuToDraw.buttons.forEach((button) => {\n      this.drawButton(button, menuToDraw);\n    });\n    Game.ctx.restore();\n  }\n\n  drawButton(button: guiButton, menu: Menu) {\n    Game.ctx.fillStyle =\n      menu.selectedButton === menu.buttons.indexOf(button)\n        ? \"rgba(200, 200, 200, 1)\"\n        : \"rgba(255, 255, 255, 1)\";\n    Game.ctx.fillRect(button.x, button.y, button.width, button.height);\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    Game.ctx.font = \"20px Arial\";\n\n    const textWidth = Game.measureText(button.text).width;\n    const textX = button.x + (button.width - textWidth) / 2;\n    const textY = button.y + button.height / 2 + Game.letter_height / 2;\n\n    Game.fillText(button.text, textX, textY);\n  }\n\n  inputHandler(input: InputEnum) {\n    if (!this.open) return;\n\n    switch (input) {\n      case InputEnum.ESCAPE:\n        if (this.currentSubMenu) {\n          this.closeSubMenu();\n        } else {\n          this.open = false;\n        }\n        break;\n      case InputEnum.UP:\n        this.up();\n        break;\n      case InputEnum.DOWN:\n        this.down();\n        break;\n      case InputEnum.SPACE:\n        this.select();\n        break;\n      default:\n        break;\n    }\n  }\n\n  openSubMenu(menuName: string) {\n    if (this.subMenus[menuName]) {\n      this.currentSubMenu = menuName;\n      this.selectedButton = 0;\n    }\n  }\n\n  closeSubMenu() {\n    this.currentSubMenu = null;\n    this.selectedButton = 0;\n  }\n\n  close() {\n    this.open = false;\n    this.currentSubMenu = null;\n  }\n\n  select() {\n    const menuToSelect = this.currentSubMenu\n      ? this.subMenus[this.currentSubMenu]\n      : this;\n    if (menuToSelect.open) {\n      menuToSelect.buttons[menuToSelect.selectedButton].onClick();\n    }\n  }\n\n  up() {\n    const menuToNavigate = this.currentSubMenu\n      ? this.subMenus[this.currentSubMenu]\n      : this;\n    if (menuToNavigate.open) {\n      menuToNavigate.selectedButton =\n        (menuToNavigate.selectedButton - 1 + menuToNavigate.buttons.length) %\n        menuToNavigate.buttons.length;\n    }\n  }\n\n  down() {\n    const menuToNavigate = this.currentSubMenu\n      ? this.subMenus[this.currentSubMenu]\n      : this;\n    if (menuToNavigate.open) {\n      menuToNavigate.selectedButton =\n        (menuToNavigate.selectedButton + 1) % menuToNavigate.buttons.length;\n    }\n  }\n\n  // Example action methods\n  startGame = () => {\n    console.log(\"Game Started\");\n    this.close();\n    // Implement game start logic\n  };\n\n  exitGame = () => {\n    console.log(\"Exit Game\");\n    // Implement exit game logic\n  };\n\n  openAudioSettings = () => {\n    console.log(\"Audio Settings Opened\");\n    // Implement audio settings logic\n  };\n\n  openGraphicsSettings = () => {\n    console.log(\"Graphics Settings Opened\");\n    // Implement graphics settings logic\n  };\n\n  openControlsSettings = () => {\n    console.log(\"Controls Settings Opened\");\n    // Implement controls settings logic\n  };\n\n  positionButtons() {\n    const startX = (GameConstants.WIDTH - 200) / 2;\n    const startY = (GameConstants.HEIGHT - this.buttons.length * 60) / 2;\n    this.buttons.forEach((button, index) => {\n      button.x = startX;\n      button.y = startY + index * 60;\n    });\n  }\n}\n","import { Game } from \"./game\";\r\nimport { Input } from \"./input\";\r\nimport { GameConstants } from \"./gameConstants\";\r\n\r\nexport class MouseCursor {\r\n  private static instance: MouseCursor;\r\n  private cursorSize: number = 5; // Size of the cursor rectangle\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): MouseCursor {\r\n    if (!MouseCursor.instance) {\r\n      MouseCursor.instance = new MouseCursor();\r\n    }\r\n    return MouseCursor.instance;\r\n  }\r\n\r\n  public draw(): void {\r\n    /*\r\n    Game.ctx.save();\r\n    Game.ctx.fillStyle = \"rgba(255, 0, 0, 0.5)\"; // Semi-transparent red\r\n    Game.ctx.fillRect(\r\n      Input.mouseX - this.cursorSize / 2,\r\n      Input.mouseY - this.cursorSize / 2,\r\n      this.cursorSize,\r\n      this.cursorSize\r\n    );\r\n    Game.ctx.restore();\r\n    */\r\n  }\r\n\r\n  public getPosition(): { x: number; y: number } {\r\n    return { x: Input.mouseX, y: Input.mouseY };\r\n  }\r\n\r\n  public getTilePosition(): { x: number; y: number } {\r\n    return {\r\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\r\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\r\n    };\r\n  }\r\n\r\n  public getInventoryPosition(): { x: number; y: number } {\r\n    return {\r\n      x: Input.mouseX,\r\n      y: Input.mouseY,\r\n    };\r\n  }\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class AttackAnimation extends Particle {\r\n  tileX: number;\r\n  tileY: number;\r\n  tileYOffset: number;\r\n  x: number;\r\n  y: number;\r\n  frame: number;\r\n  type: string;\r\n  direction: Direction;\r\n  frames: number;\r\n  yOffset: number;\r\n  xOffset: number;\r\n\r\n  constructor(x: number, y: number, type: string, direction: Direction) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y - 0.25;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n    this.type = type;\r\n    this.xOffset = 0;\r\n    this.yOffset = 0;\r\n    switch (type) {\r\n      case \"dagger\":\r\n        this.frames = 10;\r\n        break;\r\n      case \"warhammer\":\r\n        this.frames = 11;\r\n        this.tileX = 12;\r\n        this.tileY = 32;\r\n        this.yOffset = -0.75;\r\n        this.xOffset = -0.1;\r\n        break;\r\n    }\r\n    switch (direction) {\r\n      case Direction.DOWN:\r\n        this.tileYOffset = 0;\r\n        break;\r\n      case Direction.UP:\r\n        this.tileYOffset = 2;\r\n        break;\r\n      case Direction.LEFT:\r\n        this.tileYOffset = 2;\r\n        break;\r\n      case Direction.RIGHT:\r\n        this.tileYOffset = 3;\r\n        break;\r\n    }\r\n  }\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n\r\n    Game.drawFX(\r\n      this.tileX + 2 * Math.round(this.frame / 2),\r\n      this.tileY + this.tileYOffset,\r\n      2,\r\n      2,\r\n      this.x - 0.5 + this.xOffset,\r\n      this.y - 0.5 + this.yOffset,\r\n      2,\r\n      2,\r\n    );\r\n\r\n    this.frame += 1.5 * delta;\r\n    if (this.frame > this.frames) this.dead = true;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Room } from \"../room\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class DamageNumber extends Particle {\r\n  room: Room;\r\n  damage: number;\r\n  x: number;\r\n  y: number;\r\n  alpha: number = 1;\r\n  color: string;\r\n  outlineColor: string;\r\n  frame: number = 0;\r\n  xoffset: number = 0;\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    damage: number,\r\n    color?: string,\r\n    outlineColor?: string,\r\n  ) {\r\n    super();\r\n    this.room = room;\r\n    this.damage = damage;\r\n    this.x = x;\r\n    this.y = y;\r\n    if (color) this.color = color;\r\n    else this.color = \"red\";\r\n    if (outlineColor) this.outlineColor = outlineColor;\r\n    else this.outlineColor = GameConstants.OUTLINE;\r\n    this.xoffset = Math.random() * 0.2;\r\n  }\r\n  getXoffset = () => {\r\n    if (this.room.particles.length > 0) {\r\n      let damageNumbers = this.room.particles.filter(\r\n        (p) => p instanceof DamageNumber,\r\n      );\r\n      if (damageNumbers.length % 3 === 0) return 0.5;\r\n      if (damageNumbers.length % 3 === 1) return 0;\r\n      if (damageNumbers.length % 3 === 2) return 0.25;\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    if (this.dead) {\r\n      Game.ctx.restore();\r\n      return;\r\n    }\r\n    if (this.frame > 15) this.alpha *= 0.95;\r\n\r\n    this.y -= 0.03 * delta;\r\n    this.frame += delta;\r\n    let width = Game.measureText(this.damage.toString()).width;\r\n    if (this.alpha <= 0.002) {\r\n      this.alpha = 0;\r\n      this.dead = true;\r\n    }\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    Game.fillTextOutline(\r\n      this.damage.toString(),\r\n      (this.x + 0.4 + this.xoffset) * GameConstants.TILESIZE - width / 2,\r\n      (this.y - 0.6) * GameConstants.TILESIZE,\r\n      this.outlineColor,\r\n      this.color,\r\n    );\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class DeathParticle extends Particle {\r\n  x: number;\r\n  y: number;\r\n  frame: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y - 1.5;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n  }\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n\r\n    let yOffset = Math.max(0, ((this.frame - 3) * 3) / GameConstants.TILESIZE);\r\n    let f = Math.round(this.frame);\r\n    if (f == 2 || f == 4 || f == 6)\r\n      Game.drawMob(2, 0, 1, 2, this.x, this.y - yOffset, 1, 2);\r\n    else\r\n      Game.drawFX(\r\n        Math.round(this.frame),\r\n        4,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y - yOffset,\r\n        1,\r\n        2,\r\n      );\r\n\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame > 10) this.dead = true;\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Particle } from \"./particle\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport class GenericParticle extends Particle {\r\n  level: Room;\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  s: number;\r\n  dx: number;\r\n  dy: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetZ: number;\r\n  dz: number;\r\n  color: string;\r\n  alpha: number;\r\n  delay: number;\r\n  expirationTimer: number;\r\n\r\n  static shotgun = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tx: number,\r\n    ty: number,\r\n    color: string,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      level.particles.push(\r\n        new GenericParticle(\r\n          level,\r\n          cx,\r\n          cy,\r\n          0,\r\n          Math.random() * 0.5 + 0.3,\r\n          0,\r\n          0,\r\n          0,\r\n          color,\r\n          0,\r\n          10000000,\r\n          tx + Math.random() - 0.5,\r\n          ty + Math.random() - 0.5,\r\n          0,\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  static spawnCluster = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    color: string,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      level.particles.push(\r\n        new GenericParticle(\r\n          level,\r\n          cx + Math.random() * 0.05 - 0.025,\r\n          cy + Math.random() * 0.05 - 0.025,\r\n          Math.random() * 0.5,\r\n          0.0625 * (i + 8),\r\n          0.025 * (Math.random() * 2 - 1),\r\n          0.025 * (Math.random() * 2 - 1),\r\n          0.2 * (Math.random() - 1),\r\n          color,\r\n          0,\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    level: Room,\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    s: number,\r\n    dx: number,\r\n    dy: number,\r\n    dz: number,\r\n    color: string,\r\n    delay?: number,\r\n    expirationTimer?: number,\r\n    targetX?: number,\r\n    targetY?: number,\r\n    targetZ?: number,\r\n  ) {\r\n    super();\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.s = s;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.dz = dz;\r\n    this.color = color;\r\n    this.alpha = 1.0;\r\n    if (delay !== undefined) this.delay = delay;\r\n    this.targetX = targetX;\r\n    this.targetY = targetY;\r\n    this.targetZ = targetZ;\r\n    this.expirationTimer = 1000000;\r\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\r\n  }\r\n\r\n  render = () => {\r\n    let scale = GameConstants.TILESIZE;\r\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\r\n    let halfS = 0.5 * scaledS;\r\n    let oldFillStyle = Game.ctx.fillStyle;\r\n    Game.ctx.fillStyle = this.color;\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    Game.ctx.beginPath();\r\n    Game.ctx.arc(\r\n      Math.round(this.x * scale),\r\n      Math.round((this.y - this.z) * scale),\r\n      Math.round(halfS * scale),\r\n      0,\r\n      2 * Math.PI,\r\n      false,\r\n    );\r\n    Game.ctx.fill();\r\n\r\n    Game.ctx.fillStyle = oldFillStyle;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\r\n    else this.x += this.dx;\r\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\r\n    else this.y += this.dy;\r\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\r\n    else this.z += this.dz;\r\n\r\n    this.dx *= 0.97;\r\n    this.dy *= 0.97;\r\n    if (this.z <= 0) {\r\n      this.z = 0;\r\n      this.dz *= -0.8;\r\n    }\r\n\r\n    // apply gravity\r\n    this.dz -= 0.01;\r\n\r\n    if (this.alpha < 0.2) this.alpha -= 0.007;\r\n    else this.alpha -= 0.02;\r\n    if (this.alpha <= 0.1) this.dead = true;\r\n\r\n    this.expirationTimer--;\r\n    if (this.expirationTimer <= 0) this.dead = true;\r\n\r\n    if (this.dead) return;\r\n\r\n    this.drawableY = this.y;\r\n\r\n    this.render();\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Particle } from \"./particle\";\r\nimport { Direction, Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Random } from \"../random\";\r\nimport { Player, PlayerDirection } from \"../player\";\r\nimport { Entity } from \"../entity/entity\";\r\n\r\nexport class ImageParticle extends Particle {\r\n  room: Room;\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  s: number;\r\n  dx: number;\r\n  dy: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetZ: number;\r\n  dz: number;\r\n  color: string;\r\n  alpha: number;\r\n  delay: number;\r\n  expirationTimer: number;\r\n  tileX: number;\r\n  tileY: number;\r\n  size: number;\r\n  static shotgun = (\r\n    room: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tx: number,\r\n    ty: number,\r\n    tileX: number,\r\n    tileY: number,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      room.particles.push(\r\n        new ImageParticle(\r\n          room,\r\n          cx,\r\n          cy,\r\n          0,\r\n          Math.random() * 0.5 + 0.3,\r\n          0,\r\n          0,\r\n          0,\r\n          tileX,\r\n          tileY,\r\n          0, //size\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  static spawnCluster = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tileX: number,\r\n    tileY: number,\r\n  ) => {\r\n    for (let i = Math.floor(Math.random() * 3); i < 5; i++) {\r\n      level.particles.push(\r\n        new ImageParticle(\r\n          level,\r\n          cx + Math.random() * 0.05 - 0.025, // x\r\n          cy + Math.random() * 0.05 - 0.025, // y\r\n          Math.random() * 0.5, // z\r\n          0.0625 * (i + 8), // s\r\n          0.025 * (Math.random() * 2 - 1), //dx\r\n          0.025 * (Math.random() * 2 - 1), //dy\r\n          0.2 * (Math.random() - 1), //dz\r\n          tileX,\r\n          tileY,\r\n          [2, 1, 0, 1, 2, 2, 2][i], //size\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    s: number,\r\n    dx: number,\r\n    dy: number,\r\n    dz: number,\r\n    tileX: number,\r\n    tileY: number,\r\n    size: number,\r\n    delay?: number,\r\n    expirationTimer?: number,\r\n    targetX?: number,\r\n    targetY?: number,\r\n    targetZ?: number,\r\n  ) {\r\n    super();\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z; // Use provided height\r\n    this.s = s;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.dz = dz;\r\n    this.tileX = tileX;\r\n    this.tileY = tileY;\r\n    this.size = size;\r\n    this.alpha = 1.0;\r\n    if (delay !== undefined) this.delay = delay;\r\n    this.targetX = targetX;\r\n    this.targetY = targetY;\r\n    this.targetZ = targetZ;\r\n    this.expirationTimer = 100; // Increased life duration\r\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\r\n  }\r\n\r\n  render = () => {\r\n    let scale = GameConstants.TILESIZE;\r\n    let yOffset = this.z * scale;\r\n    let frame = this.s > 0.5 ? 1 : 0; // Placeholder frames for large and small particles\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    let adjustedTileX = this.tileX + this.size;\r\n    Game.drawFX(\r\n      adjustedTileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      this.x - this.alpha / 2,\r\n      this.y - this.z - this.alpha / 2,\r\n      1,\r\n      1,\r\n      this.shadeColor(),\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    if (this.targetX) this.x += 0.2 * (this.targetX - this.x) * delta;\r\n    else this.x += this.dx * delta;\r\n    if (this.targetY) this.y += 0.2 * (this.targetY - this.y) * delta;\r\n    else this.y += this.dy * delta;\r\n    if (this.targetZ) this.z += 0.2 * (this.targetZ - this.z) * delta;\r\n    else this.z += this.dz * delta;\r\n\r\n    this.dx *= Math.pow(0.97, delta);\r\n    this.dy *= Math.pow(0.97, delta);\r\n    if (this.z <= 0) {\r\n      this.z = 0;\r\n      this.dz *= -0.8;\r\n    }\r\n\r\n    this.dz -= 0.01 * delta;\r\n\r\n    this.expirationTimer -= delta;\r\n    if (this.expirationTimer <= 0) this.dead = true;\r\n\r\n    if (this.dead) return;\r\n\r\n    this.drawableY = this.y;\r\n\r\n    this.render();\r\n  };\r\n}\r\n","import { Drawable } from \"../drawable\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Player } from \"../player\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class Particle extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  room: Room;\r\n  drawTopLayer = (delta) => {};\r\n  shadeAmount = () => {\r\n    const x = Math.floor(this.x);\r\n    const y = Math.floor(this.y);\r\n\r\n    if (!this.room.softVis[x]) return 0.9;\r\n\r\n    const shade = this.room.softVis[x][y];\r\n    return shade ?? 0.9;\r\n  };\r\n  shadeColor = () => {\r\n    return this.room.shadeColor;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class SlashParticle extends Particle {\r\n  x: number;\r\n  y: number;\r\n  frame: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y - 0.25;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n\r\n    Game.drawFX(Math.round(this.frame), 13, 1, 1, this.x, this.y, 1, 1);\r\n\r\n    this.frame += 0.5 * delta;\r\n    if (this.frame > 9) this.dead = true;\r\n  };\r\n}\r\n","import { Particle } from \"./particle\";\r\nimport { Game } from \"../game\";\r\n\r\nexport class WizardTeleportParticle extends Particle {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  dz: number;\r\n  frame: number;\r\n  dead: boolean;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n    this.z = 0;\r\n    this.dz = 0.1;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\r\n    this.z += this.dz * delta;\r\n    this.dz *= 0.9;\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame > 6) this.dead = true;\r\n  };\r\n}\r\n","import { Input, InputEnum } from \"./input\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { ChatMessage, Direction, Game, LevelState } from \"./game\";\r\nimport { Door, DoorType } from \"./tile/door\";\r\nimport { Trapdoor } from \"./tile/trapdoor\";\r\nimport { Inventory } from \"./inventory\";\r\nimport { Sound } from \"./sound\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { Map } from \"./map\";\r\nimport { SlashParticle } from \"./particle/slashParticle\";\r\nimport { HealthBar } from \"./healthbar\";\r\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\r\nimport { Drawable } from \"./drawable\";\r\nimport { Random } from \"./random\";\r\nimport { GenericParticle } from \"./particle/genericParticle\";\r\nimport { ActionState, ActionTab } from \"./actionTab\";\r\nimport { HitWarning } from \"./hitWarning\";\r\nimport { Entity, EntityType } from \"./entity/entity\";\r\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\r\nimport { Item } from \"./item/item\";\r\nimport { PostProcessor } from \"./postProcess\";\r\nimport { Weapon } from \"./weapon/weapon\";\r\nimport { Room } from \"./room\";\r\nimport { ImageParticle } from \"./particle/imageParticle\";\r\nimport { Enemy } from \"./entity/enemy/enemy\";\r\nimport { MouseCursor } from \"./mouseCursor\";\r\nimport { Light } from \"./item/light\";\r\nimport { LightSource } from \"./lightSource\";\r\nimport { statsTracker } from \"./stats\";\r\nimport { BeamEffect } from \"./beamEffect\";\r\nimport { Spellbook } from \"./weapon/spellbook\";\r\nimport { globalEventBus } from \"./eventBus\";\r\nimport { Utils } from \"./utils\";\r\nimport { Menu } from \"./menu\";\r\nimport { Bestiary } from \"./bestiary\";\r\nimport { AttackAnimation } from \"./particle/attackAnimation\";\r\n\r\nexport enum PlayerDirection {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n}\r\n\r\nenum DrawDirection {\r\n  X,\r\n  Y,\r\n}\r\n\r\nexport class Player extends Drawable {\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  drawX: number;\r\n  drawY: number;\r\n  hitX: number;\r\n  hitY: number;\r\n  frame: number;\r\n  direction: Direction;\r\n  game: Game;\r\n  levelID: number; // which room we're in (level[levelID])\r\n  flashing: boolean;\r\n  flashingFrame: number;\r\n  health: number;\r\n  maxHealth: number;\r\n  healthBar: HealthBar;\r\n  dead: boolean;\r\n  lastTickHealth: number;\r\n  inventory: Inventory;\r\n  sightRadius: number;\r\n  defaultSightRadius: number;\r\n  static minSightRadius: number = 2; //hard minimum sight radius that ignores depth\r\n  guiHeartFrame: number;\r\n  map: Map;\r\n  openVendingMachine: VendingMachine;\r\n  isLocalPlayer: boolean;\r\n  mapToggled: boolean;\r\n  //actionTab: ActionTab;\r\n  lastHitBy: string;\r\n  turnCount: number;\r\n  triedMove: boolean;\r\n  tutorialRoom: boolean;\r\n  private lastMoveTime: number;\r\n  private moveCooldown: number;\r\n  moveRange: number;\r\n  tileCursor: { x: number; y: number };\r\n  private jumpY: number;\r\n  lightEquipped: boolean;\r\n  lightSource: LightSource;\r\n  hurtAlpha: number;\r\n  hurting: boolean; // handles drawing hurt animation\r\n  hurtingShield: boolean; // handles drawing hurt shield animation\r\n  hurtShield: boolean; // handles logic to take damage or not\r\n  lightBrightness: number;\r\n  sineAngle: number;\r\n  drawMoveSpeed: number;\r\n  jumpHeight: number;\r\n  moveDistance: number;\r\n  moveQueue: { x: number; y: number; direction: Direction }[];\r\n  lastX: number;\r\n  lastY: number;\r\n  motionSpeed: number;\r\n  slowMotionEnabled: boolean;\r\n  justMoved: DrawDirection;\r\n  slowMotionTickDuration: number;\r\n  depth: number;\r\n  menu: Menu;\r\n  private animationFrameId: number | null = null;\r\n  private isProcessingQueue: boolean = false;\r\n  private lowHealthFrame: number = 0;\r\n  private drawMoveQueue: {\r\n    drawX: number;\r\n    drawY: number;\r\n  }[] = [];\r\n\r\n  seenEnemies: Set<typeof Enemy> = new Set();\r\n  bestiary: Bestiary = null;\r\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\r\n    super();\r\n\r\n    this.game = game;\r\n\r\n    this.levelID = 0;\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.jumpY = 0;\r\n    this.jumpHeight = 0.3;\r\n    this.frame = 0;\r\n    this.moveDistance = 0;\r\n    this.direction = Direction.UP;\r\n    this.lastX = 0;\r\n    this.lastY = 0;\r\n    this.isLocalPlayer = isLocalPlayer;\r\n    this.depth = 0;\r\n    this.menu = new Menu();\r\n    if (isLocalPlayer) {\r\n      Input.leftSwipeListener = () => {\r\n        if (\r\n          !this.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n            .inBounds &&\r\n          !this.inventory.isOpen\r\n        )\r\n          this.inputHandler(InputEnum.LEFT);\r\n      };\r\n\r\n      Input.rightSwipeListener = () => {\r\n        if (\r\n          !this.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n            .inBounds &&\r\n          !this.inventory.isOpen\r\n        )\r\n          this.inputHandler(InputEnum.RIGHT);\r\n      };\r\n\r\n      Input.upSwipeListener = () => {\r\n        if (\r\n          !this.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n            .inBounds &&\r\n          !this.inventory.isOpen\r\n        )\r\n          this.inputHandler(InputEnum.UP);\r\n      };\r\n\r\n      Input.downSwipeListener = () => {\r\n        if (\r\n          !this.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n            .inBounds &&\r\n          !this.inventory.isOpen\r\n        )\r\n          this.inputHandler(InputEnum.DOWN);\r\n      };\r\n\r\n      Input.commaListener = () => this.inputHandler(InputEnum.COMMA);\r\n      Input.periodListener = () => this.inputHandler(InputEnum.PERIOD);\r\n      Input.tapListener = () => {\r\n        if (this.inventory.isOpen) {\r\n          if (this.inventory.pointInside(Input.mouseX, Input.mouseY)) {\r\n            this.inputHandler(InputEnum.LEFT_CLICK);\r\n          }\r\n        } else {\r\n          if (\r\n            this.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n              .inBounds\r\n          ) {\r\n            if (this.inventory.pointInside(Input.mouseX, Input.mouseY)) {\r\n              this.inputHandler(InputEnum.LEFT_CLICK);\r\n            }\r\n          }\r\n        }\r\n      };\r\n      Input.mouseMoveListener = () => this.inputHandler(InputEnum.MOUSE_MOVE);\r\n      Input.mouseLeftClickListeners.push(() =>\r\n        this.inputHandler(InputEnum.LEFT_CLICK),\r\n      );\r\n      Input.mouseRightClickListeners.push(() =>\r\n        this.inputHandler(InputEnum.RIGHT_CLICK),\r\n      );\r\n      Input.numKeyListener = (num: number) =>\r\n        this.inputHandler(InputEnum.NUMBER_1 + num - 1);\r\n      Input.equalsListener = () => this.inputHandler(InputEnum.EQUALS);\r\n      Input.minusListener = () => this.inputHandler(InputEnum.MINUS);\r\n      Input.escapeListener = () => this.inputHandler(InputEnum.ESCAPE);\r\n    }\r\n    this.mapToggled = true;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.healthBar = new HealthBar();\r\n    this.dead = false;\r\n    this.flashing = false;\r\n    this.flashingFrame = 0;\r\n    this.lastTickHealth = this.health;\r\n    this.guiHeartFrame = 0;\r\n\r\n    this.inventory = new Inventory(game, this);\r\n    this.defaultSightRadius = 3;\r\n    this.sightRadius = LevelConstants.LIGHTING_MAX_DISTANCE; //this.defaultSightRadius;\r\n    this.map = new Map(this.game, this);\r\n    //this.actionTab = new ActionTab(this.inventory, this.game);\r\n    this.turnCount = 0;\r\n    this.triedMove = false;\r\n    this.tutorialRoom = false;\r\n    this.lastMoveTime = 0;\r\n    this.moveCooldown = 100; // Cooldown in milliseconds (adjust as needed)\r\n    this.tileCursor = { x: 0, y: 0 };\r\n    this.moveRange = 1;\r\n    this.lightEquipped = false;\r\n    this.hurting = false;\r\n    this.hurtingShield = false;\r\n    this.hurtShield = false;\r\n    this.hurtAlpha = 0.25;\r\n    this.lightBrightness = 0.3;\r\n    this.sineAngle = Math.PI / 2;\r\n    this.drawMoveSpeed = 0.3; // greater than 1 less than 2\r\n    this.moveQueue = [];\r\n    this.isProcessingQueue = false;\r\n\r\n    this.hitX = 0;\r\n    this.hitY = 0;\r\n    this.motionSpeed = 1;\r\n    this.slowMotionEnabled = false;\r\n    this.slowMotionTickDuration = 0;\r\n    this.justMoved = DrawDirection.Y;\r\n\r\n    this.bestiary = new Bestiary(this.game, this);\r\n  }\r\n\r\n  get angle(): number {\r\n    if (this.direction !== undefined) {\r\n      switch (this.direction) {\r\n        case Direction.UP:\r\n          return 270;\r\n        case Direction.RIGHT:\r\n          return 0;\r\n        case Direction.DOWN:\r\n          return 90;\r\n        case Direction.LEFT:\r\n          return 180;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  applyStatus = (\r\n    enemy: Entity,\r\n    status: { poison: boolean; blood: boolean },\r\n  ) => {\r\n    if (enemy instanceof Enemy) {\r\n      if (status.poison) {\r\n        enemy.poison();\r\n        return true;\r\n      }\r\n      if (status.blood) {\r\n        enemy.bleed();\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  inputHandler = (input: InputEnum) => {\r\n    if (this.menu.open) {\r\n      this.menu.inputHandler(input);\r\n      return;\r\n    }\r\n    if (!this.game.started && input !== InputEnum.MOUSE_MOVE) {\r\n      this.game.startedFadeOut = true;\r\n      return;\r\n    }\r\n    switch (input) {\r\n      case InputEnum.I:\r\n        this.iListener();\r\n        break;\r\n      case InputEnum.Q:\r\n        this.qListener();\r\n        break;\r\n      case InputEnum.LEFT:\r\n        if (!this.ignoreDirectionInput()) this.leftListener(false);\r\n        break;\r\n      case InputEnum.RIGHT:\r\n        if (!this.ignoreDirectionInput()) this.rightListener(false);\r\n        break;\r\n      case InputEnum.UP:\r\n        if (!this.ignoreDirectionInput()) this.upListener(false);\r\n        break;\r\n      case InputEnum.DOWN:\r\n        if (!this.ignoreDirectionInput()) this.downListener(false);\r\n        break;\r\n      case InputEnum.SPACE:\r\n        this.spaceListener();\r\n        break;\r\n      case InputEnum.COMMA:\r\n        this.commaListener();\r\n        break;\r\n      case InputEnum.PERIOD:\r\n        this.periodListener();\r\n        break;\r\n      case InputEnum.LEFT_CLICK:\r\n        this.mouseLeftClick();\r\n        break;\r\n      case InputEnum.RIGHT_CLICK:\r\n        this.mouseRightClick();\r\n        break;\r\n      case InputEnum.MOUSE_MOVE:\r\n        this.mouseMove();\r\n        break;\r\n      case InputEnum.NUMBER_1:\r\n      case InputEnum.NUMBER_2:\r\n      case InputEnum.NUMBER_3:\r\n      case InputEnum.NUMBER_4:\r\n      case InputEnum.NUMBER_5:\r\n      case InputEnum.NUMBER_6:\r\n      case InputEnum.NUMBER_7:\r\n      case InputEnum.NUMBER_8:\r\n      case InputEnum.NUMBER_9:\r\n        this.numKeyListener(input);\r\n        break;\r\n      case InputEnum.EQUALS:\r\n        this.plusListener();\r\n        break;\r\n      case InputEnum.MINUS:\r\n        this.minusListener();\r\n        break;\r\n      case InputEnum.ESCAPE:\r\n        this.escapeListener();\r\n        break;\r\n    }\r\n  };\r\n  escapeListener = () => {\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.close();\r\n    }\r\n  };\r\n  commaListener = () => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    this.inventory.left();\r\n  };\r\n  periodListener = () => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    this.inventory.right();\r\n  };\r\n  numKeyListener = (input: InputEnum) => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    this.inventory.handleNumKey(input - 13);\r\n  };\r\n\r\n  tapListener = () => {\r\n    this.inventory.mostRecentInput = \"mouse\";\r\n    this.inventory.open();\r\n  };\r\n  iListener = () => {\r\n    this.inventory.open();\r\n  };\r\n  qListener = () => {\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.drop();\r\n    }\r\n  };\r\n  ignoreDirectionInput = (): boolean => {\r\n    return (\r\n      !this.inventory.isOpen &&\r\n      (this.dead || this.game.levelState !== LevelState.IN_LEVEL)\r\n    );\r\n  };\r\n  leftListener = (isLocal: boolean): boolean => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.left();\r\n      return true;\r\n    }\r\n    if (\r\n      !this.dead &&\r\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\r\n    ) {\r\n      this.left();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  rightListener = (isLocal: boolean): boolean => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.right();\r\n      return true;\r\n    }\r\n    if (\r\n      !this.dead &&\r\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\r\n    ) {\r\n      this.right();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  upListener = (isLocal: boolean): boolean => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.up();\r\n      return true;\r\n    }\r\n    if (\r\n      !this.dead &&\r\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\r\n    ) {\r\n      this.up();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  downListener = (isLocal: boolean): boolean => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    if (this.inventory.isOpen) {\r\n      this.inventory.down();\r\n      return true;\r\n    }\r\n    if (\r\n      !this.dead &&\r\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\r\n    ) {\r\n      this.down();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  spaceListener = () => {\r\n    this.inventory.mostRecentInput = \"keyboard\";\r\n    if (!this.game.chatOpen) {\r\n      if (this.dead) {\r\n        this.restart();\r\n      } else if (this.openVendingMachine) {\r\n        this.openVendingMachine.space();\r\n      } else if (\r\n        this.inventory.isOpen ||\r\n        this.game.levelState === LevelState.IN_LEVEL\r\n      ) {\r\n        this.inventory.space();\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  plusListener = () => {\r\n    0;\r\n    GameConstants.INCREASE_SCALE();\r\n    this.game.onResize();\r\n  };\r\n  minusListener = () => {\r\n    GameConstants.DECREASE_SCALE();\r\n    this.game.onResize();\r\n  };\r\n\r\n  mouseLeftClick = () => {\r\n    this.inventory.mostRecentInput = \"mouse\";\r\n    const mousePos = MouseCursor.getInstance().getPosition();\r\n    const { x, y } = mousePos;\r\n\r\n    if (this.dead) {\r\n      this.restart();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      (this.inventory.isOpen &&\r\n        !this.inventory.isPointInInventoryBounds(x, y).inBounds) ||\r\n      this.inventory.isPointInInventoryButton(x, y)\r\n    ) {\r\n      this.inventory.toggleOpen();\r\n    }\r\n\r\n    if (this.openVendingMachine) {\r\n      if (this.openVendingMachine.isPointInVendingMachineBounds(x, y)) {\r\n        this.openVendingMachine.space();\r\n      } else {\r\n        this.inventory.mouseLeftClick();\r\n      }\r\n      return;\r\n    }\r\n    const notInInventoryUI =\r\n      !this.inventory.isPointInInventoryButton(x, y) &&\r\n      !this.inventory.isPointInQuickbarBounds(x, y).inBounds;\r\n\r\n    if (notInInventoryUI) {\r\n      this.moveWithMouse();\r\n    }\r\n  };\r\n  mouseRightClick = () => {\r\n    this.inventory.mostRecentInput = \"mouse\";\r\n    this.inventory.mouseRightClick();\r\n  };\r\n\r\n  mouseMove = () => {\r\n    this.inventory.mostRecentInput = \"mouse\";\r\n    this.inventory.mouseMove();\r\n    //this.faceMouse();\r\n    this.setTileCursorPosition();\r\n  };\r\n\r\n  moveWithMouse = () => {\r\n    /*\r\n    this.faceMouse();\r\n    if (this.moveRangeCheck(this.mouseToTile().x, this.mouseToTile().y)) {\r\n      this.tryMove(this.mouseToTile().x, this.mouseToTile().y);\r\n    }\r\n    */\r\n  };\r\n\r\n  mouseToTile = () => {\r\n    // Get screen center coordinates\r\n    const screenCenterX = GameConstants.WIDTH / 2;\r\n    const screenCenterY = GameConstants.HEIGHT / 2;\r\n\r\n    // Convert pixel offset to tile offset (this part was working correctly)\r\n    const tileOffsetX = Math.floor(\r\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\r\n        GameConstants.TILESIZE,\r\n    );\r\n    const tileOffsetY = Math.floor(\r\n      (Input.mouseY - screenCenterY + GameConstants.TILESIZE / 2) /\r\n        GameConstants.TILESIZE,\r\n    );\r\n\r\n    return {\r\n      x: this.x + tileOffsetX,\r\n      y: this.y + tileOffsetY,\r\n    };\r\n  };\r\n\r\n  tryVaultOver = (x: number, y: number, direction: PlayerDirection) => {\r\n    switch (direction) {\r\n      case PlayerDirection.UP:\r\n        this.tryMove(x, y - 1);\r\n        break;\r\n      case PlayerDirection.DOWN:\r\n        this.tryMove(x, y + 1);\r\n        break;\r\n      case PlayerDirection.LEFT:\r\n        this.tryMove(x - 1, y);\r\n        break;\r\n      case PlayerDirection.RIGHT:\r\n        this.tryMove(x + 1, y);\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveRangeCheck = (x: number, y: number) => {\r\n    const dx = Math.abs(this.x - x);\r\n    const dy = Math.abs(this.y - y);\r\n    return dx <= this.moveRange && dy <= this.moveRange && dx + dy !== 0;\r\n  };\r\n\r\n  setTileCursorPosition = () => {\r\n    this.tileCursor = {\r\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\r\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\r\n    };\r\n  };\r\n\r\n  restart = () => {\r\n    this.dead = false;\r\n    this.game.newGame();\r\n  };\r\n\r\n  left = () => {\r\n    const { x, y } = { x: this.x - 1, y: this.y };\r\n    if (this.canMove()) {\r\n      this.direction = Direction.LEFT;\r\n      {\r\n        this.tryMove(x, y);\r\n      }\r\n    } else this.queueMove(x, y, Direction.LEFT);\r\n  };\r\n  right = () => {\r\n    const { x, y } = { x: this.x + 1, y: this.y };\r\n    if (this.canMove()) {\r\n      this.direction = Direction.RIGHT;\r\n      {\r\n        this.tryMove(x, y);\r\n      }\r\n    } else this.queueMove(x, y, Direction.RIGHT);\r\n  };\r\n  up = () => {\r\n    const { x, y } = { x: this.x, y: this.y - 1 };\r\n\r\n    if (this.canMove()) {\r\n      this.direction = Direction.UP;\r\n      {\r\n        this.tryMove(x, y);\r\n      }\r\n    } else this.queueMove(x, y, Direction.UP);\r\n  };\r\n  down = () => {\r\n    const { x, y } = { x: this.x, y: this.y + 1 };\r\n\r\n    if (this.canMove()) {\r\n      this.direction = Direction.DOWN;\r\n      {\r\n        this.tryMove(x, y);\r\n      }\r\n    } else this.queueMove(x, y, Direction.DOWN);\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  tryCollide = (other: any, newX: number, newY: number) => {\r\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\r\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\r\n    return true;\r\n  };\r\n\r\n  tryMove = (x: number, y: number) => {\r\n    let slowMotion = this.slowMotionEnabled;\r\n    let newMove = { x: x, y: y };\r\n    // TODO don't move if hit by enemy\r\n    this.game.levels[this.depth].rooms[this.levelID].catchUp();\r\n    if (this.dead) return;\r\n\r\n    for (let i = 0; i < 2; i++)\r\n      if (\r\n        this.inventory.hasWeapon() &&\r\n        !this.inventory.getWeapon().weaponMove(x, y)\r\n      ) {\r\n        //for (let h of this.game.levels[this.levelID].hitwarnings) {\r\n        //if (newMove instanceof HitWarning)\r\n        return;\r\n        //}\r\n      }\r\n\r\n    for (let e of this.game.levels[this.depth].rooms[this.levelID].entities) {\r\n      e.lastX = e.x;\r\n      e.lastY = e.y;\r\n      //console.log(`e.lastX, e.lastY: ${e.lastX}, ${e.lastY}`);\r\n      if (this.tryCollide(e, x, y)) {\r\n        if (e.pushable) {\r\n          // pushing a crate or barrel\r\n\r\n          let dx = x - this.x;\r\n          let dy = y - this.y;\r\n          let nextX = x + dx;\r\n          let nextY = y + dy;\r\n          let foundEnd = false; // end of the train of whatever we're pushing\r\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\r\n          let pushedEnemies = [];\r\n          while (true) {\r\n            foundEnd = true;\r\n            for (const f of this.game.levels[this.depth].rooms[this.levelID]\r\n              .entities) {\r\n              f.lastX = f.x;\r\n              f.lastY = f.y;\r\n              if (f.pointIn(nextX, nextY)) {\r\n                if (!f.chainPushable) {\r\n                  enemyEnd = true;\r\n                  foundEnd = true;\r\n                  break;\r\n                }\r\n                foundEnd = false;\r\n                pushedEnemies.push(f);\r\n                break;\r\n              }\r\n            }\r\n            if (foundEnd) break;\r\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\r\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\r\n          }\r\n          /* if no enemies and there is a wall, no move\r\n          otherwise, push everything, killing last enemy if there is a wall */\r\n          // here, (nextX, nextY) is the position immediately after the end of the train\r\n\r\n          if (\r\n            pushedEnemies.length === 0 &&\r\n            (this.game.levels[this.depth].rooms[this.levelID].roomArray[nextX][\r\n              nextY\r\n            ].canCrushEnemy() ||\r\n              enemyEnd)\r\n          ) {\r\n            if (e.destroyable) {\r\n              e.hurt(this, e.health, \"none\");\r\n              if (\r\n                this.game.levels[this.depth].rooms[this.levelID] ===\r\n                this.game.room\r\n              )\r\n                Sound.hit();\r\n              this.game.levels[this.depth].rooms[this.levelID].particles.push(\r\n                new AttackAnimation(e.x, e.y, \"warhammer\", this.direction),\r\n              );\r\n              this.shakeScreen(this.x, this.y, e.x, e.y);\r\n              //this.hitShake(this.x, this.y, e.x, e.y);\r\n\r\n              this.game.levels[this.depth].rooms[this.levelID].tick(this);\r\n              return;\r\n            }\r\n          } else {\r\n            if (\r\n              this.game.levels[this.depth].rooms[this.levelID] ===\r\n              this.game.room\r\n            )\r\n              Sound.push();\r\n            // here pushedEnemies may still be []\r\n\r\n            for (const f of pushedEnemies) {\r\n              f.lastX = f.x;\r\n              f.lastY = f.y;\r\n              f.x += dx;\r\n              f.y += dy;\r\n              f.drawX = dx;\r\n              f.drawY = dy;\r\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\r\n            }\r\n            if (\r\n              this.game.levels[this.depth].rooms[this.levelID].roomArray[nextX][\r\n                nextY\r\n              ].canCrushEnemy() ||\r\n              enemyEnd\r\n            ) {\r\n              pushedEnemies[pushedEnemies.length - 1].crush();\r\n              if (\r\n                this.game.levels[this.depth].rooms[this.levelID] ===\r\n                this.game.room\r\n              )\r\n                Sound.hit();\r\n            }\r\n\r\n            e.x += dx;\r\n            e.y += dy;\r\n            e.drawX = dx;\r\n            e.drawY = dy;\r\n            this.move(x, y);\r\n            this.moveDistance++;\r\n            this.game.levels[this.depth].rooms[this.levelID].tick(this);\r\n            return;\r\n          }\r\n        } else {\r\n          // if we're trying to hit an enemy, check if it's destroyable\r\n          if (!e.dead) {\r\n            if (e.interactable) e.interact(this);\r\n            //this.actionTab.actionState = ActionState.ATTACK;\r\n            //sets the action tab state to Attack\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let other =\r\n      this.game.levels[this.depth].rooms[this.levelID].roomArray[x][y];\r\n    if (!other.isSolid()) {\r\n      this.move(x, y);\r\n      other.onCollide(this);\r\n      if (!(other instanceof Door || other instanceof Trapdoor))\r\n        this.game.levels[this.depth].rooms[this.levelID].tick(this);\r\n    } else {\r\n      if (other instanceof Door) {\r\n        this.shakeScreen(this.x, this.y, x, y);\r\n\r\n        if (other.canUnlock(this)) other.unlock(this);\r\n      }\r\n    }\r\n  };\r\n  private updateLastPosition = (x: number, y: number) => {\r\n    this.lastX = x;\r\n    this.lastY = y;\r\n  };\r\n\r\n  //get cancelHoldMove = () => {};\r\n\r\n  wouldHurt = (x: number, y: number) => {\r\n    for (let h of this.game.levels[this.depth].rooms[this.levelID]\r\n      .hitwarnings) {\r\n      if (h instanceof HitWarning && h.x == x && h.y == y) return true;\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  hurt = (damage: number, enemy: string) => {\r\n    if (this.game.levels[this.depth].rooms[this.levelID] === this.game.room)\r\n      Sound.hurt();\r\n\r\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\r\n      this.inventory.getArmor().hurt(damage);\r\n      this.hurtingShield = true;\r\n      this.hurtShield = true;\r\n    }\r\n    {\r\n      this.lastHitBy = enemy;\r\n      //console.log(\"Last Hit by: \", enemy);\r\n      this.healthBar.hurt();\r\n      this.flashing = true;\r\n      if (!this.hurtShield) this.health -= damage;\r\n      this.hurtShield = false;\r\n      this.hurting = true;\r\n      this.hurtAlpha = 0.25;\r\n      if (this.health <= 0 && !GameConstants.DEVELOPER_MODE) {\r\n        this.dead = true;\r\n      }\r\n\r\n      /*\r\n      if (this.health <= 0) {\r\n        this.health = 0;\r\n        \r\n        if (!this.game.tutorialActive) {\r\n          this.dead = true;\r\n        } else {\r\n          this.health = 2;\r\n          this.game.pushMessage(\"You are dead, but you can try again!\");\r\n        }\r\n        */\r\n    }\r\n  };\r\n\r\n  dashMove = (x: number, y: number) => {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    for (let i of this.game.levels[this.depth].rooms[this.levelID].items) {\r\n      if (i.x === x && i.y === y) {\r\n        i.onPickup(this);\r\n      }\r\n    }\r\n\r\n    //this.game.rooms[this.levelID].updateLighting();\r\n  };\r\n\r\n  doneMoving = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\r\n  };\r\n\r\n  doneHitting = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.hitX) < EPSILON && Math.abs(this.hitY) < EPSILON;\r\n  };\r\n\r\n  enableSlowMotion = () => {\r\n    if (this.motionSpeed < 1 && !this.slowMotionEnabled) {\r\n      this.motionSpeed *= 1.08;\r\n      if (this.motionSpeed >= 1) this.motionSpeed = 1;\r\n    }\r\n    if (this.slowMotionEnabled && this.motionSpeed > 0.25) {\r\n      this.motionSpeed *= 0.95;\r\n      if (this.motionSpeed < 0.25) this.motionSpeed = 0.25;\r\n    }\r\n  };\r\n\r\n  move = (x: number, y: number) => {\r\n    this.updateLastPosition(this.x, this.y);\r\n\r\n    //this.actionTab.setState(ActionState.MOVE);\r\n    if (this.game.levels[this.depth].rooms[this.levelID] === this.game.room)\r\n      Sound.playerStoneFootstep();\r\n\r\n    if (this.openVendingMachine) this.openVendingMachine.close();\r\n\r\n    this.drawX += x - this.x;\r\n    this.drawY += y - this.y;\r\n    this.drawMoveQueue.push({\r\n      drawX: x - this.x,\r\n      drawY: y - this.y,\r\n    });\r\n\r\n    /*\r\n    if (this.drawX > 1) this.drawX = 1;\r\n    if (this.drawY > 1) this.drawY = 1;\r\n    if (this.drawX < -1) this.drawX = -1;\r\n    if (this.drawY < -1) this.drawY = -1;\r\n    */\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    for (let i of this.game.levels[this.depth].rooms[this.levelID].items) {\r\n      if (i.x === x && i.y === y) {\r\n        i.onPickup(this);\r\n      }\r\n    }\r\n    let diffX = x - this.lastX;\r\n    let diffY = y - this.lastY;\r\n    if (diffX === 0 && diffY === 0) return;\r\n\r\n    //this.game.rooms[this.levelID].updateLighting();\r\n    let roomsOnScreen = 0;\r\n    for (let room of this.game.level.rooms) {\r\n      room.roomOnScreen(this);\r\n      //console.log(\"On Screen? \" + room.onScreen + \" levelID: \" + room.id);\r\n      if (room.onScreen) roomsOnScreen++;\r\n    }\r\n    //console.log(\"Rooms On Screen Currently: \" + roomsOnScreen);\r\n  };\r\n\r\n  moveNoSmooth = (x: number, y: number) => {\r\n    // doesn't touch smoothing\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  moveSnap = (x: number, y: number) => {\r\n    // no smoothing\r\n    this.x = Math.round(x);\r\n    this.y = Math.round(y);\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.hitX = 0;\r\n    this.hitY = 0;\r\n    this.jumpY = 0;\r\n  };\r\n\r\n  update = () => {};\r\n\r\n  updateSlowMotion = () => {\r\n    if (this.slowMotionTickDuration > 0) this.slowMotionTickDuration -= 1;\r\n    if (this.slowMotionTickDuration === 0) this.slowMotionEnabled = false;\r\n  };\r\n\r\n  finishTick = () => {\r\n    this.turnCount += 1;\r\n    this.inventory.tick();\r\n\r\n    this.flashing = false;\r\n\r\n    let totalHealthDiff = this.health - this.lastTickHealth;\r\n    this.lastTickHealth = this.health; // update last tick health\r\n    if (totalHealthDiff < 0) {\r\n      this.flashing = true;\r\n    }\r\n    this.moveDistance = 0;\r\n\r\n    //this.actionTab.actionState = ActionState.READY;\r\n    //Sets the action tab state to Wait (during enemy turn)\r\n  };\r\n\r\n  /**\r\n   * Draws the player sprite to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawPlayerSprite = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    Game.drawMob(\r\n      1 + Math.floor(this.frame),\r\n      8 + this.direction * 2,\r\n      1,\r\n      2,\r\n      this.x - this.drawX - this.hitX,\r\n      this.y - 1.45 - this.drawY - this.jumpY - this.hitY,\r\n      1,\r\n      2,\r\n      this.shadeColor(),\r\n    );\r\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\r\n      // TODO draw armor\r\n    }\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  shadeColor = () => {\r\n    if (!GameConstants.CUSTOM_SHADER_COLOR_ENABLED) {\r\n      return \"black\";\r\n    } else {\r\n      return Utils.rgbToHex(\r\n        this.game.levels[this.depth].rooms[this.levelID].col[this.x][this.y][0],\r\n        this.game.levels[this.depth].rooms[this.levelID].col[this.x][this.y][1],\r\n        this.game.levels[this.depth].rooms[this.levelID].col[this.x][this.y][2],\r\n      );\r\n    }\r\n  };\r\n\r\n  heal = (amount: number) => {\r\n    this.health += amount;\r\n    if (this.health > this.maxHealth) this.health = this.maxHealth;\r\n  };\r\n\r\n  drawSpellBeam = (delta: number) => {\r\n    Game.ctx.save();\r\n    // Clear existing beam effects each frame\r\n    this.game.levels[this.depth].rooms[this.levelID].beamEffects = [];\r\n\r\n    if (this.inventory.getWeapon() instanceof Spellbook) {\r\n      const spellbook = this.inventory.getWeapon() as Spellbook;\r\n      if (spellbook.isTargeting) {\r\n        let targets = spellbook.targets;\r\n        for (let target of targets) {\r\n          // Create a new beam effect from the player to the enemy\r\n          this.game.levels[this.depth].rooms[this.levelID].addBeamEffect(\r\n            this.x - this.drawX,\r\n            this.y - this.drawY,\r\n            target.x - target.drawX,\r\n            target.y - target.drawY,\r\n            target,\r\n          );\r\n\r\n          // Retrieve the newly added beam effect\r\n          const beam =\r\n            this.game.levels[this.depth].rooms[this.levelID].beamEffects[\r\n              this.game.levels[this.depth].rooms[this.levelID].beamEffects\r\n                .length - 1\r\n            ];\r\n\r\n          // Render the beam\r\n          beam.render(\r\n            this.x - this.drawX,\r\n            this.y - this.drawY,\r\n            target.x - target.drawX,\r\n            target.y - target.drawY,\r\n            \"cyan\",\r\n            2,\r\n            delta,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    this.updateDrawXY(delta);\r\n    this.drawableY = this.y;\r\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\r\n    if (!this.dead) {\r\n      Game.drawMob(0, 0, 1, 1, this.x - this.drawX, this.y - this.drawY, 1, 1);\r\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\r\n        this.drawPlayerSprite(delta);\r\n      }\r\n    }\r\n    this.drawSpellBeam(delta);\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  faceMouse = () => {\r\n    const mousePosition = MouseCursor.getInstance().getPosition();\r\n    const playerPixelPosition = {\r\n      x: GameConstants.WIDTH / 2,\r\n      y: GameConstants.HEIGHT / 2,\r\n    };\r\n    const dx = mousePosition.x - playerPixelPosition.x;\r\n    const dy = mousePosition.y - playerPixelPosition.y;\r\n    const angle = Math.atan2(dy, dx);\r\n\r\n    // Convert angle to direction\r\n    // atan2 returns angle in radians (-π to π)\r\n    // Divide the circle into 4 sectors for the 4 directions\r\n    if (angle >= -Math.PI / 4 && angle < Math.PI / 4) {\r\n      this.direction = Direction.RIGHT;\r\n    } else if (angle >= Math.PI / 4 && angle < (3 * Math.PI) / 4) {\r\n      this.direction = Direction.DOWN;\r\n    } else if (angle >= (-3 * Math.PI) / 4 && angle < -Math.PI / 4) {\r\n      this.direction = Direction.UP;\r\n    } else {\r\n      this.direction = Direction.LEFT;\r\n    }\r\n  };\r\n\r\n  heartbeat = () => {\r\n    this.guiHeartFrame = 1;\r\n  };\r\n\r\n  tapHoldHandler = () => {\r\n    this.mapToggled = !this.mapToggled;\r\n  };\r\n\r\n  /**\r\n   * Draws the top layer elements, such as the health bar.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x - this.drawX,\r\n      this.y - this.drawY,\r\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0,\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawGUI = (delta: number, transitioning: boolean = false) => {\r\n    Game.ctx.save();\r\n    if (!this.dead) {\r\n      if (!transitioning) this.inventory.draw(delta);\r\n      if (this.bestiary) this.bestiary.draw(delta);\r\n      //this.actionTab.draw(delta);\r\n\r\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\r\n      if (this.guiHeartFrame > 5) {\r\n        this.guiHeartFrame = 0;\r\n      }\r\n      for (let i = 0; i < this.maxHealth; i++) {\r\n        let shake = 0;\r\n        let shakeY = 0;\r\n        if (this.health <= 1) {\r\n          shake =\r\n            Math.round(Math.sin(Date.now() / 25 / (i + 1)) + i / 2) /\r\n            2 /\r\n            GameConstants.TILESIZE;\r\n          shakeY =\r\n            Math.round(Math.sin(Date.now() / 25 / (i + 2)) + i / 2) /\r\n            2 /\r\n            GameConstants.TILESIZE;\r\n        }\r\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\r\n        let offsetY = GameConstants.WIDTH > 155 ? 0 : -1.25;\r\n\r\n        if (i >= Math.floor(this.health)) {\r\n          if (i == Math.floor(this.health) && (this.health * 2) % 2 == 1) {\r\n            // draw half heart\r\n            Game.drawFX(\r\n              4,\r\n              2,\r\n              0.75,\r\n              0.75,\r\n              i / 1.5 + shake + 0.25,\r\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n                1 +\r\n                shakeY +\r\n                offsetY,\r\n              0.75,\r\n              0.75,\r\n            );\r\n          } else {\r\n            Game.drawFX(\r\n              3,\r\n              2,\r\n              0.75,\r\n              0.75,\r\n              i / 1.5 + shake + 0.25,\r\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n                1 +\r\n                shakeY +\r\n                offsetY,\r\n              0.75,\r\n              0.75,\r\n            );\r\n          }\r\n        } else {\r\n          Game.drawFX(\r\n            frame,\r\n            2,\r\n            0.75,\r\n            0.75,\r\n            i / 1.5 + shake + 0.25,\r\n            GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n              1 +\r\n              shakeY +\r\n              offsetY,\r\n            0.75,\r\n            0.75,\r\n          );\r\n        }\r\n      }\r\n      if (this.inventory.getArmor())\r\n        this.inventory.getArmor().drawGUI(delta, this.maxHealth);\r\n    } else {\r\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n      const enemies = statsTracker.getStats().enemies;\r\n      // Count the occurrences of each enemy\r\n      const enemyCounts = enemies.reduce(\r\n        (acc, enemy) => {\r\n          acc[enemy] = (acc[enemy] || 0) + 1;\r\n          return acc;\r\n        },\r\n        {} as Record<string, number>,\r\n      );\r\n\r\n      // Create individual lines\r\n      const lines: string[] = [];\r\n\r\n      // Line 1: Game Over or slain by\r\n      if (this.lastHitBy !== \"enemy\") {\r\n        lines.push(`You were slain by ${this.lastHitBy}.`);\r\n      } else {\r\n        lines.push(\"Game Over\");\r\n      }\r\n\r\n      lines.push(\r\n        `Depth reached: ${this.game.levels[this.depth].rooms[this.levelID].depth}`,\r\n      );\r\n\r\n      // Line 2: Enemies killed\r\n      lines.push(\r\n        `${Object.values(enemyCounts).reduce(\r\n          (a, b) => a + b,\r\n          0,\r\n        )} enemies killed in total:`,\r\n      );\r\n\r\n      // Subsequent lines: Each enemy count\r\n      Object.entries(enemyCounts).forEach(([enemy, count]) => {\r\n        lines.push(`${enemy} x${count}`);\r\n      });\r\n\r\n      // Line after enemy counts: Restart instruction\r\n      const restartButton = \"Press space or click to restart\";\r\n\r\n      // Calculate total height based on number of lines\r\n      const lineHeight = Game.letter_height + 2; // Adjust spacing as needed\r\n      const totalHeight = lines.length * lineHeight + lineHeight; // Additional space for restart button\r\n\r\n      // Starting Y position to center the text block\r\n      let startY = GameConstants.HEIGHT / 2 - totalHeight / 2;\r\n\r\n      // Draw each line centered horizontally\r\n      lines.forEach((line, index) => {\r\n        const textWidth = Game.measureText(line).width;\r\n        const spacing =\r\n          index === 0 || index === 1 || index === lines.length - 1\r\n            ? lineHeight * 1.5\r\n            : lineHeight;\r\n        Game.fillText(line, GameConstants.WIDTH / 2 - textWidth / 2, startY);\r\n        startY += spacing;\r\n      });\r\n\r\n      // Draw the restart button\r\n      const restartTextWidth = Game.measureText(restartButton).width;\r\n      Game.fillText(\r\n        restartButton,\r\n        GameConstants.WIDTH / 2 - restartTextWidth / 2,\r\n        startY,\r\n      );\r\n    }\r\n    PostProcessor.draw(delta);\r\n    if (this.hurting) this.drawHurt(delta);\r\n\r\n    if (this.mapToggled === true) this.map.draw(delta);\r\n    //this.drawTileCursor(delta);\r\n    //this.drawInventoryButton(delta);\r\n    if (this.menu.open) this.menu.drawMenu();\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawHurt = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n    Game.ctx.globalAlpha = this.hurtAlpha;\r\n    this.hurtAlpha -= (this.hurtAlpha / 10) * delta;\r\n    if (this.hurtAlpha <= 0.01) {\r\n      this.hurtAlpha = 0;\r\n      this.hurting = false;\r\n      this.hurtingShield = false;\r\n    }\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    Game.ctx.fillStyle = \"#cc3333\"; // bright but not fully saturated red\r\n    if (this.hurtingShield) {\r\n      Game.ctx.fillStyle = \"#639bff\"; // bright but not fully saturated blue\r\n    }\r\n\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawLowHealth = (delta: number) => {\r\n    Game.ctx.save();\r\n    //unused\r\n    if (this.health <= 1 && !this.dead) {\r\n      // Calculate pulsating alpha for the vignette effect\r\n      const lowHealthAlpha = 0.5; //Math.sin(this.lowHealthFrame / 10) * 0.5 + 0.5;\r\n      Game.ctx.globalAlpha = lowHealthAlpha;\r\n      this.lowHealthFrame += delta;\r\n\r\n      const gradientBottom = Game.ctx.createLinearGradient(\r\n        0,\r\n        GameConstants.HEIGHT,\r\n        0,\r\n        (GameConstants.HEIGHT * 2) / 3,\r\n      );\r\n\r\n      // Define gradient color stops\r\n      [gradientBottom].forEach((gradient) => {\r\n        gradient.addColorStop(0, \"#cc3333\"); // Solid red at edges\r\n        gradient.addColorStop(1, \"rgba(0, 0, 0, 0)\"); // Transparent toward center\r\n      });\r\n\r\n      // Draw the gradients\r\n      Game.ctx.globalCompositeOperation = \"source-over\";\r\n\r\n      Game.ctx.fillStyle = gradientBottom;\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      // Reset composite operation and alpha\r\n      Game.ctx.globalCompositeOperation = \"source-over\";\r\n      Game.ctx.globalAlpha = 1.0;\r\n    } else {\r\n      this.lowHealthFrame = 0;\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    if (!this.doneMoving()) {\r\n      /*\r\n      for (let i = 0; i < this.drawMoveQueue.length; i++) {\r\n        let prevX = 0;\r\n        let prevY = 0;\r\n        if (this.drawMoveQueue.length > 1) {\r\n          prevX = this.drawMoveQueue[i - 1]?.drawX;\r\n          prevY = this.drawMoveQueue[i - 1]?.drawY;\r\n        }\r\n        //let threshold = (1 - i / this.drawMoveQueue.length) / 2;\r\n        const speed = (i + 1) / (this.drawMoveQueue.length * 20);\r\n        if (Math.abs(this.drawMoveQueue[i].drawX) > 0) {\r\n          this.drawMoveQueue[i].drawX *=\r\n            0.99 -\r\n            Math.abs(Math.sin(this.drawMoveQueue[i].drawX * Math.PI)) / 10 -\r\n            speed ** delta;\r\n        } else if (Math.abs(this.drawMoveQueue[i].drawX) < 0.01) {\r\n          this.drawMoveQueue[i].drawX = 0;\r\n        }\r\n        if (Math.abs(this.drawMoveQueue[i].drawY) > 0) {\r\n          this.drawMoveQueue[i].drawY *=\r\n            0.99 -\r\n            Math.abs(Math.sin(this.drawMoveQueue[i].drawX * Math.PI)) / 10 -\r\n            speed ** delta;\r\n        } else if (Math.abs(this.drawMoveQueue[i].drawY) < 0.01) {\r\n          this.drawMoveQueue[i].drawY = 0;\r\n        }\r\n\r\n        this.drawMoveQueue[i].drawX = Math.min(\r\n          Math.max(this.drawMoveQueue[i].drawX, -1),\r\n          1,\r\n        );\r\n        this.drawMoveQueue[i].drawY = Math.min(\r\n          Math.max(this.drawMoveQueue[i].drawY, -1),\r\n          1,\r\n        );\r\n      }\r\n\r\n      let sumX = 0;\r\n      let sumY = 0;\r\n      this.drawMoveQueue.forEach((move) => {\r\n        sumX += move.drawX;\r\n        sumY += move.drawY;\r\n      });\r\n      \r\n      this.drawX = sumX;\r\n      this.drawY = sumY;\r\n      if (\r\n        Math.abs(this.drawMoveQueue[0].drawX) < 0.01 &&\r\n        Math.abs(this.drawMoveQueue[0].drawY) < 0.01\r\n      )\r\n        this.drawMoveQueue.shift();\r\n        \r\n        */\r\n\r\n      this.drawX *= 0.85 ** delta;\r\n\r\n      this.drawY *= 0.85 ** delta;\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n    }\r\n    if (this.doneHitting()) {\r\n      this.jump(delta);\r\n    }\r\n\r\n    if (!this.doneHitting()) {\r\n      this.updateHitXY(delta);\r\n    }\r\n\r\n    this.enableSlowMotion();\r\n    GameConstants.ANIMATION_SPEED = this.motionSpeed;\r\n  };\r\n\r\n  updateHitXY = (delta: number) => {\r\n    const hitX = this.hitX - this.hitX * 0.3;\r\n    const hitY = this.hitY - this.hitY * 0.3;\r\n    this.hitX = Math.min(Math.max(hitX, -1), 1);\r\n    this.hitY = Math.min(Math.max(hitY, -1), 1);\r\n    if (Math.abs(hitX) < 0.01) this.hitX = 0;\r\n    if (Math.abs(hitY) < 0.01) this.hitY = 0;\r\n  };\r\n\r\n  hitShake = (\r\n    playerX: number,\r\n    playerY: number,\r\n    otherX: number,\r\n    otherY: number,\r\n  ) => {\r\n    const range = GameConstants.TILESIZE;\r\n    this.hitX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\r\n    this.hitY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\r\n  };\r\n\r\n  shakeScreen = (\r\n    playerX: number,\r\n    playerY: number,\r\n    otherX: number,\r\n    otherY: number,\r\n    shakeStrength: number = 10,\r\n  ) => {\r\n    const range = GameConstants.TILESIZE;\r\n    this.hitX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\r\n    this.hitY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\r\n\r\n    this.game.shakeScreen(\r\n      -this.hitX * 1 * shakeStrength,\r\n      -this.hitY * 1 * shakeStrength,\r\n    );\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    this.jumpY = Math.abs(Math.sin(j * Math.PI) * this.jumpHeight);\r\n    if (Math.abs(this.jumpY) < 0.01) this.jumpY = 0;\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n\r\n  /**\r\n   * Draws the tile cursor to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawTileCursor = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    const inRange = this.moveRangeCheck(\r\n      this.mouseToTile().x,\r\n      this.mouseToTile().y,\r\n    );\r\n    let tileX = inRange ? 22 : 24;\r\n\r\n    Game.drawFX(\r\n      tileX + Math.floor(HitWarning.frame),\r\n      4,\r\n      1,\r\n      2,\r\n      this.tileCursor.x,\r\n      this.tileCursor.y - 1,\r\n      1,\r\n      2,\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  private queueHandler = () => {\r\n    //      console.log(\"Queue handler running, queue length:\", this.moveQueue.length);\r\n    //console.log(\"Is processing queue:\", this.isProcessingQueue);\r\n\r\n    if (!this.isProcessingQueue) {\r\n      return;\r\n    }\r\n\r\n    const currentTime = Date.now();\r\n    const timeSinceLastMove = currentTime - this.lastMoveTime;\r\n    //console.log(\"Time since last move:\", timeSinceLastMove);\r\n\r\n    if (currentTime - this.lastMoveTime >= GameConstants.MOVEMENT_COOLDOWN) {\r\n      if (this.moveQueue.length > 0) {\r\n        const { x, y, direction } = this.moveQueue.shift();\r\n        //console.log(\"Processing move to:\", x, y);\r\n        this.handleMoveLoop({ x, y, direction });\r\n        this.lastMoveTime = currentTime;\r\n      } else {\r\n        //console.log(\"Queue empty, stopping processing\");\r\n        this.stopQueueProcessing();\r\n      }\r\n    } else {\r\n      //console.log(\r\n      //  \"Waiting for cooldown, remaining time:\",\r\n      //  GameConstants.MOVEMENT_COOLDOWN - timeSinceLastMove\r\n      //);\r\n    }\r\n\r\n    this.animationFrameId = requestAnimationFrame(this.queueHandler);\r\n    //console.log(\"Next animation frame requested:\", this.animationFrameId);\r\n  };\r\n\r\n  private startQueueProcessing = () => {\r\n    //console.log(\"Attempting to start queue processing\");\r\n    //console.log(\r\n    //  \"Current state - isProcessing:\",\r\n    //  this.isProcessingQueue,\r\n    //  \"animationFrameId:\",\r\n    //  this.animationFrameId\r\n    //);\r\n\r\n    if (!this.isProcessingQueue) {\r\n      //console.log(\"Starting queue processing\");\r\n      this.isProcessingQueue = true;\r\n      this.animationFrameId = requestAnimationFrame(this.queueHandler);\r\n      //console.log(\"Animation frame requested:\", this.animationFrameId);\r\n    } else {\r\n      //console.log(\"Queue processing already running\");\r\n    }\r\n  };\r\n\r\n  private stopQueueProcessing = () => {\r\n    //console.log(\"Stopping queue processing\");\r\n    //console.log(\r\n    //  \"Current state - isProcessing:\",\r\n    //  this.isProcessingQueue,\r\n    //  \"animationFrameId:\",\r\n    //  this.animationFrameId\r\n    //);\r\n\r\n    this.isProcessingQueue = false;\r\n    if (this.animationFrameId !== null) {\r\n      //console.log(\"Canceling animation frame:\", this.animationFrameId);\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n  };\r\n\r\n  handleMoveLoop = ({\r\n    x,\r\n    y,\r\n    direction,\r\n  }: {\r\n    x: number;\r\n    y: number;\r\n    direction: Direction;\r\n  }) => {\r\n    switch (direction) {\r\n      case Direction.RIGHT:\r\n        this.right();\r\n        break;\r\n      case Direction.LEFT:\r\n        this.left();\r\n        break;\r\n      case Direction.DOWN:\r\n        this.down();\r\n        break;\r\n      case Direction.UP:\r\n        this.up();\r\n        break;\r\n    }\r\n  };\r\n\r\n  queueMove = (x: number, y: number, direction: Direction) => {\r\n    if (!x || !y || this.moveQueue.length > 0) return;\r\n\r\n    //console.log(\"Queueing move to:\", x, y);\r\n    //console.log(\"Current queue length:\", this.moveQueue.length);\r\n    const move = { x, y, direction };\r\n\r\n    this.moveQueue.push(move);\r\n    this.startQueueProcessing();\r\n    //console.log(\"Queue length after push:\", this.moveQueue.length);\r\n  };\r\n\r\n  private canMove(): boolean {\r\n    const currentTime = Date.now();\r\n    if (\r\n      currentTime - this.lastMoveTime >=\r\n      GameConstants.MOVEMENT_COOLDOWN - this.moveQueue.length * 25\r\n    ) {\r\n      this.lastMoveTime = currentTime;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Game } from \"./game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\n\r\nexport class PostProcessor {\r\n  static draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = 0.15;\r\n    Game.ctx.globalCompositeOperation = \"screen\";\r\n    // GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation; //\"soft-light\";\r\n\r\n    Game.ctx.fillStyle = \"#006A6E\"; //dark teal\r\n    //Game.ctx.fillStyle = \"#003B6F\"; //deep underwater blue\r\n    //Game.ctx.fillStyle = \"#2F2F2F\"; //smoky fog prison\r\n\r\n    //Game.ctx.fillStyle = \"#4a6c4b\"; //darker muddy green\r\n    //Game.ctx.fillStyle = \"#800000\"; // lighter red for dungeon hell theme\r\n\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { Player } from \"../player\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LightSource } from \"../lightSource\";\r\nimport { Lighting } from \"../lighting\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { BeamEffect } from \"../beamEffect\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\n\r\nexport class EnemyShield extends Projectile {\r\n  frame: number;\r\n  parent: Entity;\r\n  tileX: number;\r\n  tileY: number;\r\n  health: number;\r\n\r\n  constructor(parent: Entity, x: number, y: number, health: number = 1) {\r\n    super(parent, x, y);\r\n    this.parent = parent;\r\n    this.frame = 0;\r\n    this.health = health;\r\n    this.parent.shielded = true;\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [20, 0, 40],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.parent.addLightSource(this.lightSource);\r\n    this.parent.room.projectiles.push(this);\r\n    this.parent.room.updateLighting();\r\n  }\r\n\r\n  remove = () => {\r\n    this.parent.shielded = false;\r\n    this.parent.removeLightSource(this.lightSource);\r\n    this.parent.room.projectiles = this.parent.room.projectiles.filter(\r\n      (projectile) => projectile !== this,\r\n    );\r\n\r\n    let beam = this.parent.room.projectiles.find(\r\n      (projectile) =>\r\n        projectile instanceof BeamEffect && projectile.parent === this.parent,\r\n    );\r\n    if (beam) {\r\n      beam.dead = true;\r\n    }\r\n    this.parent.shadeColor = \"black\";\r\n    this.lightSource = null;\r\n    this.parent.shield = null;\r\n  };\r\n\r\n  updateLightSourcePos = () => {\r\n    if (this.lightSource === null) return;\r\n    let index = this.parent.room.lightSources.indexOf(this.lightSource);\r\n    this.parent.room.lightSources[index].x = this.parent.x + 0.5;\r\n    this.parent.room.lightSources[index].y = this.parent.y + 0.5;\r\n    this.parent.room.updateLighting();\r\n  };\r\n\r\n  hurt = (damage: number) => {\r\n    const damageOverShield = Math.max(0, damage - this.health);\r\n    this.health -= damage;\r\n    /*\r\n    GenericParticle.spawnCluster(\r\n      this.parent.room,\r\n      this.parent.x + 0.5,\r\n      this.parent.y + 0.5,\r\n      \"#fbf236\",\r\n    );\r\n    */\r\n\r\n    if (this.health <= 0) {\r\n      this.remove();\r\n    }\r\n    return damageOverShield;\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.parent.dead) {\r\n      this.remove();\r\n    }\r\n    if (this.dead) {\r\n      this.parent.room.projectiles = this.parent.room.projectiles.filter(\r\n        (projectile) => projectile !== this,\r\n      );\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = 1;\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n\r\n    this.drawableY = this.parent.drawableY - 0.05;\r\n    Game.ctx.globalCompositeOperation = \"difference\";\r\n    if (this.parent.shielded) {\r\n      Game.drawFX(\r\n        18 + Math.floor(this.frame),\r\n        9,\r\n        1,\r\n        1,\r\n        this.parent.x - this.parent.drawX,\r\n        this.parent.y - this.parent.drawY,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Room } from \"../room\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\nimport { Sound } from \"../sound\";\r\nimport { HitWarning } from \"../hitWarning\";\r\n\r\nexport class EnemySpawnAnimation extends Projectile {\r\n  readonly ANIM_COUNT = 3;\r\n\r\n  room: Room;\r\n  enemy: Entity;\r\n  frame: number;\r\n\r\n  constructor(room: Room, enemy: Entity, x: number, y: number) {\r\n    super(enemy, x, y);\r\n    this.room = room;\r\n    this.enemy = enemy;\r\n    this.frame = 0;\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.room === this.room.game.room) Sound.enemySpawn();\r\n\r\n    let hitPlayer = false;\r\n    for (const i in this.room.game.players) {\r\n      if (\r\n        this.room.game.players[i].x === this.x &&\r\n        this.room.game.players[i].y === this.y\r\n      ) {\r\n        this.room.game.players[i].hurt(0.5, \"reaper\");\r\n        hitPlayer = true;\r\n      }\r\n    }\r\n    if (!hitPlayer) {\r\n      this.dead = true;\r\n      this.enemy.skipNextTurns = 1;\r\n      this.room.entities.push(this.enemy);\r\n      GenericParticle.spawnCluster(\r\n        this.room,\r\n        this.x + 0.5,\r\n        this.y + 0.5,\r\n        \"#ffffff\",\r\n      );\r\n      GenericParticle.spawnCluster(\r\n        this.room,\r\n        this.x + 0.5,\r\n        this.y + 0.5,\r\n        \"#ffffff\",\r\n      );\r\n    } else {\r\n      this.room.hitwarnings.push(\r\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y),\r\n      );\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n\r\n    this.frame += 0.25 * delta;\r\n    if (this.frame >= 8) this.frame = 0;\r\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\r\n      let offsetX = 0;\r\n      Game.drawFX(\r\n        Math.floor(this.frame),\r\n        27,\r\n        1,\r\n        1,\r\n        this.x + Math.round(offsetX) / 16.0,\r\n        this.y - 0.5,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n    if (Math.floor(this.frame * 4) % 2 == 0)\r\n      this.room.particles.push(\r\n        new GenericParticle(\r\n          this.room,\r\n          this.x + 0.5 + Math.random() * 0.05 - 0.025,\r\n          this.y + Math.random() * 0.05 - 0.025,\r\n          0.25,\r\n          Math.random() * 0.5,\r\n          0.025 * (Math.random() * 1 - 0.5),\r\n          0.025 * (Math.random() * 1 - 0.5),\r\n          0.2 * (Math.random() - 1),\r\n          \"#ffffff\",\r\n          0,\r\n        ),\r\n      );\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Lighting } from \"../lighting\";\r\nimport { Utils } from \"../utils\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Bomb } from \"../entity/object/bomb\";\r\nexport class Explosion extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  delay: number;\r\n  parent: Entity;\r\n  offsetFrame: number;\r\n\r\n  constructor(entity: Entity, x: number, y: number, playerHitBy: Player) {\r\n    super(entity, x, y);\r\n    this.state = 0;\r\n    this.frame = 6;\r\n    this.parent = entity;\r\n    this.offsetFrame =\r\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 100;\r\n    this.delay = 0;\r\n    Lighting.momentaryLight(\r\n      this.parent.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      0.5,\r\n      [255, 100, 0],\r\n      350,\r\n      20,\r\n      Math.abs(this.offsetFrame),\r\n    );\r\n    const distance = Utils.distance(\r\n      this.parent.x,\r\n      this.parent.y,\r\n      this.x,\r\n      this.y,\r\n    );\r\n\r\n    let damage =\r\n      distance === 0 ? 1 : Math.max(0.5, Math.floor((1 / distance) * 4) / 2);\r\n    console.log(\"damage:\", damage);\r\n    for (let entity of this.parent.room.entities) {\r\n      if (\r\n        entity.x === this.x &&\r\n        entity.y === this.y &&\r\n        entity !== this.parent\r\n      ) {\r\n        if (entity instanceof Bomb) {\r\n          entity.fuseLength = 1;\r\n        }\r\n        entity.hurt(playerHitBy, damage);\r\n\r\n        console.log(playerHitBy);\r\n      }\r\n      if (playerHitBy.x === this.x && playerHitBy.y === this.y) {\r\n        playerHitBy.hurt(damage, \"bomb\");\r\n      }\r\n    }\r\n  }\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\r\n    if (this.offsetFrame >= 0) {\r\n      this.frame += 0.25 * delta;\r\n    }\r\n\r\n    if (this.frame > 17) this.dead = true;\r\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Lighting } from \"../lighting\";\r\nimport { Utils } from \"../utils\";\r\nexport class PlayerFireball extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  delay: number;\r\n  parent: Player;\r\n  offsetFrame: number;\r\n\r\n  constructor(parent: Player, x: number, y: number) {\r\n    super(parent, x, y);\r\n    this.state = 0;\r\n    this.frame = 6;\r\n    this.offsetFrame =\r\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 50;\r\n    this.delay = 0;\r\n    Lighting.momentaryLight(\r\n      this.parent.game.rooms[this.parent.levelID],\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      0.5,\r\n      [255, 100, 0],\r\n      250,\r\n      10,\r\n      1,\r\n    );\r\n  }\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\r\n    if (this.offsetFrame >= 0) {\r\n      this.frame += 0.25 * delta;\r\n    }\r\n\r\n    if (this.frame > 17) this.dead = true;\r\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n  };\r\n}\r\n","import { Player } from \"../player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Drawable } from \"../drawable\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Direction } from \"../game\";\r\nimport { LightSource } from \"../lightSource\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\n\r\nexport class Projectile extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  parent: Entity | Player;\r\n  dir: Direction;\r\n  lightSource: LightSource;\r\n\r\n  constructor(parent: Entity | Player, x: number, y: number) {\r\n    super();\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.parent = parent;\r\n    this.drawableY = y;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"#00BFFF\";\r\n  }\r\n\r\n  get distanceToParent() {\r\n    return Math.abs(this.x - this.parent.x) + Math.abs(this.y - this.parent.y);\r\n  }\r\n\r\n  setTarget(x: number, y: number, x2: number, y2: number) {}\r\n\r\n  hitPlayer = (player: Player) => {};\r\n  hitEnemy = (enemy: Entity) => {};\r\n\r\n  tick = () => {};\r\n  draw = (delta: number) => {};\r\n  drawTopLayer = (delta: number) => {};\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player\";\r\nimport { HitWarning } from \"../hitWarning\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LightSource } from \"../lightSource\";\r\nimport { Lighting } from \"../lighting\";\r\n\r\nexport class WizardFireball extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  parent: WizardEnemy;\r\n  delay: number;\r\n  frameOffset: number;\r\n  offsetX: number;\r\n  hitWarning: HitWarning;\r\n  tileX: number;\r\n  tileY: number;\r\n\r\n  constructor(parent: WizardEnemy, x: number, y: number) {\r\n    super(parent, x, y);\r\n    this.tileY = parent.name === \"wizard bomber\" ? 7 : 8;\r\n    this.parent = parent;\r\n    this.frame = 0;\r\n    this.state = 0; // this.distanceToParent;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      4,\r\n      (parent as WizardEnemy).projectileColor,\r\n      0.1,\r\n    );\r\n    this.parent.addLightSource(this.lightSource);\r\n    //this.parent.room.updateLighting();\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#00BFFF\";\r\n    this.bloomAlpha = 0.5;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n  setMarkerFrame = () => {\r\n    // Calculate offsetX based on direction\r\n    this.offsetX = Math.floor(((this.dir + 1) % 8) / 2);\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.parent.dead || this.state === 3) {\r\n      this.parent.removeLightSource(this.lightSource);\r\n      this.dead = true;\r\n    }\r\n\r\n    if (!this.dead && this.state === 0) {\r\n      this.bloomAlpha = 1;\r\n    }\r\n\r\n    this.state++;\r\n    if (!this.dead && this.state === 1) {\r\n      this.bloomAlpha = 0.5;\r\n\r\n      const lightSource = this.parent.room.lightSources.find(\r\n        (ls) => ls === this.lightSource,\r\n      );\r\n      lightSource.b = 0.4;\r\n      this.parent.room.hitwarnings.push(\r\n        new HitWarning(\r\n          this.parent.game,\r\n          this.x,\r\n          this.y,\r\n          this.parent.x,\r\n          this.parent.y,\r\n          true,\r\n        ),\r\n      );\r\n    }\r\n    if (!this.dead && this.state === 2) {\r\n      this.bloomAlpha = 0;\r\n      Lighting.momentaryLight(\r\n        this.parent.room,\r\n        this.x,\r\n        this.y,\r\n        3,\r\n        (this.parent as WizardEnemy).projectileColor,\r\n        500,\r\n        5,\r\n        350,\r\n      );\r\n      this.parent.removeLightSource(this.lightSource);\r\n      this.frame = 0;\r\n      this.delay = Game.rand(0, 10, Math.random);\r\n    }\r\n  };\r\n\r\n  hitPlayer = (player: Player) => {\r\n    if (!this.dead && this.state === 2) {\r\n      player.hurt(1, this.parent.name);\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    /*Game.drawFX(\r\n      18 + this.offsetX, //+ Math.floor(HitWarning.frame),\r\n      4,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1\r\n    );*/\r\n\r\n    if (this.state >= 0) {\r\n      if (this.state === 0) {\r\n        this.frame += 0.25 * delta;\r\n        if (this.frame >= 4) this.frame = 0;\r\n        Game.drawFX(\r\n          22 + Math.floor(this.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y,\r\n          1,\r\n          1,\r\n        );\r\n      } else if (this.state === 1) {\r\n        this.frame += 0.25 * delta;\r\n        if (this.frame >= 4) this.frame = 0;\r\n        Game.drawFX(\r\n          18 + Math.floor(this.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - 0.2,\r\n          1,\r\n          1,\r\n        );\r\n      } else {\r\n        if (this.delay > 0) {\r\n          this.delay--;\r\n          return;\r\n        }\r\n        this.frame += 0.3 * delta;\r\n        if (this.frame > 17) this.dead = true;\r\n        Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n      }\r\n    }\r\n  };\r\n}\r\n","export class Random {\n  static state: number;\n\n  static setState = (state: number) => {\n    Random.state = state;\n  };\n\n  static rand = () => {\n    Random.state ^= Random.state << 21;\n    Random.state ^= Random.state >>> 35;\n    Random.state ^= Random.state << 4;\n    return (Random.state >>> 0) / 4294967296;\n  };\n}\n\n// copy and paste into browser console\n// let state;\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }\n","import { Game } from \"./game\";\r\nimport { Sound } from \"./sound\";\r\n\r\nexport class ReverbEngine {\r\n  private static audioContext: AudioContext;\r\n  private static convolver: ConvolverNode;\r\n  private static reverbBuffer: AudioBuffer | null = null;\r\n  private static mediaSources: WeakMap<\r\n    HTMLAudioElement,\r\n    MediaElementAudioSourceNode\r\n  > = new WeakMap();\r\n  static initialized: boolean = false;\r\n\r\n  // Initialize the AudioContext and ConvolverNode\r\n  public static async initialize() {\r\n    if (ReverbEngine.initialized) return;\r\n    let canInitialize = false;\r\n\r\n    if (!Game.inputReceived) {\r\n      console.time(\"initializeReverb\");\r\n      try {\r\n        await new Promise<void>((resolve) => {\r\n          const checkInput = () => {\r\n            if (Game.inputReceived) {\r\n              resolve();\r\n              canInitialize = true;\r\n              console.timeEnd(\"initializeReverb\");\r\n            } else {\r\n              requestAnimationFrame(checkInput);\r\n            }\r\n          };\r\n          checkInput();\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Failed to initialize ReverbEngine:\", error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !ReverbEngine.audioContext &&\r\n      !ReverbEngine.initialized &&\r\n      canInitialize\r\n    ) {\r\n      ReverbEngine.audioContext = new (window.AudioContext ||\r\n        (window as any).webkitAudioContext)();\r\n      ReverbEngine.convolver = ReverbEngine.audioContext.createConvolver();\r\n      ReverbEngine.convolver.connect(ReverbEngine.audioContext.destination);\r\n      await ReverbEngine.loadReverbBuffer(`res/SFX/impulses/small.mp3`);\r\n      ReverbEngine.setDefaultReverb();\r\n      ReverbEngine.initialized = true;\r\n      if (Sound.initialized) Sound.audioMuted = false;\r\n    }\r\n  }\r\n\r\n  // Load a specified impulse response\r\n  private static async loadReverbBuffer(filePath: string) {\r\n    try {\r\n      const response = await fetch(filePath);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      ReverbEngine.reverbBuffer =\r\n        await ReverbEngine.audioContext.decodeAudioData(arrayBuffer);\r\n    } catch (error) {\r\n      console.error(\"Error loading reverb buffer:\", error);\r\n    }\r\n  }\r\n\r\n  // Set the default reverb buffer\r\n  private static setDefaultReverb() {\r\n    if (ReverbEngine.reverbBuffer) {\r\n      ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the reverb characteristics by specifying an impulse response file.\r\n   * @param filePath - The path to the impulse response file.\r\n   */\r\n  public static async setReverbImpulse(filePath: string): Promise<void> {\r\n    if (!ReverbEngine.initialized) return;\r\n    try {\r\n      await ReverbEngine.loadReverbBuffer(filePath);\r\n      if (ReverbEngine.reverbBuffer) {\r\n        ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error setting reverb impulse:\", error);\r\n    }\r\n  }\r\n\r\n  // Apply reverb to a given HTMLAudioElement\r\n  public static async applyReverb(audioElement: HTMLAudioElement) {\r\n    await ReverbEngine.initialize();\r\n    if (!ReverbEngine.initialized) return;\r\n    try {\r\n      if (ReverbEngine.mediaSources.has(audioElement)) {\r\n        return;\r\n      }\r\n\r\n      const track =\r\n        ReverbEngine.audioContext.createMediaElementSource(audioElement);\r\n      track.connect(ReverbEngine.convolver);\r\n      ReverbEngine.mediaSources.set(audioElement, track);\r\n    } catch (error) {\r\n      console.error(\"Error applying reverb:\", error);\r\n    }\r\n  }\r\n\r\n  // Remove reverb from a given HTMLAudioElement\r\n  public static async removeReverb(audioElement: HTMLAudioElement) {\r\n    await ReverbEngine.initialize();\r\n    if (!ReverbEngine.initialized) return;\r\n    const track = ReverbEngine.mediaSources.get(audioElement);\r\n    if (track) {\r\n      track.disconnect();\r\n      ReverbEngine.mediaSources.delete(audioElement);\r\n    }\r\n  }\r\n}\r\n","// #region imports\nimport { Wall } from \"./tile/wall\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Floor } from \"./tile/floor\";\nimport { Direction, Game, LevelState } from \"./game\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Tile, SkinType } from \"./tile/tile\";\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { Chest } from \"./entity/object/chest\";\nimport { Item } from \"./item/item\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { SpawnFloor } from \"./tile/spawnfloor\";\nimport { Spike } from \"./tile/spike\";\nimport { GameConstants } from \"./gameConstants\";\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\nimport { Barrel } from \"./entity/object/barrel\";\nimport { Crate } from \"./entity/object/crate\";\nimport { Armor } from \"./item/armor\";\nimport { Particle } from \"./particle/particle\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { FountainTile } from \"./tile/fountainTile\";\nimport { CoffinTile } from \"./tile/coffinTile\";\nimport { PottedPlant } from \"./entity/object/pottedPlant\";\nimport { InsideLevelDoor } from \"./tile/insideLevelDoor\";\nimport { Button } from \"./tile/button\";\nimport { HitWarning } from \"./hitWarning\";\nimport { UpLadder } from \"./tile/upLadder\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { CoalResource } from \"./entity/resource/coalResource\";\nimport { GoldResource } from \"./entity/resource/goldResource\";\nimport { EmeraldResource } from \"./entity/resource/emeraldResource\";\nimport { Chasm } from \"./tile/chasm\";\nimport { Spawner } from \"./entity/enemy/spawner\";\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\nimport { WallTorch } from \"./tile/wallTorch\";\nimport { LightSource } from \"./lightSource\";\nimport { ChargeEnemy } from \"./entity/enemy/chargeEnemy\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Heart } from \"./item/heart\";\nimport { Spear } from \"./weapon/spear\";\nimport { Drawable } from \"./drawable\";\nimport { Player, PlayerDirection } from \"./player\";\nimport { CrabEnemy } from \"./entity/enemy/crabEnemy\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\nimport { Random } from \"./random\";\nimport { Lantern } from \"./item/lantern\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Pot } from \"./entity/object/pot\";\nimport { BishopEnemy } from \"./entity/enemy/bishopEnemy\";\nimport { Rock } from \"./entity/resource/rockResource\";\nimport { Mushrooms } from \"./entity/object/mushrooms\";\nimport { ArmoredzombieEnemy } from \"./entity/enemy/armoredzombieEnemy\";\nimport { TombStone } from \"./entity/object/tombStone\";\nimport { Pumpkin } from \"./entity/object/pumpkin\";\nimport { QueenEnemy } from \"./entity/enemy/queenEnemy\";\nimport { FrogEnemy } from \"./entity/enemy/frogEnemy\";\nimport { BigKnightEnemy } from \"./entity/enemy/bigKnightEnemy\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { FireWizardEnemy } from \"./entity/enemy/fireWizard\";\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\nimport { ReverbEngine } from \"./reverb\";\nimport { astar } from \"./astarclass\";\nimport { Level } from \"./level\";\nimport { Warhammer } from \"./weapon/warhammer\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Torch } from \"./item/torch\";\nimport { RookEnemy } from \"./entity/enemy/rookEnemy\";\nimport { BeamEffect } from \"./beamEffect\";\nimport { EnvType } from \"./environment\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { OccultistEnemy } from \"./entity/enemy/occultistEnemy\";\nimport { Puddle } from \"./tile/decorations/puddle\";\nimport { Decoration } from \"./tile/decorations/decoration\";\nimport { Bomb } from \"./entity/object/bomb\";\nimport { Sound } from \"./sound\";\nimport { Block } from \"./entity/object/block\";\nimport { Bestiary } from \"./bestiary\";\n\n// #endregion\n\n// #region Enums & Interfaces\n/**\n * Enumeration of available enemy types.\n */\nexport enum EnemyType {\n  crab = \"crab\",\n  frog = \"frog\",\n  zombie = \"zombie\",\n  skull = \"skull\",\n  energyWizard = \"energywizard\",\n  charge = \"charge\",\n  rook = \"rook\",\n  bishop = \"bishop\",\n  armoredzombie = \"armoredzombie\",\n  bigskull = \"bigskull\",\n  queen = \"queen\",\n  knight = \"knight\",\n  bigknight = \"bigknight\",\n  firewizard = \"firewizard\",\n  spawner = \"spawner\",\n  occultist = \"occultist\",\n  bomb = \"bomb\",\n  // Add other enemy types here\n}\n\n/**\n * Mapping of enemy types to their corresponding classes.\n */\nexport const EnemyTypeMap: { [key in EnemyType]: EnemyStatic } = {\n  [EnemyType.crab]: CrabEnemy,\n  [EnemyType.frog]: FrogEnemy,\n  [EnemyType.zombie]: ZombieEnemy,\n  [EnemyType.skull]: SkullEnemy,\n  [EnemyType.energyWizard]: EnergyWizardEnemy,\n  [EnemyType.charge]: ChargeEnemy,\n  [EnemyType.rook]: RookEnemy,\n  [EnemyType.bishop]: BishopEnemy,\n  [EnemyType.armoredzombie]: ArmoredzombieEnemy,\n  [EnemyType.bigskull]: BigSkullEnemy,\n  [EnemyType.queen]: QueenEnemy,\n  [EnemyType.knight]: KnightEnemy,\n  [EnemyType.bigknight]: BigKnightEnemy,\n  [EnemyType.firewizard]: FireWizardEnemy,\n  [EnemyType.spawner]: Spawner,\n  [EnemyType.occultist]: OccultistEnemy,\n  [EnemyType.bomb]: Bomb,\n  // Add other enemy mappings here\n};\n\nexport enum RoomType {\n  START,\n  DUNGEON,\n  BOSS,\n  BIGDUNGEON,\n  TREASURE,\n  FOUNTAIN,\n  COFFIN,\n  GRASS,\n  PUZZLE,\n  KEYROOM,\n  CHESSBOARD,\n  MAZE,\n  CORRIDOR,\n  SPIKECORRIDOR,\n  UPLADDER,\n  DOWNLADDER,\n  SHOP,\n  BIGCAVE,\n  CAVE,\n  SPAWNER,\n  ROPEHOLE,\n  ROPECAVE,\n  TUTORIAL,\n}\n\nexport enum TurnState {\n  playerTurn,\n  computerTurn,\n}\n\nexport interface WallInfo {\n  isTopWall: boolean;\n  isBottomWall: boolean;\n  isLeftWall: boolean;\n  isRightWall: boolean;\n  isInnerWall: boolean;\n  isBelowDoorWall: boolean;\n  isDoorWall: boolean;\n  innerWallType: string | null;\n  shouldDrawBottom: boolean;\n  isAboveDoorWall: boolean;\n}\n\nexport enum WallDirection {\n  NORTH = \"North\",\n  EAST = \"East\",\n  SOUTH = \"South\",\n  WEST = \"West\",\n  TOPLEFT = \"TopLeft\",\n  TOPRIGHT = \"TopRight\",\n  BOTTOMLEFT = \"BottomLeft\",\n  BOTTOMRIGHT = \"BottomRight\",\n}\n\ninterface RoomDimensions {\n  width: number;\n  height: number;\n}\n\ninterface EntitySpawnConfig {\n  name: Entity[\"name\"];\n  weight: number;\n}\n\nexport interface EnemyStatic {\n  add(room: Room, game: Game, x: number, y: number, ...rest: any[]): void;\n}\n\n// #endregion\n\nexport class Room {\n  roomArray: Tile[][];\n\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\n  softCol: [number, number, number][][];\n  col: [number, number, number][][];\n  renderBuffer: [number, number, number, number][][][]; // Array of color arrays (r,g,b,alpha) for each x,y position\n  oldVis: number[][];\n  oldCol: [number, number, number][][];\n\n  entities: Array<Entity>;\n  deadEntities: Array<Entity>;\n  items: Array<Item>;\n  doors: Array<Door>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\n  projectiles: Array<Projectile>;\n  particles: Array<Particle>;\n  hitwarnings: Array<HitWarning>;\n  private colorOffscreenCanvas: HTMLCanvasElement;\n  private colorOffscreenCtx: CanvasRenderingContext2D;\n\n  private shadeOffscreenCanvas: HTMLCanvasElement;\n  private shadeOffscreenCtx: CanvasRenderingContext2D;\n  private bloomOffscreenCanvas: HTMLCanvasElement;\n  private bloomOffscreenCtx: CanvasRenderingContext2D;\n\n  currentSpawnerCount: number;\n\n  game: Game;\n  roomX: number;\n  roomY: number;\n  width: number;\n  height: number;\n  type: RoomType;\n  depth: number;\n  mapGroup: number;\n  name: string = \"\";\n  message: string;\n  turn: TurnState;\n  playerTurnTime: number;\n  playerTicked: Player;\n  skin: SkinType;\n  entered: boolean; // has the player entered this level\n  lightSources: Array<LightSource>;\n  shadeColor = \"#000000\";\n  innerWalls: Array<Wall>;\n  wallInfo: Map<string, WallInfo> = new Map();\n  savePoint: Room;\n  lastEnemyCount: number;\n  outerWalls: Array<Wall>;\n  level: Level;\n  id: number;\n  tunnelDoor: Door = null; // this is the door that connects the start room to the exit room\n  active: boolean;\n  onScreen: boolean;\n  lastLightingUpdate: number;\n  walls: Array<Wall>;\n  decorations: Array<Decoration>;\n  blurOffsetX: number = 5;\n  blurOffsetY: number = 5;\n\n  // Add a list to keep track of BeamEffect instances\n  beamEffects: BeamEffect[] = [];\n\n  // Add this property to track created mask canvases\n  private maskCanvases: HTMLCanvasElement[] = [];\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    type: RoomType,\n    depth: number,\n    mapGroup: number,\n    level: Level,\n    rand = Random.rand,\n  ) {\n    this.game = game;\n    this.roomX = x; //Math.floor(- this.width / 2);\n    this.roomY = y; //Math.floor(- this.height / 2);\n    this.width = w;\n    this.height = h;\n    this.type = type;\n    this.depth = depth;\n    this.mapGroup = mapGroup;\n\n    this.entered = false;\n    this.turn = TurnState.playerTurn;\n    this.playerTurnTime = Date.now();\n\n    this.items = Array<Item>();\n    this.projectiles = Array<Projectile>();\n    this.hitwarnings = Array<HitWarning>();\n    this.particles = Array<Particle>();\n    this.doors = Array<Door>();\n    this.entities = Array<Entity>();\n    this.lightSources = Array<LightSource>();\n    this.innerWalls = Array<Wall>();\n    this.level = level;\n    this.id = 0;\n    this.currentSpawnerCount = 0;\n    this.deadEntities = Array<Entity>();\n    this.active = false;\n    this.lastLightingUpdate = 0;\n    this.walls = Array<Wall>();\n    this.decorations = Array<Decoration>();\n    // Initialize Color Offscreen Canvas\n    this.colorOffscreenCanvas = document.createElement(\"canvas\");\n    this.colorOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.colorOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const colorCtx = this.colorOffscreenCanvas.getContext(\"2d\");\n    if (!colorCtx) {\n      throw new Error(\"Failed to initialize color offscreen canvas context.\");\n    }\n    this.colorOffscreenCtx = colorCtx;\n\n    // Initialize Shade Offscreen Canvas\n    this.shadeOffscreenCanvas = document.createElement(\"canvas\");\n    this.shadeOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.shadeOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const shadeCtx = this.shadeOffscreenCanvas.getContext(\"2d\");\n    if (!shadeCtx) {\n      throw new Error(\"Failed to initialize shade offscreen canvas context.\");\n    }\n    this.shadeOffscreenCtx = shadeCtx;\n\n    // Initialize Bloom Offscreen Canvas\n    this.bloomOffscreenCanvas = document.createElement(\"canvas\");\n    this.bloomOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.bloomOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const bloomCtx = this.bloomOffscreenCanvas.getContext(\"2d\");\n    if (!bloomCtx) {\n      throw new Error(\"Failed to initialize bloom offscreen canvas context.\");\n    }\n    this.bloomOffscreenCtx = bloomCtx;\n\n    // #region initialize arrays\n\n    //initialize room array\n\n    this.roomArray = [];\n    for (let x = this.roomX - 1; x < this.roomX + this.width + 1; x++) {\n      this.roomArray[x] = [];\n      for (let y = this.roomY - 1; y < this.roomY + this.height + 1; y++) {\n        this.roomArray[x][y] = null;\n      }\n    }\n\n    //initialize visibility & color arrays, as well as their soft variants\n    this.vis = [];\n    this.softVis = [];\n    this.col = [];\n    this.softCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.vis[x] = [];\n      this.softVis[x] = [];\n      this.col[x] = [];\n      this.softCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = 1;\n        this.softVis[x][y] = 1;\n        this.col[x][y] = [0, 0, 0];\n        this.softCol[x][y] = [0, 0, 0];\n      }\n    }\n\n    //initialize the render buffer array\n    this.renderBuffer = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.renderBuffer[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.renderBuffer[x][y] = [];\n      }\n    }\n\n    //initialize the skin for the given environment\n    this.skin = this.level.environment.skin;\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE)\n      this.skin = SkinType.CAVE;\n    this.buildEmptyRoom();\n\n    // #endregion\n  }\n\n  // #region TILE ADDING METHODS\n\n  private buildEmptyRoom() {\n    // fill in wall and floor\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (\n          this.pointInside(\n            x,\n            y,\n            this.roomX + 1,\n            this.roomY + 1,\n            this.width - 2,\n            this.height - 2,\n          )\n        ) {\n          this.roomArray[x][y] = new Floor(this, x, y);\n        } else {\n          this.roomArray[x][y] = new Wall(\n            this,\n            x,\n            y,\n            this.getWallType(\n              x,\n              y,\n              this.roomX,\n              this.roomY,\n              this.width,\n              this.height,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  private removeWall = (x: number, y: number) => {\n    if (this.roomArray[x][y] instanceof Wall) {\n      this.roomArray[x][y] = null;\n    }\n    //this.innerWalls = this.innerWalls.filter((w) => w.x !== x && w.y !== y);\n    //this.outerWalls = this.outerWalls.filter((w) => w.x !== x && w.y !== y);\n  };\n\n  private getWallType = (\n    pointX: number,\n    pointY: number,\n    rectX: number,\n    rectY: number,\n    width: number,\n    height: number,\n  ): Array<WallDirection> => {\n    let directions: Array<WallDirection> = [];\n    if (pointY === rectY && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.NORTH);\n    if (pointY === rectY + height && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.SOUTH);\n    if (pointX === rectX && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.WEST);\n    if (pointX === rectX + width && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.EAST);\n    return directions;\n  };\n\n  private addWallBlocks(rand: () => number) {\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\n    if (this.width > 8 && rand() > 0.5) numBlocks *= 4;\n    for (let i = 0; i < numBlocks; i++) {\n      let blockW = Math.min(\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\n        this.width - 4,\n      );\n      let blockH = Math.min(blockW + Game.rand(-2, 2, rand), this.height - 4);\n\n      let x = Game.rand(\n        this.roomX + 2,\n        this.roomX + this.width - blockW - 2,\n        rand,\n      );\n      let y = Game.rand(\n        this.roomY + 2,\n        this.roomY + this.height - blockH - 2,\n        rand,\n      );\n      let neighborCount = (wall: Wall) => {\n        let count = 0;\n        for (let xx = wall.x - 1; xx <= wall.x + 1; xx++) {\n          for (let yy = wall.y - 1; yy <= wall.y + 1; yy++) {\n            if (\n              this.roomArray[xx]?.[yy] instanceof Wall &&\n              !(xx === wall.x && yy === wall.y)\n            )\n              count++;\n          }\n        }\n        return count;\n      };\n\n      for (let xx = x; xx < x + blockW; xx++) {\n        for (let yy = y; yy < y + blockH; yy++) {\n          let w = new Wall(this, xx, yy);\n          this.roomArray[xx][yy] = w;\n          this.innerWalls.push(w);\n        }\n      }\n      this.innerWalls.forEach((wall) => {\n        if (neighborCount(wall) <= 1) {\n          this.removeWall(wall.x, wall.y);\n          this.roomArray[wall.x][wall.y] = new Floor(this, wall.x, wall.y);\n          this.innerWalls = this.innerWalls.filter((w) => w !== wall);\n        }\n      });\n    }\n  }\n\n  private addTorches(\n    numTorches: number,\n    rand: () => number,\n    placeX?: number,\n    placeY?: number,\n  ) {\n    if (\n      this.level.environment.type === EnvType.FOREST &&\n      this.type !== RoomType.DOWNLADDER\n    )\n      return;\n\n    if (\n      placeX !== undefined &&\n      placeY !== undefined &&\n      this.roomArray[placeX]?.[placeY] instanceof Wall\n    ) {\n      this.roomArray[placeX][placeY] = new WallTorch(this, placeX, placeY);\n\n      return;\n    }\n\n    let walls = [];\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\n        if (\n          this.roomArray[xx][yy] instanceof Wall &&\n          !(this.roomArray[xx][yy + 1] instanceof Wall)\n        ) {\n          walls.push(this.roomArray[xx][yy]);\n        }\n      }\n    }\n\n    for (let i = 0; i < numTorches; i++) {\n      if (walls.length == 0) return;\n      const randomIndex = Game.rand(0, walls.length - 1, rand);\n      const t = walls.splice(randomIndex, 1)[0];\n      const x = t.x;\n      const y = t.y;\n      this.roomArray[x][y] = new WallTorch(this, x, y);\n    }\n  }\n\n  private addChasms(rand: () => number) {\n    // add chasms\n    let w = Game.rand(2, 4, rand);\n    let h = Game.rand(2, 4, rand);\n    let xmin = this.roomX + 2;\n    let xmax = this.roomX + this.width - w - 2;\n    let ymin = this.roomY + 2;\n    let ymax = this.roomY + this.height - h - 2;\n    if (xmax < xmin || ymax < ymin) return;\n    let x = Game.rand(xmin, xmax, rand);\n    let y = Game.rand(ymin, ymax, rand);\n\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\n        // add a floor border\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\n          if (!(this.roomArray[xx][yy] instanceof SpawnFloor))\n            this.roomArray[xx][yy] = new Floor(this, xx, yy);\n        } else\n          this.roomArray[xx][yy] = new Chasm(\n            this,\n            xx,\n            yy,\n            xx === x,\n            xx === x + w - 1,\n            yy === y,\n            yy === y + h - 1,\n          );\n      }\n    }\n  }\n\n  addDoor = (\n    x: number,\n    y: number,\n    room: Room = this,\n    tunnelDoor: boolean = false,\n  ) => {\n    let d;\n    let t = DoorType.DOOR;\n    if (room.type === RoomType.BOSS) t = DoorType.GUARDEDDOOR;\n    if (room.type === RoomType.KEYROOM) t = DoorType.LOCKEDDOOR;\n    if (tunnelDoor) t = DoorType.TUNNELDOOR;\n    if (x === room.roomX) {\n      d = new Door(room, room.game, x, y, Direction.RIGHT, t);\n      room.roomArray[x + 1][y] = new SpawnFloor(room, x + 1, y);\n    } else if (x === room.roomX + room.width - 1) {\n      d = new Door(room, room.game, x, y, Direction.LEFT, t);\n      room.roomArray[x - 1][y] = new SpawnFloor(room, x - 1, y);\n    } else if (y === room.roomY) {\n      d = new Door(room, room.game, x, y, Direction.UP, t);\n      room.roomArray[x][y + 1] = new SpawnFloor(room, x, y + 1);\n    } else if (y === room.roomY + room.height - 1) {\n      d = new Door(room, room.game, x, y, Direction.DOWN, t);\n      room.roomArray[x][y - 1] = new SpawnFloor(room, x, y - 1);\n    }\n\n    if (tunnelDoor) {\n      room.tunnelDoor = d;\n    }\n\n    room.doors.push(d);\n    if (room.roomArray[d.x] == undefined) {\n      console.log(\"door not added\");\n    }\n    room.roomArray[d.x][d.y] = d;\n\n    return d;\n  };\n\n  // ... start of file ...\n\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\n    if (this.level.environment.type === EnvType.FOREST) return;\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.roomArray[x][y] = new SpikeTrap(this, x, y);\n    }\n  }\n\n  // #endregion\n\n  // #region ADDING ENTITIES\n\n  // Function to add enemies to the room\n  private addEnemies(numEnemies: number, rand: () => number) {\n    // Get all empty tiles in the room\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) return;\n    //don't put enemies near the entrances so you don't get screwed instantly\n\n    // Create a Set to store coordinates that should be excluded\n    const excludedCoords = new Set<string>();\n\n    // For each door, add coordinates in a 5x5 area around it to excluded set\n    for (const door of this.doors) {\n      for (let dx = -2; dx <= 2; dx++) {\n        for (let dy = -2; dy <= 2; dy++) {\n          excludedCoords.add(`${door.x + dx},${door.y + dy}`);\n        }\n      }\n    }\n\n    // Filter tiles that aren't in the excluded set\n    tiles = tiles.filter((tile) => !excludedCoords.has(`${tile.x},${tile.y}`));\n    // Loop through the number of enemies to be added\n    for (let i = 0; i < numEnemies; i++) {\n      let rerolls = 1;\n\n      if (tiles.length === 0) {\n        console.log(`No tiles left to spawn enemies`);\n        break;\n      }\n      let emptyTiles = this.getRandomEmptyPosition(tiles);\n      if (emptyTiles.x === null || emptyTiles.y === null) {\n        i = numEnemies;\n        break;\n      }\n      const { x, y } = emptyTiles;\n\n      // Define the enemy tables for each depth level\n      let tables = this.level.enemyParameters.enemyTables;\n      // Define the maximum depth level\n      let max_depth_table = this.level.enemyParameters.maxDepthTable;\n      // Get the current depth level, capped at the maximum\n      let d = Math.min(this.depth, max_depth_table);\n      // If there is a table for the current depth level\n      if (tables[d] && tables[d].length > 0) {\n        // Function to add an enemy to the room\n        let addEnemy = (enemy: Entity): boolean => {\n          // Check if the enemy overlaps with any other enemies\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              if (!tiles.some((tt) => tt.x === x + xx && tt.y === y + yy)) {\n                // If it does, increment the enemy count and return false\n                numEnemies++;\n                return false;\n              }\n            }\n          }\n          // If it doesn't, add the enemy to the room, remove the tiles used from the available pool, and return true\n          this.entities.push(enemy);\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              tiles = tiles.filter((t) => !(t.x === x + xx && t.y === y + yy));\n            }\n          }\n          return true;\n        };\n\n        // Randomly select an enemy type from the table\n        let type = Game.randTable(tables[d], Math.random);\n\n        switch (type) {\n          case 1:\n            CrabEnemy.add(this, this.game, x, y);\n            break;\n          case 2:\n            FrogEnemy.add(this, this.game, x, y);\n            break;\n          case 3:\n            ZombieEnemy.add(this, this.game, x, y);\n            break;\n          case 4:\n            SkullEnemy.add(this, this.game, x, y);\n            break;\n          case 5:\n            EnergyWizardEnemy.add(this, this.game, x, y);\n            break;\n          case 6:\n            ChargeEnemy.add(this, this.game, x, y);\n            break;\n          case 7:\n            RookEnemy.add(this, this.game, x, y);\n            break;\n          case 8:\n            BishopEnemy.add(this, this.game, x, y);\n            break;\n          case 9:\n            ArmoredzombieEnemy.add(this, this.game, x, y);\n            break;\n          case 10:\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 11:\n            QueenEnemy.add(this, this.game, x, y);\n            break;\n          case 12:\n            KnightEnemy.add(this, this.game, x, y);\n            break;\n          case 13:\n            if (addEnemy(new BigKnightEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 14:\n            ZombieEnemy.add(this, this.game, x, y);\n            break;\n          case 15:\n            FireWizardEnemy.add(this, this.game, x, y);\n            break;\n        }\n      }\n    }\n    let spawnerAmounts = [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,\n      2, 2, 3, 3, 4, 5, 3,\n    ];\n    if (this.depth > 0) {\n      let spawnerAmount = Game.randTable(spawnerAmounts, rand);\n      //console.log(`Adding ${spawnerAmount} spawners`);\n      this.addSpawners(spawnerAmount, rand);\n    }\n    let occultistAmounts = [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n    ];\n    if (this.depth > 1) {\n      let occultistAmount = Game.randTable(occultistAmounts, rand);\n      //console.log(`Adding ${occultistAmount} occultists`);\n      this.addOccultists(occultistAmount, rand);\n    }\n  }\n\n  private addRandomEnemies() {\n    let numEmptyTiles = this.getEmptyTiles().length;\n\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Math.min(this.depth * 0.1 + 0.5, 0.15), //this.depth * 0.01 is starting value\n    );\n    if (numEnemies > numEmptyTiles / 2) numEnemies = numEmptyTiles / 2;\n    this.addEnemies(numEnemies, Math.random);\n  }\n\n  private addSpawners(numSpawners: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      //console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n    for (let i = 0; i < numSpawners; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      let spawnTable = this.level\n        .getEnemyParameters()\n        .enemyTables[this.depth].filter((t) => t !== 7);\n      Spawner.add(this, this.game, x, y, spawnTable);\n    }\n  }\n  private addOccultists(numOccultists: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      //console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n    for (let i = 0; i < numOccultists; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      OccultistEnemy.add(this, this.game, x, y);\n    }\n  }\n  //used for spawn commands, implement elsewhere later\n  /**\n   * Adds a new enemy to the room based on the provided enemy type string.\n   *\n   * @param enemyType - The string identifier for the enemy type.\n   */\n  addNewEnemy = (enemyType: EnemyType): void => {\n    const EnemyClass = EnemyTypeMap[enemyType];\n    if (!EnemyClass) {\n      console.error(`Enemy type \"${enemyType}\" is not recognized.`);\n      return;\n    }\n\n    const tiles = this.getEmptyTiles();\n    if (!tiles || tiles.length === 0) {\n      // console.log(`No tiles left to spawn enemies.`);\n      return;\n    }\n\n    const { x, y } = this.getRandomEmptyPosition(tiles);\n    EnemyClass.add(this, this.game, x, y);\n  };\n\n  addNewSpawner = (enemyType: EnemyType): void => {\n    const EnemyClass = EnemyTypeMap[enemyType];\n    if (!EnemyClass) {\n      //console.error(`Enemy type \"${enemyType}\" is not recognized.`);\n      return;\n    }\n\n    const tiles = this.getEmptyTiles();\n    if (!tiles || tiles.length === 0) {\n      // console.log(`No tiles left to spawn enemies.`);\n      return;\n    }\n\n    const { x, y } = this.getRandomEmptyPosition(tiles);\n    Spawner.add(this, this.game, x, y);\n  };\n\n  private addChests(numChests: number, rand: () => number) {\n    // add chests\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numChests; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.entities.push(new Chest(this, this.game, x, y));\n    }\n  }\n\n  private addObstacles(numObstacles: number, rand: () => number) {\n    // add crates/barrels\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numObstacles; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      const env = this.level.environment.type; //bootleg variable to start to vary the environments\n      switch (\n        Game.randTable(\n          [\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 5, 5, 5,\n            6, 6, 6, 6, 6, 6, 6,\n          ],\n          rand,\n        )\n      ) {\n        case 1:\n          if (env === EnvType.FOREST) break;\n          Crate.add(this, this.game, x, y);\n          break;\n        case 2:\n          if (env === EnvType.FOREST) break;\n\n          Barrel.add(this, this.game, x, y);\n          break;\n        case 3:\n          if (env === EnvType.CAVE) break;\n          TombStone.add(this, this.game, x, y, 1);\n          break;\n        case 4:\n          if (env === EnvType.CAVE) break;\n\n          TombStone.add(this, this.game, x, y, 0);\n          break;\n        case 5:\n          if (env === EnvType.CAVE) break;\n\n          Pumpkin.add(this, this.game, x, y);\n          break;\n        case 6:\n          Block.add(this, this.game, x, y);\n          break;\n      }\n    }\n  }\n\n  addBombs(numBombs: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < this.getEmptyTiles().length; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      Bomb.add(this, this.game, x, y);\n    }\n  }\n\n  private addPlants(numPlants: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numPlants; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n\n      let r = rand();\n      if (r <= 0.45) PottedPlant.add(this, this.game, x, y);\n      else if (r <= 0.65) Pot.add(this, this.game, x, y);\n      else if (r <= 0.75) Rock.add(this, this.game, x, y);\n      else if (r <= 0.97) Mushrooms.add(this, this.game, x, y);\n      else Chest.add(this, this.game, x, y);\n    }\n  }\n\n  private addDecorations(numDecorations: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numDecorations; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.decorations.push(new Puddle(this, x, y));\n    }\n  }\n\n  private addResources(numResources: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numResources; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n\n      let r = rand();\n      if (r <= (10 - this.depth ** 3) / 10)\n        CoalResource.add(this, this.game, x, y);\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\n        GoldResource.add(this, this.game, x, y);\n      else EmeraldResource.add(this, this.game, x, y);\n    }\n  }\n\n  private addVendingMachine(\n    rand: () => number,\n    placeX?: number,\n    placeY?: number,\n  ) {\n    const pos = this.getRandomEmptyPosition(this.getEmptyTiles());\n\n    let x = placeX ? placeX : pos.x;\n    let y = placeY ? placeY : pos.y;\n\n    let table =\n      this.depth > 0\n        ? [1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n        : [1, 1, 1];\n    let type = Game.randTable(table, rand);\n    switch (type) {\n      case 1:\n        VendingMachine.add(this, this.game, x, y, new Heart(this, x, y));\n        break;\n      case 2:\n        VendingMachine.add(this, this.game, x, y, new Lantern(this, x, y));\n        break;\n      case 3:\n        VendingMachine.add(this, this.game, x, y, new Armor(this, x, y));\n        break;\n      case 4:\n        VendingMachine.add(this, this.game, x, y, new DualDagger(this, x, y));\n        break;\n      case 5:\n        VendingMachine.add(this, this.game, x, y, new Spear(this, x, y));\n        break;\n      case 6:\n        VendingMachine.add(this, this.game, x, y, new Shotgun(this, x, y));\n        break;\n      case 7:\n        VendingMachine.add(this, this.game, x, y, new Warhammer(this, x, y));\n        break;\n      case 8:\n        VendingMachine.add(this, this.game, x, y, new Spellbook(this, x, y));\n        break;\n      case 9:\n        VendingMachine.add(this, this.game, x, y, new Torch(this, x, y));\n        break;\n    }\n  }\n\n  // #endregion\n\n  // #region POPULATING METHODS\n\n  linkExitToStart = () => {\n    //if (this.type === RoomType.ROPEHOLE) return;\n    if (\n      this.addDoorWithOffset(\n        this.level.startRoom.roomX +\n          Math.floor(this.level.startRoom.width / 2) +\n          1,\n        this.level.startRoom.roomY,\n        this.level.startRoom,\n        true,\n      ) &&\n      this.addDoorWithOffset(\n        this.roomX + Math.floor(this.width / 2) - 1,\n        this.roomY,\n        this,\n        true,\n      )\n    ) {\n      this.tunnelDoor.linkedDoor = this.level.startRoom.tunnelDoor;\n      this.tunnelDoor.linkedDoor.linkedDoor = this.tunnelDoor;\n    }\n  };\n\n  populateEmpty = (rand: () => number) => {\n    this.addTorchesByArea();\n  };\n\n  populateDungeon = (rand: () => number) => {\n    //this.addChests(10, rand);\n    let factor = Game.rand(1, 36, rand);\n\n    if (factor < 30) this.addWallBlocks(rand);\n    if (factor % 4 === 0) this.addChasms(rand);\n    this.addTorchesByArea();\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 3], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.35 * rand());\n    let numPlants = Math.ceil(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    //this.addDecorations(Game.randTable([0, 0, 0, 1, 1, 2, 3], rand), rand);\n    this.addObstacles(numObstacles, rand);\n\n    if (factor <= 6) this.addVendingMachine(rand);\n    this.addRandomEnemies();\n\n    this.removeDoorObstructions();\n  };\n\n  populateBoss = (rand: () => number) => {\n    this.addTorchesByArea();\n\n    this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.2);\n    let numPlants = Math.floor(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n\n    this.addRandomEnemies();\n  };\n\n  populateBigDungeon = (rand: () => number) => {\n    if (Game.rand(1, 4, rand) === 1) this.addChasms(rand);\n    this.addTorchesByArea();\n\n    if (Game.rand(1, 4, rand) === 1)\n      this.addPlants(\n        Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n        rand,\n      );\n    if (Game.rand(1, 3, rand) === 1)\n      this.addSpikeTraps(Game.randTable([3, 5, 7, 8], rand), rand);\n    this.addRandomEnemies();\n\n    this.addObstacles(Game.randTable([0, 0, 1, 1, 2, 3, 5], rand), rand);\n    this.removeDoorObstructions();\n  };\n\n  populateSpawner = (rand: () => number) => {\n    this.addTorchesByArea();\n\n    Spawner.add(\n      this,\n      this.game,\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.removeDoorObstructions();\n  };\n\n  populateKeyRoom = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.items.push(\n      new GoldenKey(\n        this,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2),\n      ),\n    );\n  };\n\n  populateFountain = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    let centerX = Math.floor(this.roomX + this.width / 2);\n    let centerY = Math.floor(this.roomY + this.height / 2);\n    for (let x = centerX - 1; x <= centerX + 1; x++) {\n      for (let y = centerY - 1; y <= centerY + 1; y++) {\n        this.roomArray[x][y] = new FountainTile(\n          this,\n          x,\n          y,\n          x - (centerX - 1),\n          y - (centerY - 1),\n        );\n      }\n    }\n\n    this.addPlants(Game.randTable([0, 0, 1, 2], rand), rand);\n  };\n\n  placeCoffin = (x: number, y: number) => {\n    this.roomArray[x][y] = new CoffinTile(this, x, y, 0);\n    this.roomArray[x][y + 1] = new CoffinTile(this, x, y + 1, 1);\n  };\n\n  populateCoffin = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2 - 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2) + 2,\n      Math.floor(this.roomY + this.height / 2),\n    );\n  };\n\n  populatePuzzle = (rand: () => number) => {\n    let d;\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      let y = this.roomY + Math.floor(this.height / 2);\n      if (x === this.roomX + Math.floor(this.width / 2)) {\n        d = new InsideLevelDoor(this, this.game, x, y + 1);\n        this.roomArray[x][y + 1] = d;\n      } else {\n        this.roomArray[x][y] = new Wall(this, x, y);\n      }\n    }\n\n    let x = Game.rand(this.roomX, this.roomX + this.width - 1, rand);\n    let y = Game.rand(\n      this.roomY + Math.floor(this.height / 2) + 3,\n      this.roomY + this.height - 2,\n      rand,\n    );\n\n    this.roomArray[x][y] = new Button(this, x, y, d);\n\n    let crateTiles = this.getEmptyTiles().filter(\n      (t) =>\n        t.x >= this.roomX + 1 &&\n        t.x <= this.roomX + this.width - 2 &&\n        t.y >= this.roomY + Math.floor(this.height / 2) + 3 &&\n        t.y <= this.roomY + this.height - 2,\n    );\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\n\n    for (let i = 0; i < numCrates; i++) {\n      let t = crateTiles.splice(\n        Game.rand(0, crateTiles.length - 1, rand),\n        1,\n      )[0];\n      if (t) this.entities.push(new Crate(this, this.game, t.x, t.y));\n    }\n    this.addPlants(\n      Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n      rand,\n    );\n    this.removeDoorObstructions();\n  };\n\n  populateSpikeCorridor = (rand: () => number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        this.roomArray[x][y] = new SpikeTrap(this, x, y, Game.rand(0, 3, rand));\n      }\n    }\n    this.removeDoorObstructions();\n    this.addRandomTorches(\"medium\");\n  };\n\n  populateTreasure = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.addChests(Game.randTable([4, 4, 5, 5, 5, 6, 8], rand), rand);\n    this.addPlants(Game.randTable([0, 1, 2, 4, 5, 6], rand), rand);\n  };\n\n  populateCave = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    this.addWallBlocks(rand);\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand),\n    );\n    this.addEnemies(numEnemies, rand);\n    if (this.level.environment.type === EnvType.CAVE)\n      this.addResources(\n        (numEmptyTiles - numEnemies) * Game.randTable([0.1, 0.2, 0.3], rand),\n        rand,\n      );\n    this.removeDoorObstructions();\n  };\n\n  populateUpLadder = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x - 1][y - 1] = new UpLadder(this, this.game, x - 1, y - 1);\n  };\n\n  populateDownLadder = (rand: () => number) => {\n    this.addTorches(1, rand, this.roomX + 3, this.roomY);\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x + 1][y - 1] = new DownLadder(\n      this,\n      this.game,\n      x + 1,\n      y - 1,\n    );\n\n    const numChests = Math.ceil(Math.random() * 5);\n\n    let tiles = this.getEmptyTiles();\n    tiles = tiles.filter((tile) => tile.x !== x || tile.y !== y);\n    let weaponDropped = false;\n    let toolDropped = false;\n    let lightDropped = false;\n    for (let i = 0; i < numChests; i++) {\n      if (tiles.length > 0) {\n        const { x, y } = this.getRandomEmptyPosition(tiles);\n\n        let chest = new Chest(this, this.game, x, y);\n\n        if (!weaponDropped) {\n          chest.getDrop([\"weapon\"], true);\n          weaponDropped = true;\n        } else {\n          chest.getDrop(\n            [\"consumable\", \"gem\", \"light\", \"tool\", \"fuel\", \"backpack\"],\n            true,\n          );\n        }\n\n        tiles.filter((tile) => tile.x !== x && tile.y !== y);\n        this.entities.push(chest);\n      }\n    }\n  };\n\n  populateRopeHole = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    let d = new DownLadder(this, this.game, x, y);\n    d.isRope = true;\n    this.roomArray[x][y] = d;\n  };\n\n  populateRopeCave = (rand: () => number) => {\n    const { x, y } = this.getRoomCenter();\n    let upLadder = new UpLadder(this, this.game, x, y);\n    upLadder.isRope = true;\n    this.roomArray[x][y] = upLadder;\n\n    this.removeDoorObstructions();\n  };\n\n  populateShop = (rand: () => number) => {\n    this.addTorches(2, rand);\n\n    const { x, y } = this.getRoomCenter();\n    VendingMachine.add(this, this.game, x - 2, y - 1, new Shotgun(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y - 1, new Heart(this, 0, 0));\n    VendingMachine.add(this, this.game, x - 2, y + 2, new Armor(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y + 2, new Spear(this, 0, 0));\n\n    this.removeDoorObstructions();\n  };\n\n  // Many populate methods start with adding torches using the same pattern\n  private addRandomTorches(\n    intensity: \"none\" | \"low\" | \"medium\" | \"high\" = \"medium\",\n  ): void {\n    const torchPatterns = {\n      none: [0, 0, 0],\n      low: [0, 0, 0, 1, 1],\n      medium: [0, 0, 0, 1, 1, 2, 2, 3],\n      high: [1, 1, 2, 2, 3, 3, 4],\n    };\n    const randTorches = Game.randTable(torchPatterns[intensity], Random.rand);\n    this.addTorches(randTorches, Random.rand);\n  }\n\n  private addTorchesByArea = () => {\n    let numTorches = Math.max(\n      1,\n      Math.floor(Math.sqrt(this.roomArea) / 3) -\n        Math.floor(Math.sqrt(this.depth)),\n    );\n    if (this.depth === 0) {\n      if (Math.random() < 0.25) {\n        numTorches = 0;\n      }\n    } else {\n      // Exponential falloff starting at depth 1, approaching 90% chance\n      const falloffRate = 0.4; // Controls how quickly it approaches 90%\n      const maxChance = 0.9;\n      const chance =\n        maxChance * (1 - Math.exp(-falloffRate * (this.depth - 1)));\n      if (Math.random() < chance) {\n        numTorches = 0;\n      }\n    }\n    console.log(\"numTorches:\" + numTorches, \"roomArea\" + this.roomArea);\n    this.addTorches(numTorches, Random.rand);\n  };\n\n  // Used in populateDungeon, populateCave, etc. NOT IN USE\n  private populateWithEntities(config: {\n    enemyDensity: number;\n    obstacleDensity: number;\n    plantDensity: number;\n  }): void {\n    const numEmptyTiles = this.getEmptyTiles().length;\n    const numEnemies = Math.ceil(numEmptyTiles * config.enemyDensity);\n    const numObstacles = Math.ceil(numEmptyTiles * config.obstacleDensity);\n    const numPlants = Math.ceil(numEmptyTiles * config.plantDensity);\n\n    this.addEnemies(numEnemies, Random.rand);\n    this.addObstacles(numObstacles, Random.rand);\n    this.addPlants(numPlants, Random.rand);\n  }\n\n  populate = (rand: () => number) => {\n    this.name = \"\";\n    switch (this.type) {\n      case RoomType.START:\n        //this.addNewEnemy(EnemyType.zombie);\n        //this.addNewEnemy(EnemyType.occultist);\n        //this.addNewEnemy(EnemyType.occultist);\n\n        //   this.addNewEnemy(EnemyType.occultist);\n\n        if (this.depth !== 0) {\n          this.populateUpLadder(rand);\n          //this.addVendingMachine(rand, this.roomX + 1, this.roomY + 1);\n          this.placeVendingMachineInWall();\n        }\n\n        this.populateEmpty(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        if (this.level.environment.type === EnvType.CAVE) {\n          const { x, y } = this.getRoomCenter();\n          let sign = Math.random() < 0.5 ? -1 : 1;\n          let offsetX = Math.floor(Math.random()) * sign;\n          let offsetY = offsetX !== 0 ? 0 : sign;\n          this.items.push(new Pickaxe(this, x + offsetX, y + offsetY));\n        }\n        break;\n      case RoomType.BOSS:\n        this.populateBoss(rand);\n        this.name = \"BOSS\";\n        break;\n      case RoomType.DUNGEON:\n        if (\n          this.level.environment.type === EnvType.CAVE &&\n          Math.random() <= 0.2\n        ) {\n          this.populateCave(rand);\n        } else {\n          this.populateDungeon(rand);\n        }\n        break;\n      case RoomType.BIGDUNGEON:\n        this.populateBigDungeon(rand);\n        break;\n      case RoomType.FOUNTAIN:\n        this.populateFountain(rand);\n        break;\n      case RoomType.COFFIN:\n        this.populateCoffin(rand);\n        break;\n      case RoomType.PUZZLE:\n        this.populatePuzzle(rand);\n        break;\n      case RoomType.SPIKECORRIDOR:\n        this.populateSpikeCorridor(rand);\n        break;\n      case RoomType.TREASURE:\n        this.populateTreasure(rand);\n        break;\n      case RoomType.KEYROOM:\n        this.populateKeyRoom(rand);\n        break;\n      case RoomType.GRASS:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGCAVE:\n        this.populateCave(rand);\n      case RoomType.CAVE:\n        this.populateCave(rand);\n        break;\n      case RoomType.UPLADDER:\n        this.populateUpLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n\n        break;\n      case RoomType.DOWNLADDER:\n        this.populateDownLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.ROPEHOLE:\n        this.populateRopeHole(rand);\n        break;\n      case RoomType.ROPECAVE:\n        this.populateRopeCave(rand);\n        break;\n      case RoomType.SHOP:\n        /* shop rates:\n         * 10 coal for an gold coin\n         * 1 gold for 10 coins\n         * 1 emerald for 100 coins\n         *\n         * shop items:\n         * 1 empty heart   4 ^ (maxHealth + maxHealth ^ 1.05 ^ maxHealth - 2.05) coins\n         * fill all hearts  1 coin\n         * better torch    5 ^ (torchLevel + 1.05 ^ torchLevel - 2.05) coins\n         * weapons\n         */\n\n        this.populateShop(rand);\n        break;\n      case RoomType.SPAWNER:\n        this.populateSpawner(rand);\n        break;\n    }\n    this.message = this.name;\n  };\n\n  // #endregion\n\n  // #region ENTERING / EXITING ROOM METHODS\n\n  exitLevel = () => {\n    this.game.onResize(); // stupid hack to keep fps high\n    for (let door of this.doors) {\n      if (\n        door.linkedDoor.lightSource !== null &&\n        !door.linkedDoor.room.active &&\n        door.linkedDoor.room.entered\n      ) {\n        door.linkedDoor.lightSource.b = 0;\n        door.linkedDoor.lightSource.r = 0;\n\n        door.room.updateLighting();\n      }\n    }\n    this.active = false;\n    this.updateLighting();\n\n    this.particles.splice(0, this.particles.length);\n    this.disableFuseSounds();\n  };\n\n  disableFuseSounds = () => {\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\n      //if (!bomb.soundPaused) {\n      //bomb.soundPaused = true;\n      const bomb = b as Bomb;\n      Sound.stopSound(bomb.fuseSound);\n      //}\n    }\n  };\n\n  enableFuseSounds = () => {\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\n      //if (!bomb.soundPaused) {\n      //bomb.soundPaused = true;\n\n      const bomb = b as Bomb;\n      if (bomb.lit) {\n        Sound.playWithReverb(bomb.fuseSound);\n      }\n    }\n  };\n\n  onEnterRoom = (player: Player) => {\n    this.enableFuseSounds();\n    for (let room of this.level.rooms) {\n      room.roomOnScreen(player);\n    }\n\n    this.entered = true;\n\n    this.clearDeadStuff();\n    this.calculateWallInfo();\n    this.resetDoorLightSources();\n\n    this.particles = [];\n\n    this.alertEnemiesOnEntry();\n    this.message = this.name;\n    player.map.saveMapData();\n    this.setReverb();\n    this.active = true;\n\n    this.updateLighting();\n  };\n\n  enterLevel = (player: Player) => {\n    this.game.updateLevel();\n    player.moveSnap(this.getRoomCenter().x, this.getRoomCenter().y);\n    this.onEnterRoom(player);\n  };\n\n  enterLevelThroughDoor = (player: Player, door: Door, side?: number) => {\n    // console.log(door.linkedDoor.x, door.linkedDoor.y, door.x, door.y);\n    if (door.doorDir === door.linkedDoor.doorDir) {\n      door.opened = true;\n      player.moveSnap(door.x, door.y + 1);\n      setTimeout(() => {\n        player.direction = Direction.DOWN;\n      }, 150);\n    }\n    if (door instanceof Door && door.doorDir === Direction.UP) {\n      //if top door\n      door.opened = true;\n      player.moveNoSmooth(door.x, door.y + 1);\n    } else if (door instanceof Door && door.doorDir === Direction.DOWN) {\n      //if bottom door\n      player.moveNoSmooth(door.x, door.y - 1);\n    } else if (\n      door instanceof Door &&\n      [Direction.RIGHT, Direction.LEFT].includes(door.doorDir)\n    ) {\n      // if side door\n      player.moveNoSmooth(door.x + side, door.y);\n    }\n    this.onEnterRoom(player);\n  };\n\n  alertEnemiesOnEntry = () => {\n    for (const e of this.entities) {\n      if (e instanceof Enemy) e.lookForPlayer(false);\n    }\n  };\n\n  // #endregion\n\n  // #region LOGIC METHODS\n\n  tick = (player: Player) => {\n    this.updateLighting();\n    player.updateSlowMotion();\n    this.lastEnemyCount = this.entities.filter(\n      (e) => e instanceof Enemy,\n    ).length;\n    for (const h of this.hitwarnings) {\n      h.tick();\n    }\n    for (const p of this.projectiles) {\n      p.tick();\n    }\n\n    this.clearDeadStuff();\n\n    this.calculateWallInfo();\n    this.entities = this.entities.filter((e) => !e.dead);\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tick();\n      }\n    }\n\n    this.turn = TurnState.computerTurn;\n\n    //player.actionTab.setState(ActionState.WAIT);\n    //sets the action tab state to Ready\n    this.playerTurnTime = Date.now();\n    this.playerTicked = player;\n\n    // Update Beam Effects lighting\n\n    //console.log(\"updating lighting\");\n\n    this.updateLighting();\n\n    player.map.saveMapData();\n    this.clearDeadStuff();\n  };\n\n  computerTurn = () => {\n    // take computer turn\n    for (const e of this.entities) {\n      e.tick();\n    }\n    this.entities = this.entities.filter((e) => !e.dead);\n    for (const i of this.items) {\n      i.tick();\n    }\n\n    for (const h of this.hitwarnings) {\n      if (\n        !this.roomArray[h.x] ||\n        !this.roomArray[h.x][h.y] ||\n        this.roomArray[h.x][h.y].isSolid()\n      ) {\n        h.dead = true;\n      }\n      h.removeOverlapping();\n    }\n\n    for (const p of this.projectiles) {\n      if (\n        this.roomArray[p.x] &&\n        this.roomArray[p.x][p.y] &&\n        this.roomArray[p.x][p.y].isSolid()\n      )\n        p.dead = true;\n      for (const i in this.game.players) {\n        if (\n          this.level.rooms[this.game.players[i].levelID] === this &&\n          p.x === this.game.players[i].x &&\n          p.y === this.game.players[i].y\n        ) {\n          p.hitPlayer(this.game.players[i]);\n        }\n      }\n      for (const e of this.entities) {\n        if (p.x === e.x && p.y === e.y) {\n          p.hitEnemy(e);\n        }\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tickEnd();\n      }\n    }\n    this.entities = this.entities.filter((e) => !e.dead); // enemies may be killed by spiketrap\n\n    this.clearDeadStuff();\n\n    this.playerTicked.finishTick();\n\n    this.checkForNoEnemies();\n    //console.log(this.entities.filter((e) => e instanceof Enemy).length);\n\n    this.turn = TurnState.playerTurn;\n  };\n\n  update = () => {\n    if (this.turn == TurnState.computerTurn) {\n      if (\n        Date.now() - this.playerTurnTime >=\n        LevelConstants.COMPUTER_TURN_DELAY\n      ) {\n        this.computerTurn();\n      }\n    }\n  };\n\n  clearDeadStuff = () => {\n    this.deadEntities = this.deadEntities.filter((e) => !e.dead);\n    this.entities = this.entities.filter((e) => !e.dead);\n    this.projectiles = this.projectiles.filter((p) => !p.dead);\n    this.hitwarnings = this.hitwarnings.filter((h) => !h.dead);\n    this.particles = this.particles.filter((p) => !p.dead);\n  };\n\n  catchUp = () => {\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\n  };\n\n  tickHitWarnings = () => {\n    for (const h of this.hitwarnings) {\n      if (h.parent && (h.parent.dead || h.parent.unconscious)) {\n        h.tick();\n      }\n    }\n  };\n\n  // #endregion\n\n  // #region LIGHTING METHODS\n\n  fadeLighting = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        let visDiff = this.softVis[x][y] - this.vis[x][y];\n        let softVis = this.softVis[x][y];\n        let flag = false;\n        if (Math.abs(visDiff) > 0.01) flag = true;\n\n        if (!flag) continue;\n\n        visDiff *= 0.05 * delta;\n\n        softVis -= visDiff;\n\n        if (softVis < 0) softVis = 0;\n        if (softVis > 1) softVis = 1;\n\n        this.softVis[x][y] = softVis;\n\n        // if (this.softVis[x][y] < 0.01) this.softVis[x][y] = 0;\n      }\n    }\n  };\n\n  fadeRgb = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const [softR, softG, softB] = this.softCol[x][y];\n        const [targetR, targetG, targetB] = this.col[x][y];\n\n        // Calculate differences\n        let diffR = softR - targetR;\n        let diffG = softG - targetG;\n        let diffB = softB - targetB;\n\n        let flagR = false;\n        let flagG = false;\n        let flagB = false;\n        if (Math.abs(diffR) > 0.001) flagR = true;\n        if (Math.abs(diffG) > 0.001) flagG = true;\n        if (Math.abs(diffB) > 0.001) flagB = true;\n\n        if (!flagR && !flagG && !flagB) {\n          continue;\n        }\n\n        // Apply smoothing similar to fadeLighting\n        if (flagR) {\n          diffR *= 0.05 * delta;\n          this.softCol[x][y][0] = this.clamp(Math.round(softR - diffR), 0, 255);\n        }\n        if (flagG) {\n          diffG *= 0.05 * delta;\n          this.softCol[x][y][1] = this.clamp(Math.round(softG - diffG), 0, 255);\n        }\n        if (flagB) {\n          diffB *= 0.05 * delta;\n          this.softCol[x][y][2] = this.clamp(Math.round(softB - diffB), 0, 255);\n        }\n      }\n    }\n  };\n\n  resetDoorLightSources = () => {\n    this.doors.forEach((d) => {\n      d.lightSource.r = 0;\n      d.linkedDoor.lightSource.r = 0;\n    });\n  };\n\n  tileValuesToLightSource = (x: number, y: number, room: Room) => {\n    if (!room.roomArray[x]) return null;\n    if (!room.roomArray[x][y]) return null;\n    const color = room.col[x][y];\n    const brightness = (1 - room.vis[x][y]) / 4;\n    const radius = 9;\n    return { color, brightness, radius };\n  };\n\n  updateDoorLightSources = () => {\n    //works from inactive rooms onto their connected rooms\n    if (!this.active) return;\n\n    const directionOffsets = {\n      [Direction.UP]: { x: 0, y: -1 },\n      [Direction.DOWN]: { x: 0, y: 1 },\n      [Direction.LEFT]: { x: -1, y: 0 },\n      [Direction.RIGHT]: { x: 1, y: 0 },\n    };\n    let linkedDoors: Door[] = [];\n    this.doors.forEach((d) => {\n      if (d.linkedDoor && d.room.entered) linkedDoors.push(d.linkedDoor);\n    });\n\n    this.doors.forEach((d) => {\n      d.lightSource.b = 0.1;\n    });\n\n    for (const d of linkedDoors) {\n      d.lightSource.c = this.tileValuesToLightSource(\n        d.linkedDoor.x,\n        d.linkedDoor.y,\n        this,\n      ).color;\n      d.lightSource.b = this.tileValuesToLightSource(\n        d.linkedDoor.x,\n        d.linkedDoor.y,\n        this,\n      ).brightness;\n      d.lightSource.r = LevelConstants.LIGHTING_MAX_DISTANCE;\n    }\n\n    let connectedRooms: Set<Room> = new Set(\n      this.doors\n        .filter((d) => d && d.linkedDoor) // Ensure door and linkedDoor exist\n        .map((d) => d.linkedDoor.room)\n        .filter((r) => r), // Ensure room exists\n    );\n\n    for (const r of Array.from(connectedRooms)) {\n      if (r.entered) r.updateLighting();\n    }\n  };\n\n  updateLighting = () => {\n    if (!this.onScreen) return;\n    // Start timing the initial setup\n    //console.time(\"updateLighting: Initial Setup\");\n    this.updateDoorLightSources();\n\n    let oldVis = [];\n    let oldCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      oldVis[x] = [];\n      oldCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        oldVis[x][y] = this.vis[x][y];\n        oldCol[x][y] = this.col[x][y];\n\n        this.vis[x][y] = 1;\n        this.col[x][y] = [1, 1, 1];\n        this.renderBuffer[x][y] = [];\n      }\n    }\n    // End timing the initial setup\n    //console.timeEnd(\"updateLighting: Initial Setup\");\n\n    // Start timing the processing of light sources\n    //console.time(\"updateLighting: Process LightSources\");\n\n    for (const l of this.lightSources) {\n      if (l.shouldUpdate()) {\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          this.castTintAtAngle(i, l.x, l.y, l.r, l.c, l.b); // RGB color in sRGB\n        }\n      }\n    }\n\n    let lightingAngleStep = LevelConstants.LIGHTING_ANGLE_STEP;\n\n    for (const p in this.game.players) {\n      let player = this.game.players[p];\n      if (this === this.level.rooms[player.levelID]) {\n        //console.log(`i: ${player.angle}`);\n        for (let i = 0; i < 360; i += lightingAngleStep) {\n          let lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\n          let lightBrightness = 5;\n          if (player.lightEquipped) {\n            lightColor = LevelConstants.TORCH_LIGHT_COLOR;\n            lightBrightness = player.lightBrightness;\n          }\n          this.castTintAtAngle(\n            i,\n            player.x + 0.5,\n            player.y + 0.5,\n            /*\n            Math.min(\n              Math.max(\n                player.sightRadius - this.depth + 2,\n                Player.minSightRadius,\n              ),\n              10,\n            ),\n            */\n            LevelConstants.LIGHTING_MAX_DISTANCE,\n            lightColor, // RGB color in sRGB\n            lightBrightness, // intensity\n          );\n        }\n      }\n    }\n    // End timing the processing of player lighting\n    //console.timeEnd(\"updateLighting: Process Players\");\n\n    // Start timing the blending of colors\n    //console.time(\"updateLighting: Blend Colors Array\");\n    const roomX = this.roomX;\n    const roomY = this.roomY;\n    const width = this.width;\n    const height = this.height;\n    const renderBuffer = this.renderBuffer;\n\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.col[x][y] = this.blendColorsArray(renderBuffer[x][y]);\n      }\n    }\n    // End timing the blending of colors\n    //console.timeEnd(\"updateLighting: Blend Colors Array\");\n\n    // Start timing the conversion to luminance\n    //console.time(\"updateLighting: Convert to Luminance\");\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n    // End timing the conversion to luminance\n    //console.timeEnd(\"updateLighting: Convert to Luminance\");\n    this.updateDoorLightSources();\n  };\n\n  updateLightSources = (lightSource?: LightSource, remove?: boolean) => {\n    this.oldCol = [];\n    this.oldVis = [];\n    this.oldCol = this.col;\n    this.oldVis = this.vis;\n    if (lightSource) {\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n        if (!remove) {\n          this.castTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          ); // RGB color in sRGB\n        } else {\n          this.unCastTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          );\n        }\n      }\n    }\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.col[x][y] = this.blendColorsArray(this.renderBuffer[x][y]);\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n  };\n\n  revertLightSources = () => {\n    //console.log(\"reverting lighting\");\n    this.oldCol = [];\n    this.oldVis = [];\n    this.col = this.oldCol;\n    this.vis = this.oldVis;\n  };\n\n  /**\n   * Casts or uncategorizes a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast or uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   * @param action - 'cast' to add tint, 'unCast' to remove tint.\n   */\n  private processTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n    action: \"cast\" | \"unCast\" = \"cast\",\n  ) => {\n    const dx = Math.cos((angle * Math.PI) / 180);\n    const dy = Math.sin((angle * Math.PI) / 180);\n\n    // Convert input color from sRGB to linear RGB\n    const linearColor: [number, number, number] = [\n      this.sRGBToLinear(color[0]),\n      this.sRGBToLinear(color[1]),\n      this.sRGBToLinear(color[2]),\n    ];\n\n    for (\n      let i = 0;\n      i <= Math.min(LevelConstants.LIGHTING_MAX_DISTANCE, radius);\n      i++\n    ) {\n      const currentX = Math.floor(px + dx * i);\n      const currentY = Math.floor(py + dy * i);\n\n      if (!this.isPositionInRoom(currentX, currentY)) return; // Outside the room\n\n      const tile = this.roomArray[currentX][currentY];\n      if (tile.isOpaque()) {\n        return; // Stop processing through opaque tiles\n      } else if (Math.random() < 1 - tile.opacity) {\n        return;\n      }\n\n      // Handle i=0 separately to ensure correct intensity\n      let intensity: number;\n      if (i === 0) {\n        intensity = brightness * 0.1;\n      } else {\n        intensity = brightness / Math.E ** (i - 0.25);\n      }\n      if (intensity < 0.005) intensity = 0;\n\n      if (intensity <= 0) continue;\n\n      if (!this.renderBuffer[currentX]) {\n        this.renderBuffer[currentX] = [];\n      }\n      if (!this.renderBuffer[currentX][currentY]) {\n        this.renderBuffer[currentX][currentY] = [];\n      }\n\n      const weightedLinearColor: [number, number, number, number] = [\n        linearColor[0],\n        linearColor[1],\n        linearColor[2],\n        intensity,\n      ];\n\n      if (action === \"cast\") {\n        this.renderBuffer[currentX][currentY].push(weightedLinearColor);\n      } else if (action === \"unCast\") {\n        this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\n          currentY\n        ].filter(\n          (colorEntry) =>\n            !(\n              Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\n              Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\n              Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\n              Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\n            ),\n        );\n      }\n    }\n  };\n\n  /**\n   * Applies Gaussian blur to the specified offscreen canvas.\n   *\n   * @param {HTMLCanvasElement} canvas - The offscreen canvas to blur.\n   * @param {number} radius - The radius of the blur.\n   */\n  applyGaussianBlur(canvas: HTMLCanvasElement, radius: number): void {\n    const StackBlur = require(\"stackblur-canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      throw new Error(\"Failed to get canvas context for Gaussian blur.\");\n    }\n\n    // Get the image data from the canvas\n    const width = canvas.width;\n    const height = canvas.height;\n    //const imageData = ctx.getImageData(0, 0, width, height);\n    let r = radius;\n    if (!GameConstants.BLUR_ENABLED) r = 0;\n    // Apply StackBlur\n    StackBlur.canvasRGBA(canvas, 0, 0, width, height, Math.floor(r / 2));\n  }\n\n  /**\n   * Casts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  castTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(\n      angle,\n      px,\n      py,\n      radius,\n      color,\n      brightness / 3,\n      \"cast\",\n    );\n  };\n\n  /**\n   * Uncasts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  unCastTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(\n      angle,\n      px,\n      py,\n      radius,\n      color,\n      brightness / 3, // added this\n      \"unCast\",\n    );\n  };\n\n  private sRGBToLinear = (value: number): number => {\n    const normalized = value / 255;\n    if (normalized <= 0.04045) {\n      return normalized / 12.92;\n    } else {\n      return Math.pow((normalized + 0.055) / 1.055, 2.2);\n    }\n  };\n\n  private linearToSRGB = (value: number): number => {\n    if (value <= 0.0031308) {\n      return Math.round(12.92 * value * 255);\n    } else {\n      return Math.round(\n        (1.055 * Math.pow(value, 1 / 2.2 /*gamma*/) - 0.055) * 255,\n      );\n    }\n  };\n\n  clamp = (value: number, min: number = 0, max: number = 1): number => {\n    return Math.min(Math.max(value, min), max);\n  };\n\n  /**\n   * Blends an array of RGB colors into a single color without excessive darkness or clipping to white.\n   *\n   * @param colors - An array of RGB tuples to blend.\n   * @returns A single RGB tuple representing the blended color.\n   */\n  private blendColorsArray = (\n    colors: [red: number, green: number, blue: number, alpha: number][],\n  ): [red: number, green: number, blue: number] => {\n    if (colors.length === 0) return [0, 0, 0];\n\n    // Sum all color channels in linear RGB\n    const sum = colors.reduce(\n      (accumulator, color) => [\n        accumulator[0] + color[0] * color[3],\n        accumulator[1] + color[1] * color[3],\n        accumulator[2] + color[2] * color[3],\n      ],\n      [0, 0, 0],\n    );\n\n    // Apply scaling factor to manage overall brightness\n    const scalingFactor = 0.45 * 2.5; // Adjust as needed\n    const scaledSum = [\n      sum[0] * scalingFactor,\n      sum[1] * scalingFactor,\n      sum[2] * scalingFactor,\n    ];\n\n    // Clamp each channel to [0, 1] to prevent overflow\n    const clampedSum: [number, number, number] = [\n      this.clamp(scaledSum[0], 0, 1),\n      this.clamp(scaledSum[1], 0, 1),\n      this.clamp(scaledSum[2], 0, 1),\n    ];\n    // Convert back to sRGB\n    return [\n      this.linearToSRGB(clampedSum[0]),\n      this.linearToSRGB(clampedSum[1]),\n      this.linearToSRGB(clampedSum[2]),\n    ];\n  };\n\n  rgbToLuminance = (color: [number, number, number]): number => {\n    //map to 1-0 range\n    return 1 - (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  };\n\n  draw = (delta: number) => {\n    if (this.active) {\n      HitWarning.updateFrame(delta);\n    }\n    this.fadeRgb(delta);\n    this.fadeLighting(delta);\n  };\n  // added a multiplier to the input rgb values to avoid clipping to white\n  drawColorLayer = () => {\n    Game.ctx.save();\n    // Clear the offscreen color canvas\n    this.colorOffscreenCtx.clearRect(\n      0,\n      0,\n      this.colorOffscreenCanvas.width,\n      this.colorOffscreenCanvas.height,\n    );\n\n    let lastFillStyle = \"\";\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    // Draw all color rectangles without any filters\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const [r, g, b] = this.softCol[x][y];\n        if (r === 0 && g === 0 && b === 0) continue; // Skip if no color\n\n        const fillStyle = `rgba(${r}, ${g}, ${b}, 1)`;\n\n        if (fillStyle !== lastFillStyle) {\n          this.colorOffscreenCtx.fillStyle = fillStyle;\n          lastFillStyle = fillStyle;\n        }\n\n        this.colorOffscreenCtx.fillRect(\n          (x - this.roomX + offsetX) * GameConstants.TILESIZE,\n          (y - this.roomY + offsetY) * GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n        );\n      }\n    }\n\n    // Draw the blurred color layer directly without masking\n    Game.ctx.globalCompositeOperation =\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\n    //Game.ctx.globalCompositeOperation = \"source-over\";\n    Game.ctx.globalAlpha = 0.6; // 0.6;\n    if (!GameConstants.ctxBlurEnabled) {\n      this.applyGaussianBlur(this.colorOffscreenCanvas, 12);\n    } else {\n      Game.ctx.filter = \"blur(6px)\";\n    }\n    Game.ctx.drawImage(\n      this.colorOffscreenCanvas,\n      (this.roomX - offsetX) * GameConstants.TILESIZE,\n      (this.roomY - offsetY) * GameConstants.TILESIZE,\n    );\n\n    //draw slight haze\n    Game.ctx.globalCompositeOperation = \"lighten\";\n    Game.ctx.globalAlpha = 0.05;\n    if (!GameConstants.ctxBlurEnabled)\n      this.applyGaussianBlur(this.colorOffscreenCanvas, 24);\n    else Game.ctx.filter = \"blur(12px)\";\n    Game.ctx.drawImage(\n      this.colorOffscreenCanvas,\n      (this.roomX - offsetX) * GameConstants.TILESIZE,\n      (this.roomY - offsetY) * GameConstants.TILESIZE,\n    );\n    this.colorOffscreenCtx.clearRect(\n      0,\n      0,\n      this.colorOffscreenCanvas.width,\n      this.colorOffscreenCanvas.height,\n    );\n\n    Game.ctx.restore();\n  };\n\n  drawShadeLayer = () => {\n    if (this.game.isMobile) return;\n    if (!this.onScreen) return;\n    Game.ctx.save();\n    // Clear the offscreen shade canvas\n    this.shadeOffscreenCtx.clearRect(\n      0,\n      0,\n      this.shadeOffscreenCanvas.width,\n      this.shadeOffscreenCanvas.height,\n    );\n\n    let lastFillStyle = \"\";\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    // Draw all shade rectangles without any filters\n    for (let x = this.roomX - 2; x < this.roomX + this.width + 4; x++) {\n      for (let y = this.roomY - 2; y < this.roomY + this.height + 4; y++) {\n        let alpha =\n          this.softVis[x] && this.softVis[x][y] ? this.softVis[x][y] : 0;\n        if (\n          this.roomArray[x] &&\n          this.roomArray[x][y] &&\n          this.roomArray[x][y] instanceof WallTorch\n        )\n          continue;\n        //if (alpha === 0) continue; // Skip if no visibility adjustment\n        let factor = !GameConstants.SMOOTH_LIGHTING ? 2 : 0.5;\n        let computedAlpha = alpha ** factor;\n        // if (computedAlpha <= 0) continue; // Skip if alpha is effectively zero\n\n        let fillX = x;\n        let fillY = y;\n        let fillWidth = 1;\n        let fillHeight = 1;\n        if (\n          this.roomArray[x] &&\n          this.roomArray[x][y] &&\n          this.roomArray[x][y] instanceof Wall\n        ) {\n          const wall = this.roomArray[x][y] as Wall;\n          if (!this.innerWalls.includes(wall)) {\n            switch (wall.direction) {\n              case Direction.UP:\n                fillY = y - 0.5;\n                fillHeight = 0.5;\n                break;\n              case Direction.DOWN:\n                fillY = y - 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.LEFT:\n                fillX = x + 0.5;\n                fillWidth = 0.5;\n                break;\n              case Direction.RIGHT:\n                fillX = x + 0;\n                fillWidth = 0.5;\n                break;\n              case Direction.DOWN_LEFT:\n                fillX = x + 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.DOWN_RIGHT:\n                fillX = x;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.UP_LEFT:\n                fillX = x + 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 0.5;\n                break;\n              case Direction.UP_RIGHT:\n                fillX = x - 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 0.5;\n                break;\n            }\n          }\n        }\n        /*\n        if (\n          this.roomArray[x] &&\n          this.roomArray[x][y] &&\n          this.roomArray[x][y] instanceof Door &&\n          !(this.roomArray[x][y] as Door).opened &&\n          !(this.roomArray[x][y] as Door).linkedDoor.room.entered\n        ) {\n          //computedAlpha = 1;\n          switch ((this.roomArray[x][y] as Door).doorDir) {\n            case Direction.UP:\n              fillY = y - 0.75;\n              fillX = x - 0.5;\n              fillHeight = 2;\n              fillWidth = 1.5;\n\n              break;\n            case Direction.DOWN:\n              fillX = x;\n              fillY = y + 0.5;\n              fillHeight = 2;\n              fillWidth = 1.5;\n              break;\n            case Direction.LEFT:\n              fillX = x;\n              fillY = y - 0.5;\n              fillWidth = 2;\n              fillHeight = 2;\n              break;\n            case Direction.RIGHT:\n              fillX = x - 0.5;\n              fillY = y - 0.5;\n              fillWidth = 2;\n              fillHeight = 2;\n              break;\n          }\n        }\n        */\n\n        const fillStyle = `rgba(0, 0, 0, ${computedAlpha})`;\n\n        if (fillStyle !== lastFillStyle) {\n          this.shadeOffscreenCtx.fillStyle = fillStyle;\n          lastFillStyle = fillStyle;\n        }\n\n        fillY += 1;\n        fillX += 1;\n        this.shadeOffscreenCtx.fillRect(\n          (fillX - this.roomX + offsetX) * GameConstants.TILESIZE,\n          (fillY - this.roomY + offsetY) * GameConstants.TILESIZE,\n          fillWidth * GameConstants.TILESIZE,\n          fillHeight * GameConstants.TILESIZE,\n        );\n      }\n    }\n\n    // Draw the blurred shade layer directly without masking\n    Game.ctx.globalCompositeOperation = \"source-over\";\n    Game.ctx.globalAlpha = 1;\n    if (!GameConstants.ctxBlurEnabled)\n      this.applyGaussianBlur(this.shadeOffscreenCanvas, 10);\n    else Game.ctx.filter = \"blur(5px)\";\n    Game.ctx.drawImage(\n      this.shadeOffscreenCanvas,\n      (this.roomX - offsetX - 1) * GameConstants.TILESIZE,\n      (this.roomY - offsetY - 1) * GameConstants.TILESIZE,\n    );\n\n    Game.ctx.restore();\n  };\n\n  drawBloomLayer = (delta: number) => {\n    if (this.game.isMobile) return;\n    if (!this.onScreen) return;\n    Game.ctx.save();\n    // Clear the offscreen shade canvas\n    this.bloomOffscreenCtx.clearRect(\n      0,\n      0,\n      this.bloomOffscreenCanvas.width,\n      this.bloomOffscreenCanvas.height,\n    );\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    let lastFillStyle = \"\";\n\n    // Draw all shade rectangles without any filters\n    const allEntities = this.entities.concat(this.deadEntities);\n    if (allEntities.length > 0)\n      for (let e of this.entities) {\n        if (e.hasBloom) {\n          e.updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[e.x][e.y]) * e.softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = e.bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (e.x - e.drawX - this.roomX + offsetX + 0.5 - e.bloomSize / 2) *\n              GameConstants.TILESIZE,\n            (e.y -\n              e.drawY -\n              this.roomY -\n              0.5 +\n              offsetY +\n              0.5 -\n              e.bloomSize / 2) *\n              GameConstants.TILESIZE +\n              e.bloomOffsetY,\n            GameConstants.TILESIZE * e.bloomSize,\n            GameConstants.TILESIZE * e.bloomSize,\n          );\n        }\n      }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.roomArray[x][y].hasBloom) {\n          this.roomArray[x][y].updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[x][y]) * this.roomArray[x][y].softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = this.roomArray[x][y].bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (x - this.roomX + offsetX) * GameConstants.TILESIZE,\n            (y - this.roomY - 0.25 + offsetY) * GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE * 0.75,\n          );\n        }\n      }\n    }\n\n    if (this.projectiles.length > 0)\n      for (let p of this.projectiles) {\n        if (p.hasBloom) {\n          p.updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[p.x][p.y]) * p.softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = p.bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (p.x - this.roomX + offsetX) * GameConstants.TILESIZE,\n            (p.y - this.roomY + offsetY) * GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n          );\n        }\n      }\n\n    // Draw the blurred shade layer directly without masking\n    if (!GameConstants.ctxBlurEnabled)\n      this.applyGaussianBlur(this.bloomOffscreenCanvas, 16);\n    else Game.ctx.filter = \"blur(8px)\";\n    Game.ctx.globalCompositeOperation = \"screen\";\n\n    Game.ctx.globalAlpha = 1;\n    Game.ctx.drawImage(\n      this.bloomOffscreenCanvas,\n      (this.roomX - offsetX) * GameConstants.TILESIZE,\n      (this.roomY - offsetY) * GameConstants.TILESIZE,\n    );\n    this.bloomOffscreenCtx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    this.bloomOffscreenCtx.fillRect(\n      0,\n      0,\n      this.bloomOffscreenCanvas.width,\n      this.bloomOffscreenCanvas.height,\n    );\n    Game.ctx.restore();\n  };\n\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\n    Game.ctx.save();\n    let tiles = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawUnderPlayer(delta);\n        tiles.push(this.roomArray[x][y]);\n      }\n    }\n\n    let drawables = new Array<Drawable>();\n    let entities = new Array<Entity>();\n    entities = entities.concat(this.entities, this.deadEntities);\n\n    drawables = drawables.concat(\n      tiles,\n      this.decorations,\n      entities,\n      this.hitwarnings,\n      this.projectiles,\n      this.particles,\n      this.items,\n    );\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this) {\n        if (\n          !(\n            skipLocalPlayer &&\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\n          )\n        )\n          drawables.push(this.game.players[i]);\n      }\n    }\n\n    drawables.sort((a, b) => {\n      if (a instanceof Floor || a instanceof SpawnFloor) {\n        return -1;\n      } else if (b instanceof Floor || b instanceof SpawnFloor) {\n        return 1;\n      } else if (a instanceof Decoration) {\n        return -1;\n      } else if (b instanceof Decoration) {\n        return 1;\n      }\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\n        if (a instanceof Player) {\n          return 1;\n        } else if (b instanceof Player) {\n          return -1;\n        } else if (a instanceof Entity) {\n          return 1;\n        } else if (b instanceof Entity) {\n          return -1;\n        } else return 0;\n      } else {\n        return a.drawableY - b.drawableY;\n      }\n    });\n\n    for (const d of drawables) {\n      d.draw(delta);\n    }\n\n    this.drawAbovePlayer(delta);\n    for (const i of this.items) {\n      i.drawTopLayer(delta);\n    }\n    Game.ctx.restore();\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        //if (this.softVis[x][y] < 1) this.roomArray[x][y].drawAbovePlayer(delta);\n      }\n    }\n  };\n\n  drawShade = (delta: number) => {\n    Game.ctx.save();\n    let bestSightRadius = 0;\n    for (const p in this.game.players) {\n      Game.ctx.globalCompositeOperation = \"source-over\"; // \"soft-light\";\n      Game.ctx.globalAlpha = 1;\n      if (\n        this.level.rooms[this.game.players[p].levelID] === this &&\n        this.game.players[p].defaultSightRadius > bestSightRadius\n      ) {\n        bestSightRadius = this.game.players[p].defaultSightRadius;\n      }\n    }\n    let shadingAlpha = Math.max(0, Math.min(0.8, 2 / bestSightRadius));\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = 0.25; //this.shadeOpacity();\n      //Game.ctx.resetTransform();\n      //Game.ctx.fillStyle = \"#4a5d23\"; // hex dark misty green\n      Game.ctx.fillStyle = this.shadeColor;\n      Game.ctx.fillRect(\n        this.roomX * GameConstants.TILESIZE,\n        (this.roomY - 1) * GameConstants.TILESIZE,\n        this.width * GameConstants.TILESIZE,\n        (this.height + 1) * GameConstants.TILESIZE,\n      );\n      Game.ctx.globalAlpha = 1;\n      Game.ctx.globalCompositeOperation = \"source-over\";\n    }\n    Game.ctx.restore();\n  };\n\n  shadeOpacity = () => {\n    if (this.active) {\n      return 0.25;\n    } else {\n      return 0.25;\n    }\n  };\n\n  drawOverShade = (delta: number) => {\n    Game.ctx.save();\n    for (const e of this.entities) {\n      e.drawTopLayer(delta); // health bars\n    }\n\n    for (const p of this.projectiles) {\n      p.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"overlay\";\n    for (const h of this.hitwarnings) {\n      h.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"source-over\";\n\n    for (const s of this.particles) {\n      s.drawTopLayer(delta);\n    }\n    // draw over dithered shading\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawAboveShading(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  // for stuff rendered on top of the player\n  drawTopLayer = (delta: number) => {\n    Game.ctx.save();\n    // gui stuff\n\n    // room name\n    let old = Game.ctx.font;\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      this.message,\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\n      5,\n    );\n    Game.ctx.font = old;\n    Game.ctx.restore();\n  };\n\n  // src/room.ts\n  createWallMask = (): HTMLCanvasElement => {\n    const maskCanvas = document.createElement(\"canvas\");\n    this.maskCanvases.push(maskCanvas); // <-- Track the canvas\n    maskCanvas.width = this.width * GameConstants.TILESIZE;\n    maskCanvas.height = this.height * GameConstants.TILESIZE;\n    const ctx = maskCanvas.getContext(\"2d\");\n    if (!ctx) {\n      throw new Error(\"Failed to create mask canvas context.\");\n    }\n\n    // Fill the canvas with opaque color\n    ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n    ctx.fillRect(\n      this.roomX * GameConstants.TILESIZE,\n      this.roomY * GameConstants.TILESIZE,\n      maskCanvas.width,\n      maskCanvas.height,\n    );\n\n    // Make wall areas transparent\n    /*\n    for (let x = this.roomX - 1; x < this.roomX + 1 + this.width; x++) {\n      for (let y = this.roomY - 1; y < this.roomY + 1 + this.height; y++) {\n        const tile = this.getTile(x, y);\n        if (tile instanceof Wall) {\n          let offsetY = 0;\n          if (tile.direction === Direction.DOWN) offsetY = 1;\n          ctx.clearRect(\n            (x - this.roomX) * GameConstants.TILESIZE,\n            (y - 1 - this.roomY) * GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n          );\n        }\n      }\n    }\n      */\n    return maskCanvas;\n  };\n\n  //calculate wall info for proper wall rendering\n  calculateWallInfo() {\n    this.wallInfo.clear();\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const tile = this.getTile(x, y);\n        if (tile instanceof Wall || tile instanceof WallTorch) {\n          this.walls.push(tile);\n          const isTopWall = y === this.roomY;\n          const isBottomWall = y === this.roomY + this.height - 1;\n          const isLeftWall = x === this.roomX;\n          const isRightWall = x === this.roomX + this.width - 1;\n          const isInnerWall =\n            !isTopWall && !isBottomWall && !isLeftWall && !isRightWall;\n          const isBelowDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y + 1)?.isDoor;\n          const isAboveDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y - 1)?.isDoor;\n          const isDoorWall =\n            y < this.roomY + this.height && this.getTile(x, y + 1)?.isDoor;\n\n          let innerWallType = null;\n          if (isInnerWall) {\n            const hasWallAbove = this.getTile(x, y - 1) instanceof Wall;\n            const hasWallBelow = this.getTile(x, y + 1) instanceof Wall;\n\n            if (!hasWallAbove && hasWallBelow) {\n              innerWallType = \"topInner\";\n            } else if (hasWallAbove && !hasWallBelow) {\n              innerWallType = \"bottomInner\";\n            } else if (hasWallAbove && hasWallBelow) {\n              innerWallType = \"surroundedInner\";\n            } else {\n              innerWallType = \"isolatedInner\";\n            }\n          }\n\n          this.wallInfo.set(`${x},${y}`, {\n            isTopWall,\n            isBottomWall,\n            isLeftWall,\n            isRightWall,\n            isInnerWall,\n            isBelowDoorWall,\n            isDoorWall,\n            innerWallType,\n            isAboveDoorWall,\n            shouldDrawBottom:\n              isDoorWall ||\n              isBelowDoorWall ||\n              (isTopWall && !isLeftWall && !isRightWall) ||\n              isInnerWall,\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and returns the darkest and lightest tiles in the room based on their visibility.\n   * Loops through the roomArray, sums all the vis values, sorts them, and identifies the extremes.\n   *\n   * @returns An object containing the darkest and lightest tiles with their coordinates and vis values.\n   */\n  getExtremeLuminance = (): {\n    darkest: { x: number; y: number; vis: number } | null;\n    lightest: { x: number; y: number; vis: number } | null;\n  } => {\n    const visValues: { x: number; y: number; vis: number }[] = [];\n\n    // Loop through each tile in the room\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.vis[x] && this.vis[x][y] !== undefined) {\n          visValues.push({ x, y, vis: this.vis[x][y] });\n        }\n      }\n    }\n\n    if (visValues.length === 0) {\n      return { darkest: null, lightest: null };\n    }\n\n    // Sort the vis values in ascending order\n    visValues.sort((a, b) => a.vis - b.vis);\n\n    return {\n      darkest: visValues[visValues.length - 1],\n      lightest: visValues[0],\n    };\n  };\n\n  /**\n   * Finds and returns the darkest and lightest tiles adjacent to a given point.\n   * It checks the tiles above, below, to the left, and to the right of the specified point.\n   *\n   * @param px - The x-coordinate of the reference point.\n   * @param py - The y-coordinate of the reference point.\n   * @returns An object containing the darkest and lightest adjacent tiles with their coordinates and vis values,\n   *          or null if no valid adjacent tiles are found.\n   */\n  getExtremeLuminanceFromPoint = (\n    px: number,\n    py: number,\n  ): {\n    darkest: { x: number; y: number; vis: number } | null;\n    lightest: { x: number; y: number; vis: number } | null;\n  } => {\n    const adjacentPositions = [\n      { x: px, y: py - 1 }, // Up\n      { x: px, y: py + 1 }, // Down\n      { x: px - 1, y: py }, // Left\n      { x: px + 1, y: py }, // Right\n    ];\n\n    const visValues: { x: number; y: number; vis: number }[] = [];\n\n    adjacentPositions.forEach((pos) => {\n      const { x, y } = pos;\n      if (this.vis[x] && this.vis[x][y] !== undefined) {\n        if (this.roomArray[x] && this.roomArray[x][y]) {\n          if (this.roomArray[x][y] instanceof Floor) {\n            visValues.push({ x, y, vis: this.vis[x][y] });\n          }\n        }\n      }\n    });\n\n    if (visValues.length === 0) {\n      return { darkest: null, lightest: null };\n    }\n\n    // Sort the vis values in ascending order\n    visValues.sort((a, b) => a.vis - b.vis);\n\n    return {\n      darkest: visValues[visValues.length - 1],\n      lightest: visValues[0],\n    };\n  };\n\n  getAverageLuminance = (): number => {\n    let total = 0;\n    let count = 0;\n    for (let x = this.roomX - 2; x <= this.roomX + 2; x++) {\n      if (this.roomArray[x] && this.roomArray[x][this.roomY]) {\n        for (let y = this.roomY - 2; y <= this.roomY + 2; y++) {\n          if (this.vis[x][y]) {\n            total += this.vis[x][y];\n            count++;\n          }\n        }\n      }\n    }\n    return total / count;\n  };\n\n  // #endregion\n\n  // #region UTILITIES\n\n  private pointInside(\n    x: number,\n    y: number,\n    rX: number,\n    rY: number,\n    rW: number,\n    rH: number,\n  ): boolean {\n    if (x < rX || x >= rX + rW) return false;\n    if (y < rY || y >= rY + rH) return false;\n    return true;\n  }\n\n  tileInside = (tileX: number, tileY: number): boolean => {\n    return this.pointInside(\n      tileX,\n      tileY,\n      this.roomX,\n      this.roomY,\n      this.width,\n      this.height,\n    );\n  };\n\n  getEmptyTiles = (): Tile[] => {\n    let returnVal: Tile[] = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (\n          !this.roomArray[x][y].isSolid() &&\n          !(this.roomArray[x][y] instanceof SpikeTrap) &&\n          !(this.roomArray[x][y] instanceof SpawnFloor) &&\n          !(this.roomArray[x][y] instanceof DownLadder)\n        ) {\n          returnVal.push(this.roomArray[x][y]);\n        }\n      }\n    }\n    for (const e of this.entities) {\n      returnVal = returnVal.filter((t) => !e.pointIn(t.x, t.y));\n    }\n    return returnVal;\n  };\n\n  getTile = (x: number, y: number) => {\n    if (this.roomArray[x]) return this.roomArray[x][y];\n    else return undefined;\n  };\n\n  checkForNoEnemies = () => {\n    let enemies = this.entities.filter((e) => e instanceof Enemy);\n    if (enemies.length === 0 && this.lastEnemyCount > 0) {\n      // if (this.doors[0].type === DoorType.GUARDEDDOOR) {\n      this.doors.forEach((d) => {\n        if (d.type === DoorType.GUARDEDDOOR) {\n          d.unGuard();\n          this.game.pushMessage(\n            \"The foes have been slain and the door allows you passage.\",\n          );\n        }\n      });\n    }\n  };\n\n  // This pattern appears in multiple methods like addVendingMachine, addChests, addSpikes, etc.\n  private getRandomEmptyPosition(tiles: Tile[]): { x: number; y: number } {\n    if (tiles.length === 0) return null;\n    const tile = tiles.splice(\n      Game.rand(0, tiles.length - 1, Random.rand),\n      1,\n    )[0];\n    return { x: tile.x, y: tile.y };\n  }\n\n  // Used in populateUpLadder, populateDownLadder, populateRopeHole, populateRopeCave\n  private getRoomCenter(): { x: number; y: number } {\n    return {\n      x: Math.floor(this.roomX + this.width / 2),\n      y: Math.floor(this.roomY + this.height / 2),\n    };\n  }\n\n  // Used in multiple methods including castShadowsAtAngle\n  isPositionInRoom(x: number, y: number): boolean {\n    return !(\n      Math.floor(x) < this.roomX ||\n      Math.floor(x) >= this.roomX + this.width ||\n      Math.floor(y) < this.roomY ||\n      Math.floor(y) >= this.roomY + this.height\n    );\n  }\n\n  pathIsBlockedBy(tile: Tile, otherTile: Tile): Entity[] {\n    const entities = [];\n    if (tile.isSolid()) entities.push(tile);\n    if (otherTile.isSolid()) entities.push(otherTile);\n    return entities;\n  }\n\n  // checks for obstructions between doors and finds paths avoiding obstacles.\n\n  removeDoorObstructions = () => {\n    let obstacles = [];\n    for (const door of this.doors) {\n      for (const otherDoor of this.doors) {\n        if (door === otherDoor || door === null || otherDoor === null) break;\n        const pathObstacles = this.findPath(door, otherDoor);\n        if (pathObstacles.length > 0) {\n        }\n        obstacles.push(...pathObstacles);\n      }\n    }\n    if (obstacles.length > 0) {\n      for (let obstacle of obstacles) {\n        // console.log(`Removing obstacle at (${obstacle.x},${obstacle.y})`);\n        this.entities = this.entities.filter((e) => e !== obstacle);\n        obstacle = null;\n      }\n    }\n  };\n\n  // avoid blocking doorways with unbreakable entities\n  findPath = (startTile: Tile, targetTile: Tile): Array<Entity> => {\n    let disablePositions = Array<astar.Position>();\n    let obstacleCandidates = [];\n\n    for (const e of this.entities) {\n      if (e instanceof VendingMachine || e instanceof Rock) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n        obstacleCandidates.push(e);\n      }\n    }\n\n    // Create a grid of the room\n    let grid = [];\n    for (let x = 0; x < this.roomX + this.width; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.roomY + this.height; y++) {\n        if (this.roomArray[x] && this.roomArray[x][y])\n          grid[x][y] = this.roomArray[x][y];\n        else grid[x][y] = false;\n      }\n    }\n\n    let moves = astar.AStar.search(\n      grid,\n      startTile,\n      targetTile,\n      disablePositions,\n      false,\n      false,\n      false,\n    );\n    if (moves.length === 0) {\n      return obstacleCandidates;\n    } else {\n      return [];\n    }\n  };\n\n  // #endregion\n\n  // #region MISC\n\n  /**\n   * Adds a new BeamEffect to the room.\n   *\n   * @param x1 - Starting tile X coordinate.\n   * @param y1 - Starting tile Y coordinate.\n   * @param x2 - Ending tile X coordinate.\n   * @param y2 - Ending tile Y coordinate.\n   */\n  public addBeamEffect(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    parent: Entity,\n  ): void {\n    const beam = new BeamEffect(x1, y1, x2, y2, parent);\n    this.beamEffects.push(beam);\n  }\n\n  public async changeReverb(newImpulsePath: string) {\n    await ReverbEngine.setReverbImpulse(newImpulsePath);\n  }\n  get roomArea() {\n    let area = (this.width - 2) * (this.height - 2);\n    let openTiles = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (this.roomArray[x][y] instanceof Floor) openTiles.push({ x, y });\n      }\n    }\n    //console.log(area, openTiles.length);\n    return openTiles.length;\n  }\n  /**\n   * Determines if the room is currently on screen.\n   * Uses a buffer of 2 tiles beyond the room's dimensions to account for partial visibility.\n   *\n   * @returns {boolean} - True if the room is on screen, otherwise false.\n   */\n  public roomOnScreen(player: Player) {\n    const tileSize = GameConstants.TILESIZE;\n\n    // Calculate room boundaries with a buffer of 2 tiles\n    const roomLeft = (this.roomX - 2) * tileSize;\n    const roomRight = (this.roomX + this.width + 2) * tileSize;\n    const roomTop = (this.roomY - 2) * tileSize;\n    const roomBottom = (this.roomY + this.height + 2) * tileSize;\n\n    // Convert player position from tiles to pixels\n    const playerPosX = player.x * tileSize;\n    const playerPosY = player.y * tileSize;\n\n    // Calculate camera position in pixels\n    const cameraX =\n      playerPosX -\n      player.drawX +\n      0.5 * tileSize -\n      0.5 * GameConstants.WIDTH -\n      this.game.screenShakeX; // X-coordinate of the camera's top-left corner\n    const cameraY =\n      playerPosY -\n      player.drawY +\n      0.5 * tileSize -\n      0.5 * GameConstants.HEIGHT - // Corrected from WIDTH to HEIGHT\n      this.game.screenShakeY; // Y-coordinate of the camera's top-left corner\n    const cameraWidth = GameConstants.WIDTH; // Corrected from innerWidth\n    const cameraHeight = GameConstants.HEIGHT; // Corrected from innerHeight\n\n    // Define the camera's boundaries\n    const cameraLeft = cameraX;\n    const cameraRight = cameraX + cameraWidth;\n    const cameraTop = cameraY;\n    const cameraBottom = cameraY + cameraHeight;\n\n    // Check if the room's boundaries overlap with the camera's view\n    const isOverlapping = !(\n      roomRight < cameraLeft ||\n      roomLeft > cameraRight ||\n      roomBottom < cameraTop ||\n      roomTop > cameraBottom\n    );\n\n    this.onScreen = isOverlapping;\n  }\n\n  private setReverb() {\n    const roomArea = this.roomArea;\n    if (roomArea < 10) {\n      this.changeReverb(`res/SFX/impulses/small.mp3`);\n    } else if (roomArea < 55) {\n      this.changeReverb(`res/SFX/impulses/medium.mp3`);\n    } else {\n      this.changeReverb(`res/SFX/impulses/large.mp3`);\n    }\n  }\n\n  // #endregion\n\n  /**\n   * Adds a door with offset to prevent overlapping doors.\n   * If a door already exists at the desired (x, y) position, it offsets the door randomly to either side.\n   * Ensures the new door is at least one tile away from the room's edge based on its direction.\n   *\n   * @param x - The x-coordinate for the door placement.\n   * @param y - The y-coordinate for the door placement.\n   * @param room - The Room object where the door is being placed. Defaults to the current room.\n   * @param tunnelDoor - Whether the door is a tunnel door. Defaults to false.\n   * @returns The created Door object or null if placement failed.\n   */\n  addDoorWithOffset = (\n    x: number,\n    y: number,\n    room: Room = this,\n    tunnelDoor: boolean = false,\n  ) => {\n    // Check if a door already exists at the desired position\n    if (room.roomArray[x]?.[y] instanceof Door) {\n      // Determine the direction based on the door's position\n      let direction: Direction | null = null;\n      if (x === room.roomX) {\n        direction = Direction.RIGHT;\n      } else if (x === room.roomX + room.width - 1) {\n        direction = Direction.LEFT;\n      } else if (y === room.roomY) {\n        direction = Direction.DOWN;\n      } else if (y === room.roomY + room.height - 1) {\n        direction = Direction.UP;\n      }\n\n      if (!direction) {\n        // console.log(\"Invalid door position.\");\n        return null;\n      }\n\n      // Define possible offset adjustments based on door direction\n      const offsetOptions: Array<{ dx: number; dy: number }> = [];\n      switch (direction) {\n        case Direction.RIGHT | Direction.LEFT:\n          // Offsets along the y-axis for vertical walls\n          offsetOptions.push({ dx: 0, dy: 1 }, { dx: 0, dy: -1 });\n          break;\n        case Direction.UP | Direction.DOWN:\n          // Offsets along the x-axis for horizontal walls\n          offsetOptions.push({ dx: 1, dy: 0 }, { dx: -1, dy: 0 });\n          break;\n      }\n\n      // Shuffle the offset options to randomize placement\n      const shuffledOffsets = offsetOptions.sort(() => Math.random() - 0.5);\n\n      for (const offset of shuffledOffsets) {\n        const newX = x + offset.dx;\n        const newY = y + offset.dy;\n\n        // Ensure the new position is within bounds and not on the edge\n        const isWithinBounds =\n          newX > room.roomX &&\n          newX < room.roomX + room.width - 1 &&\n          newY > room.roomY &&\n          newY < room.roomY + room.height - 1;\n\n        if (isWithinBounds && !(room.roomArray[newX]?.[newY] instanceof Door)) {\n          // Offset the door placement\n          return room.addDoor(newX, newY, room, tunnelDoor);\n        }\n      }\n\n      return null;\n    }\n\n    // If no door exists at the desired position, place it normally\n    return room.addDoor(x, y, room, tunnelDoor);\n  };\n\n  /**\n   * Finds all wall tiles that do not have a door in them or adjacent to them.\n   * @returns An array of wall tiles without doors or adjacent doors.\n   */\n  getEmptyWall(): Wall[] {\n    const emptyWalls: Wall[] = [];\n\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY - 1; y < this.roomY + this.height - 1; y++) {\n        const tile = this.roomArray[x][y];\n\n        if (tile instanceof Wall || tile instanceof WallTorch) {\n          // Check if the current wall tile is not a door\n          if (!(tile instanceof Door)) {\n            // Check adjacent tiles for doors\n            const adjacentTiles = [\n              this.roomArray[x + 1]?.[y],\n              this.roomArray[x - 1]?.[y],\n              this.roomArray[x]?.[y + 1],\n              this.roomArray[x]?.[y - 1],\n            ];\n\n            const hasAdjacentDoor = adjacentTiles.some(\n              (adjTile) => adjTile instanceof Door,\n            );\n\n            if (!hasAdjacentDoor) {\n              emptyWalls.push(tile);\n            }\n          }\n        }\n      }\n    }\n    return emptyWalls;\n  }\n\n  pointExists = (x: number, y: number) => {\n    return this.roomArray[x] && this.roomArray[x][y];\n  };\n\n  /**\n   * Removes a specified empty wall from the room.\n   * @param wall - The wall tile to remove.\n   * @returns An object containing the x and y coordinates of the removed wall.\n   */\n  removeEmptyWall(wall: Wall): { x: number; y: number } | null {\n    if (!(wall instanceof Wall)) return null;\n\n    const { x, y } = wall;\n\n    // Replace the wall with a Floor tile to maintain room integrity\n    this.roomArray[x][y] = new Floor(this, x, y);\n\n    // Remove from innerWalls or outerWalls if applicable\n    const initialInnerWallsCount = this.innerWalls.length;\n    this.innerWalls = this.innerWalls.filter((w) => w !== wall);\n    const finalInnerWallsCount = this.innerWalls.length;\n\n    return { x, y };\n  }\n\n  /**\n   * Places a VendingMachine in an empty wall.\n   */\n  placeVendingMachineInWall(): void {\n    const emptyWalls = this.getEmptyWall();\n    if (emptyWalls.length === 0) return;\n\n    // Select a random empty wall\n    const selectedWall = Game.randTable(emptyWalls, Random.rand);\n    if (!selectedWall) return;\n\n    // Remove the selected wall\n    const removedWallInfo = this.removeEmptyWall(selectedWall);\n    if (!removedWallInfo) return;\n\n    const { x, y } = removedWallInfo;\n\n    // Create and add the VendingMachine\n    this.addVendingMachine(Random.rand, x, y);\n  }\n}\n","import { Game } from \"./game\";\r\nimport { ReverbEngine } from \"./reverb\";\r\n\r\nexport class Sound {\r\n  static playerStoneFootsteps: Array<HTMLAudioElement>;\r\n  static enemyFootsteps: Array<HTMLAudioElement>;\r\n  static hitSounds: Array<HTMLAudioElement>;\r\n  static enemySpawnSound: HTMLAudioElement;\r\n  static chestSounds: Array<HTMLAudioElement>;\r\n  static coinPickupSounds: Array<HTMLAudioElement>;\r\n  static miningSounds: Array<HTMLAudioElement>;\r\n  static breakRockSound: HTMLAudioElement;\r\n  static hurtSounds: Array<HTMLAudioElement>;\r\n  static genericPickupSound: HTMLAudioElement;\r\n  static pushSounds: Array<HTMLAudioElement>;\r\n  static healSound: HTMLAudioElement;\r\n  static music: HTMLAudioElement;\r\n  static graveSound: HTMLAudioElement;\r\n  static ambientSound: HTMLAudioElement;\r\n  static goreSound: HTMLAudioElement;\r\n  static swingSounds: Array<HTMLAudioElement>;\r\n  static unlockSounds: Array<HTMLAudioElement>;\r\n  static doorOpenSounds: Array<HTMLAudioElement>;\r\n  static potSmashSounds: Array<HTMLAudioElement>;\r\n  static keyPickupSound: HTMLAudioElement;\r\n  static magicSound: HTMLAudioElement;\r\n  static wooshSound: HTMLAudioElement;\r\n  static initialized: boolean = false;\r\n  static audioMuted: boolean = true;\r\n  static bombSounds: Array<HTMLAudioElement>;\r\n  static fuseBurnSound: HTMLAudioElement;\r\n  static fuseLoopSound: HTMLAudioElement;\r\n  static fuseStartSound: HTMLAudioElement;\r\n  static loopHandlers: Map<HTMLAudioElement, EventListener> = new Map();\r\n  static loadSounds = async () => {\r\n    if (Sound.initialized) return;\r\n    Sound.initialized = true;\r\n    if (ReverbEngine.initialized) Sound.audioMuted = false;\r\n    Sound.playerStoneFootsteps = new Array<HTMLAudioElement>();\r\n    [1, 2, 3].forEach((i) =>\r\n      Sound.playerStoneFootsteps.push(\r\n        new Audio(\"res/SFX/footsteps/stone/footstep\" + i + \".mp3\"),\r\n      ),\r\n    );\r\n    for (let f of Sound.playerStoneFootsteps) f.volume = 1.0;\r\n\r\n    Sound.enemyFootsteps = new Array<HTMLAudioElement>();\r\n    [1, 2, 3, 4, 5].forEach((i) =>\r\n      Sound.enemyFootsteps.push(\r\n        new Audio(\"res/SFX/footsteps/enemy/enemyfootstep\" + i + \".mp3\"),\r\n      ),\r\n    );\r\n    for (let f of Sound.enemyFootsteps) f.volume = 1.0;\r\n\r\n    Sound.swingSounds = new Array<HTMLAudioElement>();\r\n    [1, 2, 3, 4].forEach((i) =>\r\n      Sound.swingSounds.push(new Audio(\"res/SFX/attacks/swing\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.swingSounds) {\r\n      (f.volume = 0.5), f.load;\r\n      //f.play();\r\n    }\r\n\r\n    Sound.hitSounds = new Array<HTMLAudioElement>();\r\n    [1, 2].forEach((i) =>\r\n      Sound.hitSounds.push(new Audio(\"res/SFX/attacks/hurt\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.hitSounds) {\r\n      (f.volume = 0.5), f.load;\r\n      //f.play();\r\n    }\r\n    Sound.enemySpawnSound = new Audio(\"res/SFX/attacks/enemyspawn.mp3\");\r\n    Sound.enemySpawnSound.volume = 0.7;\r\n\r\n    Sound.chestSounds = new Array<HTMLAudioElement>();\r\n    [1, 2, 3].forEach((i) =>\r\n      Sound.chestSounds.push(new Audio(\"res/SFX/chest/chest\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.chestSounds) f.volume = 0.5;\r\n\r\n    Sound.coinPickupSounds = new Array<HTMLAudioElement>();\r\n    [1, 2, 3, 4].forEach((i) =>\r\n      Sound.coinPickupSounds.push(\r\n        new Audio(\"res/SFX/items/coins\" + i + \".mp3\"),\r\n      ),\r\n    );\r\n    for (let f of Sound.coinPickupSounds) f.volume = 1.0;\r\n\r\n    Sound.miningSounds = new Array<HTMLAudioElement>();\r\n    [1, 2, 3, 4].forEach((i) =>\r\n      Sound.miningSounds.push(\r\n        new Audio(\"res/SFX/resources/Pickaxe\" + i + \".mp3\"),\r\n      ),\r\n    );\r\n    for (let f of Sound.miningSounds) f.volume = 0.3;\r\n\r\n    Sound.hurtSounds = new Array<HTMLAudioElement>();\r\n    [1].forEach((i) =>\r\n      Sound.hurtSounds.push(new Audio(\"res/SFX/attacks/hit.mp3\")),\r\n    );\r\n    for (let f of Sound.hurtSounds) f.volume = 0.3;\r\n\r\n    Sound.genericPickupSound = new Audio(\"res/SFX/items/pickup.mp3\");\r\n    Sound.genericPickupSound.volume = 1.0;\r\n\r\n    Sound.breakRockSound = new Audio(\"res/SFX/resources/rockbreak.mp3\");\r\n    Sound.breakRockSound.volume = 1.0;\r\n\r\n    Sound.pushSounds = new Array<HTMLAudioElement>();\r\n    [1, 2].forEach((i) =>\r\n      Sound.pushSounds.push(new Audio(\"res/SFX/pushing/push\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.pushSounds) f.volume = 1.0;\r\n\r\n    Sound.healSound = new Audio(\"res/SFX/items/powerup1.mp3\");\r\n    Sound.healSound.volume = 0.5;\r\n\r\n    Sound.music = new Audio(\"res/bewitched.mp3\");\r\n    Sound.graveSound = new Audio(\"res/SFX/attacks/skelespawn.mp3\");\r\n    Sound.ambientSound = new Audio(\"res/SFX/ambient/ambientDark2.mp3\");\r\n    Sound.ambientSound.volume = 1;\r\n\r\n    Sound.goreSound = new Audio(`res/SFX/misc Unused/gore2.mp3`);\r\n    Sound.goreSound.volume = 0.5;\r\n\r\n    Sound.unlockSounds = new Array<HTMLAudioElement>();\r\n    [1].forEach((i) =>\r\n      Sound.unlockSounds.push(new Audio(\"res/SFX/door/unlock\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.unlockSounds) f.volume = 0.5;\r\n\r\n    Sound.doorOpenSounds = new Array<HTMLAudioElement>();\r\n    [1, 2].forEach((i) =>\r\n      Sound.doorOpenSounds.push(new Audio(\"res/SFX/door/open\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.doorOpenSounds) f.volume = 0.5;\r\n\r\n    Sound.keyPickupSound = new Audio(\"res/SFX/items/keyPickup.mp3\");\r\n    Sound.keyPickupSound.volume = 1.0;\r\n\r\n    Sound.potSmashSounds = new Array<HTMLAudioElement>();\r\n    [1, 2, 3].forEach((i) =>\r\n      Sound.potSmashSounds.push(\r\n        new Audio(\"res/SFX/objects/potSmash\" + i + \".mp3\"),\r\n      ),\r\n    );\r\n    for (let f of Sound.potSmashSounds) f.volume = 0.5;\r\n\r\n    Sound.magicSound = new Audio(\"res/SFX/attacks/magic2.mp3\");\r\n    Sound.magicSound.volume = 0.25;\r\n\r\n    Sound.wooshSound = new Audio(\"res/SFX/attacks/woosh1.mp3\");\r\n    Sound.wooshSound.volume = 0.2;\r\n\r\n    Sound.bombSounds = new Array<HTMLAudioElement>();\r\n    [1, 2].forEach((i) =>\r\n      Sound.bombSounds.push(new Audio(\"res/SFX/attacks/explode\" + i + \".mp3\")),\r\n    );\r\n    for (let f of Sound.bombSounds) f.volume = 0.7;\r\n\r\n    Sound.fuseBurnSound = new Audio(\"res/SFX/attacks/fuse.mp3\");\r\n    Sound.fuseBurnSound.volume = 0.2;\r\n\r\n    Sound.fuseLoopSound = new Audio(\"res/SFX/attacks/fuseLoop.mp3\");\r\n    Sound.fuseLoopSound.volume = 0.2;\r\n\r\n    Sound.fuseStartSound = new Audio(\"res/SFX/attacks/fuseStart.mp3\");\r\n    Sound.fuseStartSound.volume = 0.2;\r\n  };\r\n\r\n  private static playSoundSafely(audio: HTMLAudioElement) {\r\n    audio.play().catch((err) => {\r\n      if (err.name === \"NotAllowedError\") {\r\n        console.warn(\"Audio playback requires user interaction first\");\r\n      } else {\r\n        console.error(\"Error playing sound:\", err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static async playWithReverb(audio: HTMLAudioElement) {\r\n    await ReverbEngine.initialize();\r\n    ReverbEngine.applyReverb(audio);\r\n    this.playSoundSafely(audio);\r\n  }\r\n\r\n  static playerStoneFootstep = async () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.playerStoneFootsteps, Math.random);\r\n    await this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n    f.play();\r\n  };\r\n\r\n  static enemyFootstep = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.enemyFootsteps, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static hit = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.swingSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n\r\n    setTimeout(() => {\r\n      let f = Game.randTable(Sound.hitSounds, Math.random);\r\n      this.playWithReverb(f);\r\n      f.currentTime = 0;\r\n    }, 100);\r\n  };\r\n\r\n  static hurt = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.hurtSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static enemySpawn = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.enemySpawnSound);\r\n    Sound.enemySpawnSound.currentTime = 0;\r\n  };\r\n\r\n  static chest = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.chestSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static potSmash = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.potSmashSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static pickupCoin = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.coinPickupSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static mine = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.miningSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static breakRock = () => {\r\n    if (Sound.audioMuted) return;\r\n    setTimeout(() => {\r\n      this.playWithReverb(Sound.breakRockSound);\r\n    }, 100);\r\n    Sound.breakRockSound.currentTime = 0;\r\n  };\r\n\r\n  static heal = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.healSound);\r\n    Sound.healSound.currentTime = 0;\r\n  };\r\n\r\n  static genericPickup = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.genericPickupSound);\r\n    Sound.genericPickupSound.currentTime = 0;\r\n  };\r\n\r\n  static keyPickup = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.keyPickupSound);\r\n    Sound.keyPickupSound.currentTime = 0;\r\n  };\r\n\r\n  static push = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.pushSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static skeleSpawn = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.graveSound);\r\n    Sound.graveSound.currentTime = 0;\r\n    Sound.graveSound.volume = 0.3;\r\n  };\r\n\r\n  static unlock = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.unlockSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static playMusic = () => {\r\n    if (Sound.audioMuted) return;\r\n    /*\r\n    Sound.music.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        Sound.music.currentTime = 0;\r\n        Sound.playSoundSafely(Sound.music);\r\n      },\r\n      false\r\n    );\r\n    Sound.playSoundSafely(Sound.music);\r\n    */\r\n  };\r\n\r\n  static doorOpen = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.doorOpenSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static playAmbient = () => {\r\n    if (Sound.audioMuted) return;\r\n    Sound.ambientSound.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        Sound.ambientSound.currentTime = 0;\r\n        this.playWithReverb(Sound.ambientSound);\r\n      },\r\n      true,\r\n    );\r\n    this.playWithReverb(Sound.ambientSound);\r\n  };\r\n\r\n  static playFuse = () => {\r\n    if (Sound.audioMuted) return;\r\n    Sound.fuseStartSound.currentTime = 0;\r\n\r\n    // Play the start sound first\r\n    this.playWithReverb(Sound.fuseStartSound);\r\n\r\n    // When start sound ends, begin the loop\r\n    Sound.fuseStartSound.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        Sound.fuseLoopSound.currentTime = 0;\r\n        this.playWithReverb(Sound.fuseLoopSound);\r\n      },\r\n      { once: true },\r\n    );\r\n\r\n    // Set up loop sound to repeat\r\n    Sound.fuseLoopSound.addEventListener(\"ended\", () => {\r\n      Sound.fuseLoopSound.currentTime = 0;\r\n      this.playWithReverb(Sound.fuseLoopSound);\r\n    });\r\n\r\n    // Store the loop handler so we can remove it later\r\n    const loopHandler = () => {\r\n      Sound.fuseLoopSound.currentTime = 0;\r\n      this.playWithReverb(Sound.fuseLoopSound);\r\n    };\r\n    Sound.loopHandlers.set(Sound.fuseLoopSound, loopHandler);\r\n  };\r\n\r\n  static stopFuse = () => {\r\n    Sound.fuseLoopSound.pause();\r\n    Sound.fuseLoopSound.currentTime = 0;\r\n    Sound.fuseStartSound.pause();\r\n    Sound.fuseStartSound.currentTime = 0;\r\n\r\n    // Remove the loop handler\r\n    const handler = Sound.loopHandlers.get(Sound.fuseLoopSound);\r\n    if (handler) {\r\n      Sound.fuseLoopSound.removeEventListener(\"ended\", handler);\r\n      Sound.loopHandlers.delete(Sound.fuseLoopSound);\r\n    }\r\n  };\r\n\r\n  static playGore = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.goreSound);\r\n    Sound.goreSound.currentTime = 0;\r\n  };\r\n\r\n  static playBomb = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.bombSounds, Math.random);\r\n    this.playWithReverb(f);\r\n    f.currentTime = 0;\r\n  };\r\n\r\n  static playMagic = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Sound.magicSound;\r\n    let woosh = Sound.wooshSound;\r\n    this.playWithReverb(f);\r\n    this.playWithReverb(woosh);\r\n    f.currentTime = 0;\r\n    woosh.currentTime = 0;\r\n  };\r\n\r\n  static delayPlay = (method: () => void, delay: number) => {\r\n    setTimeout(method, delay);\r\n  };\r\n\r\n  static stopSound(audio: HTMLAudioElement) {\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n  }\r\n\r\n  static stopSoundWithReverb(audio: HTMLAudioElement) {\r\n    ReverbEngine.removeReverb(audio);\r\n    this.stopSound(audio);\r\n  }\r\n}\r\n","import { globalEventBus } from \"./eventBus\";\r\nimport { AppEvents, EventPayloads, EVENTS } from \"./events\";\r\n\r\ninterface Stats {\r\n  enemiesKilled: number;\r\n  damageDone: number;\r\n  damageTaken: number;\r\n  turnsPassed: number;\r\n  coinsCollected: number;\r\n  itemsCollected: number;\r\n  enemies: string[];\r\n}\r\n\r\nclass StatsTracker {\r\n  private stats: Stats = {\r\n    enemiesKilled: 0,\r\n    damageDone: 0,\r\n    damageTaken: 0,\r\n    turnsPassed: 0,\r\n    coinsCollected: 0,\r\n    itemsCollected: 0,\r\n    enemies: [],\r\n  };\r\n\r\n  constructor() {\r\n    this.initializeListeners();\r\n  }\r\n\r\n  private initializeListeners(): void {\r\n    globalEventBus.on(EVENTS.ENEMY_KILLED, this.handleEnemyKilled);\r\n    globalEventBus.on(EVENTS.DAMAGE_DONE, this.handleDamageDone);\r\n    globalEventBus.on(EVENTS.DAMAGE_TAKEN, this.handleDamageTaken);\r\n    globalEventBus.on(EVENTS.TURN_PASSED, this.handleTurnPassed);\r\n    globalEventBus.on(EVENTS.COIN_COLLECTED, this.handleCoinCollected);\r\n    globalEventBus.on(EVENTS.ITEM_COLLECTED, this.handleItemCollected);\r\n  }\r\n\r\n  private handleEnemyKilled = (\r\n    payload: EventPayloads[typeof EVENTS.ENEMY_KILLED],\r\n  ): void => {\r\n    this.stats.enemiesKilled += 1;\r\n    this.stats.enemies.push(payload.enemyId);\r\n    //console.log(`Enemy killed: ${payload.enemyId}`);\r\n  };\r\n\r\n  private handleDamageDone = (\r\n    payload: EventPayloads[typeof EVENTS.DAMAGE_DONE],\r\n  ): void => {\r\n    this.stats.damageDone += payload.amount;\r\n    //console.log(`Damage done: ${payload.amount}`);\r\n  };\r\n\r\n  private handleDamageTaken = (\r\n    payload: EventPayloads[typeof EVENTS.DAMAGE_TAKEN],\r\n  ): void => {\r\n    this.stats.damageTaken += payload.amount;\r\n    //console.log(`Damage taken: ${payload.amount}`);\r\n  };\r\n\r\n  private handleTurnPassed = (): void => {\r\n    this.stats.turnsPassed += 1;\r\n    //console.log(`Turn passed: ${this.stats.turnsPassed}`);\r\n  };\r\n\r\n  private handleCoinCollected = (\r\n    payload: EventPayloads[typeof EVENTS.COIN_COLLECTED],\r\n  ): void => {\r\n    this.stats.coinsCollected += payload.amount;\r\n    //console.log(`Coins collected: ${payload.amount}`);\r\n  };\r\n\r\n  private handleItemCollected = (\r\n    payload: EventPayloads[typeof EVENTS.ITEM_COLLECTED],\r\n  ): void => {\r\n    this.stats.itemsCollected += 1;\r\n    //console.log(`Item collected: ${payload.itemId}`);\r\n  };\r\n\r\n  public getStats(): Stats {\r\n    return this.stats;\r\n  }\r\n\r\n  public resetStats(): void {\r\n    this.stats = {\r\n      enemiesKilled: 0,\r\n      damageDone: 0,\r\n      damageTaken: 0,\r\n      turnsPassed: 0,\r\n      coinsCollected: 0,\r\n      itemsCollected: 0,\r\n      enemies: [],\r\n    };\r\n    //console.log(\"Stats have been reset.\");\r\n  }\r\n}\r\n\r\nexport const statsTracker = new StatsTracker();\r\n","import { globalEventBus } from \"./eventBus\";\r\n\r\nexport class TextBox {\r\n  text: string;\r\n  cursor: number;\r\n  private enterCallback: () => void;\r\n  private escapeCallback: () => void;\r\n  private allowedCharacters: string = \"all\";\r\n  private element: HTMLElement;\r\n  private message: string = \"\";\r\n  private sentMessages: Array<string>;\r\n  private currentMessageIndex: number = -1;\r\n  private readonly MAX_HISTORY: number = 50;\r\n\r\n  constructor(element: HTMLElement) {\r\n    this.text = \"\";\r\n    this.cursor = 0;\r\n    this.enterCallback = () => {};\r\n    this.escapeCallback = () => {};\r\n    this.element = element;\r\n    this.sentMessages = [];\r\n\r\n    this.element.addEventListener(\"touchstart\", this.handleTouchStart);\r\n  }\r\n\r\n  public setEnterCallback(callback: () => void): void {\r\n    this.enterCallback = callback;\r\n  }\r\n\r\n  public setEscapeCallback(callback: () => void): void {\r\n    this.escapeCallback = callback;\r\n  }\r\n\r\n  public clear(): void {\r\n    this.text = \"\";\r\n    this.cursor = 0;\r\n    this.message = \"\";\r\n    this.updateElement();\r\n  }\r\n\r\n  public handleKeyPress = (key: string): void => {\r\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/ \".split(\r\n      \"\",\r\n    );\r\n    if (key.length === 1) {\r\n      key = key.toLowerCase();\r\n      if (fontHas.includes(key)) {\r\n        if (\r\n          this.allowedCharacters === \"all\" ||\r\n          this.allowedCharacters.includes(key)\r\n        ) {\r\n          this.text =\r\n            this.text.substring(0, this.cursor) +\r\n            key +\r\n            this.text.substring(this.cursor, this.text.length);\r\n          this.cursor += 1;\r\n          this.updateElement();\r\n\r\n          this.message =\r\n            this.message.substring(0, this.cursor - 1) +\r\n            key +\r\n            this.message.substring(this.cursor - 1, this.message.length);\r\n        }\r\n      }\r\n      //console.log(`Current message: \"${this.message}\"`);\r\n      return;\r\n    } else {\r\n      switch (key) {\r\n        case \"Backspace\":\r\n          if (this.cursor > 0) {\r\n            this.text =\r\n              this.text.substring(0, this.cursor - 1) +\r\n              this.text.substring(this.cursor, this.text.length);\r\n            this.cursor = Math.max(0, this.cursor - 1);\r\n            this.updateElement();\r\n\r\n            this.message =\r\n              this.message.substring(0, this.cursor) +\r\n              this.message.substring(this.cursor + 1, this.message.length);\r\n          }\r\n          break;\r\n        case \"Delete\":\r\n          if (this.cursor < this.text.length) {\r\n            this.text =\r\n              this.text.substring(0, this.cursor) +\r\n              this.text.substring(this.cursor + 1, this.text.length);\r\n            this.updateElement();\r\n\r\n            this.message =\r\n              this.message.substring(0, this.cursor) +\r\n              this.message.substring(this.cursor + 1, this.message.length);\r\n          }\r\n          break;\r\n        case \"ArrowLeft\":\r\n          this.cursor = Math.max(0, this.cursor - 1);\r\n          this.updateCursorPosition();\r\n          break;\r\n        case \"ArrowRight\":\r\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\r\n          this.updateCursorPosition();\r\n          break;\r\n        case \"ArrowUp\":\r\n          if (\r\n            this.sentMessages.length > 0 &&\r\n            this.currentMessageIndex < this.sentMessages.length - 1\r\n          ) {\r\n            this.currentMessageIndex++;\r\n            this.text =\r\n              this.sentMessages[\r\n                this.sentMessages.length - 1 - this.currentMessageIndex\r\n              ];\r\n            this.updateElement();\r\n            this.message = this.text;\r\n          }\r\n          break;\r\n        case \"ArrowDown\":\r\n          if (this.currentMessageIndex > 0) {\r\n            this.currentMessageIndex--;\r\n            this.text =\r\n              this.sentMessages[\r\n                this.sentMessages.length - 1 - this.currentMessageIndex\r\n              ];\r\n            this.updateElement();\r\n            this.message = this.text;\r\n          } else if (this.currentMessageIndex === 0) {\r\n            this.currentMessageIndex = -1;\r\n            this.clear();\r\n          }\r\n          break;\r\n        case \"Enter\":\r\n          this.sendMessage();\r\n          this.escapeCallback();\r\n          break;\r\n        case \"Escape\":\r\n          this.escapeCallback();\r\n          break;\r\n      }\r\n    }\r\n    //console.log(`Current message: \"${this.message}\"`);\r\n  };\r\n\r\n  private handleTouchStart = (e: TouchEvent): void => {\r\n    this.focus();\r\n    e.preventDefault();\r\n  };\r\n\r\n  private focus(): void {\r\n    // Create a temporary input element to trigger the on-screen keyboard\r\n    const tempInput = document.createElement(\"input\");\r\n    tempInput.type = \"text\";\r\n    tempInput.style.position = \"absolute\";\r\n    tempInput.style.opacity = \"0\";\r\n    tempInput.style.zIndex = \"-1\"; // Ensure it doesn't interfere with the game UI\r\n    document.body.appendChild(tempInput);\r\n    tempInput.focus();\r\n    tempInput.addEventListener(\"blur\", () => {\r\n      document.body.removeChild(tempInput);\r\n    });\r\n  }\r\n\r\n  private sendMessage(): void {\r\n    let message = this.message.trim();\r\n\r\n    if (message) {\r\n      // Add the new message to the history\r\n      this.sentMessages.push(message);\r\n\r\n      // Ensure the history size doesn't exceed the maximum limit\r\n      if (this.sentMessages.length > this.MAX_HISTORY) {\r\n        this.sentMessages.shift(); // Remove the oldest message\r\n      }\r\n      globalEventBus.emit(\"ChatMessageSent\", message);\r\n\r\n      console.log(this.sentMessages);\r\n\r\n      this.enterCallback();\r\n\r\n      if (message.startsWith(\"/\")) {\r\n        message = message.substring(1);\r\n        globalEventBus.emit(\"ChatCommand\", message);\r\n      }\r\n\r\n      this.clear();\r\n\r\n      // Reset the navigation index\r\n      this.currentMessageIndex = -1;\r\n    }\r\n  }\r\n\r\n  private updateElement(): void {\r\n    // Update the HTML element with the current text\r\n    // Modify to handle multiple lines if necessary\r\n    this.element.textContent = this.text;\r\n\r\n    // Optionally, update cursor position in the UI\r\n  }\r\n\r\n  private updateCursorPosition(): void {\r\n    // Implement cursor position update in the UI if necessary\r\n  }\r\n\r\n  // Optional: Modify other methods if needed to handle wrapped messages\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Floor } from \"./floor\";\r\n\r\nexport class Bones extends Floor {\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      7,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room\";\r\nimport { Player } from \"../player\";\r\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\n\r\nexport class Button extends Tile {\r\n  // all are in grid units\r\n  w: number;\r\n  h: number;\r\n  pressed: boolean;\r\n  turnsSincePressed: number;\r\n  linkedDoor: InsideLevelDoor;\r\n\r\n  constructor(room: Room, x: number, y: number, linkedDoor: InsideLevelDoor) {\r\n    super(room, x, y);\r\n    this.w = 1;\r\n    this.h = 1;\r\n\r\n    this.pressed = false;\r\n    this.turnsSincePressed = 1;\r\n\r\n    this.linkedDoor = linkedDoor;\r\n  }\r\n\r\n  press = () => {\r\n    this.pressed = true;\r\n    this.linkedDoor.opened = true;\r\n  };\r\n\r\n  unpress = () => {\r\n    this.pressed = false;\r\n    this.linkedDoor.opened = false;\r\n  };\r\n\r\n  onCollide = (player: Player) => {\r\n    this.press();\r\n  };\r\n\r\n  onCollideEnemy = (enemy: Enemy) => {\r\n    this.press();\r\n  };\r\n\r\n  tickEnd = () => {\r\n    this.unpress();\r\n    for (const i in this.room.game.players) {\r\n      if (\r\n        this.room.game.players[i].x === this.x &&\r\n        this.room.game.players[i].y === this.y\r\n      )\r\n        this.press();\r\n    }\r\n    for (const e of this.room.entities) {\r\n      if (e.x === this.x && e.y === this.y) this.press();\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.pressed)\r\n      Game.drawTile(\r\n        18,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        17,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class Chasm extends Tile {\r\n  tileX: number;\r\n  tileY: number;\r\n  topEdge: boolean;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    leftEdge: boolean,\r\n    rightEdge: boolean,\r\n    topEdge: boolean,\r\n    bottomEdge: boolean,\r\n  ) {\r\n    super(room, x, y);\r\n\r\n    this.tileX = this.skin === 1 ? 24 : 20;\r\n    this.tileY = 1;\r\n\r\n    if (leftEdge) this.tileX--;\r\n    else if (rightEdge) this.tileX++;\r\n    if (topEdge) this.tileY--;\r\n    else if (bottomEdge) this.tileY++;\r\n\r\n    this.topEdge = topEdge;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.topEdge)\r\n      Game.drawTile(\r\n        22,\r\n        0,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    Game.drawTile(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class CoffinTile extends Tile {\r\n  subTileY: number; // each coffin is 1x2, this is the sub-tile coordinate\r\n\r\n  constructor(room: Room, x: number, y: number, subTileY: number) {\r\n    super(room, x, y);\r\n    this.subTileY = subTileY;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.subTileY === 0) {\r\n      Game.drawTile(\r\n        0,\r\n        5,\r\n        1,\r\n        1,\r\n        this.x - 1,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        1,\r\n        5,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        2,\r\n        5,\r\n        1,\r\n        1,\r\n        this.x + 1,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        0,\r\n        6,\r\n        1,\r\n        1,\r\n        this.x - 1,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        1,\r\n        6,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        2,\r\n        6,\r\n        1,\r\n        1,\r\n        this.x + 1,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    } else {\r\n      Game.drawTile(\r\n        0,\r\n        7,\r\n        1,\r\n        1,\r\n        this.x - 1,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        1,\r\n        7,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      Game.drawTile(\r\n        2,\r\n        7,\r\n        1,\r\n        1,\r\n        this.x + 1,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Entity } from \"../../entity/entity\";\r\nimport { Drawable } from \"../../drawable\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { Game } from \"../../game\";\r\n\r\nexport enum SkinType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  SWAMP = 3,\r\n  GLACIER = 4,\r\n  CASTLE = 5,\r\n}\r\n\r\nexport abstract class Decoration extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  room: Room;\r\n  skin: SkinType;\r\n  isDoor: boolean;\r\n  opacity: number;\r\n  applySkin: boolean;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super();\r\n    this.skin = room.skin;\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.isDoor = false;\r\n    this.opacity = 1;\r\n    this.applySkin = false;\r\n  }\r\n\r\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\r\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\r\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return false;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return false;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return false;\r\n  };\r\n  onCollide = (player: Player) => {};\r\n  onCollideEnemy = (enemy: Entity) => {};\r\n  tick = () => {};\r\n  tickEnd = () => {};\r\n\r\n  draw = (delta: number) => {};\r\n  drawUnderPlayer = (delta: number) => {\r\n    let tileY = 1;\r\n    if (this.applySkin) tileY = this.skin;\r\n\r\n    Game.drawTile(\r\n      1,\r\n      tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n  drawAbovePlayer = (delta: number) => {};\r\n  drawAboveShading = (delta: number) => {};\r\n}\r\n","import { Room } from \"../../room\";\r\nimport { Player } from \"../../player\";\r\nimport { Entity } from \"../../entity/entity\";\r\nimport { Drawable } from \"../../drawable\";\r\nimport { GameConstants } from \"../../gameConstants\";\r\nimport { Game } from \"../../game\";\r\nimport { Decoration } from \"./decoration\";\r\n\r\nexport enum SkinType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  SWAMP = 3,\r\n  GLACIER = 4,\r\n  CASTLE = 5,\r\n}\r\n\r\nexport class Puddle extends Decoration {\r\n  x: number;\r\n  y: number;\r\n  room: Room;\r\n  skin: SkinType;\r\n  isDoor: boolean;\r\n  opacity: number;\r\n  applySkin: boolean;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.skin = room.skin;\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.isDoor = false;\r\n    this.opacity = 1;\r\n    this.applySkin = false;\r\n  }\r\n\r\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\r\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\r\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return false;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return false;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return false;\r\n  };\r\n  onCollide = (player: Player) => {};\r\n  onCollideEnemy = (enemy: Entity) => {};\r\n  tick = () => {};\r\n  tickEnd = () => {};\r\n\r\n  draw = (delta: number) => {};\r\n  drawUnderPlayer = (delta: number) => {\r\n    let tileY = 1;\r\n    if (this.applySkin) tileY = this.skin;\r\n\r\n    Game.drawTile(\r\n      1,\r\n      tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n  drawAbovePlayer = (delta: number) => {};\r\n  drawAboveShading = (delta: number) => {};\r\n}\r\n","import { Player } from \"../player\";\nimport { Direction, Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { EntityType } from \"../entity/entity\";\nimport { Key } from \"../item/key\";\nimport { Sound } from \"../sound\";\nimport { LightSource } from \"../lightSource\";\n\nexport enum DoorDir {\n  North = \"North\",\n  East = \"East\",\n  South = \"South\",\n  West = \"West\",\n}\n\nexport enum DoorType {\n  DOOR,\n  LOCKEDDOOR,\n  GUARDEDDOOR,\n  TUNNELDOOR,\n}\n\nexport class Door extends Tile {\n  linkedDoor: Door;\n  game: Game;\n  opened: boolean;\n  doorDir: Direction;\n  guarded: boolean;\n  type: DoorType;\n  locked: boolean;\n  iconTileX: number;\n  iconXOffset: number;\n  iconYOffset: number;\n  unlocking: boolean;\n  iconAlpha: number;\n  frame: number;\n  tileXOffset: number;\n  tileX: number;\n  drawTopOf: boolean;\n  lightSource: LightSource;\n  alpha: number;\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    doorDir: Direction,\n    doorType: DoorType,\n  ) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n    this.doorDir = doorDir;\n    this.locked = false;\n    this.isDoor = true;\n    this.type = doorType;\n    this.iconTileX = 2;\n    this.iconXOffset = 0;\n    this.iconYOffset = 0;\n    this.unlocking = false;\n    this.iconAlpha = 1;\n    this.frame = 0;\n    this.tileXOffset = 0;\n    this.tileX = 2;\n    this.drawTopOf = true;\n    let lightOffsetX = 0;\n    let lightOffsetY = 0;\n    this.alpha = 1;\n\n    switch (this.doorDir) {\n      case Direction.UP:\n        lightOffsetY = -0.5;\n      case Direction.DOWN:\n        lightOffsetY = 0.5;\n      case Direction.LEFT:\n        lightOffsetX = -0.5;\n      case Direction.RIGHT:\n        lightOffsetX = 0.5;\n    }\n    this.lightSource = new LightSource(x + 0.5, y + 0.5, 0, [0, 0, 0], 9);\n    this.room.lightSources.push(this.lightSource);\n\n    switch (this.type) {\n      case DoorType.GUARDEDDOOR:\n        this.guard();\n        break;\n      case DoorType.LOCKEDDOOR:\n        this.lock();\n        break;\n      case DoorType.DOOR:\n        this.removeLock();\n        break;\n      case DoorType.TUNNELDOOR:\n        // this.tileX = ? find the right tile for this\n        this.locked = true;\n        this.iconTileX = 10;\n        this.iconXOffset = 1 / 32;\n        this.tileXOffset = 12;\n        this.drawTopOf = false;\n        break;\n    }\n  }\n\n  openTunnelXOffset = () => {\n    if (this.type === DoorType.TUNNELDOOR) {\n      if (!this.opened) {\n        return 0;\n      } else {\n        return -3;\n      }\n    }\n    return 0;\n  };\n\n  guard = () => {\n    this.type = DoorType.GUARDEDDOOR;\n    this.locked = true;\n    this.iconTileX = 9;\n    this.iconXOffset = 1 / 32;\n  };\n\n  lock = () => {\n    this.type = DoorType.LOCKEDDOOR;\n    this.locked = true;\n    this.iconTileX = 10;\n    this.iconXOffset = 1 / 32;\n  };\n\n  removeLock = () => {\n    if (this.type !== DoorType.TUNNELDOOR) this.type = DoorType.DOOR;\n    this.locked = false;\n  };\n\n  removeLockIcon = () => {\n    this.iconYOffset = 0;\n    this.unlocking = false;\n    this.iconTileX = 2;\n    this.iconXOffset = 0;\n    this.iconAlpha = 1;\n  };\n\n  canUnlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        this.game.pushMessage(\"You use the key to unlock the door.\");\n        return true;\n      } else\n        this.game.pushMessage(\"The door is locked tightly and won't budge.\");\n      return false;\n    }\n\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.room.checkForNoEnemies();\n      this.game.pushMessage(\n        \"There are still remaining foes guarding this door...\",\n      );\n      return false;\n    }\n\n    if (\n      this.type === DoorType.TUNNELDOOR &&\n      (!this.opened || !this.linkedDoor.opened)\n    ) {\n      if (this.linkedDoor === this.room.level.exitRoom.tunnelDoor) {\n        this.game.pushMessage(\"The door refuses to budge from this side.\");\n        return false;\n      } else {\n        this.game.pushMessage(\n          \"You clear the debris, revealing a narrow tunnel.\",\n        );\n        return true;\n      }\n    }\n    return true;\n  };\n\n  unlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        // remove key\n        player.inventory.removeItem(k);\n        Sound.unlock();\n        this.removeLock();\n        this.unlocking = true;\n      }\n    } else if (this.type === DoorType.TUNNELDOOR) {\n      this.locked = false;\n      this.unlocking = true;\n    }\n  };\n\n  unGuard = () => {\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.removeLock();\n      this.game.tutorialActive = false;\n    }\n  };\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  isSolid = (): boolean => {\n    if (this.locked) {\n      return true;\n    } else false;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    if (!this.opened) {\n      Sound.doorOpen();\n    }\n    this.opened = true;\n\n    this.linkedDoor.opened = true;\n\n    if (this.doorDir === Direction.UP || this.doorDir === Direction.DOWN) {\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\n    } else\n      this.game.changeLevelThroughDoor(\n        player,\n        this.linkedDoor,\n        this.linkedDoor.room.roomX - this.room.roomX > 0 ? 1 : -1,\n      );\n    this.linkedDoor.removeLock();\n    this.linkedDoor.removeLockIcon();\n    this.removeLockIcon();\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.save();\n\n    if (this.doorDir === Direction.DOWN) {\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (this.opened)\n        Game.drawTile(\n          6 + this.tileXOffset + this.openTunnelXOffset(),\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n      else\n        Game.drawTile(\n          3 + this.tileXOffset + this.openTunnelXOffset(),\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n    }\n    if (this.doorDir !== Direction.UP)\n      //if not top door\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    //the following used to be in the drawaboveplayer function\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (!this.drawTopOf) return;\n      if (!this.opened)\n        Game.drawTile(\n          13,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n      else\n        Game.drawTile(\n          14,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n    }\n    Game.ctx.restore();\n  };\n\n  drawAbovePlayer = (delta: number) => {};\n\n  drawAboveShading = (delta: number) => {\n    if (this.type === DoorType.TUNNELDOOR) return;\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1 * delta;\n    Game.ctx.globalAlpha = this.iconAlpha;\n    let multiplier = 0.125;\n    if (this.unlocking === true) {\n      this.iconAlpha *= 0.92 ** delta;\n      this.iconYOffset -= 0.035 * delta;\n      multiplier = 0;\n      if (this.iconAlpha <= 0.01) {\n        this.removeLockIcon();\n      }\n    }\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      );\n    } else {\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      ); //if not top door\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Player } from \"../player\";\r\nimport { ChatMessage, Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\nimport { UpLadder } from \"./upLadder\";\r\nimport { EVENTS } from \"../events\";\r\nimport { EventEmitter } from \"../eventEmitter\";\r\nimport { globalEventBus } from \"../eventBus\";\r\n\r\nexport class DownLadder extends Tile {\r\n  linkedLevel: Room;\r\n  game: Game;\r\n  isRope = false;\r\n  frame: number = 0;\r\n  depth: number;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n    this.linkedLevel = null;\r\n    this.depth = room.depth;\r\n  }\r\n\r\n  generate = async () => {\r\n    if (!this.linkedLevel) {\r\n      await this.game.levelgen.generate(\r\n        this.game,\r\n        this.room.depth + (this.isRope ? 0 : 1),\r\n        this.isRope,\r\n        (linkedLevel: Room) => {\r\n          this.linkedLevel = linkedLevel;\r\n          outerLoop: for (\r\n            let x = this.linkedLevel.roomX;\r\n            x < this.linkedLevel.roomX + this.linkedLevel.width;\r\n            x++\r\n          ) {\r\n            for (\r\n              let y = this.linkedLevel.roomY;\r\n              y < this.linkedLevel.roomY + this.linkedLevel.height;\r\n              y++\r\n            ) {\r\n              let tile = this.linkedLevel.roomArray[x][y];\r\n\r\n              if (tile instanceof UpLadder) {\r\n                tile.linkedLevel = this.game.levels[this.room.depth].exitRoom;\r\n                //console.log(\"linked level\", tile.linkedLevel);\r\n                break outerLoop;\r\n              }\r\n            }\r\n          }\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  get linkedRoom() {\r\n    return this.game.levels[this.depth - 1].exitRoom;\r\n  }\r\n\r\n  onCollide = (player: Player) => {\r\n    let allPlayersHere = true;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        this.game.levels[this.game.players[i].depth].rooms[\r\n          this.game.players[i].levelID\r\n        ] !== this.room ||\r\n        this.game.players[i].x !== this.x ||\r\n        this.game.players[i].y !== this.y\r\n      ) {\r\n        allPlayersHere = false;\r\n      }\r\n    }\r\n    if (allPlayersHere) {\r\n      globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\r\n      this.generate().then(() => {\r\n        globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\r\n        for (const i in this.game.players) {\r\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\r\n        }\r\n      });\r\n    } else {\r\n      if (player === this.game.players[this.game.localPlayerID])\r\n        this.game.chat.push(new ChatMessage(\"all players must be present\"));\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let xx = 4;\r\n    if (this.isRope) xx = 16;\r\n\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    Game.drawTile(\r\n      xx,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawAboveShading = (delta: number) => {\r\n    if (this.frame > 100) this.frame = 0;\r\n    this.frame += 1 * delta;\r\n    let multiplier = 0.125;\r\n\r\n    Game.drawFX(\r\n      2,\r\n      2,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y - 1.25 + multiplier * Math.sin((this.frame * Math.PI) / 50),\r\n      1,\r\n      1,\r\n    );\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {};\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class Floor extends Tile {\r\n  // all are in grid units\r\n  variation: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.variation = 1;\r\n    if (this.skin == SkinType.DUNGEON)\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Math.random,\r\n      );\r\n    if (this.skin == SkinType.CAVE)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Math.random,\r\n      );\r\n    if (this.skin == SkinType.FOREST)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Math.random,\r\n      );\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      this.variation,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class FountainTile extends Tile {\r\n  subTileX: number; // each fountain is 3x3, this is the sub-tile coordinate\r\n  subTileY: number;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    subTileX: number,\r\n    subTileY: number,\r\n  ) {\r\n    super(room, x, y);\r\n    this.subTileX = subTileX;\r\n    this.subTileY = subTileY;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    Game.drawTile(\r\n      this.subTileX,\r\n      2 + this.subTileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\n\r\nexport class InsideLevelDoor extends Tile {\r\n  game: Game;\r\n  opened: boolean;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n    this.opened = false;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.opened)\r\n      Game.drawTile(\r\n        15,\r\n        1,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        3,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {\r\n    if (!this.opened)\r\n      Game.drawTile(\r\n        13,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        14,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class SpawnFloor extends Tile {\r\n  // all are in grid units\r\n  variation: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.variation = 1;\r\n    if (this.skin == SkinType.DUNGEON)\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Math.random,\r\n      );\r\n    if (this.skin == SkinType.CAVE)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Math.random,\r\n      );\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      this.variation,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { LevelConstants } from \"../levelConstants\";\r\nimport { Tile } from \"./tile\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Barrel } from \"../entity/object/barrel\";\r\nimport { HitWarning } from \"../hitWarning\";\r\n\r\nexport class SpikeTrap extends Tile {\r\n  on: boolean;\r\n  tickCount: number;\r\n  frame: number;\r\n  t: number;\r\n\r\n  constructor(room: Room, x: number, y: number, tickCount?: number) {\r\n    super(room, x, y);\r\n    if (tickCount) this.tickCount = tickCount;\r\n    else this.tickCount = 0;\r\n    this.on = false;\r\n    this.frame = 0;\r\n    this.t = 0;\r\n  }\r\n\r\n  tick = () => {\r\n    this.tickCount++;\r\n    if (this.tickCount >= 4) this.tickCount = 0;\r\n    this.on = this.tickCount === 0;\r\n\r\n    if (this.on) {\r\n      for (const i in this.room.game.players) {\r\n        if (\r\n          this.room ===\r\n            this.room.game.rooms[this.room.game.players[i].levelID] &&\r\n          this.room.game.players[i].x === this.x &&\r\n          this.room.game.players[i].y === this.y\r\n        )\r\n          this.room.game.players[i].hurt(1, \"spike trap\");\r\n      }\r\n    }\r\n\r\n    if (this.tickCount === 3)\r\n      this.room.hitwarnings.push(\r\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y, false),\r\n      );\r\n  };\r\n\r\n  tickEnd = () => {\r\n    if (this.on) {\r\n      for (const e of this.room.entities) {\r\n        if (e.x === this.x && e.y === this.y) {\r\n          e.hurt(null, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onCollideEnemy = (enemy: Entity) => {\r\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel))\r\n      enemy.hurt(null, 1);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawableY = this.y - 0.01;\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    let rumbleOffsetX = 0;\r\n    this.t += delta;\r\n    if (!this.on && this.tickCount === 3) {\r\n      if (Math.floor(this.t) % 4 === 1) rumbleOffsetX = 0.0325;\r\n      if (Math.floor(this.t) % 4 === 3) rumbleOffsetX = -0.0325;\r\n    }\r\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\r\n    let f = 6 + frames[Math.floor(this.frame)];\r\n    if (\r\n      this.tickCount === 1 ||\r\n      (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)\r\n    ) {\r\n      f = 5;\r\n    }\r\n    Game.drawObj(\r\n      f,\r\n      0,\r\n      1,\r\n      2,\r\n      this.x + rumbleOffsetX,\r\n      this.y - 1,\r\n      1,\r\n      2,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.on && this.frame < frames.length - 1) {\r\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\r\n      else this.frame += 0.2 * delta;\r\n    }\r\n    if (!this.on) this.frame = 0;\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Player } from \"../player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Drawable } from \"../drawable\";\r\nimport { GameConstants } from \"../gameConstants\";\r\n\r\nexport enum SkinType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  SWAMP = 3,\r\n  GLACIER = 4,\r\n  CASTLE = 5,\r\n}\r\n\r\nexport abstract class Tile extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  room: Room;\r\n  skin: SkinType;\r\n  isDoor: boolean;\r\n  opacity: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super();\r\n    this.skin = room.skin;\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.isDoor = false;\r\n    this.opacity = 1;\r\n  }\r\n\r\n  hasPlayer = (player: Player) => {\r\n    if (player.x === this.x && player.y === this.y) return true;\r\n    else return false;\r\n  };\r\n\r\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\r\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\r\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return false;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return false;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return false;\r\n  };\r\n  onCollide = (player: Player) => {};\r\n  onCollideEnemy = (enemy: Entity) => {};\r\n  tick = () => {};\r\n  tickEnd = () => {};\r\n\r\n  draw = (delta: number) => {};\r\n  drawUnderPlayer = (delta: number) => {};\r\n  drawAbovePlayer = (delta: number) => {};\r\n  drawAboveShading = (delta: number) => {};\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { Player } from \"../player\";\r\nimport { LevelConstants } from \"../levelConstants\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class Trapdoor extends Tile {\r\n  game: Game;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      13,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  onCollide = (player: Player) => {\r\n    // TODO\r\n  };\r\n}\r\n","import { Player } from \"../player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\nimport { DownLadder } from \"./downLadder\";\r\n\r\nexport class UpLadder extends Tile {\r\n  linkedLevel: Room;\r\n  game: Game;\r\n  isRope = false;\r\n  depth: number;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n    this.depth = room.depth;\r\n  }\r\n\r\n  onCollide = (player: Player) => {\r\n    if (!this.game) {\r\n      console.error(\"Game instance is undefined in UpLadder:\", this);\r\n      return;\r\n    }\r\n    try {\r\n      this.linkLevel();\r\n      this.game.changeLevelThroughLadder(player, this);\r\n    } catch (error) {\r\n      console.error(\"Error during changeLevelThroughLadder:\", error);\r\n    }\r\n  };\r\n\r\n  linkLevel = () => {\r\n    this.linkedLevel = this.game.levels[this.depth - 1].exitRoom;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let xx = 29;\r\n    let yy = 0;\r\n    if (this.isRope) {\r\n      xx = 16;\r\n      yy = 1;\r\n    }\r\n\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (!this.isRope)\r\n      Game.drawTile(\r\n        xx,\r\n        yy,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    Game.drawTile(\r\n      xx,\r\n      yy + 1,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {\r\n    if (this.isRope)\r\n      Game.drawTile(\r\n        16,\r\n        1,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { Room, WallDirection } from \"../room\";\r\nimport { Door, DoorDir } from \"./door\";\r\nimport { Tile } from \"./tile\";\r\nimport { WallInfo } from \"../room\";\r\nimport { Player } from \"../player\";\r\n\r\nexport class Wall extends Tile {\r\n  private tileXOffset: number;\r\n  wallDirections: Array<WallDirection>;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    wallDirections?: Array<WallDirection>,\r\n  ) {\r\n    super(room, x, y);\r\n    this.isDoor = false;\r\n    this.tileXOffset = 6;\r\n    this.wallDirections = wallDirections || [];\r\n    this.opacity = 1;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    const wallInfo = this.wallInfo();\r\n    if (!wallInfo) return false;\r\n    return (\r\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\r\n      wallInfo.isLeftWall ||\r\n      wallInfo.isRightWall\r\n    );\r\n  };\r\n\r\n  get direction() {\r\n    let directions = [];\r\n    if (this.room.roomArray[this.x - 1][this.y] == null)\r\n      directions.push(Direction.LEFT);\r\n    if (this.room.roomArray[this.x + 1][this.y] == null)\r\n      directions.push(Direction.RIGHT);\r\n    if (this.room.roomArray[this.x][this.y - 1] == null)\r\n      directions.push(Direction.DOWN);\r\n    if (this.room.roomArray[this.x][this.y + 1] == null)\r\n      directions.push(Direction.UP);\r\n    if (directions.length == 1) return directions[0];\r\n    if (\r\n      directions.includes(Direction.UP) &&\r\n      directions.includes(Direction.LEFT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.UP_LEFT;\r\n    }\r\n    if (\r\n      directions.includes(Direction.UP) &&\r\n      directions.includes(Direction.RIGHT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.UP_RIGHT;\r\n    }\r\n    if (\r\n      directions.includes(Direction.DOWN) &&\r\n      directions.includes(Direction.LEFT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.DOWN_LEFT;\r\n    }\r\n    return Direction.DOWN_RIGHT;\r\n  }\r\n\r\n  wallInfo = () => {\r\n    return this.room.wallInfo.get(`${this.x},${this.y}`);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawWall(delta);\r\n  };\r\n\r\n  drawWall = (delta: number) => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return;\r\n\r\n    // Set tileYOffset based on inner wall type\r\n    this.tileXOffset =\r\n      wallInfo.innerWallType === \"bottomInner\" ||\r\n      wallInfo.innerWallType === \"surroundedInner\"\r\n        ? 0\r\n        : 26;\r\n\r\n    // Only draw the bottom part of the wall if it's not at the bottom edge of the room\r\n    if (\r\n      wallInfo.isDoorWall ||\r\n      wallInfo.isBelowDoorWall ||\r\n      (wallInfo.isTopWall && !wallInfo.isLeftWall && !wallInfo.isRightWall) ||\r\n      wallInfo.isInnerWall\r\n    )\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(), //this.room.softVis[this.x][this.y + 1],\r\n      );\r\n\r\n    Game.drawTile(\r\n      2 + this.tileXOffset,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y - 1,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return;\r\n    if (\r\n      wallInfo.isBottomWall ||\r\n      wallInfo.isBelowDoorWall ||\r\n      wallInfo.isAboveDoorWall\r\n    ) {\r\n      Game.drawTile(\r\n        2 + this.tileXOffset,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(), //this.room.softVis[this.x][this.y + 1],\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\nimport { Room } from \"../room\";\r\nimport { LightSource } from \"../lightSource\";\r\nimport { LevelConstants } from \"../levelConstants\";\r\nimport { Wall } from \"./wall\";\r\n\r\nexport class WallTorch extends Wall {\r\n  frame: number;\r\n  private tileYOffset: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.room.lightSources.push(\r\n      new LightSource(\r\n        this.x + 0.5,\r\n        this.y + 0.5,\r\n        5,\r\n        LevelConstants.TORCH_LIGHT_COLOR,\r\n        1.5,\r\n      ),\r\n    );\r\n    this.frame = Math.random() * 12;\r\n    this.tileYOffset = 6;\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#FFA500\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return true;\r\n    return (\r\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\r\n      wallInfo.isLeftWall ||\r\n      wallInfo.isRightWall\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawWall(delta);\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) this.tileYOffset = 6;\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame >= 12) this.frame = 0;\r\n\r\n    this.tileYOffset =\r\n      wallInfo.innerWallType === \"bottomInner\" ||\r\n      wallInfo.innerWallType === \"surroundedInner\"\r\n        ? 0\r\n        : 6;\r\n\r\n    Game.drawTile(\r\n      0,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    Game.drawFX(Math.floor(this.frame), 32, 1, 2, this.x, this.y - 1, 1, 2);\r\n  };\r\n}\r\n","import { globalEventBus } from \"./eventBus\";\r\nimport { Enemy } from \"./entity/enemy/enemy\";\r\nimport { Room, RoomType } from \"./room\";\r\nimport { Game } from \"./game\";\r\nimport { DownLadder } from \"./tile/downLadder\";\r\nimport { Door, DoorType } from \"./tile/door\";\r\nimport { Player } from \"./player\";\r\nimport { Bestiary } from \"./bestiary\";\r\n\r\nexport class TutorialListener {\r\n  private _seenEnemies: Set<typeof Enemy> = new Set();\r\n  private _seenEnemyClasses: Set<Enemy> = new Set();\r\n  private pendingNewEnemies: Set<typeof Enemy> = new Set();\r\n  private tutorialCreationTimeout: NodeJS.Timeout | null = null;\r\n  private game: Game;\r\n  private player: Player;\r\n\r\n  constructor(game: Game) {\r\n    //console.log(\"Tutorial constructor called\");\r\n    this.setupEventListeners();\r\n    this.game = game;\r\n    this.player = this.game.player;\r\n  }\r\n\r\n  get seenEnemies(): Set<typeof Enemy> {\r\n    if (this._seenEnemies === undefined) {\r\n      this._seenEnemies = new Set();\r\n    }\r\n    return this._seenEnemies;\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    //console.log(\"Setting up event listeners\");\r\n    globalEventBus.on(\"EnemySeenPlayer\", this.handleEnemySeen.bind(this));\r\n  }\r\n\r\n  private handleEnemySeen(data: {\r\n    enemyType: typeof Enemy;\r\n    enemyName: string;\r\n  }): void {\r\n    if (!this.hasSeenEnemy(data.enemyType)) {\r\n      this.game.pushMessage(`New enemy encountered: ${data.enemyName}`);\r\n      this.addSeenEnemy(data.enemyType);\r\n      this.pendingNewEnemies.add(data.enemyType);\r\n      this.scheduleTutorialCreation();\r\n\r\n      this.player.bestiary.addEntry(data.enemyType);\r\n      console.log(this.player.bestiary.entries);\r\n    }\r\n  }\r\n\r\n  private scheduleTutorialCreation(): void {\r\n    if (this.tutorialCreationTimeout === null) {\r\n      this.tutorialCreationTimeout = setTimeout(() => {\r\n        this.createTutorialRoom(Array.from(this.pendingNewEnemies));\r\n        //this.game.pushMessage(\"Defeat the enemies guarding the exits.\");\r\n        this.pendingNewEnemies.clear();\r\n        this.tutorialCreationTimeout = null;\r\n      }, 100); // Wait 100ms to collect all new enemies\r\n    }\r\n  }\r\n\r\n  private createTutorialRoom(enemyTypes: Array<typeof Enemy>) {\r\n    /*\r\n    this.game.tutorialActive = true;\r\n    this.game.room.doors.forEach((door: Door) => {\r\n      door.guard();\r\n    });\r\n    */\r\n  }\r\n\r\n  // Method to check if an enemy has been seen before\r\n  hasSeenEnemy(enemyType: typeof Enemy): boolean {\r\n    //console.log(`Checking if enemy has been seen: ${enemyType}`);\r\n    return this._seenEnemies.has(enemyType);\r\n  }\r\n\r\n  // Method to manually add an enemy to the seen list (useful for testing or manual control)\r\n  addSeenEnemy(enemyType: typeof Enemy): void {\r\n    //console.log(`Adding enemy to seen list: ${enemyType}`);\r\n    this._seenEnemies.add(enemyType);\r\n    this._seenEnemyClasses.add(enemyType.prototype);\r\n  }\r\n\r\n  // Method to reset the seen enemies list (useful for testing or game resets)\r\n  resetSeenEnemies(): void {\r\n    //console.log(\"Resetting seen enemies list\");\r\n    this._seenEnemies.clear();\r\n    this._seenEnemyClasses.clear();\r\n  }\r\n\r\n  // Method to clean up event listeners when needed\r\n  cleanup(): void {\r\n    //console.log(\"Cleaning up event listeners\");\r\n    globalEventBus.off(\"EnemySeenPlayer\", this.handleEnemySeen.bind(this));\r\n  }\r\n}\r\n","export class Utils {\r\n  static distance = (\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ) => {\r\n    return Math.sqrt((endX - startX) ** 2 + (endY - startY) ** 2);\r\n  };\r\n\r\n  static calculateExponentialFalloff = (\r\n    distance: number,\r\n    falloffRate: number,\r\n  ): number => {\r\n    return Math.exp(-falloffRate * distance);\r\n  };\r\n\r\n  // Corrected HSV to HEX conversion\r\n  static hsvToHex = (h: number, s: number, v: number): string => {\r\n    let c = v * s;\r\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n    let m = v - c;\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0;\r\n\r\n    if (h >= 0 && h < 60) {\r\n      r = c;\r\n      g = x;\r\n      b = 0;\r\n    } else if (h >= 60 && h < 120) {\r\n      r = x;\r\n      g = c;\r\n      b = 0;\r\n    } else if (h >= 120 && h < 180) {\r\n      r = 0;\r\n      g = c;\r\n      b = x;\r\n    } else if (h >= 180 && h < 240) {\r\n      r = 0;\r\n      g = x;\r\n      b = c;\r\n    } else if (h >= 240 && h < 300) {\r\n      r = x;\r\n      g = 0;\r\n      b = c;\r\n    } else {\r\n      r = c;\r\n      g = 0;\r\n      b = x;\r\n    }\r\n\r\n    // Convert to RGB values\r\n    const rFinal = Math.round((r + m) * 255);\r\n    const gFinal = Math.round((g + m) * 255);\r\n    const bFinal = Math.round((b + m) * 255);\r\n\r\n    return Utils.rgbToHex(rFinal, gFinal, bFinal);\r\n  };\r\n\r\n  // RGB to HEX conversion\r\n  static rgbToHex = (r: number, g: number, b: number): string => {\r\n    const toHex = (val: number) => {\r\n      const hex = val.toString(16);\r\n      return hex.length === 1 ? \"0\" + hex : hex;\r\n    };\r\n\r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class Dagger extends Weapon {\r\n  static itemName = \"dagger\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 22;\r\n    this.tileY = 0;\r\n    this.name = \"dagger\";\r\n    this.description = \"A basic but dependable weapon.\";\r\n  }\r\n\r\n  degrade = () => {};\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { SlashParticle } from \"../particle/slashParticle\";\r\n\r\nexport class DualDagger extends Weapon {\r\n  firstAttack: boolean;\r\n  static itemName = \"dual daggers\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 23;\r\n    this.tileY = 0;\r\n    this.firstAttack = true;\r\n    this.name = \"Dual Daggers\";\r\n    this.durability = 75;\r\n    this.durabilityMax = 75;\r\n    this.description =\r\n      \"After the first attack, enemies will not take their turn until you attack or move again.\";\r\n  }\r\n\r\n  tickInInventory = () => {\r\n    this.firstAttack = true;\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let flag = false;\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      if (e.destroyable && !e.pushable && e.pointIn(newX, newY)) {\r\n        e.hurt(this.wielder, 1);\r\n        this.statusEffect(e);\r\n\r\n        flag = true;\r\n      }\r\n    }\r\n    if (flag) {\r\n      this.hitSound();\r\n\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n      this.game.rooms[this.wielder.levelID].particles.push(\r\n        new SlashParticle(newX, newY),\r\n      );\r\n      this.game.rooms[this.wielder.levelID].entities = this.game.rooms[\r\n        this.wielder.levelID\r\n      ].entities.filter((e) => !e.dead);\r\n\r\n      if (!this.firstAttack) {\r\n        this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      }\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n\r\n      if (this.firstAttack) {\r\n        this.game.rooms[this.wielder.levelID].tickHitWarnings();\r\n        this.game.rooms[this.wielder.levelID].clearDeadStuff();\r\n        this.firstAttack = false;\r\n        this.wielder.slowMotionEnabled = true;\r\n      }\r\n      this.degrade();\r\n    }\r\n    return !flag;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\n\r\nexport class Pickaxe extends Weapon {\r\n  static itemName = \"pickaxe\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 30;\r\n    this.tileY = 0;\r\n    this.canMine = true;\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { SlashParticle } from \"../particle/slashParticle\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Barrel } from \"../entity/object/barrel\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\n\r\nexport class Shotgun extends Weapon {\r\n  static itemName = \"shotgun\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 26;\r\n    this.tileY = 0;\r\n    this.name = \"shotgun\";\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let newX2 = 2 * newX - this.wielder.x;\r\n    let newY2 = 2 * newY - this.wielder.y;\r\n    let newX3 = 3 * newX - 2 * this.wielder.x;\r\n    let newY3 = 3 * newY - 2 * this.wielder.y;\r\n    let range = 3;\r\n    if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\r\n    )\r\n      //if current position is inside new position OR is solid\r\n      return true;\r\n    else if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX2, newY2) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\r\n    )\r\n      //if current position is inside new position 2 OR is solid\r\n      //set range as one\r\n      range = 1;\r\n    else if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX3, newY3) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX3][newY3].isSolid()\r\n    )\r\n      //if current position is inside new position 3 OR is solid\r\n      //set range as two\r\n      range = 2;\r\n\r\n    let enemyHitCandidates = [];\r\n    let firstPushable = 4;\r\n    let firstNonPushable = 5;\r\n    let firstNonDestroyable = 5;\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      //loop through enemies in this weapons wielders level\r\n      if (e.pushable) {\r\n        //case for pushables\r\n        if (e.pointIn(newX, newY)) return true;\r\n        //if pushable is in new position return true\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\r\n          firstPushable = 2;\r\n          //if pushable is in position 2 set firstPushable var\r\n        }\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\r\n          firstPushable = Math.min(firstPushable, 3);\r\n          //if pushable is in position 3 set firstPushable to min of firstPushable and 3\r\n        }\r\n      } else if (e.destroyable) {\r\n        //case for destroyables\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonPushable = 1;\r\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\r\n        }\r\n        //if enemy is in new position and range is enough push enemy to hit candidate array\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          firstNonPushable = Math.min(firstNonPushable, 2);\r\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\r\n        }\r\n        //if enemy is in new position 2 and range is enough push enemy to hit candidate array\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          firstNonPushable = Math.min(firstNonPushable, 3);\r\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\r\n        }\r\n        //if enemy is in new position 3 and range is enough push enemy to hit candidate array\r\n      } else {\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonDestroyable = 1;\r\n        }\r\n        //if enemy is in new position and range is enough set first non destroyable to 1\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\r\n        }\r\n        //if enemy is in new position and range is enough set first non destroyable to 2\r\n\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\r\n        }\r\n        //if enemy is in new position and range is enough set first non destroyable to 3\r\n      }\r\n    }\r\n    let targetX = newX3;\r\n    let targetY = newY3;\r\n    if (\r\n      firstNonDestroyable < firstNonPushable &&\r\n      firstNonDestroyable < firstPushable\r\n      //if a non destroyable comes before the first non pushable and before the first pushable\r\n    ) {\r\n      return true;\r\n      //return true and exit the function\r\n    }\r\n    if (firstNonPushable <= firstPushable) {\r\n      for (const c of enemyHitCandidates) {\r\n        let e = c.enemy;\r\n        let d = c.dist;\r\n        if (d === 3) e.hurt(this.wielder, 0.5);\r\n        else e.hurt(this.wielder, 1);\r\n      }\r\n      //finally bro\r\n      //for the array c of enemyHitCandidates if the enemy distance is 3 only do .5 damage\r\n      //if they're closer do the usual damage\r\n      //hits all candidates in enemyHitCandidates\r\n\r\n      this.hitSound();\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"black\",\r\n      );\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"#ffddff\",\r\n      );\r\n      let gp = new GenericParticle(\r\n        this.game.rooms[this.wielder.levelID],\r\n        0.5 * (newX + this.wielder.x) + 0.5,\r\n        0.5 * (newY + this.wielder.y),\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        \"white\",\r\n        0,\r\n      );\r\n      gp.expirationTimer = 10;\r\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n      this.degrade();\r\n\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { SlashParticle } from \"../particle/slashParticle\";\r\nimport type { Enemy } from \"../entity/enemy/enemy\";\r\n\r\nexport class Spear extends Weapon {\r\n  static itemName = \"spear\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 24;\r\n    this.tileY = 0;\r\n    this.name = \"spear\";\r\n    this.description =\r\n      \"Hits enemies in front of you within a range of 2 tiles.\";\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let newX2 = 2 * newX - this.wielder.x;\r\n    let newY2 = 2 * newY - this.wielder.y;\r\n    let flag = false;\r\n    let enemyHitCandidates = [];\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      if (e.destroyable) {\r\n        if (e.pointIn(newX, newY)) {\r\n          if (e.pushable) return true;\r\n          else {\r\n            e.hurt(this.wielder, 1);\r\n            this.statusEffect(e);\r\n            flag = true;\r\n          }\r\n        }\r\n        if (\r\n          e.pointIn(newX2, newY2) &&\r\n          !this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\r\n        ) {\r\n          //only hit targest 2 tiles away if they are enemies\r\n          if (!e.pushable) enemyHitCandidates.push(e);\r\n        }\r\n      }\r\n    }\r\n    if (!flag && enemyHitCandidates.length > 0) {\r\n      for (const e of enemyHitCandidates) e.hurt(this.wielder, 1);\r\n      this.hitSound();\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n      this.game.rooms[this.wielder.levelID].particles.push(\r\n        new SlashParticle(newX, newY),\r\n      );\r\n      this.game.rooms[this.wielder.levelID].particles.push(\r\n        new SlashParticle(newX2, newY2),\r\n      );\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n      this.degrade();\r\n      return false;\r\n    }\r\n    if (flag) {\r\n      if (\r\n        this.wielder.game.room === this.wielder.game.rooms[this.wielder.levelID]\r\n      )\r\n        Sound.hit();\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n      this.game.rooms[this.wielder.levelID].particles.push(\r\n        new SlashParticle(newX, newY),\r\n      );\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n      this.degrade();\r\n    }\r\n    return !flag;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\nimport { PlayerFireball } from \"../projectile/playerFireball\";\r\nimport type { Entity } from \"../entity/entity\";\r\nimport { Utils } from \"../utils\";\r\nimport { Direction } from \"../game\";\r\nexport class Spellbook extends Weapon {\r\n  targets: Entity[];\r\n  isTargeting: boolean;\r\n  static itemName = \"spellbook\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.range = 4;\r\n    this.tileX = 25;\r\n    this.tileY = 0;\r\n    this.canMine = true;\r\n    this.name = Spellbook.itemName;\r\n    this.isTargeting = false;\r\n    this.durability = 5;\r\n    this.durabilityMax = 10;\r\n    this.description = \"Hits multiple enemies within a range of 4 tiles.\";\r\n  }\r\n\r\n  getTargets = () => {\r\n    this.targets = [];\r\n    let entities = this.game.rooms[this.wielder.levelID].entities;\r\n    this.targets = entities.filter(\r\n      (e) =>\r\n        !e.pushable &&\r\n        Utils.distance(this.wielder.x, this.wielder.y, e.x, e.y) <= this.range,\r\n    );\r\n    let enemies = this.targets.filter((e) => e.isEnemy === true);\r\n    //console.log(enemies);\r\n    if (enemies.length > 0) return enemies;\r\n    else {\r\n      //console.log(this.targets);\r\n      return this.targets;\r\n    }\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    this.getTargets();\r\n    let direction = this.wielder.direction;\r\n    let flag = false;\r\n    let targets = this.targets;\r\n    const isTargetInDirection = (e: Entity): boolean => {\r\n      switch (direction) {\r\n        case Direction.UP:\r\n          return e.y <= newY;\r\n        case Direction.RIGHT:\r\n          return e.x >= newX;\r\n        case Direction.DOWN:\r\n          return e.y >= newY;\r\n        case Direction.LEFT:\r\n          return e.x <= newX;\r\n        default:\r\n          return false;\r\n      }\r\n    };\r\n    if (targets.length > 0) {\r\n      this.isTargeting = true;\r\n    } else {\r\n      this.isTargeting = false;\r\n    }\r\n\r\n    targets = targets.filter(isTargetInDirection);\r\n\r\n    for (let e of targets) {\r\n      if (\r\n        !this.game.rooms[this.wielder.levelID].roomArray[e.x][e.y].isSolid()\r\n      ) {\r\n        e.hurt(this.wielder, 1);\r\n\r\n        this.game.rooms[this.wielder.levelID].projectiles.push(\r\n          new PlayerFireball(this.wielder, e.x, e.y),\r\n        );\r\n\r\n        flag = true;\r\n      }\r\n    }\r\n\r\n    if (flag) {\r\n      if (\r\n        this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\r\n      )\r\n        Sound.hit();\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n      Sound.playMagic();\r\n      this.degrade();\r\n      setTimeout(() => {\r\n        this.isTargeting = false;\r\n      }, 100);\r\n    }\r\n    return !flag;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../room\";\r\nimport { Sound } from \"../sound\";\r\n\r\nexport class Warhammer extends Weapon {\r\n  static itemName = \"warhammer\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 22;\r\n    this.tileY = 2;\r\n    this.damage = 3;\r\n    this.name = \"warhammer\";\r\n    this.durability = 25;\r\n    this.durabilityMax = 25;\r\n  }\r\n\r\n  hitSound = () => {\r\n    if (\r\n      this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\r\n    )\r\n      Sound.hit();\r\n    Sound.playGore();\r\n  };\r\n  shakeScreen = () => {\r\n    this.wielder.slowMotionEnabled = true;\r\n\r\n    if (\r\n      this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\r\n    )\r\n      //this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n      setTimeout(() => {\r\n        this.game.shakeScreen(0, -10, false);\r\n        this.wielder.hitY = -3;\r\n        this.wielder.slowMotionEnabled = false;\r\n      }, 150);\r\n  };\r\n}\r\n","import { Room } from \"../room\";\r\nimport { Game } from \"../game\";\r\nimport { Equippable } from \"../item/equippable\";\r\nimport { Sound } from \"../sound\";\r\nimport { SlashParticle } from \"../particle/slashParticle\";\r\nimport type { Entity } from \"../entity/entity\";\r\nimport { GameConstants } from \"../gameConstants\";\r\nimport { WeaponFragments } from \"../item/weaponFragments\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { AttackAnimation } from \"../particle/attackAnimation\";\r\n\r\ninterface WeaponStatus {\r\n  poison: boolean;\r\n  blood: boolean;\r\n}\r\n\r\nexport abstract class Weapon extends Equippable {\r\n  game: Game;\r\n  range: number;\r\n  canMine: boolean;\r\n  damage: number;\r\n  status: WeaponStatus;\r\n  static itemName = \"weapon\";\r\n  statusApplicationCount: number;\r\n  constructor(level: Room, x: number, y: number, status?: WeaponStatus) {\r\n    super(level, x, y);\r\n\r\n    if (level) this.game = level.game;\r\n\r\n    this.canMine = false;\r\n    this.range = 1;\r\n    this.damage = 1;\r\n    this.status = status || { poison: false, blood: false };\r\n    this.durability = 50;\r\n    this.durabilityMax = 50;\r\n    this.statusApplicationCount = 0;\r\n    this.equipTick = true;\r\n  }\r\n\r\n  break = () => {\r\n    this.durability = 0;\r\n    this.wielder.inventory.weapon = null;\r\n    this.toggleEquip();\r\n    //this.wielder.inventory.removeItem(this);\r\n    //this.wielder = null;\r\n    this.game.pushMessage(\"Your weapon breaks\");\r\n    if (this.status.poison || this.status.blood) {\r\n      this.clearStatus();\r\n    }\r\n    this.broken = true;\r\n  };\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    if (other instanceof Weapon) return false;\r\n    return true;\r\n  };\r\n\r\n  applyStatus = (status: WeaponStatus) => {\r\n    this.status = status;\r\n    if (this.status.blood) {\r\n      this.damage = Math.max(0.5, this.damage - 0.5);\r\n    }\r\n  };\r\n\r\n  clearStatus = () => {\r\n    const status = this.status.poison ? \"poison\" : \"bleed\";\r\n    this.game.pushMessage(`Your ${this.name}'s ${status} effect dries up`);\r\n\r\n    this.status = { poison: false, blood: false };\r\n    this.statusApplicationCount = 0;\r\n  };\r\n\r\n  statusEffect = (entity: Entity) => {\r\n    if (!entity.isEnemy) return;\r\n    const enemy = entity as Enemy;\r\n    if (!enemy.status.poison.active || !enemy.status.bleed.active) {\r\n      if (this.wielder.applyStatus(enemy, this.status)) {\r\n        this.statusApplicationCount++;\r\n        const message = this.status.poison\r\n          ? `Your weapon poisons the ${enemy.name}`\r\n          : `Your cursed weapon draws blood from the ${enemy.name}`;\r\n\r\n        this.game.pushMessage(message);\r\n\r\n        //if (this.statusApplicationCount >= 10) this.clearStatus();\r\n      }\r\n    }\r\n  };\r\n\r\n  disassemble = () => {\r\n    if (this.equipped) {\r\n      this.game.pushMessage(\r\n        \"I should probably unequip this before I try to disassemble it...\",\r\n      );\r\n      return;\r\n    }\r\n    let inventory = this.wielder.inventory;\r\n    let inventoryX = this.x;\r\n    let inventoryY = this.y;\r\n    let numFragments = Math.floor(this.durability / 1.5);\r\n    this.toggleEquip();\r\n    //inventory.weapon = null;\r\n    inventory.removeItem(this);\r\n    inventory.addItem(\r\n      new WeaponFragments(this.level, inventoryX, inventoryY, numFragments),\r\n    );\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    if (this.wielder.inventory.weapon === this)\r\n      this.wielder.inventory.weapon = null;\r\n    this.wielder = null;\r\n    this.equipped = false;\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let flag = false;\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      if (e.destroyable && !e.pushable && e.pointIn(newX, newY)) {\r\n        e.hurt(this.wielder, this.damage);\r\n        this.statusEffect(e);\r\n\r\n        flag = true;\r\n      }\r\n    }\r\n    if (flag) {\r\n      this.hitSound();\r\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\r\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\r\n      this.game.rooms[this.wielder.levelID].particles.push(\r\n        new AttackAnimation(newX, newY, \"warhammer\", this.wielder.direction),\r\n      );\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      this.shakeScreen();\r\n      this.degrade();\r\n      //console.log(this.durability);\r\n    }\r\n    return !flag;\r\n  };\r\n\r\n  shakeScreen = () => {\r\n    if (\r\n      this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\r\n    )\r\n      this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n  };\r\n\r\n  hitSound = () => {\r\n    if (\r\n      this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\r\n    )\r\n      Sound.hit();\r\n  };\r\n\r\n  drawStatus = (x: number, y: number) => {\r\n    if (this.status.poison || this.status.blood) {\r\n      let tileX = 3;\r\n      if (this.status.poison) {\r\n        tileX = 4;\r\n      }\r\n      if (this.status.blood) {\r\n        tileX = 3;\r\n      }\r\n\r\n      Game.drawFX(\r\n        tileX,\r\n        0,\r\n        1,\r\n        1,\r\n        x - 1 / GameConstants.TILESIZE,\r\n        y - 1 / GameConstants.TILESIZE,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    let broken = this.broken ? \" (broken)\" : \"\";\r\n    let status = [];\r\n    let durability = \"\";\r\n    if (this.status.poison) status.push(\"Poison\");\r\n    if (this.status.blood) status.push(\" Bleed\");\r\n    if (this.durability < this.durabilityMax)\r\n      durability = ` Durability: ${this.durability}/${this.durabilityMax}`;\r\n    return `${this.name}${broken}\\n${status.join(\", \")}\\n${durability}\\n${this.description}\\ndamage: ${this.damage}`;\r\n  };\r\n\r\n  tick = () => {};\r\n\r\n  // returns true if nothing was hit, false if the player should move\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}
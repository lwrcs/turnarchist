{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA,wBAAwB,cAAc;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA,uCAAuC,MAAM;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,kDAAkD;AAClD,iDAAiD;AACjD,iDAAiD;AACjD,kDAAkD;AAClD,gDAAgD;AAChD,kDAAkD;AAClD,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,oEAAoE;AACpE,oEAAoE;AACpE,mDAAmD;AACnD,qDAAqD,wCAAwC;AAC7F;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,4CAA4C,kBAAkB;AAC9D,4CAA4C,kBAAkB;AAC9D,oCAAoC,cAAc;AAClD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,eAAe;AAC/B,gBAAgB,SAAS;AACzB,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,4BAA4B,GAAG,eAAe;AAC1E;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,UAAU;AAC1B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,oDAAoD;AACpE;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,mCAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AAAA,kGAAC;AACN;;AAEA;AACA,MAAM,IAA8B;AACpC,IAAI,cAAc;AAClB,IAAI,YAAY;AAChB;;AAEA;AACA,aAAa,qBAAM;AACnB,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,2CAA2C;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe;AACrD,gCAAgC,YAAY;AAC5C,gDAAgD,oBAAoB;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;AC/qGD,MAAa,QAAQ;IAArB;QACE,cAAS,GAAG,CAAC,CAAC;QAEd,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAE7B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAW,SAAS,CAAC;QAC/B,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAW,CAAC,CAAC;QAC3B,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;gBACjD,IAA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","sources":["webpack://witch-game/./node_modules/howler/dist/howler.js","webpack://witch-game/./src/drawable/drawable.ts","webpack://witch-game/./src/drawable/healthbar.ts","webpack://witch-game/./src/drawable/hitWarning.ts","webpack://witch-game/./src/entity/enemy/armoredSkullEnemy.ts","webpack://witch-game/./src/entity/enemy/armoredzombieEnemy.ts","webpack://witch-game/./src/entity/enemy/bigKnightEnemy.ts","webpack://witch-game/./src/entity/enemy/bigSkullEnemy.ts","webpack://witch-game/./src/entity/enemy/bigZombieEnemy.ts","webpack://witch-game/./src/entity/enemy/bishopEnemy.ts","webpack://witch-game/./src/entity/enemy/chargeEnemy.ts","webpack://witch-game/./src/entity/enemy/crabEnemy.ts","webpack://witch-game/./src/entity/enemy/enemy.ts","webpack://witch-game/./src/entity/enemy/energyWizard.ts","webpack://witch-game/./src/entity/enemy/fireWizard.ts","webpack://witch-game/./src/entity/enemy/frogEnemy.ts","webpack://witch-game/./src/entity/enemy/glowBugEnemy.ts","webpack://witch-game/./src/entity/enemy/knightEnemy.ts","webpack://witch-game/./src/entity/enemy/mummyEnemy.ts","webpack://witch-game/./src/entity/enemy/occultistEnemy.ts","webpack://witch-game/./src/entity/enemy/queenEnemy.ts","webpack://witch-game/./src/entity/enemy/rookEnemy.ts","webpack://witch-game/./src/entity/enemy/skullEnemy.ts","webpack://witch-game/./src/entity/enemy/spawner.ts","webpack://witch-game/./src/entity/enemy/spiderEnemy.ts","webpack://witch-game/./src/entity/enemy/wizardEnemy.ts","webpack://witch-game/./src/entity/enemy/zombieEnemy.ts","webpack://witch-game/./src/entity/entity.ts","webpack://witch-game/./src/entity/object/barrel.ts","webpack://witch-game/./src/entity/object/block.ts","webpack://witch-game/./src/entity/object/bomb.ts","webpack://witch-game/./src/entity/object/bush.ts","webpack://witch-game/./src/entity/object/chest.ts","webpack://witch-game/./src/entity/object/crate.ts","webpack://witch-game/./src/entity/object/mushrooms.ts","webpack://witch-game/./src/entity/object/pot.ts","webpack://witch-game/./src/entity/object/pottedPlant.ts","webpack://witch-game/./src/entity/object/pumpkin.ts","webpack://witch-game/./src/entity/object/sprout.ts","webpack://witch-game/./src/entity/object/tombStone.ts","webpack://witch-game/./src/entity/object/tree.ts","webpack://witch-game/./src/entity/object/vendingMachine.ts","webpack://witch-game/./src/entity/resource/coalResource.ts","webpack://witch-game/./src/entity/resource/emeraldResource.ts","webpack://witch-game/./src/entity/resource/goldResource.ts","webpack://witch-game/./src/entity/resource/resource.ts","webpack://witch-game/./src/entity/resource/rockResource.ts","webpack://witch-game/./src/event/eventBus.ts","webpack://witch-game/./src/event/eventEmitter.ts","webpack://witch-game/./src/event/events.ts","webpack://witch-game/./src/game.ts","webpack://witch-game/./src/game/bestiary.ts","webpack://witch-game/./src/game/cameraAnimation.ts","webpack://witch-game/./src/game/gameConstants.ts","webpack://witch-game/./src/game/gameState.ts","webpack://witch-game/./src/game/gameplaySettings.ts","webpack://witch-game/./src/game/input.ts","webpack://witch-game/./src/game/stats.ts","webpack://witch-game/./src/game/textbox.ts","webpack://witch-game/./src/gui/guiButton.ts","webpack://witch-game/./src/gui/hoverText.ts","webpack://witch-game/./src/gui/map.ts","webpack://witch-game/./src/gui/menu.ts","webpack://witch-game/./src/gui/mouseCursor.ts","webpack://witch-game/./src/gui/muteButton.ts","webpack://witch-game/./src/gui/postProcess.ts","webpack://witch-game/./src/gui/webglBlurRenderer.ts","webpack://witch-game/./src/gui/xpCounter.ts","webpack://witch-game/./src/inventory/inventory.ts","webpack://witch-game/./src/item/armor.ts","webpack://witch-game/./src/item/backpack.ts","webpack://witch-game/./src/item/bombItem.ts","webpack://witch-game/./src/item/coin.ts","webpack://witch-game/./src/item/dropTable.ts","webpack://witch-game/./src/item/equippable.ts","webpack://witch-game/./src/item/godStone.ts","webpack://witch-game/./src/item/goldenKey.ts","webpack://witch-game/./src/item/item.ts","webpack://witch-game/./src/item/itemGroup.ts","webpack://witch-game/./src/item/jewelry/emeraldRing.ts","webpack://witch-game/./src/item/jewelry/goldRing.ts","webpack://witch-game/./src/item/key.ts","webpack://witch-game/./src/item/light/candle.ts","webpack://witch-game/./src/item/light/glowBugs.ts","webpack://witch-game/./src/item/light/lantern.ts","webpack://witch-game/./src/item/light/light.ts","webpack://witch-game/./src/item/light/torch.ts","webpack://witch-game/./src/item/resource/bluegem.ts","webpack://witch-game/./src/item/resource/coal.ts","webpack://witch-game/./src/item/resource/geode.ts","webpack://witch-game/./src/item/resource/gold.ts","webpack://witch-game/./src/item/resource/goldBar.ts","webpack://witch-game/./src/item/resource/greengem.ts","webpack://witch-game/./src/item/resource/redgem.ts","webpack://witch-game/./src/item/resource/stone.ts","webpack://witch-game/./src/item/tool/hammer.ts","webpack://witch-game/./src/item/tool/pickaxe.ts","webpack://witch-game/./src/item/usable/apple.ts","webpack://witch-game/./src/item/usable/heart.ts","webpack://witch-game/./src/item/usable/hourglass.ts","webpack://witch-game/./src/item/usable/shrooms.ts","webpack://witch-game/./src/item/usable/spellbookPage.ts","webpack://witch-game/./src/item/usable/usable.ts","webpack://witch-game/./src/item/usable/weaponBlood.ts","webpack://witch-game/./src/item/usable/weaponFragments.ts","webpack://witch-game/./src/item/usable/weaponPoison.ts","webpack://witch-game/./src/item/weapon/dagger.ts","webpack://witch-game/./src/item/weapon/dualdagger.ts","webpack://witch-game/./src/item/weapon/greataxe.ts","webpack://witch-game/./src/item/weapon/scythe.ts","webpack://witch-game/./src/item/weapon/shotgun.ts","webpack://witch-game/./src/item/weapon/spear.ts","webpack://witch-game/./src/item/weapon/spellbook.ts","webpack://witch-game/./src/item/weapon/sword.ts","webpack://witch-game/./src/item/weapon/warhammer.ts","webpack://witch-game/./src/item/weapon/weapon.ts","webpack://witch-game/./src/level/environment.ts","webpack://witch-game/./src/level/level.ts","webpack://witch-game/./src/level/levelConstants.ts","webpack://witch-game/./src/level/levelGenerator.ts","webpack://witch-game/./src/level/levelParametersGenerator.ts","webpack://witch-game/./src/lighting/lightSource.ts","webpack://witch-game/./src/lighting/lighting.ts","webpack://witch-game/./src/particle/attackAnimation.ts","webpack://witch-game/./src/particle/damageNumber.ts","webpack://witch-game/./src/particle/genericParticle.ts","webpack://witch-game/./src/particle/imageParticle.ts","webpack://witch-game/./src/particle/particle.ts","webpack://witch-game/./src/particle/wizardTeleportParticle.ts","webpack://witch-game/./src/player/player.ts","webpack://witch-game/./src/player/playerActionProcessor.ts","webpack://witch-game/./src/player/playerInputHandler.ts","webpack://witch-game/./src/player/playerMovement.ts","webpack://witch-game/./src/player/playerRenderer.ts","webpack://witch-game/./src/projectile/beamEffect.ts","webpack://witch-game/./src/projectile/enemyShield.ts","webpack://witch-game/./src/projectile/enemySpawnAnimation.ts","webpack://witch-game/./src/projectile/explosion.ts","webpack://witch-game/./src/projectile/playerFireball.ts","webpack://witch-game/./src/projectile/projectile.ts","webpack://witch-game/./src/projectile/wizardFireball.ts","webpack://witch-game/./src/room/propClusterer.ts","webpack://witch-game/./src/room/room.ts","webpack://witch-game/./src/room/roomBuilder.ts","webpack://witch-game/./src/room/roomPopulator.ts","webpack://witch-game/./src/sound/reverb.ts","webpack://witch-game/./src/sound/sound.ts","webpack://witch-game/./src/tile/button.ts","webpack://witch-game/./src/tile/chasm.ts","webpack://witch-game/./src/tile/decorations/decoration.ts","webpack://witch-game/./src/tile/door.ts","webpack://witch-game/./src/tile/downLadder.ts","webpack://witch-game/./src/tile/floor.ts","webpack://witch-game/./src/tile/fountainTile.ts","webpack://witch-game/./src/tile/insideLevelDoor.ts","webpack://witch-game/./src/tile/spawnfloor.ts","webpack://witch-game/./src/tile/spiketrap.ts","webpack://witch-game/./src/tile/tile.ts","webpack://witch-game/./src/tile/trapdoor.ts","webpack://witch-game/./src/tile/upLadder.ts","webpack://witch-game/./src/tile/wall.ts","webpack://witch-game/./src/tile/wallTorch.ts","webpack://witch-game/./src/tips.ts","webpack://witch-game/./src/utility/astarclass.ts","webpack://witch-game/./src/utility/random.ts","webpack://witch-game/./src/utility/utils.ts","webpack://witch-game/webpack/bootstrap","webpack://witch-game/webpack/runtime/global","webpack://witch-game/webpack/before-startup","webpack://witch-game/webpack/startup","webpack://witch-game/webpack/after-startup"],"sourcesContent":["/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","export class Drawable {\n  drawableY = 0;\n\n  draw = (delta: number) => {};\n\n  hasBloom: boolean = false;\n  bloomColor: string = \"#FFFFFF\";\n  bloomAlpha: number = 1;\n  softBloomAlpha: number = 0;\n  updateBloom = (delta: number) => {\n    if (this.hasBloom) {\n      let diff = this.softBloomAlpha - this.bloomAlpha;\n      if (Math.abs(diff) > 0.001) {\n        this.softBloomAlpha = this.softBloomAlpha - diff * 0.1 * delta;\n      } else {\n        this.softBloomAlpha = this.bloomAlpha;\n      }\n    } else {\n      this.softBloomAlpha = 0;\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { LevelConstants } from \"../level/levelConstants\";\n\nexport class HealthBar {\n  hurtTimer: number;\n\n  constructor() {\n    this.hurtTimer = 0;\n  }\n\n  hurt = () => {\n    this.hurtTimer = Date.now();\n  };\n\n  draw = (\n    delta: number,\n    hearts: number,\n    maxHearts: number,\n    x: number,\n    y: number,\n    flashing: boolean,\n  ) => {\n    let t = Date.now() - this.hurtTimer;\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\n      let fullHearts = Math.floor(hearts);\n\n      let halfHearts = Math.ceil(hearts - fullHearts);\n\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\n\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\n      //   (which isn't really parameterizable)\n      let drawWidth = Math.round(\n        Math.min(\n          9,\n          Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t),\n        ),\n      );\n      let drawHeight =\n        Math.round(\n          Math.min(\n            0.5,\n            Math.min(\n              0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t),\n              0.003 * t,\n            ),\n          ) * 16,\n        ) / 16.0;\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\n      let xxStart = 0.5 + -width / 2;\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\n        let tileX = 0;\n        if (!flashing) tileX = 1.5;\n        else if (i < fullHearts) tileX = 0;\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\n        else tileX = 1;\n        let xx = (drawWidth * i) / 16.0 + xxStart;\n        Game.drawFX(\n          tileX,\n          8,\n          0.5,\n          0.5,\n          x + xx,\n          y - 1 - drawHeight / 2,\n          0.5,\n          drawHeight,\n        );\n        xx += 9.0 / 16.0;\n\n        let j = maxHearts - i - 1;\n        if (j !== i) {\n          let tileX = 0;\n          if (!flashing) tileX = 1.5;\n          else if (j < fullHearts) tileX = 0;\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\n          else tileX = 1;\n          let xx = (drawWidth * j) / 16.0 + xxStart;\n          Game.drawFX(\n            tileX,\n            8,\n            0.5,\n            0.5,\n            x + xx,\n            y - 1 - drawHeight / 2,\n            0.5,\n            drawHeight,\n          );\n          xx += 9.0 / 16.0;\n        }\n      }\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Drawable } from \"./drawable\";\nimport { Room } from \"../room/room\";\nimport { Entity } from \"../entity/entity\";\nimport { Utils } from \"../utility/utils\";\n\nenum Direction {\n  North,\n  NorthEast,\n  East,\n  SouthEast,\n  South,\n  SouthWest,\n  West,\n  NorthWest,\n  Center,\n}\n\nexport class HitWarning extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  static frame = 0;\n  private game: Game;\n  parent: Entity | null = null;\n  private _pointerDir: Direction | null = null;\n  private _pointerOffset: { x: number; y: number } | null = null;\n  private tileX: number;\n  private tileY: number;\n  private eX: number;\n  private eY: number;\n  private offsetY: number;\n  private pointerOffset: { x: number; y: number };\n  private isEnemy: Boolean;\n  private dirOnly: Boolean;\n  private alpha: number = 0;\n  private ticks: number;\n  private tickedForDeath = false;\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    eX?: number,\n    eY?: number,\n    isEnemy?: Boolean,\n    dirOnly: Boolean = false,\n    parent: Entity | null = null,\n  ) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.game = game;\n    this.parent = parent;\n    this.tileX = 0;\n    this.tileY = 22;\n    this.eX = eX;\n    this.eY = eY;\n    this.offsetY = 0.2;\n    this.dirOnly = dirOnly;\n\n    this.isEnemy = isEnemy !== undefined ? isEnemy : true;\n    this.pointerOffset = this.getPointerOffset();\n    this.removeOverlapping();\n  }\n\n  tick = () => {\n    if (this.tickedForDeath) this.dead = true;\n    this.tickedForDeath = true;\n  };\n\n  static updateFrame = (delta: number) => {\n    HitWarning.frame += 0.125 * delta;\n    if (HitWarning.frame >= 2) HitWarning.frame = 0;\n  };\n\n  removeOverlapping = () => {\n    for (const entity of this.game.room.entities) {\n      if (\n        entity.x === this.x &&\n        entity.y === this.y &&\n        entity.pushable === false\n      ) {\n        this.dead = true;\n        break;\n      }\n    }\n    for (const door of this.game.room.doors) {\n      if (door.x === this.x && door.y === this.y) {\n        this.dead = true;\n        break;\n      }\n    }\n  };\n\n  private getPointerDir(): Direction {\n    if (this._pointerDir === null) {\n      const dx = this.eX - this.x;\n      const dy = this.eY - this.y;\n\n      if (dx === 0 && dy === 0) {\n        this._pointerDir = Direction.Center;\n      } else if (dx === 0) {\n        this._pointerDir = dy < 0 ? Direction.South : Direction.North;\n      } else if (dy === 0) {\n        this._pointerDir = dx < 0 ? Direction.East : Direction.West;\n      } else if (dx < 0) {\n        this._pointerDir = dy < 0 ? Direction.SouthEast : Direction.NorthEast;\n      } else {\n        this._pointerDir = dy < 0 ? Direction.SouthWest : Direction.NorthWest;\n      }\n\n      this.tileX = 0 + 2 * this._pointerDir;\n    }\n    return this._pointerDir;\n  }\n\n  private getPointerOffset(): { x: number; y: number } {\n    if (this._pointerOffset === null) {\n      const offsets = {\n        [Direction.North]: { x: 0, y: 0.5 },\n        [Direction.South]: { x: 0, y: -0.6 },\n        [Direction.West]: { x: 0.6, y: 0 },\n        [Direction.East]: { x: -0.6, y: 0 },\n        [Direction.NorthEast]: { x: -0.5, y: 0.5 },\n        [Direction.NorthWest]: { x: 0.5, y: 0.5 },\n        [Direction.SouthEast]: { x: -0.5, y: -0.5 },\n        [Direction.SouthWest]: { x: 0.5, y: -0.5 },\n        [Direction.Center]: { x: 0, y: -0.25 },\n      };\n\n      this._pointerOffset = offsets[this.getPointerDir()];\n    }\n    return this._pointerOffset;\n  }\n\n  fadeHitwarnings = (delta: number) => {\n    if (!this.tickedForDeath) {\n      if (this.alpha < 1) this.alpha += 0.03 * delta;\n      if (this.alpha > 1) this.alpha = 1;\n    } else {\n      if (this.alpha > 0) this.alpha -= 0.03 * delta;\n      if (this.alpha < 0) this.alpha = 0;\n    }\n  };\n\n  draw = (delta: number) => {\n    this.fadeHitwarnings(delta);\n    if (\n      Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1 &&\n      Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1\n    ) {\n      Game.ctx.globalAlpha = this.alpha;\n      if (\n        this.isEnemy &&\n        Utils.distance(\n          this.x,\n          this.y,\n          this.game.players[this.game.localPlayerID].x,\n          this.game.players[this.game.localPlayerID].y,\n        ) <= 1\n      ) {\n        // Red Arrow that only renders one square away\n\n        Game.drawFX(\n          this.tileX + Math.floor(HitWarning.frame),\n          this.tileY,\n          1,\n          1,\n          this.x + this.pointerOffset.x,\n          this.y + this.pointerOffset.y - this.offsetY,\n          1,\n          1,\n        );\n      }\n      if (false) {\n        // removed for now because unneeded and overlaps poorly with top layer x\n        // Red X that only renders one square away\n        Game.drawFX(\n          18 + Math.floor(HitWarning.frame),\n          5,\n          1,\n          1,\n          this.x,\n          this.y - this.offsetY + 0,\n          1,\n          1,\n        );\n      }\n      Game.ctx.globalAlpha = 1;\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.fadeHitwarnings(delta);\n\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (this.isEnemy && this.getPointerDir() !== Direction.North) {\n      //white arrow top layer\n      Game.drawFX(\n        this.tileX + Math.floor(HitWarning.frame),\n        this.tileY + 1,\n        1,\n        1,\n        this.x + this.pointerOffset.x,\n        this.y + this.pointerOffset.y - this.offsetY,\n        1,\n        1,\n      );\n    }\n    if (\n      Utils.distance(\n        this.x,\n        this.y,\n        this.game.players[this.game.localPlayerID].x,\n        this.game.players[this.game.localPlayerID].y,\n      ) <= 1\n    ) {\n      if (!this.dirOnly) {\n        // Red X that renders 1 square away for top layer\n        Game.drawFX(\n          18 + Math.floor(HitWarning.frame),\n          6,\n          1,\n          1,\n          this.x,\n          this.y - this.offsetY + 0,\n          1,\n          1,\n        );\n      }\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class ArmoredSkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  readonly REGEN_TICKS = 5;\n  drop: Item;\n  static difficulty: number = 2;\n  static tileX: number = 5;\n  static tileY: number = 8;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    if (this.cloned) return;\n\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 3;\n    this.maxHealth = 3;\n    this.tileX = 17;\n    this.tileY = 16;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.name = \"armored skeleton\";\n    this.forwardOnlyAttack = true;\n    this.armored = true;\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (\n    playerHitBy: Player,\n    damage: number,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    this.handleEnemyCase(playerHitBy);\n\n    let hitShield = false;\n    let shieldHealth = 0;\n    if (this.shielded) {\n      shieldHealth = this.shield.health;\n      if (shieldHealth > 0) {\n        this.shield.hurt(damage);\n        hitShield = true;\n      }\n    }\n    this.ticksSinceFirstHit = 0;\n    if (this.health == 2) this.unconscious = false;\n    this.health -= damage;\n    this.maxHealth -= shieldHealth;\n    this.startHurting();\n\n    this.healthBar.hurt();\n    this.createDamageNumber(damage, type);\n    this.playHitSound();\n    if (this.health === 2) Sound.playParry();\n\n    if (this.health === 1) {\n      this.unconscious = true;\n\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\n    } else if (this.health === 2) {\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 6, 26);\n    } else this.healthBar.hurt();\n\n    if (this.health <= 0) {\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\n      this.kill();\n    } else this.hurtCallback();\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        this.ticks++;\n\n        return;\n      }\n\n      if (this.health <= 1) {\n        this.unconscious = true;\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.healthBar.hurt();\n          this.health = 2;\n          this.unconscious = false;\n        }\n        this.ticks++;\n\n        return;\n      }\n\n      this.ticks++;\n      if (!this.seenPlayer) {\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n            undefined,\n            undefined,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            this.facePlayer(player);\n\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.tileX = 27;\n      this.tileY = 16;\n      if (this.health <= 2) {\n        this.tileX = 5;\n        this.tileY = 8;\n      }\n\n      if (this.health <= 1 || this.dying) {\n        this.tileX = 3;\n        this.tileY = 0;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileX = 2;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX +\n          (this.tileX % 5 && !this.unconscious && !this.dying\n            ? Math.floor(this.frame)\n            : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","// src/entity/enemy/armoredzombieEnemy.ts\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\n\nexport class ArmoredzombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 2;\n  static tileX: number = 17;\n  static tileY: number = 8;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.name = \"armored zombie\";\n    this.forwardOnlyAttack = true;\n    this.armored = true;\n\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY &&\n                  oldDir == this.direction\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.tileX = 27;\n      this.tileY = 8;\n      if (this.health <= 1 || this.dying) {\n        this.tileX = 17;\n        this.tileY = 8;\n      }\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../utility/random\";\n\nexport class BigKnightEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n  static difficulty: number = 4;\n  static tileX: number = 29;\n  static tileY: number = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 29;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n    this.name = \"giant knight\";\n\n    this.drops = [];\n    if (drop) this.drops.push(drop);\n    while (this.drops.length < 4) {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005)\n        this.drops.push(new Spear(this.room, this.x, this.y));\n      else if (dropProb < 0.04)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.075)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.1)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  addHitWarnings = () => {\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y + 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y + 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y - 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y - 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y + 2, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y + 2, this.x, this.y),\n    );\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health == 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health++;\n          this.ticksSinceFirstHit = 0;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID])\n                this.alertTicks = 1;\n              if (this.health >= 3) this.addHitWarnings();\n            }\n          }\n        } else if (this.seenPlayer) {\n          if (this.room.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n            let moveX = this.x;\n            let moveY = this.y;\n            if (this.ticks % 2 === 0) {\n              // horizontal preference\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n            } else {\n              // vertical preference\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n            }\n\n            let hitPlayer = false;\n            if (this.health >= 3) {\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return (\n                  player.x >= moveX &&\n                  player.x < moveX + this.w &&\n                  player.y >= moveY &&\n                  player.y < moveY + this.h\n                );\n              };\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  wouldHit(this.game.players[i], moveX, moveY)\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              if (this.x > oldX) this.direction = Direction.RIGHT;\n              else if (this.x < oldX) this.direction = Direction.LEFT;\n              else if (this.y > oldY) this.direction = Direction.DOWN;\n              else if (this.y < oldY) this.direction = Direction.UP;\n            }\n\n            if (this.health < this.maxHealth) {\n              this.ticksSinceFirstHit++;\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n                this.health++;\n                this.ticksSinceFirstHit = 0;\n              }\n            }\n\n            if (this.health >= 3) this.addHitWarnings();\n          }\n\n          let targetPlayerOffline =\n            Object.values(this.game.offlinePlayers).indexOf(\n              this.targetPlayer,\n            ) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (\n                distance <= 4 &&\n                (targetPlayerOffline ||\n                  distance < this.playerDistance(this.targetPlayer))\n              ) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID])\n                    this.alertTicks = 1;\n                  if (this.health >= 3) this.addHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        2 * Math.floor((this.tileX + this.frame) / 2) + 1,\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n\n      if (!this.cloned) {\n        if (!this.seenPlayer) {\n          this.drawSleepingZs(\n            delta,\n            GameConstants.TILESIZE * 0.5,\n            GameConstants.TILESIZE * -1,\n          );\n        }\n        if (this.alertTicks > 0) {\n          this.drawExclamation(\n            delta,\n            GameConstants.TILESIZE * 0.5,\n            GameConstants.TILESIZE * -1,\n          );\n        }\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x + 0.5,\n      this.y,\n      true,\n    );\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../utility/random\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class BigSkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  unconscious: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n  static difficulty: number = 4;\n  static tileX: number = 21;\n  static tileY: number = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 21;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.unconscious = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n    this.name = \"giant skeleton\";\n    this.dropChance = 1;\n    this.drops = [];\n    this.direction = Direction.DOWN;\n    this.forwardOnlyAttack = true;\n    this.alertRange = 10;\n    this.drawMoveSpeed = 0.9;\n    if (drop) this.drops.push(drop);\n    const dropAmount = Math.floor(Math.random() * 3) + 2;\n    while (this.drops.length < dropAmount && !this.cloned) {\n      this.getDrop();\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (\n    playerHitBy: Player,\n    damage: number,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    this.handleEnemyCase(playerHitBy);\n\n    let hitShield = false;\n    let shieldHealth = 0;\n    if (this.shielded) {\n      shieldHealth = this.shield.health;\n      if (shieldHealth > 0) {\n        this.shield.hurt(damage);\n        hitShield = true;\n      }\n    }\n    this.ticksSinceFirstHit = 0;\n    if (this.health == 4) this.unconscious = false;\n    this.health -= damage;\n    this.maxHealth -= shieldHealth;\n    this.startHurting();\n\n    this.healthBar.hurt();\n    this.createDamageNumber(damage, type);\n    this.playHitSound();\n\n    if (this.health == 2) {\n      this.unconscious = true;\n      ImageParticle.spawnCluster(this.room, this.x + 1, this.y + 1, 3, 28);\n    } else {\n      this.healthBar.hurt();\n    }\n    if (this.health <= 0) {\n      ImageParticle.spawnCluster(this.room, this.x + 1, this.y + 1, 0, 24);\n      this.kill();\n    } else this.hurtCallback();\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        this.ticks++;\n        return;\n      }\n\n      if (this.health <= 2) {\n        this.unconscious = true;\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.healthBar.hurt();\n          this.health = 4;\n          this.unconscious = false;\n        }\n        this.ticks++;\n        return;\n      }\n\n      this.ticks++;\n      if (!this.seenPlayer) {\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              // For 2x2 enemy, block all tiles the entity occupies\n              for (let ex = 0; ex < (e.w || 1); ex++) {\n                for (let ey = 0; ey < (e.h || 1); ey++) {\n                  disablePositions.push({\n                    x: e.x + ex,\n                    y: e.y + ey,\n                  } as astar.Position);\n                }\n              }\n            }\n          }\n\n          // Check for spike traps around the 2x2 area\n          for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\n              if (\n                this.room.roomArray[xx] &&\n                this.room.roomArray[xx][yy] &&\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n            undefined,\n            undefined,\n          );\n\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            this.facePlayer(player);\n\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return (\n                  player.x >= moveX &&\n                  player.x < moveX + this.w &&\n                  player.y >= moveY &&\n                  player.y < moveY + this.h\n                );\n              };\n\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  wouldHit(this.game.players[i], moveX, moveY)\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add directional disable positions for forward-only attack\n          if (this.direction == Direction.LEFT) {\n            for (let i = 0; i < this.h; i++) {\n              disablePositions.push({\n                x: this.x,\n                y: this.y + i + 1,\n              } as astar.Position);\n              disablePositions.push({\n                x: this.x,\n                y: this.y + i - 1,\n              } as astar.Position);\n            }\n          }\n          if (this.direction == Direction.RIGHT) {\n            for (let i = 0; i < this.h; i++) {\n              disablePositions.push({\n                x: this.x + this.w - 1,\n                y: this.y + i + 1,\n              } as astar.Position);\n              disablePositions.push({\n                x: this.x + this.w - 1,\n                y: this.y + i - 1,\n              } as astar.Position);\n            }\n          }\n          if (this.direction == Direction.DOWN) {\n            for (let i = 0; i < this.w; i++) {\n              disablePositions.push({\n                x: this.x + i + 1,\n                y: this.y + this.h - 1,\n              } as astar.Position);\n              disablePositions.push({\n                x: this.x + i - 1,\n                y: this.y + this.h - 1,\n              } as astar.Position);\n            }\n          }\n          if (this.direction == Direction.UP) {\n            for (let i = 0; i < this.w; i++) {\n              disablePositions.push({\n                x: this.x + i + 1,\n                y: this.y,\n              } as astar.Position);\n              disablePositions.push({\n                x: this.x + i - 1,\n                y: this.y,\n              } as astar.Position);\n            }\n          }\n          this.makeBigHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeBigHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.tileX = 21;\n      this.tileY = 0;\n      if (this.health <= 3) {\n        this.tileX = 21;\n        this.tileY = 4;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 0;\n          }\n        }\n      }\n      if (this.health <= 2) {\n        this.tileX = 21;\n        this.tileY = 8;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 4;\n          }\n        }\n      }\n      if (this.health <= 1 || this.cloned) {\n        this.tileX = 21;\n        this.tileY = 12;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 8;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 20 ? Math.floor(this.frame) * 2 : 0),\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n      if (!this.cloned) {\n        if (!this.seenPlayer) {\n          this.drawSleepingZs(\n            delta,\n            GameConstants.TILESIZE * 0.5,\n            GameConstants.TILESIZE * -1,\n          );\n        }\n        if (this.alertTicks > 0) {\n          this.drawExclamation(\n            delta,\n            GameConstants.TILESIZE * 0.5,\n            GameConstants.TILESIZE * -1,\n          );\n        }\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x + 0.5,\n      this.y,\n      true,\n    );\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { Random } from \"../../utility/random\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class BigZombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  dir: Direction;\n  static difficulty: number = 1;\n  static tileX: number = 21;\n  static tileY: number = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.w = 2;\n    this.h = 2;\n\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 31;\n    this.tileY = 12;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.dir = Direction.DOWN;\n    this.name = \"bigzombie\";\n    this.chainPushable = false;\n\n    this.forwardOnlyAttack = true;\n    this.drawMoveSpeed = 0.9;\n    this.jumpHeight = 0.35;\n    this.drawYOffset = 1.5;\n    this.alertRange = 10;\n\n    if (drop) this.drop = drop;\n    const dropAmount = Math.floor(Math.random() * 3) + 2;\n    while (this.drops.length < dropAmount && !this.cloned) {\n      this.getDrop();\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              // For 2x2 entity, block all positions the entity occupies\n              for (let dx = 0; dx < e.w; dx++) {\n                for (let dy = 0; dy < e.h; dy++) {\n                  disablePositions.push({\n                    x: e.x + dx,\n                    y: e.y + dy,\n                  } as astar.Position);\n                }\n              }\n            }\n          }\n\n          // Check spike traps in a larger area for 2x2 entity\n          for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\n              if (\n                this.room.roomArray[xx] &&\n                this.room.roomArray[xx][yy] &&\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room\n                ) {\n                  // Check if player is within any of the 2x2 positions we're moving to\n                  let playerHit = false;\n                  for (let dx = 0; dx < this.w; dx++) {\n                    for (let dy = 0; dy < this.h; dy++) {\n                      if (\n                        this.game.players[i].x === moveX + dx &&\n                        this.game.players[i].y === moveY + dy\n                      ) {\n                        playerHit = true;\n                        break;\n                      }\n                    }\n                    if (playerHit) break;\n                  }\n\n                  if (playerHit) {\n                    this.game.players[i].hurt(this.hit(), this.name);\n                    this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                    this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                    if (\n                      this.game.players[i] ===\n                      this.game.players[this.game.localPlayerID]\n                    )\n                      this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                    hitPlayer = true;\n                  }\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeBigHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeBigHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x + 0.5,\n      this.y,\n      true,\n    );\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    //this.updateShadeColor(delta);\n    Game.ctx.globalAlpha = this.alpha;\n    this.updateDrawXY(delta);\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    if (this.hasShadow)\n      Game.drawMob(\n        0,\n        0,\n        2,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        2,\n        2,\n        this.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawMob(\n      this.tileX, // + Math.floor(this.frame),\n      this.tileY + this.direction * 3,\n      2,\n      3,\n      this.x - this.drawX,\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\n      2,\n      3,\n      this.softShadeColor,\n      this.shadeAmount(),\n    );\n\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Door } from \"../../tile/door\";\nimport { Enemy } from \"./enemy\";\n\nexport class BishopEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 2;\n  static tileX: number = 31;\n  static tileY: number = 8;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 31;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"bishop\";\n    this.jumpHeight = 1;\n    this.diagonalAttackRange = 1;\n    this.diagonalAttack = true;\n    this.orthogonalAttack = false;\n    this.imageParticleX = 0;\n    this.imageParticleY = 26;\n    if (drop) this.drop = drop;\n    this.armored = true;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Entity): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\n    if (jumpY < 0.01) jumpY = 0;\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\n    this.jumpY = jumpY;\n  };\n\n  behavior = () => {\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n              if (this.room.roomArray[xx][yy] instanceof Door) {\n                // don't walk into doorways (normally wouldn't be an issue without diagonals)\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n          disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y } as astar.Position);\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n          );\n          moves = moves.filter((move) => {\n            const dx = Math.abs(move.pos.x - this.x);\n            const dy = Math.abs(move.pos.y - this.y);\n            return dx === 1 && dy === 1;\n          });\n          if (this.justHurt) {\n            this.retreat(oldX, oldY);\n          } else if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                hitPlayer = true;\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    let offsetTileY = this.health <= 1 || this.cloned === true ? 2 : 0;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + offsetTileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount() * (1 + this.jumpY / 3),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { Door } from \"../../tile/door\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\n\nexport enum ChargeEnemyState {\n  IDLE,\n  ALERTED,\n  CHARGING,\n}\n\nexport class ChargeEnemy extends Enemy {\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  ticks: number;\n  frame: number;\n  state: ChargeEnemyState;\n  trailFrame: number;\n  drop: Item;\n  maxChargeDistance: number = 3;\n  static difficulty: number = 5;\n  static tileX: number = 13;\n  static tileY: number = 8;\n  trailAlpha: number = 1;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 13;\n    this.tileY = 8;\n    this.trailFrame = 0;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.name = \"charge knight\";\n\n    this.state = ChargeEnemyState.IDLE;\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  canMoveOver = (x: number, y: number): boolean => {\n    for (const e of this.room.entities) {\n      if (e !== this && x === e.x && y === e.y) return false;\n    }\n    let t = this.room.roomArray[x][y];\n    return !(t.isSolid() || t instanceof Door);\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (this.state === ChargeEnemyState.IDLE) {\n        let blocked = false;\n        let dx = 0;\n        let dy = 0;\n        for (const i in this.game.players) {\n          // Check if player is within detection range (maxChargeDistance)\n          const playerX = this.game.players[i].x;\n          const playerY = this.game.players[i].y;\n          const distanceX = Math.abs(this.x - playerX);\n          const distanceY = Math.abs(this.y - playerY);\n\n          // Only detect players in straight lines and within maxChargeDistance\n          if (\n            (this.x === playerX && distanceY <= this.maxChargeDistance) ||\n            (this.y === playerY && distanceX <= this.maxChargeDistance)\n          ) {\n            if (this.x === playerX) {\n              if (this.y < playerY) dy = 1;\n              else dy = -1;\n              for (let yy = this.y; yy !== playerY; yy += dy) {\n                if (!this.canMoveOver(this.x, yy)) blocked = true;\n              }\n            } else if (this.y === playerY) {\n              if (this.x < playerX) dx = 1;\n              else dx = -1;\n              for (let xx = this.x; xx !== playerX; xx += dx) {\n                if (!this.canMoveOver(xx, this.y)) blocked = true;\n              }\n            }\n\n            if ((dx !== 0 || dy !== 0) && !blocked) {\n              this.state = ChargeEnemyState.ALERTED;\n              this.targetX = this.x;\n              this.targetY = this.y;\n              let distanceMoved = 0;\n              while (\n                this.canMoveOver(this.targetX + dx, this.targetY + dy) &&\n                distanceMoved < this.maxChargeDistance\n              ) {\n                this.targetX += dx;\n                this.targetY += dy;\n                distanceMoved++;\n                if (\n                  (this.targetX === playerX && this.targetY === playerY) ||\n                  (this.targetX === playerX - 1 && this.targetY === playerY) ||\n                  (this.targetX === playerX + 1 && this.targetY === playerY) ||\n                  (this.targetX === playerX && this.targetY === playerY - 1) ||\n                  (this.targetX === playerX && this.targetY === playerY + 1)\n                )\n                  this.room.hitwarnings.push(\n                    new HitWarning(\n                      this.game,\n                      this.targetX,\n                      this.targetY,\n                      this.x,\n                      this.y,\n                    ),\n                  );\n              }\n              this.visualTargetX = this.targetX + 0.5 * dx;\n              this.visualTargetY = this.targetY + 0.5 * dy;\n              if (dy === 1) this.visualTargetY += 0.65;\n              if (dx > 0) this.direction = Direction.RIGHT;\n              else if (dx < 0) this.direction = Direction.LEFT;\n              else if (dy < 0) this.direction = Direction.UP;\n              else if (dy > 0) this.direction = Direction.DOWN;\n              break;\n            }\n          }\n        }\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.state = ChargeEnemyState.CHARGING;\n        this.trailFrame = 0;\n\n        for (const i in this.game.players) {\n          if (\n            (this.y === this.game.players[i].y &&\n              ((this.x < this.game.players[i].x &&\n                this.game.players[i].x <= this.targetX) ||\n                (this.targetX <= this.game.players[i].x &&\n                  this.game.players[i].x < this.x))) ||\n            (this.x === this.game.players[i].x &&\n              ((this.y < this.game.players[i].y &&\n                this.game.players[i].y <= this.targetY) ||\n                (this.targetY <= this.game.players[i].y &&\n                  this.game.players[i].y < this.y)))\n          ) {\n            this.game.players[i].hurt(this.hit(), this.name);\n          }\n        }\n\n        this.startX = this.x;\n        this.startY = this.y;\n        this.drawX = this.targetX - this.x;\n        this.drawY = this.targetY - this.y;\n        this.x = this.targetX;\n        this.y = this.targetY;\n      } else if (this.state === ChargeEnemyState.CHARGING) {\n        this.state = ChargeEnemyState.IDLE;\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (\n        (this.state === ChargeEnemyState.CHARGING &&\n          Math.abs(this.drawX) > 0.1) ||\n        Math.abs(this.drawY) > 0.1\n      ) {\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"black\",\n        );\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"white\",\n        );\n      }\n\n      if (this.state === ChargeEnemyState.CHARGING || this.trailAlpha < 1) {\n        this.trailFrame += 0.03 * delta;\n        let t = this.trailFrame;\n\n        if (t >= 0 && t <= 1) {\n          Game.ctx.strokeStyle = \"white\";\n          if (GameConstants.ALPHA_ENABLED) {\n            this.trailAlpha = 1 - t;\n            Game.ctx.globalAlpha = this.trailAlpha;\n          }\n\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n          Game.ctx.beginPath();\n          Game.ctx.moveTo(\n            (this.startX + 0.5) * GameConstants.TILESIZE,\n            (this.startY + 0.5) * GameConstants.TILESIZE,\n          );\n          Game.ctx.lineCap = \"round\";\n          Game.ctx.lineTo(\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE,\n          );\n          Game.ctx.stroke();\n          Game.ctx.globalAlpha = 1;\n        }\n        if (this.trailAlpha <= 0) this.trailAlpha = 1;\n      }\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n      if (!this.cloned) {\n        if (this.state === ChargeEnemyState.IDLE) {\n          this.drawSleepingZs(delta);\n        } else if (this.state === ChargeEnemyState.ALERTED) {\n          this.drawExclamation(delta);\n        }\n      }\n    }\n    this.drawChargeBeam(delta);\n    Game.ctx.restore();\n  };\n\n  drawChargeBeam = (delta: number) => {\n    if (this.dying) return;\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true,\n    );\n    this.drawX += -0.1 * this.drawX;\n    this.drawY += -0.1 * this.drawY;\n\n    if (this.state === ChargeEnemyState.ALERTED) {\n      this.trailFrame += 0.2 * delta;\n\n      if (Math.floor(this.trailFrame) % 2 === 0) {\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\n        if (this.direction === Direction.LEFT) startX -= 3;\n        else if (this.direction === Direction.RIGHT) startX += 3;\n        else if (this.direction === Direction.DOWN) startY += 2;\n        else if (this.direction === Direction.UP) startY -= 8;\n\n        // Calculate end coordinates based on direction and max distance\n        let endX = this.visualTargetX;\n        let endY = this.visualTargetY;\n\n        // Cap the beam length to maxChargeDistance\n        const dx =\n          this.direction === Direction.LEFT\n            ? -1\n            : this.direction === Direction.RIGHT\n              ? 1\n              : 0;\n        const dy =\n          this.direction === Direction.UP\n            ? -1\n            : this.direction === Direction.DOWN\n              ? 1\n              : 0;\n\n        const distance = Math.max(\n          Math.abs(this.visualTargetX - this.x),\n          Math.abs(this.visualTargetY - this.y),\n        );\n\n        if (distance > this.maxChargeDistance) {\n          endX = this.x + dx * this.maxChargeDistance;\n          endY = this.y + dy * this.maxChargeDistance;\n          if (dy === 1) endY += 0.65;\n          if (dx > 0) endX += 0.5;\n          else if (dx < 0) endX -= 0.5;\n        }\n\n        Game.ctx.strokeStyle = \"white\";\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.1;\n        Game.ctx.beginPath();\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\n        Game.ctx.lineCap = \"round\";\n        Game.ctx.lineTo(\n          Math.round((endX + 0.5) * GameConstants.TILESIZE),\n          Math.round((endY - 0.25) * GameConstants.TILESIZE),\n        );\n        Game.ctx.stroke();\n        Game.ctx.globalAlpha = 1;\n      }\n    }\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Enemy } from \"./enemy\";\nimport { Utils } from \"../../utility/utils\";\n\nexport class CrabEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 1;\n  static tileX: number = 8;\n  static tileY: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 4;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"crab\";\n    this.orthogonalAttack = true;\n    this.imageParticleX = 3;\n    this.imageParticleY = 24;\n    //if (drop) this.drop = drop;\n    this.drawYOffset = 0.175;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  get alertText() {\n    return `New Enemy Spotted: Crab \n    Health: ${this.health}\n    Attack Pattern: Omnidirectional\n    Moves every other turn`;\n  }\n\n  hit = (): number => {\n    return 0.5;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            this.target =\n              this.getAverageLuminance() > 0 // 0.8\n                ? this.targetPlayer\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\n                    .darkest;\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.target,\n              disablePositions,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              this.lastPlayerPos,\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.setDrawXY(oldX, oldY);\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.rumbling = true;\n            /*\n            if (\n              (this.target.x === this.targetPlayer.x &&\n                this.target.y === this.targetPlayer.y) ||\n              Utils.distance(\n                this.targetPlayer.x,\n                this.targetPlayer.y,\n                this.x,\n                this.y,\n              ) <= 2\n            )\n              */ {\n              this.makeHitWarnings();\n            }\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  /*\n                  if (\n                    (this.target.x === this.targetPlayer.x &&\n                      this.target.y === this.targetPlayer.y) ||\n                    Utils.distance(\n                      this.targetPlayer.x,\n                      this.targetPlayer.y,\n                      this.x,\n                      this.y,\n                    ) <= 2\n                  ) */ {\n                    this.makeHitWarnings();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 4;\n      } else {\n        this.tileX = 8;\n        this.tileY = 4;\n      }\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - 0.25 - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction,\n        1,\n        1,\n        this.x - this.drawX + rumbleX,\n        this.y - this.drawYOffset - this.drawY + rumbleY,\n        1 * this.crushX,\n        1 * this.crushY,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n      if (this.crushed) {\n        this.crushAnim(delta);\n      }\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { globalEventBus } from \"../../event/eventBus\";\nimport { Sound } from \"../../sound/sound\";\nimport { Utils } from \"../../utility/utils\";\nimport { Door } from \"../../tile/door\";\n\nenum EnemyState {\n  SLEEP,\n  AGGRO,\n  ATTACK,\n  DEAD,\n  IDLE,\n}\n\ninterface EnemyStatus {\n  poison: {\n    active: boolean;\n    hitCount: number;\n    startTick: number;\n    effectTick: number;\n  };\n  bleed: {\n    active: boolean;\n    hitCount: number;\n    startTick: number;\n    effectTick: number;\n  };\n}\n\nexport abstract class Enemy extends Entity {\n  seenPlayer: boolean;\n  heardPlayer: boolean;\n  frame: number;\n  ticks: number;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  status: EnemyStatus;\n  protected jumpY: number;\n  protected jumpHeight: number;\n  static difficulty: number = 1;\n  private effectStartTick: number;\n  private startTick: number;\n  private poisonHitCount;\n  private bleedHitCount;\n  protected alertRange;\n  justHurt: boolean = false;\n  orthogonalAttack: boolean;\n  diagonalAttack: boolean;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.drawYOffset = 1.5;\n    this.name = \"\";\n    this.seenPlayer = false;\n    this.heardPlayer = false;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.aggro = false;\n    this.jumpY = 0;\n    this.jumpHeight = 0.3;\n    //this.dir = Direction.South;\n    this.name = \"generic enemy\";\n    this.dropChance = 10;\n    this.status = {\n      poison: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\n      bleed: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\n    };\n    this.alertRange = 4;\n    this.effectStartTick = 1;\n    this.startTick = 1;\n    this.isEnemy = true;\n    this.poisonHitCount = 0;\n    this.bleedHitCount = 0;\n    this.drawMoveSpeed = 0.85; //lower is faster\n    this.justHurt = false;\n    this.orthogonalAttack = false;\n    this.diagonalAttack = false;\n    //this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"gem\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  handleEnemyCase = (playerHitBy?: Player) => {\n    if (!playerHitBy) return;\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      //this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n  };\n\n  poison = () => {\n    if (!this.status.poison.active) {\n      this.status.poison = {\n        active: true,\n        hitCount: 0,\n        startTick: this.ticks,\n        effectTick: this.ticks % 3,\n      };\n      this.shadeColor = \"#00FF00\";\n    }\n  };\n\n  bleed = () => {\n    if (!this.status.bleed.active) {\n      this.status.bleed = {\n        active: true,\n        hitCount: 0,\n        startTick: this.ticks,\n        effectTick: this.ticks % 1,\n      };\n    }\n  };\n\n  tickPoison = () => {\n    if (this.status.poison.active && this.targetPlayer) {\n      if (\n        this.ticks % 3 === this.status.poison.effectTick &&\n        this.ticks !== this.status.poison.startTick &&\n        this.health >= 1\n      ) {\n        this.hurt(this.targetPlayer, 1, \"poison\");\n        this.shadeColor = \"#00FF00\";\n        //this.status.poison.hitCount++;\n\n        /*\n        if (this.status.poison.hitCount >= 2) {\n          this.status.poison = {\n            active: false,\n            hitCount: 0,\n            startTick: 0,\n            effectTick: 0,\n          };\n        }\n        */\n      }\n    }\n  };\n\n  tickBleed = () => {\n    if (this.status.bleed.active && this.targetPlayer) {\n      if (\n        this.ticks % 1 === this.status.bleed.effectTick &&\n        this.ticks !== this.status.bleed.startTick\n      ) {\n        this.hurt(this.targetPlayer, 0.5, \"blood\");\n        //this.targetPlayer.heal(0.5);\n        this.shadeColor = \"#FF0000\";\n        this.status.bleed.hitCount++;\n\n        if (this.status.bleed.hitCount >= 4) {\n          this.status.bleed = {\n            active: false,\n            hitCount: 0,\n            startTick: 0,\n            effectTick: 0,\n          };\n        }\n      }\n    }\n  };\n\n  tick = () => {\n    this.tickPoison();\n    this.tickBleed();\n    this.behavior();\n    if (this.x !== this.lastX || this.y !== this.lastY) {\n      this.emitEntityData();\n    }\n    if (this.shielded) this.shield.updateLightSourcePos();\n  };\n\n  lookForPlayer = (face: boolean = true) => {\n    if (this.seenPlayer) return;\n\n    const p = this.nearestPlayer();\n    if (p === false) return;\n\n    const [distance, player] = p;\n    if (distance > this.alertRange) return;\n\n    this.targetPlayer = player;\n    if (face) this.facePlayer(player);\n    this.seenPlayer = true;\n\n    globalEventBus.emit(\"EnemySeenPlayer\", {\n      enemyType: this.constructor.name,\n      enemyName: this.name,\n    });\n\n    if (player === this.game.players[this.game.localPlayerID]) {\n      this.alertTicks = 1;\n    }\n\n    this.makeHitWarnings();\n  };\n\n  getDisablePositions = (): Array<astar.Position> => {\n    let disablePositions = Array<astar.Position>();\n    for (const e of this.room.entities) {\n      if (e !== this) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n      }\n    }\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n        if (\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\n        ) {\n          // Don't walk on active spike traps\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\n        }\n      }\n    }\n    return disablePositions;\n  };\n\n  findPath = () => {\n    let disablePositions = Array<astar.Position>();\n    for (const e of this.room.entities) {\n      if (e !== this) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n      }\n    }\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n        if (\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\n        ) {\n          // Don't walk on active spike traps\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\n        }\n      }\n    }\n    // Create a grid of the room\n    let grid = [];\n    for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n        if (this.room.roomArray[x] && this.room.roomArray[x][y])\n          grid[x][y] = this.room.roomArray[x][y];\n        else grid[x][y] = false;\n      }\n    }\n\n    // Find a path to the target player\n    let moves = astar.AStar.search(\n      grid,\n      this,\n      this.targetPlayer,\n      disablePositions,\n      false,\n      false,\n      true,\n      this.direction,\n    );\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // Don't walk on active spike traps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  // Attack the player if they are in the way\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(moveX, moveY);\n                if (this.x > moveX) this.direction = Direction.RIGHT;\n                else if (this.x < moveX) this.direction = Direction.LEFT;\n                else if (this.y > moveY) this.direction = Direction.DOWN;\n                else if (this.y < moveY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  onHurt = (\n    damage: number = 1,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    if (this.health > 0) {\n      if (type === \"none\") {\n        this.justHurt = true;\n      }\n    }\n  };\n\n  retreat = (oldX: number, oldY: number) => {\n    // Calculate direction vector from player to enemy\n    let dx = this.x - this.targetPlayer.x;\n    let dy = this.y - this.targetPlayer.y;\n\n    // Normalize the direction vector\n    let length = Math.sqrt(dx * dx + dy * dy);\n    if (length > 0) {\n      dx = Math.round(dx / length);\n      dy = Math.round(dy / length);\n    }\n\n    let retreatX = this.x;\n    let retreatY = this.y;\n    let foundValidRetreat = false;\n\n    // Determine retreat behavior based on attack properties\n    if (this.orthogonalAttack && this.diagonalAttack) {\n      // Both enabled: use current behavior (try orthogonal first, then diagonal)\n      retreatX = this.x + dx;\n      retreatY = this.y + dy;\n\n      if (this.room.isTileEmpty(retreatX, retreatY)) {\n        foundValidRetreat = true;\n      } else {\n        // Try diagonal positions\n        let diagonal1X = this.x + dx - dy;\n        let diagonal1Y = this.y + dy + dx;\n        let diagonal2X = this.x + dx + dy;\n        let diagonal2Y = this.y + dy - dx;\n\n        // Randomly choose which diagonal to check first\n        let checkFirst = Math.random() < 0.5;\n        let firstX = checkFirst ? diagonal1X : diagonal2X;\n        let firstY = checkFirst ? diagonal1Y : diagonal2Y;\n        let secondX = checkFirst ? diagonal2X : diagonal1X;\n        let secondY = checkFirst ? diagonal2Y : diagonal1Y;\n\n        // Check first diagonal\n        if (this.room.isTileEmpty(firstX, firstY)) {\n          retreatX = firstX;\n          retreatY = firstY;\n          foundValidRetreat = true;\n        }\n        // Check second diagonal if first is blocked\n        else if (this.room.isTileEmpty(secondX, secondY)) {\n          retreatX = secondX;\n          retreatY = secondY;\n          foundValidRetreat = true;\n        }\n      }\n    } else if (this.orthogonalAttack) {\n      // Only orthogonal retreat allowed\n      retreatX = this.x + dx;\n      retreatY = this.y + dy;\n\n      if (this.room.isTileEmpty(retreatX, retreatY)) {\n        foundValidRetreat = true;\n      }\n    } else if (this.diagonalAttack) {\n      // Only diagonal retreat allowed\n      let diagonal1X = this.x + dx - dy;\n      let diagonal1Y = this.y + dy + dx;\n      let diagonal2X = this.x + dx + dy;\n      let diagonal2Y = this.y + dy - dx;\n\n      // Randomly choose which diagonal to check first\n      let checkFirst = Math.random() < 0.5;\n      let firstX = checkFirst ? diagonal1X : diagonal2X;\n      let firstY = checkFirst ? diagonal1Y : diagonal2Y;\n      let secondX = checkFirst ? diagonal2X : diagonal1X;\n      let secondY = checkFirst ? diagonal2Y : diagonal1Y;\n\n      // Check first diagonal\n      if (this.room.isTileEmpty(firstX, firstY)) {\n        retreatX = firstX;\n        retreatY = firstY;\n        foundValidRetreat = true;\n      }\n      // Check second diagonal if first is blocked\n      else if (this.room.isTileEmpty(secondX, secondY)) {\n        retreatX = secondX;\n        retreatY = secondY;\n        foundValidRetreat = true;\n      }\n    }\n    // If neither orthogonalAttack nor diagonalAttack is true, don't retreat\n\n    // Only move if we found a valid retreat position\n    if (foundValidRetreat) {\n      this.tryMove(retreatX, retreatY);\n      this.setDrawXY(oldX, oldY);\n    }\n\n    this.justHurt = false;\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n    this.jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\n    if (this.jumpY < 0.01) this.jumpY = 0;\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n  };\n\n  updateDrawXY = (delta: number) => {\n    //putting this here bc i'm lazy\n    this.updateHurtFrame(delta);\n    this.animateDying(delta);\n\n    if (!this.doneMoving()) {\n      this.drawX *= this.drawMoveSpeed ** delta;\n      this.drawY *= this.drawMoveSpeed ** delta;\n\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\n      this.jump(delta);\n    }\n\n    this.updateShadeColor(delta);\n  };\n\n  setDrawXY = (x: number, y: number) => {\n    this.drawX += this.x - x;\n    this.drawY += this.y - y;\n  };\n\n  get lastPlayerPos() {\n    return {\n      x: this.targetPlayer.lastX,\n      y: this.targetPlayer.lastY,\n    };\n  }\n\n  teleport = () => {\n    let newTile = this.findFarTile();\n    if (newTile) {\n      this.drawX = newTile.x - this.x;\n      this.drawY = newTile.y - this.y;\n\n      this.x = newTile.x;\n      this.y = newTile.y;\n      this.lightSource?.updatePosition(this.x + 0.5, this.y + 0.5);\n      this.room.updateLighting();\n    }\n  };\n\n  findFarTile = () => {\n    // Get all empty tiles\n    const emptyTiles = this.room.getEmptyTiles();\n    const player = this.getPlayer();\n    // Early return if no player or no empty tiles\n    if (!player || emptyTiles.length === 0) {\n      return null;\n    }\n\n    // Calculate distances from player\n    const tilesWithDistances = emptyTiles.map((tile) => {\n      const distance = Utils.distance(tile.x, tile.y, player.x, player.y);\n      return { tile, distance };\n    });\n\n    // Sort by distance (farthest first)\n    tilesWithDistances.sort((a, b) => b.distance - a.distance);\n\n    // Take only the 50% farthest tiles\n    const farTiles = tilesWithDistances.slice(\n      0,\n      Math.floor(tilesWithDistances.length / 2),\n    );\n\n    // If no far tiles available, return null\n    if (farTiles.length === 0) {\n      return null;\n    }\n\n    // Choose a random tile from the far tiles\n    const randomIndex = Math.floor(Math.random() * farTiles.length);\n    return farTiles[randomIndex].tile;\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.dying) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  get type() {\n    return EntityType.ENEMY;\n  }\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Item } from \"../../item/item\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class EnergyWizardEnemy extends WizardEnemy {\n  static difficulty: number = 3;\n  static tileX: number = 6;\n  static tileY: number = 0;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"wizard bomber\";\n    this.projectileColor = [0, 50, 150];\n\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n        this.frame += 0.4 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.cloned) {\n        if (!this.seenPlayer) {\n          this.drawSleepingZs(delta);\n        }\n        if (this.alertTicks > 0) {\n          this.drawExclamation(delta);\n        }\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { Random } from \"../../utility/random\";\nimport { Item } from \"../../item/item\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class FireWizardEnemy extends WizardEnemy {\n  static difficulty: number = 3;\n  static tileX: number = 35;\n  static tileY: number = 8;\n  readonly ATTACK_RADIUS = 5;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 35;\n    this.tileY = 8;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"fire wizard\";\n    this.projectileColor = [200, 20, 0];\n    if (drop) this.drop = drop;\n    this.jumpHeight = 0.5;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if (\n        (this.x - this.game.players[i].x) ** 2 +\n          (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2\n      ) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            const nearestPlayerInfo = this.nearestPlayer();\n            if (nearestPlayerInfo !== false) {\n              const [distance, targetPlayer] = nearestPlayerInfo;\n              const attackLength = 20;\n\n              const offsets = this.calculateProjectileOffsets(\n                targetPlayer.x,\n                targetPlayer.y,\n                10,\n              );\n\n              this.attemptProjectilePlacement(\n                [\n                  { x: -1, y: 0 },\n                  { x: -1, y: -1 },\n                  { x: 1, y: 0 },\n                  { x: 1, y: 1 },\n                  { x: 0, y: -1 },\n                  { x: 1, y: -1 },\n                  { x: 0, y: 1 },\n                  { x: -1, y: 1 },\n                ],\n                WizardFireball,\n                false,\n              );\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\n            emptyTiles = emptyTiles.filter(\n              (tile) =>\n                !this.room.projectiles.some(\n                  (projectile) =>\n                    projectile.x === tile.x && projectile.y === tile.y,\n                ),\n            );\n\n            if (\n              emptyTiles.length === 0 ||\n              Object.keys(this.game.players).length === 0\n            ) {\n              this.state = WizardState.idle;\n              break;\n            }\n\n            let optimalDist = Game.randTable(\n              [2, 2, 3, 3, 3, 3, 3],\n              Random.rand,\n            );\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n\n            if (!this.game.players[target_player_id]) {\n              this.state = WizardState.idle;\n              break;\n            }\n\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n\n            if (!bestPos) {\n              bestPos = emptyTiles[0];\n            }\n\n            this.tryMove(bestPos.x, bestPos.y);\n            this.drawX = this.x - oldX;\n            this.drawY = this.y - oldY;\n            this.frame = 0;\n            this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\n            if (this.withinAttackingRangeOfPlayer()) {\n              this.state = WizardState.attack;\n            } else {\n              this.state = WizardState.idle;\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    this.frame += 0.1 * delta;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (this.frame >= 4) this.frame = 0;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          this.tileX + Math.floor(this.frame),\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { astar } from \"../../utility/astarclass\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Coin } from \"../../item/coin\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { Utils } from \"../../utility/utils\";\n\nexport class FrogEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  frameLength: number;\n  startFrame: number;\n  animationSpeed: number;\n  tickCount: number;\n  rumbling: boolean;\n  jumping: boolean;\n  jumpDistance: number;\n  static difficulty: number = 1;\n  static tileX: number = 12;\n  static tileY: number = 16;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 12;\n    this.tileY = 16;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.frameLength = 3;\n    this.startFrame = 0;\n    this.animationSpeed = 0.1;\n    this.tickCount = 0;\n    this.jumping = false;\n    this.jumpDistance = 1;\n    this.drop = drop ? drop : new Coin(this.room, this.x, this.y);\n    this.name = \"frog\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = true;\n    this.jumpHeight = 1;\n    this.imageParticleX = 3;\n    this.imageParticleY = 30;\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\", \"poison\"]);\n  }\n\n  hit = (): number => {\n    return 0.5;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.tileX = 1;\n    this.frameLength = 3;\n    this.animationSpeed = 0.1;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        this.tileX = 12;\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        this.tileX = 1;\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            let targetPosition = {\n              x: this.targetPlayer.x,\n              y: this.targetPlayer.y,\n            };\n            let dx = this.targetPlayer.x - this.x;\n            let dy = this.targetPlayer.y - this.y;\n            if (\n              (dx === 0 && dy <= 1) ||\n              (dx <= 1 && dy === 0) ||\n              (dx === 0 && dy >= -1) ||\n              (dx >= -1 && dy === 0)\n            ) {\n              let jumpOverX = this.targetPlayer.x + dx;\n              let jumpOverY = this.targetPlayer.y + dy;\n              if (\n                this.room.roomArray[jumpOverX] &&\n                this.room.roomArray[jumpOverX][jumpOverY]\n              ) {\n                if (!this.room.roomArray[jumpOverX][jumpOverY].isSolid()) {\n                  targetPosition = {\n                    x: jumpOverX,\n                    y: jumpOverY,\n                  };\n                }\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              targetPosition,\n              disablePositions,\n              false,\n              false,\n              false,\n              undefined,\n              undefined,\n              false,\n              this.lastPlayerPos,\n            );\n            //console.log(moves); //DON'T REMOVE THIS\n\n            if (moves[1]) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[1].pos.x &&\n                  this.game.players[i].y === moves[1].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX += 1.5 * (this.x - this.game.players[i].x);\n                  this.drawY += 1.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(5 * this.drawX, 5 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                if (moves.length > 1) {\n                  let moveX = moves[1].pos.x;\n                  let moveY = moves[1].pos.y;\n                  this.tryMove(moveX, moveY);\n                  this.setDrawXY(this.lastX, this.lastY);\n\n                  if (this.jumping) {\n                    this.frame = 8;\n                    this.animationSpeed = 1;\n                  }\n                  if (this.x > moveX) this.direction = Direction.RIGHT;\n                  else if (this.x < moveX) this.direction = Direction.LEFT;\n                  else if (this.y > moveY) this.direction = Direction.DOWN;\n                  else if (this.y < moveY) this.direction = Direction.UP;\n                }\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.makeHitWarnings();\n            this.rumbling = true;\n            this.tileX = 3;\n            this.frame = 0;\n            this.frameLength = 2;\n            this.animationSpeed = 0.2;\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.makeHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  jump = (delta: number) => {\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\n    if (this.jumping) {\n      let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n      if (j > 1) {\n        this.jumpDistance = 2;\n      }\n      this.jumpY =\n        Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\n      if (this.jumpY < 0.01 && this.jumpY > -0.01) {\n        this.jumpY = 0;\n        this.jumpDistance = 1;\n      }\n      if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n    }\n  };\n\n  makeHitWarnings = () => {\n    const cullFactor = 0.25;\n    const player: Player = this.getPlayer();\n    const orthogonal = this.orthogonalAttack;\n    const diagonal = this.diagonalAttack;\n    const forwardOnly = this.forwardOnlyAttack;\n    const direction = this.direction;\n    const orthoRange = this.attackRange;\n    const diagRange = this.diagonalAttackRange;\n\n    const generateOffsets = (\n      isOrthogonal: boolean,\n      range: number,\n    ): number[][] => {\n      const baseOffsets = isOrthogonal\n        ? [\n            [-2, 0],\n            [2, 0],\n            [0, -2],\n            [0, 2],\n          ]\n        : [\n            [-1, -1],\n            [1, 1],\n            [1, -1],\n            [-1, 1],\n          ];\n      return baseOffsets.flatMap(([dx, dy]) =>\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\n      );\n    };\n\n    const directionOffsets = {\n      [Direction.LEFT]: [-1, 0],\n      [Direction.RIGHT]: [1, 0],\n      [Direction.UP]: [0, -1],\n      [Direction.DOWN]: [0, 1],\n    };\n\n    let offsets: number[][] = [];\n    if (forwardOnly) {\n      const [dx, dy] = directionOffsets[direction];\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\n        (i + 1) * dx,\n        (i + 1) * dy,\n      ]);\n    } else {\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\n    }\n\n    const warningCoordinates = offsets\n      .map(([dx, dy]) => ({\n        x: dx,\n        y: dy,\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\n      }))\n      .sort((a, b) => a.distance - b.distance);\n\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\n\n    culledWarnings.forEach(({ x, y }) => {\n      const targetX = this.x + x;\n      const targetY = this.y + y;\n      if (this.isWithinRoomBounds(targetX, targetY)) {\n        const hitWarning = new HitWarning(\n          this.game,\n          targetX,\n          targetY,\n          this.x,\n          this.y,\n          true,\n          false,\n          this,\n        );\n        this.room.hitwarnings.push(hitWarning);\n        //this.hitWarnings.push(hitWarning);\n      }\n    });\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += this.animationSpeed * delta;\n      if (this.frame >= this.frameLength) {\n        this.frame = 0;\n      }\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\n      let rumbleY = this.rumble(this.rumbling, this.frame).y;\n      if (this.drawX !== 0 || this.drawY !== 0) {\n        this.jumping = true;\n      } else {\n        this.jumping = false;\n      }\n      if (this.jumping) {\n        this.frameLength = 10;\n        this.animationSpeed = 0.4;\n      } else {\n        this.frameLength = 3;\n        this.animationSpeed = 0.1;\n      }\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX +\n          (this.tileX !== 12 && !this.rumbling ? Math.floor(this.frame) : 0),\n        this.tileY /*+ this.direction * 2,*/,\n        1,\n        2,\n        this.x + rumbleX - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Enemy } from \"./enemy\";\nimport { Utils } from \"../../utility/utils\";\nimport { GlowBugs } from \"../../item/light/glowBugs\";\nimport { LightSource } from \"../../lighting/lightSource\";\nimport { Entity } from \"../entity\";\n\nexport class GlowBugEnemy extends Entity {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 1;\n  static tileX: number = 8;\n  static tileY: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"glowbug\";\n    this.orthogonalAttack = true;\n    this.imageParticleX = 3;\n    this.imageParticleY = 24;\n    //if (drop) this.drop = drop;\n    this.drawYOffset = 1;\n    this.hasShadow = true;\n    this.hasHitParticles = false;\n    this.hasDamageNumbers = false;\n    this.hasBloom = true;\n    this.bloomAlpha = 1;\n    this.bloomColor = \"#054B4B\";\n\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      6,\n      [5, 75, 75],\n    );\n    this.addLightSource(this.lightSource);\n    this.drops = [new GlowBugs(this.room, this.x, this.y)]; //this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  get alertText() {\n    return `New Enemy Spotted: Crab \n    Health: ${this.health}\n    Attack Pattern: Omnidirectional\n    Moves every other turn`;\n  }\n\n  hit = (): number => {\n    return 0.5;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.seenPlayer = true;\n    this.aggro = true;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.wander();\n\n      this.lightSource.x = this.x + 0.5;\n      this.lightSource.y = this.y + 0.5;\n      this.room.updateLighting();\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n\n      this.frame += 0.15 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      this.tileX = 8 + this.frame;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        Math.floor(this.tileX),\n        this.tileY,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        1,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n      if (this.crushed) {\n        this.crushAnim(delta);\n      }\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\n\nexport class KnightEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  targetPlayer: Player;\n  aggro: boolean;\n  drop: Item;\n  static difficulty: number = 2;\n  static tileX: number = 9;\n  static tileY: number = 8;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 9;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.name = \"burrow knight\";\n    this.orthogonalAttack = true;\n    this.imageParticleX = 3;\n    this.imageParticleY = 29;\n    if (drop) this.drop = drop;\n    this.getDrop([\n      \"weapon\",\n      \"warhammer\",\n      \"equipment\",\n      \"consumable\",\n      \"tool\",\n      \"coin\",\n    ]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.rumbling = true;\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              this.lastPlayerPos,\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.rumbling = true;\n            this.makeHitWarnings();\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.rumbling = true;\n                  this.makeHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    let rumbleX = this.rumble(this.rumbling, this.frame).x;\n    let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 8;\n      } else {\n        this.tileX = 4;\n        this.tileY = 0;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX + rumbleX,\n        this.y -\n          this.drawYOffset -\n          this.drawY +\n          (this.tileX === 4 ? 0.1875 : 0),\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { Random } from \"../../utility/random\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class MummyEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  dir: Direction;\n  static difficulty: number = 1;\n  static tileX: number = 17;\n  static tileY: number = 8;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 16;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.dir = Direction.DOWN;\n    this.name = \"mummy\";\n    this.forwardOnlyAttack = true;\n    this.jumpHeight = 0.35;\n\n    if (drop) this.drop = drop;\n    this.getDrop([\"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // Don't walk on active spike traps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  // Attack the player if they are in the way\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    //this.updateShadeColor(delta);\n    Game.ctx.globalAlpha = this.alpha;\n    this.updateDrawXY(delta);\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    if (this.hasShadow)\n      Game.drawMob(\n        0,\n        0,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        1,\n        1,\n        this.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawMob(\n      this.tileX + Math.floor(this.frame),\n      this.tileY + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\n      1,\n      2,\n      this.softShadeColor,\n      this.shadeAmount(),\n    );\n\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\n\nimport { Enemy } from \"./enemy\";\n\nimport { Utils } from \"../../utility/utils\";\nimport { BeamEffect } from \"../../projectile/beamEffect\";\nimport { Player } from \"../../player/player\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Lighting } from \"../../lighting/lighting\";\nimport { Entity } from \"../entity\";\n\nexport class OccultistEnemy extends Enemy {\n  ticks: number;\n  seenPlayer: boolean;\n  shieldedEnemies: Enemy[];\n  range: number;\n  static tileX: number = 55;\n  static tileY: number = 8;\n  lastHealth: number;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 4;\n    this.lastHealth = this.health;\n    this.maxHealth = 4;\n    this.tileX = 55;\n    this.tileY = 8;\n    this.seenPlayer = true;\n    this.name = \"occultist\";\n    this.range = 6;\n    this.aggro = false;\n    this.frame = 0;\n    this.hasShadow = true;\n    this.shieldedBefore = false;\n    this.shieldedEnemies = [];\n    this.shadeColor = \"#000000\";\n    this.lightSource = Lighting.newLightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      [20, 0, 40],\n      3.5,\n      20,\n    );\n    this.addLightSource(this.lightSource);\n    this.room.updateLighting();\n    this.hasBloom = true;\n    this.bloomColor = \"#2E0854\";\n    this.bloomAlpha = 1;\n    this.softBloomAlpha = 0;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  uniqueKillBehavior = () => {\n    this.unshieldEnemies();\n    this.removeLightSource(this.lightSource);\n    this.lightSource = null;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    let enemiesToShield = this.enemyShieldCandidates();\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      this.ticks++;\n\n      if (this.ticks % 2 === 0) {\n        this.shieldEnemies(enemiesToShield);\n        this.updateShieldedEnemies();\n      }\n    }\n\n    if (this.shieldedEnemies.length > 0) {\n      this.shadeColor = \"#2E0854\";\n    } else {\n      this.shadeColor = \"#000000\";\n    }\n    this.runAway();\n    if (this.lightSource) {\n      this.lightSource.updatePosition(this.x + 0.5, this.y + 0.5);\n    }\n  };\n\n  onHurt = (damage: number = 1) => {\n    if (\n      this.health < this.lastHealth &&\n      this.health % 2 === 0 &&\n      this.health > 0\n    ) {\n      this.teleport();\n    }\n    this.lastHealth = this.health;\n  };\n\n  updateShieldedEnemies = () => {\n    this.shieldedEnemies.forEach((enemy) => {\n      if (enemy.dead) {\n        this.shieldedEnemies = this.shieldedEnemies.filter((e) => e !== enemy);\n      }\n    });\n  };\n\n  shieldEnemies = (enemiesToShield: Entity[]) => {\n    if (enemiesToShield.length > 0) {\n      enemiesToShield.forEach((enemy) => {\n        const distance = Utils.distance(this.x, this.y, enemy.x, enemy.y);\n        if (Math.random() * 10 > distance) {\n          this.applyShieldTo(enemy as Enemy);\n        }\n      });\n    }\n  };\n\n  enemyShieldCandidates = () => {\n    return this.room.entities.filter(\n      (entity) =>\n        entity instanceof Enemy &&\n        Utils.distance(this.x, this.y, entity.x, entity.y) <= this.range &&\n        !entity.shielded &&\n        !entity.dead &&\n        entity !== this &&\n        !entity.shieldedBefore,\n    );\n  };\n\n  unshieldEnemies = () => {\n    if (this.shieldedEnemies.length > 0) {\n      for (let enemy of this.shieldedEnemies) {\n        if (!enemy.cloned) {\n          enemy.removeShield();\n          console.log(\"unshielded enemy:\", enemy.name);\n        }\n      }\n      this.shieldedEnemies = [];\n    }\n  };\n\n  applyShieldTo = (enemy: Enemy) => {\n    //this.shadeColor = \"#2E0854\";\n    this.shadeMultiplier = 1.5;\n    enemy.applyShield();\n    this.shieldedEnemies.push(enemy);\n    if (enemy.shielded && enemy.shield) {\n      let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\n      beam.compositeOperation = \"source-over\";\n      beam.color = \"#2E0854\";\n      beam.turbulence = 0.4;\n      beam.gravity = 0.1;\n      beam.iterations = 1;\n      beam.segments = 100;\n      beam.angleChange = 0.001;\n      beam.springDamping = 0.01;\n      beam.drawableY = enemy.drawableY;\n      this.room.projectiles.push(beam);\n      console.log(\"beam created\");\n    }\n  };\n\n  private createBeam = (enemies: Enemy[]) => {\n    for (let enemy of enemies) {\n      if (enemy.shielded && enemy.shield) {\n        let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\n        beam.compositeOperation = \"source-over\";\n        beam.color = \"#2E0854\";\n        beam.turbulence = 0.5;\n        beam.gravity = 0.1;\n        beam.iterations = 1;\n        beam.segments = 30;\n        beam.angleChange = 0.01;\n        beam.springDamping = 0.1;\n        beam.drawableY = enemy.drawableY;\n        this.room.projectiles.push(beam);\n        console.log(\"beam created\");\n      }\n    }\n  };\n\n  updateBeam = (delta: number) => {\n    for (let beam of this.room.projectiles) {\n      if (beam instanceof BeamEffect) {\n        beam.setTarget(\n          this.x - this.drawX,\n          this.y - this.drawY,\n          beam.parent.x - beam.parent.drawX,\n          beam.parent.y - beam.parent.drawY,\n        );\n        beam.drawableY = beam.parent.drawableY;\n\n        switch (Math.floor(this.frame)) {\n          case 0:\n            beam.color = \"#2e0854\";\n            break;\n          case 1:\n            beam.color = \"#331988\";\n            break;\n          case 2:\n            beam.color = \"#4729db\";\n            break;\n          case 3:\n            beam.color = \"#331988\";\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    this.drawableY = this.y;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.updateBeam(delta);\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Enemy } from \"./enemy\";\n\nexport class QueenEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 4;\n  static tileX: number = 23;\n  static tileY: number = 8;\n  justHurt: boolean = false;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 23;\n    this.tileY = 10;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"queen\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = true;\n    this.jumpHeight = 1;\n    this.imageParticleX = 6;\n    this.imageParticleY = 28; //includes crown particle\n    if (drop) this.drop = drop;\n    this.armored = true;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (this.health <= 1) this.imageParticleY = 29; //no crown particle\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        this.justHurt = false;\n\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false, //diagonalsOmni\n          );\n          if (this.justHurt) {\n            this.retreat(oldX, oldY);\n          } else if (moves.length > 0) {\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              //if ()\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\n    if (jumpY < 0.01) jumpY = 0;\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\n    this.jumpY = jumpY;\n  };\n\n  draw = (delta: number) => {\n    let offsetTileY = this.health <= 1 ? 0 : -2;\n    if (this.cloned) offsetTileY = 0;\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + offsetTileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount() * (1 + this.jumpY / 3),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Enemy } from \"./enemy\";\n\nexport class RookEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 4;\n  static tileX: number = 23 + 28;\n  static tileY: number = 8;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 23 + 28;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"rook\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = false;\n    this.jumpHeight = 0.5;\n    if (drop) this.drop = drop;\n    this.armored = true;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false, //diagonalsOmni\n            this.lastPlayerPos,\n          );\n          if (this.justHurt) {\n            this.retreat(oldX, oldY);\n          } else if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    let offsetTileY = this.health <= 1 || this.cloned === true ? 2 : 0;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + offsetTileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class SkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  readonly REGEN_TICKS = 5;\n  drop: Item;\n  static difficulty: number = 2;\n  static tileX: number = 5;\n  static tileY: number = 8;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 5;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.name = \"skeleton\";\n    this.forwardOnlyAttack = true;\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (\n    playerHitBy: Player,\n    damage: number,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    this.handleEnemyCase(playerHitBy);\n\n    let hitShield = false;\n    let shieldHealth = 0;\n    if (this.shielded) {\n      shieldHealth = this.shield.health;\n      if (shieldHealth > 0) {\n        this.shield.hurt(damage);\n        hitShield = true;\n      }\n    }\n    this.ticksSinceFirstHit = 0;\n    if (this.health == 2) this.unconscious = false;\n    this.health -= damage;\n    this.maxHealth -= shieldHealth;\n    this.startHurting();\n\n    this.healthBar.hurt();\n    this.createDamageNumber(damage, type);\n    this.playHitSound();\n\n    if (this.health == 1) {\n      this.unconscious = true;\n\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\n    } else {\n      this.healthBar.hurt();\n    }\n    if (this.health <= 0) {\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\n      this.kill();\n    } else this.hurtCallback();\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        this.ticks++;\n\n        return;\n      }\n\n      if (this.health <= 1) {\n        this.unconscious = true;\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.healthBar.hurt();\n          this.health = 2;\n          this.unconscious = false;\n        }\n        this.ticks++;\n\n        return;\n      }\n\n      this.ticks++;\n      if (!this.seenPlayer) {\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n            undefined,\n            undefined,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            this.facePlayer(player);\n\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.tileX = 5;\n      this.tileY = 8;\n\n      if (this.health <= 1 || this.dying) {\n        this.tileX = 3;\n        this.tileY = 0;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileX = 2;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Floor } from \"../../tile/floor\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { SkullEnemy } from \"./skullEnemy\";\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\nimport { KnightEnemy } from \"./knightEnemy\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../utility/random\";\nimport { EnergyWizardEnemy } from \"./energyWizard\";\nimport { ZombieEnemy } from \"./zombieEnemy\";\nimport { BishopEnemy } from \"./bishopEnemy\";\nimport { CrabEnemy } from \"./crabEnemy\";\nimport { ChargeEnemy } from \"./chargeEnemy\";\nimport { BigKnightEnemy } from \"./bigKnightEnemy\";\nimport { BigSkullEnemy } from \"./bigSkullEnemy\";\nimport { FrogEnemy } from \"./frogEnemy\";\nimport { FireWizardEnemy } from \"./fireWizard\";\nimport { QueenEnemy } from \"./queenEnemy\";\nimport { ArmoredzombieEnemy } from \"./armoredzombieEnemy\";\nimport { RookEnemy } from \"./rookEnemy\";\nimport { RoomType } from \"../../room/room\";\nimport { ArmoredSkullEnemy } from \"./armoredSkullEnemy\";\nimport { GameplaySettings } from \"../../game/gameplaySettings\";\n\nexport class Spawner extends Enemy {\n  ticks: number;\n  seenPlayer: boolean;\n  enemySpawnType: number;\n  enemyTable: number[];\n  spawnFrequency: number;\n  spawnOffset: number;\n  static tileX: number = 6;\n  static tileY: number = 4;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    enemyTable: number[] = [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16],\n  ) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 6;\n    this.tileY = 4;\n    this.seenPlayer = true;\n    this.spawnFrequency = 4;\n    this.room.currentSpawnerCount++;\n    this.enemyTable = enemyTable; //enemyTable.filter((t) => t !== 7);\n    const randSpawnType = Game.randTable(this.enemyTable, Random.rand);\n    this.enemySpawnType = randSpawnType;\n    this.spawnOffset = 0;\n    this.dropChance = 1;\n    this.chainPushable = false;\n    this.getDrop([\"reaper\"], true);\n    /*\n    switch (this.enemySpawnType) {\n      case 0:\n        this.getDrop([\"consumable\"], true);\n        break;\n      case 1:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 2:\n        this.getDrop([\"consumable\"], true);\n        break;\n      case 3:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 4:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 5:\n        this.getDrop([\"consumable\"], true);\n        break;\n      case 6:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 7:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 8:\n        this.getDrop([\"gem\"], true);\n        break;\n      case 9:\n        this.getDrop([\"equipment\", \"weapon\", \"tool\"], true);\n        break;\n      case 10:\n        this.getDrop([\"weapon\"], true);\n        break;\n      case 11:\n        this.getDrop([\"weapon\"], true);\n        break;\n      case 12:\n        this.getDrop([\"weapon\"], true);\n        break;\n      case 13:\n        this.getDrop([\"weapon\"], true);\n        break;\n      case 14:\n        this.getDrop([\"weapon\"], true);\n        break;\n      case 16:\n        this.getDrop([\"weapon\", \"equipment\"], true);\n        break;\n    }*/\n    this.name = \"reaper\";\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  setSpawnFrequency = () => {\n    if (GameplaySettings.UNLIMITED_SPAWNERS) {\n      this.spawnFrequency = 4;\n    } else {\n      this.spawnFrequency = Math.min(12, 4 * this.room.currentSpawnerCount);\n    }\n    const spawners = this.room.entities.filter((e) => e instanceof Spawner);\n    this.spawnOffset = (spawners.indexOf(this) + 1) * 4;\n  };\n\n  behavior = () => {\n    this.setSpawnFrequency();\n    let shouldSpawn = true;\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.tileX = 6;\n      if ((this.ticks + this.spawnOffset) % this.spawnFrequency === 0) {\n        let positions = this.room\n          .getEmptyTiles()\n          .filter(\n            (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\n          );\n        if (this.enemySpawnType === 8) {\n          const offLimits = [\n            { x: this.x, y: this.y },\n            { x: this.x + 1, y: this.y + 1 },\n            { x: this.x - 1, y: this.y - 1 },\n            { x: this.x + 1, y: this.y - 1 },\n            { x: this.x - 1, y: this.y + 1 },\n          ];\n          positions = positions.filter(\n            (t) => !offLimits.some((o) => o.x === t.x && o.y === t.y),\n          );\n        }\n        if (positions.length > 0) {\n          this.tileX = 7;\n\n          const position = Game.randTable(positions, Random.rand);\n\n          let spawned;\n          switch (this.enemySpawnType) {\n            case 1:\n              spawned = new CrabEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 2:\n              spawned = new FrogEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 3:\n              spawned = new ZombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 4:\n              spawned = new SkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 5:\n              spawned = new EnergyWizardEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 6:\n              spawned = new ChargeEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 7:\n              spawned = new RookEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 8:\n              spawned = new BishopEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 9:\n              spawned = new ArmoredzombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 10:\n              if (this.room.type !== RoomType.BIGDUNGEON) {\n                spawned = new SkullEnemy(\n                  this.room,\n                  this.game,\n                  position.x,\n                  position.y,\n                );\n                break;\n              }\n              spawned = new BigSkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.room.roomArray[position.x + xx][position.y + yy] =\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\n                }\n              }\n              break;\n            case 11:\n              spawned = new QueenEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 12:\n              spawned = new KnightEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 13:\n              if (this.room.type !== RoomType.BIGDUNGEON) {\n                spawned = new KnightEnemy(\n                  this.room,\n                  this.game,\n                  position.x,\n                  position.y,\n                );\n                break;\n              }\n\n              spawned = new BigKnightEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.room.roomArray[position.x + xx][position.y + yy] =\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\n                }\n              }\n              break;\n            case 14:\n              spawned = new ZombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 15:\n              spawned = new FireWizardEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 16:\n              spawned = new ArmoredSkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n          }\n\n          if (shouldSpawn) {\n            this.room.projectiles.push(\n              new EnemySpawnAnimation(\n                this.room,\n                spawned,\n                position.x,\n                position.y,\n              ),\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, position.x, position.y, this.x, this.y),\n            );\n          }\n        }\n      }\n      this.ticks++;\n    }\n  };\n\n  uniqueKillBehavior = () => {\n    this.room.currentSpawnerCount--;\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.softShadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.dying) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Enemy } from \"./enemy\";\nimport { Utils } from \"../../utility/utils\";\n\nenum SpiderState {\n  VISIBLE,\n  HIDING,\n  HIDDEN,\n}\n\nexport class SpiderEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 1;\n  static tileX: number = 8;\n  static tileY: number = 4;\n  state: SpiderState;\n  revealTick: number;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 4;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"spider\";\n    this.orthogonalAttack = true;\n    this.imageParticleX = 3;\n    this.imageParticleY = 24;\n    this.state = SpiderState.HIDDEN;\n    //if (drop) this.drop = drop;\n    this.drawYOffset = 0.175;\n    this.revealTick = 0;\n\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  get alertText() {\n    return `New Enemy Spotted: Spider \n    Health: ${this.health}\n    Attack Pattern: Omnidirectional\n    Moves every other turn`;\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  toggleReveal = () => {\n    let ticksSince = this.ticks - this.revealTick;\n    if (this.state === SpiderState.HIDDEN && ticksSince > 8)\n      this.state = SpiderState.HIDING;\n    this.revealTick = this.ticks;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            this.target =\n              this.getAverageLuminance() > 0 // 0.8\n                ? this.targetPlayer\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\n                    .darkest;\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.target,\n              disablePositions,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              this.lastPlayerPos,\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.setDrawXY(oldX, oldY);\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.rumbling = true;\n            /*\n            if (\n              (this.target.x === this.targetPlayer.x &&\n                this.target.y === this.targetPlayer.y) ||\n              Utils.distance(\n                this.targetPlayer.x,\n                this.targetPlayer.y,\n                this.x,\n                this.y,\n              ) <= 2\n            )\n              */ {\n              this.makeHitWarnings();\n            }\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  /*\n                  if (\n                    (this.target.x === this.targetPlayer.x &&\n                      this.target.y === this.targetPlayer.y) ||\n                    Utils.distance(\n                      this.targetPlayer.x,\n                      this.targetPlayer.y,\n                      this.x,\n                      this.y,\n                    ) <= 2\n                  ) */ {\n                    this.makeHitWarnings();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 4;\n      } else {\n        this.tileX = 8;\n        this.tileY = 4;\n      }\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - 0.25 - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if ((this.state = SpiderState.VISIBLE)) {\n        //only draw when visible\n        Game.drawMob(\n          this.tileX,\n          this.tileY + this.direction,\n          1,\n          1,\n          this.x - this.drawX + rumbleX,\n          this.y - this.drawYOffset - this.drawY + rumbleY,\n          1 * this.crushX,\n          1 * this.crushY,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (this.crushed) {\n        this.crushAnim(delta);\n      }\n    }\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { Random } from \"../../utility/random\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { LightSource } from \"../../lighting/lightSource\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport abstract class WizardEnemy extends Enemy {\n  static difficulty: number = 3;\n  ticks: number;\n  state: WizardState;\n  frame: number;\n  seenPlayer: boolean;\n  projectileColor: [number, number, number];\n  readonly ATTACK_RADIUS = 5;\n  static tileX: number = 6;\n  static tileY: number = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"wizard bomber\";\n    if (drop) this.drop = drop;\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\n  }\n\n  newLightSource = (\n    x: number,\n    y: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.lightSource = new LightSource(x, y, radius, color, brightness);\n  };\n\n  addLightSource = (lightSource: LightSource) => {\n    this.room.lightSources.push(lightSource);\n  };\n\n  removeLightSource = (lightSource: LightSource) => {\n    this.room.lightSources = this.room.lightSources.filter(\n      (ls) => ls !== lightSource,\n    );\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if (\n        (this.x - this.game.players[i].x) ** 2 +\n          (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2\n      ) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            const nearestPlayerInfo = this.nearestPlayer();\n            if (nearestPlayerInfo !== false) {\n              const [distance, targetPlayer] = nearestPlayerInfo;\n              const attackLength = 20;\n\n              const offsets = this.calculateProjectileOffsets(\n                targetPlayer.x,\n                targetPlayer.y,\n                10,\n              );\n\n              this.attemptProjectilePlacement(\n                [\n                  { x: -1, y: 0 },\n                  { x: -2, y: 0 },\n                  { x: 1, y: 0 },\n                  { x: 2, y: 0 },\n                  { x: 0, y: -1 },\n                  { x: 0, y: -2 },\n                  { x: 0, y: 1 },\n                  { x: 0, y: 2 },\n                ],\n                WizardFireball,\n                false,\n              );\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\n            emptyTiles = emptyTiles.filter(\n              (tile) =>\n                !this.room.projectiles.some(\n                  (projectile) =>\n                    projectile.x === tile.x && projectile.y === tile.y,\n                ),\n            );\n\n            let optimalDist = Game.randTable(\n              [2, 2, 3, 3, 3, 3, 3],\n              Random.rand,\n            );\n            // pick a random player to target\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n            if (bestPos) {\n              this.tryMove(bestPos.x, bestPos.y);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              this.frame = 0; // trigger teleport animation\n              this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\n              if (this.withinAttackingRangeOfPlayer()) {\n                this.state = WizardState.attack;\n              } else {\n                this.state = WizardState.idle;\n              }\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n        this.frame += 0.2 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.softShadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { HitWarning } from \"../../drawable/hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { Random } from \"../../utility/random\";\nimport { astar } from \"../../utility/astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class ZombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  dir: Direction;\n  static difficulty: number = 1;\n  static tileX: number = 17;\n  static tileY: number = 8;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.dir = Direction.DOWN;\n    this.name = \"zombie\";\n    this.forwardOnlyAttack = true;\n    this.jumpHeight = 0.35;\n\n    if (drop) this.drop = drop;\n    this.getDrop([\"consumable\", \"tool\", \"coin\"]);\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // Don't walk on active spike traps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  // Attack the player if they are in the way\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    //this.updateShadeColor(delta);\n    Game.ctx.globalAlpha = this.alpha;\n    this.updateDrawXY(delta);\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    if (this.hasShadow)\n      Game.drawMob(\n        0,\n        0,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        1,\n        1,\n        this.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawMob(\n      this.tileX + Math.floor(this.frame),\n      this.tileY + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\n      1,\n      2,\n      this.softShadeColor,\n      this.shadeAmount(),\n    );\n\n    if (!this.cloned) {\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { Bones } from \"../tile/bones\";\nimport { Player } from \"../player/player\";\nimport { Floor } from \"../tile/floor\";\nimport { HealthBar } from \"../drawable/healthbar\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Projectile } from \"../projectile/projectile\";\nimport { Utils } from \"../utility/utils\";\nimport { globalEventBus } from \"../event/eventBus\";\nimport type { LightSource } from \"../lighting/lightSource\";\nimport { EVENTS } from \"../event/events\";\nimport { DamageNumber } from \"../particle/damageNumber\";\nimport { DownLadder } from \"../tile/downLadder\";\nimport { Door } from \"../tile/door\";\nimport { Wall } from \"../tile/wall\";\nimport { Lighting } from \"../lighting/lighting\";\n\nimport { DropTable } from \"../item/dropTable\";\nimport { Weapon } from \"../item/weapon/weapon\";\nimport { EnemyShield } from \"../projectile/enemyShield\";\nimport { Sound } from \"../sound/sound\";\nimport { ImageParticle } from \"../particle/imageParticle\";\nimport { Enemy } from \"./enemy/enemy\";\nimport { Particle } from \"../particle/particle\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\nimport { Coin } from \"../item/coin\";\n\nexport enum EntityDirection {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n}\n\nexport enum EntityType {\n  ENEMY,\n  FRIENDLY,\n  RESOURCE,\n  PROP,\n  CHEST,\n}\n\nexport interface entityData {\n  name: string;\n  location: { x: number; y: number };\n}\n\nexport interface bloomData {\n  blurAmount: number;\n  color: string;\n  xOffset: number;\n  yOffset: number;\n  size: number;\n  alpha: number;\n}\n\nexport class Entity extends Drawable {\n  room: Room;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  direction: Direction;\n  drawX: number;\n  drawY: number;\n  dead: boolean;\n  game: Game;\n  health: number;\n  maxHealth: number;\n  protected tileX: number;\n  protected tileY: number;\n  protected hasShadow: boolean;\n  skipNextTurns: number;\n  //TODO: change these to functions? for enemies that switch states\n  destroyable: boolean; // can the player destroy this enemy?\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\n  interactable: boolean; // can the player interact\n  protected deathParticleColor: string;\n  healthBar: HealthBar;\n  drop: Item;\n  protected sleepingZFrame = 0;\n  alertTicks: number;\n  protected exclamationFrame: number;\n  lastX: number;\n  lastY: number;\n  protected hitBy: Player;\n  protected crushX: number;\n  protected crushY: number;\n  protected crushVertical: boolean;\n  protected crushed: boolean;\n  protected rumbling: boolean;\n  protected animationSpeed: number;\n  drawYOffset: number;\n  name: string;\n  protected orthogonalAttack: boolean;\n  protected diagonalAttack: boolean;\n  protected forwardOnlyAttack: boolean;\n  protected attackRange: number;\n  protected diagonalAttackRange: number;\n  lightSource: LightSource;\n  drawMoveSpeed: number;\n  unconscious: boolean;\n  hitWarnings: HitWarning[];\n  imageParticleX: number = 0;\n  imageParticleY: number = 26;\n  dropChance: number = 1;\n  isEnemy: boolean;\n  shielded: boolean;\n  //shieldHealth: number;\n  frame: number;\n  shield: EnemyShield;\n  shieldedBefore: boolean;\n  //shadeColor: string;\n  shadeMultiplier: number = 1;\n  hurting: boolean;\n  hurtFrame: number;\n  softShadeColor: string;\n  shadeColor: string;\n  dying: boolean;\n  dyingFrame: number;\n  alpha: number;\n  cloned: boolean;\n  hasBloom: boolean;\n  bloomColor: string = \"#FFFFFF\";\n  bloomAlpha: number = 1;\n  softBloomAlpha: number = 1;\n  bloomSize: number = 1;\n  bloomOffsetY: number = 0;\n  target: { x: number; y: number };\n  moving: boolean;\n  dropTable: string[];\n  drops: Item[];\n  opaque: boolean = false;\n  opacity: number = 0;\n  hasHitParticles: boolean = true;\n  hasDamageNumbers: boolean = true;\n  armored: boolean = false;\n\n  private _imageParticleTiles: { x: number; y: number };\n  hitSound: () => void;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super();\n\n    // Check if we're in cloning mode\n    const isCloning = (this.constructor as any).__isCloning;\n\n    // Set cloned status immediately if we're cloning\n    if (isCloning) {\n      this.cloned = true;\n    } else this.cloned = false;\n\n    // Only set the absolute minimum required properties if cloning\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.game = game;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.skipNextTurns = 0;\n    this.direction = Direction.DOWN;\n    this.destroyable = true;\n    this.pushable = false;\n    this.chainPushable = true;\n    this.interactable = false;\n    this.healthBar = new HealthBar();\n    this.alertTicks = 0;\n    this.exclamationFrame = 0;\n    this.lastX = x;\n    this.lastY = y;\n    this.hitBy = null;\n    this.crushX = 1;\n    this.crushY = 1;\n    this.crushVertical = false;\n    this.crushed = false;\n    this.rumbling = false;\n    this.animationSpeed = 0.1;\n    this.drawYOffset = 1.175;\n    this.hitWarnings = [];\n    this.orthogonalAttack = false;\n    this.diagonalAttack = false;\n    this.forwardOnlyAttack = false;\n    this.attackRange = 1;\n    this.diagonalAttackRange = 1;\n    this.drawMoveSpeed = 0.9;\n    this.unconscious = false;\n    this.dropChance = 0.02;\n    this.isEnemy = false;\n    this.shielded = false;\n    this.shield = null;\n    this.frame = 0;\n    this.shieldedBefore = false;\n    this._imageParticleTiles = { x: 0, y: 0 };\n    this.hitSound = null;\n    this.shadeColor = this.room.shadeColor;\n    this.hurting = false;\n    this.hurtFrame = 0;\n    this.softShadeColor = \"#000000\";\n    this.dying = false;\n    this.dyingFrame = 30;\n    this.alpha = 1;\n    this.dead = false;\n    this.hasBloom = false;\n    this.bloomColor = \"#FFFFFF\";\n    this.moving = false;\n    this.dropTable = [];\n    this.drops = [];\n    if (this.drop) this.drops.push(this.drop);\n  }\n\n  static add<\n    T extends new (\n      room: Room,\n      game: Game,\n      x: number,\n      y: number,\n      ...rest: any[]\n    ) => Entity,\n  >(this: T, room: Room, game: Game, x: number, y: number, ...rest: any[]) {\n    // Safety checks: verify tile exists and is not solid\n    if (!room.roomArray[x] || !room.roomArray[x][y]) {\n      console.warn(`Cannot add entity: tile at (${x}, ${y}) does not exist`);\n      return null;\n    }\n\n    if (room.roomArray[x][y].isSolid()) {\n      console.warn(`Cannot add entity: tile at (${x}, ${y}) is solid`);\n      return null;\n    }\n\n    const entity = new this(room, game, x, y, ...rest);\n    room.entities.push(entity);\n    return entity;\n  }\n\n  static cloneEntity(original: Entity): Entity {\n    // Set a temporary flag on the constructor to indicate we're cloning\n    (original.constructor as any).__isCloning = true;\n\n    // Create minimal clone\n    const cloned = new (original.constructor as typeof Entity)(\n      original.room,\n      original.game,\n      original.x,\n      original.y,\n    );\n\n    // Remove the temporary flag\n    delete (original.constructor as any).__isCloning;\n\n    // Copy only properties needed for death animation\n    Object.assign(cloned, {\n      cloned: true,\n      dead: false,\n      dying: true,\n      drawableY: original.drawableY,\n      tileX: original.tileX,\n      tileY: original.tileY,\n      frame: original.frame,\n      direction: original.direction,\n      drawX: original.drawX,\n      drawY: original.drawY,\n      alpha: original.alpha,\n      shadeColor: original.shadeColor,\n      shadeMultiplier: original.shadeMultiplier,\n      softShadeColor: original.softShadeColor,\n      hasBloom: original.hasBloom,\n      bloomColor: original.bloomColor,\n      bloomAlpha: 1,\n      softBloomAlpha: 1,\n      dyingFrame: 30,\n    });\n\n    // Add to room's dead entities\n    original.room.deadEntities.push(cloned);\n\n    return cloned;\n  }\n\n  /**\n   * Clones the current entity without adding it to deadEntities.\n   */\n  clone(): Entity {\n    const cloned = Entity.cloneEntity(this);\n    cloned.dead = false; // Explicitly set as not dead\n    cloned.dying = true; // Ensure the clone is in a dying state\n\n    return cloned;\n  }\n\n  hoverText = () => {\n    return this.name;\n  };\n\n  get imageParticleTiles() {\n    return this._imageParticleTiles;\n  }\n\n  applyShield = (shieldHealth: number = 1) => {\n    if (!this.shieldedBefore) {\n      this.shield = new EnemyShield(this, this.x, this.y, shieldHealth);\n      this.shielded = true;\n      this.shieldedBefore = true;\n      this.health += shieldHealth;\n      this.maxHealth += shieldHealth;\n      this.shadeColor = \"purple\";\n      this.shadeMultiplier = 0.5;\n      this.hasBloom = true;\n      this.bloomColor = \"#2E0854\";\n      this.bloomAlpha = 1;\n    }\n  };\n\n  removeShield = () => {\n    if (this.shield) {\n      this.health -= this.shield.health;\n      this.maxHealth -= this.shield.health;\n      this.shield.remove();\n      this.shadeColor = this.room.shadeColor;\n      this.shadeMultiplier = 1;\n      this.hasBloom = false;\n      this.bloomAlpha = 0;\n    }\n  };\n\n  getDrop = (useCategory: string[] = [], force: boolean = false) => {\n    if (this.cloned) return;\n    const drops = this.dropTable ? this.dropTable : useCategory;\n    DropTable.getDrop(this, drops, force, 3);\n    //make monsters drop degraded weapons\n    if (this.drop instanceof Weapon && this.type === EntityType.ENEMY) {\n      this.drop.durability = Math.floor(\n        Math.random() * 0.31 * this.drop.durabilityMax,\n      );\n      this.drop.durabilityMax;\n    }\n  };\n\n  addLightSource = (lightSource: LightSource) => {\n    if (!this.cloned) this.room.lightSources.push(lightSource);\n  };\n\n  removeLightSource = (lightSource: LightSource) => {\n    this.room.lightSources = this.room.lightSources.filter(\n      (ls) => ls !== lightSource,\n    );\n    //this.lightSource = null;\n    this.room.updateLighting();\n  };\n\n  behavior = () => {};\n\n  hit = (): number => {\n    return 0;\n  };\n\n  hurtCallback = () => {};\n\n  get type() {\n    return EntityType.ENEMY;\n  }\n\n  pointIn = (x: number, y: number): boolean => {\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n  };\n\n  createDamageNumber = (\n    damage: number,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    let color = \"red\";\n    let outlineColor = GameConstants.OUTLINE;\n    if (type === \"poison\") color = \"green\";\n    if (type === \"blood\") {\n      color = \"#8B0000\";\n      outlineColor = \"red\";\n    }\n    if (type === \"heal\") {\n      color = \"#B8A4FF\";\n      outlineColor = GameConstants.OUTLINE;\n    }\n    this.room.particles.push(\n      new DamageNumber(this.room, this.x, this.y, damage, color, outlineColor),\n    );\n  };\n\n  updateDrawXY = (delta: number) => {\n    //putting this here bc i'm lazy\n    this.updateHurtFrame(delta);\n    this.animateDying(delta);\n    this.updateShadeColor(delta);\n    //this.updateBloom(delta);\n\n    if (!this.doneMoving()) {\n      this.drawX *= this.drawMoveSpeed ** delta;\n      this.drawY *= this.drawMoveSpeed ** delta;\n\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\n    }\n  };\n\n  setDrawXY = (x: number, y: number) => {\n    this.drawX += this.x - x;\n    this.drawY += this.y - y;\n  };\n\n  readonly tryMove = (x: number, y: number, collide: boolean = true) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let entityCollide = (entity: Entity): boolean => {\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) return false;\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && entityCollide(e) && collide) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (\n          !this.room.roomArray[x + xx][y + yy].isSolid() &&\n          !(this.room.roomArray[x + xx][y + yy] instanceof Door)\n        ) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  readonly getPlayer = () => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return closestPlayer;\n  };\n\n  onHurt = (\n    damage: number = 1,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {};\n\n  hurt = (\n    playerHitBy: Player,\n    damage: number,\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\n  ) => {\n    this.handleEnemyCase(playerHitBy);\n\n    let hitShield = false;\n    let shieldHealth = 0;\n    if (this.shielded) {\n      shieldHealth = this.shield.health;\n      if (shieldHealth > 0) {\n        this.shield.hurt(damage);\n        hitShield = true;\n      }\n    }\n    /*\n    this.shadeColor = \"red\";\n    setTimeout(() => {\n      this.shadeColor = this.room.shadeColor;\n    }, 100);\n    */\n\n    if (this.armored && this.health === this.maxHealth) Sound.playParry();\n\n    this.health -= damage;\n    this.maxHealth -= shieldHealth;\n    this.onHurt(damage, type);\n\n    this.startHurting();\n    if (this.hasDamageNumbers) this.createDamageNumber(damage, type);\n    this.playHitSound();\n\n    this.healthBar.hurt();\n\n    if (type === \"none\" || this.health <= 0 || !this.isEnemy) {\n      this.createHitParticles();\n    }\n\n    if (this.health <= 0) {\n      this.kill();\n      this.bloomAlpha = 0;\n    } else this.hurtCallback();\n  };\n\n  wander = () => {\n    // Store old position to check if move was successful\n    const oldX = this.x;\n    const oldY = this.y;\n\n    // Try up to 4 times to find a valid move\n    for (let attempts = 0; attempts < 4; attempts++) {\n      // Choose a random direction\n      const directions = [\n        Direction.UP,\n        Direction.DOWN,\n        Direction.LEFT,\n        Direction.RIGHT,\n      ];\n      const randomDirection =\n        directions[Math.floor(Math.random() * directions.length)];\n\n      // Calculate target position based on direction\n      let targetX = this.x;\n      let targetY = this.y;\n\n      switch (randomDirection) {\n        case Direction.UP:\n          targetY = this.y - 1;\n          break;\n        case Direction.DOWN:\n          targetY = this.y + 1;\n          break;\n        case Direction.LEFT:\n          targetX = this.x - 1;\n          break;\n        case Direction.RIGHT:\n          targetX = this.x + 1;\n          break;\n      }\n\n      // Try to move to the target position\n      this.tryMove(targetX, targetY);\n      this.setDrawXY(oldX, oldY);\n\n      // If the move was successful, update direction and drawing, then break\n      if (this.x !== oldX || this.y !== oldY) {\n        this.direction = randomDirection;\n        this.setDrawXY(targetX, targetY);\n        break;\n      }\n    }\n  };\n\n  runAway = () => {\n    const player = this.getPlayer();\n    if (!player) {\n      this.wander();\n      return;\n    }\n\n    const distance = Utils.distance(this.x, this.y, player.x, player.y);\n    if (distance > 10) {\n      this.wander();\n      return;\n    }\n\n    // Store old position to check if move was successful\n    const oldX = this.x;\n    const oldY = this.y;\n\n    // Calculate all possible positions with their distances\n    const newPositions = [\n      { x: this.x - 1, y: this.y },\n      { x: this.x + 1, y: this.y },\n      { x: this.x, y: this.y - 1 },\n      { x: this.x, y: this.y + 1 },\n    ].map((position) => ({\n      position,\n      distance: Utils.distance(player.x, player.y, position.x, position.y),\n    }));\n\n    // Sort by distance (furthest first)\n    newPositions.sort((a, b) => b.distance - a.distance);\n\n    // Choose either furthest or second furthest\n    const chooseSecondFurthest = Math.random() < 0.3;\n    const chosenPosition =\n      chooseSecondFurthest && newPositions.length > 1\n        ? newPositions[1].position\n        : newPositions[0].position;\n\n    const targetX = chosenPosition.x;\n    const targetY = chosenPosition.y;\n\n    // Try to move to the target position\n    this.tryMove(targetX, targetY);\n    this.setDrawXY(oldX, oldY);\n\n    // If the move was successful, update direction and drawing\n    if (this.x !== oldX || this.y !== oldY) {\n      // Set direction based on actual movement\n      const dx = this.x - oldX;\n      const dy = this.y - oldY;\n\n      if (dx > 0) {\n        this.direction = Direction.RIGHT;\n      } else if (dx < 0) {\n        this.direction = Direction.LEFT;\n      } else if (dy > 0) {\n        this.direction = Direction.DOWN;\n      } else if (dy < 0) {\n        this.direction = Direction.UP;\n      }\n\n      this.setDrawXY(targetX, targetY);\n    } else {\n      // If we couldn't move away, just wander\n      this.wander();\n    }\n  };\n\n  startHurting = () => {\n    this.hurting = true;\n    this.hurtFrame += 15;\n    this.shadeColor = \"#FF0000\";\n    this.shadeMultiplier = 1.5;\n  };\n\n  stopHurting = () => {\n    this.hurting = false;\n    this.hurtFrame = 0;\n    this.shadeColor = \"#000000\";\n  };\n\n  interact = (player: Player) => {};\n\n  handleEnemyCase = (playerHitBy?: Player) => {};\n\n  playHitSound = () => {\n    if (this.hitSound) Sound.delayPlay(this.hitSound, 50);\n  };\n\n  createHitParticles = (particleX?: number, particleY?: number) => {\n    if (this.cloned) return;\n    if (!this.hasHitParticles) return;\n    if (!particleX) particleX = this.imageParticleX;\n    if (!particleY) particleY = this.imageParticleY;\n    ImageParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      particleX,\n      particleY,\n    );\n  };\n\n  protected dropLoot = () => {\n    let coordX: number;\n    let coordY: number;\n    if (this.crushed) {\n      coordX = this.lastX;\n      coordY = this.lastY;\n    } else {\n      coordX = this.x;\n      coordY = this.y;\n    }\n\n    if (this.drops.length === 0 && this.isEnemy) {\n      this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n    if (this.drops.length > 0) {\n      this.drops.forEach((drop) => {\n        drop.level = this.room;\n        if (!this.room.roomArray[coordX][coordY].isSolid()) {\n          drop.x = coordX;\n          drop.y = coordY;\n        }\n        this.room.items.push(drop);\n        drop.onDrop();\n      });\n    }\n  };\n\n  kill = (player?: Player) => {\n    this.dead = true;\n\n    if (this.cloned) return;\n\n    this.emitEnemyKilled();\n    this.dropLoot();\n\n    const deadEntity = this.clone();\n\n    this.room.deadEntities.push(deadEntity);\n    //this.room.entities = this.room.entities.filter((e) => e !== this);\n    this.removeLightSource(this.lightSource);\n\n    this.uniqueKillBehavior();\n  };\n\n  uniqueKillBehavior = () => {};\n\n  updateHurtFrame = (delta: number) => {\n    if (this.hurting) {\n      this.hurtFrame -= delta;\n      if (this.hurtFrame < 0) {\n        this.stopHurting();\n      }\n    }\n  };\n\n  shadeAmount = () => {\n    let softVis = this.room.softVis[this.x][this.y] * 1;\n\n    if (this.shadeMultiplier > 1)\n      return Math.min(1, softVis * this.shadeMultiplier);\n    return this.room.softVis[this.x][this.y];\n  };\n\n  updateShadeColor = (delta: number) => {\n    if (this.shadeMultiplier > 1) this.shadeMultiplier -= 0.01 * delta;\n    if (this.shadeMultiplier < 1) this.shadeMultiplier = 1;\n    let updated = false;\n\n    // Convert hex color to RGB\n    const hexToRgb = (hex: string): [number, number, number] => {\n      const bigint = parseInt(hex.slice(1), 16);\n      const r = (bigint >> 16) & 255;\n      const g = (bigint >> 8) & 255;\n      const b = bigint & 255;\n      return [r, g, b];\n    };\n    // Convert RGB to hex color\n    const rgbToHex = (rgb: [number, number, number]): string => {\n      const [r, g, b] = rgb;\n      return (\n        \"#\" +\n        ((1 << 24) + (r << 16) + (g << 8) + b)\n          .toString(16)\n          .slice(1)\n          .toUpperCase()\n      );\n    };\n\n    const [softR, softG, softB] = hexToRgb(this.softShadeColor);\n    const [targetR, targetG, targetB] = hexToRgb(this.shadeColor);\n\n    // Calculate differences\n    let diffR = softR - targetR;\n    let diffG = softG - targetG;\n    let diffB = softB - targetB;\n\n    let flagR = false;\n    let flagG = false;\n    let flagB = false;\n    if (Math.abs(diffR) > 1) flagR = true;\n    if (Math.abs(diffG) > 1) flagG = true;\n    if (Math.abs(diffB) > 1) flagB = true;\n\n    if (!flagR && !flagG && !flagB) {\n      return this.softShadeColor;\n    }\n\n    let softShadeRgb = [softR, softG, softB];\n\n    // Apply smoothing similar to fadeLighting\n    if (flagR) {\n      diffR *= 0.1 * delta;\n      softShadeRgb[0] = this.room.clamp(Math.round(softR - diffR), 0, 255);\n      updated = true;\n    }\n\n    if (flagG) {\n      diffG *= 0.1 * delta;\n      softShadeRgb[1] = this.room.clamp(Math.round(softG - diffG), 0, 255);\n      updated = true;\n    }\n\n    if (flagB) {\n      diffB *= 0.1 * delta;\n      softShadeRgb[2] = this.room.clamp(Math.round(softB - diffB), 0, 255);\n      updated = true;\n    }\n\n    if (updated) {\n      this.softShadeColor = rgbToHex(softShadeRgb as [number, number, number]);\n    }\n\n    return this.softShadeColor;\n  };\n\n  emitEnemyKilled = () => {\n    let depthMultiplier = Math.log((this.room.depth + 1) * 5);\n    console.log(depthMultiplier);\n\n    let multiplier = 1;\n    if (this.isEnemy) multiplier = 5;\n    const xp = Math.ceil(this.maxHealth * multiplier * depthMultiplier);\n    if (this.isEnemy)\n      globalEventBus.emit(EVENTS.ENEMY_KILLED, {\n        enemyId: this.name,\n        xp: xp,\n      });\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  nearestPlayer = (): [number, Player] | false => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return [closestDistance, closestPlayer];\n  };\n\n  playerDistance = (player: Player): number => {\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\n  };\n\n  facePlayer = (player: Player) => {\n    // For 1x1 entities, use the existing perfect logic\n    if (this.w === 1 && this.h === 1) {\n      const entityCenterX = this.x + (this.w - 1) / 2;\n      const entityCenterY = this.y + (this.h - 1) / 2;\n\n      let dx = player.x - entityCenterX;\n      let dy = player.y - entityCenterY;\n\n      if (Math.abs(dx) === Math.abs(dy)) {\n        // just moved, already facing player\n      } else if (Math.abs(dx) > Math.abs(dy)) {\n        if (dx > 0) this.direction = Direction.RIGHT;\n        if (dx < 0) this.direction = Direction.LEFT;\n      } else {\n        if (dy > 0) this.direction = Direction.DOWN;\n        if (dy < 0) this.direction = Direction.UP;\n      }\n      return;\n    }\n\n    // For bigger entities, check if player shares any row or column\n    let sharesRow = false;\n    let sharesColumn = false;\n\n    // Check if player shares any row with the entity\n    for (let y = this.y; y < this.y + this.h; y++) {\n      if (player.y === y) {\n        sharesRow = true;\n        break;\n      }\n    }\n\n    // Check if player shares any column with the entity\n    for (let x = this.x; x < this.x + this.w; x++) {\n      if (player.x === x) {\n        sharesColumn = true;\n        break;\n      }\n    }\n\n    // If sharing both row and column, player is overlapping - don't change direction\n    if (sharesRow && sharesColumn) {\n      return;\n    }\n\n    // If sharing a row, face horizontally\n    if (sharesRow) {\n      if (player.x < this.x) {\n        this.direction = Direction.LEFT;\n      } else if (player.x >= this.x + this.w) {\n        this.direction = Direction.RIGHT;\n      }\n      return;\n    }\n\n    // If sharing a column, face vertically\n    if (sharesColumn) {\n      if (player.y < this.y) {\n        this.direction = Direction.UP;\n      } else if (player.y >= this.y + this.h) {\n        this.direction = Direction.DOWN;\n      }\n      return;\n    }\n\n    // If not sharing any row or column, use distance-based logic\n    const entityCenterX = this.x + (this.w - 1) / 2;\n    const entityCenterY = this.y + (this.h - 1) / 2;\n\n    let dx = player.x - entityCenterX;\n    let dy = player.y - entityCenterY;\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx > 0) this.direction = Direction.RIGHT;\n      if (dx < 0) this.direction = Direction.LEFT;\n    } else {\n      if (dy > 0) this.direction = Direction.DOWN;\n      if (dy < 0) this.direction = Direction.UP;\n    }\n  };\n\n  animateDying = (delta: number) => {\n    if (this.cloned) {\n      //this.frame = 0;\n      this.dyingFrame -= delta / 3;\n      this.alpha = Math.max(0, this.alpha - delta / 50);\n\n      if (this.dyingFrame <= 0) {\n        this.dead = true;\n        this.dying = false;\n        this.uniqueKillBehavior();\n        this.room.clearDeadStuff();\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.globalAlpha = this.alpha;\n    this.updateDrawXY(delta);\n    if (this.hasShadow) {\n      Game.drawFX(\n        0,\n        0,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        1,\n        1,\n        this.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    /*\n    Game.drawMob(\n      0,\n      0,\n      1,\n      1,\n      this.x - this.drawX,\n      this.y - this.drawY,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    */\n    Game.drawMob(\n      this.tileX,\n      this.tileY + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - this.drawYOffset - this.drawY,\n      1,\n      2,\n      this.shadeColor,\n      this.shadeAmount(),\n    );\n\n    /*if (this.crushed) {\n      this.crushAnim(delta);\n    }*/\n    Game.ctx.globalAlpha = 1;\n  };\n\n  tick = () => {\n    this.behavior();\n    if (this.shielded) this.shield.updateLightSourcePos();\n  };\n\n  emitEntityData = (): void => {\n    globalEventBus.emit(\"EntityData\", {\n      name: this.name,\n      location: { x: this.x, y: this.y },\n    });\n  };\n\n  drawTopLayer = (delta: number) => {\n    //this.updateDrawXY(delta);\n\n    this.drawableY = this.y - this.drawY;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true,\n    );\n  };\n\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.sleepingZFrame += delta;\n\n    let numZs = 2;\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\n    t -= Math.floor(t);\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\n    for (let off = numZs - 1; off >= 0; off--) {\n      let yoff = (t + off) * 7;\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\n\n      let xoff = 0;\n      if (off === 0) xoff = 1;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n\n      let width = Game.measureText(\"Z\").width;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\n      Game.fillTextOutline(\n        \"Z\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\n        GameConstants.OUTLINE,\n        \"white\",\n      );\n      Game.ctx.globalAlpha = 1;\n    }\n  };\n\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.exclamationFrame += delta;\n\n    let yoff: number | false = 0;\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\n    else yoff = yoffs[this.exclamationFrame];\n\n    let width = Game.measureText(\"!\").width;\n    Game.ctx.globalAlpha = 1;\n    if (yoff !== false) {\n      Game.fillTextOutline(\n        \"!\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\n        GameConstants.OUTLINE,\n        GameConstants.WARNING_RED,\n      );\n    }\n  };\n\n  crush = () => {\n    this.crushed = true;\n    let player: Player;\n    for (let i in this.game.players) {\n      player = this.game.players[i];\n    }\n    if (this.x == player.x) {\n      this.crushVertical = true;\n    }\n    this.kill();\n  };\n\n  crushAnim = (delta: number) => {\n    if (this.crushVertical && this.crushY >= 0) {\n      this.crushY *= 0.95;\n    } else if (this.crushX >= 0) {\n      this.crushX *= 0.95;\n    }\n  };\n  //set rumbling in the tick function for the enemies\n  //create variables for the rumbling x and y offsets\n  //return the rumbling x and y offsets\n  //add the rumbling x and y offsets to the enemy's x and y in the draw function\n  rumble = (rumbling: boolean, frame: number, direction?: Direction) => {\n    let rumbleOffset = { x: 0, y: 0 };\n\n    if (rumbling) {\n      const isOddFrame = Math.floor(frame) % 2 === 1;\n      const offset = isOddFrame ? 0.0325 : 0;\n\n      if (direction === Direction.LEFT || direction === Direction.RIGHT) {\n        rumbleOffset.y = offset;\n      } else if (\n        direction === Direction.UP ||\n        direction === Direction.DOWN ||\n        !direction\n      ) {\n        rumbleOffset.x = offset;\n      }\n      this.animationSpeed = 0.2;\n    }\n    return rumbleOffset;\n  };\n\n  attemptProjectilePlacement = (\n    offsets: { x: number; y: number }[],\n    projectileClass: new (parent: Entity, x: number, y: number) => Projectile,\n    collide: boolean = false,\n    clearPath: boolean = true,\n    targetingPlayer: boolean = false,\n  ) => {\n    for (const offset of offsets) {\n      const targetX = this.x + offset.x;\n      const targetY = this.y + offset.y;\n\n      if (\n        !this.isValidProjectilePosition(targetX, targetY, collide, clearPath)\n      ) {\n        if (targetingPlayer) break;\n        continue;\n      }\n\n      this.placeProjectile(projectileClass, targetX, targetY);\n\n      if (targetingPlayer) break;\n    }\n  };\n\n  private isValidProjectilePosition = (\n    x: number,\n    y: number,\n    collide: boolean,\n    clearPath: boolean,\n  ): boolean => {\n    if (!this.isWithinRoomBounds(x, y)) return false;\n    if (clearPath && !this.isPathClear(this.x, this.y, x, y)) return false;\n    if (collide && this.isEntityColliding(x, y)) return false;\n\n    const targetTile = this.room.roomArray[x][y];\n    return targetTile && !targetTile.isSolid() && !targetTile.isDoor;\n  };\n\n  private isEntityColliding = (x: number, y: number): boolean => {\n    return this.room.entities.some(\n      (entity) => entity.x === x && entity.y === y,\n    );\n  };\n\n  private placeProjectile = (\n    projectileClass: new (\n      parent: Entity,\n      x: number,\n      y: number,\n      color?: [number, number, number],\n    ) => Projectile,\n    x: number,\n    y: number,\n    color?: [number, number, number],\n  ) => {\n    this.room.projectiles.push(new projectileClass(this, x, y, color));\n  };\n\n  isPathClear = (\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ): boolean => {\n    const dx = Math.sign(endX - startX);\n    const dy = Math.sign(endY - startY);\n    let x = startX;\n    let y = startY;\n\n    while (x !== endX || y !== endY) {\n      x += dx;\n      y += dy;\n      if (\n        !this.isWithinRoomBounds(x, y) ||\n        this.room.roomArray[x][y]?.isSolid()\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  calculateProjectileOffsets(\n    targetX: number,\n    targetY: number,\n    attackLength: number,\n  ): { x: number; y: number }[] {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    let offsets = [];\n\n    // Normalize the direction\n    const stepX = dx !== 0 ? Math.sign(dx) : 0;\n    const stepY = dy !== 0 ? Math.sign(dy) : 0;\n\n    // Generate offsets for the full attackLength\n    for (let i = 1; i <= attackLength; i++) {\n      offsets.push({ x: i * stepX, y: i * stepY });\n    }\n\n    return offsets;\n  }\n\n  getLuminance = (): number => {\n    if (this.room.roomArray[this.x][this.y]) {\n      return this.room.vis[this.x][this.y];\n    }\n    return null;\n  };\n\n  getAverageLuminance = (): number => {\n    let total = 0;\n    let count = 0;\n    for (let x = this.x - 2; x <= this.x + 2; x++) {\n      if (this.room.roomArray[x] && this.room.roomArray[x][this.y]) {\n        for (let y = this.y - 2; y <= this.y + 2; y++) {\n          if (this.room.vis[x][y]) {\n            total += this.room.vis[x][y];\n            count++;\n          }\n        }\n      }\n    }\n    return total / count;\n  };\n\n  getOpenTile = (): { x: number; y: number } => {\n    let x, y;\n    do {\n      x = Math.floor(Math.random() * 3 + this.x - 1);\n      y = Math.floor(Math.random() * 3 + this.y - 1);\n    } while (\n      (x === this.x && y === this.y) ||\n      this.room.roomArray[x][y].isSolid() ||\n      this.room.roomArray[x][y] instanceof DownLadder ||\n      this.room.roomArray[x][y] instanceof Door ||\n      this.room.roomArray[x][y] instanceof Wall ||\n      this.room.entities.some((e) => e.x === x && e.y === y)\n    );\n\n    if (!x || !y) return { x: this.x, y: this.y };\n    return { x, y };\n  };\n\n  makeBigHitWarnings = () => {\n    switch (this.direction) {\n      case Direction.LEFT:\n        this.makeHitWarnings(this.x, this.y);\n        this.makeHitWarnings(this.x, this.y + 1);\n        break;\n      case Direction.RIGHT:\n        this.makeHitWarnings(this.x + 1, this.y);\n        this.makeHitWarnings(this.x + 1, this.y + 1);\n        break;\n      case Direction.UP:\n        this.makeHitWarnings(this.x, this.y);\n        this.makeHitWarnings(this.x + 1, this.y);\n        break;\n      case Direction.DOWN:\n        this.makeHitWarnings(this.x, this.y + 1);\n        this.makeHitWarnings(this.x + 1, this.y + 1);\n        break;\n    }\n  };\n\n  makeHitWarnings = (hx: number = this.x, hy: number = this.y) => {\n    const cullFactor = 0.45;\n    const player: Player = this.getPlayer();\n    const orthogonal = this.orthogonalAttack;\n    const diagonal = this.diagonalAttack;\n    const forwardOnly = this.forwardOnlyAttack;\n    const direction = this.direction;\n    const orthoRange = this.attackRange;\n    const diagRange = this.diagonalAttackRange;\n\n    const generateOffsets = (\n      isOrthogonal: boolean,\n      range: number,\n    ): number[][] => {\n      const baseOffsets = isOrthogonal\n        ? [\n            [-1, 0],\n            [1, 0],\n            [0, -1],\n            [0, 1],\n          ]\n        : [\n            [-1, -1],\n            [1, 1],\n            [1, -1],\n            [-1, 1],\n          ];\n      return baseOffsets.flatMap(([dx, dy]) =>\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\n      );\n    };\n\n    const directionOffsets = {\n      [Direction.LEFT]: [-1, 0],\n      [Direction.RIGHT]: [1, 0],\n      [Direction.UP]: [0, -1],\n      [Direction.DOWN]: [0, 1],\n    };\n\n    let offsets: number[][] = [];\n    if (forwardOnly) {\n      const [dx, dy] = directionOffsets[direction];\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\n        (i + 1) * dx,\n        (i + 1) * dy,\n      ]);\n    } else {\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\n    }\n\n    const warningCoordinates = offsets\n      .map(([dx, dy]) => ({\n        x: dx,\n        y: dy,\n        distance: Utils.distance(dx, dy, player.x - hx, player.y - hy),\n      }))\n      .sort((a, b) => a.distance - b.distance);\n\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\n\n    culledWarnings.forEach(({ x, y }) => {\n      const targetX = hx + x;\n      const targetY = hy + y;\n      if (this.isWithinRoomBounds(targetX, targetY)) {\n        const hitWarning = new HitWarning(\n          this.game,\n          targetX,\n          targetY,\n          hx,\n          hy,\n          true,\n          false,\n          this,\n        );\n        this.room.hitwarnings.push(hitWarning);\n        //this.hitWarnings.push(hitWarning);\n      }\n    });\n  };\n\n  isWithinRoomBounds = (x: number, y: number): boolean => {\n    const xInBounds =\n      x >= this.room.roomX && x < this.room.roomX + this.room.width;\n    const yInBounds =\n      y >= this.room.roomY && y < this.room.roomY + this.room.height;\n    const tileExists =\n      this.room.roomArray[x] && this.room.roomArray[x][y] !== undefined;\n\n    return xInBounds && yInBounds && tileExists;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { WeaponFragments } from \"../../item/usable/weaponFragments\";\nimport { Coin } from \"../../item/coin\";\n\nexport class Barrel extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 1;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.name = \"barrel\";\n    this.imageParticleX = 3;\n    this.imageParticleY = 25;\n    if (Math.random() < 0.1) {\n      this.drops.push(new WeaponFragments(this.room, this.x, this.y));\n    } else {\n      this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Sound } from \"../../sound/sound\";\nimport { Geode } from \"../../item/resource/geode\";\nexport class Block extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 10;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    //this.pushable = true;\n    this.name = \"block\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 25;\n    this.opaque = true;\n    //this.hitSound = Sound.breakRock;\n    if (Math.random() < 0.01)\n      this.drops.push(new Geode(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  uniqueKillBehavior = () => {\n    if (this.cloned) return;\n    Sound.delayPlay(Sound.breakRock, 50);\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Candle } from \"../../item/light/candle\";\nimport { Random } from \"../../utility/random\";\nimport { Coin } from \"../../item/coin\";\nimport { Sound } from \"../../sound/sound\";\nimport { LightSource } from \"../../lighting/lightSource\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { WizardEnemy } from \"../enemy/wizardEnemy\";\nimport { Lighting } from \"../../lighting/lighting\";\nimport { PlayerFireball } from \"../../projectile/playerFireball\";\nimport { Player } from \"../../player/player\";\nimport { Explosion } from \"../../projectile/explosion\";\nimport { Utils } from \"../../utility/utils\";\n\nexport class Bomb extends Entity {\n  fuseLength: number = 4;\n  lit: boolean = false;\n  playerHitBy: Player | null = null;\n  fuseSound: HTMLAudioElement;\n  soundPaused: boolean = false;\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 15;\n    this.tileY = 4;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"bomb\";\n    this.frame = 0;\n    this.hasBloom = false;\n    this.bloomColor = \"yellow\";\n    this.bloomAlpha = 0;\n    this.bloomSize = 1;\n    this.bloomOffsetY = -1;\n    this.health = 1;\n    this.hitSound = Sound.potSmash;\n    this.imageParticleX = 0;\n    this.imageParticleY = 29;\n    this.createLightSource();\n    this.playerHitBy = null;\n    this.fuseSound = Sound.fuseLoopSound;\n    this.soundPaused = false;\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  uniqueKillBehavior = () => {\n    if (this.cloned) return;\n\n    //this.room.addEntity(new Explosion(this.room, this.game, this.x, this.y));\n  };\n\n  tick = () => {\n    if (this.lit) {\n      this.fuseLength--;\n      //if (this.fuseLength < 3 && this.fuseLength > 0)\n      if (this.fuseLength <= 0) {\n        // Sound.playFuse();\n        this.fuseLength = 0;\n        Sound.stopSound(this.fuseSound);\n        this.explode();\n        Sound.playBomb();\n      }\n    }\n  };\n\n  createLightSource = () => {\n    if (!this.lit) return;\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      3,\n      [200, 200, 30],\n      0.75,\n    );\n    this.addLightSource(this.lightSource);\n    this.bloomAlpha = 1;\n    this.hasBloom = true;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (!this.lit) {\n      this.lit = true;\n      this.createLightSource();\n      this.playerHitBy = playerHitBy;\n      Sound.playFuse();\n    }\n  };\n\n  explode = () => {\n    Sound.stopSound(this.fuseSound);\n    for (let x = this.x - 2; x < this.x + 3; x++) {\n      for (let y = this.y - 2; y < this.y + 3; y++) {\n        if (\n          this.room.pointExists(x, y) &&\n          !this.room.roomArray[x][y].isSolid() &&\n          Utils.distance(this.x, this.y, x, y) < 2.5\n        ) {\n          const explosion = new Explosion(this, x, y, this.playerHitBy);\n          this.room.projectiles.push(explosion);\n        }\n      }\n    }\n    this.health = 0;\n    Lighting.momentaryLight(\n      this.room,\n      this.x,\n      this.y,\n      7,\n      [200, 200, 50],\n      250,\n      50,\n      0,\n    );\n\n    console.log(\"screen shake\");\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"white\",\n    );\n    this.kill();\n\n    setTimeout(() => {\n      this.game.shakeScreen(\n        (Math.random() - 0.5) * 5,\n        (Math.random() - 0.5) * 0,\n        false,\n      );\n    }, 100);\n\n    this.game.shakeScreen(0, 20, false);\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    this.frame += delta;\n    if (this.health === 0) {\n      this.frame = 0;\n    }\n    if (this.frame > 20) this.frame = 0;\n    this.bloomAlpha = (this.frame / 10) % 2 === 0 ? 1 : 0.5;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.lit) {\n        Game.drawObj(\n          this.tileX +\n            6 -\n            Math.min(3, this.fuseLength) * 2 +\n            (Math.floor(this.frame / 10) % 2),\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawYOffset - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      } else {\n        Game.drawObj(\n          this.tileX - 1,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawYOffset - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/usable/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Bush extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 19;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"bush\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 28;\n    this.opaque = true;\n    this.hitSound = Sound.playBush;\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        2,\n        2,\n        this.x - this.drawX - 0.5,\n        this.y - this.drawYOffset - this.drawY,\n        2,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Entity } from \"../entity\";\nimport { Coin } from \"../../item/coin\";\nimport { EntityType } from \"../entity\";\nimport { Random } from \"../../utility/random\";\nimport { Player } from \"../../player/player\";\nimport { ChestLayer } from \"./chestLayer\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Chest extends Entity {\n  frame: number;\n  opening: boolean;\n  dropX: number;\n  dropY: number;\n  layer: ChestLayer;\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.health = 3;\n    this.name = \"chest\";\n    this.frame = 0;\n    this.opening = false;\n    this.dropX = 0;\n    this.dropY = 0;\n    this.drop = null;\n    this.destroyable = false;\n    this.pushable = false;\n    this.chainPushable = false;\n    this.interactable = true;\n    this.imageParticleX = 3;\n    this.imageParticleY = 26;\n    /*\n    this.layer = new ChestLayer(\n      this.room,\n      this.game,\n      this.x,\n      this.y,\n    );\n    this.room.entities.push(this.layer);\n    */\n  }\n\n  get type() {\n    return EntityType.CHEST;\n  }\n\n  interact = (playerHitBy: Player) => {\n    console.log(\"Chest interact called with player:\", playerHitBy);\n    console.log(\"Current chest health:\", this.health);\n    console.log(\"Chest opening state:\", this.opening);\n\n    if (this.health === 3 && !this.opening) {\n      console.log(\"Opening chest for first time\");\n      this.health -= 1;\n      this.open();\n      return;\n    }\n\n    if (this.health !== 2) return;\n\n    // Try to pick up items\n    const pickedUpDrop = this.drops.find((drop) => {\n      drop.onPickup(playerHitBy);\n      return drop.pickedUp;\n    });\n\n    if (pickedUpDrop) {\n      this.drops = this.drops.filter((d) => d !== pickedUpDrop);\n    }\n\n    const full = playerHitBy.inventory.isFull();\n    if (this.drops.length === 0 || full) {\n      this.health -= 1;\n      this.destroyable = true;\n    }\n  };\n\n  private open = () => {\n    this.tileX = 0;\n    this.tileY = 2;\n\n    this.opening = true;\n    Sound.chest();\n\n    if (this.drop === null)\n      this.getDrop(\n        [\"consumable\", \"gem\", \"coin\", \"tool\", \"light\", \"weapon\"],\n        true,\n      );\n\n    this.drops.forEach((drop) => {\n      if (drop.name === \"coin\") {\n        let stack = Game.randTable(\n          [\n            1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6,\n            6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10, 11, 12, 13, 14, 15,\n            100,\n          ],\n          Random.rand,\n        );\n        if (Math.random() < 0.01) stack *= Math.ceil(Math.random() * 10);\n        drop.stackCount = stack;\n        //drop.stack = stack;\n      }\n    });\n    this.dropLoot();\n    this.drops.forEach((drop) => {\n      drop.animateFromChest();\n    });\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n\n    if (this.opening) {\n      if (this.tileX <= 6) {\n        this.tileX += 0.15 * delta;\n      } else {\n        this.opening = false;\n      }\n    }\n\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        Math.floor(this.tileX),\n        Math.floor(this.tileY),\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y - 1;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { WeaponFragments } from \"../../item/usable/weaponFragments\";\nimport { Coin } from \"../../item/coin\";\n\nexport class Crate extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.name = \"crate\";\n    this.imageParticleX = 3;\n    this.imageParticleY = 26;\n    if (Math.random() < 0.1) {\n      this.drops.push(new WeaponFragments(this.room, this.x, this.y, 10));\n    } else {\n      this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/usable/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Mushrooms extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 9;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"mushrooms\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 30;\n    this.drops.push(new Shrooms(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Candle } from \"../../item/light/candle\";\nimport { Random } from \"../../utility/random\";\nimport { Coin } from \"../../item/coin\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Pot extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 11;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"pot\";\n\n    this.hitSound = Sound.potSmash;\n    this.imageParticleX = 0;\n    this.imageParticleY = 29;\n\n    let dropProb = Random.rand();\n    if (dropProb < 0.025) this.drops.push(new Heart(this.room, this.x, this.y));\n    else this.drops.push(new Coin(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Item } from \"../../item/item\";\nimport { Coin } from \"../../item/coin\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Random } from \"../../utility/random\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class PottedPlant extends Entity {\n  drop: Item;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 2;\n    this.tileX = 3;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"plant\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 28;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025)\n        this.drops.push(new Heart(this.room, this.x, this.y));\n      else this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  uniqueKillBehavior = () => {\n    this.createHitParticles(0, 29);\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.health <= 1 || this.dying) this.tileX = 2;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/usable/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { LightSource } from \"../../lighting/lightSource\";\nimport { Spellbook } from \"../../item/weapon/spellbook\";\nimport { Random } from \"../../utility/random\";\nimport { Candle } from \"../../item/light/candle\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Pumpkin extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 15;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"pumpkin\";\n    this.drops.push(new Candle(this.room, this.x, this.y));\n    this.imageParticleX = 0;\n    this.imageParticleY = 25;\n    this.bloomColor = \"#FFA500\";\n    this.hasBloom = true;\n    this.bloomAlpha = 1;\n    this.softBloomAlpha = 0;\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      5,\n      [200, 30, 1],\n      3,\n    );\n    this.addLightSource(this.lightSource);\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/usable/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Sprout extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 17;\n    this.tileY = 2;\n    this.hasShadow = true;\n    this.chainPushable = false;\n    this.name = \"sprout\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 28;\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { SkullEnemy } from \"../enemy/skullEnemy\";\nimport { Random } from \"../../utility/random\";\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\nimport { Player } from \"../../player/player\";\nimport { Item } from \"../../item/item\";\nimport { Spellbook } from \"../../item/weapon/spellbook\";\nimport { Sound } from \"../../sound/sound\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { LightSource } from \"../../lighting/lightSource\";\n\nexport class TombStone extends Entity {\n  skinType: number;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    skinType: number,\n    drop?: Item,\n  ) {\n    super(room, game, x, y);\n    this.skinType = skinType;\n    this.room = room;\n    this.health = 2;\n    //this.maxHealth = 2;\n    this.tileX = 11 + this.skinType;\n    this.tileY = 2;\n    this.hasShadow = false;\n    //this.pushable = false;\n    //this.destroyable = true;\n    //this.skinType = skinType;\n    this.chainPushable = false;\n    this.name = \"tombstone\";\n    let dropProb = Random.rand();\n    if (dropProb < 0.05)\n      this.drops.push(new Spellbook(this.room, this.x, this.y));\n    this.hasBloom = true;\n    this.bloomColor = \"#05FF05\";\n    this.bloomAlpha = 1;\n    this.softBloomAlpha = 0;\n    this.imageParticleX = 0;\n    this.imageParticleY = 25;\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      7,\n      [5, 150, 5],\n      1,\n    );\n    this.addLightSource(this.lightSource);\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  uniqueKillBehavior = () => {\n    if (this.cloned) return;\n    Sound.delayPlay(Sound.breakRock, 50);\n  };\n\n  onHurt = (damage: number = 1) => {\n    if (this.health === 1) {\n      const positions = this.room\n        .getEmptyTiles()\n        .filter(\n          (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\n        );\n      if (positions.length > 0) {\n        for (let position of positions) {\n          for (const i in this.game.players) {\n            const playerX = this.game.players[i].x;\n            const playerY = this.game.players[i].y;\n            if (\n              (playerX !== position.x && playerY === position.y) ||\n              (playerX === position.x && playerY !== position.y)\n            ) {\n              this.room.entities.push(\n                new SkullEnemy(this.room, this.game, position.x, position.y),\n              );\n            }\n          }\n        }\n        Sound.delayPlay(Sound.skeleSpawn, 50);\n      }\n      this.tileX += 2;\n      //draw half broken tombstone based on skintype after it takes one damage\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    this.updateDrawXY(delta);\n\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    //if (!this.dead || !this.cloned) {{}\n    Game.drawObj(\n      this.tileX,\n      this.tileY,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - this.drawYOffset - this.drawY,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/usable/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Apple } from \"../../item/usable/apple\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Tree extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 2;\n    this.maxHealth = 2;\n\n    this.tileX = 14;\n    this.tileY = 6;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"tree\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 28;\n    this.opaque = true;\n    this.hitSound = Sound.playBush;\n    if (Math.random() < 0.5)\n      this.drops.push(new Apple(this.room, this.x, this.y));\n    //this.drawableY = 0.1;\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  draw = (delta: number) => {\n    this.tileX = this.health === 2 ? 14 : 16;\n    if (this.cloned === true) this.tileX = 16;\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        2,\n        3,\n        this.x - this.drawX - 0.5,\n        this.y - this.drawYOffset - this.drawY - 1,\n        2,\n        3,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Entity } from \"../entity\";\nimport { Item } from \"../../item/item\";\nimport { Key } from \"../../item/key\";\nimport { Coin } from \"../../item/coin\";\nimport { Coal } from \"../../item/resource/coal\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Shotgun } from \"../../item/weapon/shotgun\";\nimport { Dagger } from \"../../item/weapon/dagger\";\nimport { Armor } from \"../../item/armor\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { Spear } from \"../../item/weapon/spear\";\nimport { Gold } from \"../../item/resource/gold\";\nimport { BlueGem } from \"../../item/resource/bluegem\";\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\nimport { Lantern } from \"../../item/light/lantern\";\nimport { RedGem } from \"../../item/resource/redgem\";\nimport { EntityType } from \"../entity\";\nimport { Random } from \"../../utility/random\";\nimport { Warhammer } from \"../../item/weapon/warhammer\";\nimport { Torch } from \"../../item/light/torch\";\nimport { Spellbook } from \"../../item/weapon/spellbook\";\nimport { Candle } from \"../../item/light/candle\";\n\nlet OPEN_TIME = 150;\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet FULL_OUTLINE = \"white\";\n\nexport class VendingMachine extends Entity {\n  playerOpened: Player;\n  open = false;\n  openTime = 0;\n  costItems: Array<Item>;\n  item: Item;\n  isInf = false;\n  quantity = 1;\n  buyAnimAmount = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, item: Item) {\n    super(room, game, x, y);\n\n    this.destroyable = false;\n    this.pushable = false;\n    this.chainPushable = false;\n    this.interactable = true;\n\n    this.costItems = [];\n    this.item = item;\n    this.name = \"vending machine\";\n\n    if (this.item instanceof Shotgun) {\n      this.setCost(3);\n    } else if (this.item instanceof Heart) {\n      this.setCost(1, [new Coin(room, 0, 0)], [9, 10, 11], 3); // Uses default random cost\n    } else if (this.item instanceof Spear) {\n      this.setCost(2); // Uses default random cost\n    } else if (this.item instanceof Armor) {\n      this.setCost(3); // Uses default random cost\n    } else if (this.item instanceof DualDagger) {\n      this.setCost(3); // Uses default random cost\n    } else if (this.item instanceof Lantern) {\n      this.setCost(2); // Uses default random cost\n    } else if (this.item instanceof Warhammer) {\n      this.setCost(2); // Uses default random cost\n    } else if (this.item instanceof Spellbook) {\n      this.setCost(3); // Uses default random cost\n    } else if (this.item instanceof Torch) {\n      this.setCost(2); // Uses default random cost\n    } else if (this.item instanceof Candle) {\n      this.setCost(1, [new Coin(room, 0, 0)], [9, 10, 11], 2);\n    }\n  }\n\n  setCost = (\n    value: number = 1,\n    costItems?: Item[],\n    counts?: number[],\n    quantity: number = 1,\n  ) => {\n    //value is arbitrary multiplies the stackcount to adapt to the item\n    if (!costItems || !counts) {\n      // Default behavior: randomly choose between gems and coins\n      const possibleItems = [\n        new BlueGem(this.room, 0, 0),\n        new GreenGem(this.room, 0, 0),\n        new RedGem(this.room, 0, 0),\n        new Coin(this.room, 0, 0),\n      ];\n      const costItem = Game.randTable(possibleItems, Random.rand);\n\n      if (costItem instanceof Coin) {\n        costItem.stackCount = Game.randTable([20, 25, 30], Random.rand);\n      } else {\n        costItem.stackCount = Game.randTable([1, 2, 3], Random.rand);\n      }\n      costItem.stackCount *= value;\n\n      this.costItems = [costItem];\n    } else {\n      // Original behavior for custom costs\n      const randCount = Game.randTable(counts, Random.rand);\n      const costItem = Game.randTable(costItems, Random.rand);\n      costItem.stackCount = randCount;\n      //if (costItem instanceof Coin) {\n      //costItem.stackCount *= Game.randTable([9, 10, 11], Random.rand);\n      //}\n      this.costItems = [costItem];\n    }\n\n    this.quantity = quantity;\n  };\n\n  static isPointInVendingMachineBounds = (\n    x: number,\n    y: number,\n    shop: VendingMachine,\n  ): boolean => {\n    // First check if this is the currently open vending machine\n    if (!shop.open || shop !== shop.playerOpened?.openVendingMachine)\n      return false;\n\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Calculate the offset between player and shop in tile coordinates\n    const offsetX = (shop.x - shop.playerOpened.x) * GameConstants.TILESIZE;\n    const offsetY = (shop.y - shop.playerOpened.y) * GameConstants.TILESIZE;\n\n    // Calculate shop's position on screen relative to the centered player\n    const shopScreenX = screenCenterX + offsetX;\n    const shopScreenY = screenCenterY + offsetY;\n\n    // Use the same calculations as in drawTopLayer to determine bounds\n    let s = 18; // size of box\n    let b = 2; // border\n    let g = -2; // gap\n    let width = (shop.costItems.length + 2) * (s + 2 * b + g) - g;\n    let height = s + 2 * b + g - g;\n\n    // Calculate the center of the vending machine interface\n    // Note: The -1.5 adjustment for Y matches what's in drawTopLayer\n    let cx = shopScreenX;\n    let cy = shopScreenY - 1.5 * GameConstants.TILESIZE;\n\n    const leftBound = Math.round(cx - 0.5 * width);\n    const rightBound = leftBound + Math.round(width);\n    const topBound = Math.round(cy - 0.5 * height);\n    const bottomBound = topBound + Math.round(height);\n\n    // Check if the point is within the bounds of the vending machine UI\n    return (\n      x >= leftBound && x <= rightBound && y >= topBound && y <= bottomBound\n    );\n  };\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  interact = (player: Player) => {\n    if (this.isInf || this.quantity > 0) {\n      if (this.open) this.playerOpened.openVendingMachine = null;\n      this.open = true;\n      this.playerOpened = player;\n      this.openTime = Date.now();\n      if (\n        this.playerOpened.openVendingMachine &&\n        this.playerOpened.openVendingMachine !== this\n      )\n        this.playerOpened.openVendingMachine.close();\n      this.playerOpened.openVendingMachine = this;\n    }\n  };\n\n  close = () => {\n    this.open = false;\n    this.playerOpened.openVendingMachine = null;\n  };\n\n  space = () => {\n    if (this.open) {\n      // Check if player can pay\n      for (const i of this.costItems) {\n        if (!this.playerOpened.inventory.hasItemCount(i)) {\n          let numOfItem = 0;\n          console.log(\"Checking inventory for required items...\");\n          console.log(\"Required item:\", (i.constructor as any).itemName);\n          console.log(\"Required amount:\", i.stackCount);\n          if (i instanceof Coin) {\n            numOfItem = this.playerOpened.inventory.coinCount();\n          } else {\n            this.playerOpened.inventory.items.forEach((item) => {\n              if (item instanceof i.constructor) {\n                numOfItem += item.stackCount;\n              }\n            });\n          }\n\n          console.log(\"Total found in inventory:\", numOfItem);\n          const difference = this.costItems[0].stackCount - numOfItem;\n          console.log(\"Difference needed:\", difference);\n\n          const pluralLetter = this.costItems[0].stackCount > 1 ? \"s\" : \"\";\n\n          this.game.pushMessage(\n            `You need ${difference} more ${(this.costItems[0].constructor as any).itemName}${pluralLetter} to buy that. `,\n          );\n          return;\n        }\n      }\n\n      // Create the new item instance\n      let newItem = new (this.item.constructor as any)(\n        this.room,\n        this.x,\n        this.y,\n      );\n      //     newItem = newItem.constructor(this.room, this.x, this.y);\n\n      // **Attempt to add the item directly to the player's inventory**\n      const addedSuccessfully = this.playerOpened.inventory.addItem(newItem);\n\n      if (!addedSuccessfully) {\n        // If adding the item failed, refund the cost items\n        //for (const i of this.costItems) {\n        //this.playerOpened.inventory.addItem(i);\n        //}\n        this.game.pushMessage(\n          \"Your inventory is full. Cannot purchase the item.\",\n        );\n        return;\n      }\n\n      // Subtract the cost items from player's inventory\n      for (const i of this.costItems) {\n        this.playerOpened.inventory.subtractItemCount(i);\n      }\n\n      const cost = this.costItems[0].stackCount;\n      const pluralLetter = cost > 1 ? \"s\" : \"\";\n\n      // Decrement the quantity of items available in the vending machine, if not infinite\n      if (!this.isInf) {\n        this.quantity--;\n        if (this.quantity <= 0) this.close();\n      }\n\n      // Notify the player of the successful purchase\n      this.game.pushMessage(\n        `Purchased ${(newItem.constructor as any).itemName} for ${cost} ${(this.costItems[0].constructor as any).itemName}${pluralLetter}`,\n      );\n      this.game.pushMessage(`${this.quantity} available to buy.`);\n\n      // Handle visual feedback and screen shake\n      this.buyAnimAmount = 0.99;\n      if (this.playerOpened === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(0, 4);\n    }\n  };\n\n  draw = (delta: number) => {\n    let tileX = 19;\n    if (!this.isInf && this.quantity === 0) tileX = 20;\n    Game.drawObj(\n      tileX,\n      0,\n      1,\n      2,\n      this.x,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.open && this.playerOpened.inventory.isOpen) {\n      this.close();\n      return;\n    }\n    this.drawableY = this.y;\n\n    if (\n      this.open &&\n      this.playerOpened === this.game.players[this.game.localPlayerID]\n    ) {\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3; // highlighted growth\n      let ob = 1; // outer border\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\n      let height = s + 2 * b + g - g;\n\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob),\n      );\n      for (let x = 0; x < this.costItems.length + 2; x++) {\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\n          Math.round(cy - 0.5 * height),\n          Math.round(s + 2 * b),\n          Math.round(s + 2 * b),\n        );\n        if (x !== this.costItems.length) {\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(cy - 0.5 * height + b),\n            Math.round(s),\n            Math.round(s),\n          );\n        }\n      }\n\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.costItems.length + 2; i++) {\n          let drawX = Math.round(\n            cx -\n              0.5 * width +\n              i * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n          let drawY = Math.round(\n            cy -\n              0.5 * height +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          if (i < this.costItems.length) {\n            let a = 1;\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i]))\n              a = 0.15;\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\n          } else if (i === this.costItems.length) {\n            Game.drawFX(2, 0, 1, 1, drawXScaled, drawYScaled, 1, 1);\n          } else if (i === this.costItems.length + 1) {\n            this.item.drawIcon(\n              delta,\n              drawXScaled,\n              drawYScaled,\n              1,\n              this.quantity,\n            );\n          }\n        }\n      }\n      this.buyAnimAmount *= this.buyAnimAmount;\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = this.buyAnimAmount;\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob),\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Resource } from \"./resource\";\nimport { Coal } from \"../../item/resource/coal\";\nimport { Geode } from \"../../item/resource/geode\";\n\nexport class CoalResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.name = \"coal\";\n    if (Math.random() < 0.1) {\n      this.drops.push(new Geode(this.room, this.x, this.y));\n    }\n    this.drops.push(new Coal(this.room, this.x, this.y));\n  }\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room/room\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Sound } from \"../../sound/sound\";\nimport { Geode } from \"../../item/resource/geode\";\n\nexport class EmeraldResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 14;\n    this.tileY = 0;\n    this.health = 3;\n    this.name = \"emerald\";\n    if (Math.random() < 0.2) {\n      this.drops.push(new Geode(this.room, this.x, this.y));\n    }\n    this.drops.push(new GreenGem(this.room, this.x, this.y));\n  }\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room/room\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Gold } from \"../../item/resource/gold\";\nimport { Sound } from \"../../sound/sound\";\nimport { Geode } from \"../../item/resource/geode\";\nexport class GoldResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n    this.health = 2;\n    this.name = \"gold\";\n    if (Math.random() < 0.2) {\n      this.drops.push(new Geode(this.room, this.x, this.y));\n    }\n\n    this.drops.push(new Gold(this.room, this.x, this.y));\n  }\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room/room\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GreenGem } from \"../../item/resource/greengem\";\nimport { Player } from \"../../player/player\";\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\nimport { Spellbook } from \"../../item/weapon/spellbook\";\nimport { EntityType } from \"../entity\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Resource extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.chainPushable = false;\n    this.name = \"resource\";\n    this.imageParticleX = 0;\n    this.imageParticleY = 25;\n  }\n\n  get type() {\n    return EntityType.RESOURCE;\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (!playerHitBy.inventory?.getWeapon().canMine) return;\n    this.healthBar.hurt();\n    this.health -= damage;\n    Sound.mine();\n    this.hurtCallback();\n    this.createHitParticles();\n\n    if (this.health <= 0) {\n      this.kill(playerHitBy);\n    }\n  };\n\n  uniqueKillBehavior = () => {\n    if (this.cloned) return;\n    Sound.delayPlay(Sound.breakRock, 50);\n  };\n\n  kill = (player?: Player) => {\n    this.dead = true;\n    if (this.cloned) return;\n\n    this.emitEnemyKilled();\n    const deadEntity = this.clone();\n    this.room.deadEntities.push(deadEntity);\n    this.removeLightSource(this.lightSource);\n\n    if ((player !== null && player.inventory?.canMine()) || player === null) {\n      this.dropLoot();\n      this.game.pushMessage(\"You use your pickaxe to collect the resource.\");\n    } else {\n      this.game.pushMessage(\n        \"You break the rock, but fail to collect any material from it.\",\n      );\n    }\n    this.uniqueKillBehavior();\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = this.alpha;\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/usable/heart\";\nimport { LevelConstants } from \"../../level/levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Player } from \"../../player/player\";\nimport { Sound } from \"../../sound/sound\";\nimport { Stone } from \"../../item/resource/stone\";\nimport { Resource } from \"./resource\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Geode } from \"../../item/resource/geode\";\n\nexport class Rock extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 2;\n    this.tileX = 8;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"rock\";\n    if (Math.random() < 0.2) {\n      this.drops.push(new Geode(this.room, this.x, this.y));\n    }\n    //this.drops.push(new Stone(this.room, this.x, this.y));\n  }\n}\n","import { EventEmitter } from \"./eventEmitter\";\n\nclass EventBus {\n  private static instance: EventBus;\n  private eventEmitter: EventEmitter;\n\n  private constructor() {\n    this.eventEmitter = new EventEmitter();\n  }\n\n  public static getInstance(): EventBus {\n    if (!EventBus.instance) {\n      EventBus.instance = new EventBus();\n    }\n    return EventBus.instance;\n  }\n\n  public emit<T>(event: string, data: T): void {\n    this.eventEmitter.emit(event, data);\n  }\n\n  public on<T>(event: string, callback: (data: T) => void): void {\n    this.eventEmitter.on(event, callback);\n  }\n\n  public off<T>(event: string, callback: (data: T) => void): void {\n    this.eventEmitter.off(event, callback);\n  }\n}\n\nexport const globalEventBus = EventBus.getInstance();\n","type EventCallback<T = any> = (data: T) => void;\n\nexport class EventEmitter {\n  private events: Record<string, EventCallback[]> = {};\n\n  on<T>(event: string, listener: EventCallback<T>): void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off<T>(event: string, listener: EventCallback<T>): void {\n    if (!this.events[event]) return;\n    this.events[event] = this.events[event].filter((l) => l !== listener);\n  }\n\n  emit<T>(event: string, data: T): void {\n    if (!this.events[event]) return;\n    this.events[event].forEach((listener) => listener(data));\n  }\n\n  // New method to remove all listeners for an event\n  removeAllListeners(event: string): void {\n    delete this.events[event];\n  }\n}\n","export const EVENTS = {\n  KEY_DOWN: \"KEY_DOWN\",\n  KEY_UP: \"KEY_UP\",\n  MOUSE_LEFT_CLICK: \"MOUSE_LEFT_CLICK\",\n  MOUSE_RIGHT_CLICK: \"MOUSE_RIGHT_CLICK\",\n  MOUSE_MOVE: \"MOUSE_MOVE\",\n  TOUCH_START: \"TOUCH_START\",\n  TOUCH_MOVE: \"TOUCH_MOVE\",\n  TOUCH_END: \"TOUCH_END\",\n  TAP: \"TAP\",\n  TAP_HOLD: \"TAP_HOLD\",\n  MOUSE_DOWN: \"MOUSE_DOWN\",\n  MOUSE_UP: \"MOUSE_UP\",\n\n  // **Additional Custom Events:**\n  CHAT_MESSAGE: \"ChatMessage\",\n  ENEMY_SEEN_PLAYER: \"EnemySeenPlayer\",\n  ENEMY_KILLED: \"ENEMY_KILLED\",\n  DAMAGE_DONE: \"DAMAGE_DONE\",\n  DAMAGE_TAKEN: \"DAMAGE_TAKEN\",\n  TURN_PASSED: \"TURN_PASSED\",\n  COIN_COLLECTED: \"COIN_COLLECTED\",\n  ITEM_COLLECTED: \"ITEM_COLLECTED\",\n  LEVEL_GENERATION_STARTED: \"LEVEL_GENERATION_STARTED\",\n  LEVEL_GENERATION_COMPLETED: \"LEVEL_GENERATION_COMPLETED\",\n  // Add other custom events as needed\n} as const;\n\n// **TypeScript Interfaces for Event Payloads:**\n\nexport interface MouseClickEvent {\n  x: number;\n  y: number;\n}\n\nexport interface MouseMoveEvent {\n  x: number;\n  y: number;\n}\n\nexport interface KeyEvent {\n  key: string;\n}\n\nexport interface TouchEventData {\n  x: number;\n  y: number;\n}\n\nexport interface ChatMessageEvent {\n  message: string;\n}\n\nexport interface EnemySeenPlayerEvent {\n  enemyId: string;\n  playerId: string;\n  // Add other relevant properties\n}\n\nexport interface EnemyKilledEvent {\n  enemyId: string;\n  xp: number;\n}\n\nexport interface DamageDoneEvent {\n  amount: number;\n}\n\nexport interface DamageTakenEvent {\n  amount: number;\n}\n\nexport interface CoinCollectedEvent {\n  amount: number;\n}\n\nexport interface ItemCollectedEvent {\n  itemId: string;\n}\n\n// **Union Type for Events:**\nexport type AppEvents =\n  | typeof EVENTS.KEY_DOWN\n  | typeof EVENTS.KEY_UP\n  | typeof EVENTS.MOUSE_LEFT_CLICK\n  | typeof EVENTS.MOUSE_RIGHT_CLICK\n  | typeof EVENTS.MOUSE_MOVE\n  | typeof EVENTS.TOUCH_START\n  | typeof EVENTS.TOUCH_MOVE\n  | typeof EVENTS.TOUCH_END\n  | typeof EVENTS.TAP\n  | typeof EVENTS.TAP_HOLD\n  | typeof EVENTS.MOUSE_DOWN\n  | typeof EVENTS.MOUSE_UP\n  | typeof EVENTS.CHAT_MESSAGE\n  | typeof EVENTS.ENEMY_SEEN_PLAYER\n  | typeof EVENTS.ENEMY_KILLED\n  | typeof EVENTS.DAMAGE_DONE\n  | typeof EVENTS.DAMAGE_TAKEN\n  | typeof EVENTS.TURN_PASSED\n  | typeof EVENTS.COIN_COLLECTED\n  | typeof EVENTS.ITEM_COLLECTED\n  | typeof EVENTS.LEVEL_GENERATION_STARTED\n  | typeof EVENTS.LEVEL_GENERATION_COMPLETED;\n// | Add other events as needed\n\n// **Type Mapping for Event Payloads:**\nexport type EventPayloads = {\n  [EVENTS.KEY_DOWN]: string; // key identifier\n  [EVENTS.KEY_UP]: string;\n  [EVENTS.MOUSE_LEFT_CLICK]: MouseClickEvent;\n  [EVENTS.MOUSE_RIGHT_CLICK]: MouseClickEvent;\n  [EVENTS.MOUSE_MOVE]: MouseMoveEvent;\n  [EVENTS.TOUCH_START]: TouchEventData;\n  [EVENTS.TOUCH_MOVE]: TouchEventData;\n  [EVENTS.TOUCH_END]: TouchEventData;\n  [EVENTS.TAP]: MouseClickEvent;\n  [EVENTS.TAP_HOLD]: MouseClickEvent;\n  [EVENTS.MOUSE_DOWN]: MouseClickEvent;\n  [EVENTS.MOUSE_UP]: MouseClickEvent;\n\n  [EVENTS.CHAT_MESSAGE]: ChatMessageEvent;\n  [EVENTS.ENEMY_SEEN_PLAYER]: EnemySeenPlayerEvent;\n  [EVENTS.ENEMY_KILLED]: EnemyKilledEvent;\n  [EVENTS.DAMAGE_DONE]: DamageDoneEvent;\n  [EVENTS.DAMAGE_TAKEN]: DamageTakenEvent;\n  [EVENTS.TURN_PASSED]: void;\n  [EVENTS.COIN_COLLECTED]: CoinCollectedEvent;\n  [EVENTS.ITEM_COLLECTED]: ItemCollectedEvent;\n  [EVENTS.LEVEL_GENERATION_STARTED]: void;\n  [EVENTS.LEVEL_GENERATION_COMPLETED]: void;\n  // | Add other event payloads as needed\n};\n","import { GameConstants } from \"./game/gameConstants\";\nimport { EnemyType, Room, RoomType } from \"./room/room\";\nimport { Player } from \"./player/player\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Sound } from \"./sound/sound\";\nimport { LevelConstants } from \"./level/levelConstants\";\nimport { LevelGenerator } from \"./level/levelGenerator\";\nimport { Input, InputEnum } from \"./game/input\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { TextBox } from \"./game/textbox\";\nimport { createGameState, GameState, loadGameState } from \"./game/gameState\";\nimport { DoorDir } from \"./tile/door\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { TutorialListener } from \"./game/tutorialListener\";\nimport { MouseCursor } from \"./gui/mouseCursor\";\nimport { PostProcessor } from \"./gui/postProcess\";\nimport { globalEventBus } from \"./event/eventBus\";\nimport { ReverbEngine } from \"./sound/reverb\";\nimport { Level } from \"./level/level\";\nimport { statsTracker } from \"./game/stats\";\nimport { EVENTS } from \"./event/events\";\nimport { UpLadder } from \"./tile/upLadder\";\nimport { CameraAnimation } from \"./game/cameraAnimation\";\nimport { Tips } from \"./tips\";\nimport { GameplaySettings } from \"./game/gameplaySettings\";\n\nexport enum LevelState {\n  IN_LEVEL,\n  TRANSITIONING,\n  TRANSITIONING_LADDER,\n  LEVEL_GENERATION,\n}\n\nexport enum Direction {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n  DOWN_RIGHT,\n  UP_LEFT,\n  UP_RIGHT,\n  DOWN_LEFT,\n  CENTER,\n}\n\nexport class ChatMessage {\n  message: string;\n  timestamp: number;\n  private cachedLines: string[] | null = null;\n  private cachedWidth: number = -1;\n\n  constructor(message: string) {\n    this.message = message;\n    this.timestamp = Date.now();\n  }\n\n  // Get wrapped lines for the given max width, with caching\n  getWrappedLines(maxWidth: number): string[] {\n    if (this.cachedLines && this.cachedWidth === maxWidth) {\n      return this.cachedLines;\n    }\n\n    this.cachedLines = this.wrapText(this.message, maxWidth);\n    this.cachedWidth = maxWidth;\n    return this.cachedLines;\n  }\n\n  private wrapText(text: string, maxWidth: number): string[] {\n    if (text === \"\") return [\"\"];\n\n    const words = text.split(\" \");\n    const lines: string[] = [];\n    let currentLine = \"\";\n\n    for (const word of words) {\n      const testLine = currentLine === \"\" ? word : currentLine + \" \" + word;\n\n      if (Game.measureText(testLine).width <= maxWidth) {\n        currentLine = testLine;\n      } else {\n        if (currentLine !== \"\") {\n          lines.push(currentLine);\n          currentLine = word;\n        } else {\n          // Single word is too long, just add it anyway\n          lines.push(word);\n        }\n      }\n    }\n\n    if (currentLine !== \"\") {\n      lines.push(currentLine);\n    }\n\n    return lines.length > 0 ? lines : [\"\"];\n  }\n\n  // Clear cache when screen resizes\n  clearCache(): void {\n    this.cachedLines = null;\n    this.cachedWidth = -1;\n  }\n}\n\nlet getShadeCanvasKey = (\n  set: HTMLImageElement,\n  sX: number,\n  sY: number,\n  sW: number,\n  sH: number,\n  opacity: number,\n  shadeColor: string,\n): string => {\n  return (\n    set.src +\n    \",\" +\n    sX +\n    \",\" +\n    sY +\n    \",\" +\n    sW +\n    \",\" +\n    sH +\n    \",\" +\n    opacity +\n    \",\" +\n    shadeColor\n  );\n};\n\n// fps counter\nconst times = [];\nlet fps = 60;\n\nexport class Game {\n  static ctx: CanvasRenderingContext2D;\n  static shade_canvases: Record<string, HTMLCanvasElement>;\n  prevLevel: Room; // for transitions\n  room: Room;\n  rooms: Array<Room>;\n  level: Level;\n  levels: Array<Level>;\n  levelgen: LevelGenerator;\n  readonly localPlayerID = \"localplayer\";\n  players: Record<string, Player>;\n  offlinePlayers: Record<string, Player>;\n  levelState: LevelState;\n  transitionStartTime: number;\n  transitionX: number;\n  transitionY: number;\n  upwardTransition: boolean;\n  sideTransition: boolean;\n  sideTransitionDirection: number;\n  transition: boolean;\n  transitioningLadder: UpLadder | DownLadder;\n  screenShakeX: number;\n  screenShakeY: number;\n  shakeAmountX: number;\n  shakeAmountY: number;\n  shakeFrame: number;\n  screenShakeCutoff: number;\n  chat: Array<ChatMessage>;\n  chatOpen: boolean;\n  chatTextBox: TextBox;\n  previousFrameTimestamp: number;\n  player: Player;\n\n  static inputReceived = false;\n\n  loginMessage: string = \"\";\n  username: string;\n  usernameTextBox: TextBox;\n  passwordTextBox: TextBox;\n  worldCodes: Array<string>;\n  private selectedWorldCode: number;\n  tutorialActive: boolean;\n  static scale: number;\n  static interpolatedScale: number;\n  static tileset: HTMLImageElement;\n  static objset: HTMLImageElement;\n  static mobset: HTMLImageElement;\n  static itemset: HTMLImageElement;\n  static fxset: HTMLImageElement;\n  static fontsheet: HTMLImageElement;\n  isMobile: boolean;\n  started: boolean;\n  startedFadeOut: boolean;\n  screenShakeActive: boolean;\n  encounteredEnemies: Array<number>;\n  paused: boolean;\n  private startScreenAlpha = 1;\n  static delta: number;\n  currentDepth: number;\n  previousDepth: number;\n  private ellipsisFrame: number = 0;\n  private ellipsisStartTime: number = 0;\n  cameraAnimation: CameraAnimation;\n\n  cameraTargetX: number;\n  cameraTargetY: number;\n  cameraX: number;\n  cameraY: number;\n  justTransitioned: boolean = false;\n\n  tip: string = Tips.getRandomTip();\n\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\n  static readonly letters = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\";\n  static readonly letter_widths = [\n    4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5,\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3,\n  ];\n  static readonly letter_height = 6;\n  static letter_positions = [];\n\n  // [min, max] inclusive\n  static rand = (min: number, max: number, rand): number => {\n    if (max < min) return min;\n    return Math.floor(rand() * (max - min + 1) + min);\n  };\n\n  static randTable = (table: any[], rand): any => {\n    return table[Game.rand(0, table.length - 1, rand)];\n  };\n  tutorialListener: TutorialListener;\n\n  private focusTimeout: number | null = null;\n  private readonly FOCUS_TIMEOUT_DURATION = 15000; // 5 seconds\n  private wasMuted = false;\n  private wasStarted = false;\n\n  private lastChatWidth: number = 0;\n\n  constructor() {\n    window.addEventListener(\"load\", () => {\n      let canvas = document.getElementById(\"gameCanvas\");\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\n        alpha: false,\n      }) as CanvasRenderingContext2D;\n\n      // Create TextBox instances and associate them with HTML elements\n      const usernameElement = document.createElement(\"input\");\n      usernameElement.type = \"text\";\n      usernameElement.autocomplete = \"off\";\n      usernameElement.autocapitalize = \"off\";\n      usernameElement.style.position = \"absolute\";\n      usernameElement.style.left = \"-1000px\"; // Position off-screen\n      //const passwordElement = document.createElement(\"input\");\n      //passwordElement.type = \"password\";\n      //passwordElement.style.position = \"absolute\";\n      //passwordElement.style.left = \"-1000px\"; // Position off-screen\n      const chatElement = document.createElement(\"input\");\n      chatElement.type = \"text\";\n      chatElement.style.position = \"absolute\";\n      chatElement.style.left = \"-1000px\"; // Position off-screen\n      //document.body.appendChild(usernameElement);\n      //document.body.appendChild(passwordElement);\n      document.body.appendChild(chatElement);\n\n      document.addEventListener(\n        \"click\",\n        () => {\n          usernameElement.focus();\n        },\n        { once: true },\n      );\n\n      this.chat = [];\n      this.chatTextBox = new TextBox(chatElement);\n      this.chatTextBox.setEnterCallback(() => {\n        if (this.chatTextBox.text.length > 0) {\n          this.chat.push(new ChatMessage(this.chatTextBox.text));\n          this.chatTextBox.clear();\n        } else {\n          this.chatOpen = false;\n        }\n      });\n      this.chatTextBox.setEscapeCallback(() => {\n        this.chatOpen = false;\n      });\n      this.worldCodes = [];\n      this.selectedWorldCode = 0;\n\n      Game.shade_canvases = {};\n      Game.text_rendering_canvases = {};\n\n      let resourcesLoaded = 0;\n      const NUM_RESOURCES = 6;\n\n      Game.tileset = new Image();\n      Game.tileset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.tileset.src = \"res/tileset.png\";\n      Game.objset = new Image();\n      Game.objset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.objset.src = \"res/objset.png\";\n      Game.mobset = new Image();\n      Game.mobset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.mobset.src = \"res/mobset.png\";\n      Game.itemset = new Image();\n      Game.itemset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.itemset.src = \"res/itemset.png\";\n      Game.fxset = new Image();\n      Game.fxset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.fxset.src = \"res/fxset.png\";\n      Game.fontsheet = new Image();\n      Game.fontsheet.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.fontsheet.src = \"res/font.png\";\n\n      this.levelState = LevelState.LEVEL_GENERATION;\n\n      // Initialize camera properties\n      this.cameraX = 0;\n      this.cameraY = 0;\n      this.cameraTargetX = 0;\n      this.cameraTargetY = 0;\n\n      let checkResourcesLoaded = () => {\n        if (resourcesLoaded < NUM_RESOURCES) {\n          window.setTimeout(checkResourcesLoaded, 500);\n        } else {\n          // proceed with constructor\n\n          Game.scale = GameConstants.SCALE;\n\n          document.addEventListener(\n            \"touchstart\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n          document.addEventListener(\n            \"touchend\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n          document.addEventListener(\n            \"touchmove\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n\n          document.addEventListener(\"touchstart\", Input.handleTouchStart, {\n            passive: false,\n          });\n          document.addEventListener(\"touchmove\", Input.handleTouchMove, {\n            passive: false,\n          });\n          document.addEventListener(\"touchend\", Input.handleTouchEnd, {\n            passive: false,\n          });\n\n          Input.keyDownListener = (key: string) => {\n            this.keyDownListener(key);\n          };\n\n          window.requestAnimationFrame(this.run);\n          this.onResize();\n          window.addEventListener(\"resize\", this.onResize);\n          window.addEventListener(\"orientationchange\", () => {\n            // Small delay to ensure new dimensions are available\n            setTimeout(this.onResize, 100);\n          });\n\n          //Sound.playMusic(); // loops forever\n\n          this.players = {};\n          this.offlinePlayers = {};\n          this.chatOpen = false;\n          this.cameraAnimation = new CameraAnimation(0, 0, 1000, 1, 0, false);\n\n          this.screenShakeX = 0;\n          this.screenShakeY = 0;\n          this.shakeAmountX = 0;\n          this.shakeAmountY = 0;\n          this.shakeFrame = (3 * Math.PI) / 2;\n          this.screenShakeCutoff = 0;\n          this.tutorialActive = false;\n          this.screenShakeActive = false;\n          this.levels = [];\n          this.encounteredEnemies = [];\n          this.newGame();\n        }\n      };\n      checkResourcesLoaded();\n    });\n    ReverbEngine.initialize();\n\n    Sound.loadSounds();\n\n    this.started = false;\n    this.tutorialListener = null;\n\n    this.setupEventListeners();\n\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_STARTED, () => {\n      this.levelState = LevelState.LEVEL_GENERATION;\n    });\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, () => {\n      this.levelState = LevelState.IN_LEVEL;\n    });\n\n    // Add focus/blur event listeners\n    //window.addEventListener(\"blur\", this.handleWindowBlur);\n    //window.addEventListener(\"focus\", this.handleWindowFocus);\n  }\n\n  updateDepth = (depth: number) => {\n    this.previousDepth = this.currentDepth;\n    this.currentDepth = depth;\n    this.players[this.localPlayerID].depth = depth;\n  };\n\n  updateLevel = (room: Room) => {\n    if (room && room.level) {\n      this.level = room.level;\n    }\n    if (this.level.rooms.length > 0) this.rooms = this.level.rooms;\n  };\n\n  setPlayer = () => {\n    this.player = this.players[this.localPlayerID];\n  };\n\n  newGame = () => {\n    statsTracker.resetStats();\n    this.currentDepth = 0;\n    this.encounteredEnemies = [];\n    this.levels = [];\n    //gs = new GameState();\n    gs.seed = (Math.random() * 4294967296) >>> 0;\n    gs.randomState = (Math.random() * 4294967296) >>> 0;\n    loadGameState(this, [this.localPlayerID], gs, true);\n\n    this.levelState = LevelState.LEVEL_GENERATION;\n  };\n\n  keyDownListener = (key: string) => {\n    Game.inputReceived = true;\n\n    if (!this.started) {\n      this.startedFadeOut = true;\n      return;\n    }\n\n    // Handle global keys\n    if (!this.chatOpen) {\n      switch (key.toUpperCase()) {\n        case \"M\":\n          Sound.toggleMute();\n          this.pushMessage(Sound.audioMuted ? \"Audio muted\" : \"Audio unmuted\");\n          return;\n\n        case \"C\":\n          this.chatOpen = true;\n          return;\n\n        case \"/\":\n          this.chatOpen = true;\n          this.chatTextBox.clear();\n          this.chatTextBox.handleKeyPress(key);\n          return;\n\n        case \"1\":\n          LevelGenerator.ANIMATION_CONSTANT = 1;\n          return;\n        case \"2\":\n          LevelGenerator.ANIMATION_CONSTANT = 2;\n          return;\n        case \"3\":\n          LevelGenerator.ANIMATION_CONSTANT = 5;\n          return;\n        case \"4\":\n          LevelGenerator.ANIMATION_CONSTANT = 10000;\n          return;\n        case \"0\":\n          LevelGenerator.ANIMATION_CONSTANT = 0;\n          return;\n      }\n\n      // Forward all player input\n      const player = this.players[this.localPlayerID];\n      player.inputHandler.handleKeyboardKey(key);\n    } else {\n      this.chatTextBox.handleKeyPress(key);\n    }\n  };\n\n  changeLevelThroughLadder = (\n    player: Player,\n    ladder: UpLadder | DownLadder,\n  ) => {\n    player.map.saveOldMap();\n    if (ladder instanceof DownLadder && !ladder.linkedRoom) ladder.generate();\n\n    const newRoom = ladder.linkedRoom;\n\n    if (this.players[this.localPlayerID] === player) {\n      player.levelID = newRoom.id;\n    }\n\n    if (newRoom.envType === 2) Sound.playForestMusic();\n\n    this.updateDepth(newRoom.depth);\n\n    this.levelState = LevelState.TRANSITIONING_LADDER;\n    this.transitionStartTime = Date.now();\n    this.transitioningLadder = ladder;\n  };\n\n  changeLevelThroughDoor = (player: Player, door: Door, side?: number) => {\n    door.linkedDoor.room.entered = true;\n    player.levelID = door.room.id;\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING;\n      this.transitionStartTime = Date.now();\n      const hasDir = door.doorDir !== door.linkedDoor.doorDir;\n\n      let oldX = this.players[this.localPlayerID].x;\n      let oldY = this.players[this.localPlayerID].y;\n\n      this.prevLevel = this.room;\n      this.prevLevel.exitLevel();\n\n      //this.level.exitLevel();\n      this.room = door.room;\n\n      door.room.enterLevelThroughDoor(player, door, side);\n\n      this.transitionX =\n        (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\n      this.transitionY =\n        (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\n\n      this.upwardTransition = false;\n      this.sideTransition = false;\n      this.sideTransitionDirection = side;\n      if (\n        door instanceof Door &&\n        [Direction.RIGHT, Direction.LEFT].includes(door.doorDir) &&\n        hasDir\n      )\n        this.sideTransition = true;\n      else if (\n        door instanceof Door &&\n        door.doorDir === Direction.DOWN &&\n        hasDir\n      )\n        this.upwardTransition = true;\n    } else {\n      door.room.enterLevelThroughDoor(player, door, side);\n    }\n    player.map.saveMapData();\n  };\n\n  run = (timestamp: number) => {\n    if (this.paused) {\n      // Still request next frame even when paused to maintain loop\n      window.requestAnimationFrame(this.run);\n      return;\n    }\n\n    if (!this.previousFrameTimestamp) {\n      this.previousFrameTimestamp = timestamp;\n      window.requestAnimationFrame(this.run);\n      return;\n    }\n\n    // Calculate elapsed time in milliseconds\n    let elapsed = timestamp - this.previousFrameTimestamp;\n\n    // Normalize delta to 60 FPS\n    let delta = (elapsed * 60) / 1000.0;\n\n    // Define minimum and maximum delta values\n    const deltaMin = 1 / 10; // 600fps\n    const deltaMax = 8; //7.5fps\n    // Cap delta within [deltaMin, deltaMax]\n    if (Game.delta) delta = Game.delta;\n    if (delta < deltaMin) {\n      delta = deltaMin;\n    } else if (delta > deltaMax) {\n      delta = deltaMax;\n    }\n    // Update FPS tracking\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\n      times.shift();\n    }\n    times.push(timestamp);\n    fps = times.length;\n    // Update game logic\n    if (\n      Math.floor(timestamp / (1000 / 60)) >\n      Math.floor(this.previousFrameTimestamp / (1000 / 60))\n    ) {\n      this.update();\n    }\n\n    if (\n      Math.floor(timestamp) >\n      Math.floor(this.previousFrameTimestamp) + 1000\n    ) {\n      this.refreshDimensions();\n    }\n    //delta = 0.1;\n    // Render the frame with capped delta\n\n    this.draw(delta * GameConstants.ANIMATION_SPEED * 1);\n\n    // Request the next frame\n    window.requestAnimationFrame(this.run);\n\n    // Update the previous frame timestamp\n    this.previousFrameTimestamp = timestamp;\n  };\n\n  update = () => {\n    this.refreshDimensions();\n    Input.checkIsTapHold();\n\n    // Existing key repeat\n    if (\n      Input.lastPressTime !== 0 &&\n      Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\n    ) {\n      Input.onKeydown({\n        repeat: false,\n        key: Input.lastPressKey,\n      } as KeyboardEvent);\n    }\n\n    // Add mouse repeat for movement\n    if (\n      Input.mouseDown &&\n      Input.mouseDownHandled &&\n      Input.lastMouseDownTime !== 0 &&\n      Date.now() - Input.lastMouseDownTime > GameConstants.KEY_REPEAT_TIME\n    ) {\n      // Re-trigger mouse movement\n      const player = this.players[this.localPlayerID];\n      if (\n        player &&\n        player.game.levelState === LevelState.IN_LEVEL &&\n        !player.dead &&\n        !player.menu.open &&\n        !player.busyAnimating &&\n        !player.game.cameraAnimation.active\n      ) {\n        // Update mouse position and trigger movement\n        player.moveWithMouse();\n        Input.lastMouseDownTime = Date.now(); // Reset timer for next repeat\n      }\n    }\n\n    // Swipe hold repeat with initial delay\n    if (Input.swipeHoldActive && Input.lastSwipeTime !== 0) {\n      const timeSinceSwipe = Date.now() - Input.lastSwipeTime;\n\n      if (!Input.swipeHoldRepeating) {\n        // Check if we've waited long enough for initial delay\n        if (timeSinceSwipe > GameConstants.SWIPE_HOLD_INITIAL_DELAY) {\n          Input.swipeHoldRepeating = true;\n          Input.lastSwipeTime = Date.now(); // Reset timer for repeat timing\n        }\n      } else {\n        // We're in repeat mode, check if it's time to repeat\n        if (timeSinceSwipe > GameConstants.SWIPE_HOLD_REPEAT_TIME) {\n          // Trigger the swipe listener again based on last direction\n          switch (Input.lastSwipeDirection) {\n            case Direction.LEFT:\n              Input.leftSwipeListener();\n              break;\n            case Direction.RIGHT:\n              Input.rightSwipeListener();\n              break;\n            case Direction.UP:\n              Input.upSwipeListener();\n              break;\n            case Direction.DOWN:\n              Input.downSwipeListener();\n              break;\n          }\n          Input.lastSwipeTime = Date.now(); // Reset timer for next repeat\n        }\n      }\n    }\n\n    if (this.levelState === LevelState.TRANSITIONING) {\n      if (\n        Date.now() - this.transitionStartTime >=\n        LevelConstants.LEVEL_TRANSITION_TIME\n      ) {\n        this.levelState = LevelState.IN_LEVEL;\n      }\n    }\n    if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n      if (\n        Date.now() - this.transitionStartTime >=\n        LevelConstants.LEVEL_TRANSITION_TIME_LADDER\n      ) {\n        this.levelState = LevelState.IN_LEVEL;\n        this.players[this.localPlayerID].map.saveMapData();\n      }\n    }\n    if (this.levelState !== LevelState.LEVEL_GENERATION) {\n      for (const i in this.players) {\n        this.players[i].update();\n        this.levels[this.players[i].depth].rooms[\n          this.players[i].levelID\n        ].update();\n\n        if (this.players[i].dead) {\n          for (const j in this.players) {\n            this.players[j].dead = true;\n          }\n        }\n      }\n    }\n  };\n\n  lerp = (a: number, b: number, t: number): number => {\n    return (1 - t) * a + t * b;\n  };\n\n  pushMessage = (message: string) => {\n    this.chat.push(new ChatMessage(message));\n  };\n\n  commandHandler = (command: string): void => {\n    const player = this.room.game.players[0];\n    command = command.toLowerCase();\n    let enabled = \"\";\n    switch (command) {\n      case \"devmode\":\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\n        break;\n      case \"new\":\n        this.newGame();\n        break;\n      case \"dev\":\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\n        this.newGame();\n        break;\n      case \"kill\":\n        for (const i in this.players) {\n          this.players[i].dead = true;\n        }\n        break;\n      case \"killall\":\n        for (const i in this.players) {\n          this.players[i].game.room.entities.forEach((e) => {\n            e.kill();\n          });\n        }\n        break;\n      case \"bomb\":\n        this.room.addBombs(1, () => Math.random());\n        break;\n      case \"col\":\n        GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false);\n        break;\n      case \"scl\":\n        GameConstants.SET_SCALE();\n        this.onResize();\n        break;\n      case \"shd\":\n        GameConstants.SHADE_ENABLED = !GameConstants.SHADE_ENABLED;\n        enabled = GameConstants.SHADE_ENABLED ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Shade is now ${enabled}`);\n        break;\n      case \"shdop\":\n        GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(false);\n        break;\n      case \"smooth\":\n        GameConstants.SMOOTH_LIGHTING = !GameConstants.SMOOTH_LIGHTING;\n        enabled = GameConstants.SMOOTH_LIGHTING ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Smooth lighting is now ${enabled}`);\n        break;\n      case \"rooms\":\n        GameConstants.drawOtherRooms = !GameConstants.drawOtherRooms;\n        enabled = GameConstants.drawOtherRooms ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Drawing other rooms is now ${enabled}`);\n        break;\n      case \"opq\":\n        GameConstants.ENEMIES_BLOCK_LIGHT = !GameConstants.ENEMIES_BLOCK_LIGHT;\n        enabled = GameConstants.ENEMIES_BLOCK_LIGHT ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Enemies block light is now ${enabled}`);\n        break;\n      case \"peace\":\n        GameplaySettings.NO_ENEMIES = !GameplaySettings.NO_ENEMIES;\n        this.newGame();\n        enabled = GameplaySettings.NO_ENEMIES ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Peaceful mode is now ${enabled}`);\n        break;\n      case \"equip\":\n        GameplaySettings.EQUIP_USES_TURN = !GameplaySettings.EQUIP_USES_TURN;\n        enabled = GameplaySettings.EQUIP_USES_TURN ? \"enabled\" : \"disabled\";\n        this.pushMessage(`Equipping an item takes a turn is now ${enabled}`);\n        break;\n      case \"webgl\":\n        GameConstants.TOGGLE_USE_WEBGL_BLUR();\n        break;\n      case \"hq\":\n        GameConstants.TOGGLE_HIGH_QUALITY_BLUR();\n        break;\n      default:\n        if (command.startsWith(\"new \")) {\n          this.room.addNewEnemy(command.slice(4) as EnemyType);\n        }\n        break;\n    }\n  };\n\n  private setupEventListeners(): void {\n    //console.log(\"Setting up event listeners\");\n    globalEventBus.on(\"ChatCommand\", this.commandHandler.bind(this));\n  }\n\n  maxScale = () => {\n    let dimension = window.innerWidth;\n    let measure = 130;\n\n    for (let i = GameConstants.MIN_SCALE; i <= GameConstants.MAX_SCALE; i++) {\n      if (dimension / i < measure) {\n        return i;\n      }\n    }\n    return GameConstants.MAX_SCALE;\n  };\n\n  increaseScale = () => {\n    GameConstants.INCREASE_SCALE();\n    this.onResize();\n    // Recalculate mouse position for new scale\n    Input.recalculateMousePosition();\n  };\n\n  decreaseScale = () => {\n    GameConstants.DECREASE_SCALE();\n    this.onResize();\n    // Recalculate mouse position for new scale\n    Input.recalculateMousePosition();\n  };\n\n  updateScale = (delta: number) => {\n    if (GameConstants.smoothScaling) {\n      if (\n        GameConstants.SOFT_SCALE < GameConstants.SCALE &&\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) >= 0.1\n      ) {\n        GameConstants.SOFT_SCALE +=\n          ((GameConstants.SCALE - GameConstants.SOFT_SCALE) * delta) / 10;\n      }\n      if (\n        GameConstants.SOFT_SCALE > GameConstants.SCALE &&\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) >= 0.1\n      ) {\n        GameConstants.SOFT_SCALE -=\n          ((GameConstants.SOFT_SCALE - GameConstants.SCALE) * delta) / 10;\n      }\n\n      if (\n        GameConstants.SOFT_SCALE < GameConstants.SCALE &&\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.1\n      ) {\n        GameConstants.SOFT_SCALE += delta / 25;\n      }\n      if (\n        GameConstants.SOFT_SCALE > GameConstants.SCALE &&\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.1\n      ) {\n        GameConstants.SOFT_SCALE -= delta / 25;\n      }\n      if (Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.01) {\n        GameConstants.SOFT_SCALE = GameConstants.SCALE;\n      }\n    } else {\n      //GameConstants.SCALE = Math.floor(GameConstants.SCALE);\n      GameConstants.SOFT_SCALE = GameConstants.SCALE;\n    }\n\n    this.onResize();\n    // Recalculate mouse position for new scale\n    Input.recalculateMousePosition();\n  };\n\n  refreshDimensions = () => {\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\n  };\n\n  onResize = () => {\n    if (\n      this.localPlayerID !== undefined &&\n      this.players?.[this.localPlayerID] &&\n      this.players?.[this.localPlayerID]?.menu\n    ) {\n      this.players[this.localPlayerID].menu.positionButtons();\n    }\n    this.isMobile =\n      /iPhone|iPad|iPod|Android|webOS|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(\n        navigator.userAgent,\n      );\n\n    GameConstants.isIOS =\n      /iPhone|iPad|iPod/i.test(navigator.userAgent) &&\n      !navigator.userAgent.includes(\"Chrome DevTools\");\n\n    // Define scale adjustment based on device pixel ratio\n    if (GameConstants.SCALE === null) {\n      GameConstants.SCALE = GameConstants.FIND_SCALE(this.isMobile);\n      GameConstants.SOFT_SCALE = GameConstants.SCALE;\n    }\n    let scaleOffset = 0;\n\n    // Calculate maximum possible scale based on window size\n    let maxWidthScale = Math.floor(\n      window.innerWidth / GameConstants.DEFAULTWIDTH,\n    );\n    let maxHeightScale = Math.floor(\n      window.innerHeight / GameConstants.DEFAULTHEIGHT,\n    );\n\n    if (this.isMobile) {\n      if (this.isMobile) this.pushMessage(\"Mobile detected\");\n      GameConstants.SHADE_LEVELS = 35;\n      GameConstants.isMobile = true;\n      LevelConstants.LIGHTING_ANGLE_STEP = 2;\n      LevelConstants.LIGHTING_MAX_DISTANCE = 7;\n      GameConstants.USE_WEBGL_BLUR = true;\n\n      // Use smaller scale for mobile devices based on screen size\n      // Adjust max scale with scaleOffset\n      const integerScale = GameConstants.SOFT_SCALE + scaleOffset;\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale); // Cap at 3 + offset for mobile\n    } else {\n      GameConstants.isMobile = false;\n      // For desktop, use standard scaling logic\n      // Ensure GameConstants.SCALE is an integer. If not, round it.\n      const integerScale = GameConstants.SOFT_SCALE + scaleOffset;\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale);\n    }\n\n    // Handle case where scale would be 0\n    if (Game.scale === 0) {\n      // Recalculate max scales without flooring to check for minimum scale\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\n      // Ensure Game.scale is at least 1 and an integer\n      Game.scale = Math.max(\n        1,\n        Math.min(maxWidthScale, maxHeightScale, 1 + scaleOffset),\n      );\n    }\n\n    // Apply device pixel ratio negation by setting scale to compensate for DPI\n    const NEGATE_DPR_FACTOR = 1;\n    Game.scale *= NEGATE_DPR_FACTOR / window.devicePixelRatio;\n\n    // Calculate screen width and height in tiles, ensuring integer values\n    LevelConstants.SCREEN_W = Math.floor(\n      window.innerWidth / Game.scale / GameConstants.TILESIZE,\n    );\n    LevelConstants.SCREEN_H = Math.floor(\n      window.innerHeight / Game.scale / GameConstants.TILESIZE,\n    );\n\n    // Calculate canvas width and height in pixels\n    GameConstants.WIDTH = Math.floor(window.innerWidth / Game.scale);\n    GameConstants.HEIGHT = Math.floor(window.innerHeight / Game.scale);\n\n    // Set canvas width and height attributes\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\n\n    // Set CSS styles for scaling, applying negated DPR factor\n    Game.ctx.canvas.setAttribute(\n      \"style\",\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${\n        GameConstants.HEIGHT * Game.scale\n      }px;\n      display: block;\n      margin: 0 auto;\n      image-rendering: optimizeSpeed; /* Older versions of FF */\n      image-rendering: -moz-crisp-edges; /* FF 6.0+ */\n      image-rendering: -webkit-optimize-contrast; /* Safari */\n      image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\n      image-rendering: pixelated; /* Future-browsers */\n      -ms-interpolation-mode: nearest-neighbor; /* IE */\n      `,\n    );\n\n    // Clear chat cache if width changed\n    const newChatWidth = GameConstants.WIDTH - 20; // Account for margins\n    if (newChatWidth !== this.lastChatWidth) {\n      this.chat.forEach((msg) => msg.clearCache());\n      this.lastChatWidth = newChatWidth;\n    }\n  };\n\n  shakeScreen = (shakeX: number, shakeY: number, clamp: boolean = false) => {\n    let finalX = clamp ? Math.max(-3, Math.min(3, shakeX)) : shakeX;\n    let finalY = clamp ? Math.max(-3, Math.min(3, shakeY)) : shakeY;\n\n    this.screenShakeActive = true;\n    this.screenShakeX += finalX;\n    this.screenShakeY += finalY;\n    this.shakeAmountX += Math.abs(finalX);\n    this.shakeAmountY += Math.abs(finalY);\n    if (finalX < 0 || finalY < 0) this.shakeFrame = (3 * Math.PI) / 2;\n    if (finalX > 0 || finalY > 0) this.shakeFrame = Math.PI / 2;\n    this.screenShakeCutoff = Date.now();\n  };\n\n  drawRooms = (delta: number, skipLocalPlayer: boolean = false) => {\n    if (!GameConstants.drawOtherRooms) {\n      this.room.draw(delta);\n      this.room.drawEntities(delta, true);\n    } else if (GameConstants.drawOtherRooms) {\n      // Create a sorted copy of the rooms array based on roomY + height\n      const sortedRooms = this.levels[this.currentDepth].rooms\n        .slice()\n        .sort((a, b) => {\n          const aPosition = a.roomY + a.height;\n          const bPosition = b.roomY + b.height;\n          return aPosition - bPosition; // Ascending order\n        });\n\n      for (const room of sortedRooms) {\n        if (room.active || (room.entered && room.onScreen)) {\n          room.draw(delta);\n\n          room.drawEntities(delta, skipLocalPlayer);\n          //room.drawShade(delta); // this used to come after the color layer\n        }\n      }\n    }\n  };\n\n  drawRoomShadeAndColor = (delta: number) => {\n    for (const room of this.levels[this.currentDepth].rooms) {\n      if (room.active || room.entered) {\n        room.drawShadeLayer();\n        room.drawColorLayer();\n        room.drawBloomLayer(delta);\n      }\n    }\n    for (const room of this.levels[this.currentDepth].rooms) {\n      if (room.active && room.entered) {\n        room.drawOverShade(delta);\n      }\n    }\n  };\n\n  static measureText = (text: string): { width: number; height: number } => {\n    let w = 0;\n    for (const letter of text.toLowerCase()) {\n      if (letter === \" \") w += 4;\n      else\n        for (let i = 0; i < Game.letters.length; i++) {\n          if (Game.letters[i] === letter) {\n            w += Game.letter_widths[i] + 1;\n          }\n        }\n    }\n    return { width: w, height: Game.letter_height };\n  };\n\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\n    x = Math.round(x);\n    y = Math.round(y);\n\n    if (Game.letter_positions.length === 0) {\n      // calculate letter positions\n      for (let i = 0; i < Game.letter_widths.length; i++) {\n        if (i === 0) Game.letter_positions[0] = 0;\n        else\n          Game.letter_positions[i] =\n            Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\n      }\n    } else {\n      let dimensions = Game.measureText(text);\n      if (dimensions.width > 0) {\n        let key = text + Game.ctx.fillStyle;\n\n        if (!Game.text_rendering_canvases[key]) {\n          Game.text_rendering_canvases[key] = document.createElement(\"canvas\");\n          Game.text_rendering_canvases[key].width = dimensions.width;\n          Game.text_rendering_canvases[key].height = dimensions.height;\n          let bx = Game.text_rendering_canvases[key].getContext(\"2d\");\n\n          let letter_x = 0;\n          for (const letter of text.toLowerCase()) {\n            if (letter === \" \") letter_x += 4;\n            else\n              for (let i = 0; i < Game.letters.length; i++) {\n                if (Game.letters[i] === letter) {\n                  bx.drawImage(\n                    Game.fontsheet,\n                    Game.letter_positions[i] + 1,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height,\n                    letter_x,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height,\n                  );\n                  letter_x += Game.letter_widths[i] + 1;\n                }\n              }\n          }\n          bx.fillStyle = Game.ctx.fillStyle;\n          bx.globalCompositeOperation = \"source-in\";\n          bx.fillRect(\n            0,\n            0,\n            Game.text_rendering_canvases[key].width,\n            Game.text_rendering_canvases[key].height,\n          );\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        } else {\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        }\n      }\n    }\n  };\n\n  static fillTextOutline = (\n    text: string,\n    x: number,\n    y: number,\n    outlineColor: string,\n    fillColor: string,\n  ) => {\n    Game.ctx.fillStyle = outlineColor;\n    for (let xx = -1; xx <= 1; xx++) {\n      for (let yy = -1; yy <= 1; yy++) {\n        Game.fillText(text, x + xx, y + yy);\n      }\n    }\n    Game.ctx.fillStyle = fillColor;\n    Game.fillText(text, x, y);\n  };\n\n  drawStartScreen = (delta: number) => {\n    let startString = \"Welcome to Turnarchist\";\n\n    Game.ctx.globalAlpha = this.startScreenAlpha;\n    if (!this.started && !this.startedFadeOut) {\n      this.startScreenAlpha = 1;\n      if (this.startScreenAlpha <= 0) this.startScreenAlpha = 0;\n    } else if (!this.started && this.startedFadeOut) {\n      this.startScreenAlpha -= delta * 0.025;\n      if (this.startScreenAlpha <= 0) {\n        this.startScreenAlpha = 0;\n        this.started = true;\n        Sound.playAmbient();\n      }\n    }\n\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n\n    Game.fillText(\n      startString,\n      GameConstants.WIDTH / 2 - Game.measureText(startString).width / 2,\n      GameConstants.HEIGHT / 2 - Game.letter_height + 2,\n    );\n    let restartButton = \"Press space or click to start\";\n    if (this.isMobile) restartButton = \"Tap to start\";\n    Game.fillText(\n      restartButton,\n      GameConstants.WIDTH / 2 - Game.measureText(restartButton).width / 2,\n      GameConstants.HEIGHT / 2 + Game.letter_height + 5,\n    );\n\n    Game.ctx.globalAlpha = 1;\n  };\n\n  drawTipScreen = (delta: number) => {\n    let tip = this.tip;\n\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n\n    Game.fillText(\n      tip,\n      GameConstants.WIDTH / 2 - Game.measureText(tip).width / 2,\n      GameConstants.HEIGHT / 2 - Game.letter_height + 2,\n    );\n  };\n\n  draw = (delta: number) => {\n    if (GameConstants.SOFT_SCALE !== GameConstants.SCALE) {\n      this.updateScale(delta);\n      this.onResize();\n    }\n    //Game.ctx.canvas.setAttribute(\"role\", \"presentation\");\n\n    Game.ctx.clearRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.save(); // Save the current canvas state\n\n    // Reset transformations to ensure the black background covers the entire canvas\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    Game.ctx.globalAlpha = 1;\n    Game.ctx.globalCompositeOperation = \"source-over\";\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    //if (this.room) Game.ctx.fillStyle = this.room.shadeColor;\n    //else Game.ctx.fillStyle = \"black\";\n    //Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (this.levelState === LevelState.TRANSITIONING) {\n      this.screenShakeX = 0;\n      this.screenShakeY = 0;\n      this.screenShakeActive = false;\n\n      let levelOffsetX = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          -this.transitionX,\n        ),\n      );\n      let levelOffsetY = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          -this.transitionY,\n        ),\n      );\n      let playerOffsetX = levelOffsetX - this.transitionX;\n      let playerOffsetY = levelOffsetY - this.transitionY;\n\n      let playerCX =\n        (this.players[this.localPlayerID].x -\n          this.players[this.localPlayerID].drawX +\n          0.5) *\n        GameConstants.TILESIZE;\n      let playerCY =\n        (this.players[this.localPlayerID].y -\n          this.players[this.localPlayerID].drawY +\n          0.5) *\n        GameConstants.TILESIZE;\n\n      Game.ctx.translate(\n        -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n        -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      let extraTileLerp = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          GameConstants.TILESIZE,\n        ),\n      );\n\n      let newLevelOffsetX = playerOffsetX;\n      let newLevelOffsetY = playerOffsetY;\n\n      if (this.sideTransition) {\n        if (this.sideTransitionDirection > 0) {\n          levelOffsetX += extraTileLerp;\n          newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\n        } else {\n          levelOffsetX -= extraTileLerp;\n          newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\n        }\n      } else if (this.upwardTransition) {\n        levelOffsetY -= extraTileLerp;\n        newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\n      } else {\n        levelOffsetY += extraTileLerp;\n        newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\n      }\n\n      let ditherFrame = Math.floor(\n        (7 * (Date.now() - this.transitionStartTime)) /\n          LevelConstants.LEVEL_TRANSITION_TIME,\n      );\n\n      Game.ctx.translate(levelOffsetX, levelOffsetY);\n      if (!GameConstants.drawOtherRooms) {\n        this.prevLevel.draw(delta);\n        this.prevLevel.drawEntities(delta);\n        this.prevLevel.drawColorLayer();\n        this.prevLevel.drawShade(delta);\n        this.prevLevel.drawOverShade(delta);\n\n        /*\n        for (\n          let x = this.prevLevel.roomX - 1;\n          x <= this.prevLevel.roomX + this.prevLevel.width;\n          x++\n        ) {\n          for (\n            let y = this.prevLevel.roomY - 1;\n            y <= this.prevLevel.roomY + this.prevLevel.height;\n            y++\n          ) {\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n      \n      */\n      }\n      Game.ctx.translate(-levelOffsetX, -levelOffsetY);\n\n      Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n\n      if (GameConstants.drawOtherRooms) {\n        this.drawRooms(delta, true);\n\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n        Game.ctx.translate(playerOffsetX, playerOffsetY);\n        this.players[this.localPlayerID].draw(delta); // draw the translation\n\n        Game.ctx.translate(-playerOffsetX, -playerOffsetY);\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n\n        this.drawRoomShadeAndColor(delta);\n      }\n\n      for (\n        let x = this.room.roomX - 1;\n        x <= this.room.roomX + this.room.width;\n        x++\n      ) {\n        for (\n          let y = this.room.roomY - 1;\n          y <= this.room.roomY + this.room.height;\n          y++\n        ) {\n          //Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\n        }\n      }\n\n      //this.drawStuff(delta);\n\n      Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n      Game.ctx.translate(\n        Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n        Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      this.players[this.localPlayerID].drawGUI(delta);\n      this.justTransitioned = true;\n\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\n    } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n      let playerCX =\n        (this.players[this.localPlayerID].x -\n          this.players[this.localPlayerID].drawX +\n          0.5) *\n        GameConstants.TILESIZE;\n      let playerCY =\n        (this.players[this.localPlayerID].y -\n          this.players[this.localPlayerID].drawY +\n          0.5) *\n        GameConstants.TILESIZE;\n\n      Game.ctx.translate(\n        -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n        -Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      let deadFrames = 6;\n      let ditherFrame = Math.floor(\n        ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER,\n      );\n\n      Game.ctx.translate(\n        Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n        Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      if (ditherFrame < 7) {\n        this.drawRooms(delta);\n        this.drawRoomShadeAndColor(delta);\n\n        if (!GameConstants.drawOtherRooms) {\n          for (\n            let x = this.room.roomX - 1;\n            x <= this.room.roomX + this.room.width;\n            x++\n          ) {\n            for (\n              let y = this.room.roomY - 1;\n              y <= this.room.roomY + this.room.height;\n              y++\n            ) {\n              Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        }\n      } else if (ditherFrame >= 7 + deadFrames) {\n        if (this.transitioningLadder) {\n          this.prevLevel = this.room;\n          this.room.exitLevel();\n          this.room = this.transitioningLadder.linkedRoom;\n\n          //this.players[this.localPlayerID].levelID = this.room.id;\n          this.room.enterLevel(this.players[this.localPlayerID]);\n          this.transitioningLadder = null;\n        }\n\n        this.drawRooms(delta);\n        this.drawRoomShadeAndColor(delta);\n\n        //        this.room.draw(delta);\n        //        this.room.drawEntities(delta);\n        //        this.drawStuff(delta);\n        if (!GameConstants.drawOtherRooms) {\n          for (\n            let x = this.room.roomX - 1;\n            x <= this.room.roomX + this.room.width;\n            x++\n          ) {\n            for (\n              let y = this.room.roomY - 1;\n              y <= this.room.roomY + this.room.height;\n              y++\n            ) {\n              Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        }\n      }\n      //this.players[this.localPlayerID].drawGUI(delta);  // removed this to prevent drawing gui during level transition\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\n      this.drawTextScreen(\"loading level\");\n    } else if (this.levelState === LevelState.LEVEL_GENERATION) {\n      this.levelgen.draw(delta);\n    } else if (this.levelState === LevelState.IN_LEVEL) {\n      // Start of Selection\n\n      this.drawScreenShake(delta);\n\n      const { cameraX, cameraY } = this.applyCamera(delta);\n\n      Game.ctx.translate(-cameraX, -cameraY);\n      this.drawRooms(delta);\n      this.drawRoomShadeAndColor(delta);\n\n      //      this.room.draw(delta);\n      //      this.room.drawEntities(delta);\n\n      // this.drawStuff(delta);\n\n      Game.ctx.translate(cameraX, cameraY);\n\n      this.room.drawTopLayer(delta);\n      this.players[this.localPlayerID].drawGUI(delta);\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\n    }\n    this.drawChat(delta);\n\n    // game version\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      GameConstants.VERSION,\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\n      1,\n    );\n    Game.ctx.globalAlpha = 1;\n\n    // fps\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(fps + \"fps\", 1, 1);\n    Game.ctx.globalAlpha = 1;\n    if (!this.started && this.levelState !== LevelState.LEVEL_GENERATION) {\n      this.drawStartScreen(delta * 10);\n    }\n\n    MouseCursor.getInstance().draw(delta, this.isMobile);\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawChat = (delta: number) => {\n    const CHAT_X = 5;\n    const CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 38;\n    const CHAT_OPACITY = this.players?.[this.localPlayerID]?.inventory.isOpen\n      ? 0.05\n      : 1;\n    const CHAT_MAX_WIDTH = GameConstants.WIDTH - 5; // Leave some margin\n    const LINE_HEIGHT = Game.letter_height + 1;\n\n    if (this.chatOpen) {\n      Game.ctx.fillStyle = \"black\";\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\n      const cursorX = Game.measureText(\n        this.chatTextBox.text.substring(0, this.chatTextBox.cursor),\n      ).width;\n      Game.ctx.fillRect(CHAT_X + cursorX, CHAT_BOTTOM_Y, 1, Game.letter_height);\n    }\n\n    // Calculate total height needed for all visible messages\n    let totalHeight = 0;\n    const messageHeights: number[] = [];\n\n    for (let i = 0; i < this.chat.length; i++) {\n      const lines = this.chat[i].getWrappedLines(CHAT_MAX_WIDTH);\n      const messageHeight = lines.length * LINE_HEIGHT;\n      messageHeights.push(messageHeight);\n      totalHeight += messageHeight;\n    }\n\n    // Draw messages from bottom to top\n    let currentY = CHAT_BOTTOM_Y;\n    if (this.chatOpen) {\n      currentY -= LINE_HEIGHT; // Account for input line\n    }\n\n    for (let i = this.chat.length - 1; i >= 0; i--) {\n      const message = this.chat[i];\n      const lines = message.getWrappedLines(CHAT_MAX_WIDTH);\n      const messageHeight = messageHeights[i];\n\n      // Calculate opacity based on age\n      const age = Date.now() - message.timestamp;\n      let alpha = 1;\n\n      if (!this.chatOpen) {\n        if (age <= GameConstants.CHAT_APPEAR_TIME) {\n          alpha = GameConstants.ALPHA_ENABLED ? CHAT_OPACITY : 1;\n        } else if (\n          age <=\n          GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME\n        ) {\n          alpha = GameConstants.ALPHA_ENABLED\n            ? CHAT_OPACITY *\n              (1 -\n                (age - GameConstants.CHAT_APPEAR_TIME) /\n                  GameConstants.CHAT_FADE_TIME)\n            : 1;\n        } else {\n          alpha = 0;\n        }\n      }\n\n      if (alpha > 0) {\n        // Set message color\n        Game.ctx.fillStyle = \"white\";\n        //if (message.message[0] === \"/\") {\n        //  Game.ctx.fillStyle = GameConstants.GREEN;\n        //}\n        Game.ctx.globalAlpha = alpha;\n\n        // Draw each line of the message from bottom to top\n        let lineY = currentY;\n        for (let lineIndex = lines.length - 1; lineIndex >= 0; lineIndex--) {\n          Game.fillText(lines[lineIndex], CHAT_X, lineY);\n          lineY -= LINE_HEIGHT;\n        }\n      }\n\n      // Move up by this message's height\n      currentY -= messageHeight;\n    }\n\n    // Reset alpha\n    Game.ctx.globalAlpha = 1;\n  };\n\n  targetCamera = (targetX: number, targetY: number) => {\n    let cameraX = Math.round(\n      (targetX + 0.5) * GameConstants.TILESIZE - 0.5 * GameConstants.WIDTH,\n    );\n    let cameraY = Math.round(\n      (targetY + 0.5) * GameConstants.TILESIZE - 0.5 * GameConstants.HEIGHT,\n    );\n    this.cameraTargetX = cameraX;\n    this.cameraTargetY = cameraY;\n  };\n\n  updateCamera = (delta: number) => {\n    const dx = this.cameraTargetX - this.cameraX;\n    const dy = this.cameraTargetY - this.cameraY;\n\n    let speed = GameConstants.CAMERA_SPEED;\n\n    if (this.justTransitioned) {\n      speed = 1;\n      this.justTransitioned = false;\n    }\n\n    if (this.cameraAnimation.active) {\n      speed = 0.075;\n    }\n\n    if (Math.abs(dx) > 250 || Math.abs(dy) > 250) {\n      speed = 1;\n    }\n\n    if ((Math.abs(dx) > 1 || Math.abs(dy) > 1) && speed !== 1) {\n      this.cameraX += dx * speed * delta;\n      this.cameraY += dy * speed * delta;\n    } else {\n      this.cameraX = this.cameraTargetX;\n      this.cameraY = this.cameraTargetY;\n    }\n    //console.log(\"camera\", this.cameraX, this.cameraY);\n  };\n\n  applyCamera = (delta: number) => {\n    let player = this.players[this.localPlayerID];\n\n    this.targetCamera(player.x - player.drawX, player.y - player.drawY);\n    this.updateCameraAnimation(delta);\n    this.updateCamera(delta);\n\n    const roundedCameraX = Math.round(this.cameraX - this.screenShakeX);\n    const roundedCameraY = Math.round(this.cameraY - this.screenShakeY);\n\n    return {\n      cameraX: roundedCameraX,\n      cameraY: roundedCameraY,\n    };\n  };\n\n  drawScreenShake = (delta: number) => {\n    if (!this.screenShakeActive) {\n      this.resetScreenShake();\n      return;\n    }\n\n    this.shakeAmountX *= 0.8 ** delta;\n    this.shakeAmountY *= 0.8 ** delta;\n    this.screenShakeX = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountX;\n    this.screenShakeY = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountY;\n    this.shakeFrame += 0.15 * delta;\n\n    if (\n      Math.abs(this.shakeAmountX) < 0.5 &&\n      Math.abs(this.shakeAmountY) < 0.5\n    ) {\n      this.resetScreenShake();\n    }\n  };\n\n  private resetScreenShake = () => {\n    this.shakeAmountX = 0;\n    this.shakeAmountY = 0;\n    this.shakeFrame = 0;\n    this.screenShakeX = 0;\n    this.screenShakeY = 0;\n    this.screenShakeActive = false;\n  };\n\n  updateCameraAnimation = (delta: number) => {\n    //console.log(\"updating camera animation\", this.cameraAnimation.active);\n    if (!this.cameraAnimation.active) return;\n    const elapsed = this.cameraAnimation.frame / this.cameraAnimation.duration;\n\n    if (elapsed < 0.6)\n      this.targetCamera(this.cameraAnimation.x, this.cameraAnimation.y);\n    this.cameraAnimation.frame += delta;\n    if (this.cameraAnimation.frame > this.cameraAnimation.duration)\n      this.cameraAnimation.active = false;\n  };\n\n  startCameraAnimation = (x: number, y: number, duration: number) => {\n    //console.log(\"starting camera animation\", x, y, duration);\n    this.cameraAnimation.active = true;\n    this.cameraAnimation.x = x;\n    this.cameraAnimation.y = y;\n    this.cameraAnimation.duration = duration;\n    this.cameraAnimation.frame = 0;\n  };\n\n  drawTextScreen = (text: string, bg: boolean = true) => {\n    if (bg) {\n      Game.ctx.fillStyle = \"rgb(0, 0, 0)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    }\n    const ellipsis = this.animateEllipsis();\n    const dimensions = Game.measureText(text + ellipsis);\n\n    Game.ctx.fillStyle = \"rgb(255, 255, 255)\";\n    Game.fillText(\n      text + ellipsis,\n      GameConstants.WIDTH / 2 - dimensions.width / 2,\n      GameConstants.HEIGHT / 2 - dimensions.height / 2,\n    );\n  };\n\n  animateEllipsis = () => {\n    if (Date.now() - this.ellipsisStartTime > 150) {\n      this.ellipsisStartTime = Date.now();\n      this.ellipsisFrame = (this.ellipsisFrame + 1) % 4;\n    }\n    return \".\".repeat(this.ellipsisFrame);\n  };\n\n  static drawHelper = (\n    set: HTMLImageElement,\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n    entity: boolean = false,\n  ) => {\n    Game.ctx.save(); // Save the current canvas state\n\n    // Snap to nearest shading increment\n    let divisor = entity ? 10 : 1;\n    shadeOpacity =\n      Math.round(\n        shadeOpacity * Math.max(GameConstants.SHADE_LEVELS / divisor, 12),\n      ) / Math.max(GameConstants.SHADE_LEVELS / divisor, 12);\n\n    // Include shadeColor in the cache key\n    let key = getShadeCanvasKey(set, sX, sY, sW, sH, shadeOpacity, shadeColor);\n\n    if (!Game.shade_canvases[key]) {\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\n\n      shCtx.clearRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height,\n      );\n\n      shCtx.globalCompositeOperation = \"source-over\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n      );\n\n      shCtx.globalAlpha = shadeOpacity;\n      shCtx.fillStyle = shadeColor;\n      shCtx.fillRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height,\n      );\n      shCtx.globalAlpha = 1.0;\n\n      shCtx.globalCompositeOperation = \"destination-in\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n      );\n    }\n\n    Game.ctx.drawImage(\n      Game.shade_canvases[key],\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE),\n    );\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  static drawTile = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.tileset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n  };\n\n  static drawObj = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.objset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n      true,\n    );\n  };\n\n  static drawMob = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.mobset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n      true,\n    );\n  };\n\n  static drawItem = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.itemset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n      true,\n    );\n  };\n\n  static drawFX = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.fxset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n      true,\n    );\n  };\n\n  private handleWindowBlur = () => {\n    // Start a timeout when window loses focus\n    this.focusTimeout = window.setTimeout(() => {\n      // Store current state\n      this.wasMuted = Sound.audioMuted;\n      this.wasStarted = this.started;\n\n      // Mute audio and pause game\n      Sound.audioMuted = true;\n      //this.started = false;\n      this.paused = true;\n\n      // Optional: Show a message in chat\n      this.pushMessage(\"Game paused - window inactive\");\n    }, this.FOCUS_TIMEOUT_DURATION);\n  };\n\n  private handleWindowFocus = () => {\n    // Clear the timeout if it exists\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout);\n      this.focusTimeout = null;\n    }\n\n    // If game was paused due to inactivity, restore previous state\n    if (this.paused) {\n      Sound.audioMuted = this.wasMuted;\n      this.started = this.wasStarted;\n      this.paused = false;\n\n      // Optional: Show a message in chat\n      this.pushMessage(\"Game resumed\");\n    }\n  };\n\n  destroy() {\n    window.removeEventListener(\"blur\", this.handleWindowBlur);\n    window.removeEventListener(\"focus\", this.handleWindowFocus);\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout);\n    }\n  }\n}\nexport let game = new Game();\nexport let gs = new GameState();\n","import { Game } from \"../game\";\nimport { Player } from \"../player/player\";\nimport { Input } from \"./input\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\nimport { Spawner } from \"../entity/enemy/spawner\";\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\n\n//enemy typeof to class map\nconst enemyClassMap = {\n  CrabEnemy: CrabEnemy,\n  FrogEnemy: FrogEnemy,\n  ZombieEnemy: ZombieEnemy,\n  SkullEnemy: SkullEnemy,\n  EnergyWizardEnemy: EnergyWizardEnemy,\n  ChargeEnemy: ChargeEnemy,\n  RookEnemy: RookEnemy,\n  BishopEnemy: BishopEnemy,\n  ArmoredzombieEnemy: ArmoredzombieEnemy,\n  BigSkullEnemy: BigSkullEnemy,\n  QueenEnemy: QueenEnemy,\n  KnightEnemy: KnightEnemy,\n  BigKnightEnemy: BigKnightEnemy,\n  FireWizardEnemy: FireWizardEnemy,\n  Spawner: Spawner,\n  OccultistEnemy: OccultistEnemy,\n};\n\ninterface BestiaryEntry {\n  name: string;\n  description: string;\n  tileX: number;\n  tileY: number;\n}\n\nexport class Bestiary {\n  game: Game;\n  player: Player;\n  isOpen: boolean = false;\n  openTime: number = Date.now();\n  entries: Array<BestiaryEntry>;\n  seenEnemies: Set<typeof Enemy>;\n  frame: number = 0;\n  activeEntryIndex: number = 0;\n  // Static variables for logbook button position\n  private buttonY: number;\n  private buttonX: number;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.player = player;\n    this.entries = [];\n    this.activeEntryIndex = 0;\n    this.buttonX = Math.round(\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE,\n    );\n    this.buttonY = Math.round(10);\n    this.seenEnemies = new Set();\n  }\n\n  /**\n   * Opens the logbook window.\n   */\n  open = () => {\n    if (this.seenEnemies.size === 0)\n      this.seenEnemies = this.game.tutorialListener.seenEnemies;\n    this.isOpen = true;\n    this.openTime = Date.now();\n  };\n\n  /**\n   * Closes the logbook window.\n   */\n  close = () => {\n    this.isOpen = false;\n  };\n\n  entryUp = () => {\n    this.activeEntryIndex =\n      (this.activeEntryIndex - 1 + this.entries.length) % this.entries.length;\n  };\n\n  entryDown = () => {\n    this.activeEntryIndex = (this.activeEntryIndex + 1) % this.entries.length;\n  };\n\n  /**\n   * Toggles the logbook window's open state.\n   */\n  toggleOpen = () => {\n    this.isOpen ? this.close() : this.open();\n  };\n\n  /**\n   * Adds a new entry to the logbook.\n   * @param enemy The enemy to add.\n   */\n  addEntry = (enemy: typeof Enemy) => {\n    const enemyClass = enemyClassMap[enemy.name];\n    this.entries.push({\n      name: enemy.name,\n      description: enemyClass.prototype.description,\n      tileX: enemyClass.prototype.tileX,\n      tileY: enemyClass.prototype.tileY,\n    });\n  };\n\n  /**\n   * Draws the logbook interface.\n   * @param delta The time delta since the last frame.\n   */\n  draw = (delta: number) => {\n    if (!this.isOpen) return;\n    Game.ctx.save();\n\n    // Draw semi-transparent background\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    // Define dimensions similar to Inventory\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / 100); // example scaling\n    const b = 2; // border\n    const g = -2; // gap\n    const ob = 1; // outer border\n    const width = 5 * (s + 2 * b + g) - g; // assuming 5 columns\n    const height = 4 * (s + 2 * b + g) - g; // assuming 4 rows\n\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n    const startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\n\n    // Draw main logbook background\n    Game.ctx.fillStyle = \"white\";\n    Game.ctx.fillRect(startX, startY, width + 2 * ob, height + 2 * ob);\n\n    // Draw logbook entries\n    Game.ctx.fillStyle = \"black\";\n    const padding = 10;\n\n    if (this.entries.length === 0) {\n      Game.fillText(\"No enemies seen yet\", startX + padding, startY + padding);\n    } else {\n      this.entries.forEach((entry, index) => {\n        Game.fillText(\n          entry.name,\n          startX + padding,\n          startY + padding + index * 20,\n        );\n      });\n\n      this.drawEnemySprite(\n        this.entries[this.activeEntryIndex].tileX,\n        this.entries[this.activeEntryIndex].tileY,\n        delta,\n      );\n    }\n    // Draw logbook button\n    this.drawLogbookButton(delta);\n    Game.ctx.restore();\n  };\n\n  drawEnemySprite = (tileX: number, tileY: number, delta: number) => {\n    this.frame += Math.round(0.1 * delta * 10) / 10;\n    if (this.frame >= 4) this.frame = 0;\n\n    Game.drawMob(tileX, tileY, 1, 1, 1, 1, 1, 1, \"Black\", 0);\n  };\n\n  /**\n   * Draws the logbook button on the screen.\n   * @param delta The time delta since the last frame.\n   */\n  drawLogbookButton = (delta: number) => {\n    Game.ctx.save();\n    this.buttonX = LevelConstants.SCREEN_W - 2;\n    this.buttonY = LevelConstants.SCREEN_H - 2.25;\n    Game.drawFX(0, 0, 2, 2, this.buttonX, this.buttonY, 2, 2);\n    Game.ctx.restore();\n  };\n\n  /**\n   * Handles mouse down events.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   * @param button The mouse button pressed.\n   */\n  handleMouseDown = (x: number, y: number, button: number) => {\n    if (button !== 0) return; // Only respond to left click\n\n    if (this.isPointInLogbookButton(x, y)) {\n      this.toggleOpen();\n    }\n  };\n\n  /**\n   * Handles mouse up events.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   * @param button The mouse button released.\n   */\n  handleMouseUp = (x: number, y: number, button: number) => {\n    // Implement if needed\n  };\n\n  /**\n   * Handles hold detection.\n   */\n  onHoldDetected = () => {\n    // Implement if needed\n  };\n\n  /**\n   * Checks if a point is within the logbook button bounds.\n   * @param x The x-coordinate to check.\n   * @param y The y-coordinate to check.\n   * @returns True if the point is within the button bounds, else false.\n   */\n  isPointInLogbookButton = (x: number, y: number): boolean => {\n    const tX = x / GameConstants.TILESIZE;\n    const tY = y / GameConstants.TILESIZE;\n    return (\n      tX >= this.buttonX &&\n      tX <= this.buttonX + 2 &&\n      tY >= this.buttonY &&\n      tY <= this.buttonY + 2\n    );\n  };\n\n  /**\n   * Updates the logbook state each game tick.\n   */\n  tick = () => {\n    if (this.isOpen) {\n      // Update logbook-related logic here\n    }\n  };\n}\n","import { Game } from \"../game\";\n\nexport class CameraAnimation {\n  constructor(\n    public x: number,\n    public y: number,\n    public duration: number,\n    public speed: number,\n    public frame: number,\n    public active: boolean,\n  ) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.frame = 0;\n    this.active = false;\n  }\n}\n","import { Armor } from \"../item/armor\";\nimport { Backpack } from \"../item/backpack\";\nimport { Candle } from \"../item/light/candle\";\nimport { Coal } from \"../item/resource/coal\";\nimport { EntitySpawner } from \"../item/entitySpawner\";\nimport { GodStone } from \"../item/godStone\";\nimport { Heart } from \"../item/usable/heart\";\nimport { Key } from \"../item/key\";\nimport { Lantern } from \"../item/light/lantern\";\nimport { Torch } from \"../item/light/torch\";\nimport { WeaponBlood } from \"../item/usable/weaponBlood\";\nimport { WeaponFragments } from \"../item/usable/weaponFragments\";\nimport { WeaponPoison } from \"../item/usable/weaponPoison\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Dagger } from \"../item/weapon/dagger\";\nimport { DualDagger } from \"../item/weapon/dualdagger\";\nimport { Spear } from \"../item/weapon/spear\";\nimport { Spellbook } from \"../item/weapon/spellbook\";\nimport { Warhammer } from \"../item/weapon/warhammer\";\nimport { Hammer } from \"../item/tool/hammer\";\nimport { SpellbookPage } from \"../item/usable/spellbookPage\";\nimport { BombItem } from \"../item/bombItem\";\nimport { BestiaryBook } from \"../item/bestiaryBook\";\nimport { Greataxe } from \"../item/weapon/greataxe\";\nimport { BlueGem } from \"../item/resource/bluegem\";\nimport { RedGem } from \"../item/resource/redgem\";\nimport { GreenGem } from \"../item/resource/greengem\";\nimport { Pickaxe } from \"../item/tool/pickaxe\";\nimport { Geode } from \"../item/resource/geode\";\nimport { GlowBugs } from \"../item/light/glowBugs\";\nimport { Shotgun } from \"../item/weapon/shotgun\";\nimport { Scythe } from \"../item/weapon/scythe\";\nimport { Hourglass } from \"../item/usable/hourglass\";\nimport { Gold } from \"../item/resource/gold\";\nimport { Sword } from \"../item/weapon/sword\";\nimport { Apple } from \"../item/usable/apple\";\nimport { WebGLBlurRenderer } from \"../gui/webglBlurRenderer\";\n\nexport class GameConstants {\n  static readonly VERSION = \"v1.0.9\"; //\"v0.6.3\";\n  static DEVELOPER_MODE = false;\n  static isMobile = false;\n  static isIOS = false;\n  static CAMERA_SPEED = 1; // 1 is instant 0.1 is slow\n\n  static readonly FPS = 120;\n  static readonly ALPHA_ENABLED = true;\n  static SHADE_LEVELS = 50; //25\n  static ENTITY_SHADE_LEVELS = 25; //10\n\n  static readonly TILESIZE = 16;\n  static SCALE = null;\n  static SOFT_SCALE = 6;\n  static readonly MAX_SCALE = 16;\n  static readonly MIN_SCALE = 1;\n  static smoothScaling = false;\n\n  static readonly SWIPE_THRESH = 25 ** 2; // (size of swipe threshold circle)^2\n  static readonly HOLD_THRESH = 250; // milliseconds\n\n  static KEY_REPEAT_TIME = 300; // millseconds\n  static SWIPE_HOLD_REPEAT_TIME = 300;\n  static SWIPE_HOLD_INITIAL_DELAY = 10;\n  static MOVEMENT_COOLDOWN = 200; // milliseconds\n  static MOVEMENT_QUEUE_COOLDOWN = 100; // milliseconds\n  static readonly MOVE_WITH_MOUSE = true;\n\n  static readonly CHAT_APPEAR_TIME = 2500;\n  static readonly CHAT_FADE_TIME = 500;\n  static ANIMATION_SPEED = 1;\n\n  static readonly DEFAULTWIDTH = GameConstants.TILESIZE;\n  static readonly DEFAULTHEIGHT = GameConstants.TILESIZE;\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n\n  static drawOtherRooms = true;\n\n  static readonly SCRIPT_FONT_SIZE = 16;\n  static readonly FONT_SIZE = 7;\n  static readonly BIG_FONT_SIZE = 15;\n\n  static readonly RED = \"#ac3232\";\n  static readonly WARNING_RED = \"#ff0000\";\n  static readonly GREEN = \"#6abe30\";\n  static readonly ARMOR_GREY = \"#9badb7\";\n  static readonly OUTLINE = \"#222034\";\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\n  static readonly MISS_COLOR = \"#639bff\";\n\n  static CUSTOM_SHADER_COLOR_ENABLED = false;\n  static SHADE_ENABLED = true;\n  static COLOR_LAYER_COMPOSITE_OPERATION = \"soft-light\"; //\"soft-light\";\n  static SHADE_LAYER_COMPOSITE_OPERATION = \"source-over\"; //\"soft-light\";\n  static USE_OPTIMIZED_SHADING = false;\n  static SMOOTH_LIGHTING = false;\n  static ctxBlurEnabled = true;\n  static BLUR_ENABLED = true;\n  static USE_WEBGL_BLUR = false;\n  static HIGH_QUALITY_BLUR = false; // true = 49 samples, false = 13 samples for performance\n  static BLUR_DOWNSAMPLE_FACTOR = 8; // Blur at 1/4 size for performance (1 = full size, 4 = quarter size)\n  static ENEMIES_BLOCK_LIGHT = false;\n\n  static readonly SHADE_LAYER_COMPOSITE_OPERATIONS = [\n    \"source-over\",\n    \"screen\",\n    \"multiply\",\n    \"overlay\",\n    \"darken\",\n    \"lighten\",\n  ];\n\n  static readonly COLOR_LAYER_COMPOSITE_OPERATIONS = [\n    \"soft-light\",\n    //\"addition\",\n    //\"darken\",\n    \"overlay\",\n    //\"hue\",\n    //\"source-over\",\n    //\"screen\",\n    \"multiply\",\n    //\"difference\",\n    //\"exclusion\",\n    //\"luminosity\",\n    //\"color-dodge\",\n    //\"color-burn\",\n    //\"hard-light\",\n    //\"soft-light\",\n    //\"lighten\",\n  ];\n\n  static readonly SET_COLOR_LAYER_COMPOSITE_OPERATION = (\n    back: boolean = false,\n  ) => {\n    const currentIndex = GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.indexOf(\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATION,\n    );\n    let nextIndex;\n\n    if (back) {\n      // Decrement the index to move backward in the operations array\n      nextIndex =\n        (currentIndex -\n          1 +\n          GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length) %\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\n    } else {\n      // Increment the index to move forward in the operations array\n      nextIndex =\n        (currentIndex + 1) %\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\n    }\n\n    GameConstants.COLOR_LAYER_COMPOSITE_OPERATION =\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS[nextIndex];\n\n    console.log(\n      `Color layer composite operation set to ${GameConstants.COLOR_LAYER_COMPOSITE_OPERATION}`,\n    );\n  };\n\n  static readonly SET_SHADE_LAYER_COMPOSITE_OPERATION = (\n    back: boolean = false,\n  ) => {\n    const currentIndex = GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.indexOf(\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATION,\n    );\n    let nextIndex;\n\n    if (back) {\n      // Decrement the index to move backward in the operations array\n      nextIndex =\n        (currentIndex -\n          1 +\n          GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length) %\n        GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length;\n    } else {\n      // Increment the index to move forward in the operations array\n      nextIndex =\n        (currentIndex + 1) %\n        GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length;\n    }\n\n    GameConstants.SHADE_LAYER_COMPOSITE_OPERATION =\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS[nextIndex];\n\n    console.log(\n      `Shade layer composite operation set to ${GameConstants.SHADE_LAYER_COMPOSITE_OPERATION}`,\n    );\n  };\n\n  static readonly TOGGLE_USE_OPTIMIZED_SHADING = () => {\n    GameConstants.USE_OPTIMIZED_SHADING = !GameConstants.USE_OPTIMIZED_SHADING;\n  };\n\n  static readonly TOGGLE_ENEMIES_BLOCK_LIGHT = () => {\n    GameConstants.ENEMIES_BLOCK_LIGHT = !GameConstants.ENEMIES_BLOCK_LIGHT;\n  };\n\n  static readonly TOGGLE_USE_WEBGL_BLUR = () => {\n    GameConstants.USE_WEBGL_BLUR = !GameConstants.USE_WEBGL_BLUR;\n    console.log(\n      `WebGL blur is now ${GameConstants.USE_WEBGL_BLUR ? \"enabled\" : \"disabled\"}`,\n    );\n  };\n\n  static readonly TOGGLE_HIGH_QUALITY_BLUR = () => {\n    GameConstants.HIGH_QUALITY_BLUR = !GameConstants.HIGH_QUALITY_BLUR;\n    console.log(\n      `High quality blur: ${GameConstants.HIGH_QUALITY_BLUR ? \"ON (49 samples)\" : \"OFF (13 samples)\"}`,\n    );\n  };\n\n  static readonly SET_SCALE = () => {\n    GameConstants.SCALE++;\n    if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\n      GameConstants.SCALE = GameConstants.MAX_SCALE;\n    }\n  };\n\n  static readonly INCREASE_SCALE = () => {\n    if (GameConstants.SCALE < GameConstants.MAX_SCALE) {\n      GameConstants.SCALE++;\n      if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\n        GameConstants.SCALE = GameConstants.MAX_SCALE;\n      }\n    }\n  };\n\n  static readonly DECREASE_SCALE = () => {\n    if (GameConstants.SCALE > GameConstants.MIN_SCALE) {\n      GameConstants.SCALE--;\n      if (GameConstants.SCALE < GameConstants.MIN_SCALE) {\n        GameConstants.SCALE = GameConstants.MIN_SCALE;\n      }\n    }\n  };\n\n  static readonly FIND_SCALE = (isMobile: boolean) => {\n    let bestScale = GameConstants.MIN_SCALE;\n    let bestDifference = Infinity;\n    const measure =\n      !isMobile || screen.orientation.type === \"landscape-primary\"\n        ? window.innerHeight\n        : window.innerWidth;\n    const dimension = measure * window.devicePixelRatio;\n    const tileMeasure = isMobile ? 8 : 12;\n\n    for (let i = GameConstants.MIN_SCALE; i <= GameConstants.MAX_SCALE; i++) {\n      const tiles = dimension / (i * GameConstants.TILESIZE);\n      const difference = Math.abs(tiles - tileMeasure);\n\n      if (difference < bestDifference) {\n        bestDifference = difference;\n        bestScale = i;\n      }\n    }\n\n    return bestScale;\n  };\n\n  static readonly STARTING_INVENTORY = [Dagger, Candle];\n  static readonly STARTING_DEV_INVENTORY = [\n    Dagger,\n    Warhammer,\n    DualDagger,\n    Scythe,\n    GodStone,\n    Spear,\n    Greataxe,\n    Spellbook,\n    Lantern,\n    Armor,\n    Backpack,\n    Hammer,\n    Pickaxe,\n    Coal,\n    Apple,\n\n    SpellbookPage,\n    SpellbookPage,\n    SpellbookPage,\n    SpellbookPage,\n\n    WeaponFragments,\n    WeaponFragments,\n    WeaponFragments,\n  ];\n}\n","import { Barrel } from \"../entity/object/barrel\";\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\nimport { ChargeEnemy, ChargeEnemyState } from \"../entity/enemy/chargeEnemy\";\nimport { Chest } from \"../entity/object/chest\";\nimport { CoalResource } from \"../entity/resource/coalResource\";\nimport { Crate } from \"../entity/object/crate\";\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\nimport { Entity, EntityDirection } from \"../entity/entity\";\nimport { GoldResource } from \"../entity/resource/goldResource\";\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\nimport { Pot } from \"../entity/object/pot\";\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\nimport { Spawner } from \"../entity/enemy/spawner\";\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\nimport { WizardEnemy, WizardState } from \"../entity/enemy/wizardEnemy\";\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\nimport { Direction, Game } from \"../game\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Inventory } from \"../inventory/inventory\";\nimport { Armor } from \"../item/armor\";\nimport { BlueGem } from \"../item/resource/bluegem\";\nimport { Candle } from \"../item/light/candle\";\nimport { Coal } from \"../item/resource/coal\";\nimport { Coin } from \"../item/coin\";\nimport { Equippable } from \"../item/equippable\";\nimport { Gold } from \"../item/resource/gold\";\nimport { GoldenKey } from \"../item/goldenKey\";\nimport { GreenGem } from \"../item/resource/greengem\";\nimport { Heart } from \"../item/usable/heart\";\nimport { Item } from \"../item/item\";\nimport { Key } from \"../item/key\";\nimport { Lantern } from \"../item/light/lantern\";\nimport { RedGem } from \"../item/resource/redgem\";\nimport { Torch } from \"../item/light/torch\";\nimport { Room } from \"../room/room\";\nimport { LevelGenerator } from \"../level/levelGenerator\";\nimport { Player, PlayerDirection } from \"../player/player\";\nimport { EnemySpawnAnimation } from \"../projectile/enemySpawnAnimation\";\nimport { Projectile } from \"../projectile/projectile\";\nimport { WizardFireball } from \"../projectile/wizardFireball\";\nimport { Random } from \"../utility/random\";\nimport { Dagger } from \"../item/weapon/dagger\";\nimport { DualDagger } from \"../item/weapon/dualdagger\";\nimport { Shotgun } from \"../item/weapon/shotgun\";\nimport { Spear } from \"../item/weapon/spear\";\nimport { Weapon } from \"../item/weapon/weapon\";\nimport { Pickaxe } from \"../item/tool/pickaxe\";\nimport { Backpack } from \"../item/backpack\";\nimport { TutorialListener } from \"./tutorialListener\";\nimport { DoorType } from \"../tile/door\";\nimport { Mushrooms } from \"../entity/object/mushrooms\";\nimport { Pumpkin } from \"../entity/object/pumpkin\";\nimport { Block } from \"../entity/object/block\";\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\nimport { Level } from \"../level/level\";\nimport { globalEventBus } from \"../event/eventBus\";\nimport { EVENTS } from \"../event/events\";\n\nexport class HitWarningState {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(hw: HitWarning) {\n    this.x = hw.x;\n    this.y = hw.y;\n    this.dead = hw.dead;\n  }\n}\n\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\n  let hw = new HitWarning(game, hws.x, hws.y, hws.x, hws.y);\n  hw.dead = hws.dead;\n  return hw;\n};\n\nexport enum ProjectileType {\n  SPAWN,\n  WIZARD,\n}\n\nexport class ProjectileState {\n  type: ProjectileType;\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  enemySpawn: EnemyState;\n  wizardState: number;\n  wizardParentID: number;\n\n  constructor(projectile: Projectile, game: Game) {\n    this.x = projectile.x;\n    this.y = projectile.y;\n    this.dead = projectile.dead;\n    if (projectile instanceof EnemySpawnAnimation) {\n      this.type = ProjectileType.SPAWN;\n      this.levelID = game.rooms.indexOf(projectile.room);\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\n    }\n    if (projectile instanceof WizardFireball) {\n      this.type = ProjectileType.WIZARD;\n      this.wizardState = projectile.state;\n      this.levelID = game.rooms.indexOf(projectile.parent.room);\n      this.wizardParentID = projectile.parent.room.entities.indexOf(\n        projectile.parent,\n      );\n    }\n  }\n}\n\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\n  if (ps.type === ProjectileType.SPAWN) {\n    let level = game.rooms[ps.levelID];\n    let enemy = loadEnemy(ps.enemySpawn, game);\n    let p = new EnemySpawnAnimation(level, enemy, ps.x, ps.y);\n    p.dead = ps.dead;\n    return p;\n  }\n  if (ps.type === ProjectileType.WIZARD) {\n    let wizard = game.rooms[ps.levelID].entities[\n      ps.wizardParentID\n    ] as EnergyWizardEnemy;\n    let p = new WizardFireball(wizard, ps.x, ps.y);\n    p.state = ps.wizardState;\n    return p;\n  }\n};\n\nexport enum EnemyType {\n  BARREL,\n  BIGSKULL,\n  CHARGE,\n  CHEST,\n  COAL,\n  CRATE,\n  EMERALD,\n  GOLD,\n  KNIGHT,\n  PLANT,\n  SKULL,\n  CRAB,\n  SPAWNER,\n  VENDINGMACHINE,\n  WIZARD,\n  ZOMBIE,\n}\n\nexport class EnemyState {\n  type: EnemyType;\n  levelID: number;\n  x: number;\n  y: number;\n  health: number;\n  direction: Direction;\n  dead: boolean;\n  skipNextTurns: number;\n  hasDrop: boolean;\n  drop: ItemState;\n  alertTicks: number;\n  ticks: number;\n  seenPlayer: boolean;\n  targetPlayerID: string;\n  // skeleton\n  ticksSinceFirstHit: number;\n  // big skeleton\n  drops: Array<ItemState>;\n  // charge enemy\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  chargeEnemyState: ChargeEnemyState;\n  // spawner\n  enemySpawnType: number;\n  // vending machine\n  isPlayerOpened: boolean;\n  playerOpenedID: string;\n  open: boolean;\n  costItems: Array<ItemState>;\n  item: ItemState;\n  isInf: boolean;\n  quantity: number;\n  // wizard\n  wizardState: WizardState;\n\n  constructor(enemy: Entity, game: Game) {\n    this.levelID = game.rooms.indexOf(enemy.room);\n    this.x = enemy.x;\n    this.y = enemy.y;\n    this.health = enemy.health;\n    this.direction = enemy.direction;\n    this.dead = enemy.dead;\n    this.skipNextTurns = enemy.skipNextTurns;\n    this.hasDrop = false;\n    if (enemy.drop) {\n      this.hasDrop = true;\n      this.drop = new ItemState(enemy.drop, game);\n    }\n    this.alertTicks = enemy.alertTicks;\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\n    if (enemy instanceof BigSkullEnemy) {\n      this.type = EnemyType.BIGSKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n      this.drops = [];\n      for (const d of enemy.drops) this.drops.push(new ItemState(d, game));\n    }\n    if (enemy instanceof ChargeEnemy) {\n      this.type = EnemyType.CHARGE;\n      this.ticks = enemy.ticks;\n      this.chargeEnemyState = enemy.state;\n      this.startX = enemy.startX;\n      this.startY = enemy.startY;\n      this.targetX = enemy.targetX;\n      this.targetY = enemy.targetY;\n      this.visualTargetX = enemy.visualTargetX;\n      this.visualTargetY = enemy.visualTargetY;\n    }\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\n    if (enemy instanceof KnightEnemy) {\n      this.type = EnemyType.KNIGHT;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\n    if (enemy instanceof Pot) this.type = EnemyType.PLANT;\n    if (enemy instanceof SkullEnemy) {\n      this.type = EnemyType.SKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof CrabEnemy) {\n      this.type = EnemyType.CRAB;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof Spawner) {\n      this.type = EnemyType.SPAWNER;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      this.enemySpawnType = enemy.enemySpawnType;\n    }\n    if (enemy instanceof VendingMachine) {\n      this.type = EnemyType.VENDINGMACHINE;\n      this.isPlayerOpened = false;\n      if (enemy.playerOpened) {\n        this.isPlayerOpened = true;\n        this.playerOpenedID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.playerOpened,\n        );\n        if (!this.playerOpenedID)\n          this.playerOpenedID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.playerOpened,\n          );\n      }\n      this.open = enemy.open;\n      this.costItems = [];\n      for (const item of enemy.costItems)\n        this.costItems.push(new ItemState(item, game));\n      this.item = new ItemState(enemy.item, game);\n      this.isInf = enemy.isInf;\n      this.quantity = enemy.quantity;\n    }\n    if (enemy instanceof WizardEnemy) {\n      this.type = EnemyType.WIZARD;\n      this.ticks = enemy.ticks;\n      this.wizardState = enemy.state;\n      this.seenPlayer = enemy.seenPlayer;\n    }\n    if (enemy instanceof ZombieEnemy) {\n      this.type = EnemyType.ZOMBIE;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n  }\n}\n\nlet loadEnemy = (es: EnemyState, game: Game): Entity => {\n  let enemy;\n  let level = game.rooms[es.levelID];\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(level, game, es.x, es.y);\n  if (es.type === EnemyType.BIGSKULL) {\n    enemy = new BigSkullEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n    enemy.drops = [];\n    for (const d of es.drops) enemy.drops.push(loadItem(d, game));\n  }\n  if (es.type === EnemyType.CHARGE) {\n    enemy = new ChargeEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.chargeEnemyState;\n    enemy.startX = es.startX;\n    enemy.startY = es.startY;\n    enemy.targetX = es.targetX;\n    enemy.targetY = es.targetY;\n    enemy.visualTargetX = es.visualTargetX;\n    enemy.visualTargetY = es.visualTargetY;\n  }\n  if (es.type === EnemyType.CHEST) enemy = new Chest(level, game, es.x, es.y);\n  if (es.type === EnemyType.COAL)\n    enemy = new CoalResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.CRATE) enemy = new Crate(level, game, es.x, es.y);\n  if (es.type === EnemyType.EMERALD)\n    enemy = new EmeraldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.GOLD)\n    enemy = new GoldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.KNIGHT) {\n    enemy = new KnightEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.PLANT)\n    enemy = new PottedPlant(level, game, es.x, es.y);\n  if (es.type === EnemyType.PLANT) enemy = new Pot(level, game, es.x, es.y);\n  if (es.type === EnemyType.SKULL) {\n    enemy = new SkullEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.CRAB) {\n    enemy = new CrabEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SPAWNER) {\n    enemy = new Spawner(level, game, es.x, es.y, [es.enemySpawnType]);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    enemy.enemySpawnType = es.enemySpawnType;\n  }\n  if (es.type === EnemyType.VENDINGMACHINE) {\n    let item = loadItem(es.item, game);\n    enemy = new VendingMachine(level, game, es.x, es.y, item);\n    if (es.isPlayerOpened) {\n      enemy.playerOpened = game.players[es.playerOpenedID];\n      if (!enemy.playerOpened)\n        enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\n    }\n    enemy.open = es.open;\n    enemy.costItems = [];\n    for (const item of es.costItems) enemy.costItems.push(loadItem(item, game));\n    enemy.isInf = es.isInf;\n    enemy.quantity = es.quantity;\n  }\n  if (es.type === EnemyType.WIZARD) {\n    enemy = new EnergyWizardEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.wizardState;\n    enemy.seenPlayer = es.seenPlayer;\n  }\n  if (es.type === EnemyType.ZOMBIE) {\n    enemy = new ZombieEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n\n  enemy.x = es.x;\n  enemy.y = es.y;\n  enemy.health = es.health;\n  enemy.direction = es.direction;\n  enemy.dead = es.dead;\n  enemy.skipNextTurns = es.skipNextTurns;\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\n  enemy.alertTicks = es.alertTicks;\n\n  return enemy;\n};\n\nexport class LevelState {\n  levelID: number;\n  entered: boolean;\n  enemies: Array<EnemyState>;\n  items: Array<ItemState>;\n  projectiles: Array<ProjectileState>;\n  hitwarnings: Array<HitWarningState>;\n\n  constructor(level: Room, game: Game) {\n    this.levelID = game.rooms.indexOf(level);\n    this.entered = level.entered;\n    this.enemies = [];\n    this.items = [];\n    this.projectiles = [];\n    this.hitwarnings = [];\n    for (const enemy of level.entities)\n      this.enemies.push(new EnemyState(enemy, game));\n    for (const item of level.items) this.items.push(new ItemState(item, game));\n    for (const projectile of level.projectiles)\n      this.projectiles.push(new ProjectileState(projectile, game));\n    for (const hw of level.hitwarnings)\n      this.hitwarnings.push(new HitWarningState(hw));\n  }\n}\n\nlet loadLevel = (level: Room, levelState: LevelState, game: Game) => {\n  level.entered = levelState.entered;\n  level.entities = [];\n  level.items = [];\n  level.projectiles = [];\n  level.hitwarnings = [];\n  for (const enemy of levelState.enemies)\n    level.entities.push(loadEnemy(enemy, game));\n  for (const item of levelState.items) level.items.push(loadItem(item, game));\n  for (const projectile of levelState.projectiles)\n    level.projectiles.push(loadProjectile(projectile, game));\n  for (const hw of levelState.hitwarnings)\n    level.hitwarnings.push(loadHitWarning(hw, game));\n};\n//use the other one\nexport enum ItemType {\n  ARMOR,\n  BLUEGEM,\n  CANDLE,\n  COAL,\n  COIN,\n  GOLD,\n  GOLDENKEY,\n  GREENGEM,\n  KEY,\n  LANTERN,\n  REDGEM,\n  TORCH,\n  DAGGER,\n  DUALDAGGER,\n  SHOTGUN,\n  SPEAR,\n  PICKAXE,\n  BACKPACK,\n  SPELLBOOK,\n  WEAPON_FRAGMENTS,\n  WARHAMMER,\n  HAMMER,\n  WEAPON_POISON,\n  WEAPON_BLOOD,\n  HEART,\n  MUSHROOMS,\n  STONE,\n  BLUE_POTION,\n}\n\nexport class ItemState {\n  type: ItemType;\n  x: number;\n  y: number;\n  levelID: number;\n  stackCount: number;\n  pickedUp: boolean;\n  equipped: boolean;\n\n  constructor(item: Item, game: Game) {\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\n    if (item instanceof Coal) this.type = ItemType.COAL;\n    if (item instanceof Coin) this.type = ItemType.COIN;\n    if (item instanceof Gold) this.type = ItemType.GOLD;\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\n    if (item instanceof Heart) this.type = ItemType.HEART;\n    if (item instanceof Key) this.type = ItemType.KEY;\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\n    if (item instanceof Torch) this.type = ItemType.TORCH;\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\n\n    this.equipped = item instanceof Equippable && item.equipped;\n    this.x = item.x;\n    this.y = item.y;\n    this.levelID = game.rooms.indexOf(item.level);\n    if (this.levelID === -1) this.levelID = 0;\n    this.stackCount = item.stackCount;\n    this.pickedUp = item.pickedUp;\n  }\n}\n\nlet loadItem = (i: ItemState, game: Game, player?: Player): Item => {\n  let level = game.rooms[i.levelID];\n  let item;\n  if (i.type === ItemType.ARMOR) item = new Armor(level, i.x, i.y);\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(level, i.x, i.y);\n  if (i.type === ItemType.CANDLE) item = new Candle(level, i.x, i.y);\n  if (i.type === ItemType.COAL) item = new Coal(level, i.x, i.y);\n  if (i.type === ItemType.COIN) item = new Coin(level, i.x, i.y);\n  if (i.type === ItemType.GOLD) item = new Gold(level, i.x, i.y);\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(level, i.x, i.y);\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(level, i.x, i.y);\n  if (i.type === ItemType.HEART) item = new Heart(level, i.x, i.y);\n  if (i.type === ItemType.KEY) item = new Key(level, i.x, i.y);\n  if (i.type === ItemType.LANTERN) item = new Lantern(level, i.x, i.y);\n  if (i.type === ItemType.REDGEM) item = new RedGem(level, i.x, i.y);\n  if (i.type === ItemType.TORCH) item = new Torch(level, i.x, i.y);\n  if (i.type === ItemType.DAGGER) {\n    item = new Dagger(level, i.x, i.y);\n  }\n  if (i.type === ItemType.DUALDAGGER) {\n    item = new DualDagger(level, i.x, i.y);\n  }\n  if (i.type === ItemType.SHOTGUN) {\n    item = new Shotgun(level, i.x, i.y);\n  }\n  if (i.type === ItemType.SPEAR) {\n    item = new Spear(level, i.x, i.y);\n  }\n  if (i.type === ItemType.PICKAXE) {\n    item = new Pickaxe(level, i.x, i.y);\n  }\n  if (i.type === ItemType.BACKPACK) {\n    item = new Backpack(level, i.x, i.y);\n  }\n  if (i.equipped) item.equipped = true;\n  if (item instanceof Equippable) item.setWielder(player);\n  item.stackCount = i.stackCount;\n  item.pickedUp = i.pickedUp;\n  return item;\n};\n\nexport class InventoryState {\n  isOpen: boolean;\n  cols: number;\n  rows: number;\n  selX: number;\n  selY: number;\n  equipAnimAmount: Array<number>;\n  isWeaponEquipped: boolean;\n  weaponI: number;\n  coins: number;\n  items: Array<ItemState>;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.isOpen = inventory.isOpen;\n    this.cols = inventory.cols;\n    this.rows = inventory.rows;\n    this.equipAnimAmount = inventory.equipAnimAmount.map((x) => x);\n    this.isWeaponEquipped = false;\n    if (inventory.weapon) {\n      this.isWeaponEquipped = true;\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\n    }\n    this.coins = inventory.coins;\n    this.selX = inventory.selX;\n    this.selY = inventory.selY;\n    this.items = Array<ItemState>();\n    for (const item of inventory.items) {\n      this.items.push(new ItemState(item, game));\n    }\n  }\n}\n\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\n  inventory.clear();\n  inventory.isOpen = i.isOpen;\n  inventory.cols = i.cols;\n  inventory.rows = i.rows;\n  inventory.selX = i.selX;\n  inventory.selY = i.selY;\n  inventory.equipAnimAmount = i.equipAnimAmount.map((x) => x);\n  inventory.coins = i.coins;\n  for (const item of i.items)\n    inventory.items.push(loadItem(item, game, inventory.player));\n\n  if (i.isWeaponEquipped)\n    inventory.weapon = inventory.items[i.weaponI] as Weapon;\n};\n\nexport class PlayerState {\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  direction: Direction;\n  health: number;\n  maxHealth: number;\n  lastTickHealth: number;\n  inventory: InventoryState;\n  hasOpenVendingMachine: boolean;\n  openVendingMachineLevelID: number;\n  openVendingMachineID: number;\n  sightRadius: number;\n\n  constructor(player: Player, game: Game) {\n    this.x = player.x;\n    this.y = player.y;\n    this.dead = player.dead;\n    this.levelID = player.levelID;\n    this.direction = player.direction;\n    this.health = player.health;\n    this.maxHealth = player.maxHealth;\n    this.lastTickHealth = player.lastTickHealth;\n    this.inventory = new InventoryState(player.inventory, game);\n    this.hasOpenVendingMachine = false;\n    if (player.openVendingMachine) {\n      this.hasOpenVendingMachine = true;\n      this.openVendingMachineLevelID = game.rooms.indexOf(\n        player.openVendingMachine.room,\n      );\n      this.openVendingMachineID =\n        player.openVendingMachine.room.entities.indexOf(\n          player.openVendingMachine,\n        );\n    }\n    this.sightRadius = player.sightRadius;\n  }\n}\n\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\n  player.dead = p.dead;\n\n  player.levelID = p.levelID;\n  if (player.levelID < game.levelgen.currentFloorFirstLevelID) {\n    // catch up to the current level\n    player.levelID = game.levelgen.currentFloorFirstLevelID;\n    player.x =\n      game.rooms[player.levelID].roomX +\n      Math.floor(game.rooms[player.levelID].width / 2);\n    player.y =\n      game.rooms[player.levelID].roomY +\n      Math.floor(game.rooms[player.levelID].height / 2);\n  }\n  player.direction = p.direction;\n  player.health = p.health;\n  player.maxHealth = p.maxHealth;\n  player.lastTickHealth = p.lastTickHealth;\n  loadInventory(player.inventory, p.inventory, game);\n  if (p.hasOpenVendingMachine) {\n    player.openVendingMachine = game.rooms[p.openVendingMachineLevelID]\n      .entities[p.openVendingMachineID] as VendingMachine;\n  }\n  player.sightRadius = p.sightRadius;\n\n  return player;\n};\n\nexport class GameState {\n  seed: number;\n  randomState: number;\n  depth: number;\n  players: Record<string, PlayerState>;\n  offlinePlayers: Record<string, PlayerState>;\n  levels: Array<LevelState>;\n\n  constructor() {\n    this.seed = 0;\n    this.randomState = 0;\n    this.depth = 0;\n    this.players = {};\n    this.offlinePlayers = {};\n    this.levels = [];\n  }\n}\n\nexport const createGameState = (game: Game): GameState => {\n  let gs = new GameState();\n  gs.seed = game.levelgen.seed; // random state for generating levels\n  gs.randomState = Random.state; // current random state\n  gs.depth = game.level.depth;\n  for (const i in game.players)\n    gs.players[i] = new PlayerState(game.players[i], game);\n  for (const i in game.offlinePlayers) {\n    gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\n  }\n  for (let level of game.rooms) {\n    level.catchUp();\n    gs.levels.push(new LevelState(level, game));\n  }\n  return gs;\n};\n\nexport const loadGameState = (\n  game: Game,\n  activeUsernames: Array<string>,\n  gameState: GameState,\n  newWorld: boolean,\n) => {\n  game.rooms = Array<Room>();\n\n  game.levelgen = new LevelGenerator();\n  game.levelgen.setSeed(gameState.seed);\n  if (newWorld) gameState.depth = 0;\n  globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\n  game.levelgen.generateFirstNFloors(game, gameState.depth).then(() => {\n    globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\n    if (!newWorld) {\n      if (gameState.players) {\n        for (const i in gameState.players) {\n          if (activeUsernames.includes(i))\n            game.players[i] = loadPlayer(i, gameState.players[i], game);\n          else\n            game.offlinePlayers[i] = loadPlayer(i, gameState.players[i], game);\n        }\n      }\n      if (gameState.offlinePlayers) {\n        for (const i in gameState.offlinePlayers) {\n          if (i === game.localPlayerID)\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n          else if (activeUsernames.includes(i))\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n          else\n            game.offlinePlayers[i] = loadPlayer(\n              i,\n              gameState.offlinePlayers[i],\n              game,\n            );\n        }\n      }\n      for (let levelState of gameState.levels) {\n        for (let i = 0; i < game.rooms.length; i++) {\n          if (i === levelState.levelID) {\n            loadLevel(game.rooms[i], levelState, game);\n          }\n        }\n      }\n      if (\n        !(game.localPlayerID in gameState.players) &&\n        !(game.localPlayerID in gameState.offlinePlayers)\n      ) {\n        // we're not in the gamestate, create a new player\n        game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n        game.players[game.localPlayerID].levelID =\n          game.levelgen.currentFloorFirstLevelID;\n        game.players[game.localPlayerID].x =\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomX +\n          Math.floor(\n            game.rooms[game.levelgen.currentFloorFirstLevelID].width / 2,\n          );\n        game.players[game.localPlayerID].y =\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomY +\n          Math.floor(\n            game.rooms[game.levelgen.currentFloorFirstLevelID].height / 2,\n          );\n        game.room = game.rooms[game.levelgen.currentFloorFirstLevelID];\n\n        game.room.enterLevel(game.players[game.localPlayerID]);\n      } else {\n        game.room = game.rooms[game.players[game.localPlayerID].levelID];\n      }\n    } else {\n      // stub game state, start a new world\n      game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n      game.room = game.rooms[game.players[game.localPlayerID].levelID];\n      game.room.enterLevel(game.players[game.localPlayerID]);\n    }\n    Random.setState(gameState.randomState);\n    game.room.updateLighting();\n    let p = game.players[game.localPlayerID];\n    game.room.items.push(new Key(game.room, p.x - 1, p.y + 1));\n\n    //choose one door to lock\n    let locked = false;\n    game.room.doors.forEach((door) => {\n      if (!locked) {\n        door.lock();\n        locked = true;\n      }\n    });\n\n    game.chat = [];\n  });\n};\n","export class GameplaySettings {\n  static readonly LIMIT_ENEMY_TYPES = true;\n  static readonly MEDIAN_ROOM_DENSITY = 0.25;\n  static readonly UNLIMITED_SPAWNERS = true;\n  static NO_ENEMIES = false;\n  static EQUIP_USES_TURN = false;\n  static UNBREAKABLE_ITEMGROUP_LOOT = false;\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Game } from \"../game\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { Direction } from \"../game\";\n\nexport enum InputEnum {\n  I,\n  M,\n  M_UP,\n  Q,\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SPACE,\n  COMMA,\n  PERIOD,\n  LEFT_CLICK,\n  RIGHT_CLICK,\n  MOUSE_MOVE,\n  NUMBER_1,\n  NUMBER_2,\n  NUMBER_3,\n  NUMBER_4,\n  NUMBER_5,\n  NUMBER_6,\n  NUMBER_7,\n  NUMBER_8,\n  NUMBER_9,\n  MINUS,\n  EQUALS,\n  ESCAPE,\n  F,\n}\n\nexport const Input = {\n  _pressed: {},\n\n  isTapHold: false,\n  tapStartTime: null,\n  IS_TAP_HOLD_THRESH: 300,\n  keyDownListener: function (key: string) {},\n  iListener: function () {},\n  mListener: function () {},\n  mUpListener: function () {},\n  qListener: function () {},\n  leftListener: function () {},\n  rightListener: function () {},\n  upListener: function () {},\n  downListener: function () {},\n  aListener: function () {\n    Input.leftListener();\n  },\n  dListener: function () {\n    Input.rightListener();\n  },\n  wListener: function () {\n    Input.upListener();\n  },\n  sListener: function () {\n    Input.downListener();\n  },\n  spaceListener: function () {},\n  leftSwipeListener: function () {},\n  rightSwipeListener: function () {},\n  upSwipeListener: function () {},\n  downSwipeListener: function () {},\n  tapListener: function () {},\n  commaListener: function () {},\n  periodListener: function () {},\n  numKeyListener: function (num: number) {},\n  equalsListener: function () {},\n  minusListener: function () {},\n  escapeListener: function () {},\n  fListener: function () {},\n  mouseLeftClickListeners: [],\n  mouseRightClickListeners: [],\n  mouseMoveListeners: [],\n  mouseDownListeners: [],\n  mouseUpListeners: [],\n\n  touchStartListeners: [],\n  touchEndListeners: [],\n\n  mouseX: 0,\n  mouseY: 0,\n  mouseDown: false,\n\n  lastPressTime: 0,\n  lastPressKey: \"\",\n\n  // Add mouse repeat tracking\n  lastMouseDownTime: 0,\n  lastMouseDownX: 0,\n  lastMouseDownY: 0,\n  mouseDownHandled: false,\n\n  SPACE: \"Space\",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  W: \"KeyW\",\n  A: \"KeyA\",\n  S: \"KeyS\",\n  D: \"KeyD\",\n  M: \"KeyM\",\n  N: \"KeyN\",\n  I: \"KeyI\",\n  Q: \"KeyQ\",\n  NUMBER_1: \"Digit1\",\n  NUMBER_2: \"Digit2\",\n  NUMBER_3: \"Digit3\",\n  NUMBER_4: \"Digit4\",\n  NUMBER_5: \"Digit5\",\n  NUMBER_6: \"Digit6\",\n  NUMBER_7: \"Digit7\",\n  NUMBER_8: \"Digit8\",\n  NUMBER_9: \"Digit9\",\n  COMMA: \"Comma\",\n  PERIOD: \"Period\",\n  MINUS: \"Minus\",\n  EQUALS: \"Equal\",\n  ESCAPE: \"Escape\",\n  F: \"KeyF\",\n\n  rawMouseX: 0,\n  rawMouseY: 0,\n\n  isDown: function (keyCode: string) {\n    return this._pressed[keyCode];\n  },\n\n  onKeydown: (event: KeyboardEvent) => {\n    if (event.repeat) return; // ignore repeat keypresses\n    if (event.key) Input.keyDownListener(event.key);\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\")\n      event.preventDefault();\n    Input.lastPressTime = Date.now();\n    Input.lastPressKey = event.key;\n    Input._pressed[event.code] = true;\n    switch (event.code) {\n      case Input.LEFT:\n        Input.leftListener();\n        break;\n      case Input.A:\n        Input.aListener();\n        break;\n      case Input.RIGHT:\n        Input.rightListener();\n        break;\n      case Input.D:\n        Input.dListener();\n        break;\n      case Input.UP:\n        Input.upListener();\n        break;\n      case Input.W:\n        Input.wListener();\n        break;\n      case Input.DOWN:\n        Input.downListener();\n        break;\n      case Input.S:\n        Input.sListener();\n        break;\n      case Input.SPACE:\n        Input.spaceListener();\n        break;\n      case Input.M:\n        Input.mListener();\n        break;\n      case Input.I:\n        Input.iListener();\n        break;\n      case Input.Q:\n        Input.qListener();\n        break;\n      case Input.COMMA:\n        Input.commaListener();\n        break;\n      case Input.PERIOD:\n        Input.periodListener();\n        break;\n      case Input.NUMBER_1:\n      case Input.NUMBER_2:\n      case Input.NUMBER_3:\n      case Input.NUMBER_4:\n      case Input.NUMBER_5:\n      case Input.NUMBER_6:\n      case Input.NUMBER_7:\n      case Input.NUMBER_8:\n      case Input.NUMBER_9:\n        Input.numKeyListener(parseInt(event.code.slice(-1)));\n        break;\n      case Input.EQUALS:\n        Input.equalsListener();\n        break;\n      case Input.MINUS:\n        Input.minusListener();\n        break;\n      case Input.ESCAPE:\n        Input.escapeListener();\n        break;\n      case Input.F:\n        Input.fListener();\n        break;\n    }\n  },\n\n  onKeyup: function (event: KeyboardEvent) {\n    delete this._pressed[event.code];\n    if (event.key === this.lastPressKey) {\n      this.lastPressTime = 0;\n      this.lastPressKey = 0;\n    }\n    if (event.code === Input.M) Input.mUpListener();\n  },\n\n  mouseLeftClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\n      Input.mouseLeftClickListeners[i](x, y);\n  },\n\n  mouseRightClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseRightClickListeners.length; i++)\n      Input.mouseRightClickListeners[i](x, y);\n  },\n\n  mouseMoveListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseMoveListeners.length; i++)\n      Input.mouseMoveListeners[i](x, y);\n  },\n\n  mouseDownListener: function (x: number, y: number, button: number) {\n    for (let i = 0; i < Input.mouseDownListeners.length; i++)\n      Input.mouseDownListeners[i](x, y, button);\n  },\n\n  mouseUpListener: function (x: number, y: number, button: number) {\n    for (let i = 0; i < Input.mouseUpListeners.length; i++)\n      Input.mouseUpListeners[i](x, y, button);\n  },\n\n  mouseClickListener: function (event: MouseEvent) {\n    if (event.button === 0 || event.button === 2) {\n      let rect = window.document\n        .getElementById(\"gameCanvas\")\n        .getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      let scaledX = Math.floor(x / Game.scale);\n      let scaledY = Math.floor(y / Game.scale);\n\n      console.log(\n        `Input.mouseClickListener: raw x: ${x}, y: ${y}, scale: ${Game.scale}, scaledX: ${scaledX}, scaledY: ${scaledY}`,\n      );\n\n      if (event.button === 0) {\n        Input.mouseLeftClickListener(scaledX, scaledY);\n      } else if (event.button === 2) {\n        Input.mouseRightClickListener(scaledX, scaledY);\n      }\n    }\n  },\n\n  updateMousePos: function (event: MouseEvent) {\n    Game.inputReceived = true;\n\n    let rect = window.document\n      .getElementById(\"gameCanvas\")\n      .getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    // Store raw coordinates\n    Input.rawMouseX = x;\n    Input.rawMouseY = y;\n\n    // Calculate scaled coordinates\n    Input.mouseX = Math.floor(x / Game.scale);\n    Input.mouseY = Math.floor(y / Game.scale);\n\n    Input.mouseMoveListener(Input.mouseX, Input.mouseY);\n  },\n\n  recalculateMousePosition: function () {\n    if (Input.rawMouseX !== undefined && Input.rawMouseY !== undefined) {\n      Input.mouseX = Math.floor(Input.rawMouseX / Game.scale);\n      Input.mouseY = Math.floor(Input.rawMouseY / Game.scale);\n\n      // Also recalculate click animation position\n      MouseCursor.getInstance().recalculateClickPosition();\n    }\n  },\n\n  handleMouseDown: function (event: MouseEvent) {\n    if (Input.mouseDown) return; // Prevent multiple triggers\n    MouseCursor.getInstance().startClickAnim();\n    Input.mouseDown = true;\n    Input.mouseDownStartTime = Date.now();\n    Input.isMouseHold = false;\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, event.button);\n\n    // Start checking for hold\n    if (!Input._holdCheckInterval) {\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16); // Check every frame\n    }\n  },\n\n  handleMouseUp: function (event: MouseEvent) {\n    Input.mouseDown = false;\n    Input.mouseDownStartTime = null;\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, event.button);\n\n    // Reset mouse repeat tracking\n    Input.lastMouseDownTime = 0;\n    Input.mouseDownHandled = false;\n\n    // Clear hold check interval\n    if (Input._holdCheckInterval) {\n      clearInterval(Input._holdCheckInterval);\n      Input._holdCheckInterval = null;\n    }\n\n    // Clear isMouseHold after a short delay to ensure click handler sees it\n    setTimeout(() => {\n      Input.isMouseHold = false;\n    }, 50);\n  },\n\n  _holdCheckInterval: null,\n\n  checkIsMouseHold: function () {\n    if (!Input.mouseDown || Input.mouseDownStartTime === null) return;\n\n    if (Date.now() >= Input.mouseDownStartTime + Input.HOLD_THRESH) {\n      if (!Input.isMouseHold) {\n        Input.isMouseHold = true;\n        // Call the hold callback if one is registered\n        if (Input.holdCallback) {\n          Input.holdCallback();\n        }\n      }\n    }\n  },\n\n  getTouches: function (evt) {\n    Game.inputReceived = true;\n\n    return (\n      evt.touches || evt.originalEvent.touches // browser API\n    ); // jQuery\n  },\n\n  xDown: null,\n  yDown: null,\n  currentX: 0,\n  currentY: 0,\n  swiped: false,\n\n  handleTouchStart: function (evt: TouchEvent) {\n    //console.log(\"handleTouchStart triggered\");\n    Game.inputReceived = true;\n\n    evt.preventDefault();\n\n    const firstTouch = Input.getTouches(evt)[0];\n    Input.xDown = firstTouch.clientX;\n    Input.yDown = firstTouch.clientY;\n    Input.currentX = firstTouch.clientX;\n    Input.currentY = firstTouch.clientY;\n\n    Input.tapStartTime = Date.now();\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.swiped = false;\n\n    // Unify with mouseDown logic, but force button=0 (left-click equivalent)\n    Input.mouseDown = true;\n    Input.mouseDownStartTime = Date.now();\n    Input.isMouseHold = false;\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, 0);\n\n    if (!Input._holdCheckInterval) {\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16);\n      // console.log(\"_holdCheckInterval started\");\n    }\n  },\n\n  handleTouchMove: function (evt) {\n    evt.preventDefault();\n\n    Input.currentX = evt.touches[0].clientX;\n    Input.currentY = evt.touches[0].clientY;\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    if (Input.swiped) return;\n\n    var xDiff = Input.xDown - Input.currentX;\n    var yDiff = Input.yDown - Input.currentY;\n\n    // Check if we've swiped\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        if (xDiff > 0) {\n          Input.leftSwipeListener();\n          Input.lastSwipeDirection = Direction.LEFT;\n        } else {\n          Input.rightSwipeListener();\n          Input.lastSwipeDirection = Direction.RIGHT;\n        }\n        Input.swiped = true;\n        Input.lastSwipeTime = Date.now();\n        Input.swipeHoldActive = true;\n        Input.swipeHoldRepeating = false; // Start in non-repeating state\n      } else {\n        if (yDiff > 0) {\n          Input.upSwipeListener();\n          Input.lastSwipeDirection = Direction.UP;\n        } else {\n          Input.downSwipeListener();\n          Input.lastSwipeDirection = Direction.DOWN;\n        }\n        Input.swiped = true;\n        Input.lastSwipeTime = Date.now();\n        Input.swipeHoldActive = true;\n        Input.swipeHoldRepeating = false; // Start in non-repeating state\n      }\n    }\n  },\n\n  handleTouchEnd: function (evt: TouchEvent) {\n    evt.preventDefault();\n\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\n    Input.isTapHold = false;\n    Input.tapStartTime = null;\n\n    // Reset swipe hold tracking\n    Input.swipeHoldActive = false;\n    Input.swipeHoldRepeating = false;\n    Input.lastSwipeTime = 0;\n    Input.lastSwipeDirection = null;\n\n    // Also unify with mouseUp logic, again forcing button=0\n    Input.mouseDown = false;\n    Input.mouseDownStartTime = null;\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, 0);\n\n    if (Input._holdCheckInterval) {\n      clearInterval(Input._holdCheckInterval);\n      Input._holdCheckInterval = null;\n      //console.log(\"_holdCheckInterval cleared\");\n    }\n    setTimeout(() => {\n      Input.isMouseHold = false;\n      //console.log(\"isMouseHold reset\");\n    }, 50);\n  },\n\n  checkIsTapHold: function () {\n    if (\n      Input.tapStartTime !== null &&\n      Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH\n    )\n      Input.isTapHold = true;\n  },\n\n  set isMouseHold(value: boolean) {\n    //console.log(`isMouseHold set to: ${value}`);\n    this._isMouseHold = value;\n  },\n\n  get isMouseHold() {\n    return this._isMouseHold;\n  },\n\n  _isMouseHold: false,\n\n  mouseDownStartTime: null,\n  HOLD_THRESH: 200, // Adjust this value as needed\n\n  holdCallback: null as (() => void) | null,\n\n  // Swipe hold tracking\n  lastSwipeTime: 0,\n  lastSwipeDirection: null as Direction | null,\n  swipeHoldActive: false,\n  swipeHoldRepeating: false, // Track if we're in repeat mode yet\n};\nwindow.addEventListener(\n  \"keyup\",\n  function (event) {\n    Input.onKeyup(event);\n  },\n  false,\n);\nwindow.addEventListener(\n  \"keydown\",\n  function (event) {\n    Input.onKeydown(event);\n  },\n  false,\n);\n\n/** \n\nwindow.addEventListener(\n  \"touchstart\",\n  function (event) {\n    Input.handleTouchStart(event);\n  },\n  false,\n);\n\nwindow.addEventListener(\n  \"touchend\",\n  function (event) {\n    Input.handleTouchEnd(event);\n  },\n  false,\n);\n*/\n\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mousemove\", (event) => Input.updateMousePos(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\n    \"mousedown\",\n    (event) => Input.handleMouseDown(event),\n    false,\n  );\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mouseup\", (event) => Input.handleMouseUp(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"contextmenu\", (event) => event.preventDefault(), false);\n/** \nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\n    \"touchstart\",\n    (event) => Input.handleTouchStart(event),\n    false,\n  );\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"touchend\", (event) => Input.handleTouchEnd(event), false);\n  */\n","import { globalEventBus } from \"../event/eventBus\";\nimport { AppEvents, EventPayloads, EVENTS } from \"../event/events\";\n\ninterface Stats {\n  enemiesKilled: number;\n  damageDone: number;\n  damageTaken: number;\n  turnsPassed: number;\n  coinsCollected: number;\n  itemsCollected: number;\n  enemies: string[];\n  xp: number;\n  level: number;\n}\n\nclass StatsTracker {\n  private stats: Stats = {\n    enemiesKilled: 0,\n    damageDone: 0,\n    damageTaken: 0,\n    turnsPassed: 0,\n    coinsCollected: 0,\n    itemsCollected: 0,\n    enemies: [],\n    xp: 0,\n    level: 1,\n  };\n\n  constructor() {\n    this.initializeListeners();\n  }\n\n  private initializeListeners(): void {\n    globalEventBus.on(EVENTS.ENEMY_KILLED, this.handleEnemyKilled);\n    globalEventBus.on(EVENTS.DAMAGE_DONE, this.handleDamageDone);\n    globalEventBus.on(EVENTS.DAMAGE_TAKEN, this.handleDamageTaken);\n    globalEventBus.on(EVENTS.TURN_PASSED, this.handleTurnPassed);\n    globalEventBus.on(EVENTS.COIN_COLLECTED, this.handleCoinCollected);\n    globalEventBus.on(EVENTS.ITEM_COLLECTED, this.handleItemCollected);\n  }\n\n  private handleEnemyKilled = (\n    payload: EventPayloads[typeof EVENTS.ENEMY_KILLED],\n  ): void => {\n    this.stats.enemiesKilled += 1;\n    this.stats.enemies.push(payload.enemyId);\n    this.stats.xp += payload.xp;\n    this.stats.level = Math.floor(this.stats.xp / 100) + 1;\n    //console.log(`Enemy killed: ${payload.enemyId}`);\n  };\n\n  private handleDamageDone = (\n    payload: EventPayloads[typeof EVENTS.DAMAGE_DONE],\n  ): void => {\n    this.stats.damageDone += payload.amount;\n    //console.log(`Damage done: ${payload.amount}`);\n  };\n\n  private handleDamageTaken = (\n    payload: EventPayloads[typeof EVENTS.DAMAGE_TAKEN],\n  ): void => {\n    this.stats.damageTaken += payload.amount;\n    //console.log(`Damage taken: ${payload.amount}`);\n  };\n\n  private handleTurnPassed = (): void => {\n    this.stats.turnsPassed += 1;\n    //console.log(`Turn passed: ${this.stats.turnsPassed}`);\n  };\n\n  private handleCoinCollected = (\n    payload: EventPayloads[typeof EVENTS.COIN_COLLECTED],\n  ): void => {\n    this.stats.coinsCollected += payload.amount;\n    //console.log(`Coins collected: ${payload.amount}`);\n  };\n\n  private handleItemCollected = (\n    payload: EventPayloads[typeof EVENTS.ITEM_COLLECTED],\n  ): void => {\n    this.stats.itemsCollected += 1;\n    //console.log(`Item collected: ${payload.itemId}`);\n  };\n\n  public getStats(): Stats {\n    return this.stats;\n  }\n\n  public getXp(): number {\n    return this.stats.xp;\n  }\n\n  public resetStats(): void {\n    this.stats = {\n      enemiesKilled: 0,\n      damageDone: 0,\n      damageTaken: 0,\n      turnsPassed: 0,\n      coinsCollected: 0,\n      itemsCollected: 0,\n      enemies: [],\n      xp: 0,\n      level: 1,\n    };\n    //console.log(\"Stats have been reset.\");\n  }\n}\n\nexport const statsTracker = new StatsTracker();\n","import { globalEventBus } from \"../event/eventBus\";\n\nexport class TextBox {\n  text: string;\n  cursor: number;\n  private enterCallback: () => void;\n  private escapeCallback: () => void;\n  private allowedCharacters: string = \"all\";\n  private element: HTMLElement;\n  private message: string = \"\";\n  private sentMessages: Array<string>;\n  private currentMessageIndex: number = -1;\n  private readonly MAX_HISTORY: number = 50;\n\n  constructor(element: HTMLElement) {\n    this.text = \"\";\n    this.cursor = 0;\n    this.enterCallback = () => {};\n    this.escapeCallback = () => {};\n    this.element = element;\n    this.sentMessages = [];\n\n    //this.element.addEventListener(\"touchstart\", this.handleTouchStart);\n  }\n\n  public setEnterCallback(callback: () => void): void {\n    this.enterCallback = callback;\n  }\n\n  public setEscapeCallback(callback: () => void): void {\n    this.escapeCallback = callback;\n  }\n\n  public clear(): void {\n    this.text = \"\";\n    this.cursor = 0;\n    this.message = \"\";\n    this.updateElement();\n  }\n\n  public handleKeyPress = (key: string): void => {\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/ \".split(\n      \"\",\n    );\n    if (key.length === 1) {\n      key = key.toLowerCase();\n      if (fontHas.includes(key)) {\n        if (\n          this.allowedCharacters === \"all\" ||\n          this.allowedCharacters.includes(key)\n        ) {\n          this.text =\n            this.text.substring(0, this.cursor) +\n            key +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor += 1;\n          this.updateElement();\n\n          this.message =\n            this.message.substring(0, this.cursor - 1) +\n            key +\n            this.message.substring(this.cursor - 1, this.message.length);\n        }\n      }\n      //console.log(`Current message: \"${this.message}\"`);\n      return;\n    } else {\n      switch (key) {\n        case \"Backspace\":\n          if (this.cursor > 0) {\n            this.text =\n              this.text.substring(0, this.cursor - 1) +\n              this.text.substring(this.cursor, this.text.length);\n            this.cursor = Math.max(0, this.cursor - 1);\n            this.updateElement();\n\n            this.message =\n              this.message.substring(0, this.cursor) +\n              this.message.substring(this.cursor + 1, this.message.length);\n          }\n          break;\n        case \"Delete\":\n          if (this.cursor < this.text.length) {\n            this.text =\n              this.text.substring(0, this.cursor) +\n              this.text.substring(this.cursor + 1, this.text.length);\n            this.updateElement();\n\n            this.message =\n              this.message.substring(0, this.cursor) +\n              this.message.substring(this.cursor + 1, this.message.length);\n          }\n          break;\n        case \"ArrowLeft\":\n          this.cursor = Math.max(0, this.cursor - 1);\n          this.updateCursorPosition();\n          break;\n        case \"ArrowRight\":\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\n          this.updateCursorPosition();\n          break;\n        case \"ArrowUp\":\n          if (\n            this.sentMessages.length > 0 &&\n            this.currentMessageIndex < this.sentMessages.length - 1\n          ) {\n            this.currentMessageIndex++;\n            this.text =\n              this.sentMessages[\n                this.sentMessages.length - 1 - this.currentMessageIndex\n              ];\n            this.updateElement();\n            this.message = this.text;\n          }\n          break;\n        case \"ArrowDown\":\n          if (this.currentMessageIndex > 0) {\n            this.currentMessageIndex--;\n            this.text =\n              this.sentMessages[\n                this.sentMessages.length - 1 - this.currentMessageIndex\n              ];\n            this.updateElement();\n            this.message = this.text;\n          } else if (this.currentMessageIndex === 0) {\n            this.currentMessageIndex = -1;\n            this.clear();\n          }\n          break;\n        case \"Enter\":\n          this.sendMessage();\n          this.escapeCallback();\n          break;\n        case \"Escape\":\n          this.escapeCallback();\n          break;\n      }\n    }\n    //console.log(`Current message: \"${this.message}\"`);\n  };\n\n  private handleTouchStart = (e: TouchEvent): void => {\n    this.focus();\n    e.preventDefault();\n  };\n\n  private focus(): void {\n    // Create a temporary input element to trigger the on-screen keyboard\n    const tempInput = document.createElement(\"input\");\n    tempInput.type = \"text\";\n    tempInput.style.position = \"absolute\";\n    tempInput.style.opacity = \"0\";\n    tempInput.style.zIndex = \"-1\"; // Ensure it doesn't interfere with the game UI\n    document.body.appendChild(tempInput);\n    tempInput.focus();\n    tempInput.addEventListener(\"blur\", () => {\n      document.body.removeChild(tempInput);\n    });\n  }\n\n  private sendMessage(): void {\n    let message = this.message.trim();\n\n    if (message) {\n      // Add the new message to the history\n      this.sentMessages.push(message);\n\n      // Ensure the history size doesn't exceed the maximum limit\n      if (this.sentMessages.length > this.MAX_HISTORY) {\n        this.sentMessages.shift(); // Remove the oldest message\n      }\n      globalEventBus.emit(\"ChatMessageSent\", message);\n\n      console.log(this.sentMessages);\n\n      this.enterCallback();\n\n      if (message.startsWith(\"/\")) {\n        message = message.substring(1);\n        globalEventBus.emit(\"ChatCommand\", message);\n      }\n\n      this.clear();\n\n      // Reset the navigation index\n      this.currentMessageIndex = -1;\n    }\n  }\n\n  private updateElement(): void {\n    // Update the HTML element with the current text\n    // Modify to handle multiple lines if necessary\n    this.element.textContent = this.text;\n\n    // Optionally, update cursor position in the UI\n  }\n\n  private updateCursorPosition(): void {\n    // Implement cursor position update in the UI if necessary\n  }\n\n  // Optional: Modify other methods if needed to handle wrapped messages\n}\n","import { Sound } from \"../sound/sound\";\nimport { Menu } from \"./menu\";\nimport { MuteButton } from \"./muteButton\";\n\nexport class guiButton {\n  toggleable: boolean;\n  toggled: boolean;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  text: string;\n  parent: Menu;\n  onClick: () => void;\n  constructor(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    text: string,\n    onClick: () => void,\n    toggleable: boolean = false,\n    parent: Menu,\n  ) {\n    this.toggleable = toggleable;\n    this.toggled = false;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.text = text;\n    this.onClick = onClick;\n    this.parent = parent;\n  }\n\n  // Add a method to update the button's own text based on mute state\n  toggleMuteText = () => {\n    // 'this' refers to the guiButton instance\n    MuteButton.toggleMute();\n\n    this.text = Sound.audioMuted ? \"Sound Muted\" : \"Sound Unmuted\";\n    this.parent.player.game.pushMessage(this.text);\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Input } from \"../game/input\";\nimport { Player } from \"../player/player\";\nimport { Room } from \"../room/room\";\n\nexport class HoverText {\n  static getHoverText(\n    x: number,\n    y: number,\n    room: Room,\n    player: Player,\n  ): string[] {\n    // Handle undefined mouse coordinates\n    if (Input.mouseX === undefined || Input.mouseY === undefined) {\n      return [];\n    }\n\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Convert pixel offset to tile offset\n    const tileOffsetX = Math.floor(\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n    const tileOffsetY = Math.floor(\n      (Input.mouseY - screenCenterY + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n\n    const offsetX = x + tileOffsetX;\n    const offsetY = y + tileOffsetY;\n\n    const strings: string[] = [];\n    for (const entity of room.entities) {\n      if (entity.x === offsetX && entity.y === offsetY) {\n        strings.push(entity.hoverText());\n      }\n    }\n\n    for (const item of room.items) {\n      if (item.x === offsetX && item.y === offsetY) {\n        strings.push(item.hoverText());\n      }\n    }\n\n    const tile = room.getTile(offsetX, offsetY);\n    if (tile) {\n      strings.push(tile.getName());\n    }\n\n    return strings;\n  }\n\n  static draw(delta: number, x: number, y: number, room: Room, player: Player) {\n    const strings: string[] = HoverText.getHoverText(x, y, room, player);\n    if (strings.length === 0) {\n      return;\n    }\n    Game.ctx.save();\n    for (const string of strings) {\n      const offsetY = strings.indexOf(string) * 6;\n      Game.ctx.fillStyle = \"yellow\";\n      Game.ctx.globalAlpha = 0.1;\n      Game.fillText(string, 1, 20 + offsetY);\n    }\n    Game.ctx.restore();\n  }\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Room, RoomType } from \"../room/room\";\nimport { Entity, EntityType } from \"../entity/entity\";\nimport { Wall } from \"../tile/wall\";\nimport { Player } from \"../player/player\";\nimport { LevelConstants } from \"../level/levelConstants\";\n\nexport class Map {\n  game: Game;\n  mapData: any[] = [];\n  oldMapData: any[] = [];\n  depth: number;\n  scale: number;\n\n  offsetX: number = 0;\n  offsetY: number = 0;\n  softOffsetX: number = 0;\n  softOffsetY: number = 0;\n  player: Player;\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.scale = 1;\n    this.player = player;\n    //this.depth = player.game.level.depth\n  }\n\n  saveMapData = () => {\n    this.clearMap();\n    for (const room of this.game.levels[this.player.depth].rooms) {\n      if (\n        this.game.room.mapGroup === room.mapGroup &&\n        (room.entered === true || GameConstants.DEVELOPER_MODE)\n      ) {\n        this.mapData.push({\n          room: room,\n          walls: room.innerWalls,\n          doors: room.doors,\n          entities: room.entities,\n          items: room.items,\n          players: this.game.players,\n        });\n      }\n    }\n\n    const enteredRooms = this.mapData\n      .map((data) => data.room)\n      .filter((room) => room.entered);\n\n    if (enteredRooms.length > 0) {\n      const sortedByX = [...enteredRooms].sort((a, b) => a.roomX - b.roomX);\n      const sortedByY = [...enteredRooms].sort((a, b) => a.roomY - b.roomY);\n\n      const maxX = sortedByX[sortedByX.length - 1].roomX;\n      const minY = sortedByY[0].roomY;\n\n      this.offsetX = maxX;\n      this.offsetY = minY;\n    } else {\n      this.offsetX = 0;\n      this.offsetY = 0;\n    }\n  };\n\n  clearMap = () => {\n    this.mapData = [];\n  };\n\n  saveOldMap = () => {\n    this.oldMapData = [...this.mapData];\n  };\n\n  renderMap = (delta: number) => {\n    Game.ctx.save(); // Save the current canvas state\n\n    this.setInitialCanvasSettings(1);\n    this.translateCanvas(0);\n    for (const data of this.mapData) {\n      this.drawRoom(data, delta);\n    }\n    /*for (const data of this.oldMapData) {\n      this.drawRoom(data);\n    }*/\n    this.resetCanvasTransform();\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n  updateOffsetXY = () => {\n    let diffX = this.offsetX - this.softOffsetX;\n    let diffY = this.offsetY - this.softOffsetY;\n\n    if (Math.abs(diffX) > 0.01) {\n      this.softOffsetX += diffX * 0.1;\n      this.softOffsetX = this.softOffsetX;\n    } else this.softOffsetX = this.offsetX;\n    if (Math.abs(diffY) > 0.01) {\n      this.softOffsetY += diffY * 0.1;\n      this.softOffsetY = this.softOffsetY;\n    } else this.softOffsetY = this.offsetY;\n  };\n\n  draw = (delta: number) => {\n    this.updateOffsetXY();\n    this.renderMap(delta);\n  };\n\n  setInitialCanvasSettings = (alpha: number) => {\n    Game.ctx.globalAlpha = alpha;\n    Game.ctx.globalCompositeOperation = \"source-over\";\n  };\n\n  translateCanvas = (offset: number) => {\n    Game.ctx.translate(\n      Math.floor(0.95 * GameConstants.WIDTH) -\n        //this.game.room.roomX -\n        //Math.floor(0.5 * this.game.room.width) +\n        15 * this.scale -\n        Math.floor(this.softOffsetX),\n      Math.floor(0.05 * GameConstants.HEIGHT) -\n        //this.game.room.roomY -\n        //Math.floor(0.5 * this.game.room.height) -\n        1 * this.scale -\n        offset -\n        Math.floor(this.softOffsetY),\n    );\n  };\n\n  drawRoom = (data, delta: number) => {\n    //this.drawUnderRoomPlayers(data.players, delta);\n\n    this.drawRoomOutline(data.room);\n\n    this.drawRoomWalls(data.walls);\n    this.drawRoomDoors(data.doors);\n    this.drawRoomEntities(data.entities);\n    this.drawRoomItems(data.items);\n    this.drawRoomPlayers(data.players, delta);\n  };\n\n  drawRoomOutline = (level) => {\n    const s = this.scale;\n    Game.ctx.fillStyle = \"#5A5A5A\";\n    Game.ctx.fillRect(\n      level.roomX * s + 0,\n      level.roomY * s + 0,\n      level.width * s - 0,\n      level.height * s - 0,\n    );\n    if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\n    if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(\n      level.roomX * s + 1,\n      level.roomY * s + 1,\n      level.width * s - 2,\n      level.height * s - 2,\n    );\n  };\n\n  drawRoomWalls = (walls) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const wall of walls) {\n      Game.ctx.fillStyle = \"#404040\";\n      Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawRoomDoors = (doors) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const door of doors) {\n      if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\n      if (door.opened === true) {\n        Game.ctx.fillStyle = \"black\";\n        Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\n      }\n      Game.ctx.fillStyle = \"#5A5A5A\"; // Reset to default after each door\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawRoomPlayers = (players, delta: number) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const i in players) {\n      Game.ctx.fillStyle = \"white\";\n      if (\n        this.game.levels[players[i].depth].rooms[players[i].levelID]\n          .mapGroup === this.game.room.mapGroup\n      ) {\n        Game.ctx.fillRect(players[i].x * s, players[i].y * s, 1 * s, 1 * s);\n      }\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawUnderRoomPlayers = (players, delta: number) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const i in players) {\n      this.game.rooms[players[i].levelID].mapGroup === this.game.room.mapGroup;\n      {\n        if (Math.floor(Date.now() / 300) % 2) {\n          Game.ctx.fillStyle = \"#4D8C8C\";\n          // Draw 3x3 outline box around player\n          Game.ctx.fillRect(\n            (players[i].x - 1) * s,\n            (players[i].y - 1) * s,\n            1 * s,\n            1 * s,\n          ); // Top left\n          Game.ctx.fillRect(\n            players[i].x * s,\n            (players[i].y - 1) * s,\n            1 * s,\n            1 * s,\n          ); // Top middle\n          Game.ctx.fillRect(\n            (players[i].x + 1) * s,\n            (players[i].y - 1) * s,\n            1 * s,\n            1 * s,\n          ); // Top right\n          Game.ctx.fillRect(\n            (players[i].x - 1) * s,\n            players[i].y * s,\n            1 * s,\n            1 * s,\n          ); // Middle left\n          Game.ctx.fillRect(\n            (players[i].x + 1) * s,\n            players[i].y * s,\n            1 * s,\n            1 * s,\n          ); // Middle right\n          Game.ctx.fillRect(\n            (players[i].x - 1) * s,\n            (players[i].y + 1) * s,\n            1 * s,\n            1 * s,\n          ); // Bottom left\n          Game.ctx.fillRect(\n            players[i].x * s,\n            (players[i].y + 1) * s,\n            1 * s,\n            1 * s,\n          ); // Bottom middle\n          Game.ctx.fillRect(\n            (players[i].x + 1) * s,\n            (players[i].y + 1) * s,\n            1 * s,\n            1 * s,\n          ); // Bottom right\n        }\n      }\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawRoomEntities = (entities) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const enemy of entities) {\n      this.setEntityColor(enemy);\n      Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  setEntityColor = (enemy) => {\n    // No need to save/restore here as only fillStyle is being set\n    if (enemy.type === EntityType.ENEMY) {\n      Game.ctx.fillStyle = \"yellow\";\n    }\n    if (enemy.type === EntityType.PROP) {\n      Game.ctx.fillStyle = \"#847e87\";\n    }\n    if (enemy.type === EntityType.RESOURCE) {\n      Game.ctx.fillStyle = \"#5a595b\";\n    }\n    if (enemy.type === EntityType.FRIENDLY) {\n      Game.ctx.fillStyle = \"cyan\";\n    }\n  };\n\n  drawRoomItems = (items) => {\n    const s = this.scale;\n    Game.ctx.save(); // Save the current canvas state\n    for (const item of items) {\n      let x = item.x;\n      let y = item.y;\n      Game.ctx.fillStyle = \"#ac3232\";\n      if (!item.pickedUp) {\n        Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\n      }\n    }\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  resetCanvasTransform = () => {\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  };\n}\n","import { Game } from \"../game\";\nimport { guiButton } from \"./guiButton\";\nimport { InputEnum } from \"../game/input\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { MuteButton } from \"./muteButton\";\nimport { Sound } from \"../sound/sound\";\nimport { Player } from \"../player/player\";\n\nexport class Menu {\n  buttons: guiButton[];\n  closeButton: guiButton;\n  open: boolean;\n  selectedButton: number;\n  player: Player;\n  selectionTimeoutId: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(player: Player) {\n    this.buttons = [];\n    this.open = false;\n    this.selectedButton = 0;\n    this.initializeCloseButton();\n    this.initializeMainMenu();\n    this.player = player;\n  }\n\n  static drawOpenMenuButton() {\n    Game.ctx.save();\n    Game.ctx.fillStyle = \"rgba(255, 255, 0, 1)\";\n    Game.ctx.globalAlpha = 0.1;\n\n    // Position in top right corner, 2 tiles away from right edge\n    const buttonWidth = Math.round(GameConstants.TILESIZE * 1.5 - 2);\n    const buttonHeight = Math.round(GameConstants.TILESIZE / 2 - 1);\n    const rightMargin = 2 * GameConstants.TILESIZE; // 2 tiles from right edge\n    const buttonX = GameConstants.WIDTH / 2;\n    const buttonY = GameConstants.TILESIZE / 2;\n\n    Game.drawFX(18, 0, 1, 1, 0, 0.5, 1, 1);\n\n    //Game.ctx.fillRect(buttonX, buttonY, buttonWidth, buttonHeight);\n    Game.ctx.globalAlpha = 1;\n\n    Game.ctx.fillStyle = \"rgb(0, 0, 0)\"; //yellow text\n    //Game.fillText(\"Menu\", buttonX + 1, buttonY + 1);\n    Game.ctx.restore();\n  }\n\n  initializeCloseButton() {\n    // Match the menu button dimensions\n    const buttonWidth = Math.round(GameConstants.TILESIZE * 1.5 - 2);\n    const buttonHeight = Math.round(GameConstants.TILESIZE * 1.5 - 2);\n\n    this.closeButton = new guiButton(\n      0,\n      -1,\n      Math.round(buttonWidth),\n      Math.round(buttonHeight),\n      \"X\",\n      () => this.close(),\n      false,\n      this,\n    );\n  }\n\n  initializeMainMenu() {\n    // Don't set fixed dimensions - let positionButtons() calculate optimal sizes\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Start Game\", this.startGame));\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Settings\", this.openSettings));\n    this.addButton(\n      new guiButton(0, 0, 0, 0, \"- Scale\", this.scaleDown, false, this),\n    );\n    this.addButton(\n      new guiButton(0, 0, 0, 0, \"+ Scale\", this.scaleUp, false, this),\n    );\n    const muteButton = new guiButton(\n      0,\n      0,\n      0,\n      0,\n      \"Mute Sound\",\n      () => {},\n      false,\n      this,\n    );\n    muteButton.onClick = muteButton.toggleMuteText;\n    this.addButton(muteButton);\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Exit\", this.exitGame));\n    this.positionButtons();\n  }\n\n  addButton(button: guiButton) {\n    this.buttons.push(button);\n  }\n\n  draw() {\n    if (this.open) {\n      Game.ctx.save();\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      // Draw main menu buttons\n      this.buttons.forEach((button) => {\n        this.drawButton(button);\n      });\n\n      // Draw close button\n      this.drawCloseButton();\n\n      Game.ctx.restore();\n    }\n  }\n\n  drawButton(button: guiButton) {\n    Game.ctx.save();\n    Game.ctx.imageSmoothingEnabled = false;\n\n    // Clear any stroke settings to prevent unwanted outlines\n    Game.ctx.strokeStyle = \"transparent\";\n    Game.ctx.lineWidth = 0;\n\n    Game.ctx.fillStyle =\n      this.selectedButton === this.buttons.indexOf(button)\n        ? \"rgba(75, 75, 75, 1)\"\n        : \"rgba(100, 100, 100, 1)\";\n\n    // Round coordinates to prevent anti-aliasing outlines\n    Game.ctx.fillRect(\n      Math.round(button.x),\n      Math.round(button.y),\n      Math.round(button.width),\n      Math.round(button.height),\n    );\n\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n\n    const textWidth = Game.measureText(button.text).width;\n    const textX = button.x + (button.width - textWidth) / 2;\n\n    // Center text vertically in the button, accounting for varying button heights\n    const textY = button.y + button.height / 2 - Game.letter_height / 2;\n\n    Game.fillText(button.text, Math.round(textX), Math.round(textY));\n    Game.ctx.restore();\n  }\n\n  drawCloseButton() {\n    Game.ctx.save();\n    Game.ctx.imageSmoothingEnabled = false;\n\n    // Close button styling - make it red-ish for better visibility\n    Game.ctx.fillStyle = \"rgba(220, 60, 60, 1)\"; // Red background\n    Game.ctx.fillRect(\n      Math.round(this.closeButton.x),\n      Math.round(this.closeButton.y),\n      Math.round(this.closeButton.width),\n      Math.round(this.closeButton.height),\n    );\n\n    // Border for the close button\n    Game.ctx.strokeStyle = \"rgba(0, 0, 0, 1)\";\n    Game.ctx.lineWidth = 1;\n    Game.ctx.strokeRect(\n      this.closeButton.x,\n      this.closeButton.y,\n      this.closeButton.width,\n      this.closeButton.height,\n    );\n\n    // Draw X text\n    Game.ctx.fillStyle = \"rgba(255, 255, 255, 1)\"; // White X\n    const textWidth = Game.measureText(this.closeButton.text).width;\n    const textX = this.closeButton.x + (this.closeButton.width - textWidth) / 2;\n    const textY =\n      this.closeButton.y + this.closeButton.height / 2 - Game.letter_height / 2;\n\n    Game.fillText(this.closeButton.text, textX, textY);\n    Game.ctx.restore();\n  }\n\n  inputHandler(input: InputEnum) {\n    if (!this.open) return;\n\n    switch (input) {\n      case InputEnum.ESCAPE:\n        this.open = false;\n        break;\n      case InputEnum.UP:\n        this.up();\n        break;\n      case InputEnum.DOWN:\n        this.down();\n        break;\n      case InputEnum.SPACE:\n        this.select();\n        break;\n      case InputEnum.LEFT_CLICK:\n        // Handle mouse clicks by getting current mouse position and calling mouseInputHandler\n        const { x, y } = MouseCursor.getInstance().getPosition();\n\n        this.mouseInputHandler(x, y);\n        break;\n      case InputEnum.RIGHT_CLICK:\n        // Handle right clicks if needed (for now just log)\n        break;\n      default:\n        break;\n    }\n  }\n\n  mouseInputHandler(x: number, y: number) {\n    if (!this.open) {\n      return;\n    }\n\n    // Check close button first\n    if (this.isPointInCloseButton(x, y)) {\n      this.closeButton.onClick();\n      return;\n    }\n\n    // Check main menu buttons\n    const bounds = this.isPointInMenuBounds(x, y);\n\n    if (bounds.inBounds && bounds.buttonIndex >= 0) {\n      const button = this.buttons[bounds.buttonIndex];\n\n      // Clear any existing timeout\n      if (this.selectionTimeoutId !== null) {\n        clearTimeout(this.selectionTimeoutId);\n      }\n\n      // Set the selected button for visual feedback\n      this.selectedButton = bounds.buttonIndex;\n\n      // Set timeout to reset selection after 100ms\n      this.selectionTimeoutId = setTimeout(() => {\n        this.selectedButton = -1; // Reset to invalid index so no button appears selected\n        this.selectionTimeoutId = null;\n      }, 100);\n\n      button.onClick();\n    } else {\n    }\n  }\n\n  close() {\n    this.open = false;\n  }\n\n  openMenu() {\n    this.open = true;\n    this.selectedButton = -1;\n    this.buttons.forEach((button, index) => {});\n  }\n\n  toggleOpen() {\n    if (this.open) {\n      this.close();\n    } else {\n      this.openMenu();\n    }\n  }\n\n  select() {\n    if (this.buttons[this.selectedButton]) {\n      this.buttons[this.selectedButton].onClick();\n    }\n  }\n\n  up() {\n    if (this.buttons.length > 0) {\n      this.selectedButton =\n        (this.selectedButton - 1 + this.buttons.length) % this.buttons.length;\n    }\n  }\n\n  down() {\n    if (this.buttons.length > 0) {\n      this.selectedButton = (this.selectedButton + 1) % this.buttons.length;\n    }\n  }\n\n  // Action methods\n  startGame = () => {\n    this.close();\n    // Implement game start logic\n  };\n\n  exitGame = () => {\n    // Implement exit game logic\n  };\n\n  openSettings = () => {\n    // Implement settings logic later\n  };\n\n  scaleUp = () => {\n    this.player.game.increaseScale();\n    // Add scale up functionality here\n  };\n\n  scaleDown = () => {\n    this.player.game.decreaseScale();\n    // Add scale down functionality here\n  };\n\n  positionButtons() {\n    const screenWidth = GameConstants.WIDTH;\n    const screenHeight = GameConstants.HEIGHT;\n    const buttonCount = this.buttons.length;\n\n    // Position close button to match menu button position\n    this.closeButton.x = 1;\n    this.closeButton.y = GameConstants.TILESIZE / 2;\n\n    // Button sizing - make them responsive to screen size\n    const maxButtonWidth = Math.min(200, screenWidth * 0.6); // Max 60% of screen width\n\n    // Calculate available space\n    const horizontalMargin = (screenWidth - maxButtonWidth) / 2;\n    const verticalMargin = 20; // Top and bottom margin\n    const availableHeight = screenHeight - verticalMargin * 2;\n\n    // Calculate button slots (scale buttons share one slot)\n    const scaleButtonIndices = this.getScaleButtonIndices();\n    const buttonSlots = buttonCount - (scaleButtonIndices.length > 0 ? 1 : 0); // Scale buttons share one slot\n    const heightPerButtonSlot = availableHeight / buttonSlots;\n\n    // Make each button take up ~80% of its slot, leaving 20% for spacing\n    // Add maximum height constraint - reduce by 40% from what could be very tall buttons\n    const maxButtonHeight = 30; // Maximum button height in pixels\n    const calculatedHeight = Math.floor(heightPerButtonSlot * 0.8);\n    const buttonHeight = Math.min(calculatedHeight, maxButtonHeight);\n\n    // Update button dimensions and positions\n    let currentSlot = 0;\n    for (let i = 0; i < this.buttons.length; i++) {\n      const button = this.buttons[i];\n\n      if (button.text === \"- Scale\" || button.text === \"+ Scale\") {\n        // Handle scale buttons specially - they share one slot side by side\n        const isMinusButton = button.text === \"- Scale\";\n        const buttonWidth = Math.floor(maxButtonWidth / 2) - 2; // Split width with small gap\n\n        button.x = horizontalMargin + (isMinusButton ? 0 : buttonWidth + 4);\n        button.y =\n          verticalMargin +\n          currentSlot * heightPerButtonSlot +\n          (heightPerButtonSlot - buttonHeight) / 2;\n        button.width = buttonWidth;\n        button.height = buttonHeight;\n\n        // Only advance slot after both scale buttons are positioned\n        if (button.text === \"+ Scale\") {\n          currentSlot++;\n        }\n      } else {\n        // Regular button positioning\n        button.x = horizontalMargin;\n        button.y =\n          verticalMargin +\n          currentSlot * heightPerButtonSlot +\n          (heightPerButtonSlot - buttonHeight) / 2;\n        button.width = maxButtonWidth;\n        button.height = buttonHeight;\n        currentSlot++;\n      }\n    }\n  }\n\n  getScaleButtonIndices(): number[] {\n    const indices: number[] = [];\n    this.buttons.forEach((button, index) => {\n      if (button.text === \"- Scale\" || button.text === \"+ Scale\") {\n        indices.push(index);\n      }\n    });\n    return indices;\n  }\n\n  isPointInMenuBounds(\n    x: number,\n    y: number,\n  ): { inBounds: boolean; buttonIndex: number } {\n    if (!this.open) {\n      return { inBounds: false, buttonIndex: -1 };\n    }\n\n    for (let i = 0; i < this.buttons.length; i++) {\n      const button = this.buttons[i];\n      if (\n        x >= button.x &&\n        x <= button.x + button.width &&\n        y >= button.y &&\n        y <= button.y + button.height\n      ) {\n        return { inBounds: true, buttonIndex: i };\n      }\n    }\n\n    return { inBounds: false, buttonIndex: -1 };\n  }\n\n  isPointInCloseButton(x: number, y: number): boolean {\n    return (\n      x >= this.closeButton.x &&\n      x <= this.closeButton.x + this.closeButton.width &&\n      y >= this.closeButton.y &&\n      y <= this.closeButton.y + this.closeButton.height\n    );\n  }\n}\n","import { Game } from \"../game\";\nimport { Input } from \"../game/input\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport class MouseCursor {\n  private static instance: MouseCursor;\n  private cursorSize: number = 5; // Size of the cursor rectangle\n  private clickX: number = 0;\n  private clickY: number = 0;\n  private rawClickX: number = 0;\n  private rawClickY: number = 0;\n  private tileX: number = 6;\n  private lastMouseX: number = 0;\n  private lastMouseY: number = 0;\n  private posChangeTime: number = Date.now();\n  private cursorTimeout: number = 5000;\n\n  private constructor() {}\n  private frame: number = 0;\n\n  public static getInstance(): MouseCursor {\n    if (!MouseCursor.instance) {\n      MouseCursor.instance = new MouseCursor();\n    }\n    return MouseCursor.instance;\n  }\n\n  public drawCursor(): void {\n    Game.ctx.save();\n    const timeSinceChange = Date.now() - this.posChangeTime;\n    const fadeStartTime = this.cursorTimeout - 200; // Start fade 200ms before timeout\n\n    let alpha: number = 1;\n    if (timeSinceChange > fadeStartTime) {\n      // Only fade in the last 200ms\n      const fadeProgress = (timeSinceChange - fadeStartTime) / 200;\n      alpha = 1 - fadeProgress;\n    }\n\n    Game.ctx.globalAlpha = alpha;\n\n    //Game.ctx.fillRect(Input.mouseX, Input.mouseY, 1, 1);\n    Game.drawFX(\n      this.tileX,\n      0,\n      1,\n      1,\n      Input.mouseX / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\n      Input.mouseY / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\n      1,\n      1,\n    );\n\n    Game.ctx.restore();\n  }\n\n  public drawAnimation(delta: number): void {\n    if (this.frame > 5) {\n      //14 is max frame for animation\n      return;\n    }\n    Game.drawFX(\n      9 + Math.ceil(this.frame),\n      1,\n      1,\n      1,\n      this.clickX / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\n      this.clickY / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\n      1,\n      1,\n    );\n    this.frame = this.frame + delta / 5;\n  }\n\n  public startClickAnim(): void {\n    this.frame = 0;\n    this.clickX = Input.mouseX;\n    this.clickY = Input.mouseY;\n    this.rawClickX = Input.rawMouseX;\n    this.rawClickY = Input.rawMouseY;\n  }\n\n  public recalculateClickPosition(): void {\n    if (this.rawClickX !== undefined && this.rawClickY !== undefined) {\n      const canvas = document.getElementById(\"gameCanvas\") as HTMLCanvasElement;\n      const rect = canvas.getBoundingClientRect();\n\n      this.clickX = Math.floor(this.rawClickX / Game.scale);\n      this.clickY = Math.floor(this.rawClickY / Game.scale);\n    }\n  }\n\n  public setIcon = (icon: string) => {\n    switch (icon) {\n      case \"arrow\":\n        this.tileX = 8;\n        break;\n      case \"sword\":\n        this.tileX = 7;\n        break;\n      case \"hand\":\n        this.tileX = 6;\n        break;\n      case \"wait\":\n        this.tileX = 9;\n        break;\n      case \"grab\":\n        this.tileX = 10;\n        break;\n      case \"up\":\n        this.tileX = 11;\n        break;\n      case \"right\":\n        this.tileX = 12;\n        break;\n      case \"down\":\n        this.tileX = 13;\n        break;\n      case \"left\":\n        this.tileX = 14;\n        break;\n      case \"mine\":\n        this.tileX = 15;\n        break;\n    }\n  };\n\n  public draw = (delta: number, mobile: boolean = false) => {\n    if (!mobile && Date.now() - this.posChangeTime < this.cursorTimeout)\n      this.drawCursor();\n    this.drawAnimation(delta);\n  };\n\n  public getPosition(): { x: number; y: number } {\n    if (Input.mouseX !== this.lastMouseX || Input.mouseY !== this.lastMouseY) {\n      this.posChangeTime = Date.now();\n    }\n\n    this.lastMouseX = Input.mouseX;\n    this.lastMouseY = Input.mouseY;\n    return { x: Input.mouseX, y: Input.mouseY };\n  }\n\n  public getTilePosition(): { x: number; y: number } {\n    return {\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\n    };\n  }\n\n  public getInventoryPosition(): { x: number; y: number } {\n    return {\n      x: Input.mouseX,\n      y: Input.mouseY,\n    };\n  }\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Sound } from \"../sound/sound\";\n\nexport class MuteButton {\n  static draw() {\n    const tile = GameConstants.TILESIZE;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = 0.1;\n    if (Sound.audioMuted) {\n      Game.drawFX(17, 0, 1, 1, 0, 0.5, 1, 1);\n    } else {\n      Game.drawFX(16, 0, 1, 1, 0, 0.5, 1, 1);\n    }\n    Game.ctx.restore();\n  }\n\n  static toggleMute() {\n    Sound.toggleMute();\n  }\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport class PostProcessor {\n  static draw = (delta: number) => {\n    Game.ctx.save();\n    Game.ctx.globalAlpha = 0.15;\n    Game.ctx.globalCompositeOperation = \"screen\";\n    // GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation; //\"soft-light\";\n\n    Game.ctx.fillStyle = \"#006A6E\"; //dark teal\n    //Game.ctx.fillStyle = \"#003B6F\"; //deep underwater blue\n    //Game.ctx.fillStyle = \"#2F2F2F\"; //smoky fog prison\n\n    //Game.ctx.fillStyle = \"#4a6c4b\"; //darker muddy green\n    //Game.ctx.fillStyle = \"#800000\"; // lighter red for dungeon hell theme\n\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.restore();\n  };\n}\n","import { GameConstants } from \"../game/gameConstants\";\n\nexport class WebGLBlurRenderer {\n  private static instance: WebGLBlurRenderer;\n  private gl: WebGLRenderingContext;\n  private canvas: HTMLCanvasElement;\n  private highQualityShaderProgram: WebGLProgram;\n  private performanceShaderProgram: WebGLProgram;\n  private currentShaderProgram: WebGLProgram;\n  private positionBuffer: WebGLBuffer;\n  private texCoordBuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n  private texture: WebGLTexture;\n  private tempTexture: WebGLTexture;\n  private tempFramebuffer: WebGLFramebuffer;\n\n  // Add texture size tracking for texSubImage2D optimization\n  private textureWidth: number = 0;\n  private textureHeight: number = 0;\n  private tempTextureWidth: number = 0;\n  private tempTextureHeight: number = 0;\n\n  // Add downsampling canvas cache\n  private downsampleCanvas: HTMLCanvasElement;\n  private downsampleCtx: CanvasRenderingContext2D;\n\n  // Shader attribute/uniform locations (shared between both shaders)\n  private positionLocation: number;\n  private texCoordLocation: number;\n  private resolutionLocation: WebGLUniformLocation;\n  private textureLocation: WebGLUniformLocation;\n  private directionLocation: WebGLUniformLocation;\n  private radiusLocation: WebGLUniformLocation;\n\n  // Cache for result canvases to avoid recreation\n  private resultCanvasCache: Map<string, HTMLCanvasElement> = new Map();\n  private maxCacheSize: number = 10;\n\n  // Vertex shader source (shared)\n  private vertexShaderSource = `\n    precision mediump float;\n    attribute vec2 a_position;\n    attribute vec2 a_texCoord;\n    uniform vec2 u_resolution;\n    varying vec2 v_texCoord;\n    \n    void main() {\n      vec2 zeroToOne = a_position / u_resolution;\n      vec2 zeroToTwo = zeroToOne * 2.0;\n      vec2 clipSpace = zeroToTwo - 1.0;\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n      v_texCoord = a_texCoord;\n    }\n  `;\n\n  // High quality fragment shader (49 samples)\n  private highQualityFragmentShaderSource = `\n    precision mediump float;\n    uniform sampler2D u_texture;\n    uniform vec2 u_resolution;\n    uniform vec2 u_direction;\n    uniform float u_radius;\n    varying vec2 v_texCoord;\n    \n    void main() {\n      vec2 texelSize = u_direction / u_resolution;\n      vec4 color = vec4(0.0);\n      float totalWeight = 0.0;\n      \n      // High quality blur with original 49 samples\n      float sigma = u_radius * 0.4;\n      float twoSigmaSquare = 2.0 * sigma * sigma;\n      \n      for (float i = -24.0; i <= 24.0; i++) {\n        if (abs(i) > u_radius) continue;\n        \n        vec2 offset = texelSize * i;\n        float weight = exp(-i * i / twoSigmaSquare);\n        \n        color += texture2D(u_texture, v_texCoord + offset) * weight;\n        totalWeight += weight;\n      }\n      \n      gl_FragColor = color / totalWeight;\n    }\n  `;\n\n  // Performance fragment shader (13 samples)\n  private performanceFragmentShaderSource = `\n    precision mediump float;\n    uniform sampler2D u_texture;\n    uniform vec2 u_resolution;\n    uniform vec2 u_direction;\n    uniform float u_radius;\n    varying vec2 v_texCoord;\n    \n    void main() {\n      vec2 texelSize = u_direction / u_resolution;\n      vec4 color = vec4(0.0);\n      float totalWeight = 0.0;\n      \n      // Performance blur with 13 samples\n      float sigma = u_radius * 0.9;\n      float twoSigmaSquare = 2.0 * sigma * sigma;\n      \n      for (float i = -12.0; i <= 12.0; i++) {\n        if (abs(i) > u_radius) continue;\n        \n        vec2 offset = texelSize * i;\n        float weight = exp(-i * i / twoSigmaSquare);\n        \n        color += texture2D(u_texture, v_texCoord + offset) * weight;\n        totalWeight += weight;\n      }\n      \n      gl_FragColor = color / totalWeight;\n    }\n  `;\n\n  private constructor() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = GameConstants.WIDTH;\n    this.canvas.height = GameConstants.HEIGHT;\n\n    // Initialize downsampling canvas\n    this.downsampleCanvas = document.createElement(\"canvas\");\n    this.downsampleCtx = this.downsampleCanvas.getContext(\"2d\");\n    if (!this.downsampleCtx) {\n      throw new Error(\"Failed to initialize downsample canvas context.\");\n    }\n\n    const context = this.canvas.getContext(\"webgl\", {\n      antialias: false,\n      depth: false,\n      stencil: false,\n      alpha: true,\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: false,\n      powerPreference: \"high-performance\",\n    }) as WebGLRenderingContext | null;\n\n    const experimentalContext = this.canvas.getContext(\"experimental-webgl\", {\n      antialias: false,\n      depth: false,\n      stencil: false,\n      alpha: true,\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: false,\n      powerPreference: \"high-performance\",\n    }) as WebGLRenderingContext | null;\n\n    this.gl = context || experimentalContext;\n    if (!this.gl) {\n      throw new Error(\"WebGL not supported\");\n    }\n\n    // Optimize GL state\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.disable(this.gl.CULL_FACE);\n    this.gl.disable(this.gl.BLEND);\n\n    this.initShaders();\n    this.initBuffers();\n    this.initTextures();\n  }\n\n  static getInstance(): WebGLBlurRenderer {\n    if (!WebGLBlurRenderer.instance) {\n      WebGLBlurRenderer.instance = new WebGLBlurRenderer();\n    }\n    return WebGLBlurRenderer.instance;\n  }\n\n  private initShaders(): void {\n    const vertexShader = this.createShader(\n      this.gl.VERTEX_SHADER,\n      this.vertexShaderSource,\n    );\n\n    // Create high quality shader program\n    const highQualityFragmentShader = this.createShader(\n      this.gl.FRAGMENT_SHADER,\n      this.highQualityFragmentShaderSource,\n    );\n\n    this.highQualityShaderProgram = this.gl.createProgram();\n    this.gl.attachShader(this.highQualityShaderProgram, vertexShader);\n    this.gl.attachShader(\n      this.highQualityShaderProgram,\n      highQualityFragmentShader,\n    );\n    this.gl.linkProgram(this.highQualityShaderProgram);\n\n    if (\n      !this.gl.getProgramParameter(\n        this.highQualityShaderProgram,\n        this.gl.LINK_STATUS,\n      )\n    ) {\n      throw new Error(\n        \"Unable to initialize high quality shader program: \" +\n          this.gl.getProgramInfoLog(this.highQualityShaderProgram),\n      );\n    }\n\n    // Create performance shader program\n    const performanceFragmentShader = this.createShader(\n      this.gl.FRAGMENT_SHADER,\n      this.performanceFragmentShaderSource,\n    );\n\n    this.performanceShaderProgram = this.gl.createProgram();\n    this.gl.attachShader(this.performanceShaderProgram, vertexShader);\n    this.gl.attachShader(\n      this.performanceShaderProgram,\n      performanceFragmentShader,\n    );\n    this.gl.linkProgram(this.performanceShaderProgram);\n\n    if (\n      !this.gl.getProgramParameter(\n        this.performanceShaderProgram,\n        this.gl.LINK_STATUS,\n      )\n    ) {\n      throw new Error(\n        \"Unable to initialize performance shader program: \" +\n          this.gl.getProgramInfoLog(this.performanceShaderProgram),\n      );\n    }\n\n    // Set default to high quality\n    this.currentShaderProgram = this.highQualityShaderProgram;\n    this.updateShaderProgram();\n  }\n\n  private updateShaderProgram(): void {\n    const useHighQuality = GameConstants.HIGH_QUALITY_BLUR;\n    const targetProgram = useHighQuality\n      ? this.highQualityShaderProgram\n      : this.performanceShaderProgram;\n\n    if (this.currentShaderProgram !== targetProgram) {\n      this.currentShaderProgram = targetProgram;\n      this.gl.useProgram(this.currentShaderProgram);\n\n      // Get attribute locations\n      this.positionLocation = this.gl.getAttribLocation(\n        this.currentShaderProgram,\n        \"a_position\",\n      );\n      this.texCoordLocation = this.gl.getAttribLocation(\n        this.currentShaderProgram,\n        \"a_texCoord\",\n      );\n\n      // Get uniform locations\n      this.resolutionLocation = this.gl.getUniformLocation(\n        this.currentShaderProgram,\n        \"u_resolution\",\n      );\n      this.textureLocation = this.gl.getUniformLocation(\n        this.currentShaderProgram,\n        \"u_texture\",\n      );\n      this.directionLocation = this.gl.getUniformLocation(\n        this.currentShaderProgram,\n        \"u_direction\",\n      );\n      this.radiusLocation = this.gl.getUniformLocation(\n        this.currentShaderProgram,\n        \"u_radius\",\n      );\n\n      // Set texture unit\n      this.gl.uniform1i(this.textureLocation, 0);\n    }\n  }\n\n  private createShader(type: number, source: string): WebGLShader {\n    const shader = this.gl.createShader(type);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const error = this.gl.getShaderInfoLog(shader);\n      this.gl.deleteShader(shader);\n      throw new Error(\"Unable to compile shader: \" + error);\n    }\n\n    return shader;\n  }\n\n  private initBuffers(): void {\n    // Position buffer\n    this.positionBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([\n        0,\n        0,\n        GameConstants.WIDTH,\n        0,\n        0,\n        GameConstants.HEIGHT,\n        0,\n        GameConstants.HEIGHT,\n        GameConstants.WIDTH,\n        0,\n        GameConstants.WIDTH,\n        GameConstants.HEIGHT,\n      ]),\n      this.gl.STATIC_DRAW,\n    );\n\n    // Texture coordinate buffer\n    this.texCoordBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texCoordBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]),\n      this.gl.STATIC_DRAW,\n    );\n  }\n\n  private initTextures(): void {\n    this.texture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_WRAP_S,\n      this.gl.CLAMP_TO_EDGE,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_WRAP_T,\n      this.gl.CLAMP_TO_EDGE,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_MIN_FILTER,\n      this.gl.LINEAR,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_MAG_FILTER,\n      this.gl.LINEAR,\n    );\n\n    this.tempTexture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.tempTexture);\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_WRAP_S,\n      this.gl.CLAMP_TO_EDGE,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_WRAP_T,\n      this.gl.CLAMP_TO_EDGE,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_MIN_FILTER,\n      this.gl.LINEAR,\n    );\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_MAG_FILTER,\n      this.gl.LINEAR,\n    );\n\n    this.framebuffer = this.gl.createFramebuffer();\n    this.tempFramebuffer = this.gl.createFramebuffer();\n  }\n\n  // Optimized texture allocation/update method\n  private updateTexture(\n    texture: WebGLTexture,\n    width: number,\n    height: number,\n    currentWidth: number,\n    currentHeight: number,\n    data: HTMLCanvasElement | null = null,\n  ): { width: number; height: number } {\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n    // Only reallocate if dimensions changed\n    if (currentWidth !== width || currentHeight !== height) {\n      // Reallocate texture with new dimensions\n      if (data) {\n        // Use 6-parameter overload for HTMLCanvasElement\n        this.gl.texImage2D(\n          this.gl.TEXTURE_2D,\n          0,\n          this.gl.RGBA,\n          this.gl.RGBA,\n          this.gl.UNSIGNED_BYTE,\n          data,\n        );\n      } else {\n        // Use 9-parameter overload for null data\n        this.gl.texImage2D(\n          this.gl.TEXTURE_2D,\n          0,\n          this.gl.RGBA,\n          width,\n          height,\n          0,\n          this.gl.RGBA,\n          this.gl.UNSIGNED_BYTE,\n          null,\n        );\n      }\n      return { width, height };\n    } else if (data) {\n      // Reuse existing texture, just update the content\n      this.gl.texSubImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        data,\n      );\n      return { width: currentWidth, height: currentHeight };\n    }\n\n    return { width: currentWidth, height: currentHeight };\n  }\n\n  private getCachedCanvas(width: number, height: number): HTMLCanvasElement {\n    const key = `${width}x${height}`;\n    let canvas = this.resultCanvasCache.get(key);\n\n    if (!canvas) {\n      canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n\n      // Manage cache size\n      if (this.resultCanvasCache.size >= this.maxCacheSize) {\n        const firstKey = this.resultCanvasCache.keys().next().value;\n        this.resultCanvasCache.delete(firstKey);\n      }\n\n      this.resultCanvasCache.set(key, canvas);\n    }\n\n    return canvas;\n  }\n\n  /**\n   * Apply blur with downsampling and texSubImage2D optimization\n   */\n  applyBlur(\n    sourceCanvas: HTMLCanvasElement,\n    blurRadius: number,\n  ): HTMLCanvasElement {\n    const originalWidth = sourceCanvas.width;\n    const originalHeight = sourceCanvas.height;\n\n    // Calculate downsampled dimensions\n    const downsampleFactor = GameConstants.BLUR_DOWNSAMPLE_FACTOR;\n    const downsampledWidth = Math.max(\n      1,\n      Math.floor(originalWidth / downsampleFactor),\n    );\n    const downsampledHeight = Math.max(\n      1,\n      Math.floor(originalHeight / downsampleFactor),\n    );\n\n    // Prepare downsampled canvas\n    if (\n      this.downsampleCanvas.width !== downsampledWidth ||\n      this.downsampleCanvas.height !== downsampledHeight\n    ) {\n      this.downsampleCanvas.width = downsampledWidth;\n      this.downsampleCanvas.height = downsampledHeight;\n    }\n\n    // Downsample the source canvas using canvas 2D (GPU accelerated)\n    this.downsampleCtx.clearRect(0, 0, downsampledWidth, downsampledHeight);\n    this.downsampleCtx.drawImage(\n      sourceCanvas,\n      0,\n      0,\n      originalWidth,\n      originalHeight,\n      0,\n      0,\n      downsampledWidth,\n      downsampledHeight,\n    );\n\n    // Apply blur to the downsampled canvas\n    const blurredDownsampledCanvas = this.applyBlurToCanvas(\n      this.downsampleCanvas,\n      blurRadius / downsampleFactor, // Adjust blur radius for smaller canvas\n      downsampledWidth,\n      downsampledHeight,\n    );\n\n    // Return result at original size - the caller will handle upscaling\n    // For now, we'll create a canvas at original size and let the GPU upscale\n    const resultCanvas = this.getCachedCanvas(originalWidth, originalHeight);\n    const resultCtx = resultCanvas.getContext(\"2d\");\n    resultCtx.clearRect(0, 0, originalWidth, originalHeight);\n\n    // Use bilinear filtering for upscaling (GPU accelerated)\n    resultCtx.imageSmoothingEnabled = true;\n    resultCtx.imageSmoothingQuality = \"high\";\n    resultCtx.drawImage(\n      blurredDownsampledCanvas,\n      0,\n      0,\n      downsampledWidth,\n      downsampledHeight,\n      0,\n      0,\n      originalWidth,\n      originalHeight,\n    );\n\n    return resultCanvas;\n  }\n\n  /**\n   * Internal method to apply blur to a specific canvas\n   */\n  private applyBlurToCanvas(\n    sourceCanvas: HTMLCanvasElement,\n    blurRadius: number,\n    width: number,\n    height: number,\n  ): HTMLCanvasElement {\n    // Reduce the multiplier significantly for bloom visibility\n    const enhancedRadius = blurRadius * 1;\n\n    // Update shader program if quality setting changed\n    const expectedShader = GameConstants.HIGH_QUALITY_BLUR\n      ? this.highQualityShaderProgram\n      : this.performanceShaderProgram;\n\n    if (this.currentShaderProgram !== expectedShader) {\n      this.updateShaderProgram();\n    }\n\n    if (this.canvas.width !== width || this.canvas.height !== height) {\n      this.canvas.width = width;\n      this.canvas.height = height;\n      this.gl.viewport(0, 0, width, height);\n\n      // Update position buffer for new dimensions\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n      this.gl.bufferData(\n        this.gl.ARRAY_BUFFER,\n        new Float32Array([\n          0,\n          0,\n          width,\n          0,\n          0,\n          height,\n          0,\n          height,\n          width,\n          0,\n          width,\n          height,\n        ]),\n        this.gl.STATIC_DRAW,\n      );\n    }\n\n    // OPTIMIZED: Use texSubImage2D to avoid GPU memory reallocation\n    const updatedTexture = this.updateTexture(\n      this.texture,\n      width,\n      height,\n      this.textureWidth,\n      this.textureHeight,\n      sourceCanvas,\n    );\n    this.textureWidth = updatedTexture.width;\n    this.textureHeight = updatedTexture.height;\n\n    const updatedTempTexture = this.updateTexture(\n      this.tempTexture,\n      width,\n      height,\n      this.tempTextureWidth,\n      this.tempTextureHeight,\n      null,\n    );\n    this.tempTextureWidth = updatedTempTexture.width;\n    this.tempTextureHeight = updatedTempTexture.height;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    this.gl.enableVertexAttribArray(this.positionLocation);\n    this.gl.vertexAttribPointer(\n      this.positionLocation,\n      2,\n      this.gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texCoordBuffer);\n    this.gl.enableVertexAttribArray(this.texCoordLocation);\n    this.gl.vertexAttribPointer(\n      this.texCoordLocation,\n      2,\n      this.gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n\n    this.gl.uniform2f(this.resolutionLocation, width, height);\n    this.gl.uniform1f(this.radiusLocation, enhancedRadius);\n\n    // First pass: horizontal blur\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.tempFramebuffer);\n    this.gl.framebufferTexture2D(\n      this.gl.FRAMEBUFFER,\n      this.gl.COLOR_ATTACHMENT0,\n      this.gl.TEXTURE_2D,\n      this.tempTexture,\n      0,\n    );\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    this.gl.uniform2f(this.directionLocation, 1.0, 0.0);\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n\n    // Second pass: vertical blur\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n    this.gl.framebufferTexture2D(\n      this.gl.FRAMEBUFFER,\n      this.gl.COLOR_ATTACHMENT0,\n      this.gl.TEXTURE_2D,\n      this.texture,\n      0,\n    );\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.tempTexture);\n    this.gl.uniform2f(this.directionLocation, 0.0, 1.0);\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n\n    // Final pass: render to screen\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n\n    return this.canvas;\n  }\n\n  clearCache(): void {\n    this.resultCanvasCache.clear();\n  }\n\n  dispose(): void {\n    this.clearCache();\n\n    if (this.gl) {\n      this.gl.deleteProgram(this.highQualityShaderProgram);\n      this.gl.deleteProgram(this.performanceShaderProgram);\n      this.gl.deleteBuffer(this.positionBuffer);\n      this.gl.deleteBuffer(this.texCoordBuffer);\n      this.gl.deleteTexture(this.texture);\n      this.gl.deleteTexture(this.tempTexture);\n      this.gl.deleteFramebuffer(this.framebuffer);\n      this.gl.deleteFramebuffer(this.tempFramebuffer);\n    }\n  }\n}\n","import { Game } from \"../game\";\nimport { statsTracker } from \"../game/stats\";\n\nexport class XPCounter {\n  private xp: number;\n  private level: number;\n\n  constructor() {\n    this.xp = 0;\n    this.level = 1;\n  }\n\n  static draw(delta: number) {\n    const xp = statsTracker.getXp();\n    // draw the xp counter\n\n    Game.ctx.save();\n\n    Game.ctx.fillStyle = \"rgba(255, 255, 0, 1)\";\n    Game.ctx.globalAlpha = 0.1;\n    Game.fillText(`XP: ${xp}`, 10, 10);\n    Game.ctx.restore();\n  }\n}\n","import { Item } from \"../item/item\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Equippable } from \"../item/equippable\";\nimport { Armor } from \"../item/armor\";\nimport { Coin } from \"../item/coin\";\nimport { Weapon } from \"../item/weapon/weapon\";\nimport { Room } from \"../room/room\";\nimport { Usable } from \"../item/usable/usable\";\nimport { Player } from \"../player/player\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { Input } from \"../game/input\";\nimport { Pickaxe } from \"../item/tool/pickaxe\";\nimport { MuteButton } from \"../gui/muteButton\";\nimport { Menu } from \"../gui/menu\";\nimport { XPCounter } from \"../gui/xpCounter\";\n\nlet OPEN_TIME = 100; // milliseconds\n// Dark gray color used for the background of inventory slots\nlet FILL_COLOR = \"#5a595b\";\n// Very dark blue-gray color used for outlines and borders\nlet OUTLINE_COLOR = \"#292c36\";\n// Light blue color used to indicate equipped items\nlet EQUIP_COLOR = \"#85a8e6\";\n// White color used for the outer border of the inventory\nlet FULL_OUTLINE = \"white\";\n\nexport class Inventory {\n  player: Player;\n  items: Array<Item | null>;\n  rows = 4;\n  cols = 5;\n  selX = 0;\n  selY = 0;\n  game: Game;\n  isOpen: boolean = false;\n  openTime: number = Date.now();\n  coins: number = 0;\n  equipAnimAmount: Array<number>;\n  weapon: Weapon | null = null;\n  private _expansion: number = 0;\n  grabbedItem: Item | null = null;\n  private _mouseDownStartX: number | null = null;\n  private _mouseDownStartY: number | null = null;\n  private _mouseDownItem: Item | null = null;\n  private _wasHoldDetected: boolean = false;\n  private _isDragging: boolean = false;\n  private _dragStartItem: Item | null = null;\n  private _dragStartSlot: number | null = null;\n  private itemEquipAnimations: Map<Item, number> = new Map();\n  foundItems: Item[] = [];\n\n  dragEndTime: number = Date.now();\n\n  closeTime: number = Date.now();\n\n  // New state for using items on other items\n  private usingItem: Usable | null = null;\n  private usingItemIndex: number | null = null;\n  mostRecentInput: \"mouse\" | \"keyboard\" = \"keyboard\";\n\n  // Static variables for inventory button position\n  private buttonY: number;\n  private buttonX: number;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.player = player;\n\n    this.buttonX =\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE;\n    this.buttonY = 10;\n\n    Input.mouseDownListeners.push((x, y, button) =>\n      this.handleMouseDown(x, y, button),\n    );\n    Input.mouseUpListeners.push((x, y, button) =>\n      this.handleMouseUp(x, y, button),\n    );\n\n    Input.holdCallback = () => this.onHoldDetected();\n\n    this.items = new Array<Item | null>(\n      (this.rows + this._expansion) * this.cols,\n    ).fill(null);\n    this.equipAnimAmount = new Array<number>(\n      (this.rows + this._expansion) * this.cols,\n    ).fill(0);\n    let a = (i: Item | null) => {\n      if (i === null) return;\n      if (i instanceof Equippable) {\n        i.setWielder(this.player);\n      }\n      if (i instanceof Weapon && this.weapon === null) {\n        i.toggleEquip();\n        this.weapon = i;\n        //this.player.weapon = this.weapon;\n      }\n\n      this.addItem(i);\n    };\n    let startingInv = GameConstants.DEVELOPER_MODE\n      ? GameConstants.STARTING_DEV_INVENTORY\n      : GameConstants.STARTING_INVENTORY;\n\n    startingInv.forEach((item) => {\n      a(new item({ game: this.game } as Room, 0, 0));\n    });\n  }\n\n  clear = () => {\n    this.items.fill(null);\n    this.equipAnimAmount.fill(0);\n  };\n\n  get isDragging() {\n    return this._isDragging;\n  }\n\n  open = () => {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) this.openTime = Date.now();\n  };\n\n  toggleOpen = () => {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  close = () => {\n    if (!this.isOpen) return;\n    this.isOpen = false;\n    this.closeTime = Date.now();\n    if (this.selY > 0) {\n      this.selY = 0;\n    }\n    this.usingItem = null;\n    this.usingItemIndex = null;\n  };\n\n  left = () => {\n    if (this.selX > 0) {\n      this.selX--;\n    }\n  };\n\n  right = () => {\n    if (this.selX < this.cols - 1) {\n      this.selX++;\n    }\n  };\n\n  up = () => {\n    if (this.selY > 0) {\n      this.selY--;\n    }\n  };\n\n  down = () => {\n    if (this.selY < this.rows + this._expansion - 1) {\n      this.selY++;\n    }\n  };\n\n  space = () => {\n    this.itemUse();\n  };\n\n  itemAtSelectedSlot = (): Item | null => {\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) {\n      return null;\n    }\n    return this.items[index];\n  };\n\n  getIndexOfItem = (item: Item): number => {\n    if (item === null) return -1;\n    return this.items.indexOf(item);\n  };\n\n  itemUse = () => {\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) return;\n    const item = this.items[index];\n\n    if (this.usingItem) {\n      // Attempt to use 'usingItem' on the currently selected item\n      if (item === null) {\n        // Clicked on empty slot; cancel the using state\n        this.usingItem = null;\n        this.usingItemIndex = null;\n        return;\n      }\n      // Attempt to use on other\n      if (item instanceof Item) {\n        this.usingItem.useOnOther(this.player, item);\n      }\n      // Exit tryingToUse state\n      this.usingItem = null;\n      this.usingItemIndex = null;\n    } else {\n      // Not in tryingToUse state\n      if (item instanceof Usable) {\n        if (item.canUseOnOther) {\n          // Enter tryingToUse state\n          this.usingItem = item;\n          this.usingItemIndex = index;\n        } else {\n          // Use normally\n          item.onUse(this.player);\n          // Optionally remove the item\n          // this.items[index] = null;\n        }\n      } else if (item instanceof Equippable) {\n        // Existing equipping logic\n        item.toggleEquip();\n        if (item instanceof Weapon) {\n          if (item.broken) return;\n          this.weapon = item.equipped ? item : null;\n        }\n        if (item.equipped) {\n          this.items.forEach((i, idx) => {\n            if (\n              i instanceof Equippable &&\n              i !== item &&\n              !item.coEquippable(i)\n            ) {\n              i.equipped = false;\n              this.equipAnimAmount[idx] = 0;\n            }\n          });\n        }\n      }\n    }\n  };\n\n  leftQuickbar = () => {\n    this.mostRecentInput = \"keyboard\";\n\n    this.left();\n  };\n\n  rightQuickbar = () => {\n    this.mostRecentInput = \"keyboard\";\n    this.right();\n  };\n\n  spaceQuickbar = () => {\n    this.mostRecentInput = \"keyboard\";\n    this.itemUse();\n  };\n\n  mouseMove = () => {\n    this.mostRecentInput = \"mouse\";\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const bounds = this.isPointInInventoryBounds(x, y);\n\n    if (bounds.inBounds) {\n      const s = this.isOpen\n        ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n        : 18;\n      const b = 2;\n      const g = -2;\n\n      const oldSelX = this.selX;\n      const oldSelY = this.selY;\n\n      this.selX = Math.max(\n        0,\n        Math.min(\n          Math.floor((x - bounds.startX) / (s + 2 * b + g)),\n          this.cols - 1,\n        ),\n      );\n      this.selY = this.isOpen\n        ? Math.max(\n            0,\n            Math.min(\n              Math.floor((y - bounds.startY) / (s + 2 * b + g)),\n              this.rows + this._expansion - 1,\n            ),\n          )\n        : 0;\n\n      if (oldSelX !== this.selX || oldSelY !== this.selY) {\n        // Optional: Handle selection change\n      }\n    }\n  };\n\n  moveItemToSlot = (\n    item: Item | null,\n    index: number,\n    otherItem: Item | null,\n    otherIndex: number,\n  ) => {\n    if (item === null) return;\n\n    // Preserve animation states before moving\n    const itemAnim = this.equipAnimAmount[index];\n    const otherAnim = otherItem ? this.equipAnimAmount[otherIndex] : 0;\n\n    if (otherItem === null) {\n      this.items[index] = item;\n      this.equipAnimAmount[index] = this.itemEquipAnimations.get(item) ?? 0;\n    } else {\n      this.items[index] = otherItem;\n      this.items[otherIndex] = item;\n      this.equipAnimAmount[index] =\n        this.itemEquipAnimations.get(otherItem) ?? 0;\n      this.equipAnimAmount[otherIndex] =\n        this.itemEquipAnimations.get(item) ?? 0;\n    }\n  };\n\n  grabItem = (item: Item) => {\n    if (item === null) {\n      return;\n    }\n    if (this.grabbedItem !== null) {\n      return;\n    }\n\n    // Remove the item from its slot when grabbed\n    const index = this.getIndexOfItem(item);\n\n    if (index !== -1) {\n      this.items[index] = null;\n      this.grabbedItem = item;\n    } else {\n    }\n  };\n\n  releaseItem = () => {\n    if (this.grabbedItem === null) {\n      return;\n    }\n\n    const targetIndex = this.selX + this.selY * this.cols;\n    const existingItem = this.items[targetIndex];\n\n    // If target slot is empty, place item there\n    if (existingItem === null) {\n      this.items[targetIndex] = this.grabbedItem;\n    } else {\n      // Swap items\n      this.items[targetIndex] = this.grabbedItem;\n    }\n\n    this.grabbedItem = null;\n  };\n\n  drawDraggedItem = (delta: number) => {\n    if (this.grabbedItem === null) return;\n    const { x, y } = MouseCursor.getInstance().getPosition();\n\n    const drawX = Math.round(x - 0.5 * GameConstants.TILESIZE);\n    const drawY = Math.round(y - 0.5 * GameConstants.TILESIZE);\n    const drawXScaled = drawX / GameConstants.TILESIZE;\n    const drawYScaled = drawY / GameConstants.TILESIZE;\n    this.grabbedItem.drawIcon(delta, drawXScaled, drawYScaled);\n  };\n\n  drop = () => {\n    if (!this.isOpen) return;\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) return;\n    const item = this.items[index];\n    if (item === null) return;\n    this.dropItem(item, index);\n  };\n\n  dropItem = (item: Item, index: number) => {\n    item.level = this.game.levels[this.player.depth].rooms[this.player.levelID];\n    item.x = this.player.x;\n    item.y = this.player.y;\n    item.alpha = 1;\n    item.pickedUp = false;\n    item.dropFromInventory();\n    this.equipAnimAmount[index] = 0;\n    item.drawableY = this.player.y;\n    this.game.levels[this.player.depth].rooms[this.player.levelID].items.push(\n      item,\n    );\n    this.items[index] = null;\n  };\n\n  dropFromInventory = () => {\n    // Intentionally left blank or implement if needed\n  };\n\n  hasItem = <T extends Item>(itemType: new (...args: any[]) => T): T | null => {\n    return this.items.find((i): i is T => i instanceof itemType) || null;\n  };\n\n  hasItemCount = (item: Item | null): boolean => {\n    if (item === null) return false;\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\n    return this.items.some(\n      (i) =>\n        i !== null &&\n        i.constructor === item.constructor &&\n        i.stackCount >= item.stackCount,\n    );\n  };\n\n  subtractItemCount = (item: Item | null) => {\n    if (item === null) return;\n    if (item instanceof Coin) {\n      this.subtractCoins(item.stackCount);\n      return;\n    }\n    this.items.forEach((i, idx) => {\n      if (i === null) return;\n      if (i.constructor === item.constructor) {\n        i.stackCount -= item.stackCount;\n        if (i.stackCount <= 0) {\n          this.items[idx] = null;\n        }\n      }\n    });\n  };\n\n  subtractItem = (item: Item | null, count: number) => {\n    if (item === null) return;\n    if (item instanceof Coin) {\n      this.subtractCoins(item.stackCount);\n      return;\n    }\n    this.items.forEach((i, idx) => {\n      if (i === null) return;\n      if (i.constructor === item.constructor) {\n        i.stackCount -= count;\n        if (i.stackCount <= 0) {\n          this.items[idx] = null;\n        }\n      }\n    });\n  };\n\n  coinCount = (): number => {\n    return this.coins;\n  };\n\n  subtractCoins = (n: number) => {\n    this.coins = Math.max(0, this.coins - n);\n  };\n\n  addCoins = (n: number) => {\n    this.coins += n;\n  };\n\n  isFull = (): boolean => {\n    return (\n      this.items.filter((i) => i !== null).length >=\n      (this.rows + this._expansion) * this.cols\n    );\n  };\n\n  addItem = (item: Item | null, stackCount: number | null = null): boolean => {\n    if (item === null) return false;\n    if (item instanceof Coin) {\n      this.coins += item.stackCount;\n      return true;\n    }\n    if (item instanceof Equippable) {\n      item.setWielder(this.player);\n    }\n    if (item.stackable) {\n      if (stackCount) {\n        item.stackCount = stackCount;\n      }\n      for (let i = 0; i < this.items.length; i++) {\n        if (\n          this.items[i] !== null &&\n          this.items[i]!.constructor === item.constructor\n        ) {\n          this.items[i]!.stackCount += item.stackCount;\n          return true;\n        }\n      }\n    }\n    if (!this.isFull()) {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i] === null) {\n          this.items[i] = item;\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  removeItem = (item: Item | null) => {\n    if (item === null) return;\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items[index] = null;\n    }\n  };\n\n  canMine = (): boolean => {\n    return this.hasItem(Pickaxe) !== null;\n  };\n\n  getArmor = (): Armor | null => {\n    return (\n      this.items.find((i): i is Armor => i instanceof Armor && i.equipped) ||\n      null\n    );\n  };\n\n  hasWeapon = (): boolean => {\n    return this.weapon !== null;\n  };\n\n  getWeapon = (): Weapon | null => {\n    return this.weapon;\n  };\n\n  tick = () => {\n    this.items.forEach((i) => {\n      if (i !== null) i.tickInInventory();\n    });\n\n    // Check for drag initiation\n    this.checkForDragStart();\n  };\n\n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\n    // Returns y value for next line\n    if (text === \"\") return y;\n    let words = text.split(\" \");\n    let line = \"\";\n\n    while (words.length > 0) {\n      if (Game.measureText(line + words[0]).width > maxWidth) {\n        Game.fillText(line, x, y);\n        line = \"\";\n        y += 8;\n      } else {\n        if (line !== \"\") line += \" \";\n        line += words[0];\n        words.splice(0, 1);\n      }\n    }\n    if (line.trim() !== \"\") {\n      Game.fillText(line, x, y);\n      y += 8;\n    }\n    return y;\n  };\n\n  drawCoins = (delta: number) => {\n    let coinTileX = 19;\n    if (this.coins >= 3) coinTileX = 20;\n    if (this.coins >= 7) coinTileX = 21;\n\n    // Calculate the right edge of the quickbar\n    const quickbarStartX = this.getQuickbarStartX();\n    const s = 18; // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const quickbarWidth = this.cols * (s + 2 * b + g) - g;\n    const quickbarRightEdge = quickbarStartX + quickbarWidth;\n    // Position coin slightly to the right of the quickbar\n    let coinX = (quickbarRightEdge - 5) / GameConstants.TILESIZE - 1;\n    let coinY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.3;\n\n    // Ensure coin doesn't go off the right edge of the screen\n    const maxCoinX = (GameConstants.WIDTH - 36) / GameConstants.TILESIZE;\n    if (coinX > maxCoinX) {\n      coinX = maxCoinX;\n    }\n\n    if (GameConstants.WIDTH < 180) {\n      coinY -= 1.25;\n      coinX += 1.15;\n    } else {\n      coinX += 1.5;\n    }\n    if (GameConstants.WIDTH < 145) {\n      coinX -= 1.15;\n    }\n\n    Game.drawItem(coinTileX, 0, 1, 2, coinX, coinY - 1, 1, 2);\n\n    const countText = `${this.coins}`;\n    const width = Game.measureText(countText).width;\n    const countX = 10;\n    const countY = 9;\n\n    Game.fillTextOutline(\n      countText,\n      coinX * GameConstants.TILESIZE +\n        countX -\n        Game.measureText(this.coins.toString()).width +\n        5,\n      coinY * GameConstants.TILESIZE + countY + 2,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n    /*\n    const turnCountText = `${this.player.turnCount}`;\n    Game.fillTextOutline(\n      turnCountText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY - 15,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n    */\n  };\n\n  pointInside = (x: number, y: number): boolean => {\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = this.cols * (s + 2 * b + g) - g;\n    const height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\n\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n    const startY = this.isOpen\n      ? Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob\n      : GameConstants.HEIGHT - (s + 2 * b) - 5 - ob;\n    const checkHeight = this.isOpen ? height + 2 * ob : s + 2 * b + 2 * ob;\n\n    return (\n      x >= startX &&\n      x <= startX + width + 2 * ob &&\n      y >= startY &&\n      y <= startY + checkHeight\n    );\n  };\n\n  drawQuickbar = (delta: number) => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\n\n    const s = 18; // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 1; // + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\n    const height = Math.floor(s + 2 * b);\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n    const startY = Math.floor(GameConstants.HEIGHT - height - 2);\n\n    // Draw main background\n    /*\n    Game.ctx.fillStyle = FULL_OUTLINE;\n    Game.ctx.fillRect(startX - ob, startY - 1, width + 2, height + 2);\n    */\n    //Game.ctx.globalCompositeOperation = \"xor\";\n\n    // Draw highlighted background for selected item only if mouse is in bounds\n    if (isInBounds || this.mostRecentInput === \"keyboard\") {\n      /*\n      Game.ctx.fillRect(\n        Math.floor(startX + this.selX * (s + 2 * b + g) - hg - ob),\n        Math.floor(startY - hg - ob),\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\n      );\n      */\n    }\n\n    // Draw individual item slots\n    for (let xIdx = 0; xIdx < this.cols; xIdx++) {\n      // Skip drawing normal background and icon if this is the selected slot\n      const idx = xIdx;\n\n      // Draw slot background\n      if (xIdx !== this.selX) {\n        Game.ctx.fillStyle = FILL_COLOR;\n        Game.ctx.fillRect(\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\n          Math.floor(startY + b),\n          Math.floor(s),\n          Math.floor(s),\n        );\n\n        Game.ctx.clearRect(\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\n          Math.floor(startY + b + 1),\n          Math.floor(s - 2),\n          Math.floor(s - 2),\n        );\n\n        // Draw equip animation (this should always show)\n        Game.ctx.fillStyle = EQUIP_COLOR;\n        Game.ctx.globalAlpha = 0.3;\n        const yOff = Math.floor(s * (1 - this.equipAnimAmount[idx]));\n        Game.ctx.fillRect(\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\n          Math.floor(startY + b + yOff),\n          Math.floor(s),\n          Math.floor(s - yOff),\n        );\n        Game.ctx.globalAlpha = 1;\n        /*\n        Game.ctx.clearRect(\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\n          Math.floor(startY + b + 1),\n          Math.floor(s - 2),\n          Math.floor(s - 2),\n        );\n        */\n      }\n\n      // Draw item icon if exists\n      if (idx < this.items.length && this.items[idx] !== null) {\n        const drawX =\n          startX +\n          xIdx * (s + 2 * b + g) +\n          b +\n          Math.floor(0.5 * s) -\n          0.5 * GameConstants.TILESIZE;\n        const drawY =\n          startY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawXScaled = drawX / GameConstants.TILESIZE;\n        const drawYScaled = drawY / GameConstants.TILESIZE;\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\n      }\n    }\n\n    // Draw selection box only if mouse is in bounds\n    if (true) {\n      const selStartX = Math.floor(startX + this.selX * (s + 2 * b + g));\n      const selStartY = Math.floor(startY);\n      /*\n      // Outer selection box (dark)\n      Game.ctx.fillStyle = OUTLINE_COLOR;\n      Game.ctx.fillRect(\n        selStartX - hg,\n        selStartY - hg,\n        s + 2 * b + 2 * hg,\n        s + 2 * b + 2 * hg,\n      );\n      */\n\n      // Inner selection box (light grey)\n      Game.ctx.fillStyle = FILL_COLOR;\n      Game.ctx.fillRect(\n        Math.floor(selStartX + b - hg),\n        Math.floor(selStartY + b - hg),\n        Math.floor(s + 2 * hg),\n        Math.floor(s + 2 * hg),\n      );\n\n      Game.ctx.clearRect(\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b),\n        Math.floor(startY + b),\n        Math.floor(s),\n        Math.floor(s),\n      );\n\n      // Draw equip animation for selected slot with highlight\n      const idx = this.selX;\n      Game.ctx.fillStyle = EQUIP_COLOR;\n      Game.ctx.globalAlpha = 0.3;\n      const yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[idx]);\n      Game.ctx.fillRect(\n        Math.round(startX + this.selX * (s + 2 * b + g) + b - hg),\n        Math.round(startY + b + yOff - hg),\n        Math.round(s + 2 * hg),\n        Math.round(s + 2 * hg - yOff),\n      );\n      Game.ctx.globalAlpha = 1;\n\n      /*\n      Game.ctx.clearRect(\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b),\n        Math.floor(startY + b),\n        Math.floor(s),\n        Math.floor(s),\n      );\n      */\n      this.drawUsingItem(delta, startX, startY, s, b, g);\n\n      // Redraw the selected item\n      if (idx < this.items.length && this.items[idx] !== null) {\n        const drawX =\n          selStartX + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawY =\n          selStartY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawXScaled = drawX / GameConstants.TILESIZE;\n        const drawYScaled = drawY / GameConstants.TILESIZE;\n\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\n      }\n      this.drawUsingItem(delta, startX, startY, s, b, g);\n    }\n    this.drawUsingItem(delta, startX, startY, s, b, g);\n  };\n\n  drawUsingItem = (\n    delta: number,\n    startX: number,\n    startY: number,\n    s: number,\n    b: number,\n    g: number,\n  ) => {\n    // Highlight the usingItem's slot if in using state and it's different from current selection\n    Game.ctx.globalCompositeOperation = \"source-over\";\n    if (this.usingItem && this.usingItemIndex !== null) {\n      const usingX = this.usingItemIndex % this.cols;\n      const usingY = Math.floor(this.usingItemIndex / this.cols);\n      const highlightStartX = startX + usingX * (s + 2 * b + g);\n      const highlightStartY = startY + usingY * (s + 2 * b + g);\n\n      Game.ctx.strokeStyle = \"yellow\"; // Choose a distinct color for using item\n      Game.ctx.lineWidth = 2;\n      Game.ctx.strokeRect(\n        highlightStartX,\n        highlightStartY,\n        s + 2 * b,\n        s + 2 * b,\n      );\n      Game.ctx.lineWidth = 1; // Reset line width\n    }\n  };\n\n  updateEquipAnimAmount = (delta: number) => {\n    this.equipAnimAmount.forEach((amount, idx) => {\n      const item = this.items[idx];\n      if (item instanceof Equippable) {\n        let targetAmount = item.equipped ? 1 : 0;\n        let currentAmount = this.itemEquipAnimations.get(item) ?? amount;\n\n        currentAmount += 0.2 * delta * (targetAmount - currentAmount);\n        currentAmount = Math.max(0, Math.min(1, currentAmount));\n\n        this.itemEquipAnimations.set(item, currentAmount);\n        this.equipAnimAmount[idx] = currentAmount;\n      } else {\n        this.equipAnimAmount[idx] = 0;\n        if (item) this.itemEquipAnimations.delete(item);\n      }\n    });\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.imageSmoothingEnabled = false;\n    Game.ctx.imageSmoothingQuality = \"low\";\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\n    const s = Math.floor(\n      Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\n    ); // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const invRows = Math.floor(this.rows + this._expansion);\n    const ob = 1; // outer border\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\n    const height = Math.floor(invRows * (s + 2 * b + g) - g);\n    const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n    const mainBgY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\n\n    // Draw coins and quickbar (these are always visible)\n    this.drawCoins(delta);\n    this.drawQuickbar(delta);\n    this.updateEquipAnimAmount(delta);\n    this.drawInventoryButton(delta);\n    Menu.drawOpenMenuButton();\n    XPCounter.draw(delta);\n\n    if (this.isOpen) {\n      // Draw semi-transparent background for full inventory\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n\n      // Define dimensions and styling variables (similar to drawQuickbar)\n      const s = Math.floor(\n        Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\n      ); // size of box\n      const b = 2; // border\n      const g = -2; // gap\n      const hg = Math.floor(\n        3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5),\n      ); // highlighted growth\n      const invRows = this.rows + this._expansion;\n      const ob = 1; // outer border\n      const width = Math.floor(this.cols * (s + 2 * b + g) - g);\n      const height = Math.floor(invRows * (s + 2 * b + g) - g);\n\n      // Draw main inventory background (similar to drawQuickbar)\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n      const mainBgY =\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\n      Game.ctx.fillRect(mainBgX, mainBgY, width + 2 * ob, height + 2 * ob);\n\n      // Draw highlighted background for selected item only if mouse is in bounds\n      if (isInBounds || this.mostRecentInput === \"keyboard\") {\n        const highlightX =\n          Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g),\n          ) -\n          hg -\n          ob;\n        const highlightY =\n          Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g),\n          ) -\n          hg -\n          ob;\n\n        Game.ctx.fillRect(\n          highlightX,\n          highlightY,\n          s + 2 * b + 2 * hg + 2 * ob,\n          s + 2 * b + 2 * hg + 2 * ob,\n        );\n      }\n\n      // Draw individual inventory slots (similar to drawQuickbar, but for all rows)\n      for (let xIdx = 0; xIdx < this.cols; xIdx++) {\n        for (let yIdx = 0; yIdx < this.rows + this._expansion; yIdx++) {\n          // Draw slot outline\n          const slotX = Math.round(\n            0.5 * GameConstants.WIDTH - 0.5 * width + xIdx * (s + 2 * b + g),\n          );\n          const slotY = Math.round(\n            0.5 * GameConstants.HEIGHT - 0.5 * height + yIdx * (s + 2 * b + g),\n          );\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(slotX, slotY, s + 2 * b, s + 2 * b);\n\n          // Draw slot background\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(slotX + b, slotY + b, s, s);\n\n          // Draw equip animation (unique to full inventory view)\n          const idx = xIdx + yIdx * this.cols;\n          Game.ctx.fillStyle = EQUIP_COLOR;\n          const yOff = Math.round(s * (1 - this.equipAnimAmount[idx]));\n          Game.ctx.fillRect(slotX + b, slotY + b + yOff, s, s - yOff);\n\n          // Draw item icon if exists\n          if (idx < this.items.length && this.items[idx] !== null) {\n            const drawX = Math.round(\n              0.5 * GameConstants.WIDTH -\n                0.5 * width +\n                xIdx * (s + 2 * b + g) +\n                b +\n                Math.floor(0.5 * s) -\n                0.5 * GameConstants.TILESIZE,\n            );\n            const drawY = Math.round(\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                yIdx * (s + 2 * b + g) +\n                b +\n                Math.floor(0.5 * s) -\n                0.5 * GameConstants.TILESIZE,\n            );\n            const drawXScaled = drawX / GameConstants.TILESIZE;\n            const drawYScaled = drawY / GameConstants.TILESIZE;\n\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n      }\n\n      // Draw item icons after animation delay (similar to drawQuickbar, but for all items)\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        this.items.forEach((item, idx) => {\n          if (item === null) return;\n          const x = idx % this.cols;\n          const y = Math.floor(idx / this.cols);\n\n          const drawX = Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              x * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n          const drawY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              y * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n\n          const drawXScaled = drawX / GameConstants.TILESIZE;\n          const drawYScaled = drawY / GameConstants.TILESIZE;\n\n          item.drawIcon(delta, drawXScaled, drawYScaled);\n        });\n\n        // Draw selection box and related elements only if mouse is in bounds\n        if (isInBounds || this.mostRecentInput === \"keyboard\") {\n          // Draw selection box\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(\n            Math.round(\n              0.5 * GameConstants.WIDTH -\n                0.5 * width +\n                this.selX * (s + 2 * b + g) -\n                hg,\n            ),\n            Math.round(\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                this.selY * (s + 2 * b + g) -\n                hg,\n            ),\n            s + 2 * b + 2 * hg,\n            s + 2 * b + 2 * hg,\n          );\n\n          const slotX = Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) +\n              b -\n              hg,\n          );\n          const slotY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) +\n              b -\n              hg,\n          );\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(slotX, slotY, s + 2 * hg, s + 2 * hg);\n\n          // Draw equip animation for selected item (unique to full inventory view)\n          const idx = this.selX + this.selY * this.cols;\n          if (idx < this.items.length && this.items[idx] !== null) {\n            Game.ctx.fillStyle = EQUIP_COLOR;\n            const yOff = Math.round(\n              (s + 2 * hg) * (1 - this.equipAnimAmount[idx]),\n            );\n            Game.ctx.fillRect(\n              Math.round(\n                0.5 * GameConstants.WIDTH -\n                  0.5 * width +\n                  this.selX * (s + 2 * b + g) +\n                  b -\n                  hg,\n              ),\n              Math.round(\n                0.5 * GameConstants.HEIGHT -\n                  0.5 * height +\n                  this.selY * (s + 2 * b + g) +\n                  b -\n                  hg +\n                  yOff,\n              ),\n              s + 2 * hg,\n              s + 2 * hg - yOff,\n            );\n\n            // Redraw selected item icon (similar to drawQuickbar)\n            const drawX = Math.round(\n              0.5 * GameConstants.WIDTH -\n                0.5 * width +\n                this.selX * (s + 2 * b + g) +\n                b +\n                Math.floor(0.5 * s) -\n                0.5 * GameConstants.TILESIZE,\n            );\n            const drawY = Math.round(\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                this.selY * (s + 2 * b + g) +\n                b +\n                Math.floor(0.5 * s) -\n                0.5 * GameConstants.TILESIZE,\n            );\n\n            const drawXScaled = drawX / GameConstants.TILESIZE;\n            const drawYScaled = drawY / GameConstants.TILESIZE;\n\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n\n          // **Move drawUsingItem here, after the main selection box**\n        }\n\n        // **Ensure drawUsingItem is not called again here**\n        // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\n      }\n\n      // **Ensure drawUsingItem is not called again here**\n      // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\n      // Draw item description and action text (unique to full inventory view)\n      const selectedIdx = this.selX + this.selY * this.cols;\n\n      if (selectedIdx < this.items.length && this.items[selectedIdx] !== null) {\n        const item = this.items[selectedIdx]!;\n        Game.ctx.fillStyle = \"white\";\n\n        // Determine action text\n        let topPhrase = \"\";\n        if (item instanceof Equippable) {\n          topPhrase = item.equipped ? \"[SPACE] to unequip\" : \"[SPACE] to equip\";\n        }\n        if (item instanceof Usable) {\n          topPhrase = \"[SPACE] to use\";\n        }\n\n        // Draw action text\n        const actionTextWidth = Game.measureText(topPhrase).width;\n        Game.fillText(\n          topPhrase,\n          Math.round(0.5 * (GameConstants.WIDTH - actionTextWidth)),\n          5,\n        );\n\n        // Draw item description\n        const lines = item.getDescription().split(\"\\n\");\n        let nextY = Math.round(\n          0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            (this.rows + this.expansion) * (s + 2 * b + g) +\n            b +\n            5,\n        );\n        lines.forEach((line) => {\n          nextY = this.textWrap(line, 5, nextY, GameConstants.WIDTH - 10);\n        });\n      }\n    }\n    if (this.isOpen) {\n      this.drawUsingItem(delta, mainBgX + 1, mainBgY + 1, s, b, g);\n    }\n\n    this.drawDraggedItem(delta);\n  };\n\n  isPointInInventoryBounds = (\n    x: number,\n    y: number,\n  ): { inBounds: boolean; startX: number; startY: number } => {\n    const s = this.isOpen\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n      : 18;\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = this.cols * (s + 2 * b + g) - g;\n\n    let startX: number;\n    let startY: number;\n    let height: number;\n\n    if (this.isOpen) {\n      // Full inventory bounds\n      height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n      startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height);\n    } else {\n      // Quickbar bounds\n      height = s + 2 * b;\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n      startY = Math.round(GameConstants.HEIGHT - height - 5);\n    }\n\n    const inBounds =\n      x >= startX - ob &&\n      x <= startX + width + ob &&\n      y >= startY - ob &&\n      y <= startY + height + ob;\n\n    return {\n      inBounds,\n      startX,\n      startY,\n    };\n  };\n  isPointInQuickbarBounds = (\n    x: number,\n    y: number,\n  ): { inBounds: boolean; startX: number; startY: number } => {\n    const s = this.isOpen\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n      : 18;\n    const b = 2; // border\n    const g = -2; // gap\n    const width = this.cols * (s + 2 * b + g) - g;\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n    const startY = Math.round(GameConstants.HEIGHT - (s + 2 * b) - 5);\n    const quickbarHeight = s + 2 * b;\n\n    const inBounds =\n      x >= startX &&\n      x <= startX + width &&\n      y >= startY &&\n      y <= startY + quickbarHeight;\n\n    return {\n      inBounds,\n      startX,\n      startY,\n    };\n  };\n\n  isPointInInventoryButton = (x: number, y: number): boolean => {\n    const tX = x / GameConstants.TILESIZE;\n    const tY = y / GameConstants.TILESIZE;\n    return (\n      tX >= this.buttonX &&\n      tX <= this.buttonX + 1 &&\n      tY >= this.buttonY &&\n      tY <= this.buttonY + 1\n    );\n  };\n\n  /**\n   * Draws the inventory button to the canvas.\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\n   * to ensure canvas state is preserved.\n   */\n  drawInventoryButton = (delta: number) => {\n    Game.ctx.save(); // Save the current canvas state\n    this.buttonX = GameConstants.WIDTH / GameConstants.TILESIZE - 1.25;\n    this.buttonY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.25;\n    if (GameConstants.WIDTH < 145) {\n      //this.buttonX -= 1;\n      this.buttonY -= 1.25;\n    }\n    Game.drawFX(0, 0, 1, 1, this.buttonX, this.buttonY, 1, 1);\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  getQuickbarStartX = () => {\n    const s = 18; // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\n    return Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n  };\n\n  handleMouseDown = (x: number, y: number, button: number) => {\n    if (this.player.menu.open) return;\n\n    // Ignore if not left click\n    if (button !== 0) return;\n\n    const bounds = this.isPointInInventoryBounds(x, y);\n    if (bounds.inBounds) {\n      const selectedItem = this.itemAtSelectedSlot();\n      if (selectedItem !== null) {\n        this._dragStartItem = selectedItem;\n        this._dragStartSlot = this.selX + this.selY * this.cols;\n      }\n    }\n  };\n\n  /**\n   * Unified method to initiate dragging.\n   */\n  initiateDrag = () => {\n    if (this._dragStartItem === null || this._isDragging) {\n      return;\n    }\n    this._isDragging = true;\n    this.grabbedItem = this._dragStartItem;\n\n    // Remove item from original slot\n    if (this._dragStartSlot !== null) {\n      this.items[this._dragStartSlot] = null;\n    }\n  };\n\n  /**\n   * Handle hold detection for both mouse and touch.\n   */\n  onHoldDetected = () => {\n    this.initiateDrag();\n  };\n\n  /**\n   * Continuously check for mouse hold during tick.\n   */\n  checkForDragStart = () => {\n    if (Input.mouseDown && Input.isMouseHold) {\n      this.initiateDrag();\n    } else if (Input.isTapHold) {\n      this.initiateDrag();\n    }\n  };\n\n  handleMouseUp = (x: number, y: number, button: number) => {\n    if (this.player.menu.open) return;\n\n    // Ignore if not left click\n    if (button !== 0) return;\n\n    const invBounds = this.isPointInInventoryBounds(x, y);\n    const quickbarBounds = this.isPointInQuickbarBounds(x, y);\n    const isValidDropZone = this.isOpen\n      ? invBounds.inBounds\n      : quickbarBounds.inBounds;\n\n    if (isValidDropZone) {\n      if (this._isDragging && this.grabbedItem !== null) {\n        // We were dragging, place the item\n        const targetSlot = this.selX + this.selY * this.cols;\n        this.placeItemInSlot(targetSlot);\n      } else if (this._dragStartItem !== null) {\n        // We had an item but weren't dragging (quick click)\n        this.itemUse();\n      }\n    } else if (this.grabbedItem !== null) {\n      // Drop the item in the world\n      this.dropItem(this.grabbedItem, this._dragStartSlot);\n\n      this.grabbedItem = null;\n      this.items[this._dragStartSlot] = null;\n      this.dragEndTime = Date.now();\n    }\n\n    // Reset all drag/hold state\n    this._isDragging = false;\n    this._dragStartItem = null;\n    this._dragStartSlot = null;\n    this.grabbedItem = null;\n  };\n\n  placeItemInSlot = (targetSlot: number) => {\n    if (this.grabbedItem === null) return;\n\n    const existingItem = this.items[targetSlot];\n\n    // If target slot is empty\n    if (existingItem === null) {\n      this.items[targetSlot] = this.grabbedItem;\n    } else {\n      // Swap items\n      if (this._dragStartSlot !== null) {\n        this.items[this._dragStartSlot] = existingItem;\n      }\n      this.items[targetSlot] = this.grabbedItem;\n    }\n\n    this.grabbedItem = null;\n  };\n\n  get expansion(): number {\n    return this._expansion;\n  }\n\n  set expansion(value: number) {\n    if (value !== this._expansion) {\n      const oldTotalSlots = (this.rows + this._expansion) * this.cols;\n      this._expansion = value;\n      const newTotalSlots = (this.rows + this._expansion) * this.cols;\n\n      // Resize items array\n      if (newTotalSlots > oldTotalSlots) {\n        this.items.push(...Array(newTotalSlots - oldTotalSlots).fill(null));\n        this.equipAnimAmount.push(\n          ...Array(newTotalSlots - oldTotalSlots).fill(0),\n        );\n      } else if (newTotalSlots < oldTotalSlots) {\n        this.items.length = newTotalSlots;\n        this.equipAnimAmount.length = newTotalSlots;\n      }\n    }\n  }\n\n  expandInventory(additionalRows: number) {\n    this.expansion += additionalRows;\n  }\n}\n","import { Game } from \"../game\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Room } from \"../room/room\";\nimport { Equippable } from \"./equippable\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport class Armor extends Equippable {\n  health: number;\n  rechargeTurnCounter: number;\n  readonly RECHARGE_TURNS = 25;\n  static itemName = \"armor\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.health = 1;\n    this.rechargeTurnCounter = -1;\n    this.tileX = 5;\n    this.tileY = 0;\n    this.name = \"armor\";\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Armor) return false;\n    return true;\n  };\n\n  getDescription = (): string => {\n    return (\n      \"ENCHANTED ARMOR\\nA magic suit of armor. Absorbs one hit and regenerates after \" +\n      this.RECHARGE_TURNS +\n      \" turns.\"\n    );\n  };\n\n  tickInInventory = () => {\n    if (this.rechargeTurnCounter > 0) {\n      this.rechargeTurnCounter--;\n      if (this.rechargeTurnCounter === 0) {\n        this.rechargeTurnCounter = -1;\n        this.health = 1;\n      }\n    }\n  };\n\n  hurt = (damage: number) => {\n    if (this.health <= 0) return;\n    this.health -= Math.max(damage, 1);\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\n  };\n\n  drawGUI = (\n    delta: number,\n    playerMaxHealth: number,\n    quickbarStartX: number,\n  ) => {\n    // Get the quickbar's left edge position (same as in playerRenderer)\n    // Convert to tile coordinates\n    const heartStartX = (quickbarStartX - 7) / GameConstants.TILESIZE;\n    // Position after the hearts\n\n    const shieldX = Math.max(heartStartX, -0.2) + playerMaxHealth / 1.5 + 0.5;\n    let offsetY = GameConstants.WIDTH > 175 ? 0 : -1.25;\n\n    if (this.rechargeTurnCounter === -1)\n      Game.drawFX(\n        5,\n        2,\n        0.75,\n        0.75,\n        shieldX,\n        GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\n        0.75,\n        0.75,\n      );\n    else {\n      let rechargeProportion =\n        1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\n\n      if (rechargeProportion < 0.5)\n        Game.drawFX(\n          7,\n          2,\n          0.75,\n          0.75,\n          shieldX,\n          GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\n          0.75,\n          0.75,\n        );\n      else\n        Game.drawFX(\n          8,\n          2,\n          0.75,\n          0.75,\n          shieldX,\n          GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\n          0.75,\n          0.75,\n        );\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound/sound\";\nimport { Room } from \"../room/room\";\nimport { Usable } from \"./usable/usable\";\nimport { Inventory } from \"../inventory/inventory\";\n\nexport class Backpack extends Usable {\n  static itemName = \"backpack\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.playBackpack();\n    player.inventory.removeItem(this);\n    player.inventory.expansion += 1;\n    this.level.game.pushMessage(\n      \"You equip the backpack, increasing the amount you can carry.\",\n    );\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n  getDescription = () => {\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound/sound\";\nimport { Room } from \"../room/room\";\nimport { Usable } from \"./usable/usable\";\n//import { Bomb } from \"../entity/object/bomb\";\n\nexport class BombItem extends Usable {\n  static itemName = \"bomb\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 20;\n    this.tileY = 2;\n    this.offsetY = -0.3;\n    this.name = BombItem.itemName;\n    this.description = \"explodes\";\n  }\n\n  onUse = (player: Player) => {\n    const { Bomb } = require(\"../entity/object/bomb\");\n    Bomb.add(player.game.room, player.game, player.x, player.y);\n    player.inventory.removeItem(this);\n    Sound.mine();\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { Sound } from \"../sound/sound\";\n\nexport class Coin extends Item {\n  static itemName = \"coin\";\n  //checked: boolean;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 19;\n    this.tileY = 0;\n    this.stackCount = 1;\n    this.stackable = true;\n    this.name = Coin.itemName;\n  }\n  onDrop = () => {\n    const coinList = []; //array to store coin objects\n    for (const item of this.level.items) {\n      if (item instanceof Coin) coinList.push(item);\n    }\n    for (const otherCoin of coinList) {\n      if (\n        this !== otherCoin &&\n        this.x === otherCoin.x &&\n        this.y === otherCoin.y\n      ) {\n        this.stackCount += otherCoin.stackCount;\n        this.level.items = this.level.items.filter((x) => x !== otherCoin);\n      }\n      if (this.stackCount >= 3) this.tileX = 20;\n      if (this.stackCount >= 7) this.tileX = 21;\n    }\n  };\n  get distanceToBottomRight() {\n    return Math.sqrt(\n      (this.x + this.w - window.innerWidth) ** 2 +\n        (this.y + this.h - window.innerHeight) ** 2,\n    );\n  }\n\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.pickupCoin();\n  };\n}\n","import { Entity } from \"../entity/entity\";\nimport { Armor } from \"./armor\";\nimport { BlueGem } from \"./resource/bluegem\";\nimport { Candle } from \"./light/candle\";\nimport { Coin } from \"./coin\";\nimport { GreenGem } from \"./resource/greengem\";\nimport { Heart } from \"./usable/heart\";\nimport { Item } from \"./item\";\nimport { RedGem } from \"./resource/redgem\";\nimport { WeaponFragments } from \"./usable/weaponFragments\";\nimport { Spear } from \"./weapon/spear\";\nimport { Warhammer } from \"./weapon/warhammer\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { WeaponPoison } from \"./usable/weaponPoison\";\nimport { WeaponBlood } from \"./usable/weaponBlood\";\nimport { Gold } from \"./resource/gold\";\nimport { Stone } from \"./resource/stone\";\nimport { Pickaxe } from \"./tool/pickaxe\";\nimport { Hammer } from \"./tool/hammer\";\nimport { Coal } from \"./resource/coal\";\nimport { Torch } from \"./light/torch\";\nimport { Lantern } from \"./light/lantern\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { SpellbookPage } from \"./usable/spellbookPage\";\nimport { Backpack } from \"./backpack\";\nimport { BombItem } from \"./bombItem\";\nimport { Greataxe } from \"./weapon/greataxe\";\nimport { Random } from \"../utility/random\";\nimport { Game } from \"../game\";\nimport { Utils } from \"../utility/utils\";\nimport { Geode } from \"./resource/geode\";\nimport { Scythe } from \"./weapon/scythe\";\nimport { Hourglass } from \"./usable/hourglass\";\n\ninterface Drop {\n  itemType: string;\n  dropRate: number; // 1/x chance of dropping\n  category: string[];\n  unique?: boolean;\n  minDepth?: number;\n}\n\nexport const ItemTypeMap: { [key: string]: typeof Item } = {\n  dualdagger: DualDagger,\n  warhammer: Warhammer,\n  spear: Spear,\n  spellbook: Spellbook,\n  greataxe: Greataxe,\n  scythe: Scythe,\n  hourglass: Hourglass,\n\n  armor: Armor,\n\n  pickaxe: Pickaxe,\n  hammer: Hammer,\n\n  heart: Heart,\n  weaponpoison: WeaponPoison,\n  weaponblood: WeaponBlood,\n\n  coin: Coin,\n\n  weaponfragments: WeaponFragments,\n  spellbookPage: SpellbookPage,\n\n  backpack: Backpack,\n\n  candle: Candle,\n  torch: Torch,\n  lantern: Lantern,\n\n  redgem: RedGem,\n  bluegem: BlueGem,\n  greengem: GreenGem,\n  geode: Geode,\n  gold: Gold,\n  stone: Stone,\n  coal: Coal,\n  bomb: BombItem,\n};\n\nexport class DropTable {\n  static drops: Drop[] = [\n    // Weapons - Higher numbers = rarer\n    {\n      itemType: \"dualdagger\",\n      dropRate: 500,\n      category: [\"weapon\", \"melee\"],\n      unique: true,\n    },\n    {\n      itemType: \"warhammer\",\n      dropRate: 250,\n      category: [\"weapon\", \"melee\"],\n      unique: true,\n    },\n    {\n      itemType: \"spear\",\n      dropRate: 150,\n      category: [\"weapon\", \"melee\"],\n      unique: true,\n    },\n    {\n      itemType: \"spellbook\",\n      dropRate: 250,\n      category: [\"weapon\", \"magic\"],\n      unique: true,\n    },\n    {\n      itemType: \"greataxe\",\n      dropRate: 500,\n      category: [\"weapon\", \"melee\"],\n      unique: true,\n    },\n    {\n      itemType: \"scythe\",\n      dropRate: 10,\n      category: [\"reaper\"],\n      unique: true,\n    },\n\n    // Equipment\n    { itemType: \"armor\", dropRate: 350, category: [\"equipment\"], unique: true },\n\n    // Tools\n    { itemType: \"pickaxe\", dropRate: 25, category: [\"tool\"] },\n    { itemType: \"hammer\", dropRate: 25, category: [\"tool\"] },\n\n    { itemType: \"hourglass\", dropRate: 10, category: [\"reaper\"], unique: true },\n\n    // Consumables\n    { itemType: \"heart\", dropRate: 20, category: [\"consumable\"] },\n    { itemType: \"weaponpoison\", dropRate: 100, category: [\"consumable\"] },\n    { itemType: \"weaponblood\", dropRate: 100, category: [\"consumable\"] },\n\n    // Common items\n    { itemType: \"coin\", dropRate: 10, category: [\"coin\"] }, // Always drops\n\n    // Crafting materials\n    {\n      itemType: \"weaponfragments\",\n      dropRate: 100,\n      category: [\"consumable\", \"melee\"],\n    },\n    {\n      itemType: \"spellbookPage\",\n      dropRate: 100,\n      category: [\"consumable\", \"magic\"],\n    },\n\n    // Upgrades\n    { itemType: \"backpack\", dropRate: 100, category: [\"upgrade\"] },\n\n    // Light sources\n    { itemType: \"candle\", dropRate: 100, category: [\"light\"] },\n    { itemType: \"torch\", dropRate: 250, category: [\"light\"] },\n    { itemType: \"lantern\", dropRate: 500, category: [\"light\"] },\n\n    // Gems and minerals\n    { itemType: \"redgem\", dropRate: 25, category: [\"gem\", \"resource\"] },\n    { itemType: \"bluegem\", dropRate: 25, category: [\"gem\", \"resource\"] },\n    { itemType: \"greengem\", dropRate: 25, category: [\"gem\", \"resource\"] },\n    { itemType: \"geode\", dropRate: 100, category: [\"gem\", \"resource\"] },\n    { itemType: \"gold\", dropRate: 200, category: [\"resource\"] },\n    { itemType: \"stone\", dropRate: 200, category: [\"resource\"] },\n    {\n      itemType: \"coal\",\n      dropRate: 100,\n      category: [\"fuel\", \"lantern\", \"resource\", \"light\"],\n    },\n    { itemType: \"bomb\", dropRate: 100, category: [\"bomb\", \"weapon\"] },\n  ];\n\n  static getDrop = (\n    entity: Entity,\n    useCategory: string[] = [],\n    force: boolean = false,\n    increaseDepth: number = 0,\n    maxDrops: number = 1,\n  ) => {\n    if (entity.cloned) return;\n    const currentDepth = entity.room.depth + increaseDepth;\n    const dropChance = entity.dropChance || 1;\n\n    // Skip initial drop chance check if forced\n    if (!force && dropChance > 1 && Math.random() > 1 / dropChance) {\n      return null;\n    }\n\n    // Filter eligible drops by depth\n    let eligibleDrops = this.drops.filter(\n      (drop) => drop.minDepth === undefined || drop.minDepth <= currentDepth,\n    );\n\n    // Filter out unique items if no categories are specified (default drop table)\n    if (useCategory.length === 0) {\n      eligibleDrops = eligibleDrops.filter(\n        (drop) => drop.unique === undefined || drop.unique === false,\n      );\n    }\n\n    // Filter by categories or specific items if provided\n    if (useCategory.length > 0) {\n      eligibleDrops = eligibleDrops.filter(\n        (drop) =>\n          useCategory.includes(drop.itemType) || // Match specific item\n          drop.category.some((cat) => useCategory.includes(cat)), // Match category\n      );\n    }\n\n    // Handle case with no eligible drops\n    if (eligibleDrops.length === 0) {\n      return null;\n    }\n\n    // Track how many items we've dropped\n    let droppedCount = 0;\n    let droppedItems = [];\n\n    // Try to drop items based on drop rates, up to maxDrops\n    for (const drop of eligibleDrops) {\n      if (Math.random() < 1 / drop.dropRate) {\n        const item = this.addNewItem(drop.itemType, entity);\n        if (item) {\n          droppedItems.push(item);\n          droppedCount++;\n\n          // Stop if we've reached the maximum number of drops\n          if (droppedCount >= maxDrops) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Force drop the most common item if needed and we haven't dropped anything yet\n    if (force && droppedCount === 0 && eligibleDrops.length > 0) {\n      const mostCommonDrop = eligibleDrops.reduce((prev, curr) =>\n        prev.dropRate < curr.dropRate ? prev : curr,\n      );\n      const item = this.addNewItem(mostCommonDrop.itemType, entity);\n      if (item) {\n        droppedItems.push(item);\n      }\n    }\n\n    return droppedItems.length > 0 ? droppedItems : null;\n  };\n\n  static addNewItem = (itemType: string, entity: Entity): Item | null => {\n    const ItemClass = ItemTypeMap[itemType];\n    if (!ItemClass) {\n      console.error(`Item type \"${itemType}\" is not recognized.`);\n      return null;\n    }\n\n    let drop = ItemClass.add(entity.room, entity.x, entity.y);\n    if (drop.name === \"coin\") {\n      // Generate random number between 0-14 with normal distribution around 7\n      drop.stackCount = Utils.randomNormalInt(0, 14);\n    }\n    if (\n      drop instanceof BlueGem ||\n      drop instanceof RedGem ||\n      drop instanceof GreenGem\n    ) {\n      // Generate random number between 0-14 with normal distribution around 7\n      drop.stackCount = Utils.randomNormalInt(0, 5);\n    }\n    entity.drops.push(drop);\n    return drop;\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { Player } from \"../player/player\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\n\nexport class Equippable extends Item {\n  wielder: Player;\n  equipped: boolean;\n  equipTick: boolean = false;\n  useCost: number = 1;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.equipped = false;\n  }\n\n  setWielder = (wielder: Player) => {\n    this.wielder = wielder;\n  };\n\n  coEquippable = (other: Equippable): boolean => {\n    return true;\n  };\n\n  toggleEquip = () => {\n    if (!this.broken) {\n      this.equipped = !this.equipped;\n      if (GameplaySettings.EQUIP_USES_TURN && this.equipped === true)\n        this.wielder?.stall();\n    } else {\n      this.equipped = false;\n      let pronoun = this.name.endsWith(\"s\") ? \"them\" : \"it\";\n      this.level.game.pushMessage(\n        \"You'll have to fix your \" +\n          this.name +\n          \" before you can use \" +\n          pronoun +\n          \".\",\n      );\n    }\n  };\n\n  drawEquipped = (delta: number, x: number, y: number) => {\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n  };\n\n  degrade = (degradeAmount: number = 1) => {\n    if (!this.degradeable) return;\n    this.durability -= degradeAmount * this.useCost;\n    if (this.durability <= 0) this.break();\n  };\n\n  break = () => {\n    this.durability = 0;\n    this.broken = true;\n    this.toggleEquip();\n    //this.wielder.inventory.removeItem(this);\n    //this.wielder = null;\n  };\n\n  onDrop = () => {};\n\n  dropFromInventory = () => {\n    this.wielder = null;\n    this.equipped = false;\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Room, RoomType } from \"../room/room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Usable } from \"./usable/usable\";\nimport { DownLadder } from \"../tile/downLadder\";\n\nexport class GodStone extends Usable {\n  room: Room;\n  count: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.room = level;\n    this.count = 0;\n    this.tileX = 31;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  onUse = (player: Player): void => {\n    this.teleportToExit(player);\n  };\n  teleportToExit = (player: Player): void => {\n    let downLadders = this.room.game.rooms.filter(\n      (room) => room.type === RoomType.DOWNLADDER,\n    );\n    console.log(\"downLadders\", downLadders);\n    const room = downLadders[downLadders.length - 1];\n    this.room.game.rooms.forEach((room) => {\n      room.entered = true;\n      room.calculateWallInfo();\n    });\n    room.game.changeLevelThroughDoor(player, room.doors[0], 1);\n    player.x = room.roomX + 2;\n    player.y = room.roomY + 3;\n  };\n  getDescription = (): string => {\n    return \"YOU SHOULD NOT HAVE THIS\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room/room\";\n\nexport class GoldenKey extends Equippable {\n  static itemName = \"goldenKey\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n    this.name = \"goldenKey\";\n  }\n\n  getDescription = (): string => {\n    return \"GOLD KEY\\nA heavy gold key.\";\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Player } from \"../player/player\";\nimport { Room } from \"../room/room\";\nimport { Sound } from \"../sound/sound\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { Utils } from \"../utility/utils\";\nimport { ItemGroup } from \"./itemGroup\";\n\n// Item class extends Drawable class and represents an item in the game\nexport class Item extends Drawable {\n  // Item properties\n  x: number; // x-coordinate of the item\n  y: number; // y-coordinate of the item\n  w: number; // width of the item\n  h: number; // height of the item\n  offsetY: number; // offset of the item on the y-axis\n  tileX: number; // x-coordinate of the tile where the item is located\n  tileY: number; // y-coordinate of the tile where the item is located\n  frame: number; // frame number for animation\n  level: Room; // level where the item is located\n  stackable: boolean; // whether the item is stackable or not\n  stackCount: number; // number of items in the stack\n  pickedUp: boolean; // whether the item has been picked up or not\n  alpha: number; // alpha value for transparency\n  scaleFactor: number; // scale factor for size adjustment\n  name: string;\n  startY: number;\n  randomOffset: number;\n  durability: number;\n  durabilityMax: number;\n  broken: boolean;\n  description: string;\n  drawOffset: number;\n  pickupOffsetY: number;\n  static itemName: string;\n  inChest: boolean;\n  chestOffsetY: number;\n  sineAnimateFactor: number;\n  iconOffset: number;\n  grouped: boolean;\n  group: ItemGroup = null;\n  degradeable: boolean = true;\n  // Constructor for the Item class\n  constructor(level: Room, x: number, y: number) {\n    super();\n\n    // Initialize properties\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.w = 1;\n    this.h = 2;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.frame = 0;\n    this.stackable = false;\n    this.stackCount = 1;\n    this.pickedUp = false;\n    this.alpha = 1;\n    this.scaleFactor = 5;\n    this.offsetY = -0.25;\n    this.name = \"item\";\n    this.startY = y;\n    this.randomOffset = Math.random();\n    this.durability = 50;\n    this.durabilityMax = 50;\n    this.broken = false;\n    this.description = \"\";\n    this.drawOffset = 0;\n    this.pickupOffsetY = 1;\n    this.chestOffsetY = 0;\n    this.sineAnimateFactor = 1;\n    this.iconOffset = 0;\n    this.grouped = false;\n    this.group = null;\n  }\n\n  static add<\n    T extends new (room: Room, x: number, y: number, ...rest: any[]) => Item,\n  >(this: T, room: Room, x: number, y: number, ...rest: any[]) {\n    return new this(room, x, y, ...rest);\n  }\n\n  hoverText = () => {\n    return this.name;\n  };\n\n  // Empty tick function to be overridden by subclasses\n  tick = () => {};\n  // Empty tick function for inventory behavior to be overridden by subclasses\n  tickInInventory = () => {};\n\n  // Function to get description of the item, to be overridden by subclasses\n  getDescription = (): string => {\n    const stackText = this.stackable ? `\\nAmount: ${this.stackCount}` : \"\";\n    return `${this.name} \\n${this.description} \\n${stackText}`;\n  };\n\n  animateFromChest = () => {\n    this.chestOffsetY = 0.5;\n    this.alpha = 0;\n    this.inChest = true;\n    this.sineAnimateFactor = 0;\n    this.setDrawOffset();\n  };\n\n  // Function to play sound when item is picked up\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.genericPickup();\n  };\n\n  // Empty function to be called when item is dropped, to be overridden by subclasses\n  onDrop = () => {};\n  // Function to be called when item is picked up\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.startY = player.y;\n\n      this.drawableY = this.y;\n      this.alpha = 1;\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) {\n        if (this.isNewItem(player)) {\n          this.pickupMessage();\n\n          player.inventory.foundItems.push(this);\n        }\n        this.pickupSound();\n\n        if (this.grouped) {\n          this.group.destroyOtherItems(this);\n          this.grouped = false;\n          this.group = null;\n        }\n      }\n    }\n  };\n\n  pickupMessage = () => {\n    const name = (this.constructor as typeof Item).itemName;\n    let message = this.stackable\n      ? `You find ${this.stackCount} ${name}.`\n      : `You find a ${name}.`;\n\n    if (this.stackCount > 1 && this.name === \"coin\") {\n      message = `You find ${this.stackCount} ${name}s.`;\n    }\n\n    this.level.game.pushMessage(message);\n  };\n\n  isNewItem = (player: Player) => {\n    for (let item of player.inventory.foundItems) {\n      if (item.constructor === this.constructor) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  dropFromInventory = () => {\n    this.setDrawOffset();\n  };\n\n  // Function to get the amount of shade at the item's location\n  shadeAmount = () => {\n    if (!this.x || !this.y) return 0;\n    else return this.level.softVis[this.x][this.y];\n  };\n\n  drawStatus = (x: number, y: number) => {};\n\n  drawBrokenSymbol = (x: number, y: number) => {\n    if (this.broken) {\n      Game.drawFX(\n        5,\n        0,\n        1,\n        1,\n        x - 0.5 / GameConstants.TILESIZE,\n        y - 0.5 / GameConstants.TILESIZE,\n        1,\n        1,\n      );\n    }\n  };\n\n  destroy() {\n    this.pickedUp = true;\n    //this.level.items = this.level.items.filter((x) => x !== this);\n  }\n\n  // Function to draw the item\n  draw = (delta: number) => {\n    Game.ctx.save();\n    if (!this.pickedUp) {\n      Game.ctx.globalAlpha = this.alpha;\n      if (this.alpha < 1) this.alpha += 0.01 * delta;\n      this.drawableY = this.y;\n      if (this.inChest) {\n        this.chestOffsetY -= Math.abs(this.chestOffsetY + 0.5) * 0.035 * delta;\n\n        if (this.chestOffsetY < -0.47) {\n          this.chestOffsetY = -0.5;\n        }\n      }\n      if (this.sineAnimateFactor < 1 && this.chestOffsetY < -0.45)\n        this.sineAnimateFactor += 0.2 * delta;\n      if (this.scaleFactor > 0) {\n        this.scaleFactor *= 0.5 ** delta;\n        if (this.scaleFactor < 0.01) this.scaleFactor = 0;\n      }\n      const scale = 1 / (this.scaleFactor + 1);\n      Game.ctx.imageSmoothingEnabled = false;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (scale * -0.5 + 0.5) + this.drawOffset,\n        this.y +\n          this.sineAnimateFactor * Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (scale * -0.5 + 0.5) +\n          this.chestOffsetY,\n        this.w * scale,\n        this.h * scale,\n        this.level.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    Game.ctx.restore();\n  };\n\n  setDrawOffset = () => {\n    const itemsOnTile = this.level.items.filter(\n      (item) => item.x === this.x && item.y === this.y,\n    );\n    if (itemsOnTile.length > 1) {\n      itemsOnTile.forEach((item) => {\n        item.drawOffset =\n          (-itemsOnTile.length / 2 + itemsOnTile.indexOf(item) + 1) /\n          itemsOnTile.length;\n      });\n    }\n  };\n\n  degrade = () => {\n    if (this.degradeable) this.durability -= 1;\n  };\n\n  // Function to draw the top layer of the item\n  drawTopLayer = (delta: number) => {\n    if (this.pickedUp) {\n      this.pickupOffsetY += (4.5 - this.pickupOffsetY) * 0.1 * delta;\n\n      //this.x += (Math.sin(Date.now() / 50) * delta) / 10;\n      this.alpha *= 0.9 ** delta;\n      if (Math.abs(this.alpha) < 0.01) {\n        this.drawOffset = 0;\n        this.pickupOffsetY = 1;\n\n        this.level.items = this.level.items.filter((x) => x !== this);\n      }\n\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\n\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x,\n        this.y - this.pickupOffsetY,\n        this.w,\n        this.h,\n      );\n\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n  // Function to draw the item's icon\n  drawIcon = (delta: number, x: number, y: number, opacity = 1, count?) => {\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\n    this.drawDurability(x, y);\n    let shake = 0;\n    if (this.durability <= 1 && !this.broken)\n      shake =\n        Math.round(Math.sin(Date.now() / 25) + 1 / 2) /\n        2 /\n        GameConstants.TILESIZE;\n\n    Game.drawItem(\n      this.tileX,\n      this.tileY,\n      1,\n      2,\n      x + shake,\n      y - 1 + this.iconOffset,\n      this.w,\n      this.h,\n    );\n    Game.ctx.globalAlpha = 1;\n\n    let countToUse = count ? count : this.stackCount;\n    let countText = countToUse <= 1 ? \"\" : \"\" + countToUse;\n    let width = Game.measureText(countText).width;\n    let countX = 16 - width;\n    let countY = 10;\n\n    Game.fillTextOutline(\n      countText,\n      x * GameConstants.TILESIZE + countX,\n      y * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n    this.drawStatus(x, y);\n    this.drawBrokenSymbol(x, y);\n  };\n\n  // Function to draw the item's durability bar with color transitioning from green to red\n  drawDurability = (x: number, y: number) => {\n    if (this.durability < this.durabilityMax) {\n      // Calculate durability ratio (1 = full, 0 = broken)\n      const durabilityRatio = this.durability / this.durabilityMax;\n\n      // Map durability ratio to hue (120 = green, 0 = red)\n      let color = Utils.hsvToHex(\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\n        1, // Full saturation\n        1, // Full value\n      );\n\n      const iconWidth = GameConstants.TILESIZE;\n      const barWidth = Math.ceil(durabilityRatio * iconWidth); // Round to nearest pixel\n      const barHeight = 2; // 2 pixels tall\n\n      // Calculate the position of the durability bar\n      const barX = Math.ceil(x * GameConstants.TILESIZE); // Round to nearest pixel\n      const barY = Math.ceil(\n        y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2,\n      ); // Round to nearest pixel\n\n      // Set the fill style for the durability bar\n      Game.ctx.fillStyle = color;\n      Game.ctx.imageSmoothingEnabled = false;\n\n      // Draw the durability bar\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\n\n      // Reset settings\n      Game.ctx.fillStyle = \"white\";\n    }\n  };\n}\n","import { GameplaySettings } from \"../game/gameplaySettings\";\nimport { Item } from \"./item\";\n\nexport class ItemGroup {\n  items: Item[];\n  constructor(items: Item[]) {\n    this.items = items;\n  }\n\n  destroyOtherItems(item: Item) {\n    for (const i of this.items) {\n      if (i !== item) {\n        i.destroy();\n      }\n    }\n    item.level.game.pushMessage(`You choose to keep the ${item.name}.`);\n\n    if (GameplaySettings.UNBREAKABLE_ITEMGROUP_LOOT) {\n      item.degradeable = false;\n      item.level.game.pushMessage(`This one won't break.`);\n      item.description += \" Unbreakable.\";\n    }\n  }\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Equippable } from \"../equippable\";\n\nexport class EmeraldRing extends Equippable {\n  static itemName = \"emerald ring\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 17;\n    this.tileY = 2;\n    this.name = EmeraldRing.itemName;\n    this.stackable = false;\n    this.description = \"A ring of emerald\";\n  }\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Equippable } from \"../equippable\";\nimport { EmeraldRing } from \"./emeraldRing\";\n\nexport class GoldRing extends Equippable {\n  static itemName = \"gold ring\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 19;\n    this.tileY = 2;\n    this.name = GoldRing.itemName;\n    this.stackable = false;\n    this.description = \"Embed a gem within this ring to imbue it with magic.\";\n  }\n\n  embed = (player: Player, gem: Item) => {\n    player.inventory.subtractItem(gem, 1);\n    player.inventory.removeItem(this);\n\n    player.inventory.addItem(new EmeraldRing(this.level, this.x, this.y));\n    this.level.game.pushMessage(`You embed the gem into the ring.`);\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room/room\";\nimport { Sound } from \"../sound/sound\";\nimport { Player } from \"../player/player\";\n\nexport class Key extends Item {\n  static itemName = \"key\";\n  doorID: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 1;\n    this.tileY = 0;\n    this.name = \"key\";\n    this.doorID = 0;\n  }\n\n  getDescription = (): string => {\n    return \"KEY\\nAn iron key.\";\n  };\n\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) Sound.keyPickup();\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Equippable } from \"../equippable\";\nimport { Torch } from \"./torch\";\nimport { Lantern } from \"./lantern\";\nimport { Inventory } from \"../../inventory/inventory\";\nimport { Player } from \"../../player/player\";\nimport { Light } from \"./light\";\n\nexport class Candle extends Light {\n  static itemName = \"candle\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 100; //how many turns before it burns out\n    this.tileX = 27;\n    this.tileY = 0;\n    this.name = \"candle\";\n    this.fuelCap = 100;\n    this.radius = 4;\n    this.stackable = true;\n    this.maxBrightness = 2;\n    this.maxBrightness = 0.25;\n  }\n}\n","import { Item } from \"../item\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Equippable } from \"../equippable\";\nimport { Torch } from \"./torch\";\nimport { Lantern } from \"./lantern\";\nimport { Inventory } from \"../../inventory/inventory\";\nimport { Player } from \"../../player/player\";\nimport { Light } from \"./light\";\n\nexport class GlowBugs extends Light {\n  static itemName = \"glow bugs\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 100; //how many turns before it burns out\n    this.tileX = 27;\n    this.tileY = 2;\n    this.name = \"glow bugs\";\n    this.fuelCap = 100;\n    this.radius = 6;\n    this.stackable = true;\n    this.maxBrightness = 2;\n    this.maxBrightness = 0.25;\n    //teal blue green rgb 0-255\n    this.color = [5, 75, 75];\n  }\n}\n","import { Item } from \"../item\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Equippable } from \"../equippable\";\nimport { Candle } from \"./candle\";\nimport { Torch } from \"./torch\";\nimport { Coal } from \"../resource/coal\";\nimport { Light } from \"./light\";\n\nexport class Lantern extends Light {\n  fuelCap: number;\n  static itemName = \"lantern\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 250;\n    this.tileX = 29;\n    this.tileY = 0;\n    this.fuelCap = 250;\n    this.name = \"lantern\";\n    this.canRefuel = true;\n    this.maxBrightness = 20;\n    this.minBrightness = 5;\n    this.radius = 7;\n    this.broken = this.fuel <= 0 ? true : false;\n  }\n\n  getDescription = () => {\n    const percentage = Math.round((this.fuel / this.fuelCap) * 100);\n    return `LANTERN - Fuel: ${percentage}%, Capacity: ${this.fuelCap / 50}`;\n  };\n}\n","import { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { Equippable } from \"../equippable\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Utils } from \"../../utility/utils\";\nimport { LevelConstants } from \"../../level/levelConstants\";\n\nexport abstract class Light extends Equippable {\n  fuel: number;\n  fuelCap: number;\n  radius: number;\n  maxBrightness: number;\n  minBrightness: number;\n  canRefuel: boolean = false;\n  color: [number, number, number];\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n    this.fuel = 0;\n    this.fuelCap = 250;\n    this.maxBrightness = 5;\n    this.minBrightness = 2;\n    this.radius = 6;\n    this.equipped = false;\n    this.color = LevelConstants.TORCH_LIGHT_COLOR;\n  }\n\n  updateLighting = () => {\n    this.wielder.game.rooms[this.wielder.levelID].updateLighting();\n  };\n\n  get fuelPercentage() {\n    return this.fuel / this.fuelCap;\n  }\n\n  isIgnited = () => {\n    if (this.fuel > 0 && this.equipped) {\n      return true;\n    }\n    return false;\n  };\n\n  setRadius = () => {\n    this.wielder.sightRadius = this.radius + this.fuelPercentage * this.radius;\n  };\n\n  setBrightness = () => {\n    this.wielder.lightBrightness =\n      this.minBrightness + this.fuelPercentage * this.maxBrightness;\n  };\n\n  toggleEquip = () => {\n    if (this.fuel > 0) {\n      this.equipped = !this.equipped;\n      if (this.isIgnited()) {\n        //this.setRadius();\n        this.setBrightness();\n        this.wielder.lightEquipped = true;\n        this.wielder.lightColor = this.color;\n      } else {\n        //this.resetRadius();\n        this.resetBrightness();\n        this.wielder.lightEquipped = false;\n        this.wielder.lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\n      }\n    } else {\n      this.wielder.game.pushMessage(\n        \"I'll need some fuel before I can use this\",\n      );\n    }\n\n    this.updateLighting();\n  };\n\n  coEquippable = (other: Light): boolean => {\n    return !(other instanceof Light);\n  };\n\n  resetRadius = () => {\n    this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  resetBrightness = () => {\n    this.wielder.lightBrightness = 0.5;\n  };\n\n  burn = () => {\n    // Handle active burning, don't burn fuel in empty rooms\n    if (this.isIgnited()) {\n      const roomCleared =\n        this.wielder.game.rooms[this.wielder.levelID].roomCleared();\n      if (!roomCleared) this.fuel--;\n      else this.fuel -= 0.2;\n\n      this.setRadius();\n      this.setBrightness();\n    }\n\n    // Handle depleted fuel\n    if (this.fuel <= 0) {\n      if (this.stackable) {\n        this.stackCount--;\n        this.fuel = this.fuelCap;\n      }\n\n      // Check if item should be removed after stack reduction\n      if (this.equipped) {\n        if (\n          (this.stackable && this.stackCount <= 0) ||\n          (!this.stackable && !this.canRefuel)\n        ) {\n          this.resetRadius();\n          this.wielder.lightEquipped = false;\n          this.wielder.inventory.removeItem(this);\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\n        } else if (this.canRefuel) {\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\n          this.equipped = false;\n          this.resetRadius();\n          this.wielder.lightEquipped = false;\n          this.broken = true;\n        }\n\n        this.updateLighting();\n      }\n    }\n  };\n\n  drawDurability = (x: number, y: number) => {\n    if (this.fuel < this.fuelCap) {\n      // Calculate durability ratio (1 = full, 0 = broken)\n      const durabilityRatio = this.fuel / this.fuelCap;\n\n      // Map durability ratio to hue (120 = green, 0 = red)\n      let color = Utils.hsvToHex(\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\n        1, // Full saturation\n        1, // Full value\n      );\n\n      const iconWidth = GameConstants.TILESIZE;\n      const barWidth = durabilityRatio * iconWidth;\n      const barHeight = 2; // 2 pixels tall\n\n      // Calculate the position of the durability bar\n      const barX = x * GameConstants.TILESIZE;\n      const barY = y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2;\n\n      // Set the fill style for the durability bar\n      Game.ctx.fillStyle = color;\n      // Set the interpolation mode to nearest neighbor\n      Game.ctx.imageSmoothingEnabled = false;\n\n      // Draw the durability bar\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\n\n      // Reset fill style to default\n      Game.ctx.fillStyle = \"white\";\n    }\n  };\n\n  tickInInventory = () => {\n    this.burn();\n  };\n\n  getDescription = () => {\n    return `${this.name}: ${Math.ceil(this.fuelPercentage * 100)}%`;\n  };\n}\n","import { Room } from \"../../room/room\";\n\nimport { Light } from \"./light\";\n\nexport class Torch extends Light {\n  static itemName = \"torch\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n    this.name = \"torch\";\n    this.fuelCap = 500;\n    this.fuel = 500;\n    this.radius = 7;\n    this.maxBrightness = 5;\n    this.minBrightness = 2;\n  }\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\n\nexport class BlueGem extends Item {\n  static itemName = \"zircon\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n    this.name = BlueGem.itemName;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"ZIRCON\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Usable } from \"../usable/usable\";\nimport { Lantern } from \"../light/lantern\";\nimport { Light } from \"../light/light\";\n\nexport class Coal extends Usable {\n  static itemName = \"coal\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 17;\n    this.tileY = 0;\n    this.stackable = true;\n    this.stackCount = Math.ceil(Math.random() * 7 + 3);\n    this.name = Coal.itemName;\n    this.description = \"A piece of coal. Fuels lantern.\";\n    this.canUseOnOther = true;\n  }\n  onUse = (player: Player) => {\n    let l = player.inventory.hasItem(Lantern);\n    if (l instanceof Lantern) {\n      if (l.fuel <= l.fuelCap - 50) {\n        player.game.pushMessage(\"You add some fuel to your lantern.\");\n        this.stackCount -= 1;\n        if (this.stackCount <= 0) {\n          player.inventory.removeItem(this);\n        }\n      }\n    }\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (other instanceof Light) {\n      if (other.canRefuel && other.fuel <= 0 && other.broken) {\n        let amountToRefuel = Math.min(this.stackCount * 25, other.fuelCap);\n        other.fuel += amountToRefuel;\n        this.stackCount -= amountToRefuel / 25;\n        other.broken = false;\n        this.level.game.pushMessage(\n          `You add refuel your ${other.name} with ${amountToRefuel / 25} coal.`,\n        );\n\n        if (this.stackCount <= 0) player.inventory.removeItem(this);\n      }\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { RedGem } from \"./redgem\";\nimport { BlueGem } from \"./bluegem\";\nimport { GreenGem } from \"./greengem\";\nimport { Inventory } from \"../../inventory/inventory\";\nimport { Utils } from \"../../utility/utils\";\nexport class Geode extends Item {\n  static itemName = \"geode\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 15;\n    this.tileY = 2;\n    this.name = Geode.itemName;\n\n    this.stackable = false;\n  }\n\n  getDescription = (): string => {\n    return \"GEODE\\nWhen in doubt hit it with a hammer.\";\n  };\n\n  split = (inventory: Inventory) => {\n    if (inventory.isFull()) {\n      this.level.game.pushMessage(\n        `You don't have enough space in your inventory to split the geode.`,\n      );\n    } else {\n      const numGems = Math.min(1, Utils.randomNormalInt(1, 3));\n      let gemTypes = [BlueGem, RedGem, GreenGem];\n      let gemType = gemTypes[Math.floor(Math.random() * gemTypes.length)];\n      this.level.game.pushMessage(\n        `You split the geode and find ${numGems} ${gemType.itemName}.`,\n      );\n\n      for (let i = 0; i < numGems; i++) {\n        inventory.addItem(new gemType(this.level, this.x, this.y));\n      }\n      inventory.removeItem(this);\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { GoldBar } from \"./goldBar\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Gold extends Item {\n  static itemName = \"gold\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 18;\n    this.tileY = 0;\n    this.name = Gold.itemName;\n    this.stackable = true;\n    this.description = \"A bar of gold\";\n  }\n\n  smelt = (player: Player) => {\n    player.inventory.removeItem(this);\n    player.inventory.addItem(new GoldBar(this.level, this.x, this.y));\n    Sound.playSmith();\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { GoldRing } from \"../jewelry/goldRing\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class GoldBar extends Item {\n  static itemName = \"gold bar\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 18;\n    this.tileY = 2;\n    this.name = GoldBar.itemName;\n    this.stackable = true;\n    this.description = \"A bar of gold\";\n  }\n\n  smith = (player: Player) => {\n    player.inventory.removeItem(this);\n    player.inventory.addItem(new GoldRing(this.level, this.x, this.y));\n    Sound.playSmith();\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Usable } from \"../usable/usable\";\nimport { GoldRing } from \"../jewelry/goldRing\";\n\nexport class GreenGem extends Usable {\n  static itemName = \"emerald\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 11;\n    this.tileY = 0;\n    this.name = GreenGem.itemName;\n    this.canUseOnOther = true;\n\n    this.stackable = true;\n  }\n\n  useOnOther = (player: Player, other: Item) => {\n    if (other.name === \"gold ring\") {\n      let goldRing = other as GoldRing;\n      goldRing.embed(player, this);\n    }\n  };\n\n  getDescription = (): string => {\n    return \"An emerald gem. Embed it into a gold ring to imbue it with magic.\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\n\nexport class RedGem extends Item {\n  static itemName = \"garnet\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.name = RedGem.itemName;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GARNET\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\n\nexport class Stone extends Item {\n  static itemName = \"stones\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 15;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"STONE\\nSome fragments of stone.\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"../usable/usable\";\nimport { Weapon } from \"../weapon/weapon\";\nimport { Dagger } from \"../weapon/dagger\";\nimport { WeaponFragments } from \"../usable/weaponFragments\";\nimport { Geode } from \"../resource/geode\";\nimport { Pickaxe } from \"./pickaxe\";\nimport { GoldBar } from \"../resource/goldBar\";\nimport { Gold } from \"../resource/gold\";\nexport class Hammer extends Usable {\n  static itemName = \"hammer\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 21;\n    this.tileY = 2;\n    this.offsetY = -0.3;\n    this.canUseOnOther = true;\n    this.description = \"useful for breaking weapons down into fragments\";\n    this.name = Hammer.itemName;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (other instanceof Weapon && other.name !== \"dagger\") {\n      other.disassemble();\n    } else if (other.name === \"dagger\") {\n      this.level.game.pushMessage(\n        `You probably shouldn't disassemble your dagger...`,\n      );\n    } else if (other.name === \"hammer\" && other !== this) {\n      let hammer = other as Hammer;\n      hammer.disassemble(player);\n      this.level.game.pushMessage(`I only needed one of those anyways...`);\n    } else if (other.name === \"geode\") {\n      let geode = other as Geode;\n      geode.split(player.inventory);\n      this.level.game.pushMessage(`You hit the geode with the hammer.`);\n    } else if (other.name === \"pickaxe\") {\n      let pickaxe = other as Pickaxe;\n      pickaxe.disassemble();\n    } else if (other.name === \"gold bar\") {\n      let goldBar = other as GoldBar;\n      goldBar.smith(player);\n      this.level.game.pushMessage(`You hammer the gold bar into a ring.`);\n    } else if (other.name === \"gold\") {\n      let gold = other as Gold;\n      gold.smelt(player);\n      this.level.game.pushMessage(`You form the raw gold into a bar.`);\n    }\n  };\n\n  disassemble = (player: Player) => {\n    let inventoryX = this.x;\n    let inventoryY = this.y;\n    let numFragments = Math.ceil(Math.random() * 5 + 5);\n    player.inventory.removeItem(this);\n    player.inventory.addItem(\n      new WeaponFragments(this.level, inventoryX, inventoryY, numFragments),\n    );\n  };\n}\n","import { Weapon } from \"../weapon/weapon\";\nimport { Room } from \"../../room/room\";\nimport { Item } from \"../item\";\nimport { Usable } from \"../usable/usable\";\nimport { WeaponFragments } from \"../usable/weaponFragments\";\nimport { Player } from \"../../player/player\";\n\nexport class Pickaxe extends Weapon {\n  static itemName = \"pickaxe\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 30;\n    this.tileY = 0;\n    this.name = Pickaxe.itemName;\n    this.description = \"allows mining rocks without equipping\";\n    this.canMine = true;\n  }\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Usable } from \"./usable\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Apple extends Usable {\n  static itemName = \"apple\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 2;\n\n    this.stackable = true;\n  }\n\n  onUse = (player: Player) => {\n    if (player.health < player.maxHealth) {\n      player.health = Math.min(player.maxHealth, player.health + 0.5);\n      Sound.playEat();\n      if (this.stackCount > 1) {\n        this.stackCount--;\n      } else player.inventory.removeItem(this);\n      player.game.pushMessage(\"You eat the apple and feel better.\");\n    }\n  };\n\n  getDescription = (): string => {\n    return \"APPLE\\nAppears nutritious.\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\n\nexport class Heart extends Usable {\n  static itemName = \"health potion\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 8;\n    this.tileY = 0;\n    this.offsetY = -0.3;\n    this.name = Heart.itemName;\n    this.stackable = true;\n    this.description = \"restores 1 health\";\n  }\n\n  onUse = (player: Player) => {\n    if (player.health < player.maxHealth) {\n      player.health = Math.min(player.maxHealth, player.health + 1);\n      if (this.level.game.rooms[player.levelID] === this.level.game.room)\n        Sound.heal();\n      if (this.stackCount > 1) {\n        this.stackCount--;\n      } else player.inventory.removeItem(this);\n      player.game.pushMessage(\"You drink the health potion.\");\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\n\nexport class Hourglass extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 0;\n    this.tileY = 2;\n    this.offsetY = -0.3;\n    this.durability = 30;\n    this.durabilityMax = 30;\n  }\n\n  onUse = (player: Player) => {\n    if (this.broken) return;\n    player.stall();\n    player.game.pushMessage(\"turn skipped\");\n    this.durability -= 1;\n    if (this.durability <= 0) {\n      this.broken = true;\n    }\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  getDescription = () => {\n    return \"HOURGLASS\\nSkips a turn\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room/room\";\nimport { TextParticle } from \"../../particle/textParticle\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Usable } from \"./usable\";\nimport { Sound } from \"../../sound/sound\";\n\nexport class Shrooms extends Usable {\n  static itemName = \"mushrooms\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  onUse = (player: Player) => {\n    if (player.health < player.maxHealth) {\n      player.health = Math.min(player.maxHealth, player.health + 0.5);\n      Sound.playEat();\n      if (this.stackCount > 1) {\n        this.stackCount--;\n      } else player.inventory.removeItem(this);\n      player.game.pushMessage(\"You eat the mushrooms and feel better.\");\n    }\n  };\n\n  getDescription = (): string => {\n    return \"SHROOMS\\nI don't think I should eat these...\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\nimport { Equippable } from \"../equippable\";\n\nexport class SpellbookPage extends Usable {\n  static itemName = \"weapon fragments\";\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\n    super(level, x, y);\n    this.tileX = 25;\n    this.tileY = 2;\n    this.offsetY = -0.3;\n    this.name = \"spellbook pages\";\n    this.canUseOnOther = true;\n    this.stackable = true;\n    this.stackCount = stackCount || Math.ceil(Math.random() * 3);\n    this.description = \"Can be used to restore power to a depleted spellbook\";\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n    player.inventory.removeItem(this);\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (\n      other instanceof Equippable &&\n      other.durabilityMax - other.durability >= 1 &&\n      other.name === \"spellbook\"\n    ) {\n      let repairAmount = Math.min(\n        other.durabilityMax - other.durability,\n        this.stackCount,\n      );\n      other.durability += repairAmount;\n      this.stackCount -= repairAmount;\n      other.broken = false;\n      this.level.game.pushMessage(\n        `You feel your ${other.name}'s power return as you add ${repairAmount} pages to it.`,\n      );\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\n\nexport class Usable extends Item {\n  user: Player;\n  canUseOnOther: boolean;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.canUseOnOther = false;\n  }\n  onUse = (player: Player) => {};\n  useOnOther = (player: Player, other: Item) => {};\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Game } from \"../../game\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\nimport { Weapon } from \"../weapon/weapon\";\n\nexport class WeaponBlood extends Usable {\n  static itemName = \"cursed blood\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 12;\n    this.tileY = 4;\n    this.offsetY = -0.3;\n    this.canUseOnOther = true;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (other instanceof Weapon) {\n      other.applyStatus({ blood: true, poison: false });\n      player.inventory.removeItem(this);\n      this.level.game.pushMessage(\n        `You coat your ${other.name} in cursed blood.`,\n      );\n    }\n  };\n\n  getDescription = () => {\n    return \"WEAPON BLOOD\\nCan be applied to weapons to deal bleed damage\";\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\nimport { Equippable } from \"../equippable\";\n\nexport class WeaponFragments extends Usable {\n  static itemName = \"weapon fragments\";\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\n    super(level, x, y);\n    this.tileX = 3;\n    this.tileY = 0;\n    this.offsetY = -0.3;\n    this.name = \"weapon fragments\";\n    this.canUseOnOther = true;\n    this.stackable = true;\n    this.stackCount = stackCount || Math.ceil(Math.random() * 10) + 7;\n    this.description = \"Can be used to repair broken weapons\";\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n    player.inventory.removeItem(this);\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (\n      other instanceof Equippable &&\n      other.durabilityMax - other.durability >= 1 &&\n      other.name !== \"spellbook\"\n    ) {\n      let repairAmount = Math.min(\n        other.durabilityMax - other.durability,\n        this.stackCount,\n      );\n      other.durability += repairAmount;\n      this.stackCount -= repairAmount;\n      other.broken = false;\n      this.level.game.pushMessage(\n        `You repair your ${other.name} with ${repairAmount} fragments.`,\n      );\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\n    } else if (other.name === \"spellbook\") {\n      this.level.game.pushMessage(\n        \"You'll need some book pages to replenish that.\",\n      );\n    }\n  };\n}\n","import { Item } from \"../item\";\nimport { Player } from \"../../player/player\";\nimport { Sound } from \"../../sound/sound\";\nimport { Room } from \"../../room/room\";\nimport { Usable } from \"./usable\";\nimport { Weapon } from \"../weapon/weapon\";\n\nexport class WeaponPoison extends Usable {\n  static itemName = \"weapon poison\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 11;\n    this.tileY = 4;\n    this.offsetY = -0.3;\n    this.canUseOnOther = true;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  useOnOther = (player: Player, other: Item) => {\n    if (other instanceof Weapon) {\n      other.applyStatus({ poison: true, blood: false });\n      player.inventory.removeItem(this);\n      this.level.game.pushMessage(\n        `You apply the poison to your ${other.name}.`,\n      );\n      console.log(`weapon poison used on ${other.name}`);\n    }\n  };\n\n  getDescription = () => {\n    return \"WEAPON POISON\\nCan be applied to weapons to deal poison damage\";\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\n\nexport class Dagger extends Weapon {\n  static itemName = \"dagger\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 0;\n    this.name = \"dagger\";\n    this.description = \"A basic but dependable weapon.\";\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitSomething = this.executeAttack(newX, newY);\n\n    return !hitSomething;\n  };\n\n  degrade = () => {};\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { SlashParticle } from \"../../particle/slashParticle\";\nimport { Direction } from \"../../game\";\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\n\nexport class DualDagger extends Weapon {\n  firstAttack: boolean;\n  static itemName = \"dual daggers\";\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 23;\n    this.tileY = 0;\n    this.firstAttack = true;\n    this.name = \"Dual Daggers\";\n    this.useCost = 2;\n    this.description =\n      \"After the first attack, enemies will not take their turn until you attack or move again.\";\n  }\n\n  hitSound = () => {\n    Sound.swing();\n    Sound.playShortSlice();\n  };\n\n  tickInInventory = () => {\n    this.firstAttack = true;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    const entities = this.getEntitiesAt(newX, newY).filter((e) => !e.pushable);\n    let flag = false;\n\n    for (let e of entities) {\n      this.attack(e, this.damage);\n      this.statusEffect(e);\n      flag = true;\n    }\n\n    if (flag) {\n      this.hitSound();\n      this.wielder.setHitXY(newX, newY);\n      this.shakeScreen(newX, newY);\n\n      if (this.firstAttack) {\n        this.game.rooms[this.wielder.levelID].particles.push(\n          new AttackAnimation(newX, newY, \"dualdagger\", this.wielder.direction),\n        );\n      } else {\n        this.game.rooms[this.wielder.levelID].particles.push(\n          new AttackAnimation(\n            newX,\n            newY,\n            \"dualdagger2\",\n            this.wielder.direction,\n          ),\n        );\n      }\n\n      this.game.rooms[this.wielder.levelID].entities = this.game.rooms[\n        this.wielder.levelID\n      ].entities.filter((e) => !e.dead);\n\n      if (!this.firstAttack) {\n        this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      }\n\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n\n      if (this.firstAttack) {\n        this.game.rooms[this.wielder.levelID].tickHitWarnings();\n        this.game.rooms[this.wielder.levelID].clearDeadStuff();\n        this.firstAttack = false;\n        this.wielder.beginSlowMotion();\n      }\n      this.degrade();\n    }\n    return !flag;\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { Direction } from \"../../game\";\nimport { Entity } from \"../../entity/entity\";\n\nexport class Greataxe extends Weapon {\n  static itemName = \"greataxe\";\n  hitDelay: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 24;\n    this.tileY = 2;\n    this.damage = 2;\n    this.name = \"greataxe\";\n\n    this.hitDelay = 225;\n    this.offsetY = 0;\n    this.iconOffset = 0.2;\n\n    this.durability = 25;\n    this.durabilityMax = 25;\n    this.useCost = 5;\n  }\n\n  hitSound = () => {\n    Sound.swing();\n    Sound.playWarHammer();\n  };\n\n  adjustedDamage = () => {\n    let hp = this.wielder?.health / this.wielder?.maxHealth;\n    let damage = 1;\n\n    if (hp <= 1) damage = 1;\n    if (hp <= 0.75) damage = 2;\n    if (hp <= 0.5) damage = 4;\n    if (hp <= 0.25) damage = 8;\n    return damage;\n  };\n\n  attack = (enemy: Entity) => {\n    enemy.hurt(this.wielder, this.adjustedDamage());\n    this.statusEffect(enemy);\n  };\n\n  shakeScreen = () => {\n    this.wielder.beginSlowMotion();\n\n    setTimeout(() => {\n      this.wielder.endSlowMotion();\n      //this.hitSound();\n      switch (this.wielder.direction) {\n        case Direction.DOWN:\n          this.game.shakeScreen(0, -10 * this.adjustedDamage(), false);\n          break;\n        case Direction.UP:\n          this.game.shakeScreen(0, -10 * this.adjustedDamage(), false);\n          break;\n        case Direction.LEFT:\n          this.game.shakeScreen(-5, -10 * this.adjustedDamage(), false);\n          break;\n        case Direction.RIGHT:\n          this.game.shakeScreen(5, -10 * this.adjustedDamage(), false);\n          break;\n      }\n    }, this.hitDelay);\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { Direction } from \"../../game\";\n\nexport class Scythe extends Weapon {\n  static itemName = \"scythe\";\n  hitDelay: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 23;\n    this.tileY = 2;\n    this.damage = 1;\n    this.name = \"scythe\";\n    this.hitDelay = 150;\n    this.useCost = 2;\n    this.offsetY = 0;\n    this.iconOffset = 0.2;\n  }\n\n  hitSound = () => {\n    Sound.swing();\n    //Sound.hit();\n    Sound.playSlice();\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let leftCorner = { x: newX, y: newY };\n    let rightCorner = { x: newX, y: newY };\n    let leftEdge = { x: newX, y: newY };\n    let rightEdge = { x: newX, y: newY };\n    let positions = [leftCorner, rightCorner, leftEdge, rightEdge];\n\n    switch (this.wielder.direction) {\n      case Direction.DOWN:\n        leftCorner.x = newX - 1;\n        rightCorner.x = newX + 1;\n        leftEdge.x = newX - 1;\n        rightEdge.x = newX + 1;\n        leftEdge.y = newY - 1;\n        rightEdge.y = newY - 1;\n        break;\n      case Direction.UP:\n        leftCorner.x = newX + 1;\n        rightCorner.x = newX - 1;\n        leftEdge.x = newX + 1;\n        rightEdge.x = newX - 1;\n        leftEdge.y = newY + 1;\n        rightEdge.y = newY + 1;\n        break;\n      case Direction.LEFT:\n        leftCorner.y = newY + 1;\n        rightCorner.y = newY - 1;\n        leftEdge.y = newY + 1;\n        rightEdge.y = newY - 1;\n        leftEdge.x = newX + 1;\n        rightEdge.x = newX + 1;\n        break;\n      case Direction.RIGHT:\n        leftCorner.y = newY - 1;\n        rightCorner.y = newY + 1;\n        leftEdge.y = newY - 1;\n        rightEdge.y = newY + 1;\n        leftEdge.x = newX - 1;\n        rightEdge.x = newX - 1;\n        break;\n    }\n\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitSomething = this.executeAttack(newX, newY);\n    if (hitSomething) {\n      for (const pos of positions) {\n        if (\n          !this.game.rooms[this.wielder.levelID].roomArray[pos.x][\n            pos.y\n          ].isSolid()\n        ) {\n          const damage = positions.indexOf(pos) <= 1 ? 1 : 1;\n          this.applyHitDelay(this.hitEntitiesAt(pos.x, pos.y, damage));\n        }\n      }\n    }\n\n    return !hitSomething;\n  };\n\n  shakeScreen = () => {\n    //this.wielder.beginSlowMotion();\n\n    setTimeout(() => {\n      //this.wielder.endSlowMotion();\n      switch (this.wielder.direction) {\n        case Direction.DOWN:\n          this.game.shakeScreen(0, -5, false);\n          break;\n        case Direction.UP:\n          this.game.shakeScreen(0, -5, false);\n          break;\n        case Direction.LEFT:\n          this.game.shakeScreen(-5, -5, false);\n          break;\n        case Direction.RIGHT:\n          this.game.shakeScreen(5, -5, false);\n          break;\n      }\n    }, this.hitDelay);\n  };\n}\n","import { Game } from \"../../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { SlashParticle } from \"../../particle/slashParticle\";\nimport { Crate } from \"../../entity/object/crate\";\nimport { Barrel } from \"../../entity/object/barrel\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\n\nexport class Shotgun extends Weapon {\n  static itemName = \"shotgun\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 26;\n    this.tileY = 0;\n    this.name = \"shotgun\";\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let newX3 = 3 * newX - 2 * this.wielder.x;\n    let newY3 = 3 * newY - 2 * this.wielder.y;\n    let range = 3;\n\n    if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\n    )\n      return true;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX2, newY2) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\n    )\n      range = 1;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX3, newY3) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX3][newY3].isSolid()\n    )\n      range = 2;\n\n    let enemyHitCandidates = [];\n    let firstPushable = 4;\n    let firstNonPushable = 5;\n    let firstNonDestroyable = 5;\n\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (e.pushable) {\n        if (e.pointIn(newX, newY)) return true;\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n          firstPushable = 2;\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n          firstPushable = Math.min(firstPushable, 3);\n        }\n      } else if (e.destroyable) {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonPushable = 1;\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\n        }\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonPushable = Math.min(firstNonPushable, 2);\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonPushable = Math.min(firstNonPushable, 3);\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n        }\n      } else {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonDestroyable = 1;\n        }\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\n        }\n      }\n    }\n\n    let targetX = newX3;\n    let targetY = newY3;\n\n    if (\n      firstNonDestroyable < firstNonPushable &&\n      firstNonDestroyable < firstPushable\n    ) {\n      return true;\n    }\n\n    if (firstNonPushable <= firstPushable) {\n      for (const c of enemyHitCandidates) {\n        let e = c.enemy;\n        let d = c.dist;\n        if (d === 3) e.hurt(this.wielder, 0.5);\n        else e.hurt(this.wielder, 1);\n      }\n\n      this.hitSound();\n      this.wielder.setHitXY(newX, newY);\n\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"black\",\n      );\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"#ffddff\",\n      );\n      let gp = new GenericParticle(\n        this.game.rooms[this.wielder.levelID],\n        0.5 * (newX + this.wielder.x) + 0.5,\n        0.5 * (newY + this.wielder.y),\n        0,\n        1,\n        0,\n        0,\n        0,\n        \"white\",\n        0,\n      );\n      gp.expirationTimer = 10;\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\n\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      this.shakeScreen(newX, newY);\n      this.degrade();\n\n      return false;\n    }\n    return true;\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { SlashParticle } from \"../../particle/slashParticle\";\nimport type { Enemy } from \"../../entity/enemy/enemy\";\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\n\nexport class Spear extends Weapon {\n  static itemName = \"spear\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 24;\n    this.tileY = 0;\n    this.name = \"spear\";\n    this.description =\n      \"Hits enemies in front of you within a range of 2 tiles.\";\n    this.iconOffset = 0.1; //default 0\n    this.offsetY = 0; //default -0.25\n    this.useCost = 1;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let flag = false;\n    let enemyHitCandidates = [];\n\n    // Check first tile\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitFirstTile = this.hitEntitiesAt(newX, newY);\n    if (hitFirstTile) flag = true;\n\n    // Check second tile for enemies only (not pushables)\n    if (\n      !this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\n    ) {\n      const entitiesAtSecondTile = this.getEntitiesAt(newX2, newY2).filter(\n        (e) => !e.pushable,\n      );\n      enemyHitCandidates = entitiesAtSecondTile;\n    }\n\n    if (!flag && enemyHitCandidates.length > 0) {\n      for (const e of enemyHitCandidates) {\n        this.attack(e);\n      }\n      this.hitSound();\n      this.attackAnimation(newX2, newY2);\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      this.shakeScreen(newX2, newY2);\n      this.degrade();\n      return false;\n    }\n\n    if (flag) {\n      this.hitSound();\n      this.attackAnimation(newX, newY);\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      this.shakeScreen(newX, newY);\n      this.degrade();\n    }\n\n    return !flag;\n  };\n}\n","import { Game } from \"../../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { PlayerFireball } from \"../../projectile/playerFireball\";\nimport type { Entity } from \"../../entity/entity\";\nimport { Utils } from \"../../utility/utils\";\nimport { Direction } from \"../../game\";\nimport { SpellbookPage } from \"../usable/spellbookPage\";\nexport class Spellbook extends Weapon {\n  targets: Entity[];\n  isTargeting: boolean;\n  static itemName = \"spellbook\";\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.range = 4;\n    this.tileX = 25;\n    this.tileY = 0;\n    this.canMine = true;\n    this.name = Spellbook.itemName;\n    this.isTargeting = false;\n    this.durability = 5;\n    this.durabilityMax = 10;\n    this.description = \"Hits multiple enemies within a range of 4 tiles.\";\n  }\n\n  getTargets = () => {\n    this.targets = [];\n    let entities = this.game.rooms[this.wielder.levelID].entities;\n    this.targets = entities.filter(\n      (e) =>\n        !e.pushable &&\n        Utils.distance(this.wielder.x, this.wielder.y, e.x, e.y) <= this.range,\n    );\n    let enemies = this.targets.filter((e) => e.isEnemy === true);\n    //console.log(enemies);\n    if (enemies.length > 0) return enemies;\n    else {\n      //console.log(this.targets);\n      return this.targets;\n    }\n  };\n\n  disassemble = () => {\n    if (this.equipped) {\n      this.game.pushMessage(\n        \"I should probably unequip this before I try to disassemble it...\",\n      );\n      return;\n    }\n    this.game.pushMessage(\n      `You tear the remaining pages out of your spellbook.`,\n    );\n\n    let inventory = this.wielder.inventory;\n    let inventoryX = this.x;\n    let inventoryY = this.y;\n    let numFragments = Math.floor(this.durability);\n    this.toggleEquip();\n    //inventory.weapon = null;\n    inventory.removeItem(this);\n    inventory.addItem(\n      new SpellbookPage(this.level, inventoryX, inventoryY, numFragments),\n    );\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    this.getTargets();\n    let direction = this.wielder.direction;\n    let flag = false;\n    let targets = this.targets;\n    const isTargetInDirection = (e: Entity): boolean => {\n      switch (direction) {\n        case Direction.UP:\n          return e.y <= newY;\n        case Direction.RIGHT:\n          return e.x >= newX;\n        case Direction.DOWN:\n          return e.y >= newY;\n        case Direction.LEFT:\n          return e.x <= newX;\n        default:\n          return false;\n      }\n    };\n    if (targets.length > 0) {\n      this.isTargeting = true;\n    } else {\n      this.isTargeting = false;\n    }\n\n    targets = targets.filter(isTargetInDirection);\n\n    for (let e of targets) {\n      if (\n        !this.game.rooms[this.wielder.levelID].roomArray[e.x][e.y].isSolid()\n      ) {\n        e.hurt(this.wielder, 1);\n\n        this.game.rooms[this.wielder.levelID].projectiles.push(\n          new PlayerFireball(this.wielder, e.x, e.y),\n        );\n\n        flag = true;\n      }\n    }\n\n    if (flag) {\n      this.hitSound();\n      this.wielder.setHitXY(newX, newY);\n\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      this.shakeScreen(newX, newY);\n      Sound.playMagic();\n      this.degrade();\n      setTimeout(() => {\n        this.isTargeting = false;\n      }, 100);\n    }\n    return !flag;\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { Direction } from \"../../game\";\n\nexport class Sword extends Weapon {\n  static itemName = \"sword\";\n  hitDelay: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 2;\n    this.damage = 1;\n    this.name = \"sword\";\n    //this.hitDelay = 150;\n    this.degradeable = false;\n    this.useCost = 2;\n    this.offsetY = 0;\n    //this.iconOffset = 0.2;\n  }\n\n  hitSound = () => {\n    Sound.hit();\n    Sound.playShortSlice();\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let leftCorner = { x: newX, y: newY };\n    let rightCorner = { x: newX, y: newY };\n\n    let positions = [leftCorner, rightCorner];\n\n    switch (this.wielder.direction) {\n      case Direction.DOWN:\n        leftCorner.x = newX - 1;\n        rightCorner.x = newX + 1;\n\n        break;\n      case Direction.UP:\n        leftCorner.x = newX + 1;\n        rightCorner.x = newX - 1;\n\n        break;\n      case Direction.LEFT:\n        leftCorner.y = newY + 1;\n        rightCorner.y = newY - 1;\n\n        break;\n      case Direction.RIGHT:\n        leftCorner.y = newY - 1;\n        rightCorner.y = newY + 1;\n\n        break;\n    }\n\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitSomething = this.executeAttack(newX, newY);\n    if (hitSomething) {\n      for (const pos of positions) {\n        if (\n          !this.game.rooms[this.wielder.levelID].roomArray[pos.x][\n            pos.y\n          ].isSolid()\n        ) {\n          const damage = 1;\n          this.hitEntitiesAt(pos.x, pos.y, damage);\n        }\n      }\n    }\n\n    return !hitSomething;\n  };\n\n  shakeScreen = () => {\n    //this.wielder.beginSlowMotion();\n\n    setTimeout(() => {\n      //this.wielder.endSlowMotion();\n      switch (this.wielder.direction) {\n        case Direction.DOWN:\n          this.game.shakeScreen(0, -5, false);\n          break;\n        case Direction.UP:\n          this.game.shakeScreen(0, -5, false);\n          break;\n        case Direction.LEFT:\n          this.game.shakeScreen(-5, -5, false);\n          break;\n        case Direction.RIGHT:\n          this.game.shakeScreen(5, -5, false);\n          break;\n      }\n    }, this.hitDelay);\n  };\n}\n","import { Weapon } from \"./weapon\";\nimport { Room } from \"../../room/room\";\nimport { Sound } from \"../../sound/sound\";\nimport { Direction } from \"../../game\";\n\nexport class Warhammer extends Weapon {\n  static itemName = \"warhammer\";\n  hitDelay: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 2;\n    this.damage = 2;\n    this.name = \"warhammer\";\n    this.hitDelay = 225;\n    this.useCost = 2;\n  }\n\n  hitSound = () => {\n    Sound.swing();\n    Sound.playWarHammer();\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitSomething = this.executeAttack(newX, newY);\n\n    return !hitSomething;\n  };\n\n  shakeScreen = () => {\n    this.wielder.beginSlowMotion();\n\n    setTimeout(() => {\n      this.wielder.endSlowMotion();\n      switch (this.wielder.direction) {\n        case Direction.DOWN:\n          this.game.shakeScreen(0, -30, false);\n          break;\n        case Direction.UP:\n          this.game.shakeScreen(0, -30, false);\n          break;\n        case Direction.LEFT:\n          this.game.shakeScreen(-5, -30, false);\n          break;\n        case Direction.RIGHT:\n          this.game.shakeScreen(5, -30, false);\n          break;\n      }\n    }, this.hitDelay);\n  };\n}\n","import { Room } from \"../../room/room\";\nimport { Game } from \"../../game\";\nimport { Equippable } from \"../equippable\";\nimport { Sound } from \"../../sound/sound\";\nimport { SlashParticle } from \"../../particle/slashParticle\";\nimport type { Entity } from \"../../entity/entity\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { WeaponFragments } from \"../usable/weaponFragments\";\nimport { Enemy } from \"../../entity/enemy/enemy\";\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\nimport { Direction } from \"../../game\";\n\ninterface WeaponStatus {\n  poison: boolean;\n  blood: boolean;\n}\n\nexport abstract class Weapon extends Equippable {\n  game: Game;\n  range: number;\n  canMine: boolean;\n  damage: number;\n  status: WeaponStatus;\n  static itemName = \"weapon\";\n  name: string;\n  statusApplicationCount: number;\n  hitDelay: number;\n  constructor(level: Room, x: number, y: number, status?: WeaponStatus) {\n    super(level, x, y);\n\n    if (level) this.game = level.game;\n\n    this.canMine = false;\n    this.range = 1;\n    this.damage = 1;\n    this.status = status || { poison: false, blood: false };\n    this.durability = 50;\n    this.durabilityMax = 50;\n    this.statusApplicationCount = 0;\n    this.equipTick = true;\n    this.name = this.constructor.prototype.itemName;\n  }\n\n  break = () => {\n    this.durability = 0;\n    this.wielder.inventory.weapon = null;\n    this.toggleEquip();\n    //this.wielder.inventory.removeItem(this);\n    //this.wielder = null;\n    this.game.pushMessage(\"Your weapon breaks\");\n    if (this.status.poison || this.status.blood) {\n      this.clearStatus();\n    }\n    this.broken = true;\n  };\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Weapon) return false;\n    return true;\n  };\n\n  applyStatus = (status: WeaponStatus) => {\n    this.status = status;\n    if (this.status.blood) {\n      //this.damage = Math.max(0.5, this.damage - 0.5);\n    }\n  };\n\n  clearStatus = () => {\n    const status = this.status.poison ? \"poison\" : \"bleed\";\n    this.game.pushMessage(`Your ${this.name}'s ${status} effect dries up`);\n\n    this.status = { poison: false, blood: false };\n    this.statusApplicationCount = 0;\n  };\n\n  statusEffect = (entity: Entity) => {\n    if (!entity.isEnemy) return;\n    const enemy = entity as Enemy;\n    if (!enemy.status.poison.active && !enemy.status.bleed.active) {\n      if (this.wielder.applyStatus(enemy, this.status) && enemy.health > 0) {\n        this.statusApplicationCount++;\n        const message = this.status.poison\n          ? `Your weapon poisons the ${enemy.name}`\n          : `Your cursed weapon draws blood from the ${enemy.name}`;\n\n        this.game.pushMessage(message);\n\n        //if (this.statusApplicationCount >= 10) this.clearStatus();\n      }\n    }\n  };\n\n  disassemble = () => {\n    if (!this.degradeable) {\n      this.game.pushMessage(\n        \"You can't disassemble this item because it's not degradeable.\",\n      );\n      return;\n    }\n    if (this.equipped) {\n      this.game.pushMessage(\n        \"I should probably unequip this before I try to disassemble it...\",\n      );\n      return;\n    }\n    this.game.pushMessage(`You dissassemble your ${this.name} into fragments.`);\n\n    let inventory = this.wielder.inventory;\n    let inventoryX = this.x;\n    let inventoryY = this.y;\n    let numFragments = Math.floor(this.durability / 1.5);\n    this.toggleEquip();\n    //inventory.weapon = null;\n    inventory.removeItem(this);\n    inventory.addItem(\n      new WeaponFragments(this.level, inventoryX, inventoryY, numFragments),\n    );\n  };\n\n  dropFromInventory = () => {\n    if (this.wielder.inventory.weapon === this)\n      this.wielder.inventory.weapon = null;\n    this.wielder = null;\n    this.equipped = false;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    if (this.checkForPushables(newX, newY)) return true;\n\n    const hitSomething = this.executeAttack(newX, newY);\n\n    return !hitSomething;\n  };\n\n  attack = (enemy: Entity, damage?: number) => {\n    enemy.hurt(this.wielder, damage || this.damage);\n    this.statusEffect(enemy);\n  };\n\n  attackAnimation = (newX: number, newY: number) => {\n    this.wielder.setHitXY(newX, newY);\n\n    this.game.rooms[this.wielder.levelID].particles.push(\n      new AttackAnimation(newX, newY, this.name, this.wielder.direction),\n    );\n  };\n\n  shakeScreen = (eX: number, eY: number) => {\n    if (\n      this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\n    )\n      this.wielder.shakeScreen(this.wielder.x, this.wielder.y, eX, eY);\n  };\n\n  hitSound = () => {\n    Sound.swing();\n    Sound.hit();\n  };\n\n  drawStatus = (x: number, y: number) => {\n    if (this.status.poison || this.status.blood) {\n      let tileX = 3;\n      if (this.status.poison) {\n        tileX = 4;\n      }\n      if (this.status.blood) {\n        tileX = 3;\n      }\n\n      Game.drawFX(\n        tileX,\n        0,\n        1,\n        1,\n        x - 1 / GameConstants.TILESIZE,\n        y - 1 / GameConstants.TILESIZE,\n        1,\n        1,\n      );\n    }\n  };\n\n  getDescription = (): string => {\n    let broken = this.broken ? \" (broken)\" : \"\";\n    let status = [];\n    let durability = \"\";\n    if (this.status.poison) status.push(\"Poison\");\n    if (this.status.blood) status.push(\" Bleed\");\n    if (this.durability < this.durabilityMax)\n      durability = ` Durability: ${this.durability}/${this.durabilityMax}`;\n    return `${this.name}${broken}\\n${status.join(\", \")}\\n${durability}\\n${this.description}\\ndamage: ${this.damage}`;\n  };\n\n  tick = () => {};\n\n  // returns true if nothing was hit, false if the player should move\n\n  protected getEntitiesAt(x: number, y: number): Entity[] {\n    return this.game.rooms[this.wielder.levelID].entities.filter(\n      (e) => e.destroyable && e.pointIn(x, y),\n    );\n  }\n\n  protected hitEntitiesAt(x: number, y: number, damage?: number): boolean {\n    const entities = this.getEntitiesAt(x, y).filter((e) => !e.pushable);\n    let hitSomething = false;\n\n    for (const entity of entities) {\n      this.attack(entity, damage);\n      hitSomething = true;\n    }\n\n    return hitSomething;\n  }\n\n  protected checkForPushables(x: number, y: number): boolean {\n    const direction = this.wielder.direction;\n    let behindX = x;\n    let behindY = y;\n    switch (direction) {\n      case Direction.DOWN:\n        behindY += 1;\n        break;\n      case Direction.UP:\n        behindY -= 1;\n        break;\n      case Direction.LEFT:\n        behindX -= 1;\n        break;\n      case Direction.RIGHT:\n        behindX += 1;\n        break;\n    }\n\n    const unpushables = this.getEntitiesAt(behindX, behindY).filter(\n      (e) => !e.pushable,\n    );\n    const hasUnpushablesBehind = unpushables.length > 0;\n\n    const behindTile =\n      this.game.rooms[this.wielder.levelID].roomArray[behindX]?.[behindY];\n    const isSolidBehind = !behindTile || behindTile.isSolid();\n\n    const pushables = this.getEntitiesAt(x, y).filter((e) => e.pushable);\n    const hasSpaceToPush = !isSolidBehind && !hasUnpushablesBehind;\n\n    return pushables.length > 0 && hasSpaceToPush;\n  }\n\n  protected applyHitDelay = (hitSomething: boolean) => {\n    if (hitSomething) {\n      this.wielder.busyAnimating = true;\n      setTimeout(() => {\n        this.wielder.busyAnimating = false;\n      }, this.hitDelay || 0);\n    }\n  };\n\n  protected executeAttack(\n    targetX: number,\n    targetY: number,\n    animated: boolean = true,\n    damage: number = this.damage,\n    shakeScreen: boolean = true,\n    sound: boolean = true,\n    mainAttack: boolean = true,\n  ): boolean {\n    const hitSomething = this.hitEntitiesAt(targetX, targetY, damage);\n\n    this.applyHitDelay(hitSomething);\n\n    if (hitSomething) {\n      if (sound) this.hitSound();\n      this.wielder.setHitXY(targetX, targetY);\n      if (animated) this.attackAnimation(targetX, targetY);\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (shakeScreen) this.shakeScreen(targetX, targetY);\n      if (mainAttack) this.degrade();\n    }\n\n    return hitSomething;\n  }\n}\n","import { Barrel } from \"../entity/object/barrel\";\nimport { Block } from \"../entity/object/block\";\nimport { Bush } from \"../entity/object/bush\";\nimport { Chest } from \"../entity/object/chest\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Mushrooms } from \"../entity/object/mushrooms\";\nimport { Pot } from \"../entity/object/pot\";\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\nimport { Pumpkin } from \"../entity/object/pumpkin\";\nimport { Sprout } from \"../entity/object/sprout\";\nimport { TombStone } from \"../entity/object/tombStone\";\nimport { Rock } from \"../entity/resource/rockResource\";\nimport { SkinType } from \"../tile/tile\";\nimport { RoomType } from \"../room/room\";\nimport { CoalResource } from \"../entity/resource/coalResource\";\nimport { GoldResource } from \"../entity/resource/goldResource\";\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\nimport { GlowBugEnemy } from \"../entity/enemy/glowBugEnemy\";\nimport { Tree } from \"../entity/object/tree\";\n\nexport enum EnvType {\n  DUNGEON = 0,\n  CAVE = 1,\n  FOREST = 2,\n  SWAMP = 3,\n  GLACIER = 4,\n  CASTLE = 5,\n}\n\nexport class Environment {\n  type: EnvType;\n  skin: SkinType;\n  constructor(type: EnvType) {\n    this.type = type;\n    this.skin = this.type as unknown as SkinType;\n  }\n}\n\ninterface PropInfo {\n  class: any; // The class constructor\n  weight?: number; // Spawn weight\n  blacklistedEnvironments?: EnvType[]; // Environments where this prop shouldn't spawn\n  additionalParams?: any[]; // Extra constructor parameters if needed\n}\n\ninterface EnvironmentPropData {\n  props: PropInfo[]; // Single category for all props\n}\n\nconst props: PropInfo[] = [\n  { class: Crate },\n  { class: Barrel },\n  { class: TombStone, additionalParams: [1] },\n  { class: TombStone, additionalParams: [0] },\n  { class: Pumpkin },\n  { class: Block },\n  { class: Pot },\n  { class: PottedPlant },\n  { class: Bush },\n  { class: Sprout },\n  { class: Mushrooms },\n  { class: Rock },\n  { class: Chest },\n  { class: GlowBugEnemy },\n  { class: Tree },\n];\n\nconst environmentProps: Record<EnvType, EnvironmentPropData> = {\n  [EnvType.DUNGEON]: {\n    props: [\n      { class: Crate, weight: 1 },\n      { class: Barrel, weight: 1 },\n      { class: TombStone, weight: 0.05, additionalParams: [1] },\n      { class: TombStone, weight: 0.05, additionalParams: [0] },\n      { class: Pumpkin, weight: 0.05 },\n      { class: Block, weight: 1 },\n      { class: Pot, weight: 1 },\n      { class: PottedPlant, weight: 1 },\n      { class: Mushrooms, weight: 0.1 },\n      { class: Bush, weight: 0.1 },\n      { class: Sprout, weight: 0.025 },\n      { class: Chest, weight: 0.025 },\n    ],\n  },\n  [EnvType.CAVE]: {\n    props: [\n      { class: CoalResource, weight: 1 },\n      { class: GoldResource, weight: 0.1 },\n      { class: EmeraldResource, weight: 0.05 },\n      { class: Block, weight: 0.2 },\n      { class: Rock, weight: 0.4 },\n      { class: Mushrooms, weight: 0.3 },\n      { class: Pot, weight: 0.2 },\n      { class: Chest, weight: 0.1 },\n    ],\n  },\n  [EnvType.FOREST]: {\n    props: [\n      { class: TombStone, weight: 0.05, additionalParams: [1] },\n      { class: TombStone, weight: 0.05, additionalParams: [0] },\n      { class: Pumpkin, weight: 0.05 },\n      //{ class: Block, weight: 0.1 },\n      { class: Bush, weight: 2 },\n      { class: Sprout, weight: 0.05 },\n      { class: Mushrooms, weight: 0.2 },\n      { class: Rock, weight: 0.1 },\n      { class: Chest, weight: 0.05 },\n      { class: GlowBugEnemy, weight: 0.05 },\n      { class: Tree, weight: 0.1 },\n    ],\n  },\n  [EnvType.SWAMP]: {\n    props: [\n      { class: Barrel, weight: 8 },\n      { class: TombStone, weight: 5, additionalParams: [1] },\n      { class: TombStone, weight: 2, additionalParams: [0] },\n      { class: Block, weight: 5 },\n      { class: Mushrooms, weight: 0.5 },\n      { class: Bush, weight: 0.25 },\n      { class: Pot, weight: 0.15 },\n      { class: Rock, weight: 0.05 },\n      { class: Chest, weight: 0.05 },\n    ],\n  },\n  [EnvType.GLACIER]: {\n    props: [\n      { class: Block, weight: 20 },\n      { class: Crate, weight: 5 },\n      { class: Rock, weight: 0.6 },\n      { class: Chest, weight: 0.4 },\n    ],\n  },\n  [EnvType.CASTLE]: {\n    props: [\n      { class: Crate, weight: 10 },\n      { class: Barrel, weight: 8 },\n      { class: TombStone, weight: 4, additionalParams: [1] },\n      { class: TombStone, weight: 2, additionalParams: [0] },\n      { class: Block, weight: 6 },\n      { class: PottedPlant, weight: 0.4 },\n      { class: Pot, weight: 0.3 },\n      { class: Chest, weight: 0.2 },\n      { class: Rock, weight: 0.1 },\n    ],\n  },\n};\n\nexport { environmentProps, PropInfo, EnvironmentPropData };\n","import { Room, RoomType } from \"../room/room\";\nimport { Game } from \"../game\";\nimport { Entity, EntityType } from \"../entity/entity\";\nimport { Item } from \"../item/item\";\nimport { DoorType } from \"../tile/door\";\nimport { Tile } from \"../tile/tile\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { LevelParameterGenerator } from \"./levelParametersGenerator\";\nimport { Environment, EnvType } from \"./environment\";\nimport { Populator } from \"../room/roomPopulator\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\n\nexport interface EnemyParameters {\n  enemyTables: Record<number, number[]>;\n  maxDepthTable: number;\n  minDepths: Record<number, number>;\n}\n\nexport const enemyMinimumDepth: Record<number, number> = {\n  1: 0, // CrabEnemy\n  2: 1, // FrogEnemy\n  3: 0, // ZombieEnemy\n  4: 0, // SkullEnemy\n  5: 1, // EnergyWizardEnemy\n  6: 2, // ChargeEnemy\n  7: 1, // RookEnemy\n  8: 1, // BishopEnemy\n  9: 1, // ArmoredzombieEnemy\n  10: 2, // BigSkullEnemy\n  11: 2, // QueenEnemy\n  12: 1, // KnightEnemy\n  13: 2, // BigKnightEnemy\n  14: 2, // FireWizardEnemy\n  15: 2, // ArmoredSkullEnemy  16: 2, // ArmoredKnightEnemy\n};\n/*\ninterface enemySpawnPoolData {\n  maxCount: number;\n  minCount: number;\n}\n\ninterface environmentData {\n  name: string;\n  preferredEnemies: Array<Enemy>;\n  preferredEntities: Array<Entity>;\n  entityBlacklist: Array<Entity>;\n  enemySpawnPoolData: enemySpawnPoolData;\n  roomData: roomData;\n}\n\ninterface entitySpawnData {\n  enemy: Enemy;\n  spawnChance: number;\n  maximumCount: number;\n}\n*/\n\nexport class Level {\n  depth: number;\n  levelArray: (Tile | null)[][];\n  width: number;\n  height: number;\n  game: Game;\n  rooms: Room[];\n  environment: Environment;\n  exitRoom: Room;\n  startRoom: Room;\n  enemyParameters: EnemyParameters;\n  isMainPath: boolean = true;\n  mapGroup: number;\n  populator: Populator;\n\n  constructor(\n    game: Game,\n    depth: number,\n    width: number,\n    height: number,\n    isMainPath: boolean = true,\n    mapGroup: number,\n    env: EnvType,\n  ) {\n    this.game = game;\n    this.depth = depth;\n    this.width = width;\n    this.height = height;\n    this.rooms = [];\n    this.isMainPath = isMainPath;\n    this.initializeLevelArray();\n    this.mapGroup = mapGroup;\n    this.environment = new Environment(env);\n\n    this.populator = new Populator(this);\n\n    console.log(\n      `level ${this.depth} envType: ${env}`,\n      \"isMainPath\",\n      this.isMainPath,\n    );\n\n    this.enemyParameters = this.getEnemyParameters();\n    let mainPath = this.isMainPath ? \"main\" : \"side\";\n    console.log(`${mainPath} path, envType: ${env}`);\n  }\n\n  setExitRoom() {\n    if (this.isMainPath) {\n      this.exitRoom = this.rooms.find(\n        (room) => room.type === RoomType.DOWNLADDER,\n      );\n    } else {\n      this.exitRoom = this.rooms.find(\n        (room) => room.type === RoomType.UPLADDER,\n      );\n    }\n  }\n\n  setStartRoom() {\n    if (this.isMainPath) {\n      this.startRoom = this.rooms.find((room) => room.type === RoomType.START);\n    } else {\n      this.startRoom = this.rooms.find(\n        (room) => room.type === RoomType.ROPECAVE,\n      );\n    }\n  }\n\n  setRooms(rooms: Room[]) {\n    this.rooms = rooms;\n    this.setExitRoom();\n    this.setStartRoom();\n    rooms.forEach((room) => {\n      room.id = this.rooms.indexOf(room);\n    });\n  }\n\n  initializeLevelArray = () => {\n    // Create a 300x300 grid for depth 0\n    this.levelArray = [];\n    for (let x = 0; x < this.width; x++) {\n      this.levelArray[x] = [];\n      for (let y = 0; y < this.height; y++) {\n        this.levelArray[x][y] = null;\n      }\n    }\n  };\n\n  loadRoomsIntoLevelArray = () => {\n    for (let room of this.rooms) {\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\n          this.levelArray[x][y] = room.roomArray[x][y];\n        }\n      }\n    }\n  };\n\n  /**\n   * Generates enemy parameters based on the current depth.\n   * @param depth The current depth level.\n   * @returns An object conforming to the EnemyParameters interface.\n   */\n  getEnemyParameters(): EnemyParameters {\n    let currentDepth = this.depth;\n    // Generate the enemy pool based on current depth\n    const enemyPoolIds = this.generateEnemyPoolIds(currentDepth);\n\n    // Create enemyTables where each level maps to the enemyPoolIds\n    const enemyTables: Record<number, number[]> = {};\n\n    for (let tableDepth = 0; tableDepth <= currentDepth; tableDepth++) {\n      // Assign the same pool for all tables up to current depth\n      enemyTables[tableDepth] = enemyPoolIds;\n    }\n    const newEnemies = enemyTables[currentDepth].filter(\n      (id) => !this.game.encounteredEnemies.includes(id),\n    );\n    this.game.encounteredEnemies.push(...newEnemies);\n    //console.log(\n    //`encounteredEnemies for depth ${this.depth}: ${this.game.encounteredEnemies}`,\n    //);\n\n    return {\n      enemyTables,\n      maxDepthTable: currentDepth,\n      minDepths: enemyMinimumDepth,\n    };\n  }\n\n  /**\n   * Generates the enemy pool IDs based on the current depth, introducing up to 2 new enemies each level.\n   * @param depth The current depth level.\n   * @returns An array of selected enemy IDs.\n   */\n  generateEnemyPoolIds(depth: number): number[] {\n    const availableEnemies = Object.entries(enemyMinimumDepth)\n      .filter(([enemyId, minDepth]) => depth >= minDepth)\n      .map(([enemyId]) => Number(enemyId));\n\n    // Determine which enemies are new (not yet encountered)\n    const newEnemies = availableEnemies.filter(\n      (id) => !this.game.encounteredEnemies.includes(id),\n    );\n\n    // Decide how many new enemies to introduce (1 or 2)\n    const newEnemiesToAddCount = GameplaySettings.LIMIT_ENEMY_TYPES\n      ? Math.min(newEnemies.length, 2)\n      : newEnemies.length;\n    const newEnemiesToAdd = this.getRandomElements(\n      newEnemies,\n      newEnemiesToAddCount,\n    );\n\n    // Add the new enemies to encounteredEnemies\n    this.game.encounteredEnemies.push(...newEnemiesToAdd);\n\n    // Log the newly added enemies for debugging\n    // console.log(`New enemies introduced at depth ${depth}: ${newEnemiesToAdd}`);\n\n    // Combine encountered enemies to form the enemy pool\n    const enemyPoolIds = this.game.encounteredEnemies.slice();\n\n    // Determine the number of enemy types for the current depth\n    const numberOfTypes = GameplaySettings.LIMIT_ENEMY_TYPES\n      ? this.getNumberOfEnemyTypes(depth)\n      : enemyPoolIds.length;\n\n    // Select the final set of enemy IDs for the pool\n    const selectedEnemyIds = this.getRandomElements(\n      enemyPoolIds,\n      numberOfTypes,\n    );\n\n    // Ensure uniqueness and limit based on available enemies\n    return Array.from(new Set(selectedEnemyIds)).slice(0, numberOfTypes);\n  }\n\n  /**\n   * Determines the number of enemy types allowed based on the current depth.\n   * @param depth The current depth level.\n   * @returns The number of enemy types.\n   */\n  getNumberOfEnemyTypes(depth: number): number {\n    // Example logic: depth 0 -> 2 types, depth 1 -> 4, depth 2 -> 6, etc.\n    let numberOfTypes = depth === 0 ? 2 : Math.ceil(Math.sqrt(depth + 1)) + 4;\n    //console.log(`numberOfTypes: ${numberOfTypes}`);\n    return numberOfTypes;\n  }\n\n  /**\n   * Utility function to get random elements from an array.\n   * @param array The array to select from.\n   * @param count The number of elements to select.\n   * @returns An array of randomly selected elements.\n   */\n  getRandomElements<T>(array: T[], count: number): T[] {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled.slice(0, Math.min(count, shuffled.length));\n  }\n\n  setRoomSkins() {\n    for (let room of this.rooms) {\n      room.skin = this.environment.skin;\n      console.log(`room ${room.id} skin: ${room.skin}`);\n    }\n  }\n}\n","import { GameConstants } from \"../game/gameConstants\";\n\nexport class LevelConstants {\n  static SCREEN_W = 1;\n  static SCREEN_H = 1;\n\n  static readonly COMPUTER_TURN_DELAY = 250; // milliseconds (was 300)\n  static readonly TURN_TIME = 3000; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\n  static readonly ROOM_COUNT = 50;\n\n  static readonly HEALTH_BAR_FADEIN = 100;\n  static readonly HEALTH_BAR_FADEOUT = 350;\n  static readonly HEALTH_BAR_TOTALTIME = 1000;\n\n  static readonly SHADED_TILE_CUTOFF = 1;\n  static readonly MIN_VISIBILITY = 0; // visibility level of places you've already seen\n  static LIGHTING_ANGLE_STEP = 2; // how many degrees between each ray, previously 5\n  static LIGHTING_MAX_DISTANCE = 7;\n  //static readonly LIGHT_RESOLUTION = 0.1; //1 is default\n\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\n  static readonly AMBIENT_LIGHT_COLOR: [number, number, number] = [12, 15, 12];\n  static readonly TORCH_LIGHT_COLOR: [number, number, number] = [120, 35, 10];\n}\n","import { ChatMessage, Game } from \"../game\";\nimport { Room, RoomType } from \"../room/room\";\nimport { Door } from \"../tile/door\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Random } from \"../utility/random\";\nimport { DownLadder } from \"../tile/downLadder\";\nimport {\n  LevelParameterGenerator,\n  LevelParameters,\n} from \"./levelParametersGenerator\";\nimport { Level } from \"./level\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { EnvType } from \"./environment\";\nimport { SkinType } from \"../tile/tile\";\n\nenum PathType {\n  MAIN_PATH, // Has exit room (current dungeon)\n  SIDE_PATH, // No exit room (current cave/ropehole)\n  TUTORIAL, // Special case\n}\n\n// animation delays in ms\nlet ANIMATION_PARTITION_SPLIT_DELAY = 0; // for partition splitting\nlet ANIMATION_PATHFINDING_DELAY = 0; // for pathfinding\nlet ANIMATION_LARGE_DELAY = 0; // in between larger steps\nif (document.cookie.includes(\"showgeneration=true\")) {\n  ANIMATION_PARTITION_SPLIT_DELAY = 10; // for partition splitting\n  ANIMATION_PATHFINDING_DELAY = 100; // for pathfinding\n  ANIMATION_LARGE_DELAY = 100; // in between larger steps\n}\n\nclass PartitionConnection {\n  x: number;\n  y: number;\n  other: Partition;\n\n  constructor(x: number, y: number, other: Partition) {\n    this.x = x;\n    this.y = y;\n    this.other = other;\n  }\n}\n\nclass Partition {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  type: RoomType;\n  fillStyle: string;\n  connections: Array<PartitionConnection>;\n  distance: number;\n  isTopOpen: boolean;\n  isRightOpen: boolean;\n  isBottomOpen: boolean;\n  isLeftOpen: boolean;\n  pathIndex: number;\n\n  constructor(x: number, y: number, w: number, h: number, fillStyle: string) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.fillStyle = fillStyle;\n    this.type = RoomType.DUNGEON;\n    this.connections = [];\n    this.distance = 1000;\n    this.isTopOpen = true;\n    this.isRightOpen = true;\n    this.isBottomOpen = true;\n    this.isLeftOpen = true;\n    this.pathIndex = 0;\n  }\n\n  split = async (): Promise<Array<Partition>> => {\n    await new Promise((resolve) =>\n      setTimeout(\n        resolve,\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PARTITION_SPLIT_DELAY,\n      ),\n    );\n\n    // Reset open walls when a partition is split\n    this.isTopOpen = true;\n    this.isRightOpen = true;\n    this.isBottomOpen = true;\n    this.isLeftOpen = true;\n\n    // This function generates a random number around the center (0.5) within a certain width (0.6).\n    // It uses the Random.rand() function to generate a random number between 0 and 1, subtracts 0.5 to center it around 0,\n    // multiplies it by the width to scale it, and then adds the center (0.5) to shift it back to being between 0 and 1.\n    let rand_mid = () => {\n      let center = 0.5;\n      let width = 0.6;\n      return (Random.rand() - 0.5) * width + center;\n    };\n\n    let sizeRange = () => {\n      let sizes = [\n        { size: 1, probability: 0.2 },\n        { size: 3, probability: 0.6 },\n        { size: 10, probability: 0.2 },\n      ];\n      let rand = Random.rand();\n      let sum = 0;\n      for (let size of sizes) {\n        sum += size.probability;\n        if (rand <= sum) return size.size;\n      }\n      return sizes[sizes.length - 1].size;\n    };\n    let MIN_SIZE = 4;\n\n    if (this.w > this.h) {\n      //if the partitions width is greater than its height\n      let w1 = Math.floor(rand_mid() * this.w);\n      //choose a random tile within the width of the tiles\n      let w2 = this.w - w1 - 1;\n      //The remaining border - 1\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\n      //if either of these are less than the min size: return an array with this Partition\n      return [\n        new Partition(this.x, this.y, w1, this.h, this.fillStyle),\n        new Partition(this.x + w1 + 1, this.y, w2, this.h, this.fillStyle),\n      ];\n      //return an array with two new partitions\n    } else {\n      let h1 = Math.floor(rand_mid() * this.h);\n      let h2 = this.h - h1 - 1;\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\n      return [\n        new Partition(this.x, this.y, this.w, h1, this.fillStyle),\n        new Partition(this.x, this.y + h1 + 1, this.w, h2, this.fillStyle),\n      ];\n      //identical code for case where height > width\n    }\n  };\n\n  point_in = (x: number, y: number): boolean => {\n    //given the input argument x,y coordinates output boolean\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n\n    //only return true if both input x and input y are within the partitions x and y\n  };\n\n  point_next_to = (x: number, y: number): boolean => {\n    return (\n      (x >= this.x - 1 &&\n        x < this.x + this.w + 1 &&\n        y >= this.y &&\n        y < this.y + this.h) ||\n      (x >= this.x &&\n        x < this.x + this.w &&\n        y >= this.y - 1 &&\n        y < this.y + this.h + 1)\n    );\n    //return true if the input x and y are next to any point of the partition\n  };\n\n  area = (): number => {\n    return this.w * this.h;\n    //return the damn area\n  };\n\n  overlaps = (other: Partition): boolean => {\n    return (\n      other.x < this.x + this.w + 1 &&\n      other.x + other.w > this.x - 1 &&\n      other.y < this.y + this.h + 1 &&\n      other.y + other.h > this.y - 1\n    );\n    //takes another partition instance as argument\n    //returns true if any points of each overlap\n  };\n\n  setOpenWall = (connection: PartitionConnection) => {\n    if (\n      connection.y === this.y - 1 &&\n      connection.x >= this.x &&\n      connection.x < this.x + this.w\n    ) {\n      this.isTopOpen = false;\n    }\n    if (\n      connection.y === this.y + this.h &&\n      connection.x >= this.x &&\n      connection.x < this.x + this.w\n    ) {\n      this.isBottomOpen = false;\n    }\n    if (\n      connection.x === this.x + this.w &&\n      connection.y >= this.y &&\n      connection.y < this.y + this.h\n    ) {\n      this.isRightOpen = false;\n    }\n    if (\n      connection.x === this.x - 1 &&\n      connection.y >= this.y &&\n      connection.y < this.y + this.h\n    ) {\n      this.isLeftOpen = false;\n    }\n  };\n\n  get_branch_point = (): { x: number; y: number } => {\n    let points = [];\n    for (let x = this.x; x < this.x + this.w; x++) {\n      //count up from the partitions x to its width\n      points.push({ x: x, y: this.y - 1 /*one row above partition*/ });\n      points.push({ x: x, y: this.y + this.h /*one row below partition*/ });\n    } // pushes the points above and below the partition\n    for (let y = this.y; y < this.y + this.h; y++) {\n      points.push({ x: this.x - 1, y: y });\n      points.push({ x: this.x + this.w, y: y });\n    } //pushes points to left and right of the partition\n    points = points.filter(\n      (p) =>\n        !this.connections.some(\n          (c) => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1,\n        ),\n      //if the sum of the distance between the input x and y values and the partitions x and y values is > 1\n      //delete those from the points array\n    );\n    points.sort(() => 0.5 - Random.rand());\n    return points[0]; //return first object of x y points in array points\n  };\n\n  draw = (delta: number, levelCenterX: number, levelCenterY: number) => {\n    Game.ctx.fillStyle = this.fillStyle;\n    Game.ctx.fillRect(\n      Math.round(GameConstants.WIDTH / 2 + this.x - levelCenterX),\n      Math.round(GameConstants.HEIGHT / 2 + this.y - levelCenterY),\n      this.w,\n      this.h,\n    );\n\n    for (let connection of this.connections) {\n      Game.ctx.fillRect(\n        Math.round(GameConstants.WIDTH / 2 + connection.x - levelCenterX),\n        Math.round(GameConstants.HEIGHT / 2 + connection.y - levelCenterY),\n        1,\n        1,\n      );\n    }\n  };\n} //end of Partition class\n\nlet split_partitions = async (\n  partitions: Array<Partition>,\n  prob: number,\n): Promise<Array<Partition>> => {\n  for (let partition of partitions) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter((p) => p !== partition); // remove partition\n      partitions = partitions.concat(await partition.split()); // add splits\n    }\n  }\n  return partitions;\n  //takes input partitions array, randomly removes partitions and adds splits, output modified partitions array\n};\n\nlet split_partition = async (\n  partition: Partition,\n  prob: number,\n): Promise<Array<Partition>> => {\n  if (Random.rand() < prob) {\n    return await partition.split();\n  } else {\n    return [partition];\n  }\n  // Takes a single partition and probability\n  // Returns an array with either the split partitions or the original partition\n};\n\nlet reduce_dimensions = (partition: Partition, params: LevelParameters) => {\n  let reduceY = 0;\n  let reduceX = 0;\n  let translateX = 0;\n  let translateY = 0;\n  partition.connections.forEach((connection) => {\n    if (connection.y === partition.y) reduceY++, translateY++;\n    if (connection.y === partition.y + partition.h) reduceY++;\n    if (connection.x === partition.x) reduceX++, translateX++;\n    if (connection.x === partition.x + partition.w) reduceX++;\n  });\n\n  if (partition.w > 7) {\n    partition.w -= translateX;\n    partition.x += translateX;\n  }\n  if (partition.h > 7) {\n    partition.h -= translateY;\n    partition.y += translateY;\n  }\n};\n\nlet get_wall_rooms = (\n  partitions: Array<Partition>,\n  mapWidth: number,\n  mapHeight: number,\n): Array<Partition> => {\n  return partitions.filter((partition, index) => {\n    // Helper function to check if a specific path is clear\n    const isPathClear = (\n      direction: \"left\" | \"right\" | \"top\" | \"bottom\",\n    ): boolean => {\n      switch (direction) {\n        case \"left\":\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this y-coordinate and is to the left\n              return (\n                other.y <= y &&\n                y < other.y + other.h &&\n                other.x + other.w > 0 &&\n                other.x + other.w <= partition.x\n              );\n            });\n            if (!blocked) return true; // Found at least one y without a blocker\n          }\n          return false;\n\n        case \"right\":\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this y-coordinate and is to the right\n              return (\n                other.y <= y &&\n                y < other.y + other.h &&\n                other.x < mapWidth &&\n                other.x >= partition.x + partition.w\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        case \"top\":\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this x-coordinate and is above\n              return (\n                other.x <= x &&\n                x < other.x + other.w &&\n                other.y + other.h > 0 &&\n                other.y + other.h <= partition.y\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        case \"bottom\":\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this x-coordinate and is below\n              return (\n                other.x <= x &&\n                x < other.x + other.w &&\n                other.y < mapHeight &&\n                other.y >= partition.y + partition.h\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        default:\n          return false;\n      }\n    };\n\n    const hasLeftPath = isPathClear(\"left\");\n    const hasRightPath = isPathClear(\"right\");\n    const hasTopPath = isPathClear(\"top\");\n    const hasBottomPath = isPathClear(\"bottom\");\n\n    // Count the number of open paths\n    const openPaths = [\n      hasLeftPath,\n      hasRightPath,\n      hasTopPath,\n      hasBottomPath,\n    ].filter(Boolean).length;\n\n    // Define wall rooms as those with exactly one open path\n    const isWallRoom = openPaths === 1;\n\n    return isWallRoom;\n  });\n};\n\nlet remove_wall_rooms = (\n  partitions: Array<Partition>,\n  w: number,\n  h: number,\n  prob: number = 1.0,\n): Array<Partition> => {\n  // Get all wall rooms\n  const wallRooms = get_wall_rooms(partitions, w, h);\n\n  // Remove wall rooms based on probability\n  for (const wallRoom of wallRooms) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter((p) => p !== wallRoom);\n    }\n  }\n\n  return partitions;\n};\n\nlet populate_grid = (\n  partitions: Array<Partition>,\n  grid: Array<Array<Partition | false>>,\n  w: number,\n  h: number,\n): Array<Array<Partition | false>> => {\n  for (let x = 0; x < w; x++) {\n    //loop through the horizontal tiles\n    grid[x] = []; //empty array at x index\n    for (let y = 0; y < h; y++) {\n      grid[x][y] = false;\n      for (const partition of partitions) {\n        if (partition.point_in(x, y)) grid[x][y] = partition;\n      }\n    }\n  }\n  return grid;\n  //input grid array, partitions array and width and height\n  //output grid array that indicates which cells are in which partition\n};\n\nlet generate_tendrils = (\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n) => {\n  const tendrilLength = Math.floor(Random.rand() * 3 + 2); // 2-4 rooms\n  const tendrilRoomSize = 4; // Small rooms for the tendril\n\n  // Pick a random existing room to branch from (prefer rooms with few connections)\n  let branchRooms = partialLevel.partitions.filter(\n    (p) => p.connections.length <= 2,\n  );\n  if (branchRooms.length === 0) branchRooms = partialLevel.partitions;\n\n  let branchRoom = branchRooms[Math.floor(Random.rand() * branchRooms.length)];\n  let branchPoint = branchRoom.get_branch_point();\n\n  // Choose a random direction for the tendril\n  const directions = [\n    { dx: 1, dy: 0 }, // right\n    { dx: -1, dy: 0 }, // left\n    { dx: 0, dy: 1 }, // down\n    { dx: 0, dy: -1 }, // up\n  ];\n  const direction = directions[Math.floor(Random.rand() * directions.length)];\n\n  let tendrilRooms = [];\n  let currentX = branchPoint.x;\n  let currentY = branchPoint.y;\n\n  // Generate tendril rooms\n  for (let i = 0; i < tendrilLength; i++) {\n    // Move in the chosen direction\n    currentX += direction.dx * (tendrilRoomSize + 1);\n    currentY += direction.dy * (tendrilRoomSize + 1);\n\n    // Create new tendril room\n    let tendrilRoom = new Partition(\n      currentX - Math.floor(tendrilRoomSize / 2),\n      currentY - Math.floor(tendrilRoomSize / 2),\n      tendrilRoomSize,\n      tendrilRoomSize,\n      \"lightblue\",\n    );\n\n    // Check if room would be outside map boundaries\n    if (\n      tendrilRoom.x < 0 ||\n      tendrilRoom.y < 0 ||\n      tendrilRoom.x + tendrilRoom.w >= map_w ||\n      tendrilRoom.y + tendrilRoom.h >= map_h\n    ) {\n      // Try to adjust position to stay within bounds\n      tendrilRoom.x = Math.max(\n        0,\n        Math.min(tendrilRoom.x, map_w - tendrilRoom.w),\n      );\n      tendrilRoom.y = Math.max(\n        0,\n        Math.min(tendrilRoom.y, map_h - tendrilRoom.h),\n      );\n\n      // If still invalid after adjustment, stop generating tendril\n      if (\n        tendrilRoom.x < 0 ||\n        tendrilRoom.y < 0 ||\n        tendrilRoom.x + tendrilRoom.w >= map_w ||\n        tendrilRoom.y + tendrilRoom.h >= map_h\n      ) {\n        break;\n      }\n    }\n\n    // Check for overlaps with existing partitions\n    let overlaps = partialLevel.partitions.some((p) => p.overlaps(tendrilRoom));\n    if (overlaps) {\n      // Try slight offset if there's an overlap\n      let offsetX = Random.rand() > 0.5 ? 2 : -2;\n      let offsetY = Random.rand() > 0.5 ? 2 : -2;\n\n      tendrilRoom.x = Math.max(\n        0,\n        Math.min(tendrilRoom.x + offsetX, map_w - tendrilRoom.w),\n      );\n      tendrilRoom.y = Math.max(\n        0,\n        Math.min(tendrilRoom.y + offsetY, map_h - tendrilRoom.h),\n      );\n\n      // If still overlapping after adjustment, skip this tendril\n      if (partialLevel.partitions.some((p) => p.overlaps(tendrilRoom))) {\n        break;\n      }\n    }\n\n    tendrilRooms.push(tendrilRoom);\n    partialLevel.partitions.push(tendrilRoom);\n\n    // Connect to previous room (either branch room or previous tendril room)\n    let previousRoom = i === 0 ? branchRoom : tendrilRooms[i - 1];\n    let connectionX = Math.floor(\n      (previousRoom.x +\n        previousRoom.w / 2 +\n        tendrilRoom.x +\n        tendrilRoom.w / 2) /\n        2,\n    );\n    let connectionY = Math.floor(\n      (previousRoom.y +\n        previousRoom.h / 2 +\n        tendrilRoom.y +\n        tendrilRoom.h / 2) /\n        2,\n    );\n\n    previousRoom.connections.push(\n      new PartitionConnection(connectionX, connectionY, tendrilRoom),\n    );\n    tendrilRoom.connections.push(\n      new PartitionConnection(connectionX, connectionY, previousRoom),\n    );\n\n    // Set open walls\n    previousRoom.setOpenWall(\n      new PartitionConnection(connectionX, connectionY, tendrilRoom),\n    );\n    tendrilRoom.setOpenWall(\n      new PartitionConnection(connectionX, connectionY, previousRoom),\n    );\n  }\n\n  // Make the last tendril room a ropehole\n  if (tendrilRooms.length > 0) {\n    let ropeholeRoom = tendrilRooms[tendrilRooms.length - 1];\n    ropeholeRoom.type = RoomType.ROPEHOLE;\n    ropeholeRoom.fillStyle = \"purple\";\n  }\n};\n\nlet generate_dungeon_candidate = async (\n  game: Game,\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  depth: number,\n  params: LevelParameters,\n) => {\n  const {\n    minRoomCount,\n    maxRoomCount,\n    maxRoomArea,\n    splitProbabilities,\n    wallRemoveProbability,\n    softMaxRoomArea,\n  } = params;\n\n  partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\n  let grid = [];\n\n  // Use splitProbabilities for splitting\n  while (partialLevel.partitions.length < params.maxRoomCount) {\n    for (let i = 0; i < splitProbabilities.length; i++) {\n      partialLevel.partitions = await split_partitions(\n        partialLevel.partitions,\n        splitProbabilities[i],\n      );\n    }\n  }\n  for (let i = 0; i < 100; i++) {\n    partialLevel.partitions.forEach(async (partition) => {\n      let roomArea = Math.random() > 0.95 ? softMaxRoomArea : maxRoomArea; //Math.random() > 0.95 ? params.softMaxRoomArea : params.maxRoomArea;\n      if (partition.area() > roomArea) {\n        partialLevel.partitions = partialLevel.partitions.filter(\n          (p) => p !== partition,\n        );\n        partialLevel.partitions = partialLevel.partitions.concat(\n          await split_partition(partition, 0.5),\n        );\n      }\n    });\n  }\n\n  //visualize_partialLevel.partitions(partialLevel.partitions, map_w, map_h);\n  partialLevel.partitions = remove_wall_rooms(\n    partialLevel.partitions,\n    map_w,\n    map_h,\n    wallRemoveProbability,\n  );\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  // Remove wall rooms based on probability\n  /*\n  if (partitions.length > params.minRoomCount) {\n    for (let i = 0; i < 1; i++) {\n      partitions = remove_wall_rooms(partitions, map_w, map_h, wallRemoveProbability);\n    }\n  }\n  \n  /*\n    partitions = partitions.filter((p) => {\n      if (p.area() > maxRoomArea && partitions.length > params.minRoomCount) {\n        return false;\n      }\n      return true;\n    });\n   \n    while (partitions.length > maxRoomCount) {\n      partitions.pop();\n    }\n  */\n\n  // Check if we have any partitions before proceeding\n  if (partialLevel.partitions.length === 0) {\n    partialLevel.partitions = [];\n    return;\n  }\n\n  //populate the grid with partitions\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\n  // shade each partition's fillStyle based on its area, medium gray for smallest, white for largest\n  partialLevel.partitions.forEach((partition) => {\n    partition.fillStyle = `rgba(128, 128, 128, ${partition.area() / partialLevel.partitions[0].area()})`;\n  });\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  // Make sure we have at least one partition before assigning spawn\n  if (partialLevel.partitions.length === 0) {\n    partialLevel.partitions = [];\n    return;\n  }\n\n  let spawn = partialLevel.partitions[0];\n  if (!spawn) {\n    partialLevel.partitions = [];\n    return;\n  }\n\n  spawn.type = RoomType.START;\n  spawn.fillStyle = \"rgb(0, 255, 0)\";\n  if (partialLevel.partitions.length > 1) {\n    partialLevel.partitions[partialLevel.partitions.length - 1].type =\n      RoomType.BOSS;\n    partialLevel.partitions[partialLevel.partitions.length - 1].fillStyle =\n      \"red\";\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  let found_boss = false;\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && !found_boss) {\n    let room = frontier[0];\n    if (room !== spawn) room.fillStyle = \"green\";\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 1000;\n\n    while (doors_found < num_doors && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of partialLevel.partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n\n          // Set open walls based on connection\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\n\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          if (p.type === RoomType.BOSS) {\n            found_boss = true;\n            p.fillStyle = \"rgb(255, 0, 0)\";\n          }\n          break;\n        }\n      }\n      tries++;\n    }\n\n    await new Promise((resolve) =>\n      setTimeout(\n        resolve,\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PATHFINDING_DELAY,\n      ),\n    );\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partialLevel.partitions) {\n    if (partition.connections.length === 0)\n      partialLevel.partitions = partialLevel.partitions.filter(\n        (p) => p !== partition,\n      );\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partialLevel.partitions.length === 0) {\n    partialLevel.partitions = [];\n    return; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\n    let room = partialLevel.partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 10;\n\n    let not_already_connected = partialLevel.partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p),\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n\n          // Set open walls based on connection\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\n\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // generate tendril for ropehole (can be easily disabled by commenting this line)\n  //generate_tendrils(partialLevel, map_w, map_h);\n\n  // add stair room\n  if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\n    partialLevel.partitions = [];\n    return;\n  }\n  let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\n  let found_stair = false;\n  const max_stair_tries = 5;\n  const stairRoomWidth = 5;\n  const stairRoomHeight = 5;\n\n  for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\n    let stair = new Partition(\n      Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand),\n      boss.y - stairRoomHeight - 1,\n      stairRoomWidth,\n      stairRoomHeight,\n      \"white\",\n    );\n    stair.type = RoomType.DOWNLADDER;\n    stair.fillStyle = \"blue\";\n    if (!partialLevel.partitions.some((p) => p.overlaps(stair))) {\n      found_stair = true;\n      partialLevel.partitions.push(stair);\n      stair.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, boss),\n      );\n\n      boss.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, stair),\n      );\n\n      // Set open walls for stair and boss connection\n      stair.setOpenWall(\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, boss),\n      );\n      boss.setOpenWall(\n        new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, stair),\n      );\n      break;\n    }\n  }\n  if (!found_stair) {\n    console.log(\"No stair found\");\n    partialLevel.partitions = [];\n    //game.pushMessage(\"No stair found\");\n    return;\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  // add special rooms\n  let added_rope_hole = false;\n  for (const p of partialLevel.partitions) {\n    if (p.type === RoomType.DUNGEON) {\n      if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0) {\n        p.type = RoomType.TREASURE;\n      } else if (\n        !added_rope_hole\n        //p.connections.length === 1 // Only rooms with exactly one connection (dead ends)\n      ) {\n        p.type = RoomType.ROPEHOLE;\n        added_rope_hole = true;\n      }\n    }\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n};\n\nlet generate_dungeon = async (\n  game: Game,\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  depth: number,\n  params: LevelParameters,\n) => {\n  let passes_checks = false;\n\n  let tries = 0;\n\n  while (!passes_checks) {\n    await generate_dungeon_candidate(\n      game,\n      partialLevel,\n      map_w,\n      map_h,\n      depth,\n      params,\n    );\n\n    passes_checks = true;\n    if (partialLevel.partitions.length < params.minRoomCount) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Not enough rooms\");\n    } else if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Boss room unreachable\");\n    } else if (\n      partialLevel.partitions.find((p) => p.type === RoomType.BOSS).distance < 3\n    ) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Boss room too close to spawn\");\n    }\n\n    tries++;\n    //if (tries > 100) break;\n  }\n\n  //game.pushMessage(\"Dungeon passed all checks\");\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  console.log(\"finished generation\");\n  //partialLevel.partitions.forEach((partition) => reduce_dimensions(partition, params));\n};\n\nlet generate_cave_candidate = async (\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  num_rooms: number,\n) => {\n  // Offset cave generation by 1000 to avoid overlap with main path dungeons\n  const CAVE_OFFSET = 100;\n  partialLevel.partitions = [\n    new Partition(CAVE_OFFSET, CAVE_OFFSET, map_w, map_h, \"white\"),\n  ];\n  let grid = [];\n\n  for (let i = 0; i < 9; i++)\n    partialLevel.partitions = await split_partitions(\n      partialLevel.partitions,\n      0.75,\n    );\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h);\n\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\n\n  if (partialLevel.partitions.length === 0) {\n    throw new Error(\"No partitions generated.\"); // Throw an error if no partitions\n  }\n\n  let spawn = partialLevel.partitions[0];\n  spawn.type = RoomType.ROPECAVE;\n  for (let i = 1; i < partialLevel.partitions.length; i++)\n    partialLevel.partitions[i].type = RoomType.CAVE;\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  // connect rooms until we hit num_rooms\n  while (frontier.length > 0 && connected.length < num_rooms) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 1000;\n\n    while (\n      doors_found < num_doors &&\n      tries < max_tries &&\n      connected.length < num_rooms\n    ) {\n      let point = room.get_branch_point();\n      if (!point) {\n      }\n\n      for (const p of partialLevel.partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  partialLevel.partitions = partialLevel.partitions.filter(\n    (partition) => partition.connections.length > 0,\n  );\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partialLevel.partitions.length === 0) {\n    throw new Error(\"No valid rooms after filtering.\"); // Throw an error if no valid rooms\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\n    let room = partialLevel.partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partialLevel.partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p),\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      if (!point) {\n        break; // Skip if no valid branch point found\n      }\n\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  return partialLevel.partitions;\n};\n\nlet generate_cave = async (\n  partialLevel: PartialLevel,\n  mapWidth: number,\n  mapHeight: number,\n): Promise<Array<Partition>> => {\n  const numberOfRooms = 8; // don't set this too high or cave generation will time out // changed to 3 from 10 to test\n\n  do {\n    await generate_cave_candidate(\n      partialLevel,\n      mapWidth,\n      mapHeight,\n      numberOfRooms,\n    );\n  } while (partialLevel.partitions.length < numberOfRooms);\n\n  return partialLevel.partitions;\n};\n\nlet generate_tutorial = (\n  height: number = 7,\n  width: number = 7,\n): Array<Partition> => {\n  let partitions: Array<Partition>;\n\n  partitions = [new Partition(0, 0, height, width, \"white\")];\n  partitions[0].type = RoomType.TUTORIAL;\n\n  return partitions;\n};\n\nlet visualize_partitions = (\n  partitions: Array<Partition>,\n  mapWidth: number,\n  mapHeight: number,\n) => {\n  // Create grid with padded spaces\n  const grid = Array.from(\n    { length: mapHeight },\n    () => Array(mapWidth).fill(\" . \"), // Pad dots with spaces\n  );\n\n  // Calculate the maximum number of digits needed\n  const maxIndex = partitions.length - 1;\n  const padLength = maxIndex.toString().length;\n\n  partitions.forEach((partition, index) => {\n    // Pad the index number with spaces to maintain consistent width\n    const paddedIndex = index.toString().padStart(padLength, \" \");\n\n    for (let x = partition.x; x < partition.x + partition.w; x++) {\n      for (let y = partition.y; y < partition.y + partition.h; y++) {\n        if (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\n          grid[y][x] = ` ${paddedIndex} `; // Pad numbers with spaces\n        }\n      }\n    }\n  });\n\n  console.log(\"Partition Layout:\");\n  console.log(\n    \"   \" + [...Array(mapWidth)].map((_, i) => i % 10).join(\"  \") + \" X\",\n  ); // Column headers\n  grid.forEach((row, index) => {\n    const paddedIndex = index.toString().padStart(2, \" \");\n    console.log(`${paddedIndex} ${row.join(\"\")}`);\n  });\n  console.log(\"Y\");\n};\n\nlet check_overlaps = (partitions: Array<Partition>): boolean => {\n  for (let i = 0; i < partitions.length; i++) {\n    for (let j = i + 1; j < partitions.length; j++) {\n      const a = partitions[i];\n      const b = partitions[j];\n      if (\n        a.x < b.x + b.w &&\n        a.x + a.w > b.x &&\n        a.y < b.y + b.h &&\n        a.y + a.h > b.y\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport class PartialLevel {\n  partitions: Array<Partition>;\n}\n\ninterface PathParameters {\n  pathType: PathType;\n  mapWidth: number;\n  mapHeight: number;\n  roomCount: { min: number; max: number };\n  splitProbabilities: number[];\n  wallRemoveProbability: number;\n  maxRoomArea: number;\n  softMaxRoomArea: number;\n  connectionStyle: \"linear\" | \"branched\";\n  loopDoorCount: { min: number; max: number };\n}\n\nexport class LevelGenerator {\n  game: Game;\n  seed: number;\n  depthReached = 0;\n  currentFloorFirstLevelID = 0;\n  partialLevel: PartialLevel;\n  levelParams: LevelParameters;\n  static ANIMATION_CONSTANT = 1;\n\n  private setOpenWallsForPartitions = (\n    partitions: Array<Partition>,\n    mapWidth: number,\n    mapHeight: number,\n  ) => {\n    for (const partition of partitions) {\n      // Reset all walls to closed by default\n      partition.isTopOpen = false;\n      partition.isRightOpen = false;\n      partition.isBottomOpen = false;\n      partition.isLeftOpen = false;\n\n      // Check if partition touches map boundaries\n      if (partition.x === 0) {\n        partition.isLeftOpen = true;\n      }\n      if (partition.y === 0) {\n        partition.isTopOpen = true;\n      }\n      if (partition.x + partition.w === mapWidth) {\n        partition.isRightOpen = true;\n      }\n      if (partition.y + partition.h === mapHeight) {\n        partition.isBottomOpen = true;\n      }\n    }\n  };\n\n  createLevel = (\n    depth: number,\n    isMainPath: boolean = true,\n    mapGroup: number,\n    envType: EnvType,\n  ) => {\n    let newLevel = new Level(\n      this.game,\n      depth,\n      100,\n      100,\n      isMainPath,\n      mapGroup,\n      envType,\n    );\n    return newLevel;\n  };\n\n  getRooms = (\n    partitions: Array<Partition>,\n    depth: number,\n    mapGroup: number,\n    envType: EnvType,\n  ): Array<Room> => {\n    //this.setOpenWallsForPartitions(partitions, 35, 35); // Using standard map size\n\n    let rooms: Array<Room> = [];\n\n    for (let i = 0; i < partitions.length; i++) {\n      let partition = partitions[i];\n\n      // Pass open walls information to the Room constructor\n      let room = new Room(\n        this.game,\n        partition.x - 1,\n        partition.y - 1,\n        partition.w + 2,\n        partition.h + 2,\n        partition.type,\n        depth,\n        mapGroup,\n        this.game.levels[depth],\n        Random.rand,\n        envType,\n      );\n      rooms.push(room);\n    }\n\n    let doors_added: Array<Door> = [];\n\n    partitions.forEach((partition, index) => {\n      partition.connections.forEach((connection) => {\n        let door = rooms[index].addDoor(connection.x, connection.y);\n        let existingDoor = doors_added.find(\n          (existing) => existing.x === door.x && existing.y === door.y,\n        );\n        if (existingDoor) {\n          existingDoor.link(door);\n          door.link(existingDoor);\n        }\n        doors_added.push(door);\n      });\n    });\n\n    for (let room of rooms) {\n      room.populate(Random.rand);\n    }\n\n    return rooms;\n  };\n\n  setSeed = (seed: number) => {\n    this.seed = seed;\n  };\n\n  generate = async (\n    game: Game,\n    depth: number,\n    isSidePath = false, // Updated parameter name for clarity\n    callback: (linkedRoom: Room) => void,\n  ) => {\n    this.levelParams = LevelParameterGenerator.getParameters(depth);\n    this.depthReached = depth;\n\n    // Set the random state based on the seed and depth\n    Random.setState(this.seed + depth);\n\n    this.game = game;\n\n    // Determine the map group\n    let mapGroup =\n      this.game.rooms.length > 0\n        ? this.game.rooms[this.game.rooms.length - 1].mapGroup + 1\n        : 0;\n\n    this.partialLevel = new PartialLevel();\n\n    // Generate partitions based on whether it's a side path or main path\n    if (isSidePath) await generate_cave(this.partialLevel, 50, 50);\n    else\n      await generate_dungeon(\n        game,\n        this.partialLevel,\n        this.levelParams.mapWidth,\n        this.levelParams.mapHeight,\n        depth,\n        this.levelParams,\n      );\n    let envType = EnvType.DUNGEON;\n    if (isSidePath) {\n      if (Math.random() < 0.5) {\n        envType = EnvType.FOREST;\n      } else {\n        envType = EnvType.CAVE;\n      }\n    }\n    // Call this function before get_wall_rooms\n    if (check_overlaps(this.partialLevel.partitions)) {\n      console.warn(\"There are overlapping partitions.\");\n    }\n\n    // Get the levels based on the partitions\n    let newLevel = this.createLevel(depth, !isSidePath, mapGroup, envType); // isMainPath = !isSidePath\n\n    if (isSidePath) {\n      // create Level object ONLY to prepare rooms, but\n      // DO NOT push to game.levels\n    } else {\n      this.game.levels.push(newLevel); // keep current behaviour\n    }\n\n    let rooms = this.getRooms(\n      this.partialLevel.partitions,\n      depth,\n      mapGroup,\n      envType,\n    );\n\n    newLevel.setRooms(rooms);\n    newLevel.populator.populateRooms();\n    newLevel.setRoomSkins();\n\n    // Only call linkExitToStart for main paths\n    if (newLevel.exitRoom) {\n      newLevel.exitRoom.linkExitToStart();\n    }\n\n    // Update the current floor first level ID if it's not a cave\n    if (!isSidePath) this.currentFloorFirstLevelID = this.game.rooms.length;\n\n    // Add the new levels to the game rooms\n    this.game.rooms = rooms;\n\n    // // Generate the rope hole if it exists\n    for (let room of rooms) {\n      if (room.type === RoomType.ROPEHOLE) {\n        for (let x = room.roomX; x < room.roomX + room.width; x++) {\n          for (let y = room.roomY; y < room.roomY + room.height; y++) {\n            let tile = room.roomArray[x][y];\n            if (tile instanceof DownLadder && tile.isSidePath) {\n              tile.generate();\n\n              callback(\n                isSidePath\n                  ? rooms.find((r) => r.type === RoomType.ROPECAVE)\n                  : rooms.find((r) => r.type === RoomType.START),\n              );\n              return;\n            }\n          }\n        }\n      }\n    }\n\n    // Return the start room or the rope cave room\n    callback(\n      isSidePath\n        ? rooms.find((r) => r.type === RoomType.ROPECAVE)\n        : rooms.find((r) => r.type === RoomType.START),\n    );\n  };\n\n  generateFirstNFloors = async (game, numFloors) => {\n    await this.generate(game, 0, false, () => {});\n    for (let i = 0; i < numFloors; i++) {\n      let foundRoom = this.game.rooms\n        .slice()\n        .reverse()\n        .find((room) => room.type === RoomType.DOWNLADDER);\n\n      if (foundRoom) {\n        for (\n          let x = foundRoom.roomX;\n          x < foundRoom.roomX + foundRoom.width;\n          x++\n        ) {\n          for (\n            let y = foundRoom.roomY;\n            y < foundRoom.roomY + foundRoom.height;\n            y++\n          ) {\n            let tile = foundRoom.roomArray[x][y];\n            if (tile instanceof DownLadder) {\n              tile.generate();\n              break;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (document.cookie.includes(\"showgeneration=true\")) {\n      if (this.partialLevel.partitions) {\n        this.partialLevel.partitions.forEach((partition) => {\n          partition.draw(\n            delta,\n            this.levelParams.mapWidth / 2,\n            this.levelParams.mapHeight / 2,\n          );\n        });\n      }\n    } else {\n      this.game.drawTextScreen(\"generating level\");\n    }\n  };\n}\n\nconst getPathParameters = (\n  pathType: PathType,\n  depth: number,\n): PathParameters => {\n  const baseParams = LevelParameterGenerator.getParameters(depth);\n\n  switch (pathType) {\n    case PathType.MAIN_PATH:\n      return {\n        pathType: PathType.MAIN_PATH,\n        mapWidth: baseParams.mapWidth,\n        mapHeight: baseParams.mapHeight,\n        roomCount: {\n          min: baseParams.minRoomCount,\n          max: baseParams.maxRoomCount,\n        },\n        splitProbabilities: [0.75, 1, 0.5], // Current dungeon split pattern\n        wallRemoveProbability: 0.5,\n        maxRoomArea: baseParams.maxRoomArea,\n        softMaxRoomArea: baseParams.softMaxRoomArea,\n        connectionStyle: \"linear\",\n        loopDoorCount: { min: 4, max: 8 },\n      };\n\n    case PathType.SIDE_PATH:\n      return {\n        pathType: PathType.SIDE_PATH,\n        mapWidth: 50, // Current cave size\n        mapHeight: 50,\n        roomCount: { min: 5, max: 5 }, // Current cave room count\n        splitProbabilities: [0.75, 1, 0.5], // Same split pattern for now\n        wallRemoveProbability: 0.5,\n        maxRoomArea: 100, // Smaller rooms for caves\n        softMaxRoomArea: 80,\n        connectionStyle: \"branched\", // More branched for caves\n        loopDoorCount: { min: 4, max: 8 },\n      };\n\n    case PathType.TUTORIAL:\n      return {\n        pathType: PathType.TUTORIAL,\n        mapWidth: 7,\n        mapHeight: 7,\n        roomCount: { min: 1, max: 1 },\n        splitProbabilities: [],\n        wallRemoveProbability: 0,\n        maxRoomArea: 49,\n        softMaxRoomArea: 49,\n        connectionStyle: \"linear\",\n        loopDoorCount: { min: 0, max: 0 },\n      };\n\n    default:\n      throw new Error(`Unknown path type: ${pathType}`);\n  }\n};\n","import { CrabEnemy } from \"../entity/enemy/crabEnemy\";\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\nimport { Spawner } from \"../entity/enemy/spawner\";\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\n\nexport const enemyClasses = {\n  1: CrabEnemy,\n  2: FrogEnemy,\n  3: ZombieEnemy,\n  4: SkullEnemy,\n  5: EnergyWizardEnemy,\n  6: ChargeEnemy,\n  7: RookEnemy,\n  8: BishopEnemy,\n  9: ArmoredzombieEnemy,\n  10: BigSkullEnemy,\n  11: QueenEnemy,\n  12: KnightEnemy,\n  13: BigKnightEnemy,\n  14: FireWizardEnemy,\n  15: ArmoredSkullEnemy,\n  16: MummyEnemy,\n  17: SpiderEnemy,\n};\n\nexport interface LevelParameters {\n  minRoomCount: number;\n  maxRoomCount: number;\n  maxRoomArea: number;\n  mapWidth: number;\n  mapHeight: number;\n  splitProbabilities: number[];\n  wallRemoveProbability: number;\n  numLoopDoorsRange: [number, number];\n  numberOfRooms: number;\n  softMaxRoomArea: number;\n}\n\nexport class LevelParameterGenerator {\n  /**\n   * Generates level parameters based on the current depth.\n   * @param depth The current depth level.\n   * @returns An object conforming to the LevelParameters interface.\n   */\n  static getParameters(depth: number): LevelParameters {\n    return {\n      minRoomCount: depth > 0 ? 0 : 0,\n      maxRoomCount: depth > 0 ? 12 : 6,\n      maxRoomArea: depth > 0 ? 120 + 10 * depth : 40,\n      mapWidth: 25 + 5 * depth,\n      mapHeight: 25 + 5 * depth,\n      splitProbabilities: [0.75, 1.0, 0.25], // Example probabilities\n      wallRemoveProbability: depth > 0 ? 0.1 : 1,\n      numLoopDoorsRange: [4, 8], // Random between 4 and 8\n      numberOfRooms: depth > 0 ? 5 : 3,\n      softMaxRoomArea: depth > 0 ? 0.5 * (120 + 10 * depth) : 40,\n    };\n  }\n}\n","import { Room } from \"../room/room\";\n\nexport class LightSource {\n  x: number;\n  y: number;\n  r: number;\n  c: [number, number, number];\n  b: number = 1;\n\n  oldX: number;\n  oldY: number;\n  oldR: number;\n  oldC: [number, number, number];\n  oldB: number;\n  dead: boolean = false;\n\n  hasChanged: boolean;\n  constructor(\n    x: number,\n    y: number,\n    r: number,\n    c: [number, number, number] = [180, 60, 5],\n    b: number = 1,\n  ) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    this.c = c;\n    this.b = b;\n    this.oldX = x;\n    this.oldY = y;\n    this.oldR = r;\n    this.oldC = c;\n    this.oldB = b;\n    this.hasChanged = true;\n  }\n\n  updatePosition = (x: number, y: number) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  shouldUpdate = () => {\n    return true;\n    this.hasChanged =\n      this.x !== this.oldX ||\n      this.y !== this.oldY ||\n      this.r !== this.oldR ||\n      this.c !== this.oldC ||\n      this.b !== this.oldB ||\n      this.hasChanged;\n    return this.hasChanged;\n  };\n}\n","import { LightSource } from \"./lightSource\";\nimport { Room } from \"../room/room\";\n\nexport class Lighting {\n  static momentaryLight = (\n    room: Room,\n    x: number,\n    y: number,\n    radius: number,\n    color: [number, number, number],\n    duration: number,\n    brightness: number,\n    delay: number,\n  ) => {\n    const lightSource = Lighting.newLightSource(\n      x,\n      y,\n      color,\n      radius,\n      brightness,\n    );\n    setTimeout(() => {\n      room.updateLightSources(lightSource);\n\n      setTimeout(() => {\n        room.updateLightSources(lightSource, true);\n      }, duration);\n    }, delay);\n  };\n\n  static newLightSource = (\n    x: number,\n    y: number,\n    color: [number, number, number],\n    radius: number,\n    brightness: number,\n  ) => {\n    return new LightSource(x, y, radius, color, brightness);\n  };\n\n  static addLightSource = (room: Room, lightSource: LightSource) => {\n    room.lightSources.push(lightSource);\n  };\n\n  static removeLightSource = (room: Room, lightSource: LightSource) => {\n    room.lightSources = room.lightSources.filter((ls) => ls !== lightSource);\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class AttackAnimation extends Particle {\n  tileX: number;\n  tileY: number;\n  tileYOffset: number;\n  x: number;\n  y: number;\n  frame: number;\n  type: string;\n  direction: Direction;\n  frames: number;\n  yOffset: number;\n  xOffset: number;\n  animationSpeed: number;\n\n  constructor(x: number, y: number, type: string, direction: Direction) {\n    super();\n    this.x = x;\n    this.y = y - 0.25;\n    this.dead = false;\n    this.frame = 0;\n    this.type = type;\n    this.xOffset = 0;\n    this.yOffset = 0;\n    this.tileX = 12;\n\n    this.animationSpeed = 1;\n    switch (type) {\n      case \"dagger\":\n        this.frames = 8;\n        this.tileY = 24;\n        this.yOffset = 0;\n        this.xOffset = 0;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 0.75;\n            break;\n          case Direction.UP:\n            this.yOffset += 0.5;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.8;\n            this.yOffset += 0.25;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.8;\n            this.yOffset -= 0.25;\n            break;\n        }\n\n        break;\n      case \"warhammer\":\n        this.frames = 8;\n        this.tileX = 12;\n        this.tileY = 32;\n        this.yOffset = -0.75;\n        this.xOffset = -0;\n        this.frame = -5;\n        this.animationSpeed = 2;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 0.25;\n            this.xOffset += 0.125;\n            break;\n          case Direction.UP:\n            this.yOffset += 1;\n            this.xOffset += 0.25;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.75;\n            this.yOffset += 0.5;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.75;\n            this.yOffset += 0.5;\n            break;\n        }\n        break;\n\n      case \"dualdagger\":\n        this.frames = 8;\n        this.tileY = 40;\n        this.yOffset = 0;\n        this.xOffset = 0;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 1;\n            break;\n          case Direction.UP:\n            this.yOffset += 0.5;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.8;\n            this.yOffset -= 0.25;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.8;\n            this.yOffset -= 0.25;\n            break;\n        }\n        break;\n\n      case \"dualdagger2\":\n        this.frames = 8;\n        this.tileY = 48;\n        this.yOffset = 0;\n        this.xOffset = 0;\n        //this.animationSpeed = 1;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 1;\n            break;\n          case Direction.UP:\n            this.yOffset += 0.5;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.8;\n            this.yOffset -= 0.25;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.8;\n            this.yOffset -= 0.25;\n            break;\n        }\n        break;\n\n      case \"spear\":\n        this.frames = 5;\n        this.tileY = 32;\n        this.tileX = 22;\n        this.animationSpeed = 0.5;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 0.75;\n            this.xOffset += 0.125;\n\n            break;\n          case Direction.UP:\n            //needs to draw behind player but its fine for now\n            this.yOffset += 1;\n            this.xOffset -= 0.125;\n\n            break;\n          case Direction.LEFT:\n            this.xOffset += 1;\n            this.yOffset += 0.25;\n\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 1;\n            this.yOffset += 0.25;\n\n            break;\n        }\n        break;\n\n      case \"scythe\":\n        this.frames = 6;\n        this.tileY = 40;\n        this.tileX = 0;\n        this.animationSpeed = 0.75;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 0.75;\n            this.xOffset += 0;\n            break;\n          case Direction.UP:\n            this.yOffset += 0.75;\n            this.xOffset -= 0;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.75;\n            this.yOffset += 0;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.75;\n            this.yOffset -= 0;\n            break;\n        }\n        break;\n\n      case \"sword\":\n        this.frames = 6;\n        this.tileY = 48;\n        this.tileX = 0;\n        this.animationSpeed = 0.75;\n\n        switch (direction) {\n          case Direction.DOWN:\n            this.yOffset -= 0.95;\n            this.xOffset += 0;\n            break;\n          case Direction.UP:\n            this.yOffset += 0.95;\n            this.xOffset -= 0;\n            break;\n          case Direction.LEFT:\n            this.xOffset += 0.95;\n            this.yOffset += 0;\n            break;\n          case Direction.RIGHT:\n            this.xOffset -= 0.95;\n            this.yOffset -= 0;\n            break;\n        }\n        break;\n    }\n    switch (direction) {\n      case Direction.DOWN:\n        this.tileYOffset = 0;\n        break;\n      case Direction.UP:\n        this.tileYOffset = 2;\n        break;\n      case Direction.LEFT:\n        this.tileYOffset = 4;\n        break;\n      case Direction.RIGHT:\n        this.tileYOffset = 6;\n        break;\n    }\n  }\n\n  drawTopLayer = (delta: number) => {\n    // if (this.frame <= this.frames / 2)\n    this.drawAnimation(delta);\n  };\n\n  drawAnimation = (delta: number) => {\n    if (this.dead) return;\n    if (this.frame >= 0) {\n      Game.drawFX(\n        this.tileX + 2 * Math.round(Math.max(0, this.frame) / 2),\n        this.tileY + this.tileYOffset,\n        2,\n        2,\n        this.x - 0.5 + this.xOffset,\n        this.y - 0.5 + this.yOffset,\n        2,\n        2,\n      );\n    }\n\n    this.frame += this.animationSpeed * delta;\n    if (this.frame > this.frames) this.dead = true;\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Room } from \"../room/room\";\nimport { Particle } from \"./particle\";\n\nexport class DamageNumber extends Particle {\n  room: Room;\n  damage: number;\n  x: number;\n  y: number;\n  alpha: number = 1;\n  color: string;\n  outlineColor: string;\n  frame: number = 0;\n  xoffset: number = 0;\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    damage: number,\n    color?: string,\n    outlineColor?: string,\n  ) {\n    super();\n    this.room = room;\n    this.damage = damage;\n    this.x = x;\n    this.y = y;\n    if (color) this.color = color;\n    else this.color = \"red\";\n    if (outlineColor) this.outlineColor = outlineColor;\n    else this.outlineColor = GameConstants.OUTLINE;\n    this.xoffset = Math.random() * 0.2;\n  }\n  getXoffset = () => {\n    if (this.room.particles.length > 0) {\n      let damageNumbers = this.room.particles.filter(\n        (p) => p instanceof DamageNumber,\n      );\n      if (damageNumbers.length % 3 === 0) return 0.5;\n      if (damageNumbers.length % 3 === 1) return 0;\n      if (damageNumbers.length % 3 === 2) return 0.25;\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    Game.ctx.save();\n\n    if (this.dead) {\n      Game.ctx.restore();\n      return;\n    }\n    if (this.frame > 15) this.alpha -= 0.025 * delta;\n\n    this.y -= 0.03 * delta;\n    this.frame += delta;\n    let width = Game.measureText(this.damage.toString()).width;\n    if (this.alpha <= 0.002) {\n      this.alpha = 0;\n      this.dead = true;\n    }\n    Game.ctx.globalAlpha = this.alpha;\n    console.log(this.damage),\n      Game.fillTextOutline(\n        this.damage.toString(),\n        (this.x + 0.4 + this.xoffset) * GameConstants.TILESIZE - width / 2,\n        (this.y - 0.6) * GameConstants.TILESIZE,\n        this.outlineColor,\n        this.color,\n      );\n\n    Game.ctx.globalAlpha = 1;\n\n    Game.ctx.restore();\n  };\n}\n","import { Room } from \"../room/room\";\nimport { Particle } from \"./particle\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport class GenericParticle extends Particle {\n  level: Room;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n\n  static shotgun = (\n    level: Room,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    color: string,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          color,\n          0,\n          10000000,\n          tx + Math.random() - 0.5,\n          ty + Math.random() - 0.5,\n          0,\n        ),\n      );\n    }\n  };\n\n  static spawnCluster = (\n    level: Room,\n    cx: number,\n    cy: number,\n    color: string,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025,\n          cy + Math.random() * 0.05 - 0.025,\n          Math.random() * 0.5,\n          0.0625 * (i + 8),\n          0.025 * (Math.random() * 2 - 1),\n          0.025 * (Math.random() * 2 - 1),\n          0.2 * (Math.random() - 1),\n          color,\n          0,\n        ),\n      );\n    }\n  };\n\n  constructor(\n    level: Room,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    color: string,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number,\n  ) {\n    super();\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.color = color;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 1000000;\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\n    let halfS = 0.5 * scaledS;\n    let oldFillStyle = Game.ctx.fillStyle;\n    Game.ctx.fillStyle = this.color;\n    Game.ctx.imageSmoothingEnabled = false;\n\n    Game.ctx.beginPath();\n    Game.ctx.arc(\n      Math.round(this.x * scale),\n      Math.round((this.y - this.z) * scale),\n      Math.round(halfS * scale),\n      0,\n      2 * Math.PI,\n      false,\n    );\n    Game.ctx.fill();\n\n    Game.ctx.fillStyle = oldFillStyle;\n  };\n\n  draw = (delta: number) => {\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\n    else this.x += this.dx;\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\n    else this.y += this.dy;\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\n    else this.z += this.dz;\n\n    this.dx *= 0.97;\n    this.dy *= 0.97;\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    // apply gravity\n    this.dz -= 0.01;\n\n    if (this.alpha < 0.2) this.alpha -= 0.007;\n    else this.alpha -= 0.02;\n    if (this.alpha <= 0.1) this.dead = true;\n\n    this.expirationTimer--;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Room } from \"../room/room\";\nimport { Particle } from \"./particle\";\nimport { Direction, Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Random } from \"../utility/random\";\nimport { Player, PlayerDirection } from \"../player/player\";\nimport { Entity } from \"../entity/entity\";\n\nexport class ImageParticle extends Particle {\n  room: Room;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n  tileX: number;\n  tileY: number;\n  size: number;\n  static shotgun = (\n    room: Room,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    tileX: number,\n    tileY: number,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      room.particles.push(\n        new ImageParticle(\n          room,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          tileX,\n          tileY,\n          0, //size\n        ),\n      );\n    }\n  };\n\n  static spawnCluster = (\n    level: Room,\n    cx: number,\n    cy: number,\n    tileX: number,\n    tileY: number,\n  ) => {\n    for (let i = Math.floor(Math.random() * 3); i < 5; i++) {\n      level.particles.push(\n        new ImageParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025, // x\n          cy + Math.random() * 0.05 - 0.025, // y\n          Math.random() * 0.5, // z\n          0.0625 * (i + 8), // s\n          0.025 * (Math.random() * 2 - 1), //dx\n          0.025 * (Math.random() * 2 - 1), //dy\n          0.2 * (Math.random() - 1), //dz\n          tileX,\n          tileY,\n          [2, 1, 0, 1, 2, 2, 2][i], //size\n        ),\n      );\n    }\n  };\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    tileX: number,\n    tileY: number,\n    size: number,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number,\n  ) {\n    super();\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.z = z; // Use provided height\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.tileX = tileX;\n    this.tileY = tileY;\n    this.size = size;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 100; // Increased life duration\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let yOffset = this.z * scale;\n    let frame = this.s > 0.5 ? 1 : 0; // Placeholder frames for large and small particles\n    Game.ctx.imageSmoothingEnabled = false;\n\n    let adjustedTileX = this.tileX + this.size;\n    Game.drawFX(\n      adjustedTileX,\n      this.tileY,\n      1,\n      1,\n      this.x - this.alpha / 2,\n      this.y - this.z - this.alpha / 2,\n      1,\n      1,\n      this.shadeColor(),\n      this.shadeAmount(),\n    );\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.imageSmoothingEnabled = false;\n\n    if (this.targetX) this.x += 0.2 * (this.targetX - this.x) * delta;\n    else this.x += this.dx * delta;\n    if (this.targetY) this.y += 0.2 * (this.targetY - this.y) * delta;\n    else this.y += this.dy * delta;\n    if (this.targetZ) this.z += 0.2 * (this.targetZ - this.z) * delta;\n    else this.z += this.dz * delta;\n\n    this.dx *= Math.pow(0.97, delta);\n    this.dy *= Math.pow(0.97, delta);\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    this.dz -= 0.01 * delta;\n\n    this.expirationTimer -= delta;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Drawable } from \"../drawable/drawable\";\nimport { Entity } from \"../entity/entity\";\nimport { Player } from \"../player/player\";\nimport { Room } from \"../room/room\";\n\nexport class Particle extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  room: Room;\n  drawTopLayer = (delta) => {};\n  shadeAmount = () => {\n    const x = Math.floor(this.x);\n    const y = Math.floor(this.y);\n\n    if (!this.room.softVis[x]) return 0.9;\n\n    const shade = this.room.softVis[x][y];\n    return shade ?? 0.9;\n  };\n  shadeColor = () => {\n    return this.room.shadeColor;\n  };\n}\n","import { Particle } from \"./particle\";\nimport { Game } from \"../game\";\n\nexport class WizardTeleportParticle extends Particle {\n  x: number;\n  y: number;\n  z: number;\n  dz: number;\n  frame: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.frame = 0;\n    this.z = 0;\n    this.dz = 0.1;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\n    this.z += this.dz * delta;\n    this.dz *= 0.9;\n    this.frame += 0.3 * delta;\n    if (this.frame > 6) this.dead = true;\n  };\n}\n","import { Input, InputEnum } from \"../game/input\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { ChatMessage, Direction, Game, LevelState } from \"../game\";\nimport { Door, DoorType } from \"../tile/door\";\nimport { Trapdoor } from \"../tile/trapdoor\";\nimport { Inventory } from \"../inventory/inventory\";\nimport { Sound } from \"../sound/sound\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Map } from \"../gui/map\";\nimport { HealthBar } from \"../drawable/healthbar\";\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Entity, EntityType } from \"../entity/entity\";\nimport { Item } from \"../item/item\";\n\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { LightSource } from \"../lighting/lightSource\";\n\nimport { Utils } from \"../utility/utils\";\nimport { Menu } from \"../gui/menu\";\nimport { Bestiary } from \"../game/bestiary\";\nimport { PlayerInputHandler } from \"./playerInputHandler\";\nimport { PlayerActionProcessor } from \"./playerActionProcessor\";\nimport { PlayerMovement } from \"./playerMovement\";\nimport { PlayerRenderer } from \"./playerRenderer\";\nimport { Wall } from \"../tile/wall\";\n\nexport enum PlayerDirection {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n}\n\nenum DrawDirection {\n  X,\n  Y,\n}\n\nexport class Player extends Drawable {\n  id: string;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  direction: Direction;\n  lastDirection: Direction;\n  game: Game;\n  levelID: number; // which room we're in (level[levelID])\n  health: number;\n  maxHealth: number;\n  healthBar: HealthBar;\n  dead: boolean;\n  lastTickHealth: number;\n  inventory: Inventory;\n  sightRadius: number;\n  defaultSightRadius: number;\n  static minSightRadius: number = 2; //hard minimum sight radius that ignores depth\n  map: Map;\n  openVendingMachine: VendingMachine;\n  isLocalPlayer: boolean;\n  mapToggled: boolean;\n  lastHitBy: string;\n  turnCount: number;\n  triedMove: boolean;\n  tutorialRoom: boolean;\n\n  moveRange: number;\n  tileCursor: { x: number; y: number };\n  lightEquipped: boolean;\n  lightSource: LightSource;\n  hurtShield: boolean; // handles logic to take damage or not\n  lightBrightness: number;\n  moveDistance: number;\n  moveQueue: { x: number; y: number; direction: Direction }[];\n  lastX: number;\n  lastY: number;\n  justMoved: DrawDirection;\n  depth: number;\n  menu: Menu;\n  busyAnimating: boolean;\n  lightColor: [number, number, number];\n\n  inputHandler: PlayerInputHandler;\n  actionProcessor: PlayerActionProcessor;\n  movement: PlayerMovement;\n\n  cooldownRemaining: number;\n\n  private renderer: PlayerRenderer;\n\n  private drawMoveQueue: {\n    drawX: number;\n    drawY: number;\n  }[] = [];\n\n  seenEnemies: Set<typeof Enemy> = new Set();\n  bestiary: Bestiary = null;\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\n    super();\n\n    this.game = game;\n\n    this.levelID = 0;\n\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.moveDistance = 0;\n    this.direction = Direction.UP;\n    this.lastDirection = Direction.UP;\n\n    this.lastX = 0;\n    this.lastY = 0;\n    this.isLocalPlayer = isLocalPlayer;\n    this.depth = 0;\n    this.menu = new Menu(this);\n    this.busyAnimating = false;\n\n    this.mapToggled = true;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.healthBar = new HealthBar();\n    this.dead = false;\n    this.lastTickHealth = this.health;\n\n    this.inventory = new Inventory(game, this);\n    this.defaultSightRadius = 3;\n    this.sightRadius = LevelConstants.LIGHTING_MAX_DISTANCE; //this.defaultSightRadius;\n    this.map = new Map(this.game, this);\n    this.turnCount = 0;\n    this.triedMove = false;\n    this.tutorialRoom = false;\n\n    this.tileCursor = { x: 0, y: 0 };\n    this.moveRange = 1;\n    this.lightEquipped = false;\n    this.lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\n\n    this.hurtShield = false;\n    this.lightBrightness = 0.3;\n\n    this.moveQueue = [];\n    this.justMoved = DrawDirection.Y;\n\n    this.inputHandler = new PlayerInputHandler(this);\n    this.actionProcessor = new PlayerActionProcessor(this);\n    this.movement = new PlayerMovement(this);\n    this.renderer = new PlayerRenderer(this);\n\n    this.bestiary = new Bestiary(this.game, this);\n\n    this.cooldownRemaining = 0;\n  }\n\n  get hitX() {\n    return this.renderer?.drawX ?? 0;\n  }\n  get hitY() {\n    return this.renderer?.drawY ?? 0;\n  }\n\n  get drawX() {\n    return this.renderer?.drawX ?? 0;\n  }\n  get drawY() {\n    return this.renderer?.drawY ?? 0;\n  }\n\n  setHitXY = (newX: number, newY: number, distance = 0.5) => {\n    this.renderer.hitX = distance * (this.x - newX);\n    this.renderer.hitY = distance * (this.y - newY);\n  };\n\n  applyStatus = (\n    enemy: Entity,\n    status: { poison: boolean; blood: boolean },\n  ) => {\n    if (enemy instanceof Enemy) {\n      if (status.poison) {\n        enemy.poison();\n        return true;\n      }\n      if (status.blood) {\n        enemy.bleed();\n        return true;\n      }\n    }\n  };\n\n  isMouseOnPlayerTile = () => {\n    return this.mouseToTile().x === this.x && this.mouseToTile().y === this.y;\n  };\n\n  isMouseAboveFloor = (offsetY: number = 0) => {\n    const mouseTile = this.mouseToTile(offsetY);\n\n    // Handle undefined coordinates\n    if (mouseTile.x === undefined || mouseTile.y === undefined) {\n      return false;\n    }\n\n    const mouseX = mouseTile.x;\n    const mouseY = mouseTile.y;\n\n    if (\n      this.game.levelState === LevelState.LEVEL_GENERATION ||\n      !this.game.started ||\n      !this.game.room ||\n      !this.game.room.roomArray ||\n      !Array.isArray(this.game.room.roomArray[mouseX]) ||\n      this.game.room.roomArray[mouseX][mouseY] === undefined\n    )\n      return false;\n\n    return !(\n      !this.game.room?.tileInside(mouseX, mouseY) ||\n      (this.game.room?.tileInside(mouseX, mouseY) &&\n        this.game.room?.roomArray[mouseX][mouseY].isSolid() &&\n        !(this.game.room?.roomArray[mouseX][mouseY] instanceof Door))\n    );\n  };\n\n  mouseInLine = () => {\n    const mouseTile = this.mouseToTile();\n\n    // Handle undefined coordinates\n    if (mouseTile.x === undefined || mouseTile.y === undefined) {\n      return false;\n    }\n\n    return mouseTile.x === this.x || mouseTile.y === this.y;\n  };\n\n  canMoveWithMouse = () => {\n    if (this.inventory.isOpen) {\n      return null;\n    }\n\n    const isFloorNormal = this.isMouseAboveFloor();\n    const isFloorOffset = this.isMouseAboveFloor(8);\n\n    if (!isFloorNormal && !isFloorOffset) {\n      return null;\n    }\n\n    const mouseTile = this.mouseToTile();\n    const offsetMouseTile = this.mouseToTile(8);\n\n    if (\n      mouseTile.x === undefined ||\n      mouseTile.y === undefined ||\n      offsetMouseTile.x === undefined ||\n      offsetMouseTile.y === undefined\n    ) {\n      return null;\n    }\n\n    if (\n      !this.game.room.roomArray ||\n      !this.game.room.roomArray[mouseTile.x] ||\n      !this.game.room.roomArray[mouseTile.x][mouseTile.y]\n    ) {\n      return null;\n    }\n\n    let targetY = mouseTile.y;\n    const hasEntityAtOffset = this.checkTileForEntity(offsetMouseTile);\n\n    if (isFloorOffset && hasEntityAtOffset) {\n      targetY = offsetMouseTile.y;\n    }\n\n    const sameX = mouseTile.x === this.x;\n    const sameY = targetY === this.y;\n\n    if (sameX && sameY) {\n      return null;\n    }\n\n    if (sameX) {\n      const nextY = targetY < this.y ? this.y - 1 : this.y + 1;\n\n      if (\n        !this.game.room.roomArray[this.x] ||\n        !this.game.room.roomArray[this.x][nextY]\n      ) {\n        return null;\n      }\n\n      return targetY < this.y\n        ? { direction: Direction.UP, x: this.x, y: nextY }\n        : { direction: Direction.DOWN, x: this.x, y: nextY };\n    }\n\n    if (sameY) {\n      const nextX = mouseTile.x < this.x ? this.x - 1 : this.x + 1;\n\n      if (\n        !this.game.room.roomArray[nextX] ||\n        !this.game.room.roomArray[nextX][this.y]\n      ) {\n        return null;\n      }\n\n      return mouseTile.x < this.x\n        ? { direction: Direction.LEFT, x: nextX, y: this.y }\n        : { direction: Direction.RIGHT, x: nextX, y: this.y };\n    }\n\n    return null;\n  };\n\n  stall = () => {\n    if (!this.game.started || !this.game.room || !this.renderer) return;\n    if (this.game.levelState === LevelState.IN_LEVEL) {\n      this.game?.room?.tick(this);\n      this.shakeScreen(this.x - 0.5, this.y, this.x + 0.5, this.y, 5);\n      this.game.pushMessage(\"Equipping an item takes a turn.\");\n    }\n  };\n\n  moveWithMouse = () => {\n    this.inputHandler.setMostRecentMoveInput(\"mouse\");\n    if (!GameConstants.MOVE_WITH_MOUSE) return;\n    const moveData = this.canMoveWithMouse();\n    if (moveData !== null) {\n      this.actionProcessor.process({\n        type: \"MouseMove\",\n        direction: moveData.direction,\n        targetX: moveData.x,\n        targetY: moveData.y,\n      });\n    }\n  };\n\n  mouseToTile = (offsetY: number = 0) => {\n    // Handle undefined mouse coordinates\n    if (Input.mouseX === undefined || Input.mouseY === undefined) {\n      return { x: undefined, y: undefined };\n    }\n\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Convert pixel offset to tile offset\n    const tileOffsetX = Math.floor(\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n    const tileOffsetY = Math.floor(\n      (Input.mouseY + offsetY - screenCenterY + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n\n    return {\n      x: this.x + tileOffsetX,\n      y: this.y + tileOffsetY,\n    };\n  };\n\n  tileToMouse = (tileX, tileY) => {\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Calculate the offset from the center position\n    const tileOffsetX = tileX - this.x;\n    const tileOffsetY = tileY - this.y;\n\n    // Convert tile offset to pixel coordinates\n    const pixelX = screenCenterX + tileOffsetX * GameConstants.TILESIZE;\n    const pixelY = screenCenterY + tileOffsetY * GameConstants.TILESIZE;\n\n    return {\n      x: pixelX,\n      y: pixelY,\n    };\n  };\n\n  setTileCursorPosition = () => {\n    const offsetX =\n      Math.floor(GameConstants.WIDTH / 2) / GameConstants.TILESIZE;\n    const offsetY =\n      Math.floor(GameConstants.HEIGHT / 2) / GameConstants.TILESIZE;\n\n    const mousePosition = this.mouseToTile();\n\n    // Calculate cursor position relative to center\n    let cursorX = mousePosition.x - this.x + offsetX - 0.5;\n    let cursorY = mousePosition.y - this.y + offsetY - 0.5;\n\n    // Clamp cursor to be no further than 1 tile from center\n    // Center is at (offsetX, offsetY)\n    const centerX = offsetX;\n    const centerY = offsetY;\n\n    // Calculate distance from center (before the 0.5 offset)\n    const distanceX = Math.abs(cursorX + 0.5 - centerX);\n    const distanceY = Math.abs(cursorY + 0.5 - centerY);\n\n    // Clamp if needed\n    if (distanceX > 1) {\n      // Preserve direction but limit distance\n      const direction = cursorX > centerX ? 1 : -1;\n      cursorX = centerX + direction - 0.5; // -0.5 to account for the offset\n    }\n\n    if (distanceY > 1) {\n      // Preserve direction but limit distance\n      const direction = cursorY > centerY ? 1 : -1;\n      cursorY = centerY + direction - 0.5; // -0.5 to account for the offset\n    }\n\n    this.tileCursor = {\n      x: cursorX,\n      y: cursorY,\n    };\n  };\n\n  enemyInRange = (eX: number, eY: number, range: number | null) => {\n    // Use nullish coalescing operator for cleaner default value\n    const r = range ?? 1;\n\n    // Same tile - not in range\n    if (eX === this.x && eY === this.y) return false;\n\n    // Diagonal - not in range\n    if (eX !== this.x && eY !== this.y) return false;\n\n    // Check horizontal range\n    if (eY === this.y) {\n      return Math.abs(eX - this.x) <= r;\n    }\n\n    // Check vertical range\n    if (eX === this.x) {\n      return Math.abs(eY - this.y) <= r;\n    }\n\n    return false;\n  };\n\n  getDirectionFromCoords = (inputX: number, inputY: number): string => {\n    // Same position - no direction\n    if (inputX === this.x && inputY === this.y) return \"\";\n\n    // Diagonal - no direction\n    if (inputX !== this.x && inputY !== this.y) return \"\";\n\n    // Check horizontal\n    if (inputY === this.y) {\n      return inputX > this.x ? \"right\" : \"left\";\n    }\n\n    // Check vertical\n    if (inputX === this.x) {\n      return inputY > this.y ? \"down\" : \"up\";\n    }\n\n    return \"arrow\";\n  };\n\n  setCursorIcon = () => {\n    // Early return cases\n    if (this.inventory.isDragging) {\n      MouseCursor.getInstance().setIcon(\"grab\");\n      return;\n    }\n\n    const cursor = MouseCursor.getInstance();\n    const mousePos = cursor.getPosition();\n    const mouseTile = this.mouseToTile();\n\n    // Check cursor states in order of priority\n    const cursorState = this.getCursorState(mousePos, mouseTile);\n    cursor.setIcon(cursorState);\n  };\n\n  private getCursorState = (\n    mousePos: { x: number; y: number },\n    mouseTile: { x: number; y: number },\n  ): string => {\n    // 1. Check UI interactions\n    if (this.isMouseInUI(mousePos)) {\n      return \"hand\";\n    }\n    if (this.isEntityAttackable(mouseTile)) {\n      return \"sword\";\n    }\n\n    // 2. Check game world interactions\n    if (this.isMouseAboveFloor() && this.mouseInLine()) {\n      // 2a. Check for attackable entities\n\n      // 2b. Check for movement target\n      if (this.enemyInRange(mouseTile.x, mouseTile.y, 1)) {\n        return this.getDirectionFromCoords(mouseTile.x, mouseTile.y);\n      }\n\n      // 2c. Default floor interaction\n      return \"hand\";\n    }\n\n    // 3. Default cursor state\n    return \"arrow\";\n  };\n\n  private isMouseInUI = (mousePos: { x: number; y: number }): boolean => {\n    const { x, y } = mousePos;\n\n    return (\n      this.inventory.isPointInInventoryButton(x, y) ||\n      this.isInventoryItemInteraction(x, y)\n    );\n  };\n\n  private isInventoryItemInteraction = (x: number, y: number): boolean => {\n    const hasSelectedItem = this.inventory.itemAtSelectedSlot() instanceof Item;\n\n    return (\n      (this.inventory.isPointInQuickbarBounds(x, y).inBounds &&\n        hasSelectedItem) ||\n      (this.inventory.isOpen &&\n        this.inventory.isPointInInventoryBounds(x, y).inBounds &&\n        hasSelectedItem)\n    );\n  };\n\n  private isEntityAttackable = (mouseTile: {\n    x: number;\n    y: number;\n  }): boolean => {\n    // Check current tile\n    const currentTileCheck = this.checkTileForEntity(mouseTile);\n    if (currentTileCheck) return true;\n\n    // Check tile above with 0.5 tile offset\n    const belowTileCheck = this.checkTileForEntity({\n      x: mouseTile.x,\n      y: this.mouseToTile(GameConstants.TILESIZE / 2).y,\n    });\n\n    return belowTileCheck;\n  };\n\n  private checkTileForEntity = (tile: { x: number; y: number }): boolean => {\n    const range = this.inventory.weapon?.range ?? 1;\n    return this.game.room.entities.some((entity) => {\n      return (\n        entity.x === tile.x &&\n        entity.y === tile.y &&\n        this.enemyInRange(entity.x, entity.y, range)\n      );\n    });\n  };\n\n  restart = () => {\n    this.dead = false;\n    this.game.newGame();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tryCollide = (other: any, newX: number, newY: number) => {\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\n    return true;\n  };\n\n  tryMove = (x: number, y: number) => {\n    if (\n      this.busyAnimating ||\n      this.game.levelState === LevelState.TRANSITIONING ||\n      this.game.levelState === LevelState.TRANSITIONING_LADDER\n    )\n      return;\n    // TODO don't move if hit by enemy\n    this.game.levels[this.depth].rooms[this.levelID].catchUp();\n    //this.game.room.catchUp();\n    if (!this.game.room) {\n      console.warn(\"oi bruv, game.room isn't even there!\");\n      return;\n    }\n    if (this.dead) return;\n\n    //for (let i = 0; i < 2; i++) //no idea why we would loop this...\n    if (\n      this.inventory.hasWeapon() &&\n      !this.inventory.getWeapon().weaponMove(x, y)\n    ) {\n      //for (let h of this.game.levels[this.levelID].hitwarnings) {\n      //if (newMove instanceof HitWarning)\n      return;\n      //}\n    }\n\n    for (let e of this.game.levels[this.depth].rooms[this.levelID].entities) {\n      e.lastX = e.x;\n      e.lastY = e.y;\n      //console.log(`e.lastX, e.lastY: ${e.lastX}, ${e.lastY}`);\n      if (this.tryCollide(e, x, y)) {\n        if (e.pushable) {\n          // pushing a crate or barrel\n\n          let dx = x - this.x;\n          let dy = y - this.y;\n          let nextX = x + dx;\n          let nextY = y + dy;\n          let foundEnd = false; // end of the train of whatever we're pushing\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\n          let pushedEnemies = [];\n          while (true) {\n            foundEnd = true;\n            for (const f of this.game.levels[this.depth].rooms[this.levelID]\n              .entities) {\n              f.lastX = f.x;\n              f.lastY = f.y;\n              if (f.pointIn(nextX, nextY)) {\n                if (!f.chainPushable) {\n                  enemyEnd = true;\n                  foundEnd = true;\n                  break;\n                }\n                foundEnd = false;\n                pushedEnemies.push(f);\n                break;\n              }\n            }\n            if (foundEnd) break;\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\n          }\n          /* if no enemies and there is a wall, no move\n          otherwise, push everything, killing last enemy if there is a wall */\n          // here, (nextX, nextY) is the position immediately after the end of the train\n\n          if (\n            pushedEnemies.length === 0 &&\n            (this.game.levels[this.depth].rooms[this.levelID].roomArray[nextX][\n              nextY\n            ].canCrushEnemy() ||\n              enemyEnd)\n          ) {\n            if (e.destroyable) {\n              //fallback if no weapon equipped\n              e.hurt(this, e.health, \"none\");\n              if (\n                this.game.levels[this.depth].rooms[this.levelID] ===\n                this.game.room\n              )\n                Sound.hit();\n\n              this.shakeScreen(this.x, this.y, e.x, e.y);\n              this.hitShake(this.x, this.y, e.x, e.y);\n\n              this.game.levels[this.depth].rooms[this.levelID].tick(this);\n              return;\n            }\n          } else {\n            if (\n              this.game.levels[this.depth].rooms[this.levelID] ===\n              this.game.room\n            )\n              Sound.push();\n            // here pushedEnemies may still be []\n\n            for (const f of pushedEnemies) {\n              f.lastX = f.x;\n              f.lastY = f.y;\n              f.x += dx;\n              f.y += dy;\n              f.drawX = dx;\n              f.drawY = dy;\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\n            }\n            if (\n              this.game.levels[this.depth].rooms[this.levelID].roomArray[nextX][\n                nextY\n              ].canCrushEnemy() ||\n              enemyEnd\n            ) {\n              pushedEnemies[pushedEnemies.length - 1].crush();\n              if (\n                this.game.levels[this.depth].rooms[this.levelID] ===\n                this.game.room\n              )\n                Sound.hit();\n            }\n\n            e.x += dx;\n            e.y += dy;\n            e.drawX = dx;\n            e.drawY = dy;\n            this.move(x, y);\n            this.moveDistance++;\n            this.game.levels[this.depth].rooms[this.levelID].tick(this);\n            return;\n          }\n        } else {\n          // if we're trying to hit an enemy, check if it's destroyable\n          if (!e.dead) {\n            if (e.interactable) e.interact(this);\n            //this.actionTab.actionState = ActionState.ATTACK;\n            //sets the action tab state to Attack\n            return;\n          }\n        }\n      }\n    }\n    let other =\n      this.game.levels[this.depth].rooms[this.levelID]?.roomArray?.[x]?.[y];\n    if (!other) {\n      console.warn(\"oi bruv, tile to check for collision isn't even there!\");\n      return;\n    }\n    if (!this.game.levels[this.depth].rooms[this.levelID]) {\n      console.warn(\"oi bruv, room to check for collision isn't even there!\");\n      return;\n    }\n    if (!this.game.levels[this.depth].rooms[this.levelID].roomArray) {\n      console.warn(\"oi bruv, level to check for collision isn't even there!\");\n      return;\n    }\n    if (!other.isSolid()) {\n      this.move(x, y);\n      other.onCollide(this);\n      if (!(other instanceof Door || other instanceof Trapdoor))\n        this.game.levels[this.depth].rooms[this.levelID].tick(this);\n    } else {\n      if (other instanceof Door) {\n        this.shakeScreen(this.x, this.y, x, y);\n\n        if (other.canUnlock(this)) other.unlock(this);\n      }\n    }\n  };\n\n  private updateLastPosition = (x: number, y: number) => {\n    this.lastX = x;\n    this.lastY = y;\n  };\n\n  hurt = (damage: number, enemy: string) => {\n    // Play hurt sound if in current room\n    if (this.game.levels[this.depth].rooms[this.levelID] === this.game.room) {\n      Sound.hurt();\n      Sound.playGrunt();\n    }\n\n    // Handle armor damage\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      this.inventory.getArmor().hurt(damage);\n      this.renderer.hurtShield();\n      this.hurtShield = true;\n    }\n\n    // Update player state\n    this.lastHitBy = enemy;\n    this.healthBar.hurt();\n    this.renderer.flash();\n    this.enemyHurtMessage(damage, enemy);\n\n    // Apply damage if no shield\n    if (!this.hurtShield) {\n      this.health -= damage;\n    }\n    this.hurtShield = false;\n    this.renderer.hurt();\n\n    // Check for death\n    if (this.health <= 0 && !GameConstants.DEVELOPER_MODE) {\n      this.dead = true;\n    }\n  };\n\n  enemyHurtMessage = (damage: number, enemy: string) => {\n    this.game.pushMessage(`The ${enemy} hits you for ${damage} damage.`);\n  };\n\n  beginSlowMotion = () => {\n    this.renderer.beginSlowMotion();\n  };\n\n  endSlowMotion = () => {\n    this.renderer.endSlowMotion();\n  };\n\n  move = (x: number, y: number) => {\n    this.updateLastPosition(this.x, this.y);\n\n    //this.actionTab.setState(ActionState.MOVE);\n    if (this.game.levels[this.depth].rooms[this.levelID] === this.game.room)\n      Sound.playerStoneFootstep(this.game.room.envType);\n\n    if (this.openVendingMachine) this.openVendingMachine.close();\n\n    this.renderer.setNewDrawXY(x, y);\n    this.drawMoveQueue.push({\n      drawX: x - this.x,\n      drawY: y - this.y,\n    });\n\n    /*\n    if (this.drawX > 1) this.drawX = 1;\n    if (this.drawY > 1) this.drawY = 1;\n    if (this.drawX < -1) this.drawX = -1;\n    if (this.drawY < -1) this.drawY = -1;\n    */\n\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.levels[this.depth].rooms[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n    let diffX = x - this.lastX;\n    let diffY = y - this.lastY;\n    if (diffX === 0 && diffY === 0) return;\n\n    //this.game.rooms[this.levelID].updateLighting();\n    let roomsOnScreen = 0;\n    for (let room of this.game.level.rooms) {\n      room.roomOnScreen(this);\n      //console.log(\"On Screen? \" + room.onScreen + \" levelID: \" + room.id);\n      if (room.onScreen) roomsOnScreen++;\n    }\n    //console.log(\"Rooms On Screen Currently: \" + roomsOnScreen);\n  };\n\n  moveNoSmooth = (x: number, y: number) => {\n    // doesn't touch smoothing\n    this.x = x;\n    this.y = y;\n  };\n\n  moveSnap = (x: number, y: number) => {\n    // no smoothing\n    this.x = Math.round(x);\n    this.y = Math.round(y);\n    this.renderer.snapDrawStuff();\n  };\n\n  update = () => {};\n\n  finishTick = () => {\n    this.turnCount += 1;\n    this.inventory.tick();\n\n    this.renderer.disableFlash();\n\n    let totalHealthDiff = this.health - this.lastTickHealth;\n    this.lastTickHealth = this.health; // update last tick health\n    if (totalHealthDiff < 0) {\n      this.renderer.flash();\n    }\n    this.moveDistance = 0;\n\n    //this.actionTab.actionState = ActionState.READY;\n    //Sets the action tab state to Wait (during enemy turn)\n  };\n\n  draw = (delta: number) => {\n    this.renderer.draw(delta);\n  };\n\n  heal = (amount: number) => {\n    this.health += amount;\n    if (this.health > this.maxHealth) this.health = this.maxHealth;\n  };\n\n  hitShake = (\n    playerX: number,\n    playerY: number,\n    otherX: number,\n    otherY: number,\n  ) => {\n    const range = GameConstants.TILESIZE;\n    const hitX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\n    const hitY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\n    this.renderer.setHitXY(hitX, hitY);\n  };\n\n  shakeScreen = (\n    playerX: number,\n    playerY: number,\n    otherX: number,\n    otherY: number,\n    shakeStrength: number = 10,\n  ) => {\n    const range = GameConstants.TILESIZE;\n    const shakeX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\n    const shakeY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\n    this.renderer.setHitXY(shakeX, shakeY);\n\n    this.game.shakeScreen(\n      -shakeX * 1 * shakeStrength,\n      -shakeY * 1 * shakeStrength,\n    );\n  };\n\n  updateSlowMotion = () => {\n    this.renderer.updateSlowMotion();\n  };\n\n  drawGUI = (delta: number) => {\n    this.renderer.drawGUI(delta);\n  };\n}\n","import { Player } from \"./player\";\nimport { PlayerAction } from \"./playerAction\";\n\nexport class PlayerActionProcessor {\n  private player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  process(action: PlayerAction) {\n    switch (action.type) {\n      case \"Move\":\n        this.player.movement.move(\n          action.direction,\n          action.targetX,\n          action.targetY,\n        );\n        break;\n\n      case \"MouseMove\":\n        this.player.movement.moveMouse(\n          action.direction,\n          action.targetX,\n          action.targetY,\n        );\n        break;\n      case \"OpenInventory\":\n        this.player.inventory.open();\n        break;\n\n      case \"CloseInventory\":\n        this.player.inventory.close();\n        break;\n\n      case \"Restart\":\n        this.player.restart();\n        break;\n\n      case \"Attack\":\n        // TODO: Route to PlayerCombat module once it's ready\n        console.warn(\"Attack action received but not yet implemented.\");\n        break;\n\n      case \"Interact\":\n        this.player.tryMove(action.target.x, action.target.y); // will replace with cleaner interaction API later\n        break;\n    }\n  }\n}\n","import { Input, InputEnum } from \"../game/input\";\nimport type { Player } from \"./player\";\nimport { Direction, LevelState } from \"../game\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { MuteButton } from \"../gui/muteButton\";\nimport { Sound } from \"../sound/sound\";\n\nexport class PlayerInputHandler {\n  private player: Player;\n  mostRecentInput: string;\n  mostRecentMoveInput: string;\n  moveStartTime: number;\n  private mouseHoldInitialDirection: Direction | null = null;\n\n  constructor(player: Player) {\n    this.player = player;\n    this.mostRecentInput = \"keyboard\";\n    this.mostRecentMoveInput = \"keyboard\";\n    this.moveStartTime = 0;\n\n    if (player.isLocalPlayer) {\n      this.setupListeners();\n    }\n  }\n\n  setupListeners() {\n    Input.leftSwipeListener = () => this.handleInput(InputEnum.LEFT);\n    Input.rightSwipeListener = () => this.handleInput(InputEnum.RIGHT);\n    Input.upSwipeListener = () => this.handleInput(InputEnum.UP);\n    Input.downSwipeListener = () => this.handleInput(InputEnum.DOWN);\n    Input.commaListener = () => this.handleInput(InputEnum.COMMA);\n    Input.periodListener = () => this.handleInput(InputEnum.PERIOD);\n    Input.tapListener = () => this.handleTap();\n    Input.mouseMoveListener = () => this.handleInput(InputEnum.MOUSE_MOVE);\n    Input.mouseRightClickListeners.push(() =>\n      this.handleInput(InputEnum.RIGHT_CLICK),\n    );\n    Input.mouseDownListeners.push((x: number, y: number, button: number) =>\n      this.handleMouseDown(x, y, button),\n    );\n    Input.numKeyListener = (num) =>\n      this.handleInput(InputEnum.NUMBER_1 + num - 1);\n    Input.equalsListener = () => this.handleInput(InputEnum.EQUALS);\n    Input.minusListener = () => this.handleInput(InputEnum.MINUS);\n    Input.escapeListener = () => this.handleInput(InputEnum.ESCAPE);\n    Input.fListener = () => this.handleInput(InputEnum.F);\n  }\n\n  handleInput(input: InputEnum) {\n    if (this.player.busyAnimating || this.player.game.cameraAnimation.active)\n      return;\n\n    // Block input during level transitions, except for mouse movement\n    if (\n      (this.player.game.levelState === LevelState.TRANSITIONING ||\n        this.player.game.levelState === LevelState.TRANSITIONING_LADDER) &&\n      input !== InputEnum.MOUSE_MOVE\n    ) {\n      return;\n    }\n\n    if (this.player.menu.open) {\n      this.player.menu.inputHandler(input);\n      return;\n    }\n\n    if (!this.player.game.started && input !== InputEnum.MOUSE_MOVE) {\n      this.player.game.startedFadeOut = true;\n      return;\n    }\n\n    switch (input) {\n      case InputEnum.I:\n        this.player.inventory.toggleOpen();\n        break;\n      case InputEnum.Q:\n        this.player.inventory.drop();\n        break;\n      case InputEnum.F:\n        this.player.stall();\n        break;\n      case InputEnum.LEFT:\n        if (!this.ignoreDirectionInput())\n          this.player.actionProcessor.process({\n            type: \"Move\",\n            direction: Direction.LEFT,\n            targetX: this.player.x - 1,\n            targetY: this.player.y,\n          });\n        break;\n\n      case InputEnum.RIGHT:\n        if (!this.ignoreDirectionInput())\n          this.player.actionProcessor.process({\n            type: \"Move\",\n            direction: Direction.RIGHT,\n            targetX: this.player.x + 1,\n            targetY: this.player.y,\n          });\n        break;\n\n      case InputEnum.UP:\n        if (!this.ignoreDirectionInput())\n          this.player.actionProcessor.process({\n            type: \"Move\",\n            direction: Direction.UP,\n            targetX: this.player.x,\n            targetY: this.player.y - 1,\n          });\n        break;\n\n      case InputEnum.DOWN:\n        if (!this.ignoreDirectionInput())\n          this.player.actionProcessor.process({\n            type: \"Move\",\n            direction: Direction.DOWN,\n            targetX: this.player.x,\n            targetY: this.player.y + 1,\n          });\n        break;\n      case InputEnum.SPACE:\n        const player = this.player;\n        this.setMostRecentInput(\"keyboard\");\n\n        if (player.game.chatOpen) return;\n\n        if (player.dead) {\n          player.restart();\n          return;\n        }\n\n        if (\n          this.player.openVendingMachine &&\n          this.player.openVendingMachine.open\n        ) {\n          this.player.openVendingMachine.space();\n          break;\n        }\n\n        if (\n          player.inventory.isOpen ||\n          player.game.levelState === LevelState.IN_LEVEL\n        ) {\n          this.setMostRecentInput(\"keyboard\");\n\n          player.inventory.itemUse();\n        }\n        break;\n      case InputEnum.COMMA:\n        this.setMostRecentInput(\"keyboard\");\n        this.player.inventory.left();\n        break;\n      case InputEnum.PERIOD:\n        this.setMostRecentInput(\"keyboard\");\n        this.player.inventory.right();\n        break;\n      case InputEnum.LEFT_CLICK:\n        this.handleMouseLeftClick();\n        break;\n      case InputEnum.RIGHT_CLICK:\n        this.handleMouseRightClick();\n        break;\n      case InputEnum.MOUSE_MOVE:\n        //when mouse moves\n        this.setMostRecentInput(\"mouse\");\n        this.player.inventory.mouseMove();\n\n        // Check if mouse hold should be cancelled\n        if (Input.mouseDown && Input.mouseDownHandled) {\n          let shouldCancelHold = false;\n\n          // Check distance from initial position\n          const dx = Input.mouseX - Input.lastMouseDownX;\n          const dy = Input.mouseY - Input.lastMouseDownY;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          const maxHoldDistance = GameConstants.TILESIZE * 1.5; // 1.5 tiles\n\n          if (distance > maxHoldDistance) {\n            shouldCancelHold = true;\n          }\n\n          // Check if player direction changed from initial\n          if (\n            this.mouseHoldInitialDirection !== null &&\n            this.player.direction !== this.mouseHoldInitialDirection\n          ) {\n            shouldCancelHold = true;\n          }\n\n          if (shouldCancelHold) {\n            Input.mouseDownHandled = false;\n            Input.lastMouseDownTime = 0;\n            this.mouseHoldInitialDirection = null;\n          }\n        }\n\n        if (!this.ignoreDirectionInput() || GameConstants.isMobile) {\n          this.faceMouse();\n          this.player.setTileCursorPosition();\n        }\n        break;\n      case InputEnum.NUMBER_1:\n      case InputEnum.NUMBER_2:\n      case InputEnum.NUMBER_3:\n      case InputEnum.NUMBER_4:\n      case InputEnum.NUMBER_5:\n      case InputEnum.NUMBER_6:\n      case InputEnum.NUMBER_7:\n      case InputEnum.NUMBER_8:\n      case InputEnum.NUMBER_9:\n        this.setMostRecentInput(\"keyboard\");\n        this.handleNumKey(input - 13);\n        break;\n      case InputEnum.EQUALS:\n        this.player.game.increaseScale();\n        break;\n      case InputEnum.MINUS:\n        this.player.game.decreaseScale();\n        break;\n      case InputEnum.ESCAPE:\n        this.player.inventory.close();\n        break;\n    }\n  }\n\n  handleNumKey = (num: number) => {\n    if (this.player.menu.open) return;\n    this.setMostRecentInput(\"keyboard\");\n    if (num <= 5) {\n      this.player.inventory.selX = Math.max(\n        0,\n        Math.min(num - 1, this.player.inventory.cols - 1),\n      );\n      this.player.inventory.selY = 0;\n      this.player.inventory.itemUse();\n    } else {\n      if (GameConstants.DEVELOPER_MODE) {\n        switch (num) {\n          case 6:\n            GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(true);\n            break;\n          case 7:\n            GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(false);\n            break;\n        }\n      }\n    }\n  };\n\n  handleMouseRightClick() {\n    this.setMostRecentInput(\"mouse\");\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\n\n    if (bounds.inBounds) {\n      this.player.inventory.drop();\n    }\n  }\n\n  handleMouseDown(x: number, y: number, button: number) {\n    if (button !== 0) return; // Only handle left mouse button\n\n    const player = this.player;\n\n    if (player.game.levelState !== LevelState.IN_LEVEL) {\n      Input.mouseDownHandled = false;\n      return;\n    }\n\n    this.setMostRecentInput(\"mouse\");\n\n    // Handle dead player restart\n    if (player.dead) {\n      player.restart();\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Handle game not started\n    if (!player.game.started) {\n      player.game.startedFadeOut = true;\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Store mouse down info for repeat\n    Input.lastMouseDownTime = Date.now();\n    Input.lastMouseDownX = x;\n    Input.lastMouseDownY = y;\n\n    const inventory = player.inventory;\n\n    // Handle inventory toggle when clicking outside or on inventory button\n    const clickedOutsideInventory =\n      (inventory.isOpen &&\n        !inventory.isPointInInventoryBounds(x, y).inBounds) ||\n      inventory.isPointInInventoryButton(x, y);\n\n    if (clickedOutsideInventory) {\n      inventory.toggleOpen();\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Handle menu\n    if (this.player.menu.open) {\n      this.player.menu.mouseInputHandler(x, y);\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Check if click is on menu button\n    if (this.isPointInMenuButtonBounds(x, y)) {\n      this.handleMenuButtonClick();\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Handle vending machine\n    if (player.openVendingMachine) {\n      if (\n        VendingMachine.isPointInVendingMachineBounds(\n          x,\n          y,\n          player.openVendingMachine,\n        )\n      ) {\n        player.openVendingMachine.space();\n      } else {\n        player.openVendingMachine.close();\n      }\n      Input.mouseDownHandled = true;\n      return;\n    }\n\n    // Check if this is a UI interaction\n    const isUIInteraction =\n      inventory.isPointInInventoryButton(x, y) ||\n      inventory.isPointInQuickbarBounds(x, y).inBounds ||\n      inventory.isOpen ||\n      this.isPointInMenuButtonBounds(x, y);\n\n    if (!isUIInteraction) {\n      // Handle movement\n      if (!player.busyAnimating && !player.game.cameraAnimation.active) {\n        // Store the initial direction when starting mouse hold for movement\n        this.mouseHoldInitialDirection = this.player.direction;\n        player.moveWithMouse();\n        Input.mouseDownHandled = true;\n      } else {\n        Input.mouseDownHandled = false;\n      }\n    } else {\n      Input.mouseDownHandled = false;\n    }\n  }\n\n  handleMouseLeftClick() {\n    const player = this.player;\n    const cursor = MouseCursor.getInstance();\n    const { x, y } = cursor.getPosition();\n\n    if (player.game.levelState !== LevelState.IN_LEVEL) {\n      return;\n    }\n\n    this.setMostRecentInput(\"mouse\");\n\n    if (player.dead) {\n      player.restart();\n      return;\n    }\n\n    const inventory = player.inventory;\n\n    const clickedOutsideInventory =\n      (inventory.isOpen &&\n        !inventory.isPointInInventoryBounds(x, y).inBounds) ||\n      inventory.isPointInInventoryButton(x, y);\n\n    if (clickedOutsideInventory) {\n      inventory.toggleOpen();\n    }\n\n    if (this.player.menu.open) {\n      this.player.menu.mouseInputHandler(x, y);\n      return;\n    } else {\n    }\n\n    // Check if click is on menu button\n    if (this.isPointInMenuButtonBounds(x, y)) {\n      this.handleMenuButtonClick();\n      return;\n    }\n\n    if (player.openVendingMachine) {\n      if (\n        VendingMachine.isPointInVendingMachineBounds(\n          x,\n          y,\n          player.openVendingMachine,\n        )\n      ) {\n        player.openVendingMachine.space();\n      } else {\n        player.openVendingMachine.close();\n        this.setMostRecentInput(\"mouse\");\n        const { x, y } = MouseCursor.getInstance().getPosition();\n        const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\n      }\n      return;\n    }\n\n    const notInInventoryUI =\n      !inventory.isPointInInventoryButton(x, y) &&\n      !inventory.isPointInQuickbarBounds(x, y).inBounds &&\n      !inventory.isOpen;\n\n    // Only handle movement if it wasn't already handled on mousedown\n    if (notInInventoryUI && !Input.mouseDownHandled) {\n      player.moveWithMouse();\n    }\n  }\n\n  ignoreDirectionInput = (): boolean => {\n    return (\n      this.player.inventory.isOpen ||\n      this.player.dead ||\n      this.player.game.levelState !== LevelState.IN_LEVEL ||\n      this.player.menu.open ||\n      (this.player.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\n        .inBounds &&\n        this.player.game.isMobile)\n    );\n  };\n\n  handleTap() {\n    // If the interaction was already handled by mouseDown, don't process it again\n    if (Input.mouseDownHandled) {\n      return;\n    }\n\n    if (this.player.dead) {\n      this.player.restart();\n      return;\n    } else if (!this.player.game.started) {\n      this.player.game.startedFadeOut = true;\n      return;\n    }\n\n    if (this.player.menu.open) {\n      this.player.menu.mouseInputHandler(Input.mouseX, Input.mouseY);\n      return;\n    }\n\n    const x = Input.mouseX;\n    const y = Input.mouseY;\n\n    // Check if tap is on menu button\n    if (this.isPointInMenuButtonBounds(x, y)) {\n      this.handleMenuButtonClick();\n      return;\n    }\n\n    const isInInventory = this.player.inventory.isPointInInventoryBounds(\n      x,\n      y,\n    ).inBounds;\n    const isInQuickbar = this.player.inventory.isPointInQuickbarBounds(\n      x,\n      y,\n    ).inBounds;\n\n    if (this.player.openVendingMachine && this.player.openVendingMachine.open) {\n      const isInVMUI = VendingMachine.isPointInVendingMachineBounds(\n        Input.mouseX,\n        Input.mouseY,\n        this.player.openVendingMachine,\n      );\n      if (isInVMUI) {\n        this.player.openVendingMachine.space();\n        return;\n      } else if (!isInVMUI) {\n        this.player.openVendingMachine.close();\n        this.setMostRecentInput(\"mouse\");\n        const { x, y } = MouseCursor.getInstance().getPosition();\n        const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\n      }\n      return;\n    }\n\n    if (\n      !this.player.inventory.isOpen &&\n      this.player.inventory.isPointInInventoryButton(x, y)\n    ) {\n      this.player.inventory.open();\n    } else if (this.player.inventory.isOpen) {\n      if (isInInventory) {\n        this.handleInput(InputEnum.LEFT_CLICK);\n      } else {\n        this.player.inventory.close();\n      }\n    } else if (isInQuickbar) {\n      this.handleInput(InputEnum.LEFT_CLICK);\n    }\n  }\n\n  handleKeyboardKey(key: string) {\n    switch (key.toUpperCase()) {\n      case \"A\":\n      case \"ARROWLEFT\":\n        this.handleInput(InputEnum.LEFT);\n        break;\n      case \"D\":\n      case \"ARROWRIGHT\":\n        this.handleInput(InputEnum.RIGHT);\n        break;\n      case \"W\":\n      case \"ARROWUP\":\n        this.handleInput(InputEnum.UP);\n        break;\n      case \"S\":\n      case \"ARROWDOWN\":\n        this.handleInput(InputEnum.DOWN);\n        break;\n      case \" \":\n        this.handleInput(InputEnum.SPACE);\n        break;\n      case \"I\":\n        this.handleInput(InputEnum.I);\n        break;\n      case \"Q\":\n        this.handleInput(InputEnum.Q);\n        break;\n      // Possibly add number keys for inventory here too\n      default:\n        // Unknown key; ignore or log if needed\n        break;\n    }\n  }\n\n  setMostRecentInput = (input: string) => {\n    this.mostRecentInput = input;\n  };\n  setMostRecentMoveInput = (input: string) => {\n    this.mostRecentMoveInput = input;\n  };\n\n  mouseAngle = () => {\n    const mousePosition = MouseCursor.getInstance().getPosition();\n    const playerPixelPosition = {\n      x: GameConstants.WIDTH / 2,\n      y: GameConstants.HEIGHT / 2,\n    };\n    const dx = mousePosition.x - playerPixelPosition.x;\n    const dy = mousePosition.y - playerPixelPosition.y;\n    return Math.atan2(dy, dx);\n  };\n\n  faceMouse = () => {\n    if (\n      !GameConstants.MOVE_WITH_MOUSE ||\n      this.mostRecentMoveInput === \"keyboard\" ||\n      GameConstants.isMobile\n    )\n      return;\n    const angle = this.mouseAngle();\n\n    // Convert angle to direction\n    // atan2 returns angle in radians (-π to π)\n    // Divide the circle into 4 sectors for the 4 directions\n\n    if (angle >= -Math.PI / 4 && angle < Math.PI / 4) {\n      this.player.direction = Direction.RIGHT;\n    } else if (angle >= Math.PI / 4 && angle < (3 * Math.PI) / 4) {\n      this.player.direction = Direction.DOWN;\n    } else if (angle >= (-3 * Math.PI) / 4 && angle < -Math.PI / 4) {\n      this.player.direction = Direction.UP;\n    } else {\n      this.player.direction = Direction.LEFT;\n    }\n  };\n\n  // Dummy methods for mute button functionality\n  isPointInMuteButtonBounds(x: number, y: number): boolean {\n    const tile = GameConstants.TILESIZE;\n    //mute button is at the top left of the screen right below the fps counter and is 1 tile wide and tall\n    return x >= 0 && x <= tile && y >= 0 && y <= tile * 1.5;\n  }\n\n  handleMuteButtonClick() {\n    MuteButton.toggleMute();\n    this.player.game.pushMessage(\n      Sound.audioMuted ? \"Audio muted\" : \"Audio unmuted\",\n    );\n  }\n\n  isPointInMenuButtonBounds(x: number, y: number): boolean {\n    const tile = GameConstants.TILESIZE;\n    //menu button is at the top left of the screen right below the fps counter and is 1 tile wide and tall\n    return x >= 0 && x <= tile * 1.5 && y >= 0 && y <= tile;\n  }\n\n  handleMenuButtonClick() {\n    this.player.menu.toggleOpen();\n  }\n}\n","import type { Player } from \"./player\";\nimport { Direction } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { TurnState } from \"../room/room\";\n\nexport class PlayerMovement {\n  private player: Player;\n  private moveQueue: { x: number; y: number; direction: Direction }[] = [];\n  private isProcessingQueue: boolean = false;\n  private animationFrameId: number | null = null;\n  private moveRange: number = 1;\n  lastMoveTime: number = 0;\n  lastChangeDirectionTime: number = 0;\n  adjustedCooldown: number = 0;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  move(direction: Direction, targetX?: number, targetY?: number): void {\n    if (!(direction in Direction) || !this.player) return;\n\n    const coords = this.getTargetCoords(direction, targetX, targetY);\n    if (!coords) return;\n    const { x, y } = coords;\n\n    if (this.canMove()) {\n      const now = Date.now();\n      this.lastMoveTime = now;\n      this.lastChangeDirectionTime = now;\n      this.player.inputHandler.setMostRecentMoveInput(\"keyboard\");\n      this.player.lastDirection = this.player.direction;\n      this.player.direction = direction;\n      this.player.tryMove(x, y);\n    } else {\n      this.queueMove(x, y, direction);\n    }\n  }\n\n  moveMouse(direction: Direction, targetX?: number, targetY?: number): void {\n    if (!(direction in Direction) || !this.player || GameConstants.isMobile)\n      return;\n\n    const coords = this.getTargetCoords(direction, targetX, targetY);\n    if (!coords) return;\n    const { x, y } = coords;\n    if (x === undefined || y === undefined) return;\n    if (this.canMove()) {\n      const now = Date.now();\n      this.lastMoveTime = now;\n      this.player.inputHandler.setMostRecentMoveInput(\"mouse\");\n      this.player.direction = direction;\n      this.player.tryMove(x, y);\n    } else {\n      this.queueMove(x, y, direction);\n    }\n  }\n  //unused\n  moveRangeCheck = (x: number, y: number) => {\n    const dx = Math.abs(this.player.x - x);\n    const dy = Math.abs(this.player.y - y);\n    return (\n      dx <= this.moveRange &&\n      dy <= this.moveRange &&\n      (dx === 0 || dy === 0) &&\n      dx + dy !== 0\n    );\n  };\n\n  private getTargetCoords(\n    direction: Direction,\n    x?: number,\n    y?: number,\n  ): { x: number; y: number } | null {\n    if (x !== undefined && y !== undefined && x !== null && y !== null) {\n      return { x, y };\n    }\n\n    switch (direction) {\n      case Direction.LEFT:\n        return { x: this.player.x - 1, y: this.player.y };\n      case Direction.RIGHT:\n        return { x: this.player.x + 1, y: this.player.y };\n      case Direction.UP:\n        return { x: this.player.x, y: this.player.y - 1 };\n      case Direction.DOWN:\n        return { x: this.player.x, y: this.player.y + 1 };\n      default:\n        return null;\n    }\n  }\n  inventoryClosedRecently(): boolean {\n    const timeSinceDragEnd = Date.now() - this.player.inventory.dragEndTime;\n    const timeSinceClose = Date.now() - this.player.inventory.closeTime;\n    return timeSinceDragEnd < 10 || timeSinceClose < 10;\n  }\n\n  canMove(): boolean {\n    if (\n      this.inventoryClosedRecently() ||\n      (this.player.game.room.turn === TurnState.computerTurn &&\n        this.player.game.room.hasEnemyInRadius(this.player.x, this.player.y))\n    )\n      return false;\n    const now = Date.now();\n    const cooldown = GameConstants.MOVEMENT_COOLDOWN;\n    if (now - this.lastMoveTime >= cooldown) {\n      return true;\n    }\n    return false;\n  }\n\n  canQueue(): boolean {\n    if (this.inventoryClosedRecently()) return false;\n    const now = Date.now();\n    const cooldown = GameConstants.MOVEMENT_QUEUE_COOLDOWN;\n    if (now - this.lastMoveTime >= cooldown) {\n      return true;\n    }\n    return false;\n  }\n\n  queueMove(x: number, y: number, direction: Direction) {\n    if (!this.canQueue()) return;\n    if (x === undefined || y === undefined || this.moveQueue.length > 0) return;\n\n    this.moveQueue.push({ x, y, direction });\n    this.startQueueProcessing();\n  }\n\n  private handleMoveLoop({\n    x,\n    y,\n    direction,\n  }: {\n    x: number;\n    y: number;\n    direction: Direction;\n  }) {\n    if (this.player.inputHandler.mostRecentMoveInput === \"mouse\") {\n      this.moveMouse(direction, x, y);\n    } else {\n      this.move(direction, x, y);\n    }\n  }\n\n  private startQueueProcessing() {\n    if (!this.isProcessingQueue) {\n      this.isProcessingQueue = true;\n      this.animationFrameId = requestAnimationFrame(() => this.queueHandler());\n    }\n  }\n  private stopQueueProcessing() {\n    this.isProcessingQueue = false;\n    if (this.animationFrameId !== null) {\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = null;\n    }\n  }\n\n  private queueHandler = () => {\n    if (!this.isProcessingQueue) return;\n\n    const now = Date.now();\n\n    const cooldown = GameConstants.MOVEMENT_COOLDOWN;\n\n    if (now - this.lastMoveTime >= cooldown) {\n      if (this.moveQueue.length > 0) {\n        const nextMove = this.moveQueue.shift();\n\n        this.handleMoveLoop(nextMove);\n        this.lastMoveTime = now;\n      } else {\n        this.stopQueueProcessing();\n      }\n    }\n\n    this.animationFrameId = requestAnimationFrame(this.queueHandler);\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { MouseCursor } from \"../gui/mouseCursor\";\nimport { PostProcessor } from \"../gui/postProcess\";\nimport { statsTracker } from \"../game/stats\";\nimport { Utils } from \"../utility/utils\";\nimport { Spellbook } from \"../item/weapon/spellbook\";\nimport { Player } from \"./player\";\nimport { HoverText } from \"../gui/hoverText\";\n\nexport class PlayerRenderer {\n  private player: Player;\n  private flashingFrame: number;\n  private guiHeartFrame: number;\n  private hurtAlpha: number;\n  private jumpY: number;\n  private motionSpeed: number;\n  slowMotionEnabled: boolean;\n  private jumpHeight: number;\n  private hurting: boolean;\n  private hurtingShield: boolean;\n  drawX: number;\n  drawY: number;\n  hitX: number;\n  hitY: number;\n  private frame: number;\n  private slowMotionTickDuration: number;\n  private lowHealthFrame: number;\n  private flashing: boolean;\n\n  constructor(player: Player) {\n    this.player = player;\n    this.jumpY = 0;\n    this.flashingFrame = 0;\n    this.guiHeartFrame = 0;\n    this.motionSpeed = 1;\n    this.hitX = 0;\n    this.hitY = 0;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.hurtAlpha = 0.25;\n    this.jumpHeight = 0.25;\n    this.hurting = false;\n    this.hurtingShield = false;\n    this.slowMotionEnabled = false;\n    this.slowMotionTickDuration = 0;\n    this.flashing = false;\n    this.lowHealthFrame = 0;\n    this.frame = 0;\n  }\n\n  hurt = () => {\n    this.hurting = true;\n    this.hurtAlpha = 0.25;\n  };\n  hurtShield = () => {\n    this.hurtingShield = true;\n  };\n\n  flash = () => {\n    this.flashing = true;\n  };\n\n  disableFlash = () => {\n    this.flashing = false;\n  };\n\n  beginSlowMotion = () => {\n    this.slowMotionEnabled = true;\n  };\n\n  endSlowMotion = () => {\n    this.slowMotionEnabled = false;\n  };\n\n  setNewDrawXY = (x: number, y: number) => {\n    this.drawX += x - this.player.x;\n    this.drawY += y - this.player.y;\n  };\n\n  enableSlowMotion = () => {\n    if (this.motionSpeed < 1 && !this.slowMotionEnabled) {\n      this.motionSpeed *= 1.08;\n      if (this.motionSpeed >= 1) this.motionSpeed = 1;\n    }\n    if (this.slowMotionEnabled && this.motionSpeed > 0.25) {\n      this.motionSpeed *= 0.95;\n      if (this.motionSpeed < 0.25) this.motionSpeed = 0.25;\n    }\n  };\n\n  updateSlowMotion = () => {\n    if (this.slowMotionTickDuration > 0) this.slowMotionTickDuration -= 1;\n    if (this.slowMotionTickDuration === 0) this.slowMotionEnabled = false;\n  };\n\n  /**\n   * Draws the player sprite to the canvas.\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\n   * to ensure canvas state is preserved.\n   */\n  drawPlayerSprite = (delta: number) => {\n    const player = this.player;\n    Game.ctx.save(); // Save the current canvas state\n\n    if (this.drawSmear()) {\n      Game.drawMob(\n        this.setSmearFrame().x,\n        this.setSmearFrame().y,\n        1,\n        2,\n        player.x - this.drawX - this.hitX,\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\n        1,\n        2,\n        this.shadeColor(),\n      );\n    } else if (\n      this.player.inputHandler.mostRecentMoveInput === \"mouse\" &&\n      this.mouseDiagonal() &&\n      !GameConstants.isMobile\n    ) {\n      const angle = (this.player.inputHandler.mouseAngle() * 180) / Math.PI;\n      let diagonalTile = { x: 1, y: 18 };\n      if (angle > -150 && angle <= -120) diagonalTile = { x: 3, y: 18 };\n      if (angle > -60 && angle <= -30) diagonalTile = { x: 4, y: 18 };\n      if (angle > 30 && angle <= 60) diagonalTile = { x: 2, y: 18 };\n      if (angle > 120 && angle <= 150) diagonalTile = { x: 1, y: 18 };\n\n      Game.drawMob(\n        diagonalTile.x,\n        diagonalTile.y,\n        1,\n        2,\n        player.x - this.drawX - this.hitX,\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\n        1,\n        2,\n        this.shadeColor(),\n      );\n    } else {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      Game.drawMob(\n        1 + Math.floor(this.frame),\n        8 + player.direction * 2,\n        1,\n        2,\n        player.x - this.drawX - this.hitX,\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\n        1,\n        2,\n        this.shadeColor(),\n      );\n    }\n    if (player.inventory.getArmor() && player.inventory.getArmor().health > 0) {\n      // TODO draw armor\n    }\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  mouseDiagonal = () => {\n    const angle = (this.player.inputHandler.mouseAngle() * 180) / Math.PI;\n    if (angle > 30 && angle < 60) return true;\n    if (angle > 120 && angle < 150) return true;\n    if (angle > -150 && angle < -120) return true;\n    if (angle > -60 && angle < -30) return true;\n    return false;\n  };\n\n  drawSmear = () => {\n    if (this.player.direction === this.player.lastDirection) return false;\n    let t = 100;\n    const lastDir = this.player.lastDirection;\n    const dir = this.player.direction;\n    if (\n      (dir === Direction.UP && lastDir === Direction.DOWN) ||\n      (dir === Direction.DOWN && lastDir === Direction.UP) ||\n      (dir === Direction.LEFT && lastDir === Direction.RIGHT) ||\n      (dir === Direction.RIGHT && lastDir === Direction.LEFT)\n    )\n      t = 150;\n    const timeSince = Date.now() - this.player.movement.lastChangeDirectionTime;\n    if (timeSince <= t) return true;\n    else return false;\n  };\n\n  setSmearFrame = () => {\n    let tile = { x: 1, y: 18 };\n    const timeSince = Date.now() - this.player.movement.lastChangeDirectionTime;\n    const t = 50;\n\n    if (\n      (this.player.direction === Direction.UP &&\n        this.player.lastDirection === Direction.LEFT) ||\n      (this.player.direction === Direction.LEFT &&\n        this.player.lastDirection === Direction.UP)\n    ) {\n      tile.x = 3;\n      return tile;\n    }\n    if (\n      (this.player.direction === Direction.UP &&\n        this.player.lastDirection === Direction.RIGHT) ||\n      (this.player.direction === Direction.RIGHT &&\n        this.player.lastDirection === Direction.UP)\n    ) {\n      tile.x = 4;\n      return tile;\n    }\n    if (\n      (this.player.direction === Direction.DOWN &&\n        this.player.lastDirection === Direction.RIGHT) ||\n      (this.player.direction === Direction.RIGHT &&\n        this.player.lastDirection === Direction.DOWN)\n    ) {\n      tile.x = 2;\n      return tile;\n    }\n    if (\n      (this.player.direction === Direction.DOWN &&\n        this.player.lastDirection === Direction.LEFT) ||\n      (this.player.direction === Direction.LEFT &&\n        this.player.lastDirection === Direction.DOWN)\n    ) {\n      tile.x = 1;\n      return tile;\n    }\n    if (\n      this.player.direction === Direction.DOWN &&\n      this.player.lastDirection === Direction.UP\n    ) {\n      if (timeSince < t) tile.x = 3;\n      if (timeSince >= t && timeSince < t * 2) {\n        tile.x = 1;\n        tile.y = 14;\n      }\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 1;\n      return tile;\n    }\n    if (\n      this.player.direction === Direction.LEFT &&\n      this.player.lastDirection === Direction.RIGHT\n    ) {\n      if (timeSince < t) tile.x = 2;\n      if (timeSince >= t && timeSince < t * 2) {\n        tile.x = 1;\n        tile.y = 8;\n      }\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 1;\n      return tile;\n    }\n    if (\n      this.player.direction === Direction.UP &&\n      this.player.lastDirection === Direction.DOWN\n    ) {\n      if (timeSince < t) tile.x = 2;\n      if (timeSince >= t && timeSince < t * 2) {\n        tile.x = 1;\n        tile.y = 12;\n      }\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 4;\n      return tile;\n    }\n    if (\n      this.player.direction === Direction.RIGHT &&\n      this.player.lastDirection === Direction.LEFT\n    ) {\n      if (timeSince < t) tile.x = 1;\n      if (timeSince >= t && timeSince < t * 2) {\n        tile.x = 1;\n        tile.y = 8;\n      }\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 2;\n      return tile;\n    }\n  };\n\n  draw = (delta: number) => {\n    const player = this.player;\n    Game.ctx.save();\n    this.updateDrawXY(delta);\n    player.drawableY = player.y;\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\n    if (!player.dead) {\n      Game.drawMob(\n        0,\n        0,\n        1,\n        1,\n        player.x - this.drawX,\n        player.y - this.drawY,\n        1,\n        1,\n      );\n      //this.drawTileCursor(delta);\n\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\n        this.drawPlayerSprite(delta);\n      }\n    }\n    this.drawSpellBeam(delta);\n    Game.ctx.restore();\n  };\n\n  drawSpellBeam = (delta: number) => {\n    Game.ctx.save();\n    // Clear existing beam effects each frame\n    this.player.game.levels[this.player.depth].rooms[\n      this.player.levelID\n    ].beamEffects = [];\n\n    if (this.player.inventory.getWeapon() instanceof Spellbook) {\n      const spellbook = this.player.inventory.getWeapon() as Spellbook;\n      if (spellbook.isTargeting) {\n        let targets = spellbook.targets;\n        for (let target of targets) {\n          // Create a new beam effect from the player to the enemy\n          this.player.game.levels[this.player.depth].rooms[\n            this.player.levelID\n          ].addBeamEffect(\n            this.player.x - this.drawX,\n            this.player.y - this.drawY,\n            target.x - target.drawX,\n            target.y - target.drawY,\n            target,\n          );\n\n          // Retrieve the newly added beam effect\n          const beam =\n            this.player.game.levels[this.player.depth].rooms[\n              this.player.levelID\n            ].beamEffects[\n              this.player.game.levels[this.player.depth].rooms[\n                this.player.levelID\n              ].beamEffects.length - 1\n            ];\n\n          // Render the beam\n          beam.render(\n            this.player.x - this.drawX,\n            this.player.y - this.drawY,\n            target.x - target.drawX,\n            target.y - target.drawY,\n            \"cyan\",\n            2,\n            delta,\n          );\n        }\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  shadeColor = () => {\n    const player = this.player;\n\n    if (!GameConstants.CUSTOM_SHADER_COLOR_ENABLED) {\n      return \"black\";\n    } else {\n      return Utils.rgbToHex(\n        player.game.levels[player.depth].rooms[player.levelID].col[player.x][\n          player.y\n        ][0],\n        player.game.levels[player.depth].rooms[player.levelID].col[player.x][\n          player.y\n        ][1],\n        player.game.levels[player.depth].rooms[player.levelID].col[player.x][\n          player.y\n        ][2],\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    Game.ctx.save(); // Save the current canvas state\n\n    this.player.healthBar.draw(\n      delta,\n      this.player.health,\n      this.player.maxHealth,\n      this.player.x - this.drawX,\n      this.player.y - this.drawY,\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0,\n    );\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  updateDrawXY = (delta: number) => {\n    if (!this.doneMoving()) {\n      this.drawX *= 0.85 ** delta;\n      this.drawY *= 0.85 ** delta;\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\n    }\n    if (this.doneHitting()) {\n      this.jump(delta);\n    }\n\n    if (!this.doneHitting()) {\n      this.updateHitXY(delta);\n    }\n\n    this.enableSlowMotion();\n    GameConstants.ANIMATION_SPEED = this.motionSpeed;\n  };\n\n  updateHitXY = (delta: number) => {\n    const hitX = this.hitX - this.hitX * 0.3;\n    const hitY = this.hitY - this.hitY * 0.3;\n    this.hitX = Math.min(Math.max(hitX, -1), 1);\n    this.hitY = Math.min(Math.max(hitY, -1), 1);\n    if (Math.abs(hitX) < 0.01) this.hitX = 0;\n    if (Math.abs(hitY) < 0.01) this.hitY = 0;\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  doneHitting = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.hitX) < EPSILON && Math.abs(this.hitY) < EPSILON;\n  };\n\n  snapDrawStuff = () => {\n    this.drawX = 0;\n    this.drawY = 0;\n    this.hitX = 0;\n    this.hitY = 0;\n    this.jumpY = 0;\n  };\n\n  setHitXY = (x: number, y: number) => {\n    this.hitX = x;\n    this.hitY = y;\n  };\n\n  drawGUI = (delta: number, transitioning: boolean = false) => {\n    Game.ctx.save();\n    if (!this.player.dead) {\n      //if (this.player.menu.open) this.player.menu.draw();\n      if (this.player.bestiary) this.player.bestiary.draw(delta);\n\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\n      if (this.guiHeartFrame > 5) {\n        this.guiHeartFrame = 0;\n      }\n\n      const armor = this.player.inventory.getArmor();\n\n      // Get the quickbar's left edge position\n      const quickbarStartX =\n        this.player.inventory.getQuickbarStartX() + (armor ? -34 : -24);\n      // Convert to tile coordinates\n      let heartStartX = quickbarStartX / GameConstants.TILESIZE;\n\n      // Ensure hearts don't go off the left edge of the screen\n      if (heartStartX < 0.25) {\n        heartStartX = 0.25;\n      }\n\n      for (let i = 0; i < this.player.maxHealth; i++) {\n        let shake = 0;\n        let shakeY = 0;\n        if (this.player.health <= 1) {\n          shake =\n            Math.round(Math.sin(Date.now() / 25 / (i + 1)) + i / 2) /\n            2 /\n            GameConstants.TILESIZE;\n          shakeY =\n            Math.round(Math.sin(Date.now() / 25 / (i + 2)) + i / 2) /\n            2 /\n            GameConstants.TILESIZE;\n        }\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\n        let offsetY = GameConstants.WIDTH > 175 ? 0 : -1.25;\n\n        if (i >= Math.floor(this.player.health)) {\n          if (\n            i == Math.floor(this.player.health) &&\n            (this.player.health * 2) % 2 == 1\n          ) {\n            // draw half heart\n            Game.drawFX(\n              4,\n              2,\n              0.75,\n              0.75,\n              heartStartX + i / 1.5 + shake,\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\n                1 +\n                shakeY +\n                offsetY,\n              0.75,\n              0.75,\n            );\n          } else {\n            Game.drawFX(\n              3,\n              2,\n              0.75,\n              0.75,\n              heartStartX + i / 1.5 + shake,\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\n                1 +\n                shakeY +\n                offsetY,\n              0.75,\n              0.75,\n            );\n          }\n        } else {\n          Game.drawFX(\n            frame,\n            2,\n            0.75,\n            0.75,\n            heartStartX + i / 1.5 + shake,\n            GameConstants.HEIGHT / GameConstants.TILESIZE -\n              1 +\n              shakeY +\n              offsetY,\n            0.75,\n            0.75,\n          );\n        }\n      }\n      //this.drawCooldownBar();\n      if (armor) armor.drawGUI(delta, this.player.maxHealth, quickbarStartX);\n      if (!transitioning) this.player.inventory.draw(delta);\n      HoverText.draw(\n        delta,\n        this.player.x,\n        this.player.y,\n        this.player.game.levels[this.player.depth].rooms[this.player.levelID],\n        this.player,\n      );\n    } else {\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n      const enemies = statsTracker.getStats().enemies;\n      // Count the occurrences of each enemy\n      const enemyCounts = enemies.reduce(\n        (acc, enemy) => {\n          acc[enemy] = (acc[enemy] || 0) + 1;\n          return acc;\n        },\n        {} as Record<string, number>,\n      );\n\n      // Create individual lines\n      const lines: string[] = [];\n\n      // Line 1: Game Over or slain by\n      if (this.player.lastHitBy !== \"enemy\") {\n        lines.push(`You were slain by ${this.player.lastHitBy}.`);\n      } else {\n        lines.push(\"Game Over\");\n      }\n\n      lines.push(\n        `Depth reached: ${this.player.game.levels[this.player.depth].rooms[this.player.levelID].depth}`,\n      );\n\n      // Line 2: Enemies killed\n      lines.push(\n        `${Object.values(enemyCounts).reduce(\n          (a, b) => a + b,\n          0,\n        )} enemies killed in total:`,\n      );\n\n      // Subsequent lines: Each enemy count\n      Object.entries(enemyCounts).forEach(([enemy, count]) => {\n        lines.push(`${enemy} x${count}`);\n      });\n\n      // Line after enemy counts: Restart instruction\n      let restartButton = \"Press space or click to restart\";\n      if (GameConstants.isMobile) restartButton = \"Tap to restart\";\n\n      // Calculate total height based on number of lines\n      const lineHeight = Game.letter_height + 2; // Adjust spacing as needed\n      const totalHeight = lines.length * lineHeight + lineHeight; // Additional space for restart button\n\n      // Starting Y position to center the text block\n      let startY = GameConstants.HEIGHT / 2 - totalHeight / 2;\n\n      // Draw each line centered horizontally\n      lines.forEach((line, index) => {\n        const textWidth = Game.measureText(line).width;\n        const spacing =\n          index === 0 || index === 1 || index === lines.length - 1\n            ? lineHeight * 1.5\n            : lineHeight;\n        Game.fillText(line, GameConstants.WIDTH / 2 - textWidth / 2, startY);\n        startY += spacing;\n      });\n\n      // Draw the restart button\n      const restartTextWidth = Game.measureText(restartButton).width;\n      Game.fillText(\n        restartButton,\n        GameConstants.WIDTH / 2 - restartTextWidth / 2,\n        startY,\n      );\n    }\n    PostProcessor.draw(delta);\n    if (this.hurting) this.drawHurt(delta);\n\n    if (this.player.mapToggled === true) this.player.map.draw(delta);\n    this.drawTileCursor(delta);\n    this.player.setCursorIcon();\n\n    //this.drawInventoryButton(delta);\n    if (this.player.menu.open) this.player.menu.draw();\n    Game.ctx.restore();\n  };\n\n  drawCooldownBar = () => {\n    Game.ctx.save();\n    if (this.player.cooldownRemaining > 0) {\n      this.player.cooldownRemaining =\n        1 -\n        (Date.now() - this.player.movement.lastMoveTime) /\n          this.player.movement.adjustedCooldown;\n    } else this.player.cooldownRemaining = 0;\n    const tile = GameConstants.TILESIZE;\n    Game.drawFX(\n      12 +\n        Math.max(\n          0,\n          Math.min(14, Math.floor(17 * this.player.cooldownRemaining)),\n        ),\n      2,\n      1,\n      1,\n      0.45,\n      GameConstants.HEIGHT / tile - 2.125,\n      1,\n      1,\n    );\n    Game.ctx.restore();\n  };\n\n  drawHurt = (delta: number) => {\n    Game.ctx.save(); // Save the current canvas state\n    Game.ctx.globalAlpha = this.hurtAlpha;\n    this.hurtAlpha -= (this.hurtAlpha / 10) * delta;\n    if (this.hurtAlpha <= 0.01) {\n      this.hurtAlpha = 0;\n      this.hurting = false;\n      this.hurtingShield = false;\n    }\n    Game.ctx.globalCompositeOperation = \"source-over\";\n    Game.ctx.fillStyle = \"#cc3333\"; // bright but not fully saturated red\n    if (this.hurtingShield) {\n      Game.ctx.fillStyle = \"#639bff\"; // bright but not fully saturated blue\n    }\n\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  drawLowHealth = (delta: number) => {\n    Game.ctx.save();\n    //unused\n    if (this.player.health <= 1 && !this.player.dead) {\n      // Calculate pulsating alpha for the vignette effect\n      const lowHealthAlpha = 0.5; //Math.sin(this.lowHealthFrame / 10) * 0.5 + 0.5;\n      Game.ctx.globalAlpha = lowHealthAlpha;\n      this.lowHealthFrame += delta;\n\n      const gradientBottom = Game.ctx.createLinearGradient(\n        0,\n        GameConstants.HEIGHT,\n        0,\n        (GameConstants.HEIGHT * 2) / 3,\n      );\n\n      // Define gradient color stops\n      [gradientBottom].forEach((gradient) => {\n        gradient.addColorStop(0, \"#cc3333\"); // Solid red at edges\n        gradient.addColorStop(1, \"rgba(0, 0, 0, 0)\"); // Transparent toward center\n      });\n\n      // Draw the gradients\n      Game.ctx.globalCompositeOperation = \"source-over\";\n\n      Game.ctx.fillStyle = gradientBottom;\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      // Reset composite operation and alpha\n      Game.ctx.globalCompositeOperation = \"source-over\";\n      Game.ctx.globalAlpha = 1.0;\n    } else {\n      this.lowHealthFrame = 0;\n    }\n    Game.ctx.restore();\n  };\n\n  heartbeat = () => {\n    this.guiHeartFrame = 1;\n  };\n\n  /**\n   * Draws the tile cursor to the canvas.\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\n   * to ensure canvas state is preserved.\n   */\n  drawTileCursor = (delta: number) => {\n    if (\n      this.player.inventory.isOpen ||\n      this.player.inputHandler.mostRecentMoveInput === \"keyboard\" ||\n      GameConstants.isMobile\n    )\n      return;\n    Game.ctx.save(); // Save the current canvas state\n\n    if (\n      !this.player.mouseInLine() ||\n      !this.player.isMouseAboveFloor() ||\n      this.player.isMouseOnPlayerTile()\n    )\n      return;\n    let tileX = 24; //inRange ? 22 : 24;\n    let tileY = 5;\n\n    Game.drawFX(\n      tileX + Math.floor(HitWarning.frame),\n      tileY,\n      1,\n      1,\n      this.player.tileCursor.x + this.player.drawX,\n      this.player.tileCursor.y + this.player.drawY,\n      1,\n      1,\n    );\n\n    Game.ctx.restore(); // Restore the canvas state\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n    this.jumpY = Math.abs(Math.sin(j * Math.PI) * this.jumpHeight);\n    if (Math.abs(this.jumpY) < 0.01) this.jumpY = 0;\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n  };\n}\n","import { Entity } from \"../entity/entity\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Particle } from \"../particle/particle\";\nimport { Projectile } from \"./projectile\";\nimport { Room } from \"../room/room\";\n\ninterface Point {\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n  velocityX: number;\n  velocityY: number;\n  angle: number;\n}\n\nexport class BeamEffect extends Projectile {\n  // Number of points that make up the beam (higher = smoother but more expensive)\n  // Range: 10-100, recommended: 30\n  private static readonly SEGMENTS = 30;\n\n  // Downward force applied to each point (0 = no gravity)\n  // Range: 0-10, recommended: 2\n  private static readonly GRAVITY = 2;\n\n  // Physics simulation steps per frame (higher = more accurate but more expensive)\n  // Range: 1-10, recommended: 1\n  private static readonly ITERATIONS = 5;\n\n  // How much the beam reacts to movement of start/end points\n  // Range: 0-5, recommended: 1\n  private static readonly MOTION_INFLUENCE = 1;\n\n  // Amount of random movement applied to points (0 = straight beam)\n  // Range: 0-1, recommended: 0.5\n  private static readonly TURBULENCE = 0.5;\n\n  // How quickly velocity decreases over time\n  // Range: 0-1, recommended: 0.5\n  private static readonly VELOCITY_DECAY = 0.1;\n\n  // How quickly the turbulence angle changes\n  // Range: 0-2, recommended: 0.9\n  private static readonly ANGLE_CHANGE = 0.01; // for turbulence specifically\n\n  // Maximum speed any point can move per frame\n  // Range: 10-1000, recommended: 100\n  private static readonly MAX_VELOCITY = 100;\n\n  // General movement resistance (1 = no damping, 0 = full stop)\n  // Range: 0.9-0.999, recommended: 0.8\n  private static readonly DAMPING = 0.8;\n\n  // How strongly points pull toward their neighbors\n  // Range: 0.01-1, recommended: 0.01\n  private static readonly SPRING_STIFFNESS = 0.01;\n\n  // How quickly spring oscillations settle\n  // Range: 0.001-0.1, recommended: 0.1\n  private static readonly SPRING_DAMPING = 0.1;\n\n  private points: Point[];\n  private prevStartX: number;\n  private prevStartY: number;\n  private prevEndX: number;\n  private prevEndY: number;\n  private active: boolean = true;\n  private time: number = 0;\n  alpha: number = 1;\n  targetX: number;\n  targetY: number;\n  color: string;\n  compositeOperation: string;\n  gravity: number = BeamEffect.GRAVITY;\n  motionInfluence: number = BeamEffect.MOTION_INFLUENCE;\n  turbulence: number = BeamEffect.TURBULENCE;\n  velocityDecay: number = BeamEffect.VELOCITY_DECAY;\n  angleChange: number = BeamEffect.ANGLE_CHANGE;\n  maxVelocity: number = BeamEffect.MAX_VELOCITY;\n  damping: number = BeamEffect.DAMPING;\n  springStiffness: number = BeamEffect.SPRING_STIFFNESS;\n  springDamping: number = BeamEffect.SPRING_DAMPING;\n  iterations: number = BeamEffect.ITERATIONS;\n  segments: number = BeamEffect.SEGMENTS;\n  constructor(x1: number, y1: number, x2: number, y2: number, parent: Entity) {\n    super(parent, x1, y1);\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    this.x = x1;\n    this.y = y1;\n    this.targetX = x2;\n    this.targetY = y2;\n\n    this.points = this.initializePoints(startX, startY, endX, endY);\n    this.prevStartX = startX;\n    this.prevStartY = startY;\n    this.prevEndX = endX;\n    this.prevEndY = endY;\n    this.color = \"cyan\";\n    this.compositeOperation = \"source-over\";\n  }\n  /**\n   * Sets the physics properties for the beam effect.\n   *\n   * @param {number} [gravity] - The gravitational force applied to the beam. Default: 2\n   * @param {number} [motionInfluence] - The influence of motion on the beam. Default: 1\n   * @param {number} [turbulence] - The turbulence applied to the beam. Default: 0.5\n   * @param {number} [velocityDecay] - The rate at which velocity decays. Default: 0.1\n   * @param {number} [angleChange] - The change in angle of the beam. Default: 0.01\n   * @param {number} [maxVelocity] - The maximum velocity of the beam.\n   * @param {number} [damping] - The damping factor for the beam's motion.\n   * @param {number} [springStiffness] - The stiffness of the spring effect.\n   * @param {number} [springDamping] - The damping of the spring effect.\n   * @param {number} [iterations] - The number of iterations for the physics simulation.\n   * @param {number} [segments] - The number of segments for the beam.\n   */\n  setPhysics(\n    gravity?: number,\n    motionInfluence?: number,\n    turbulence?: number,\n    velocityDecay?: number,\n    angleChange?: number,\n    maxVelocity?: number,\n    damping?: number,\n    springStiffness?: number,\n    springDamping?: number,\n    iterations?: number,\n    segments?: number,\n  ) {\n    this.gravity = gravity ?? BeamEffect.GRAVITY;\n    this.motionInfluence = motionInfluence ?? BeamEffect.MOTION_INFLUENCE;\n    this.turbulence = turbulence ?? BeamEffect.TURBULENCE;\n    this.velocityDecay = velocityDecay ?? BeamEffect.VELOCITY_DECAY;\n    this.angleChange = angleChange ?? BeamEffect.ANGLE_CHANGE;\n    this.maxVelocity = maxVelocity ?? BeamEffect.MAX_VELOCITY;\n    this.damping = damping ?? BeamEffect.DAMPING;\n    this.springStiffness = springStiffness ?? BeamEffect.SPRING_STIFFNESS;\n    this.springDamping = springDamping ?? BeamEffect.SPRING_DAMPING;\n    this.iterations = iterations ?? BeamEffect.ITERATIONS;\n    this.segments = segments ?? BeamEffect.SEGMENTS;\n  }\n\n  setTarget(x: number, y: number, x2: number, y2: number) {\n    this.x = x;\n    this.y = y;\n    this.targetX = x2;\n    this.targetY = y2;\n  }\n\n  render(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string = this.color,\n    lineWidth: number = 2,\n    delta: number = 1 / 60,\n    compositeOperation: string = this.compositeOperation,\n  ): void {\n    const startX =\n      this.x * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY =\n      this.y * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX =\n      this.targetX * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY =\n      this.targetY * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n\n    const startForceX =\n      (startX - this.prevStartX) * this.motionInfluence * delta;\n    const startForceY =\n      (startY - this.prevStartY) * this.motionInfluence * delta;\n    const endForceX = (endX - this.prevEndX) * this.motionInfluence * delta;\n    const endForceY = (endY - this.prevEndY) * this.motionInfluence * delta;\n\n    for (let i = 1; i < 4; i++) {\n      const influence = 1 - i / 4;\n      this.points[i].x += startForceX * influence;\n      this.points[i].y += startForceY * influence;\n    }\n    for (let i = this.points.length - 4; i < this.points.length - 1; i++) {\n      const influence = 1 - (this.points.length - i) / 4;\n      this.points[i].x += endForceX * influence;\n      this.points[i].y += endForceY * influence;\n    }\n\n    this.simulateRope(startX, startY, endX, endY, delta);\n\n    const ctx = Game.ctx;\n    ctx.save();\n    Game.ctx.globalCompositeOperation =\n      compositeOperation as GlobalCompositeOperation;\n    for (let i = 0; i < this.points.length - 1; i++) {\n      const p1 = this.points[i];\n      const p2 = this.points[i + 1];\n\n      const dx = p2.x - p1.x;\n      const dy = p2.y - p1.y;\n      const steps = Math.max(Math.abs(dx), Math.abs(dy));\n\n      const xIncrement = dx / steps;\n      const yIncrement = dy / steps;\n\n      let x = p1.x;\n      let y = p1.y;\n\n      for (let step = 0; step <= steps; step++) {\n        for (let w = 0; w < lineWidth; w++) {\n          for (let h = 0; h < lineWidth; h++) {\n            ctx.fillStyle = color;\n            ctx.fillRect(Math.round(x + w), Math.round(y + h), 1, 1);\n          }\n        }\n        x += xIncrement;\n        y += yIncrement;\n      }\n    }\n\n    ctx.restore();\n\n    this.prevStartX = startX;\n    this.prevStartY = startY;\n    this.prevEndX = endX;\n    this.prevEndY = endY;\n  }\n\n  private initializePoints(\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ): Point[] {\n    const points: Point[] = [];\n    for (let i = 0; i < this.segments; i++) {\n      const t = i / (this.segments - 1);\n      points.push({\n        x: startX + (endX - startX) * t,\n        y: startY + (endY - startY) * t,\n        oldX: startX + (endX - startX) * t,\n        oldY: startY + (endY - startY) * t,\n        velocityX: 0,\n        velocityY: 0,\n        angle: Math.random() * Math.PI * 2,\n      });\n    }\n    return points;\n  }\n\n  private applyTurbulence(point: Point, index: number): void {\n    point.angle += Math.sin(this.time * 0.1 + index * 0.5) * this.angleChange;\n\n    const turbulenceX = Math.cos(point.angle) * this.turbulence;\n    const turbulenceY = Math.sin(point.angle) * this.turbulence;\n\n    point.velocityX += turbulenceX;\n    point.velocityY += turbulenceY;\n\n    point.velocityX = Math.min(\n      Math.max(point.velocityX, -this.maxVelocity),\n      this.maxVelocity,\n    );\n    point.velocityY = Math.min(\n      Math.max(point.velocityY, -this.maxVelocity),\n      this.maxVelocity,\n    );\n  }\n\n  tick = () => {\n    if (this.parent.dead) {\n      this.destroy();\n    }\n  };\n\n  private simulateRope(\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n    delta: number,\n  ): void {\n    const iterationsThisFrame = Math.ceil(this.iterations * delta);\n\n    for (let iteration = 0; iteration < iterationsThisFrame; iteration++) {\n      for (let i = 1; i < this.points.length - 1; i++) {\n        const point = this.points[i];\n        const prevPoint = this.points[i - 1];\n        const nextPoint = this.points[i + 1];\n\n        const springForceXPrev = (prevPoint.x - point.x) * this.springStiffness;\n        const springForceYPrev = (prevPoint.y - point.y) * this.springStiffness;\n        const springForceXNext = (nextPoint.x - point.x) * this.springStiffness;\n        const springForceYNext = (nextPoint.y - point.y) * this.springStiffness;\n\n        this.applyTurbulence(point, i);\n\n        point.velocityX =\n          (point.velocityX + springForceXPrev + springForceXNext) *\n          this.damping;\n        point.velocityY =\n          (point.velocityY + springForceYPrev + springForceYNext) *\n          this.damping;\n\n        const relativeVXPrev = prevPoint.velocityX - point.velocityX;\n        const relativeVYPrev = prevPoint.velocityY - point.velocityY;\n        const relativeVXNext = nextPoint.velocityX - point.velocityX;\n        const relativeVYNext = nextPoint.velocityY - point.velocityY;\n\n        point.velocityX +=\n          (relativeVXPrev + relativeVXNext) * this.springDamping;\n        point.velocityY +=\n          (relativeVYPrev + relativeVYNext) * this.springDamping;\n\n        point.oldX = point.x;\n        point.oldY = point.y;\n\n        point.x += point.velocityX;\n        point.y += point.velocityY + this.gravity;\n      }\n\n      const segmentLength =\n        Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2)) /\n        (this.segments - 1);\n\n      for (\n        let constraintIteration = 0;\n        constraintIteration < 2;\n        constraintIteration++\n      ) {\n        for (let i = 0; i < this.points.length - 1; i++) {\n          const p1 = this.points[i];\n          const p2 = this.points[i + 1];\n\n          const dx = p2.x - p1.x;\n          const dy = p2.y - p1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          const difference = segmentLength - distance;\n          const percent = difference / distance / 2;\n          const offsetX = dx * percent;\n          const offsetY = dy * percent;\n\n          if (i > 0) {\n            p1.x -= offsetX * 1.5;\n            p1.y -= offsetY * 1.5;\n          }\n          if (i < this.points.length - 2) {\n            p2.x += offsetX * 1.5;\n            p2.y += offsetY * 1.5;\n          }\n        }\n      }\n    }\n\n    this.points[0].x = startX;\n    this.points[0].y = startY;\n    this.points[0].oldX = startX;\n    this.points[0].oldY = startY;\n    this.points[this.points.length - 1].x = endX;\n    this.points[this.points.length - 1].y = endY;\n    this.points[this.points.length - 1].oldX = endX;\n    this.points[this.points.length - 1].oldY = endY;\n  }\n\n  draw = (delta: number) => {\n    this.drawableY = this.y - 0.01;\n    this.render(\n      this.targetX,\n      this.targetY,\n      this.x,\n      this.y,\n      this.color,\n      2,\n      delta,\n      this.compositeOperation,\n    );\n  };\n\n  static renderBeam(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string = \"cyan\",\n    lineWidth: number = 2,\n    alpha: number = 1,\n  ): void {\n    const ctx = Game.ctx;\n    ctx.globalAlpha = alpha;\n\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = color;\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  destroy(): void {\n    this.active = false;\n    this.points = [];\n    this.dead = true;\n  }\n\n  isActive(): boolean {\n    return this.active;\n  }\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { Player } from \"../player/player\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Entity } from \"../entity/entity\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { Lighting } from \"../lighting/lighting\";\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { BeamEffect } from \"./beamEffect\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class EnemyShield extends Projectile {\n  frame: number;\n  parent: Entity;\n  tileX: number;\n  tileY: number;\n  health: number;\n\n  constructor(parent: Entity, x: number, y: number, health: number = 1) {\n    super(parent, x, y);\n    this.parent = parent;\n    this.frame = 0;\n    this.health = health;\n    this.parent.shielded = true;\n    this.lightSource = Lighting.newLightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      [20, 0, 40],\n      3.5,\n      20,\n    );\n    this.parent.addLightSource(this.lightSource);\n    this.parent.room.projectiles.push(this);\n    this.parent.room.updateLighting();\n  }\n\n  remove = () => {\n    this.parent.shielded = false;\n    this.parent.removeLightSource(this.lightSource);\n    this.parent.room.projectiles = this.parent.room.projectiles.filter(\n      (projectile) => projectile !== this,\n    );\n\n    let beam = this.parent.room.projectiles.find(\n      (projectile) =>\n        projectile instanceof BeamEffect && projectile.parent === this.parent,\n    );\n    if (beam) {\n      beam.dead = true;\n    }\n    this.parent.shadeColor = \"black\";\n    this.lightSource = null;\n    this.parent.shield = null;\n  };\n\n  updateLightSourcePos = () => {\n    if (this.lightSource === null) return;\n    let index = this.parent.room.lightSources.indexOf(this.lightSource);\n    this.parent.room.lightSources[index].x = this.parent.x + 0.5;\n    this.parent.room.lightSources[index].y = this.parent.y + 0.5;\n    this.parent.room.updateLighting();\n  };\n\n  hurt = (damage: number) => {\n    const damageOverShield = Math.max(0, damage - this.health);\n    this.health -= damage;\n    /*\n    GenericParticle.spawnCluster(\n      this.parent.room,\n      this.parent.x + 0.5,\n      this.parent.y + 0.5,\n      \"#fbf236\",\n    );\n    */\n\n    if (this.health <= 0) {\n      this.remove();\n    }\n    return damageOverShield;\n  };\n\n  tick = () => {\n    if (this.parent.dead) {\n      this.remove();\n    }\n    if (this.dead) {\n      this.parent.room.projectiles = this.parent.room.projectiles.filter(\n        (projectile) => projectile !== this,\n      );\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = 1;\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n\n    this.drawableY = this.parent.drawableY - 0.05;\n    Game.ctx.globalCompositeOperation = \"difference\";\n    if (this.parent.shielded) {\n      Game.drawFX(\n        18 + Math.floor(this.frame),\n        9,\n        1,\n        1,\n        this.parent.x - this.parent.drawX,\n        this.parent.y - this.parent.drawY,\n        1,\n        1,\n      );\n    }\n    Game.ctx.restore();\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player/player\";\nimport { Entity } from \"../entity/entity\";\nimport { Room } from \"../room/room\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound/sound\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { ImageParticle } from \"../particle/imageParticle\";\nimport { LightSource } from \"../lighting/lightSource\";\n\nexport class EnemySpawnAnimation extends Projectile {\n  readonly ANIM_COUNT = 3;\n\n  room: Room;\n  enemy: Entity;\n  frame: number;\n  constructor(room: Room, enemy: Entity, x: number, y: number) {\n    super(enemy, x, y);\n    this.room = room;\n    this.enemy = enemy;\n    this.frame = 0;\n    this.hasBloom = true;\n    this.bloomColor = \"#00BFFF\";\n    this.bloomOffsetY = -0.5;\n\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      1,\n      [0, 50, 150],\n      1,\n    );\n    this.room.lightSources.push(this.lightSource);\n    this.room.updateLighting();\n  }\n\n  tick = () => {\n    if (this.room === this.room.game.room) Sound.enemySpawn();\n\n    let hitPlayer = false;\n    for (const i in this.room.game.players) {\n      if (\n        this.room.game.players[i].x === this.x &&\n        this.room.game.players[i].y === this.y\n      ) {\n        this.room.game.players[i].hurt(0.5, \"reaper\");\n        hitPlayer = true;\n      }\n    }\n    if (!hitPlayer) {\n      this.dead = true;\n      this.enemy.skipNextTurns = 1;\n      this.room.entities.push(this.enemy);\n      this.enemy.createHitParticles();\n      this.lightSource.dead = true;\n    } else {\n      this.room.hitwarnings.push(\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    this.frame += 0.25 * delta;\n    if (this.frame >= 8) this.frame = 0;\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\n      let offsetX = 0;\n      Game.drawFX(\n        Math.floor(this.frame),\n        27,\n        1,\n        1,\n        this.x + Math.round(offsetX) / 16.0,\n        this.y - 0.5,\n        1,\n        1,\n      );\n    }\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player/player\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Lighting } from \"../lighting/lighting\";\nimport { Utils } from \"../utility/utils\";\nimport { Entity } from \"../entity/entity\";\nimport { Bomb } from \"../entity/object/bomb\";\nexport class Explosion extends Projectile {\n  state: number;\n  frame: number;\n  delay: number;\n  parent: Entity;\n  offsetFrame: number;\n\n  constructor(entity: Entity, x: number, y: number, playerHitBy: Player) {\n    super(entity, x, y);\n    this.state = 0;\n    this.frame = 6;\n    this.parent = entity;\n    this.offsetFrame =\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 100;\n    this.delay = 0;\n    Lighting.momentaryLight(\n      this.parent.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      0.5,\n      [255, 100, 0],\n      350,\n      20,\n      Math.abs(this.offsetFrame),\n    );\n    const distance = Utils.distance(\n      this.parent.x,\n      this.parent.y,\n      this.x,\n      this.y,\n    );\n\n    let damage =\n      distance === 0 ? 1 : Math.max(0.5, Math.floor((1 / distance) * 4) / 2);\n    console.log(\"damage:\", damage);\n    for (let entity of this.parent.room.entities) {\n      if (\n        entity.x === this.x &&\n        entity.y === this.y &&\n        entity !== this.parent\n      ) {\n        if (entity instanceof Bomb) {\n          entity.fuseLength = 1;\n        }\n        entity.hurt(playerHitBy, damage);\n\n        console.log(playerHitBy);\n      }\n      if (playerHitBy.x === this.x && playerHitBy.y === this.y) {\n        playerHitBy.hurt(damage, \"bomb\");\n      }\n    }\n  }\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\n    if (this.offsetFrame >= 0) {\n      this.frame += 0.25 * delta;\n    }\n\n    if (this.frame > 17) this.dead = true;\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player/player\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Lighting } from \"../lighting/lighting\";\nimport { Utils } from \"../utility/utils\";\nexport class PlayerFireball extends Projectile {\n  state: number;\n  frame: number;\n  delay: number;\n  parent: Player;\n  offsetFrame: number;\n\n  constructor(parent: Player, x: number, y: number) {\n    super(parent, x, y);\n    this.state = 0;\n    this.frame = 6;\n    this.offsetFrame =\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 50;\n    this.delay = 0;\n    Lighting.momentaryLight(\n      this.parent.game.rooms[this.parent.levelID],\n      this.x + 0.5,\n      this.y + 0.5,\n      0.5,\n      [255, 100, 0],\n      250,\n      10,\n      1,\n    );\n  }\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\n    if (this.offsetFrame >= 0) {\n      this.frame += 0.25 * delta;\n    }\n\n    if (this.frame > 17) this.dead = true;\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Player } from \"../player/player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Direction } from \"../game\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\n\nexport class Projectile extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  parent: Entity | Player;\n  dir: Direction;\n  bloomOffsetY: number;\n  lightSource: LightSource;\n\n  constructor(parent: Entity | Player, x: number, y: number) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.parent = parent;\n    this.drawableY = y;\n    this.hasBloom = false;\n    this.bloomColor = \"#00BFFF\";\n    this.bloomOffsetY = 0;\n  }\n\n  get distanceToParent() {\n    return Math.abs(this.x - this.parent.x) + Math.abs(this.y - this.parent.y);\n  }\n\n  setTarget(x: number, y: number, x2: number, y2: number) {}\n\n  hitPlayer = (player: Player) => {};\n  hitEnemy = (enemy: Entity) => {};\n\n  tick = () => {};\n  draw = (delta: number) => {};\n  drawTopLayer = (delta: number) => {};\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player/player\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { Entity } from \"../entity/entity\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { Lighting } from \"../lighting/lighting\";\nimport { Utils } from \"../utility/utils\";\n\nexport class WizardFireball extends Projectile {\n  state: number;\n  frame: number;\n  parent: WizardEnemy;\n  delay: number;\n  frameOffset: number;\n  offsetX: number;\n  hitWarning: HitWarning;\n  tileX: number;\n  tileY: number;\n\n  constructor(parent: WizardEnemy, x: number, y: number) {\n    super(parent, x, y);\n    this.tileY = parent.name === \"wizard bomber\" ? 7 : 8;\n    this.parent = parent;\n    this.frame = 0;\n    this.state = 0; // this.distanceToParent;\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      4,\n      (parent as WizardEnemy).projectileColor,\n      0.1,\n    );\n    this.parent.addLightSource(this.lightSource);\n    //this.parent.room.updateLighting();\n    this.hasBloom = true;\n    this.bloomColor = Utils.rgbToHex(\n      (this.parent as WizardEnemy).projectileColor[0],\n      (this.parent as WizardEnemy).projectileColor[1],\n      (this.parent as WizardEnemy).projectileColor[2],\n    );\n    this.bloomAlpha = 0.5;\n    this.softBloomAlpha = 0;\n  }\n  setMarkerFrame = () => {\n    // Calculate offsetX based on direction\n    this.offsetX = Math.floor(((this.dir + 1) % 8) / 2);\n  };\n\n  tick = () => {\n    if (this.parent.dead || this.state === 3) {\n      this.parent.removeLightSource(this.lightSource);\n      this.dead = true;\n    }\n\n    if (!this.dead && this.state === 0) {\n      this.bloomAlpha = 1;\n    }\n\n    this.state++;\n    if (!this.dead && this.state === 1) {\n      this.bloomAlpha = 0.5;\n\n      const lightSource = this.parent.room.lightSources.find(\n        (ls) => ls === this.lightSource,\n      );\n      lightSource.b = 0.4;\n      this.parent.room.hitwarnings.push(\n        new HitWarning(\n          this.parent.game,\n          this.x,\n          this.y,\n          this.parent.x,\n          this.parent.y,\n          true,\n        ),\n      );\n    }\n    if (!this.dead && this.state === 2) {\n      this.bloomAlpha = 0;\n      Lighting.momentaryLight(\n        this.parent.room,\n        this.x,\n        this.y,\n        3,\n        (this.parent as WizardEnemy).projectileColor,\n        500,\n        5,\n        350,\n      );\n      this.parent.removeLightSource(this.lightSource);\n      this.frame = 0;\n      this.delay = Game.rand(0, 10, Math.random);\n    }\n  };\n\n  hitPlayer = (player: Player) => {\n    if (!this.dead && this.state === 2) {\n      player.hurt(1, this.parent.name);\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    /*Game.drawFX(\n      18 + this.offsetX, //+ Math.floor(HitWarning.frame),\n      4,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1\n    );*/\n\n    if (this.state >= 0) {\n      if (this.state === 0) {\n        this.frame += 0.25 * delta;\n        if (this.frame >= 4) this.frame = 0;\n        Game.drawFX(\n          22 + Math.floor(this.frame),\n          this.tileY,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n        );\n      } else if (this.state === 1) {\n        this.frame += 0.25 * delta;\n        if (this.frame >= 4) this.frame = 0;\n        Game.drawFX(\n          18 + Math.floor(this.frame),\n          this.tileY,\n          1,\n          1,\n          this.x,\n          this.y - 0.2,\n          1,\n          1,\n        );\n      } else {\n        if (this.delay > 0) {\n          this.delay--;\n          return;\n        }\n        this.frame += 0.3 * delta;\n        if (this.frame > 17) this.dead = true;\n        Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n      }\n    }\n  };\n}\n","import { Room } from \"./room\";\n\n/**\n * Configuration options for clustering behavior\n */\nexport interface ClusteringOptions {\n  /** Falloff function exponent (default: 2 for inverse square distance) */\n  falloffExponent?: number;\n  /** Base score added to all tiles to ensure some randomness (default: 0.1) */\n  baseScore?: number;\n  /** Maximum distance for influence calculation (default: 10) */\n  maxInfluenceDistance?: number;\n  /** Whether to use a seed position or start randomly (default: false) */\n  useSeedPosition?: boolean;\n  /** Seed position coordinates (used if useSeedPosition is true) */\n  seedPosition?: { x: number; y: number };\n}\n\n/**\n * Handles clustering logic for prop placement\n */\nexport class PropClusterer {\n  private room: Room;\n  private options: Required<ClusteringOptions>;\n  private placedPositions: { x: number; y: number }[] = [];\n  private availableTiles: { x: number; y: number }[] = [];\n\n  constructor(room: Room, options: ClusteringOptions = {}) {\n    this.room = room;\n    this.options = {\n      falloffExponent: options.falloffExponent ?? 2,\n      baseScore: options.baseScore ?? 0.1,\n      maxInfluenceDistance: options.maxInfluenceDistance ?? 10,\n      useSeedPosition: options.useSeedPosition ?? false,\n      seedPosition: options.seedPosition ?? { x: 0, y: 0 },\n    };\n  }\n\n  /**\n   * Generates clustered positions for the specified number of props\n   */\n  generateClusteredPositions(numProps: number): { x: number; y: number }[] {\n    this.placedPositions = [];\n    this.availableTiles = this.getAvailableTiles();\n\n    if (this.availableTiles.length === 0) {\n      return [];\n    }\n\n    // Initialize with seed position or random position\n    if (\n      this.options.useSeedPosition &&\n      this.isValidPosition(this.options.seedPosition)\n    ) {\n      this.placePosition(this.options.seedPosition);\n    } else if (this.availableTiles.length > 0) {\n      const randomIndex = Math.floor(\n        Math.random() * this.availableTiles.length,\n      );\n      const randomPosition = this.availableTiles.splice(randomIndex, 1)[0];\n      this.placedPositions.push(randomPosition);\n    }\n\n    // Generate remaining positions\n    for (let i = 1; i < numProps && this.availableTiles.length > 0; i++) {\n      const position = this.selectNextPosition();\n      if (position) {\n        this.placePosition(position);\n      } else {\n        break; // No valid positions left\n      }\n    }\n\n    return [...this.placedPositions];\n  }\n\n  /**\n   * Gets all available tiles in the room\n   */\n  private getAvailableTiles(): { x: number; y: number }[] {\n    const tiles = this.room.getEmptyTiles();\n    return tiles.map((tile) => ({ x: tile.x, y: tile.y }));\n  }\n\n  /**\n   * Checks if a position is valid and available\n   */\n  private isValidPosition(position: { x: number; y: number }): boolean {\n    return this.availableTiles.some(\n      (tile) => tile.x === position.x && tile.y === position.y,\n    );\n  }\n\n  /**\n   * Places a position and removes it from available tiles\n   */\n  private placePosition(position: { x: number; y: number }): void {\n    this.placedPositions.push(position);\n    this.availableTiles = this.availableTiles.filter(\n      (tile) => !(tile.x === position.x && tile.y === position.y),\n    );\n  }\n\n  /**\n   * Selects the next position based on clustering algorithm\n   */\n  private selectNextPosition(): { x: number; y: number } | null {\n    if (this.availableTiles.length === 0) {\n      return null;\n    }\n\n    // Score each available tile based on proximity to placed entities\n    const scoredTiles = this.availableTiles.map((tile) => ({\n      position: tile,\n      score: this.calculateTileScore(tile),\n    }));\n\n    // Normalize scores to create probability weights\n    const totalScore = scoredTiles.reduce((sum, tile) => sum + tile.score, 0);\n\n    if (totalScore <= 0) {\n      // Fallback to uniform distribution if all scores are 0\n      const randomIndex = Math.floor(\n        Math.random() * this.availableTiles.length,\n      );\n      return this.availableTiles.splice(randomIndex, 1)[0];\n    }\n\n    // Perform weighted random selection\n    const randomValue = Math.random() * totalScore;\n    let cumulativeScore = 0;\n\n    for (const tile of scoredTiles) {\n      cumulativeScore += tile.score;\n      if (cumulativeScore >= randomValue) {\n        return tile.position;\n      }\n    }\n\n    // Fallback to last tile\n    return scoredTiles[scoredTiles.length - 1].position;\n  }\n\n  /**\n   * Calculates the score for a tile based on its proximity to placed entities\n   */\n  private calculateTileScore(tile: { x: number; y: number }): number {\n    let score = this.options.baseScore;\n\n    for (const placed of this.placedPositions) {\n      const distance = this.calculateDistance(tile, placed);\n\n      if (distance <= this.options.maxInfluenceDistance) {\n        // Use inverse power function for falloff\n        const influence = 1 / Math.pow(distance, this.options.falloffExponent);\n        score += influence;\n      }\n    }\n\n    return score;\n  }\n\n  /**\n   * Calculates Euclidean distance between two positions\n   */\n  private calculateDistance(\n    pos1: { x: number; y: number },\n    pos2: { x: number; y: number },\n  ): number {\n    const dx = pos1.x - pos2.x;\n    const dy = pos1.y - pos2.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n","// #region imports\nimport { Wall } from \"../tile/wall\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Floor } from \"../tile/floor\";\nimport { Direction, Game, LevelState } from \"../game\";\nimport { Door, DoorType } from \"../tile/door\";\nimport { Tile, SkinType } from \"../tile/tile\";\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\nimport { Entity, EntityType } from \"../entity/entity\";\nimport { Chest } from \"../entity/object/chest\";\nimport { Item } from \"../item/item\";\nimport { GoldenKey } from \"../item/goldenKey\";\nimport { SpawnFloor } from \"../tile/spawnfloor\";\nimport { Spike } from \"../tile/spike\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Armor } from \"../item/armor\";\nimport { Particle } from \"../particle/particle\";\nimport { Projectile } from \"../projectile/projectile\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { FountainTile } from \"../tile/fountainTile\";\nimport { CoffinTile } from \"../tile/coffinTile\";\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\nimport { InsideLevelDoor } from \"../tile/insideLevelDoor\";\nimport { Button } from \"../tile/button\";\nimport { HitWarning } from \"../drawable/hitWarning\";\nimport { UpLadder } from \"../tile/upLadder\";\nimport { DownLadder } from \"../tile/downLadder\";\nimport { CoalResource } from \"../entity/resource/coalResource\";\nimport { GoldResource } from \"../entity/resource/goldResource\";\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\nimport { Chasm } from \"../tile/chasm\";\nimport { Spawner } from \"../entity/enemy/spawner\";\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\nimport { WallTorch } from \"../tile/wallTorch\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\nimport { Shotgun } from \"../item/weapon/shotgun\";\nimport { Heart } from \"../item/usable/heart\";\nimport { Spear } from \"../item/weapon/spear\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { Player, PlayerDirection } from \"../player/player\";\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\nimport { Random } from \"../utility/random\";\nimport { Lantern } from \"../item/light/lantern\";\nimport { DualDagger } from \"../item/weapon/dualdagger\";\nimport { Pot } from \"../entity/object/pot\";\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\nimport { Rock } from \"../entity/resource/rockResource\";\nimport { Mushrooms } from \"../entity/object/mushrooms\";\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\nimport { TombStone } from \"../entity/object/tombStone\";\nimport { Pumpkin } from \"../entity/object/pumpkin\";\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\nimport { ReverbEngine } from \"../sound/reverb\";\nimport { astar } from \"../utility/astarclass\";\nimport { Level } from \"../level/level\";\nimport { Warhammer } from \"../item/weapon/warhammer\";\nimport { Spellbook } from \"../item/weapon/spellbook\";\nimport { Torch } from \"../item/light/torch\";\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\nimport { BeamEffect } from \"../projectile/beamEffect\";\nimport { EnvType, PropInfo } from \"../level/environment\";\nimport { Pickaxe } from \"../item/tool/pickaxe\";\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\nimport { Puddle } from \"../tile/decorations/puddle\";\nimport { Decoration } from \"../tile/decorations/decoration\";\nimport { Bomb } from \"../entity/object/bomb\";\nimport { Sound } from \"../sound/sound\";\nimport { Block } from \"../entity/object/block\";\nimport { Bestiary } from \"../game/bestiary\";\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\nimport { RoomBuilder } from \"./roomBuilder\";\nimport { BigZombieEnemy } from \"../entity/enemy/bigZombieEnemy\";\nimport { Bush } from \"../entity/object/bush\";\nimport { Sprout } from \"../entity/object/sprout\";\nimport { Candle } from \"../item/light/candle\";\nimport { GlowBugEnemy } from \"../entity/enemy/glowBugEnemy\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\nimport { ItemGroup } from \"../item/itemGroup\";\nimport { Sword } from \"../item/weapon/sword\";\nimport { WebGLBlurRenderer } from \"../gui/webglBlurRenderer\";\nimport { Utils } from \"../utility/utils\";\n\n// #endregion\n\n// #region Enums & Interfaces\n/**\n * Enumeration of available enemy types.\n */\nexport enum EnemyType {\n  crab = \"crab\",\n  frog = \"frog\",\n  zombie = \"zombie\",\n  skull = \"skull\",\n  energyWizard = \"energywizard\",\n  charge = \"charge\",\n  rook = \"rook\",\n  bishop = \"bishop\",\n  armoredzombie = \"armoredzombie\",\n  bigskull = \"bigskull\",\n  queen = \"queen\",\n  knight = \"knight\",\n  bigknight = \"bigknight\",\n  firewizard = \"firewizard\",\n  spawner = \"spawner\",\n  occultist = \"occultist\",\n  bomb = \"bomb\",\n  armoredskull = \"armoredskull\",\n  mummy = \"mummy\",\n  spider = \"spider\",\n  bigzombie = \"bigzombie\",\n  glowbug = \"glowbug\",\n  // Add other enemy types here\n}\n\n/**\n * Mapping of enemy types to their corresponding classes.\n */\nexport const EnemyTypeMap: { [key in EnemyType]: EnemyStatic } = {\n  [EnemyType.crab]: CrabEnemy,\n  [EnemyType.frog]: FrogEnemy,\n  [EnemyType.zombie]: ZombieEnemy,\n  [EnemyType.skull]: SkullEnemy,\n  [EnemyType.energyWizard]: EnergyWizardEnemy,\n  [EnemyType.charge]: ChargeEnemy,\n  [EnemyType.rook]: RookEnemy,\n  [EnemyType.bishop]: BishopEnemy,\n  [EnemyType.armoredzombie]: ArmoredzombieEnemy,\n  [EnemyType.bigskull]: BigSkullEnemy,\n  [EnemyType.queen]: QueenEnemy,\n  [EnemyType.knight]: KnightEnemy,\n  [EnemyType.bigknight]: BigKnightEnemy,\n  [EnemyType.firewizard]: FireWizardEnemy,\n  [EnemyType.spawner]: Spawner,\n  [EnemyType.occultist]: OccultistEnemy,\n  [EnemyType.bomb]: Bomb,\n  [EnemyType.armoredskull]: ArmoredSkullEnemy,\n  [EnemyType.mummy]: MummyEnemy,\n  [EnemyType.spider]: SpiderEnemy,\n  [EnemyType.bigzombie]: BigZombieEnemy,\n  [EnemyType.glowbug]: GlowBugEnemy,\n  // Add other enemy mappings here\n};\n\nexport enum RoomType {\n  START = \"START\",\n  DUNGEON = \"DUNGEON\",\n  BOSS = \"BOSS\",\n  BIGDUNGEON = \"BIGDUNGEON\",\n  TREASURE = \"TREASURE\",\n  FOUNTAIN = \"FOUNTAIN\",\n  COFFIN = \"COFFIN\",\n  GRASS = \"GRASS\",\n  PUZZLE = \"PUZZLE\",\n  KEYROOM = \"KEYROOM\",\n  CHESSBOARD = \"CHESSBOARD\",\n  MAZE = \"MAZE\",\n  CORRIDOR = \"CORRIDOR\",\n  SPIKECORRIDOR = \"SPIKECORRIDOR\",\n  UPLADDER = \"UPLADDER\",\n  DOWNLADDER = \"DOWNLADDER\",\n  SHOP = \"SHOP\",\n  BIGCAVE = \"BIGCAVE\",\n  CAVE = \"CAVE\",\n  SPAWNER = \"SPAWNER\",\n  ROPEHOLE = \"ROPEHOLE\",\n  ROPECAVE = \"ROPECAVE\",\n  TUTORIAL = \"TUTORIAL\",\n  GRAVEYARD = \"GRAVEYARD\",\n  FOREST = \"FOREST\",\n  ROPEUP = \"ROPEUP\",\n}\n\nexport enum TurnState {\n  playerTurn,\n  computerTurn,\n}\n\nexport interface WallInfo {\n  isTopWall: boolean;\n  isBottomWall: boolean;\n  isLeftWall: boolean;\n  isRightWall: boolean;\n  isInnerWall: boolean;\n  isBelowDoorWall: boolean;\n  isDoorWall: boolean;\n  innerWallType: string | null;\n  shouldDrawBottom: boolean;\n  isAboveDoorWall: boolean;\n}\n\nexport enum WallDirection {\n  NORTH = \"North\",\n  EAST = \"East\",\n  SOUTH = \"South\",\n  WEST = \"West\",\n  TOPLEFT = \"TopLeft\",\n  TOPRIGHT = \"TopRight\",\n  BOTTOMLEFT = \"BottomLeft\",\n  BOTTOMRIGHT = \"BottomRight\",\n}\n\nexport interface EnemyStatic {\n  add(room: Room, game: Game, x: number, y: number, ...rest: any[]): void;\n}\n\n// #endregion\n\n// Add this interface after the existing interfaces\ninterface BlurCache {\n  color6px: HTMLCanvasElement | null;\n  color12px: HTMLCanvasElement | null;\n  shade5px: HTMLCanvasElement | null;\n  bloom8px: HTMLCanvasElement | null;\n  isValid: boolean;\n  lastLightingUpdate: number;\n}\n\nexport class Room {\n  roomArray: Tile[][];\n\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\n  softCol: [number, number, number][][];\n  col: [number, number, number][][];\n  renderBuffer: [number, number, number, number][][][]; // Array of color arrays (r,g,b,alpha) for each x,y position\n  oldVis: number[][];\n  oldCol: [number, number, number][][];\n\n  entities: Array<Entity>;\n  deadEntities: Array<Entity>;\n  items: Array<Item>;\n  doors: Array<Door>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\n  projectiles: Array<Projectile>;\n  particles: Array<Particle>;\n  hitwarnings: Array<HitWarning>;\n  private colorOffscreenCanvas: HTMLCanvasElement;\n  private colorOffscreenCtx: CanvasRenderingContext2D;\n\n  private shadeOffscreenCanvas: HTMLCanvasElement;\n  private shadeOffscreenCtx: CanvasRenderingContext2D;\n  private bloomOffscreenCanvas: HTMLCanvasElement;\n  private bloomOffscreenCtx: CanvasRenderingContext2D;\n\n  currentSpawnerCount: number;\n\n  game: Game;\n  roomX: number;\n  roomY: number;\n  width: number;\n  height: number;\n  type: RoomType;\n  depth: number;\n  mapGroup: number;\n  name: string = \"\";\n  message: string;\n  turn: TurnState;\n  playerTurnTime: number;\n  playerTicked: Player;\n  skin: SkinType;\n  entered: boolean; // has the player entered this level\n  lightSources: Array<LightSource>;\n  shadeColor = \"#000000\";\n  innerWalls: Array<Wall>;\n  wallInfo: Map<string, WallInfo> = new Map();\n  savePoint: Room;\n  lastEnemyCount: number;\n  outerWalls: Array<Wall>;\n  level: Level;\n  id: number;\n  tunnelDoor: Door = null; // this is the door that connects the start room to the exit room\n  active: boolean;\n  onScreen: boolean;\n  lastLightingUpdate: number;\n  walls: Array<Wall>;\n  decorations: Array<Decoration>;\n  blurOffsetX: number = 5;\n  blurOffsetY: number = 5;\n  lastDraw: number = 0;\n  drawTimestamp: number = 0;\n  drawInterval: number = 4;\n  builder: RoomBuilder;\n  envType: EnvType;\n\n  // Add a list to keep track of BeamEffect instances\n  beamEffects: BeamEffect[] = [];\n\n  // Add this property to track created mask canvases\n  private maskCanvases: HTMLCanvasElement[] = [];\n\n  // Add blur cache property\n  private blurCache: BlurCache = {\n    color6px: null,\n    color12px: null,\n    shade5px: null,\n    bloom8px: null,\n    isValid: false,\n    lastLightingUpdate: 0,\n  };\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    type: RoomType,\n    depth: number,\n    mapGroup: number,\n    level: Level,\n    rand = Random.rand,\n    envType: EnvType,\n  ) {\n    this.game = game;\n    this.roomX = x; //Math.floor(- this.width / 2);\n    this.roomY = y; //Math.floor(- this.height / 2);\n    this.width = w;\n    this.height = h;\n    this.type = type;\n    this.depth = depth;\n    this.mapGroup = mapGroup;\n\n    this.entered = false;\n    this.turn = TurnState.playerTurn;\n    this.playerTurnTime = Date.now();\n\n    this.items = Array<Item>();\n    this.projectiles = Array<Projectile>();\n    this.hitwarnings = Array<HitWarning>();\n    this.particles = Array<Particle>();\n    this.doors = Array<Door>();\n    this.entities = Array<Entity>();\n    this.lightSources = Array<LightSource>();\n    this.innerWalls = Array<Wall>();\n    this.level = level;\n    this.id = 0;\n    this.currentSpawnerCount = 0;\n    this.deadEntities = Array<Entity>();\n    this.active = false;\n    this.lastLightingUpdate = 0;\n    this.walls = Array<Wall>();\n    this.decorations = Array<Decoration>();\n    // Initialize Color Offscreen Canvas\n    this.colorOffscreenCanvas = document.createElement(\"canvas\");\n    this.colorOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.colorOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const colorCtx = this.colorOffscreenCanvas.getContext(\"2d\");\n    if (!colorCtx) {\n      throw new Error(\"Failed to initialize color offscreen canvas context.\");\n    }\n    this.colorOffscreenCtx = colorCtx;\n\n    // Initialize Shade Offscreen Canvas\n    this.shadeOffscreenCanvas = document.createElement(\"canvas\");\n    this.shadeOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.shadeOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const shadeCtx = this.shadeOffscreenCanvas.getContext(\"2d\");\n    if (!shadeCtx) {\n      throw new Error(\"Failed to initialize shade offscreen canvas context.\");\n    }\n    this.shadeOffscreenCtx = shadeCtx;\n\n    // Initialize Bloom Offscreen Canvas\n    this.bloomOffscreenCanvas = document.createElement(\"canvas\");\n    this.bloomOffscreenCanvas.width =\n      (this.width + 10) * GameConstants.TILESIZE;\n    this.bloomOffscreenCanvas.height =\n      (this.height + 10) * GameConstants.TILESIZE;\n    const bloomCtx = this.bloomOffscreenCanvas.getContext(\"2d\");\n    if (!bloomCtx) {\n      throw new Error(\"Failed to initialize bloom offscreen canvas context.\");\n    }\n    this.bloomOffscreenCtx = bloomCtx;\n\n    // #region initialize arrays\n\n    //initialize room array\n\n    this.roomArray = [];\n    for (let x = this.roomX - 1; x < this.roomX + this.width + 1; x++) {\n      this.roomArray[x] = [];\n      for (let y = this.roomY - 1; y < this.roomY + this.height + 1; y++) {\n        this.roomArray[x][y] = null;\n      }\n    }\n\n    //initialize visibility & color arrays, as well as their soft variants\n    this.vis = [];\n    this.softVis = [];\n    this.col = [];\n    this.softCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.vis[x] = [];\n      this.softVis[x] = [];\n      this.col[x] = [];\n      this.softCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = 1;\n        this.softVis[x][y] = 1;\n        this.col[x][y] = [0, 0, 0];\n        this.softCol[x][y] = [0, 0, 0];\n      }\n    }\n\n    //initialize the render buffer array\n    this.renderBuffer = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.renderBuffer[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.renderBuffer[x][y] = [];\n      }\n    }\n\n    //initialize the skin for the given environment\n    this.envType = envType;\n    this.skin = envType as unknown as SkinType;\n    console.log(`room ${this.id} skin: ${this.skin}`);\n    /*\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE) {\n      this.skin = SkinType.CAVE;\n    }\n    if (this.type === RoomType.ROPEUP || this.type === RoomType.FOREST) {\n      this.skin = SkinType.FOREST;\n    }\n    */\n\n    this.builder = new RoomBuilder(this);\n\n    // #endregion\n  }\n\n  // #region TILE ADDING METHODS\n\n  removeWall = (x: number, y: number) => {\n    if (this.roomArray[x][y] instanceof Wall) {\n      this.roomArray[x][y] = null;\n    }\n    //this.innerWalls = this.innerWalls.filter((w) => w.x !== x && w.y !== y);\n    //this.outerWalls = this.outerWalls.filter((w) => w.x !== x && w.y !== y);\n  };\n\n  private addDoorTorches(x: number, y: number, doorDir: Direction) {\n    console.log(`Adding door torches at x:${x}, y:${y}, direction:${doorDir}`);\n\n    if (doorDir !== Direction.UP && doorDir !== Direction.DOWN) {\n      console.log(\"Door direction not UP/DOWN, skipping torch placement\");\n      return;\n    }\n\n    if (x && y) {\n      console.log(\"Checking wall info for torch placement\");\n      this.calculateWallInfo();\n      const leftWallInfo = this.wallInfo.get(`${x - 1},${y}`);\n      const rightWallInfo = this.wallInfo.get(`${x + 1},${y}`);\n      const leftTile = this.roomArray[x - 1]?.[y];\n      const rightTile = this.roomArray[x + 1]?.[y];\n      const leftOpen = leftWallInfo?.isLeftWall === false;\n      const rightOpen = rightWallInfo?.isRightWall === false;\n\n      console.log(`Left wall open: ${leftOpen}, Right wall open: ${rightOpen}`);\n\n      if (leftOpen) {\n        console.log(`Placing torch on left wall at x:${x - 1}, y:${y}`);\n        this.roomArray[x - 1][y] = new WallTorch(this, x - 1, y);\n      }\n\n      if (rightOpen) {\n        console.log(`Placing torch on right wall at x:${x + 1}, y:${y}`);\n        this.roomArray[x + 1][y] = new WallTorch(this, x + 1, y);\n      }\n    }\n  }\n\n  private addTorches(\n    numTorches: number,\n    rand: () => number,\n    placeX?: number,\n    placeY?: number,\n  ) {\n    if (\n      this.level.environment.type === EnvType.FOREST &&\n      this.type !== RoomType.DOWNLADDER\n    )\n      return;\n\n    if (\n      placeX !== undefined &&\n      placeY !== undefined &&\n      this.roomArray[placeX]?.[placeY] instanceof Wall\n    ) {\n      this.roomArray[placeX][placeY] = new WallTorch(this, placeX, placeY);\n\n      return;\n    }\n\n    let walls = [];\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\n        if (\n          this.roomArray[xx][yy] instanceof Wall &&\n          !(this.roomArray[xx][yy + 1] instanceof Wall)\n        ) {\n          walls.push(this.roomArray[xx][yy]);\n        }\n      }\n    }\n    let bottomWalls = [];\n    // Separate loop for bottom wall\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      const yy = this.roomY + this.height - 1; // Bottom wall\n      if (\n        this.roomArray[xx][yy] instanceof Wall &&\n        !(this.roomArray[xx][yy + 1] instanceof Wall)\n      ) {\n        bottomWalls.push(this.roomArray[xx][yy]);\n      }\n    }\n\n    // Randomly distribute torches between walls and bottom walls\n    const wallTorches = Game.rand(0, numTorches, rand);\n    const bottomWallTorches = numTorches - wallTorches;\n\n    for (let i = 0; i < wallTorches; i++) {\n      if (walls.length == 0) break;\n      const randomIndex = Game.rand(0, walls.length - 1, rand);\n      const t = walls.splice(randomIndex, 1)[0];\n      const x = t.x;\n      const y = t.y;\n      this.roomArray[x][y] = new WallTorch(this, x, y);\n    }\n    for (let i = 0; i < bottomWallTorches; i++) {\n      if (bottomWalls.length == 0) break;\n      const randomIndex = Game.rand(0, bottomWalls.length - 1, rand);\n      const t = bottomWalls.splice(randomIndex, 1)[0];\n      const x = t.x;\n      const y = t.y;\n      this.roomArray[x][y] = new WallTorch(this, x, y, true);\n    }\n  }\n\n  private addChasms(rand: () => number) {\n    // add chasms\n    let w = Game.rand(2, 4, rand);\n    let h = Game.rand(2, 4, rand);\n    let xmin = this.roomX + 2;\n    let xmax = this.roomX + this.width - w - 2;\n    let ymin = this.roomY + 2;\n    let ymax = this.roomY + this.height - h - 2;\n    if (xmax < xmin || ymax < ymin) return;\n    let x = Game.rand(xmin, xmax, rand);\n    let y = Game.rand(ymin, ymax, rand);\n\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\n        // add a floor border\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\n          if (!(this.roomArray[xx][yy] instanceof SpawnFloor))\n            this.roomArray[xx][yy] = new Floor(this, xx, yy);\n        } else\n          this.roomArray[xx][yy] = new Chasm(\n            this,\n            xx,\n            yy,\n            xx === x,\n            xx === x + w - 1,\n            yy === y,\n            yy === y + h - 1,\n          );\n      }\n    }\n  }\n\n  addDoor = (\n    x: number,\n    y: number,\n    room: Room = this,\n    tunnelDoor: boolean = false,\n  ) => {\n    let d;\n    let t = DoorType.DOOR;\n    if (room.type === RoomType.BOSS) t = DoorType.GUARDEDDOOR;\n    if (room.type === RoomType.KEYROOM) t = DoorType.LOCKEDDOOR;\n    if (tunnelDoor) t = DoorType.TUNNELDOOR;\n    if (x === room.roomX) {\n      d = new Door(room, room.game, x, y, Direction.RIGHT, t);\n      room.roomArray[x + 1][y] = new SpawnFloor(room, x + 1, y);\n    } else if (x === room.roomX + room.width - 1) {\n      d = new Door(room, room.game, x, y, Direction.LEFT, t);\n      room.roomArray[x - 1][y] = new SpawnFloor(room, x - 1, y);\n    } else if (y === room.roomY) {\n      d = new Door(room, room.game, x, y, Direction.UP, t);\n      room.roomArray[x][y + 1] = new SpawnFloor(room, x, y + 1);\n    } else if (y === room.roomY + room.height - 1) {\n      d = new Door(room, room.game, x, y, Direction.DOWN, t);\n      room.roomArray[x][y - 1] = new SpawnFloor(room, x, y - 1);\n    }\n\n    if (tunnelDoor) {\n      room.tunnelDoor = d;\n    }\n\n    room.doors.push(d);\n    if (room.roomArray[d.x] == undefined) {\n      //console.log(\"door not added\");\n    }\n    room.roomArray[d.x][d.y] = d;\n\n    return d;\n  };\n\n  // ... start of file ...\n\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\n    if (this.level.environment.type === EnvType.FOREST) return;\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.roomArray[x][y] = new SpikeTrap(this, x, y);\n    }\n  }\n\n  // #endregion\n\n  // #region ADDING ENTITIES\n\n  // Function to add enemies to the room\n  private addEnemies(numEnemies: number, rand: () => number) {\n    if (GameplaySettings.NO_ENEMIES === true) return;\n    // Get all empty tiles in the room\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) return;\n    //don't put enemies near the entrances so you don't get screwed instantly\n\n    // Create a Set to store coordinates that should be excluded\n    const excludedCoords = new Set<string>();\n\n    // For each door, add coordinates in a 5x5 area around it to excluded set\n    for (const door of this.doors) {\n      for (let dx = -2; dx <= 2; dx++) {\n        for (let dy = -2; dy <= 2; dy++) {\n          excludedCoords.add(`${door.x + dx},${door.y + dy}`);\n        }\n      }\n    }\n\n    // Filter tiles that aren't in the excluded set\n    tiles = tiles.filter((tile) => !excludedCoords.has(`${tile.x},${tile.y}`));\n    // Loop through the number of enemies to be added\n    for (let i = 0; i < numEnemies; i++) {\n      let rerolls = 1;\n\n      if (tiles.length === 0) {\n        console.log(`No tiles left to spawn enemies`);\n        break;\n      }\n      let emptyTiles = this.getRandomEmptyPosition(tiles);\n      if (emptyTiles.x === null || emptyTiles.y === null) {\n        i = numEnemies;\n        break;\n      }\n      const { x, y } = emptyTiles;\n\n      // Define the enemy tables for each depth level\n      let tables = this.level.enemyParameters.enemyTables;\n      // Define the maximum depth level\n      let max_depth_table = this.level.enemyParameters.maxDepthTable;\n      // Get the current depth level, capped at the maximum\n      let d = Math.min(this.depth, max_depth_table);\n      // If there is a table for the current depth level\n      if (tables[d] && tables[d].length > 0) {\n        // Function to add an enemy to the room\n        let addEnemy = (enemy: Entity): boolean => {\n          // Check if the enemy overlaps with any other enemies\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              if (!tiles.some((tt) => tt.x === x + xx && tt.y === y + yy)) {\n                // If it does, increment the enemy count and return false\n                numEnemies++;\n                return false;\n              }\n            }\n          }\n          // If it doesn't, add the enemy to the room, remove the tiles used from the available pool, and return true\n          this.entities.push(enemy);\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              tiles = tiles.filter((t) => !(t.x === x + xx && t.y === y + yy));\n            }\n          }\n          return true;\n        };\n\n        // Randomly select an enemy type from the table\n        let type = Game.randTable(tables[d], Math.random);\n\n        switch (type) {\n          case 1:\n            CrabEnemy.add(this, this.game, x, y);\n            break;\n          case 2:\n            FrogEnemy.add(this, this.game, x, y);\n            break;\n          case 3:\n            ZombieEnemy.add(this, this.game, x, y);\n            break;\n          case 4:\n            SkullEnemy.add(this, this.game, x, y);\n            break;\n          case 5:\n            EnergyWizardEnemy.add(this, this.game, x, y);\n            break;\n          case 6:\n            ChargeEnemy.add(this, this.game, x, y);\n            break;\n          case 7:\n            RookEnemy.add(this, this.game, x, y);\n            break;\n          case 8:\n            BishopEnemy.add(this, this.game, x, y);\n            break;\n          case 9:\n            ArmoredzombieEnemy.add(this, this.game, x, y);\n            break;\n          case 10:\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 11:\n            QueenEnemy.add(this, this.game, x, y);\n            break;\n          case 12:\n            KnightEnemy.add(this, this.game, x, y);\n            break;\n          case 13:\n            if (addEnemy(new BigKnightEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 14:\n            ArmoredSkullEnemy.add(this, this.game, x, y);\n            break;\n          case 15:\n            FireWizardEnemy.add(this, this.game, x, y);\n            break;\n        }\n      }\n    }\n    let spawnerAmounts = [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,\n      2, 2, 3, 3, 4, 5, 3,\n    ];\n    if (this.depth > 0) {\n      let spawnerAmount = Game.randTable(spawnerAmounts, rand);\n      //console.log(`Adding ${spawnerAmount} spawners`);\n      this.addSpawners(spawnerAmount, rand);\n    }\n    let occultistAmounts = [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n    ];\n    if (this.depth > 1) {\n      let occultistAmount = Game.randTable(occultistAmounts, rand);\n      //console.log(`Adding ${occultistAmount} occultists`);\n      this.addOccultists(occultistAmount, rand);\n    }\n  }\n\n  private addRandomEnemies() {\n    let numEmptyTiles = this.getEmptyTiles().length;\n    /*\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Math.min(this.depth * 0.1 + 0.5, 0.15), //this.depth * 0.01 is starting value\n    );\n    */\n    const factor = Math.min((this.depth + 2) * 0.05, 0.3);\n    const numEnemies = Math.ceil(\n      Math.max(\n        Utils.randomNormalInt(0, numEmptyTiles * factor),\n        numEmptyTiles * factor,\n      ),\n    );\n    console.log(`numEnemies: ${numEnemies}`);\n    console.log(`factor: ${factor}`);\n    //if (numEnemies > numEmptyTiles / 2) numEnemies = numEmptyTiles / 2;\n    this.addEnemies(numEnemies, Math.random);\n  }\n\n  private addSpawners(numSpawners: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      //console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n    for (let i = 0; i < numSpawners; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      let spawnTable = this.level\n        .getEnemyParameters()\n        //spawners should use enemy pools from the previous depth\n        .enemyTables[Math.max(0, this.depth - 1)].filter((t) => t !== 7);\n      const spawner = Spawner.add(this, this.game, x, y, spawnTable);\n      return spawner;\n    }\n  }\n  private addOccultists(numOccultists: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      //console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n    for (let i = 0; i < numOccultists; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      const occultist = OccultistEnemy.add(this, this.game, x, y);\n      return occultist;\n    }\n  }\n\n  private addBosses(depth: number) {\n    if (GameplaySettings.NO_ENEMIES === true) return;\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      //console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n\n    let bosses = [\"reaper\", \"queen\", \"bigskullenemy\", \"bigzombieenemy\"];\n    if (depth > 0) {\n      bosses.push(\"occultist\");\n      bosses.filter((b) => b !== \"queen\");\n    }\n    const boss = Game.randTable(bosses, Math.random);\n\n    const { x, y } = boss.startsWith(\"big\")\n      ? this.getBigRandomEmptyPosition(tiles)\n      : this.getRandomEmptyPosition(tiles);\n\n    switch (boss) {\n      case \"reaper\":\n        const spawner = this.addSpawners(1, Math.random);\n        spawner.dropTable = [\"weapon\", \"equipment\"];\n        spawner.dropChance = 1;\n        break;\n      case \"queen\":\n        const queen = QueenEnemy.add(this, this.game, x, y);\n        queen.dropTable = [\"weapon\", \"equipment\"];\n        queen.dropChance = 1;\n        break;\n      case \"bigskullenemy\":\n        const bigSkull = BigSkullEnemy.add(this, this.game, x, y);\n        bigSkull.dropTable = [\n          \"weapon\",\n          \"equipment\",\n          \"consumable\",\n          \"gem\",\n          \"tool\",\n        ];\n\n        break;\n      case \"occultist\":\n        const occultist = this.addOccultists(1, Math.random);\n        occultist.dropTable = [\"weapon\", \"equipment\"];\n        occultist.dropChance = 1;\n\n        break;\n      case \"bigzombieenemy\":\n        const bigZombie = BigZombieEnemy.add(this, this.game, x, y);\n        bigZombie.dropTable = [\n          \"weapon\",\n          \"equipment\",\n          \"consumable\",\n          \"gem\",\n          \"tool\",\n        ];\n        bigZombie.dropChance = 1;\n        break;\n    }\n  }\n  //used for spawn commands, implement elsewhere later\n  /**\n   * Adds a new enemy to the room based on the provided enemy type string.\n   *\n   * @param enemyType - The string identifier for the enemy type.\n   */\n  addNewEnemy = (enemyType: EnemyType): void => {\n    const EnemyClass = EnemyTypeMap[enemyType];\n    if (!EnemyClass) {\n      console.error(`Enemy type \"${enemyType}\" is not recognized.`);\n      return;\n    }\n\n    const tiles = this.getEmptyTiles();\n    if (!tiles || tiles.length === 0) {\n      // console.log(`No tiles left to spawn enemies.`);\n      return;\n    }\n\n    let position = this.getRandomEmptyPosition(tiles);\n    if (!position) {\n      return;\n    }\n    let { x, y } = position;\n\n    if (enemyType === EnemyType.bigzombie) {\n      position = this.getBigRandomEmptyPosition(tiles);\n      if (!position) {\n        return;\n      }\n      ({ x, y } = position);\n    }\n\n    EnemyClass.add(this, this.game, x, y);\n  };\n\n  addNewSpawner = (enemyType: EnemyType): void => {\n    const EnemyClass = EnemyTypeMap[enemyType];\n    if (!EnemyClass) {\n      //console.error(`Enemy type \"${enemyType}\" is not recognized.`);\n      return;\n    }\n\n    const tiles = this.getEmptyTiles();\n    if (!tiles || tiles.length === 0) {\n      // console.log(`No tiles left to spawn enemies.`);\n      return;\n    }\n\n    const { x, y } = this.getRandomEmptyPosition(tiles);\n    Spawner.add(this, this.game, x, y);\n  };\n\n  private addChests(numChests: number, rand: () => number) {\n    // add chests\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numChests; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.entities.push(new Chest(this, this.game, x, y));\n    }\n  }\n\n  addBombs(numBombs: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < this.getEmptyTiles().length; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      Bomb.add(this, this.game, x, y);\n    }\n  }\n\n  private addResources(numResources: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numResources; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n\n      let r = rand();\n      if (r <= (10 - this.depth ** 3) / 10)\n        CoalResource.add(this, this.game, x, y);\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\n        GoldResource.add(this, this.game, x, y);\n      else EmeraldResource.add(this, this.game, x, y);\n    }\n  }\n\n  private addVendingMachine(\n    rand: () => number,\n    placeX?: number,\n    placeY?: number,\n  ) {\n    const pos = this.getRandomEmptyPosition(this.getEmptyTiles());\n\n    let x = placeX ? placeX : pos.x;\n    let y = placeY ? placeY : pos.y;\n\n    let table =\n      this.depth > 0\n        ? [\n            1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 3, 4, 5, 5, 5,\n            5, 5,\n          ]\n        : [1, 1, 1];\n    let type = Game.randTable(table, rand);\n    switch (type) {\n      case 1:\n        VendingMachine.add(this, this.game, x, y, new Heart(this, x, y));\n        break;\n      case 2:\n        VendingMachine.add(this, this.game, x, y, new Candle(this, x, y));\n        break;\n      case 3:\n        VendingMachine.add(this, this.game, x, y, new Armor(this, x, y));\n        break;\n      case 4:\n        VendingMachine.add(this, this.game, x, y, new Spear(this, x, y));\n        break;\n      case 5:\n        VendingMachine.add(this, this.game, x, y, new Torch(this, x, y));\n        break;\n    }\n  }\n\n  // #endregion\n\n  // #region POPULATING METHODS\n\n  linkExitToStart = () => {\n    //if (this.type === RoomType.ROPEHOLE) return;\n    if (\n      this.addDoorWithOffset(\n        this.level.startRoom.roomX +\n          Math.floor(this.level.startRoom.width / 2) +\n          1,\n        this.level.startRoom.roomY,\n        this.level.startRoom,\n        true,\n      ) &&\n      this.addDoorWithOffset(\n        this.roomX + Math.floor(this.width / 2) - 1,\n        this.roomY,\n        this,\n        true,\n      )\n    ) {\n      this.tunnelDoor.linkedDoor = this.level.startRoom.tunnelDoor;\n      this.tunnelDoor.linkedDoor.linkedDoor = this.tunnelDoor;\n    }\n  };\n\n  populateEmpty = (rand: () => number) => {\n    this.addTorchesByArea();\n  };\n\n  populateDungeon = (rand: () => number) => {\n    //this.addChests(10, rand);\n    let factor = Game.rand(1, 36, rand);\n\n    if (factor < 30) this.builder.addWallBlocks(rand);\n    if (factor % 4 === 0) this.addChasms(rand);\n    this.addTorchesByArea();\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 3], rand), rand);\n\n    if (factor <= 6) this.addVendingMachine(rand);\n    this.addRandomEnemies();\n\n    this.removeDoorObstructions();\n  };\n\n  populateBoss = (rand: () => number) => {\n    const bossDoor = this.getBossDoor();\n    this.addDoorTorches(bossDoor.x, bossDoor.y, bossDoor.doorDir);\n    this.addTorchesByArea();\n    this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    this.addBosses(this.depth);\n    this.addRandomEnemies();\n  };\n\n  populateBigDungeon = (rand: () => number) => {\n    if (Game.rand(1, 4, rand) === 1) this.addChasms(rand);\n    this.addTorchesByArea();\n\n    if (Game.rand(1, 3, rand) === 1)\n      this.addSpikeTraps(Game.randTable([3, 5, 7, 8], rand), rand);\n    this.addRandomEnemies();\n\n    this.removeDoorObstructions();\n  };\n\n  populateSpawner = (rand: () => number) => {\n    this.addTorchesByArea();\n\n    Spawner.add(\n      this,\n      this.game,\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.removeDoorObstructions();\n  };\n\n  populateKeyRoom = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.items.push(\n      new GoldenKey(\n        this,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2),\n      ),\n    );\n  };\n\n  populateFountain = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    let centerX = Math.floor(this.roomX + this.width / 2);\n    let centerY = Math.floor(this.roomY + this.height / 2);\n    for (let x = centerX - 1; x <= centerX + 1; x++) {\n      for (let y = centerY - 1; y <= centerY + 1; y++) {\n        this.roomArray[x][y] = new FountainTile(\n          this,\n          x,\n          y,\n          x - (centerX - 1),\n          y - (centerY - 1),\n        );\n      }\n    }\n  };\n\n  populatePuzzle = (rand: () => number) => {\n    let d;\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      let y = this.roomY + Math.floor(this.height / 2);\n      if (x === this.roomX + Math.floor(this.width / 2)) {\n        d = new InsideLevelDoor(this, this.game, x, y + 1);\n        this.roomArray[x][y + 1] = d;\n      } else {\n        this.roomArray[x][y] = new Wall(this, x, y);\n      }\n    }\n\n    let x = Game.rand(this.roomX, this.roomX + this.width - 1, rand);\n    let y = Game.rand(\n      this.roomY + Math.floor(this.height / 2) + 3,\n      this.roomY + this.height - 2,\n      rand,\n    );\n\n    this.roomArray[x][y] = new Button(this, x, y, d);\n\n    let crateTiles = this.getEmptyTiles().filter(\n      (t) =>\n        t.x >= this.roomX + 1 &&\n        t.x <= this.roomX + this.width - 2 &&\n        t.y >= this.roomY + Math.floor(this.height / 2) + 3 &&\n        t.y <= this.roomY + this.height - 2,\n    );\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\n\n    for (let i = 0; i < numCrates; i++) {\n      let t = crateTiles.splice(\n        Game.rand(0, crateTiles.length - 1, rand),\n        1,\n      )[0];\n      if (t) this.entities.push(new Crate(this, this.game, t.x, t.y));\n    }\n\n    this.removeDoorObstructions();\n  };\n\n  populateSpikeCorridor = (rand: () => number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        this.roomArray[x][y] = new SpikeTrap(this, x, y, Game.rand(0, 3, rand));\n      }\n    }\n    this.removeDoorObstructions();\n    this.addRandomTorches(\"medium\");\n  };\n\n  populateCave = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    this.builder.addWallBlocks(rand);\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand),\n    );\n    this.addEnemies(numEnemies, rand);\n    if (this.level.environment.type === EnvType.CAVE)\n      this.addResources(\n        (numEmptyTiles - numEnemies) * Game.randTable([0.1, 0.2, 0.3], rand),\n        rand,\n      );\n    this.removeDoorObstructions();\n  };\n\n  populateUpLadder = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x - 1][y - 1] = new UpLadder(this, this.game, x - 1, y - 1);\n  };\n\n  populateDownLadder = (rand: () => number) => {\n    this.addTorches(1, rand, this.roomX + 3, this.roomY);\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x + 1][y - 1] = new DownLadder(\n      this,\n      this.game,\n      x + 1,\n      y - 1,\n    );\n\n    const numChests = Math.ceil(Math.random() * 5);\n\n    let tiles = this.getEmptyTiles();\n    tiles = tiles.filter((tile) => tile.x !== x || tile.y !== y);\n    let weaponDropped = false;\n    let toolDropped = false;\n    let lightDropped = false;\n    for (let i = 0; i < numChests; i++) {\n      if (tiles.length > 0) {\n        const { x, y } = this.getRandomEmptyPosition(tiles);\n\n        let chest = new Chest(this, this.game, x, y);\n        /*\n        if (!weaponDropped) {\n          chest.getDrop([\"weapon\"], true);\n          weaponDropped = true;\n        } else \n         */\n\n        chest.getDrop(\n          [\n            \"consumable\",\n            \"gem\",\n            \"light\",\n            \"tool\",\n            \"fuel\",\n            \"backpack\",\n            \"weapon\",\n            \"coin\",\n          ],\n          false,\n        );\n\n        tiles.filter((tile) => tile.x !== x && tile.y !== y);\n        this.entities.push(chest);\n      }\n    }\n    if (this.depth === 0) this.populateWeaponGroup(tiles);\n  };\n\n  populateWeaponGroup = (tiles: Tile[]) => {\n    const emptyTile = this.getRandomEmptyPosition(tiles);\n    const emptyTile2 = this.getRandomEmptyPosition(tiles, emptyTile);\n    const emptyTile3 = this.getRandomEmptyPosition(tiles, emptyTile2);\n\n    const weapons = new ItemGroup([\n      new Spear(this, emptyTile.x, emptyTile.y),\n      new Warhammer(this, emptyTile2.x, emptyTile2.y),\n      new Sword(this, emptyTile3.x, emptyTile3.y),\n    ]);\n    for (const item of weapons.items) {\n      item.grouped = true;\n      item.group = weapons;\n      this.items.push(item);\n    }\n  };\n\n  populateRopeHole = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    //console.log(\"About to create DownLadder in rope hole\");\n    let d = new DownLadder(this, this.game, x, y, true);\n    //console.log(\"DownLadder created, about to add to room array\");\n\n    // Delay adding to room array to avoid triggering side path generation during level setup\n    setTimeout(() => {\n      this.roomArray[x][y] = d;\n      //console.log(\"DownLadder added to room array successfully (delayed)\");\n    }, 0);\n  };\n\n  populateRopeCave = (rand: () => number) => {\n    const { x, y } = this.getRoomCenter();\n    let upLadder = new UpLadder(this, this.game, x, y);\n    upLadder.isRope = true;\n    this.roomArray[x][y] = upLadder;\n\n    this.removeDoorObstructions();\n  };\n\n  populateShop = (rand: () => number) => {\n    this.addTorches(2, rand);\n\n    const { x, y } = this.getRoomCenter();\n    VendingMachine.add(this, this.game, x - 2, y - 1, new Shotgun(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y - 1, new Heart(this, 0, 0));\n    VendingMachine.add(this, this.game, x - 2, y + 2, new Armor(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y + 2, new Spear(this, 0, 0));\n\n    this.removeDoorObstructions();\n  };\n\n  // Many populate methods start with adding torches using the same pattern\n  private addRandomTorches(\n    intensity: \"none\" | \"low\" | \"medium\" | \"high\" = \"medium\",\n  ): void {\n    const torchPatterns = {\n      none: [0, 0, 0],\n      low: [0, 0, 0, 1, 1],\n      medium: [0, 0, 0, 1, 1, 2, 2, 3],\n      high: [1, 1, 2, 2, 3, 3, 4],\n    };\n    const randTorches = Game.randTable(torchPatterns[intensity], Random.rand);\n    this.addTorches(randTorches, Random.rand);\n  }\n\n  private addTorchesByArea = () => {\n    let numTorches = Math.max(\n      1,\n      Math.floor(Math.sqrt(this.roomArea) / 3) -\n        Math.floor(Math.sqrt(this.depth)),\n    );\n    if (this.depth === 0) {\n      if (Math.random() < 0.25) {\n        numTorches = 0;\n      }\n    } else {\n      // Exponential falloff starting at depth 1, approaching 90% chance\n      const falloffRate = 0.4; // Controls how quickly it approaches 90%\n      const maxChance = 0.9;\n      const chance =\n        maxChance * (1 - Math.exp(-falloffRate * (this.depth - 1)));\n      if (Math.random() < chance) {\n        numTorches = 0;\n      }\n    }\n    this.addTorches(numTorches, Random.rand);\n  };\n\n  populate = (rand: () => number) => {\n    this.name = \"\";\n    switch (this.type) {\n      case RoomType.START:\n        if (this.depth !== 0) {\n          this.populateUpLadder(rand);\n          this.placeVendingMachineInWall();\n        }\n\n        this.populateEmpty(rand);\n        this.name = \"FLOOR \" + -this.depth;\n\n        break;\n      case RoomType.BOSS:\n        this.populateBoss(rand);\n        this.name = \"BOSS\";\n        break;\n      case RoomType.DUNGEON:\n        if (\n          this.level.environment.type === EnvType.CAVE &&\n          Math.random() <= 0.2\n        ) {\n          this.populateCave(rand);\n        } else {\n          this.populateDungeon(rand);\n        }\n        break;\n      case RoomType.BIGDUNGEON:\n        this.populateBigDungeon(rand);\n        break;\n      case RoomType.FOUNTAIN:\n        this.populateFountain(rand);\n        break;\n      case RoomType.PUZZLE:\n        this.populatePuzzle(rand);\n        break;\n      case RoomType.SPIKECORRIDOR:\n        this.populateSpikeCorridor(rand);\n        break;\n      case RoomType.TREASURE:\n        break;\n      case RoomType.KEYROOM:\n        this.populateKeyRoom(rand);\n        break;\n      case RoomType.GRASS:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGCAVE:\n        this.populateCave(rand);\n      case RoomType.CAVE:\n        this.populateCave(rand);\n        break;\n      case RoomType.UPLADDER:\n        this.populateUpLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n\n        break;\n      case RoomType.DOWNLADDER:\n        this.populateDownLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.ROPEHOLE:\n        this.populateRopeHole(rand);\n        break;\n      case RoomType.ROPECAVE:\n        this.populateRopeCave(rand);\n        break;\n      case RoomType.SHOP:\n        this.populateShop(rand);\n        break;\n      case RoomType.SPAWNER:\n        this.populateSpawner(rand);\n        break;\n    }\n    this.message = this.name;\n  };\n\n  // #endregion\n\n  // #region ENTERING / EXITING ROOM METHODS\n\n  exitLevel = () => {\n    //this.game.onResize(); // stupid hack to keep fps high\n\n    Game.shade_canvases = {};\n    Game.text_rendering_canvases = {};\n\n    for (let door of this.doors) {\n      if (\n        door.linkedDoor.lightSource !== null &&\n        !door.linkedDoor.room.active &&\n        door.linkedDoor.room.entered\n      ) {\n        door.linkedDoor.lightSource.b = 0;\n        door.linkedDoor.lightSource.r = 0;\n\n        door.room.updateLighting();\n      }\n    }\n    this.active = false;\n    this.updateLighting();\n\n    this.particles.splice(0, this.particles.length);\n    this.disableFuseSounds();\n  };\n\n  disableFuseSounds = () => {\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\n      //if (!bomb.soundPaused) {\n      //bomb.soundPaused = true;\n      const bomb = b as Bomb;\n      Sound.stopSound(bomb.fuseSound);\n      //}\n    }\n  };\n\n  enableFuseSounds = () => {\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\n      //if (!bomb.soundPaused) {\n      //bomb.soundPaused = true;\n\n      const bomb = b as Bomb;\n      if (bomb.lit) {\n        Sound.playWithReverb(bomb.fuseSound);\n      }\n    }\n  };\n\n  onEnterRoom = (player: Player) => {\n    console.log(\"roomType\", this.type.toString());\n    this.enableFuseSounds();\n    for (let room of this.level.rooms) {\n      room.roomOnScreen(player);\n    }\n\n    this.entered = true;\n\n    this.clearDeadStuff();\n    this.calculateWallInfo();\n    this.resetDoorLightSources();\n\n    this.particles = [];\n\n    this.alertEnemiesOnEntry();\n    this.message = this.name;\n    player.map.saveMapData();\n    this.setReverb();\n    this.active = true;\n    this.invalidateBlurCache(); // Invalidate cache when room becomes active\n\n    this.updateLighting();\n  };\n\n  enterLevel = (player: Player) => {\n    this.game.updateLevel(this);\n    player.moveSnap(this.getRoomCenter().x, this.getRoomCenter().y);\n    this.onEnterRoom(player);\n  };\n\n  enterLevelThroughDoor = (player: Player, door: Door, side?: number) => {\n    // console.log(door.linkedDoor.x, door.linkedDoor.y, door.x, door.y);\n    if (door.doorDir === door.linkedDoor.doorDir) {\n      door.opened = true;\n      player.moveSnap(door.x, door.y + 1);\n      setTimeout(() => {\n        player.direction = Direction.DOWN;\n      }, 150);\n    }\n    if (door instanceof Door && door.doorDir === Direction.UP) {\n      //if top door\n      door.opened = true;\n      player.moveNoSmooth(door.x, door.y + 1);\n    } else if (door instanceof Door && door.doorDir === Direction.DOWN) {\n      //if bottom door\n      player.moveNoSmooth(door.x, door.y - 1);\n    } else if (\n      door instanceof Door &&\n      [Direction.RIGHT, Direction.LEFT].includes(door.doorDir)\n    ) {\n      // if side door\n      player.moveNoSmooth(door.x + side, door.y);\n    }\n    this.onEnterRoom(player);\n  };\n\n  alertEnemiesOnEntry = () => {\n    for (const e of this.entities) {\n      if (e instanceof Enemy) e.lookForPlayer(false);\n    }\n  };\n\n  // #endregion\n\n  // #region LOGIC METHODS\n\n  tick = (player: Player) => {\n    this.updateLighting();\n    player.updateSlowMotion();\n\n    this.lastEnemyCount = this.entities.filter(\n      (e) => e instanceof Enemy,\n    ).length;\n    for (const h of this.hitwarnings) {\n      h.tick();\n    }\n    for (const p of this.projectiles) {\n      p.tick();\n    }\n\n    this.clearDeadStuff();\n    this.calculateWallInfo();\n\n    this.entities = this.entities.filter((e) => !e.dead);\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tick();\n      }\n    }\n\n    this.turn = TurnState.computerTurn;\n\n    this.playerTurnTime = Date.now();\n    this.playerTicked = player;\n\n    this.updateLighting();\n    player.map.saveMapData();\n    this.clearDeadStuff();\n  };\n\n  computerTurn = () => {\n    // take computer turn\n    for (const e of this.entities) {\n      e.tick();\n    }\n    this.entities = this.entities.filter((e) => !e.dead);\n    for (const i of this.items) {\n      i.tick();\n    }\n\n    for (const h of this.hitwarnings) {\n      if (\n        !this.roomArray[h.x] ||\n        !this.roomArray[h.x][h.y] ||\n        this.roomArray[h.x][h.y].isSolid()\n      ) {\n        h.dead = true;\n      }\n      h.removeOverlapping();\n    }\n\n    for (const p of this.projectiles) {\n      if (\n        this.roomArray[p.x] &&\n        this.roomArray[p.x][p.y] &&\n        this.roomArray[p.x][p.y].isSolid()\n      )\n        p.dead = true;\n      for (const i in this.game.players) {\n        if (\n          this.level.rooms[this.game.players[i].levelID] === this &&\n          p.x === this.game.players[i].x &&\n          p.y === this.game.players[i].y\n        ) {\n          p.hitPlayer(this.game.players[i]);\n        }\n      }\n      for (const e of this.entities) {\n        if (p.x === e.x && p.y === e.y) {\n          p.hitEnemy(e);\n        }\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tickEnd();\n      }\n    }\n    this.entities = this.entities.filter((e) => !e.dead); // enemies may be killed by spiketrap\n\n    this.clearDeadStuff();\n\n    this.playerTicked.finishTick();\n\n    this.checkForNoEnemies();\n    //console.log(this.entities.filter((e) => e instanceof Enemy).length);\n\n    this.turn = TurnState.playerTurn;\n  };\n\n  update = () => {\n    if (this.turn == TurnState.computerTurn) {\n      if (\n        Date.now() - this.playerTurnTime >=\n        LevelConstants.COMPUTER_TURN_DELAY\n      ) {\n        this.computerTurn();\n      }\n    }\n  };\n\n  clearDeadStuff = () => {\n    this.deadEntities = this.deadEntities.filter((e) => !e.dead);\n    this.entities = this.entities.filter((e) => !e.dead);\n    this.projectiles = this.projectiles.filter((p) => !p.dead);\n    this.lightSources = this.lightSources.filter((ls) => !ls.dead);\n    this.hitwarnings = this.hitwarnings.filter((h) => !h.dead);\n    this.particles = this.particles.filter((p) => !p.dead);\n  };\n\n  catchUp = () => {\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\n  };\n\n  tickHitWarnings = () => {\n    for (const h of this.hitwarnings) {\n      if (h.parent && (h.parent.dead || h.parent.unconscious)) {\n        h.tick();\n      }\n    }\n  };\n\n  // #endregion\n\n  // #region LIGHTING METHODS\n\n  fadeLighting = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        let visDiff = this.softVis[x][y] - this.vis[x][y];\n        let softVis = this.softVis[x][y];\n        let flag = false;\n        if (Math.abs(visDiff) > 0.01) flag = true;\n\n        if (!flag) continue;\n\n        visDiff *= 0.05 * delta;\n\n        softVis -= visDiff;\n\n        if (softVis < 0) softVis = 0;\n        if (softVis > 1) softVis = 1;\n\n        this.softVis[x][y] = softVis;\n\n        // if (this.softVis[x][y] < 0.01) this.softVis[x][y] = 0;\n      }\n    }\n  };\n\n  fadeRgb = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const [softR, softG, softB] = this.softCol[x][y];\n        const [targetR, targetG, targetB] = this.col[x][y];\n\n        // Calculate differences\n        let diffR = softR - targetR;\n        let diffG = softG - targetG;\n        let diffB = softB - targetB;\n\n        let flagR = false;\n        let flagG = false;\n        let flagB = false;\n        if (Math.abs(diffR) > 0.001) flagR = true;\n        if (Math.abs(diffG) > 0.001) flagG = true;\n        if (Math.abs(diffB) > 0.001) flagB = true;\n\n        if (!flagR && !flagG && !flagB) {\n          continue;\n        }\n\n        // Apply smoothing similar to fadeLighting\n        if (flagR) {\n          diffR *= 0.05 * delta;\n          this.softCol[x][y][0] = this.clamp(Math.round(softR - diffR), 0, 255);\n        }\n        if (flagG) {\n          diffG *= 0.05 * delta;\n          this.softCol[x][y][1] = this.clamp(Math.round(softG - diffG), 0, 255);\n        }\n        if (flagB) {\n          diffB *= 0.05 * delta;\n          this.softCol[x][y][2] = this.clamp(Math.round(softB - diffB), 0, 255);\n        }\n      }\n    }\n  };\n\n  resetDoorLightSources = () => {\n    this.doors.forEach((d) => {\n      d.lightSource.r = 0;\n      d.linkedDoor.lightSource.r = 0;\n    });\n  };\n\n  tileValuesToLightSource = (x: number, y: number, room: Room) => {\n    if (!room.roomArray[x]) return null;\n    if (!room.roomArray[x][y]) return null;\n    const color = room.col[x][y];\n    const brightness = (1 - room.vis[x][y]) / 4;\n    const radius = 9;\n    return { color, brightness, radius };\n  };\n\n  updateDoorLightSources = () => {\n    //works from inactive rooms onto their connected rooms\n    if (!this.active) return;\n\n    const directionOffsets = {\n      [Direction.UP]: { x: 0, y: -1 },\n      [Direction.DOWN]: { x: 0, y: 1 },\n      [Direction.LEFT]: { x: -1, y: 0 },\n      [Direction.RIGHT]: { x: 1, y: 0 },\n    };\n    let linkedDoors: Door[] = [];\n    this.doors.forEach((d) => {\n      if (d.linkedDoor && d.room.entered) linkedDoors.push(d.linkedDoor);\n    });\n\n    this.doors.forEach((d) => {\n      d.lightSource.b = 0.1;\n    });\n\n    for (const d of linkedDoors) {\n      d.lightSource.c = this.tileValuesToLightSource(\n        d.linkedDoor.x,\n        d.linkedDoor.y,\n        this,\n      ).color;\n      d.lightSource.b = this.tileValuesToLightSource(\n        d.linkedDoor.x,\n        d.linkedDoor.y,\n        this,\n      ).brightness;\n      d.lightSource.r = LevelConstants.LIGHTING_MAX_DISTANCE;\n    }\n\n    let connectedRooms: Set<Room> = new Set(\n      this.doors\n        .filter((d) => d && d.linkedDoor) // Ensure door and linkedDoor exist\n        .map((d) => d.linkedDoor.room)\n        .filter((r) => r), // Ensure room exists\n    );\n\n    for (const r of Array.from(connectedRooms)) {\n      if (r.entered) r.updateLighting();\n    }\n  };\n\n  updateLighting = () => {\n    if (!this.onScreen) return;\n\n    // Invalidate cache when lighting is updated\n    this.invalidateBlurCache();\n\n    // Start timing the initial setup\n    //console.time(\"updateLighting: Initial Setup\");\n    this.updateDoorLightSources();\n\n    let oldVis = [];\n    let oldCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      oldVis[x] = [];\n      oldCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        oldVis[x][y] = this.vis[x][y];\n        oldCol[x][y] = this.col[x][y];\n\n        this.vis[x][y] = 1;\n        this.col[x][y] = [1, 1, 1];\n        this.renderBuffer[x][y] = [];\n      }\n    }\n    // End timing the initial setup\n    //console.timeEnd(\"updateLighting: Initial Setup\");\n\n    // Start timing the processing of light sources\n    //console.time(\"updateLighting: Process LightSources\");\n\n    for (const l of this.lightSources) {\n      if (l.shouldUpdate()) {\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          this.castTintAtAngle(i, l.x, l.y, l.r, l.c, l.b); // RGB color in sRGB\n        }\n      }\n    }\n\n    let lightingAngleStep = LevelConstants.LIGHTING_ANGLE_STEP;\n\n    for (const p in this.game.players) {\n      let player = this.game.players[p];\n      if (this === this.level.rooms[player.levelID]) {\n        //console.log(`i: ${player.angle}`);\n        for (let i = 0; i < 360; i += lightingAngleStep) {\n          let lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\n          let lightBrightness = 5;\n          if (player.lightEquipped) {\n            lightColor = player.lightColor;\n            lightBrightness = player.lightBrightness;\n          }\n          let offsetX = 0;\n          let offsetY = 0;\n          switch (player.direction) {\n            case Direction.UP:\n              offsetY = -0;\n              break;\n            case Direction.DOWN:\n              offsetY = 0;\n              break;\n            case Direction.LEFT:\n              offsetX = -0;\n              break;\n            case Direction.RIGHT:\n              offsetX = 0;\n          }\n          this.castTintAtAngle(\n            i,\n            player.x + 0.5 + offsetX,\n            player.y + 0.5 + offsetY,\n            /*\n            Math.min(\n              Math.max(\n                player.sightRadius - this.depth + 2,\n                Player.minSightRadius,\n              ),\n              10,\n            ),\n            */\n            LevelConstants.LIGHTING_MAX_DISTANCE,\n            lightColor, // RGB color in sRGB\n            lightBrightness, // intensity\n          );\n        }\n      }\n    }\n    // End timing the processing of player lighting\n    //console.timeEnd(\"updateLighting: Process Players\");\n\n    // Start timing the blending of colors\n    //console.time(\"updateLighting: Blend Colors Array\");\n    const roomX = this.roomX;\n    const roomY = this.roomY;\n    const width = this.width;\n    const height = this.height;\n    const renderBuffer = this.renderBuffer;\n\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.col[x][y] = this.blendColorsArray(renderBuffer[x][y]);\n      }\n    }\n    // End timing the blending of colors\n    //console.timeEnd(\"updateLighting: Blend Colors Array\");\n\n    // Start timing the conversion to luminance\n    //console.time(\"updateLighting: Convert to Luminance\");\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n    // End timing the conversion to luminance\n    //console.timeEnd(\"updateLighting: Convert to Luminance\");\n    this.updateDoorLightSources();\n  };\n\n  updateLightSources = (lightSource?: LightSource, remove?: boolean) => {\n    this.oldCol = [];\n    this.oldVis = [];\n    this.oldCol = this.col;\n    this.oldVis = this.vis;\n    if (lightSource) {\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n        if (!remove) {\n          this.castTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          ); // RGB color in sRGB\n        } else {\n          this.unCastTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          );\n        }\n      }\n    }\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.col[x][y] = this.blendColorsArray(this.renderBuffer[x][y]);\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n  };\n\n  revertLightSources = () => {\n    //console.log(\"reverting lighting\");\n    this.oldCol = [];\n    this.oldVis = [];\n    this.col = this.oldCol;\n    this.vis = this.oldVis;\n  };\n\n  /**\n   * Casts or uncategorizes a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast or uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   * @param action - 'cast' to add tint, 'unCast' to remove tint.\n   */\n  private processTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n    action: \"cast\" | \"unCast\" = \"cast\",\n  ) => {\n    const dx = Math.cos((angle * Math.PI) / 180);\n    const dy = Math.sin((angle * Math.PI) / 180);\n\n    // Convert input color from sRGB to linear RGB\n    const linearColor: [number, number, number] = [\n      this.sRGBToLinear(color[0]),\n      this.sRGBToLinear(color[1]),\n      this.sRGBToLinear(color[2]),\n    ];\n\n    for (\n      let i = 0;\n      i <= Math.min(LevelConstants.LIGHTING_MAX_DISTANCE, radius);\n      i++\n    ) {\n      const currentX = Math.floor(px + dx * i);\n      const currentY = Math.floor(py + dy * i);\n\n      if (!this.isPositionInRoom(currentX, currentY)) return; // Outside the room\n\n      const tile = this.roomArray[currentX][currentY];\n      if (tile.isOpaque()) return; // Stop processing through opaque tiles\n\n      // Handle i=0 separately to ensure correct intensity\n      let intensity: number;\n      if (i === 0) {\n        intensity = brightness * 0.1;\n      } else {\n        intensity = brightness / Math.E ** (i - 0.25);\n      }\n      if (intensity < 0.005) intensity = 0;\n\n      if (intensity <= 0) continue;\n\n      if (!this.renderBuffer[currentX]) {\n        this.renderBuffer[currentX] = [];\n      }\n      if (!this.renderBuffer[currentX][currentY]) {\n        this.renderBuffer[currentX][currentY] = [];\n      }\n\n      if (GameConstants.ENEMIES_BLOCK_LIGHT) {\n        //begin processing opaque entities\n        const entity = this.entities.find(\n          (e) => e.x === currentX && e.y === currentY && e.opaque,\n        );\n        if (entity) {\n          //intensity = intensity * (1 - entity.opacity);\n          // Set the intensity for this tile and then terminate to create shadow effect\n          const weightedLinearColor: [number, number, number, number] = [\n            linearColor[0],\n            linearColor[1],\n            linearColor[2],\n            intensity,\n          ];\n\n          if (action === \"cast\") {\n            this.renderBuffer[currentX][currentY].push(weightedLinearColor);\n          } else if (action === \"unCast\") {\n            this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\n              currentY\n            ].filter(\n              (colorEntry) =>\n                !(\n                  Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\n                  Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\n                  Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\n                  Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\n                ),\n            );\n          }\n          return; // Terminate after processing the opaque entity\n        }\n      }\n      //end processing opaque entities\n\n      // Process inner walls like entities - terminate after processing\n      if (tile instanceof Wall && tile.isOpaque() && tile.isInnerWall()) {\n        const weightedLinearColor: [number, number, number, number] = [\n          linearColor[0],\n          linearColor[1],\n          linearColor[2],\n          intensity,\n        ];\n\n        if (action === \"cast\") {\n          this.renderBuffer[currentX][currentY].push(weightedLinearColor);\n        } else if (action === \"unCast\") {\n          this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\n            currentY\n          ].filter(\n            (colorEntry) =>\n              !(\n                Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\n                Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\n                Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\n                Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\n              ),\n          );\n        }\n        return; // Terminate after processing the opaque wall\n      }\n\n      const weightedLinearColor: [number, number, number, number] = [\n        linearColor[0],\n        linearColor[1],\n        linearColor[2],\n        intensity,\n      ];\n\n      if (action === \"cast\") {\n        this.renderBuffer[currentX][currentY].push(weightedLinearColor);\n      } else if (action === \"unCast\") {\n        this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\n          currentY\n        ].filter(\n          (colorEntry) =>\n            !(\n              Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\n              Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\n              Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\n              Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\n            ),\n        );\n      }\n    }\n  };\n\n  /**\n   * Applies Gaussian blur to the specified offscreen canvas.\n   *\n   * @param {HTMLCanvasElement} canvas - The offscreen canvas to blur.\n   * @param {number} radius - The radius of the blur.\n   */\n  applyGaussianBlur(canvas: HTMLCanvasElement, radius: number): void {\n    //DEPRECATED\n    //const StackBlur = require(\"stackblur-canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      throw new Error(\"Failed to get canvas context for Gaussian blur.\");\n    }\n\n    // Get the image data from the canvas\n    const width = canvas.width;\n    const height = canvas.height;\n    //const imageData = ctx.getImageData(0, 0, width, height);\n    let r = radius;\n    if (!GameConstants.BLUR_ENABLED) r = 0;\n    // Apply StackBlur\n    //StackBlur.canvasRGBA(canvas, 0, 0, width, height, Math.floor(r / 2));\n  }\n\n  /**\n   * Casts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  castTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(\n      angle,\n      px,\n      py,\n      radius,\n      color,\n      brightness / 3,\n      \"cast\",\n    );\n  };\n\n  /**\n   * Uncasts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  unCastTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(\n      angle,\n      px,\n      py,\n      radius,\n      color,\n      brightness / 3, // added this\n      \"unCast\",\n    );\n  };\n\n  private sRGBToLinear = (value: number): number => {\n    const normalized = value / 255;\n    if (normalized <= 0.04045) {\n      return normalized / 12.92;\n    } else {\n      return Math.pow((normalized + 0.055) / 1.055, 2.2);\n    }\n  };\n\n  private linearToSRGB = (value: number): number => {\n    if (value <= 0.0031308) {\n      return Math.round(12.92 * value * 255);\n    } else {\n      return Math.round(\n        (1.055 * Math.pow(value, 1 / 2.2 /*gamma*/) - 0.055) * 255,\n      );\n    }\n  };\n\n  clamp = (value: number, min: number = 0, max: number = 1): number => {\n    return Math.min(Math.max(value, min), max);\n  };\n\n  /**\n   * Blends an array of RGB colors into a single color without excessive darkness or clipping to white.\n   *\n   * @param colors - An array of RGB tuples to blend.\n   * @returns A single RGB tuple representing the blended color.\n   */\n  private blendColorsArray = (\n    colors: [red: number, green: number, blue: number, alpha: number][],\n  ): [red: number, green: number, blue: number] => {\n    if (colors.length === 0) return [0, 0, 0];\n\n    // Sum all color channels in linear RGB\n    const sum = colors.reduce(\n      (accumulator, color) => [\n        accumulator[0] + color[0] * color[3],\n        accumulator[1] + color[1] * color[3],\n        accumulator[2] + color[2] * color[3],\n      ],\n      [0, 0, 0],\n    );\n\n    // Apply scaling factor to manage overall brightness\n    const scalingFactor = 0.45 * 2.5; // Adjust as needed\n    const scaledSum = [\n      sum[0] * scalingFactor,\n      sum[1] * scalingFactor,\n      sum[2] * scalingFactor,\n    ];\n\n    // Clamp each channel to [0, 1] to prevent overflow\n    const clampedSum: [number, number, number] = [\n      this.clamp(scaledSum[0], 0, 1),\n      this.clamp(scaledSum[1], 0, 1),\n      this.clamp(scaledSum[2], 0, 1),\n    ];\n    // Convert back to sRGB\n    return [\n      this.linearToSRGB(clampedSum[0]),\n      this.linearToSRGB(clampedSum[1]),\n      this.linearToSRGB(clampedSum[2]),\n    ];\n  };\n\n  rgbToLuminance = (color: [number, number, number]): number => {\n    //map to 1-0 range\n    return 1 - (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  };\n\n  draw = (delta: number) => {\n    if (!this.onScreen) return;\n\n    if (this.active) {\n      HitWarning.updateFrame(delta);\n      this.drawInterval = 4;\n    } else if (!this.active) {\n      this.drawInterval = 8;\n    }\n\n    this.drawTimestamp += delta;\n\n    if (this.drawTimestamp - this.lastDraw >= this.drawInterval) {\n      this.fadeRgb(delta + this.drawInterval);\n      this.fadeLighting(delta + this.drawInterval);\n      this.lastDraw = this.drawTimestamp;\n    }\n  };\n  // added a multiplier to the input rgb values to avoid clipping to white\n  drawColorLayer = () => {\n    if (!this.onScreen) return;\n\n    Game.ctx.save();\n    // Clear the offscreen color canvas\n    this.colorOffscreenCtx.clearRect(\n      0,\n      0,\n      this.colorOffscreenCanvas.width,\n      this.colorOffscreenCanvas.height,\n    );\n\n    let lastFillStyle = \"\";\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    // Draw all color rectangles without any filters\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const [r, g, b] = this.softCol[x][y];\n        if (r === 0 && g === 0 && b === 0) continue; // Skip if no color\n\n        const fillStyle = `rgba(${r}, ${g}, ${b}, 1)`;\n\n        if (fillStyle !== lastFillStyle) {\n          this.colorOffscreenCtx.fillStyle = fillStyle;\n          lastFillStyle = fillStyle;\n        }\n\n        this.colorOffscreenCtx.fillRect(\n          (x - this.roomX + offsetX) * GameConstants.TILESIZE,\n          (y - this.roomY + offsetY) * GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n        );\n      }\n    }\n\n    // Choose blur method based on setting\n    if (GameConstants.USE_WEBGL_BLUR) {\n      // Use WebGL blur with caching\n      const blurRenderer = WebGLBlurRenderer.getInstance();\n\n      // Check if we can use cached results\n      if (\n        this.shouldUseBlurCache() &&\n        this.blurCache.color6px &&\n        this.blurCache.color12px\n      ) {\n        // Use cached blurred results\n        Game.ctx.globalCompositeOperation = \"soft-light\";\n        Game.ctx.globalAlpha = 0.6;\n        Game.ctx.drawImage(\n          this.blurCache.color6px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n\n        Game.ctx.globalCompositeOperation = \"lighten\";\n        Game.ctx.globalAlpha = 0.05;\n        Game.ctx.drawImage(\n          this.blurCache.color12px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n      } else {\n        // Generate new blur and cache if inactive\n        Game.ctx.globalCompositeOperation = \"soft-light\";\n        Game.ctx.globalAlpha = 0.6;\n\n        // Apply 6px blur using WebGL\n        const blurred6px = blurRenderer.applyBlur(this.colorOffscreenCanvas, 6);\n        Game.ctx.drawImage(\n          blurred6px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n\n        // Cache the result if room is inactive\n        if (!this.active) {\n          this.cacheBlurResult(\"color6px\", blurred6px);\n        }\n\n        Game.ctx.globalCompositeOperation = \"lighten\";\n        Game.ctx.globalAlpha = 0.05;\n\n        // Apply 12px blur using WebGL\n        const blurred12px = blurRenderer.applyBlur(\n          this.colorOffscreenCanvas,\n          12,\n        );\n        Game.ctx.drawImage(\n          blurred12px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n\n        // Cache the result if room is inactive\n        if (!this.active) {\n          this.cacheBlurResult(\"color12px\", blurred12px);\n        }\n      }\n    } else {\n      // Use Canvas2D blur (fallback) - matching original settings\n      Game.ctx.globalCompositeOperation =\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\n      Game.ctx.globalAlpha = 0.6;\n\n      if (GameConstants.ctxBlurEnabled) {\n        Game.ctx.filter = \"blur(6px)\";\n      }\n\n      Game.ctx.drawImage(\n        this.colorOffscreenCanvas,\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\n      );\n\n      // Draw slight haze\n      Game.ctx.globalCompositeOperation = \"lighten\";\n      Game.ctx.globalAlpha = 0.05;\n\n      if (GameConstants.ctxBlurEnabled) {\n        Game.ctx.filter = \"blur(12px)\";\n      }\n\n      Game.ctx.drawImage(\n        this.colorOffscreenCanvas,\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\n      );\n\n      Game.ctx.filter = \"none\";\n    }\n\n    this.colorOffscreenCtx.clearRect(\n      0,\n      0,\n      this.colorOffscreenCanvas.width,\n      this.colorOffscreenCanvas.height,\n    );\n\n    Game.ctx.restore();\n  };\n\n  drawShadeLayer = () => {\n    if (GameConstants.isIOS || !GameConstants.SHADE_ENABLED) return;\n    if (!this.onScreen) return;\n\n    Game.ctx.save();\n\n    Game.ctx.globalCompositeOperation =\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\n\n    // Clear the offscreen shade canvas\n    this.shadeOffscreenCtx.clearRect(\n      0,\n      0,\n      this.shadeOffscreenCanvas.width,\n      this.shadeOffscreenCanvas.height,\n    );\n\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    let lastFillStyle = \"\";\n\n    // Draw all shade rectangles without any filters\n    for (let x = this.roomX - 2; x < this.roomX + this.width + 4; x++) {\n      for (let y = this.roomY - 2; y < this.roomY + this.height + 4; y++) {\n        let alpha =\n          this.softVis[x] && this.softVis[x][y] ? this.softVis[x][y] : 0;\n        if (\n          this.roomArray[x] &&\n          this.roomArray[x][y] &&\n          this.roomArray[x][y] instanceof WallTorch\n        )\n          continue;\n        let factor = !GameConstants.SMOOTH_LIGHTING ? 2 : 0.5;\n        let computedAlpha = alpha ** factor;\n\n        let fillX = x;\n        let fillY = y;\n        let fillWidth = 1;\n        let fillHeight = 1;\n        if (\n          this.roomArray[x] &&\n          this.roomArray[x][y] &&\n          this.roomArray[x][y] instanceof Wall\n        ) {\n          const wall = this.roomArray[x][y] as Wall;\n          if (!this.innerWalls.includes(wall)) {\n            switch (wall.direction) {\n              case Direction.UP:\n                fillY = y - 0.5;\n                fillHeight = 0.5;\n                break;\n              case Direction.DOWN:\n                fillY = y - 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.LEFT:\n                fillX = x + 0.5;\n                fillWidth = 0.5;\n                break;\n              case Direction.RIGHT:\n                fillX = x + 0;\n                fillWidth = 0.5;\n                break;\n              case Direction.DOWN_LEFT:\n                fillX = x + 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.DOWN_RIGHT:\n                fillX = x;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 1.5;\n                break;\n              case Direction.UP_LEFT:\n                fillX = x + 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 0.5;\n                break;\n              case Direction.UP_RIGHT:\n                fillX = x - 0.5;\n                fillY = y - 0.5;\n                fillWidth = 0.5;\n                fillHeight = 0.5;\n                break;\n            }\n          }\n        }\n\n        const fillStyle = `rgba(0, 0, 0, ${computedAlpha * 0.5})`;\n\n        if (fillStyle !== lastFillStyle) {\n          this.shadeOffscreenCtx.fillStyle = fillStyle;\n          lastFillStyle = fillStyle;\n        }\n\n        fillY += 1;\n        fillX += 1;\n        this.shadeOffscreenCtx.fillRect(\n          (fillX - this.roomX + offsetX) * GameConstants.TILESIZE,\n          (fillY - this.roomY + offsetY) * GameConstants.TILESIZE,\n          fillWidth * GameConstants.TILESIZE,\n          fillHeight * GameConstants.TILESIZE,\n        );\n      }\n    }\n\n    // Choose blur method based on setting\n    if (GameConstants.USE_WEBGL_BLUR) {\n      // Use WebGL blur with caching\n      const blurRenderer = WebGLBlurRenderer.getInstance();\n\n      // Check if we can use cached results\n      if (this.shouldUseBlurCache() && this.blurCache.shade5px) {\n        // Use cached blurred result\n        Game.ctx.globalAlpha = 1;\n        Game.ctx.drawImage(\n          this.blurCache.shade5px,\n          (this.roomX - offsetX - 1) * GameConstants.TILESIZE,\n          (this.roomY - offsetY - 1) * GameConstants.TILESIZE,\n        );\n      } else {\n        // Generate new blur and cache if inactive\n        Game.ctx.globalAlpha = 1;\n\n        // Apply 5px blur using WebGL\n        const blurred5px = blurRenderer.applyBlur(this.shadeOffscreenCanvas, 5);\n        Game.ctx.drawImage(\n          blurred5px,\n          (this.roomX - offsetX - 1) * GameConstants.TILESIZE,\n          (this.roomY - offsetY - 1) * GameConstants.TILESIZE,\n        );\n\n        // Cache the result if room is inactive\n        if (!this.active) {\n          this.cacheBlurResult(\"shade5px\", blurred5px);\n        }\n      }\n    } else {\n      // Use Canvas2D blur (fallback) - matching original settings\n      Game.ctx.globalAlpha = 1;\n\n      if (GameConstants.ctxBlurEnabled) {\n        Game.ctx.filter = \"blur(5px)\";\n      }\n\n      Game.ctx.drawImage(\n        this.shadeOffscreenCanvas,\n        (this.roomX - offsetX - 1) * GameConstants.TILESIZE,\n        (this.roomY - offsetY - 1) * GameConstants.TILESIZE,\n      );\n\n      Game.ctx.filter = \"none\";\n    }\n\n    Game.ctx.restore();\n  };\n\n  drawBloomLayer = (delta: number) => {\n    if (GameConstants.isIOS || !this.onScreen) return;\n\n    Game.ctx.save();\n    // Clear the offscreen shade canvas\n    this.bloomOffscreenCtx.clearRect(\n      0,\n      0,\n      this.bloomOffscreenCanvas.width,\n      this.bloomOffscreenCanvas.height,\n    );\n    const offsetX = this.blurOffsetX;\n    const offsetY = this.blurOffsetY;\n\n    let lastFillStyle = \"\";\n\n    // Draw all bloom rectangles without any filters\n    const allEntities = this.entities.concat(this.deadEntities);\n    if (allEntities.length > 0)\n      for (let e of this.entities) {\n        if (e.hasBloom) {\n          e.updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[e.x][e.y]) * e.softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = e.bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (e.x - e.drawX - this.roomX + offsetX + 0.5 - e.bloomSize / 2) *\n              GameConstants.TILESIZE,\n            (e.y -\n              e.drawY -\n              this.roomY -\n              0.5 +\n              offsetY +\n              0.5 -\n              e.bloomSize / 2) *\n              GameConstants.TILESIZE +\n              e.bloomOffsetY,\n            GameConstants.TILESIZE * e.bloomSize,\n            GameConstants.TILESIZE * e.bloomSize,\n          );\n        }\n      }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.roomArray[x][y].hasBloom) {\n          this.roomArray[x][y].updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[x][y]) * this.roomArray[x][y].softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = this.roomArray[x][y].bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (x - this.roomX + offsetX) * GameConstants.TILESIZE,\n            (y - this.roomY - 0.25 + offsetY) * GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE * 0.75,\n          );\n        }\n      }\n    }\n\n    if (this.projectiles.length > 0)\n      for (let p of this.projectiles) {\n        if (p.hasBloom) {\n          p.updateBloom(delta);\n          this.bloomOffscreenCtx.globalAlpha =\n            1 * (1 - this.softVis[p.x][p.y]) * p.softBloomAlpha;\n          this.bloomOffscreenCtx.fillStyle = p.bloomColor;\n\n          this.bloomOffscreenCtx.fillRect(\n            (p.x - this.roomX + offsetX) * GameConstants.TILESIZE,\n            (p.y - this.roomY + offsetY + p.bloomOffsetY) *\n              GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n          );\n        }\n      }\n\n    // Choose blur method based on setting\n    if (GameConstants.USE_WEBGL_BLUR) {\n      // Use WebGL blur with caching\n      const blurRenderer = WebGLBlurRenderer.getInstance();\n\n      // Check if we can use cached results\n      if (this.shouldUseBlurCache() && this.blurCache.bloom8px) {\n        // Use cached blurred result\n        Game.ctx.globalCompositeOperation = \"screen\";\n        Game.ctx.globalAlpha = 1;\n        Game.ctx.drawImage(\n          this.blurCache.bloom8px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n      } else {\n        // Generate new blur and cache if inactive\n        Game.ctx.globalCompositeOperation = \"screen\";\n        Game.ctx.globalAlpha = 1;\n\n        // Apply 8px blur using WebGL\n        const blurred8px = blurRenderer.applyBlur(this.bloomOffscreenCanvas, 8);\n        Game.ctx.drawImage(\n          blurred8px,\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\n        );\n\n        // Cache the result if room is inactive\n        if (!this.active) {\n          this.cacheBlurResult(\"bloom8px\", blurred8px);\n        }\n      }\n    } else {\n      // Use Canvas2D blur (fallback) - matching original settings\n      Game.ctx.globalCompositeOperation = \"screen\";\n      Game.ctx.globalAlpha = 1;\n\n      if (GameConstants.ctxBlurEnabled) {\n        Game.ctx.filter = \"blur(8px)\";\n      }\n\n      Game.ctx.drawImage(\n        this.bloomOffscreenCanvas,\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\n      );\n\n      Game.ctx.filter = \"none\";\n    }\n\n    this.bloomOffscreenCtx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    this.bloomOffscreenCtx.fillRect(\n      0,\n      0,\n      this.bloomOffscreenCanvas.width,\n      this.bloomOffscreenCanvas.height,\n    );\n    Game.ctx.restore();\n  };\n\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\n    if (!this.onScreen) return;\n\n    Game.ctx.save();\n    let tiles = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawUnderPlayer(delta);\n        tiles.push(this.roomArray[x][y]);\n      }\n    }\n\n    let drawables = new Array<Drawable>();\n    let entities = new Array<Entity>();\n    entities = entities.concat(this.entities, this.deadEntities);\n\n    drawables = drawables.concat(\n      tiles,\n      this.decorations,\n      entities,\n      this.hitwarnings,\n      this.projectiles,\n      this.particles,\n      this.items,\n    );\n\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this) {\n        if (\n          !(\n            skipLocalPlayer &&\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\n          )\n        )\n          drawables.push(this.game.players[i]);\n      }\n    }\n\n    drawables.sort((a, b) => {\n      if (a instanceof Floor || a instanceof SpawnFloor) {\n        return -1;\n      } else if (b instanceof Floor || b instanceof SpawnFloor) {\n        return 1;\n      } else if (a instanceof Decoration) {\n        return -1;\n      } else if (b instanceof Decoration) {\n        return 1;\n      }\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\n        if (a instanceof Player) {\n          return 1;\n        } else if (b instanceof Player) {\n          return -1;\n        } else if (a instanceof Entity) {\n          return 1;\n        } else if (b instanceof Entity) {\n          return -1;\n        } else if (a instanceof Particle) {\n          return 1;\n        } else if (b instanceof Particle) {\n          return -1;\n        } else return 0;\n      } else {\n        return a.drawableY - b.drawableY;\n      }\n    });\n\n    for (const d of drawables) {\n      d.draw(delta);\n    }\n\n    this.drawAbovePlayer(delta);\n    for (const i of this.items) {\n      i.drawTopLayer(delta);\n    }\n    Game.ctx.restore();\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        //if (this.softVis[x][y] < 1) this.roomArray[x][y].drawAbovePlayer(delta);\n      }\n    }\n  };\n\n  drawShade = (delta: number) => {\n    if (!this.onScreen) return;\n\n    Game.ctx.save();\n    let bestSightRadius = 0;\n    for (const p in this.game.players) {\n      Game.ctx.globalCompositeOperation = \"source-over\"; // \"soft-light\";\n      Game.ctx.globalAlpha = 1;\n      if (\n        this.level.rooms[this.game.players[p].levelID] === this &&\n        this.game.players[p].defaultSightRadius > bestSightRadius\n      ) {\n        bestSightRadius = this.game.players[p].defaultSightRadius;\n      }\n    }\n    let shadingAlpha = Math.max(0, Math.min(0.8, 2 / bestSightRadius));\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = 0.25; //this.shadeOpacity();\n      //Game.ctx.resetTransform();\n      //Game.ctx.fillStyle = \"#4a5d23\"; // hex dark misty green\n      Game.ctx.fillStyle = this.shadeColor;\n      Game.ctx.fillRect(\n        this.roomX * GameConstants.TILESIZE,\n        (this.roomY - 1) * GameConstants.TILESIZE,\n        this.width * GameConstants.TILESIZE,\n        (this.height + 1) * GameConstants.TILESIZE,\n      );\n      Game.ctx.globalAlpha = 1;\n      Game.ctx.globalCompositeOperation = \"source-over\";\n    }\n    Game.ctx.restore();\n  };\n\n  shadeOpacity = () => {\n    if (this.active) {\n      return 0.25;\n    } else {\n      return 0.25;\n    }\n  };\n\n  drawOverShade = (delta: number) => {\n    Game.ctx.save();\n    for (const e of this.entities) {\n      e.drawTopLayer(delta); // health bars\n    }\n\n    for (const p of this.projectiles) {\n      p.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"overlay\";\n    for (const h of this.hitwarnings) {\n      h.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"source-over\";\n\n    for (const s of this.particles) {\n      s.drawTopLayer(delta);\n    }\n    // draw over dithered shading\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawAboveShading(delta);\n      }\n    }\n    Game.ctx.restore();\n  };\n\n  // for stuff rendered on top of the player\n  drawTopLayer = (delta: number) => {\n    Game.ctx.save();\n\n    // gui stuff\n\n    // room name\n    let old = Game.ctx.font;\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      this.message,\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\n      5,\n    );\n    Game.ctx.font = old;\n    Game.ctx.restore();\n  };\n\n  // src/room.ts\n  createWallMask = (): HTMLCanvasElement => {\n    const maskCanvas = document.createElement(\"canvas\");\n    this.maskCanvases.push(maskCanvas); // <-- Track the canvas\n    maskCanvas.width = this.width * GameConstants.TILESIZE;\n    maskCanvas.height = this.height * GameConstants.TILESIZE;\n    const ctx = maskCanvas.getContext(\"2d\");\n    if (!ctx) {\n      throw new Error(\"Failed to create mask canvas context.\");\n    }\n\n    // Fill the canvas with opaque color\n    ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n    ctx.fillRect(\n      this.roomX * GameConstants.TILESIZE,\n      this.roomY * GameConstants.TILESIZE,\n      maskCanvas.width,\n      maskCanvas.height,\n    );\n\n    // Make wall areas transparent\n    /*\n    for (let x = this.roomX - 1; x < this.roomX + 1 + this.width; x++) {\n      for (let y = this.roomY - 1; y < this.roomY + 1 + this.height; y++) {\n        const tile = this.getTile(x, y);\n        if (tile instanceof Wall) {\n          let offsetY = 0;\n          if (tile.direction === Direction.DOWN) offsetY = 1;\n          ctx.clearRect(\n            (x - this.roomX) * GameConstants.TILESIZE,\n            (y - 1 - this.roomY) * GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n            GameConstants.TILESIZE,\n          );\n        }\n      }\n    }\n      */\n    return maskCanvas;\n  };\n\n  //calculate wall info for proper wall rendering\n  calculateWallInfo() {\n    this.wallInfo.clear();\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const tile = this.getTile(x, y);\n        if (tile instanceof Wall || tile instanceof WallTorch) {\n          this.walls.push(tile);\n          const isTopWall = y === this.roomY;\n          const isBottomWall = y === this.roomY + this.height - 1;\n          const isLeftWall = x === this.roomX;\n          const isRightWall = x === this.roomX + this.width - 1;\n          const isInnerWall =\n            !isTopWall && !isBottomWall && !isLeftWall && !isRightWall;\n          const isBelowDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y + 1)?.isDoor;\n          const isAboveDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y - 1)?.isDoor;\n          const isDoorWall =\n            y < this.roomY + this.height && this.getTile(x, y + 1)?.isDoor;\n\n          let innerWallType = null;\n          if (isInnerWall) {\n            const hasWallAbove = this.getTile(x, y - 1) instanceof Wall;\n            const hasWallBelow = this.getTile(x, y + 1) instanceof Wall;\n\n            if (!hasWallAbove && hasWallBelow) {\n              innerWallType = \"topInner\";\n            } else if (hasWallAbove && !hasWallBelow) {\n              innerWallType = \"bottomInner\";\n            } else if (hasWallAbove && hasWallBelow) {\n              innerWallType = \"surroundedInner\";\n            } else {\n              innerWallType = \"isolatedInner\";\n            }\n          }\n\n          this.wallInfo.set(`${x},${y}`, {\n            isTopWall,\n            isBottomWall,\n            isLeftWall,\n            isRightWall,\n            isInnerWall,\n            isBelowDoorWall,\n            isDoorWall,\n            innerWallType,\n            isAboveDoorWall,\n            shouldDrawBottom:\n              isDoorWall ||\n              isBelowDoorWall ||\n              (isTopWall && !isLeftWall && !isRightWall) ||\n              isInnerWall,\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and returns the darkest and lightest tiles in the room based on their visibility.\n   * Loops through the roomArray, sums all the vis values, sorts them, and identifies the extremes.\n   *\n   * @returns An object containing the darkest and lightest tiles with their coordinates and vis values.\n   */\n  getExtremeLuminance = (): {\n    darkest: { x: number; y: number; vis: number } | null;\n    lightest: { x: number; y: number; vis: number } | null;\n  } => {\n    const visValues: { x: number; y: number; vis: number }[] = [];\n\n    // Loop through each tile in the room\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.vis[x] && this.vis[x][y] !== undefined) {\n          visValues.push({ x, y, vis: this.vis[x][y] });\n        }\n      }\n    }\n\n    if (visValues.length === 0) {\n      return { darkest: null, lightest: null };\n    }\n\n    // Sort the vis values in ascending order\n    visValues.sort((a, b) => a.vis - b.vis);\n\n    return {\n      darkest: visValues[visValues.length - 1],\n      lightest: visValues[0],\n    };\n  };\n\n  /**\n   * Finds and returns the darkest and lightest tiles adjacent to a given point.\n   * It checks the tiles above, below, to the left, and to the right of the specified point.\n   *\n   * @param px - The x-coordinate of the reference point.\n   * @param py - The y-coordinate of the reference point.\n   * @returns An object containing the darkest and lightest adjacent tiles with their coordinates and vis values,\n   *          or null if no valid adjacent tiles are found.\n   */\n  getExtremeLuminanceFromPoint = (\n    px: number,\n    py: number,\n  ): {\n    darkest: { x: number; y: number; vis: number } | null;\n    lightest: { x: number; y: number; vis: number } | null;\n  } => {\n    const adjacentPositions = [\n      { x: px, y: py - 1 }, // Up\n      { x: px, y: py + 1 }, // Down\n      { x: px - 1, y: py }, // Left\n      { x: px + 1, y: py }, // Right\n    ];\n\n    const visValues: { x: number; y: number; vis: number }[] = [];\n\n    adjacentPositions.forEach((pos) => {\n      const { x, y } = pos;\n      if (this.vis[x] && this.vis[x][y] !== undefined) {\n        if (this.roomArray[x] && this.roomArray[x][y]) {\n          if (this.roomArray[x][y] instanceof Floor) {\n            visValues.push({ x, y, vis: this.vis[x][y] });\n          }\n        }\n      }\n    });\n\n    if (visValues.length === 0) {\n      return { darkest: null, lightest: null };\n    }\n\n    // Sort the vis values in ascending order\n    visValues.sort((a, b) => a.vis - b.vis);\n\n    return {\n      darkest: visValues[visValues.length - 1],\n      lightest: visValues[0],\n    };\n  };\n\n  getAverageLuminance = (): number => {\n    let total = 0;\n    let count = 0;\n    for (let x = this.roomX - 2; x <= this.roomX + 2; x++) {\n      if (this.roomArray[x] && this.roomArray[x][this.roomY]) {\n        for (let y = this.roomY - 2; y <= this.roomY + 2; y++) {\n          if (this.vis[x][y]) {\n            total += this.vis[x][y];\n            count++;\n          }\n        }\n      }\n    }\n    return total / count;\n  };\n\n  // #endregion\n\n  // #region UTILITIES\n\n  pointInside(\n    x: number,\n    y: number,\n    rX: number,\n    rY: number,\n    rW: number,\n    rH: number,\n  ): boolean {\n    if (x < rX || x >= rX + rW) return false;\n    if (y < rY || y >= rY + rH) return false;\n    return true;\n  }\n\n  tileInside = (tileX: number, tileY: number): boolean => {\n    return this.pointInside(\n      tileX,\n      tileY,\n      this.roomX,\n      this.roomY,\n      this.width,\n      this.height,\n    );\n  };\n\n  getEmptyTiles = (): Tile[] => {\n    let returnVal: Tile[] = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (\n          !this.roomArray[x][y].isSolid() &&\n          !(this.roomArray[x][y] instanceof SpikeTrap) &&\n          !(this.roomArray[x][y] instanceof SpawnFloor) &&\n          !(this.roomArray[x][y] instanceof UpLadder) &&\n          !(this.roomArray[x][y] instanceof DownLadder)\n        ) {\n          returnVal.push(this.roomArray[x][y]);\n        }\n      }\n    }\n    for (const e of this.entities) {\n      returnVal = returnVal.filter((t) => !e.pointIn(t.x, t.y));\n    }\n    return returnVal;\n  };\n\n  getTile = (x: number, y: number) => {\n    if (this.roomArray[x]) return this.roomArray[x][y];\n    else return undefined;\n  };\n\n  getBossDoor = () => {\n    for (const door of this.doors) {\n      if (door.linkedDoor.room.type === RoomType.DOWNLADDER)\n        return { x: door.x, y: door.y, doorDir: door.doorDir };\n      console.log(\"found boss door\", door.linkedDoor.room.type);\n    }\n    return null;\n  };\n\n  hasNoEnemies = () => {\n    let enemies = this.entities.filter((e) => e instanceof Enemy);\n    const cleared = enemies.length === 0 && this.lastEnemyCount > 0;\n\n    return cleared;\n  };\n\n  roomCleared = () => {\n    const enemies = this.entities.filter((e) => e instanceof Enemy);\n    return enemies.length === 0;\n  };\n\n  hasHitwarning = (x: number, y: number): boolean => {\n    /*\n    for (const e of this.entities) {\n      if (e instanceof Enemy && e.x === x && e.y === y) danger += 1;\n    }\n    */\n    for (const h of this.hitwarnings) {\n      if (h.x === x && h.y === y && !h.dead) return true;\n    }\n    return false;\n  };\n\n  hasEnemy = (x: number, y: number): boolean => {\n    for (const e of this.entities) {\n      if (e instanceof Enemy && e.x === x && e.y === y) return true;\n    }\n    return false;\n  };\n\n  /**\n   * Checks if a tile at the given coordinates is empty (not solid and no entities).\n   * This is a comprehensive check that combines tile solidity and entity presence.\n   *\n   * @param x - The x-coordinate to check\n   * @param y - The y-coordinate to check\n   * @returns True if the tile is empty (walkable and no entities), false otherwise\n   */\n  isTileEmpty = (x: number, y: number): boolean => {\n    // First check if the position exists in the room array\n    if (!this.roomArray[x] || !this.roomArray[x][y]) {\n      return false;\n    }\n\n    const tile = this.roomArray[x][y];\n\n    // Check if the tile is solid\n    if (tile.isSolid()) {\n      return false;\n    }\n\n    // Check for specific tile types that should be considered non-empty\n    if (\n      tile instanceof SpikeTrap ||\n      tile instanceof SpawnFloor ||\n      tile instanceof UpLadder ||\n      tile instanceof DownLadder\n    ) {\n      return false;\n    }\n\n    // Check if there are any entities at this position\n    for (const entity of this.entities) {\n      if (entity.pointIn(x, y)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  hasEnemyInRadius = (x: number, y: number): boolean => {\n    const radius = 2;\n    const radiusSquared = radius * radius; // Calculate once\n\n    for (let dx = -radius; dx <= radius; dx++) {\n      for (let dy = -radius; dy <= radius; dy++) {\n        // Check if point is within radius (circular check)\n        if (dx * dx + dy * dy <= radiusSquared) {\n          const checkX = x + dx;\n          const checkY = y + dy;\n\n          // Add bounds checking if needed\n          if (this.hasEnemy(checkX, checkY)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  checkForNoEnemies = () => {\n    if (this.hasNoEnemies()) {\n      this.doors.forEach((d) => {\n        if (d.type === DoorType.GUARDEDDOOR) {\n          d.unGuard();\n\n          this.game.pushMessage(\n            \"The foes have been slain and the door allows you passage.\",\n          );\n          this.game.startCameraAnimation(\n            this.getBossDoor().x,\n            this.getBossDoor().y,\n            175,\n          );\n        }\n      });\n    }\n  };\n\n  // This pattern appears in multiple methods like addVendingMachine, addChests, addSpikes, etc.\n  getRandomEmptyPosition(\n    tiles: Tile[],\n    ignore?: { x: number; y: number },\n  ): { x: number; y: number } {\n    if (tiles.length === 0) return null;\n    const tile = tiles.splice(\n      Game.rand(0, tiles.length - 1, Random.rand),\n      1,\n    )[0];\n    if (ignore && tile.x === ignore.x && tile.y === ignore.y) {\n      return this.getRandomEmptyPosition(tiles, ignore);\n    }\n    return { x: tile.x, y: tile.y };\n  }\n\n  private getBigRandomEmptyPosition(tiles: Tile[]): {\n    x: number;\n    y: number;\n  } {\n    if (tiles.length === 0) return null;\n\n    // Create a set for O(1) lookup of tile coordinates\n    const tileSet = new Set(tiles.map((t) => `${t.x},${t.y}`));\n\n    // Find all tiles that can be the top-left corner of a 2x2 patch\n    const bigTilePositions = tiles.filter((t) => {\n      // Check if this tile and the 3 adjacent tiles (right, below, diagonal) are all empty\n      return (\n        tileSet.has(`${t.x + 1},${t.y}`) && // right\n        tileSet.has(`${t.x},${t.y + 1}`) && // below\n        tileSet.has(`${t.x + 1},${t.y + 1}`)\n      ); // diagonal\n    });\n\n    if (bigTilePositions.length === 0) return null;\n\n    // Randomly select one of the valid 2x2 positions\n    const selectedTile =\n      bigTilePositions[Game.rand(0, bigTilePositions.length - 1, Random.rand)];\n    return { x: selectedTile.x, y: selectedTile.y };\n  }\n  // Used in populateUpLadder, populateDownLadder, populateRopeHole, populateRopeCave\n  private getRoomCenter(): { x: number; y: number } {\n    return {\n      x: Math.floor(this.roomX + this.width / 2),\n      y: Math.floor(this.roomY + this.height / 2),\n    };\n  }\n\n  // Used in multiple methods including castShadowsAtAngle\n  isPositionInRoom(x: number, y: number): boolean {\n    return !(\n      Math.floor(x) < this.roomX ||\n      Math.floor(x) >= this.roomX + this.width ||\n      Math.floor(y) < this.roomY ||\n      Math.floor(y) >= this.roomY + this.height\n    );\n  }\n\n  pathIsBlockedBy(tile: Tile, otherTile: Tile): Entity[] {\n    const entities = [];\n    if (tile.isSolid()) entities.push(tile);\n    if (otherTile.isSolid()) entities.push(otherTile);\n    return entities;\n  }\n\n  // checks for obstructions between doors and finds paths avoiding obstacles.\n\n  removeDoorObstructions = () => {\n    let obstacles = [];\n    for (const door of this.doors) {\n      for (const otherDoor of this.doors) {\n        if (door === otherDoor || door === null || otherDoor === null) break;\n        const pathObstacles = this.findPath(door, otherDoor);\n        if (pathObstacles.length > 0) {\n        }\n        obstacles.push(...pathObstacles);\n      }\n    }\n    if (obstacles.length > 0) {\n      for (let obstacle of obstacles) {\n        // console.log(`Removing obstacle at (${obstacle.x},${obstacle.y})`);\n        this.entities = this.entities.filter((e) => e !== obstacle);\n        obstacle = null;\n      }\n    }\n  };\n\n  // avoid blocking doorways with unbreakable entities\n  findPath = (startTile: Tile, targetTile: Tile): Array<Entity> => {\n    let disablePositions = Array<astar.Position>();\n    let obstacleCandidates = [];\n\n    for (const e of this.entities) {\n      if (e instanceof VendingMachine || e instanceof Rock) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n        obstacleCandidates.push(e);\n      }\n    }\n\n    // Create a grid of the room\n    let grid = [];\n    for (let x = 0; x < this.roomX + this.width; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.roomY + this.height; y++) {\n        if (this.roomArray[x] && this.roomArray[x][y])\n          grid[x][y] = this.roomArray[x][y];\n        else grid[x][y] = false;\n      }\n    }\n\n    let moves = astar.AStar.search(\n      grid,\n      startTile,\n      targetTile,\n      disablePositions,\n      false,\n      false,\n      false,\n    );\n    if (moves.length === 0) {\n      return obstacleCandidates;\n    } else {\n      return [];\n    }\n  };\n\n  // #endregion\n\n  // #region MISC\n\n  /**\n   * Adds a new BeamEffect to the room.\n   *\n   * @param x1 - Starting tile X coordinate.\n   * @param y1 - Starting tile Y coordinate.\n   * @param x2 - Ending tile X coordinate.\n   * @param y2 - Ending tile Y coordinate.\n   */\n  public addBeamEffect(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    parent: Entity,\n  ): void {\n    const beam = new BeamEffect(x1, y1, x2, y2, parent);\n    this.beamEffects.push(beam);\n  }\n\n  public async changeReverb(newImpulsePath: string) {\n    await ReverbEngine.setReverbImpulse(newImpulsePath);\n  }\n  get roomArea() {\n    let area = (this.width - 2) * (this.height - 2);\n    let openTiles = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (this.roomArray[x][y] instanceof Floor) openTiles.push({ x, y });\n      }\n    }\n    //console.log(area, openTiles.length);\n    return openTiles.length;\n  }\n  /**\n   * Determines if the room is currently on screen.\n   * Uses a buffer of 2 tiles beyond the room's dimensions to account for partial visibility.\n   *\n   * @returns {boolean} - True if the room is on screen, otherwise false.\n   */\n  public roomOnScreen(player: Player) {\n    const tileSize = GameConstants.TILESIZE;\n\n    // Calculate room boundaries with a buffer of 2 tiles\n    const roomLeft = (this.roomX - 2) * tileSize;\n    const roomRight = (this.roomX + this.width + 2) * tileSize;\n    const roomTop = (this.roomY - 2) * tileSize;\n    const roomBottom = (this.roomY + this.height + 2) * tileSize;\n\n    // Convert player position from tiles to pixels\n    const playerPosX = player.x * tileSize;\n    const playerPosY = player.y * tileSize;\n\n    // Calculate camera position in pixels\n    const cameraX =\n      playerPosX -\n      player.drawX +\n      0.5 * tileSize -\n      0.5 * GameConstants.WIDTH -\n      this.game.screenShakeX; // X-coordinate of the camera's top-left corner\n    const cameraY =\n      playerPosY -\n      player.drawY +\n      0.5 * tileSize -\n      0.5 * GameConstants.HEIGHT - // Corrected from WIDTH to HEIGHT\n      this.game.screenShakeY; // Y-coordinate of the camera's top-left corner\n    const cameraWidth = GameConstants.WIDTH; // Corrected from innerWidth\n    const cameraHeight = GameConstants.HEIGHT; // Corrected from innerHeight\n\n    // Define the camera's boundaries\n    const cameraLeft = cameraX;\n    const cameraRight = cameraX + cameraWidth;\n    const cameraTop = cameraY;\n    const cameraBottom = cameraY + cameraHeight;\n\n    // Check if the room's boundaries overlap with the camera's view\n    const isOverlapping = !(\n      roomRight < cameraLeft ||\n      roomLeft > cameraRight ||\n      roomBottom < cameraTop ||\n      roomTop > cameraBottom\n    );\n\n    this.onScreen = isOverlapping;\n  }\n\n  private setReverb() {\n    const roomArea = this.roomArea;\n    if (roomArea < 10) {\n      this.changeReverb(`res/SFX/impulses/small.mp3`);\n    } else if (roomArea < 55) {\n      this.changeReverb(`res/SFX/impulses/medium.mp3`);\n    } else {\n      this.changeReverb(`res/SFX/impulses/large.mp3`);\n    }\n  }\n\n  // #endregion\n\n  /**\n   * Adds a door with offset to prevent overlapping doors.\n   * If a door already exists at the desired (x, y) position, it offsets the door randomly to either side.\n   * Ensures the new door is at least one tile away from the room's edge based on its direction.\n   *\n   * @param x - The x-coordinate for the door placement.\n   * @param y - The y-coordinate for the door placement.\n   * @param room - The Room object where the door is being placed. Defaults to the current room.\n   * @param tunnelDoor - Whether the door is a tunnel door. Defaults to false.\n   * @returns The created Door object or null if placement failed.\n   */\n  addDoorWithOffset = (\n    x: number,\n    y: number,\n    room: Room = this,\n    tunnelDoor: boolean = false,\n  ) => {\n    // Check if a door already exists at the desired position\n    if (room.roomArray[x]?.[y] instanceof Door) {\n      // Determine the direction based on the door's position\n      let direction: Direction | null = null;\n      if (x === room.roomX) {\n        direction = Direction.RIGHT;\n      } else if (x === room.roomX + room.width - 1) {\n        direction = Direction.LEFT;\n      } else if (y === room.roomY) {\n        direction = Direction.DOWN;\n      } else if (y === room.roomY + room.height - 1) {\n        direction = Direction.UP;\n      }\n\n      if (!direction) {\n        // console.log(\"Invalid door position.\");\n        return null;\n      }\n\n      // Define possible offset adjustments based on door direction\n      const offsetOptions: Array<{ dx: number; dy: number }> = [];\n      switch (direction) {\n        case Direction.RIGHT | Direction.LEFT:\n          // Offsets along the y-axis for vertical walls\n          offsetOptions.push({ dx: 0, dy: 1 }, { dx: 0, dy: -1 });\n          break;\n        case Direction.UP | Direction.DOWN:\n          // Offsets along the x-axis for horizontal walls\n          offsetOptions.push({ dx: 1, dy: 0 }, { dx: -1, dy: 0 });\n          break;\n      }\n\n      // Shuffle the offset options to randomize placement\n      const shuffledOffsets = offsetOptions.sort(() => Math.random() - 0.5);\n\n      for (const offset of shuffledOffsets) {\n        const newX = x + offset.dx;\n        const newY = y + offset.dy;\n\n        // Ensure the new position is within bounds and not on the edge\n        const isWithinBounds =\n          newX > room.roomX &&\n          newX < room.roomX + room.width - 1 &&\n          newY > room.roomY &&\n          newY < room.roomY + room.height - 1;\n\n        if (isWithinBounds && !(room.roomArray[newX]?.[newY] instanceof Door)) {\n          // Offset the door placement\n          return room.addDoor(newX, newY, room, tunnelDoor);\n        }\n      }\n\n      return null;\n    }\n\n    // If no door exists at the desired position, place it normally\n    return room.addDoor(x, y, room, tunnelDoor);\n  };\n\n  /**\n   * Finds all wall tiles that do not have a door in them or adjacent to them.\n   * @returns An array of wall tiles without doors or adjacent doors.\n   */\n  getEmptyWall(): Wall[] {\n    const emptyWalls: Wall[] = [];\n\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY - 1; y < this.roomY + this.height - 1; y++) {\n        const tile = this.roomArray[x][y];\n\n        if (tile instanceof Wall || tile instanceof WallTorch) {\n          // Check if the current wall tile is not a door\n          if (!(tile instanceof Door)) {\n            // Check adjacent tiles for doors\n            const adjacentTiles = [\n              this.roomArray[x + 1]?.[y],\n              this.roomArray[x - 1]?.[y],\n              this.roomArray[x]?.[y + 1],\n              this.roomArray[x]?.[y - 1],\n            ];\n\n            const hasAdjacentDoor = adjacentTiles.some(\n              (adjTile) => adjTile instanceof Door,\n            );\n\n            if (!hasAdjacentDoor) {\n              emptyWalls.push(tile);\n            }\n          }\n        }\n      }\n    }\n    return emptyWalls;\n  }\n\n  pointExists = (x: number, y: number) => {\n    return this.roomArray[x] && this.roomArray[x][y];\n  };\n\n  /**\n   * Removes a specified empty wall from the room.\n   * @param wall - The wall tile to remove.\n   * @returns An object containing the x and y coordinates of the removed wall.\n   */\n  removeEmptyWall(wall: Wall): { x: number; y: number } | null {\n    if (!(wall instanceof Wall)) return null;\n\n    const { x, y } = wall;\n\n    // Replace the wall with a Floor tile to maintain room integrity\n    this.roomArray[x][y] = new Floor(this, x, y);\n\n    // Remove from innerWalls or outerWalls if applicable\n    const initialInnerWallsCount = this.innerWalls.length;\n    this.innerWalls = this.innerWalls.filter((w) => w !== wall);\n    const finalInnerWallsCount = this.innerWalls.length;\n\n    return { x, y };\n  }\n\n  /**\n   * Places a VendingMachine in an empty wall.\n   */\n  placeVendingMachineInWall(): void {\n    const emptyWalls = this.getEmptyWall();\n    if (emptyWalls.length === 0) return;\n\n    // Select a random empty wall\n    const selectedWall = Game.randTable(emptyWalls, Random.rand);\n    if (!selectedWall) return;\n\n    // Remove the selected wall\n    const removedWallInfo = this.removeEmptyWall(selectedWall);\n    if (!removedWallInfo) return;\n\n    const { x, y } = removedWallInfo;\n\n    // Create and add the VendingMachine\n    this.addVendingMachine(Random.rand, x, y);\n  }\n\n  // Add methods to manage blur cache\n  private invalidateBlurCache = () => {\n    this.blurCache.isValid = false;\n    this.blurCache.lastLightingUpdate = this.lastLightingUpdate;\n  };\n\n  private shouldUseBlurCache = (): boolean => {\n    return (\n      !this.active &&\n      this.blurCache.isValid &&\n      this.blurCache.lastLightingUpdate === this.lastLightingUpdate\n    );\n  };\n\n  private cacheBlurResult = (\n    type: \"color6px\" | \"color12px\" | \"shade5px\" | \"bloom8px\",\n    canvas: HTMLCanvasElement,\n  ) => {\n    if (!this.active) {\n      // Clone the canvas to cache it\n      const cachedCanvas = document.createElement(\"canvas\");\n      cachedCanvas.width = canvas.width;\n      cachedCanvas.height = canvas.height;\n      const ctx = cachedCanvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.drawImage(canvas, 0, 0);\n        this.blurCache[type] = cachedCanvas;\n        this.blurCache.isValid = true;\n        this.blurCache.lastLightingUpdate = this.lastLightingUpdate;\n      }\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Floor } from \"../tile/floor\";\nimport { Wall } from \"../tile/wall\";\nimport { Room, WallDirection } from \"./room\";\n\nexport class RoomBuilder {\n  room: Room;\n  constructor(room: Room) {\n    this.room = room;\n    this.buildEmptyRoom();\n  }\n\n  private buildEmptyRoom() {\n    // fill in wall and floor\n    for (let x = this.room.roomX; x < this.room.roomX + this.room.width; x++) {\n      for (\n        let y = this.room.roomY;\n        y < this.room.roomY + this.room.height;\n        y++\n      ) {\n        if (\n          this.room.pointInside(\n            x,\n            y,\n            this.room.roomX + 1,\n            this.room.roomY + 1,\n            this.room.width - 2,\n            this.room.height - 2,\n          )\n        ) {\n          this.room.roomArray[x][y] = new Floor(this.room, x, y);\n        } else {\n          this.room.roomArray[x][y] = new Wall(\n            this.room,\n            x,\n            y,\n            this.getWallType(\n              x,\n              y,\n              this.room.roomX,\n              this.room.roomY,\n              this.room.width,\n              this.room.height,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  getWallType = (\n    pointX: number,\n    pointY: number,\n    rectX: number,\n    rectY: number,\n    width: number,\n    height: number,\n  ): Array<WallDirection> => {\n    let directions: Array<WallDirection> = [];\n    if (pointY === rectY && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.NORTH);\n    if (pointY === rectY + height && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.SOUTH);\n    if (pointX === rectX && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.WEST);\n    if (pointX === rectX + width && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.EAST);\n    return directions;\n  };\n\n  addWallBlocks(rand: () => number) {\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\n    if (this.room.width > 8 && rand() > 0.5) numBlocks *= 4;\n    for (let i = 0; i < numBlocks; i++) {\n      let blockW = Math.min(\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\n        this.room.width - 4,\n      );\n      let blockH = Math.min(\n        blockW + Game.rand(-2, 2, rand),\n        this.room.height - 4,\n      );\n\n      let x = Game.rand(\n        this.room.roomX + 2,\n        this.room.roomX + this.room.width - blockW - 2,\n        rand,\n      );\n      let y = Game.rand(\n        this.room.roomY + 2,\n        this.room.roomY + this.room.height - blockH - 2,\n        rand,\n      );\n      let neighborCount = (wall: Wall) => {\n        let count = 0;\n        for (let xx = wall.x - 1; xx <= wall.x + 1; xx++) {\n          for (let yy = wall.y - 1; yy <= wall.y + 1; yy++) {\n            if (\n              this.room.roomArray[xx]?.[yy] instanceof Wall &&\n              !(xx === wall.x && yy === wall.y)\n            )\n              count++;\n          }\n        }\n        return count;\n      };\n\n      for (let xx = x; xx < x + blockW; xx++) {\n        for (let yy = y; yy < y + blockH; yy++) {\n          let w = new Wall(this.room, xx, yy);\n          this.room.roomArray[xx][yy] = w;\n          this.room.innerWalls.push(w);\n        }\n      }\n      this.room.innerWalls.forEach((wall) => {\n        if (neighborCount(wall) <= 1) {\n          this.room.removeWall(wall.x, wall.y);\n          this.room.roomArray[wall.x][wall.y] = new Floor(\n            this.room,\n            wall.x,\n            wall.y,\n          );\n          this.room.innerWalls = this.room.innerWalls.filter((w) => w !== wall);\n        }\n      });\n    }\n  }\n}\n","import { Barrel } from \"../entity/object/barrel\";\nimport { Block } from \"../entity/object/block\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Pumpkin } from \"../entity/object/pumpkin\";\nimport { TombStone } from \"../entity/object/tombStone\";\nimport { Game } from \"../game\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\nimport { EnvType, environmentProps, PropInfo } from \"../level/environment\";\nimport { Level } from \"../level/level\";\nimport { Random } from \"../utility/random\";\nimport { Utils } from \"../utility/utils\";\nimport { ClusteringOptions, PropClusterer } from \"./propClusterer\";\nimport { Room, RoomType } from \"./room\";\n\nexport class Populator {\n  level: Level;\n  medianDensity: number;\n  private props: { x: number; y: number }[] = [];\n\n  constructor(level: Level) {\n    this.level = level;\n    this.props = [];\n    this.medianDensity = GameplaySettings.MEDIAN_ROOM_DENSITY;\n  }\n\n  populateRooms = () => {\n    this.level.rooms.forEach((room) => {\n      if (\n        room.type === RoomType.START ||\n        room.type === RoomType.DOWNLADDER ||\n        room.type === RoomType.UPLADDER ||\n        room.type === RoomType.ROPEHOLE\n      )\n        return;\n\n      this.populateByEnvironment(room);\n    });\n  };\n\n  populateByEnvironment = (room: Room) => {\n    switch (room.envType) {\n      case EnvType.CAVE:\n        this.populateCave(room);\n        break;\n      case EnvType.FOREST:\n        this.populateForest(room);\n        break;\n      default:\n        this.populateDefault(room);\n        break;\n    }\n  };\n\n  populateByType = (room: Room) => {};\n\n  private addProps(room: Room, numProps: number, envType?: EnvType) {\n    const envData = envType\n      ? environmentProps[envType]\n      : environmentProps[room.level.environment.type];\n    let tiles = room.getEmptyTiles();\n\n    for (let i = 0; i < numProps; i++) {\n      if (tiles.length === 0) break;\n\n      const { x, y } = room.getRandomEmptyPosition(tiles);\n      const selectedProp = Utils.randTableWeighted(envData.props);\n\n      if (selectedProp && selectedProp.class && selectedProp.class.add) {\n        const args = selectedProp.additionalParams || [];\n        selectedProp.class.add(room, room.game, x, y, ...args);\n      }\n    }\n  }\n\n  /**\n   * Adds props with clustering behavior - entities are more likely to be placed near existing entities\n   * @param room - The room to populate\n   * @param numProps - Number of props to place\n   * @param envType - Environment type for prop selection\n   * @param clusteringOptions - Optional clustering configuration\n   */\n  private addPropsWithClustering(\n    room: Room,\n    numProps: number,\n    envType?: EnvType,\n    clusteringOptions?: ClusteringOptions,\n  ) {\n    const envData = envType\n      ? environmentProps[envType]\n      : environmentProps[room.level.environment.type];\n\n    const clusterer = new PropClusterer(room, clusteringOptions);\n    const positions = clusterer.generateClusteredPositions(numProps);\n\n    for (const { x, y } of positions) {\n      const selectedProp = Utils.randTableWeighted(envData.props);\n\n      if (selectedProp && selectedProp.class && selectedProp.class.add) {\n        const args = selectedProp.additionalParams || [];\n        selectedProp.class.add(room, room.game, x, y, ...args);\n      }\n    }\n  }\n\n  private populateDungeon(room: Room) {\n    this.populateDefault(room);\n  }\n\n  private populateGraveyard(room: Room) {\n    this.populateDefault(room);\n  }\n\n  private populateCave(room: Room) {\n    const numProps = this.getNumProps(room);\n    //this.addProps(room, numProps, room.envType);\n    this.addPropsWithClustering(room, numProps, room.envType, {\n      falloffExponent: 2,\n      baseScore: 0.1,\n      maxInfluenceDistance: 12,\n      useSeedPosition: false,\n    });\n  }\n\n  private populateForest(room: Room) {\n    const numProps = this.getNumProps(room, 0.75);\n    //this.addProps(room, numProps, room.envType);\n    this.addPropsWithClustering(room, numProps, room.envType, {\n      falloffExponent: 2,\n      baseScore: 0.1,\n      maxInfluenceDistance: 12,\n      useSeedPosition: false,\n    });\n  }\n\n  private getNumProps(room: Room, medianDensity?: number) {\n    medianDensity = medianDensity || this.medianDensity;\n    const numEmptyTiles = room.getEmptyTiles().length;\n    const numProps = Utils.randomNormalInt(0, numEmptyTiles, {\n      median: Math.ceil(medianDensity * numEmptyTiles),\n    });\n    const percentFull = Math.round((numProps / numEmptyTiles) * 100);\n    console.log(\"percentFull\", `${percentFull}%`);\n    return numProps;\n  }\n\n  private populateDefault(room: Room) {\n    const numProps = this.getNumProps(room);\n    //this.addProps(room, numProps, room.envType);\n    this.addPropsWithClustering(room, numProps, room.envType, {\n      falloffExponent: 2,\n      baseScore: 0.1,\n      maxInfluenceDistance: 12,\n      useSeedPosition: false,\n    });\n  }\n}\n","import { Game } from \"../game\";\nimport { Sound } from \"./sound\";\nimport { Howl, Howler } from \"howler\";\n\nexport class ReverbEngine {\n  private static audioContext: AudioContext;\n  private static convolver: ConvolverNode;\n  private static reverbBuffer: AudioBuffer | null = null;\n  private static gainNodes: Map<number, GainNode> = new Map();\n  private static originalRefreshBuffer: any;\n  private static mobileUnlockAttempted: boolean = false;\n  static initialized: boolean = false;\n\n  static isMobile(): boolean {\n    return Sound.isMobile;\n  }\n\n  // Mobile-specific audio context unlock\n  private static async unlockMobileAudio(): Promise<void> {\n    if (ReverbEngine.mobileUnlockAttempted || !ReverbEngine.isMobile()) {\n      return;\n    }\n\n    ReverbEngine.mobileUnlockAttempted = true;\n\n    try {\n      // Create a silent buffer and play it to unlock the audio context\n      const buffer = ReverbEngine.audioContext.createBuffer(1, 1, 22050);\n      const source = ReverbEngine.audioContext.createBufferSource();\n      source.buffer = buffer;\n      source.connect(ReverbEngine.audioContext.destination);\n\n      if (typeof source.start === \"undefined\") {\n        (source as any).noteOn(0);\n      } else {\n        source.start(0);\n      }\n\n      // Resume the context\n      if (ReverbEngine.audioContext.state === \"suspended\") {\n        await ReverbEngine.audioContext.resume();\n      }\n\n      console.log(\"[REVERB-MOBILE] Audio context unlocked for mobile\");\n    } catch (error) {\n      console.warn(\"[REVERB-MOBILE] Failed to unlock audio context:\", error);\n    }\n  }\n\n  // Helper function to get sound identifier for logging\n  private static getSoundName(sound: Howl): string {\n    const src = (sound as any)._src;\n    if (Array.isArray(src) && src.length > 0) {\n      return src[0].split(\"/\").pop() || \"unknown\";\n    } else if (typeof src === \"string\") {\n      return src.split(\"/\").pop() || \"unknown\";\n    }\n    return \"unknown\";\n  }\n\n  // General logging function to avoid repetition\n  private static logStep(\n    step: string,\n    soundName: string,\n    message: string,\n    soundId?: number,\n  ) {\n    const idStr = soundId !== undefined ? ` [ID:${soundId}]` : \"\";\n    console.log(`[REVERB-${step}] ${soundName}${idStr}: ${message}`);\n  }\n\n  public static async initialize() {\n    if (ReverbEngine.initialized) return;\n\n    let canInitialize = Game.inputReceived;\n\n    // For mobile, we need to be extra careful about timing\n    if (!canInitialize) {\n      try {\n        await new Promise<void>((resolve) => {\n          const checkInput = () => {\n            if (Game.inputReceived) {\n              resolve();\n              canInitialize = true;\n            } else {\n              requestAnimationFrame(checkInput);\n            }\n          };\n          checkInput();\n        });\n      } catch (error) {\n        console.error(\"Failed to wait for input:\", error);\n        return;\n      }\n    }\n\n    if (\n      !ReverbEngine.audioContext &&\n      !ReverbEngine.initialized &&\n      canInitialize\n    ) {\n      try {\n        // Wait for Howler to initialize its context\n        if (!Howler.ctx) {\n          await new Promise((resolve) => setTimeout(resolve, 100));\n        }\n\n        ReverbEngine.audioContext =\n          Howler.ctx ||\n          new (window.AudioContext || (window as any).webkitAudioContext)();\n\n        // Mobile-specific: Unlock audio context immediately after user interaction\n        if (ReverbEngine.isMobile()) {\n          await ReverbEngine.unlockMobileAudio();\n        }\n\n        // Resume context if suspended (common on mobile)\n        if (ReverbEngine.audioContext.state === \"suspended\") {\n          await ReverbEngine.audioContext.resume();\n          console.log(\"[REVERB-MOBILE] Audio context resumed\");\n        }\n\n        // Set up the convolver\n        ReverbEngine.convolver = ReverbEngine.audioContext.createConvolver();\n        ReverbEngine.convolver.connect(ReverbEngine.audioContext.destination);\n\n        await ReverbEngine.loadReverbBuffer(`res/SFX/impulses/small.mp3`);\n        ReverbEngine.setDefaultReverb();\n\n        // HOOK INTO _refreshBuffer METHOD\n        if (!ReverbEngine.originalRefreshBuffer) {\n          ReverbEngine.originalRefreshBuffer = Howl.prototype._refreshBuffer;\n\n          Howl.prototype._refreshBuffer = function (sound: any) {\n            const soundName = ReverbEngine.getSoundName(this);\n            ReverbEngine.logStep(\n              \"A\",\n              soundName,\n              \"Intercepted _refreshBuffer\",\n              sound._id,\n            );\n\n            // Mobile check: ensure audio context is not suspended\n            if (\n              ReverbEngine.isMobile() &&\n              ReverbEngine.audioContext.state === \"suspended\"\n            ) {\n              ReverbEngine.audioContext.resume().then(() => {\n                ReverbEngine.logStep(\n                  \"A-MOBILE\",\n                  soundName,\n                  \"Resumed suspended context\",\n                  sound._id,\n                );\n              });\n            }\n\n            // Call the original method first\n            ReverbEngine.originalRefreshBuffer.call(this, sound);\n\n            // Now intercept the connection and add our reverb routing\n            if (sound._node && sound._node.bufferSource) {\n              ReverbEngine.logStep(\n                \"B\",\n                soundName,\n                \"Setting up reverb routing\",\n                sound._id,\n              );\n\n              // Disconnect from the original destination\n              sound._node.bufferSource.disconnect();\n\n              // Create or get gain node for this sound\n              let gainNode = ReverbEngine.gainNodes.get(sound._id);\n              if (!gainNode) {\n                gainNode = ReverbEngine.audioContext.createGain();\n                const volume = (this as any)._volume || 1.0;\n                gainNode.gain.setValueAtTime(\n                  volume,\n                  ReverbEngine.audioContext.currentTime,\n                );\n                gainNode.connect(ReverbEngine.convolver);\n                ReverbEngine.gainNodes.set(sound._id, gainNode);\n                ReverbEngine.logStep(\n                  \"C\",\n                  soundName,\n                  `Created gain node with volume ${volume}`,\n                  sound._id,\n                );\n              }\n\n              // Connect buffer source to our gain node instead of the original destination\n              sound._node.bufferSource.connect(gainNode);\n              ReverbEngine.logStep(\n                \"D\",\n                soundName,\n                \"Connected to reverb gain node\",\n                sound._id,\n              );\n            }\n          };\n        }\n\n        ReverbEngine.initialized = true;\n        if (Sound.initialized) Sound.audioMuted = false;\n\n        const deviceType = ReverbEngine.isMobile() ? \"MOBILE\" : \"DESKTOP\";\n        console.log(\n          `ReverbEngine connection intercept initialized successfully on ${deviceType}`,\n        );\n      } catch (error) {\n        console.error(\"Failed to initialize ReverbEngine:\", error);\n        ReverbEngine.initialized = true;\n        if (Sound.initialized) Sound.audioMuted = false;\n      }\n    }\n  }\n\n  // Load a specified impulse response\n  private static async loadReverbBuffer(filePath: string) {\n    try {\n      const response = await fetch(filePath);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const arrayBuffer = await response.arrayBuffer();\n      ReverbEngine.reverbBuffer =\n        await ReverbEngine.audioContext.decodeAudioData(arrayBuffer);\n    } catch (error) {\n      console.error(\"Error loading reverb buffer:\", error);\n    }\n  }\n\n  // Set the default reverb buffer\n  private static setDefaultReverb() {\n    if (ReverbEngine.reverbBuffer) {\n      ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\n    }\n  }\n\n  /**\n   * Set the reverb characteristics by specifying an impulse response file.\n   * @param filePath - The path to the impulse response file.\n   */\n  public static async setReverbImpulse(filePath: string): Promise<void> {\n    if (!ReverbEngine.initialized) return;\n    try {\n      await ReverbEngine.loadReverbBuffer(filePath);\n      if (ReverbEngine.reverbBuffer) {\n        ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\n      }\n    } catch (error) {\n      console.error(\"Error setting reverb impulse:\", error);\n    }\n  }\n\n  // CONNECTION INTERCEPT APPROACH: The _refreshBuffer hook handles everything\n  public static applyReverb(sound: Howl): number {\n    const soundName = ReverbEngine.getSoundName(sound);\n\n    ReverbEngine.logStep(\n      \"E\",\n      soundName,\n      \"CONNECTION INTERCEPT - _refreshBuffer hook will handle reverb\",\n    );\n\n    if (!ReverbEngine.initialized) {\n      ReverbEngine.logStep(\n        \"E1\",\n        soundName,\n        \"Not initialized, playing without reverb\",\n      );\n      return sound.play();\n    }\n\n    // Mobile check: ensure we have an active audio context\n    if (\n      ReverbEngine.isMobile() &&\n      ReverbEngine.audioContext.state !== \"running\"\n    ) {\n      ReverbEngine.audioContext.resume().catch((error) => {\n        console.warn(\"[REVERB-MOBILE] Could not resume audio context:\", error);\n      });\n    }\n\n    // Just call play normally - our _refreshBuffer hook will handle the rest\n    return sound.play();\n  }\n\n  // Remove reverb from a given Howl sound\n  public static removeReverb(sound: Howl) {\n    const soundName = ReverbEngine.getSoundName(sound);\n\n    // Clean up any gain nodes associated with this sound\n    for (const [soundId, gainNode] of ReverbEngine.gainNodes.entries()) {\n      if (gainNode) {\n        gainNode.disconnect();\n        ReverbEngine.gainNodes.delete(soundId);\n      }\n    }\n\n    ReverbEngine.logStep(\n      \"R\",\n      soundName,\n      \"Reverb removed and gain nodes cleaned up\",\n    );\n  }\n\n  // Cleanup method\n  public static cleanup() {\n    console.log(\"[REVERB-CLEANUP] Starting cleanup\");\n\n    // Restore original _refreshBuffer method\n    if (ReverbEngine.originalRefreshBuffer) {\n      Howl.prototype._refreshBuffer = ReverbEngine.originalRefreshBuffer;\n    }\n\n    // Clean up all gain nodes\n    for (const [soundId, gainNode] of ReverbEngine.gainNodes.entries()) {\n      if (gainNode) {\n        gainNode.disconnect();\n      }\n    }\n    ReverbEngine.gainNodes.clear();\n\n    if (ReverbEngine.convolver) {\n      ReverbEngine.convolver.disconnect();\n    }\n\n    if (\n      ReverbEngine.audioContext &&\n      ReverbEngine.audioContext.state !== \"closed\"\n    ) {\n      ReverbEngine.audioContext.close();\n    }\n    ReverbEngine.initialized = false;\n\n    console.log(\"[REVERB-CLEANUP] Cleanup completed\");\n  }\n}\n","import { Game } from \"../game\";\nimport { ReverbEngine } from \"./reverb\";\nimport { Howl, Howler } from \"howler\";\n\nexport class Sound {\n  static playerStoneFootsteps: Array<Howl>;\n  static playerGrassFootsteps: Array<Howl>;\n  static playerDirtFootsteps: Array<Howl>;\n  static enemyFootsteps: Array<Howl>;\n  static hitSounds: Array<Howl>;\n  static enemySpawnSound: Howl;\n  static chestSounds: Array<Howl>;\n  static coinPickupSounds: Array<Howl>;\n  static miningSounds: Array<Howl>;\n  static breakRockSound: Howl;\n  static hurtSounds: Array<Howl>;\n  static genericPickupSound: Howl;\n  static pushSounds: Array<Howl>;\n  static healSound: Howl;\n  static forestMusic: Howl;\n  static graveSound: Howl;\n  static ambientSound: Howl;\n  static goreSound: Howl;\n  static swingSounds: Array<Howl>;\n  static unlockSounds: Array<Howl>;\n  static doorOpenSounds: Array<Howl>;\n  static potSmashSounds: Array<Howl>;\n  static keyPickupSound: Howl;\n  static magicSound: Howl;\n  static wooshSound: Howl;\n  static initialized: boolean = false;\n  static audioMuted: boolean = true;\n  static bombSounds: Array<Howl>;\n  static fuseBurnSound: Howl;\n  static fuseLoopSound: Howl;\n  static fuseStartSound: Howl;\n  static warHammerSound: Howl;\n  static sliceSound: Array<Howl>;\n  static shortSliceSound: Array<Howl>;\n  static backpackSound: Howl;\n  static smithSound: Howl;\n  static bushSounds: Array<Howl>;\n  static parrySounds: Array<Howl>;\n  static eatSounds: Array<Howl>;\n  static gruntSounds: Array<Howl>;\n\n  static currentlyPlaying: Set<number> = new Set();\n\n  static readonly PRIORITY = {\n    AMBIENT: 1,\n    FOOTSTEPS: 2,\n    INTERACTIONS: 3,\n    COMBAT: 4,\n    CRITICAL: 5,\n  };\n\n  static isMobile: boolean = false;\n  static audioContextResumed: boolean = false;\n  static forestMusicId: number | null = null;\n  static ambientSoundId: number | null = null;\n\n  static detectMobile() {\n    const userAgent =\n      navigator.userAgent || navigator.vendor || (window as any).opera;\n    Sound.isMobile =\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        userAgent,\n      );\n    return Sound.isMobile;\n  }\n\n  static async enableAudioForMobile() {\n    if (Sound.audioContextResumed) return;\n\n    try {\n      if (Howler.ctx && Howler.ctx.state === \"suspended\") {\n        await Howler.ctx.resume();\n        Sound.audioContextResumed = true;\n        console.log(\"AudioContext resumed\");\n      }\n    } catch (error) {\n      console.warn(\"Could not resume AudioContext:\", error);\n    }\n  }\n\n  static addMobileAudioHandlers() {\n    const enableAudio = async () => {\n      await Sound.enableAudioForMobile();\n      if (Sound.audioMuted && ReverbEngine.initialized) {\n        Sound.audioMuted = false;\n        Howler.mute(false);\n      }\n    };\n\n    const events = [\"touchstart\", \"click\", \"keydown\"];\n    const handler = () => {\n      enableAudio();\n      events.forEach((event) => {\n        document.removeEventListener(event, handler);\n      });\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, handler, { once: true });\n    });\n  }\n\n  static toggleMute() {\n    Sound.audioMuted = !Sound.audioMuted;\n    if (Sound.audioMuted) {\n      Howler.mute(true);\n    } else {\n      Howler.mute(false);\n      if (Sound.isMobile) {\n        Sound.enableAudioForMobile();\n      }\n    }\n  }\n\n  static loadSounds = async () => {\n    if (Sound.initialized) return;\n    Sound.initialized = true;\n\n    Sound.detectMobile();\n    if (Sound.isMobile) {\n      Sound.addMobileAudioHandlers();\n    }\n\n    if (ReverbEngine.initialized) {\n      Sound.audioMuted = false;\n    }\n\n    // Optimized Howl creation - always use Web Audio API for better performance\n    const createHowlArray = (\n      basePath: string,\n      indices: number[],\n      volume: number = 1.0,\n      maxConcurrent: number = 3,\n    ): Array<Howl> => {\n      return indices.map((i) => {\n        return new Howl({\n          src: [`${basePath}${i}.mp3`],\n          volume: volume,\n          preload: true,\n          html5: false, // Always use Web Audio API\n          pool: maxConcurrent,\n        });\n      });\n    };\n\n    const createHowl = (\n      src: string,\n      volume: number = 1.0,\n      loop: boolean = false,\n      maxConcurrent: number = 2,\n    ): Howl => {\n      return new Howl({\n        src: [src],\n        volume: volume,\n        preload: true,\n        loop: loop,\n        html5: false, // Always use Web Audio API\n        pool: maxConcurrent,\n      });\n    };\n\n    try {\n      // Load all sounds with optimized settings\n      Sound.magicSound = createHowl(\n        \"res/SFX/attacks/magic2.mp3\",\n        0.25,\n        false,\n        3,\n      );\n      Sound.warHammerSound = createHowl(\n        \"res/SFX/attacks/warhammer.mp3\",\n        1,\n        false,\n        3,\n      );\n      Sound.healSound = createHowl(\"res/SFX/items/powerup1.mp3\", 0.5, false, 1);\n      Sound.eatSounds = createHowlArray(\"res/SFX/items/eat\", [1, 2], 1.0, 5);\n      // Footstep sounds\n      Sound.playerStoneFootsteps = createHowlArray(\n        \"res/SFX/footsteps/stone/footstep\",\n        [1, 2, 3],\n        1.0,\n        4,\n      );\n      Sound.playerGrassFootsteps = createHowlArray(\n        \"res/SFX/footsteps/grass/footstep\",\n        [1, 2, 3, 6],\n        1.0,\n        4,\n      );\n      Sound.playerDirtFootsteps = createHowlArray(\n        \"res/SFX/footsteps/dirt/footstep\",\n        [1, 2, 3, 4, 5],\n        1.0,\n        4,\n      );\n      Sound.enemyFootsteps = createHowlArray(\n        \"res/SFX/footsteps/enemy/enemyfootstep\",\n        [1, 2, 3, 4, 5],\n        1.0,\n        4,\n      );\n\n      // Combat sounds\n      Sound.swingSounds = createHowlArray(\n        \"res/SFX/attacks/swing\",\n        [1, 2, 3, 4],\n        0.5,\n        6,\n      );\n      Sound.hitSounds = createHowlArray(\n        \"res/SFX/attacks/hurt\",\n        [1, 2, 3, 4],\n        0.5,\n        4,\n      );\n      Sound.hurtSounds = [createHowl(\"res/SFX/attacks/hit.mp3\", 0.3, false, 0)];\n      Sound.sliceSound = createHowlArray(\n        \"res/SFX/attacks/slice\",\n        [1, 2, 3],\n        0.5,\n        4,\n      );\n      Sound.shortSliceSound = createHowlArray(\n        \"res/SFX/attacks/sliceShort\",\n        [1, 2, 3],\n        0.5,\n        4,\n      );\n      Sound.parrySounds = createHowlArray(\n        \"res/SFX/attacks/parry\",\n        [1, 2],\n        0.5,\n        3,\n      );\n      Sound.gruntSounds = createHowlArray(\n        \"res/SFX/attacks/grunt\",\n        [1],\n        0.35,\n        1,\n      );\n\n      // Single sounds\n      Sound.enemySpawnSound = createHowl(\n        \"res/SFX/attacks/enemyspawn.mp3\",\n        0.7,\n        false,\n        3,\n      );\n      Sound.wooshSound = createHowl(\n        \"res/SFX/attacks/woosh1.mp3\",\n        0.2,\n        false,\n        3,\n      );\n\n      // Interaction sounds\n      Sound.chestSounds = createHowlArray(\n        \"res/SFX/chest/chest\",\n        [1, 2, 3],\n        0.5,\n        3,\n      );\n      Sound.coinPickupSounds = createHowlArray(\n        \"res/SFX/items/coins\",\n        [1, 2, 3, 4],\n        1.0,\n        5,\n      );\n      Sound.genericPickupSound = createHowl(\n        \"res/SFX/items/pickup.mp3\",\n        0.8,\n        false,\n        3,\n      );\n      Sound.keyPickupSound = createHowl(\n        \"res/SFX/items/keyPickup.mp3\",\n        1.0,\n        false,\n        2,\n      );\n      Sound.backpackSound = createHowl(\n        \"res/SFX/items/backpack.mp3\",\n        0.75,\n        false,\n        2,\n      );\n      Sound.smithSound = createHowl(\"res/SFX/items/smith.mp3\", 0.5, false, 2);\n\n      // Mining sounds\n      Sound.miningSounds = createHowlArray(\n        \"res/SFX/resources/Pickaxe\",\n        [1, 2, 3, 4],\n        0.3,\n        3,\n      );\n      Sound.breakRockSound = createHowl(\n        \"res/SFX/resources/rockbreak.mp3\",\n        1.0,\n        false,\n        2,\n      );\n\n      // Door sounds\n      Sound.unlockSounds = createHowlArray(\"res/SFX/door/unlock\", [1], 0.5, 2);\n      Sound.doorOpenSounds = createHowlArray(\n        \"res/SFX/door/open\",\n        [1, 2],\n        0.5,\n        3,\n      );\n\n      // Object sounds\n      Sound.potSmashSounds = createHowlArray(\n        \"res/SFX/objects/potSmash\",\n        [1, 2, 3],\n        0.5,\n        3,\n      );\n      Sound.bushSounds = createHowlArray(\n        \"res/SFX/objects/plantHit\",\n        [1, 2],\n        0.75,\n        3,\n      );\n      Sound.pushSounds = createHowlArray(\n        \"res/SFX/pushing/push\",\n        [1, 2],\n        1.0,\n        3,\n      );\n\n      // Bomb sounds\n      Sound.bombSounds = createHowlArray(\n        \"res/SFX/attacks/explode\",\n        [1, 2],\n        0.7,\n        3,\n      );\n      Sound.fuseBurnSound = createHowl(\n        \"res/SFX/attacks/fuse.mp3\",\n        0.2,\n        false,\n        2,\n      );\n      Sound.fuseLoopSound = createHowl(\n        \"res/SFX/attacks/fuseLoop.mp3\",\n        0.2,\n        true,\n        1,\n      );\n      Sound.fuseStartSound = createHowl(\n        \"res/SFX/attacks/fuseStart.mp3\",\n        0.2,\n        false,\n        2,\n      );\n\n      // Ambient sounds - critical for mobile\n      Sound.forestMusic = createHowl(\"res/music/forest1.mp3\", 0.25, true, 1);\n      Sound.graveSound = createHowl(\n        \"res/SFX/attacks/skelespawn.mp3\",\n        1.0,\n        false,\n        2,\n      );\n      Sound.ambientSound = createHowl(\n        \"res/SFX/ambient/ambientDark2.mp3\",\n        0.3,\n        true,\n        1,\n      ); // Reduced volume\n      Sound.goreSound = createHowl(\n        \"res/SFX/misc Unused/gore2.mp3\",\n        0.5,\n        false,\n        2,\n      );\n\n      console.log(\"All sounds loaded successfully\");\n    } catch (error) {\n      console.error(\"Error loading sounds:\", error);\n    }\n  };\n\n  static playWithReverb(\n    sound: Howl,\n    priority: number = Sound.PRIORITY.INTERACTIONS,\n  ): number | null {\n    if (Sound.audioMuted) return null;\n\n    try {\n      // Simple volume-based priority system\n      if (\n        Sound.currentlyPlaying.size > 10 &&\n        priority < Sound.PRIORITY.COMBAT\n      ) {\n        return null;\n      }\n\n      let soundId: number | null = null;\n\n      // Always try to use reverb if available and not on mobile\n      if (ReverbEngine.initialized && !Sound.isMobile) {\n        soundId = ReverbEngine.applyReverb(sound);\n      } else {\n        soundId = sound.play();\n      }\n\n      if (soundId) {\n        Sound.currentlyPlaying.add(soundId);\n\n        // Clean up tracking\n        sound.once(\"end\", () => {\n          Sound.currentlyPlaying.delete(soundId);\n        });\n\n        // Fallback cleanup\n        setTimeout(() => {\n          Sound.currentlyPlaying.delete(soundId);\n        }, 5000);\n      }\n\n      return soundId;\n    } catch (error) {\n      console.error(\"Error playing sound:\", error);\n      return null;\n    }\n  }\n\n  static playerStoneFootstep = (environment: number) => {\n    if (Sound.audioMuted) return;\n    let sound = Sound.playerStoneFootsteps;\n    if (environment === 2) sound = Sound.playerGrassFootsteps;\n    if (environment === 1) sound = Sound.playerDirtFootsteps;\n\n    let f = Game.randTable(sound, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.FOOTSTEPS);\n  };\n\n  static enemyFootstep = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.enemyFootsteps, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.FOOTSTEPS);\n  };\n\n  static swing = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.swingSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\n  };\n\n  static hit = (hard: boolean = false) => {\n    if (Sound.audioMuted) return;\n\n    let sounds = Sound.hitSounds.slice(hard ? 2 : 0, hard ? 3 : 2);\n\n    setTimeout(() => {\n      let f = Game.randTable(sounds, Math.random);\n      this.playWithReverb(f, Sound.PRIORITY.COMBAT);\n    }, 100);\n  };\n\n  static hurt = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.hurtSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.CRITICAL);\n  };\n\n  static enemySpawn = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.enemySpawnSound, Sound.PRIORITY.CRITICAL);\n  };\n\n  static chest = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.chestSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static potSmash = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.potSmashSounds, Math.random);\n    this.delayPlay(\n      () => this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS),\n      100,\n    );\n  };\n\n  static pickupCoin = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.coinPickupSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static mine = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.miningSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static breakRock = () => {\n    if (Sound.audioMuted) return;\n    setTimeout(() => {\n      this.playWithReverb(Sound.breakRockSound, Sound.PRIORITY.INTERACTIONS);\n    }, 100);\n  };\n\n  static heal = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.healSound, Sound.PRIORITY.CRITICAL);\n  };\n\n  static genericPickup = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.genericPickupSound, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static keyPickup = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.keyPickupSound, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static push = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.pushSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static skeleSpawn = () => {\n    if (Sound.audioMuted) return;\n    // IMPORTANT: Original implementation set volume to 0.3 in this method\n    Sound.graveSound.volume(0.3);\n    this.playWithReverb(Sound.graveSound, Sound.PRIORITY.CRITICAL);\n  };\n\n  static unlock = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.unlockSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static playForestMusic = (index: number = 0) => {\n    if (Sound.audioMuted) return;\n\n    try {\n      // Stop any existing forest music\n      if (Sound.forestMusicId) {\n        Sound.forestMusic.stop(Sound.forestMusicId);\n      }\n\n      // Play new instance\n      Sound.forestMusicId = Sound.forestMusic.play();\n\n      // Handle mobile audio context\n      if (Sound.isMobile && !Sound.audioContextResumed) {\n        Sound.enableAudioForMobile();\n      }\n    } catch (error) {\n      console.error(\"Error playing forest music:\", error);\n    }\n  };\n\n  static doorOpen = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.doorOpenSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static playAmbient = () => {\n    if (Sound.audioMuted) return;\n\n    try {\n      // Only play if not already playing\n      if (\n        !Sound.ambientSoundId ||\n        !Sound.ambientSound.playing(Sound.ambientSoundId)\n      ) {\n        Sound.ambientSoundId = Sound.ambientSound.play();\n      }\n    } catch (error) {\n      console.error(\"Error playing ambient sound:\", error);\n    }\n  };\n\n  static stopAmbient = () => {\n    if (Sound.ambientSoundId) {\n      Sound.ambientSound.stop(Sound.ambientSoundId);\n      Sound.ambientSoundId = null;\n    }\n  };\n\n  static playFuse = () => {\n    if (Sound.audioMuted) return;\n\n    Sound.fuseStartSound.play();\n\n    Sound.fuseStartSound.once(\"end\", () => {\n      Sound.fuseLoopSound.play();\n    });\n  };\n\n  static stopFuse = () => {\n    Sound.fuseLoopSound.stop();\n    Sound.fuseStartSound.stop();\n  };\n\n  static playGore = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.goreSound, Sound.PRIORITY.COMBAT);\n  };\n\n  static playBomb = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.bombSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.CRITICAL);\n  };\n\n  static playWarHammer = () => {\n    if (Sound.audioMuted) return;\n    this.delayPlay(() => {\n      this.playWithReverb(Sound.hitSounds[2], Sound.PRIORITY.COMBAT);\n    }, 200);\n  };\n\n  static playMagic = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.magicSound, Sound.PRIORITY.COMBAT);\n    this.playWithReverb(Sound.wooshSound, Sound.PRIORITY.COMBAT);\n  };\n\n  static playSlice = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.sliceSound, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\n  };\n\n  static playShortSlice = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.shortSliceSound, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\n  };\n\n  static playBackpack = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.backpackSound, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static playSmith = () => {\n    if (Sound.audioMuted) return;\n    this.playWithReverb(Sound.smithSound, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static playBush = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.bushSounds, Math.random);\n    this.delayPlay(\n      () => this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS),\n      100,\n    );\n  };\n\n  static playParry = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.parrySounds, Math.random);\n    this.delayPlay(() => this.playWithReverb(f, Sound.PRIORITY.CRITICAL), 100);\n  };\n\n  static playEat = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.eatSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\n  };\n\n  static playGrunt = () => {\n    if (Sound.audioMuted) return;\n    let f = Game.randTable(Sound.gruntSounds, Math.random);\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\n  };\n\n  static delayPlay = (method: () => void, delay: number) => {\n    setTimeout(method, delay);\n  };\n\n  static stopSound(sound: Howl) {\n    sound.stop();\n  }\n\n  static stopSoundWithReverb(sound: Howl) {\n    ReverbEngine.removeReverb(sound);\n    this.stopSound(sound);\n  }\n\n  static cleanup() {\n    Sound.currentlyPlaying.clear();\n    Howler.unload();\n  }\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room/room\";\nimport { Player } from \"../player/player\";\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\nimport { Entity } from \"../entity/entity\";\nimport { Enemy } from \"../entity/enemy/enemy\";\n\nexport class Button extends Tile {\n  // all are in grid units\n  w: number;\n  h: number;\n  pressed: boolean;\n  turnsSincePressed: number;\n  linkedDoor: InsideLevelDoor;\n\n  constructor(room: Room, x: number, y: number, linkedDoor: InsideLevelDoor) {\n    super(room, x, y);\n    this.w = 1;\n    this.h = 1;\n\n    this.pressed = false;\n    this.turnsSincePressed = 1;\n\n    this.linkedDoor = linkedDoor;\n  }\n\n  press = () => {\n    this.pressed = true;\n    this.linkedDoor.opened = true;\n  };\n\n  unpress = () => {\n    this.pressed = false;\n    this.linkedDoor.opened = false;\n  };\n\n  onCollide = (player: Player) => {\n    this.press();\n  };\n\n  onCollideEnemy = (enemy: Enemy) => {\n    this.press();\n  };\n\n  tickEnd = () => {\n    this.unpress();\n    for (const i in this.room.game.players) {\n      if (\n        this.room.game.players[i].x === this.x &&\n        this.room.game.players[i].y === this.y\n      )\n        this.press();\n    }\n    for (const e of this.room.entities) {\n      if (e.x === this.x && e.y === this.y) this.press();\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      0,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.pressed)\n      Game.drawTile(\n        18,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        17,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Room } from \"../room/room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Chasm extends Tile {\n  tileX: number;\n  tileY: number;\n  topEdge: boolean;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    leftEdge: boolean,\n    rightEdge: boolean,\n    topEdge: boolean,\n    bottomEdge: boolean,\n  ) {\n    super(room, x, y);\n\n    this.tileX = this.skin === 1 ? 24 : 20;\n    this.tileY = 1;\n\n    if (leftEdge) this.tileX--;\n    else if (rightEdge) this.tileX++;\n    if (topEdge) this.tileY--;\n    else if (bottomEdge) this.tileY++;\n\n    this.topEdge = topEdge;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.topEdge)\n      Game.drawTile(\n        22,\n        0,\n        1,\n        2,\n        this.x,\n        this.y,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawTile(\n      this.tileX,\n      this.tileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Room } from \"../../room/room\";\nimport { Player } from \"../../player/player\";\nimport { Entity } from \"../../entity/entity\";\nimport { Drawable } from \"../../drawable/drawable\";\nimport { GameConstants } from \"../../game/gameConstants\";\nimport { Game } from \"../../game\";\n\nexport enum SkinType {\n  DUNGEON = 0,\n  CAVE = 1,\n  FOREST = 2,\n  SWAMP = 3,\n  GLACIER = 4,\n  CASTLE = 5,\n}\n\nexport abstract class Decoration extends Drawable {\n  x: number;\n  y: number;\n  room: Room;\n  skin: SkinType;\n  isDoor: boolean;\n  opacity: number;\n  applySkin: boolean;\n\n  constructor(room: Room, x: number, y: number) {\n    super();\n    this.skin = room.skin;\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.isDoor = false;\n    this.opacity = 1;\n    this.applySkin = false;\n  }\n\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\n  };\n\n  isSolid = (): boolean => {\n    return false;\n  };\n  canCrushEnemy = (): boolean => {\n    return false;\n  };\n  isOpaque = (): boolean => {\n    return false;\n  };\n  onCollide = (player: Player) => {};\n  onCollideEnemy = (enemy: Entity) => {};\n  tick = () => {};\n  tickEnd = () => {};\n\n  draw = (delta: number) => {};\n  drawUnderPlayer = (delta: number) => {\n    let tileY = 1;\n    if (this.applySkin) tileY = this.skin;\n\n    Game.drawTile(\n      1,\n      tileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n  drawAbovePlayer = (delta: number) => {};\n  drawAboveShading = (delta: number) => {};\n}\n","import { Player } from \"../player/player\";\nimport { Direction, Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { EntityType } from \"../entity/entity\";\nimport { Key } from \"../item/key\";\nimport { Sound } from \"../sound/sound\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { GameplaySettings } from \"../game/gameplaySettings\";\n\nexport enum DoorDir {\n  North = \"North\",\n  East = \"East\",\n  South = \"South\",\n  West = \"West\",\n}\n\nexport enum DoorType {\n  DOOR,\n  LOCKEDDOOR,\n  GUARDEDDOOR,\n  TUNNELDOOR,\n}\n\nexport class Door extends Tile {\n  linkedDoor: Door;\n  game: Game;\n  opened: boolean;\n  doorDir: Direction;\n  guarded: boolean;\n  type: DoorType;\n  locked: boolean;\n  iconTileX: number;\n  iconXOffset: number;\n  iconYOffset: number;\n  unlocking: boolean;\n  iconAlpha: number;\n  frame: number;\n  tileXOffset: number;\n  tileX: number;\n  drawTopOf: boolean;\n  lightSource: LightSource;\n  alpha: number;\n  keyID: number;\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    doorDir: Direction,\n    doorType: DoorType,\n  ) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n    this.doorDir = doorDir;\n    this.locked = false;\n    this.isDoor = true;\n    this.type = doorType;\n    this.iconTileX = 2;\n    this.iconXOffset = 0;\n    this.iconYOffset = 0;\n    this.unlocking = false;\n    this.iconAlpha = 1;\n    this.frame = 0;\n    this.tileXOffset = 0;\n    this.tileX = 2;\n    this.drawTopOf = true;\n    let lightOffsetX = 0;\n    let lightOffsetY = 0;\n    this.alpha = 1;\n    this.keyID = 0;\n    switch (this.doorDir) {\n      case Direction.UP:\n        lightOffsetY = -0.5;\n      case Direction.DOWN:\n        lightOffsetY = 0.5;\n      case Direction.LEFT:\n        lightOffsetX = -0.5;\n      case Direction.RIGHT:\n        lightOffsetX = 0.5;\n    }\n    this.lightSource = new LightSource(x + 0.5, y + 0.5, 0, [0, 0, 0], 9);\n    this.room.lightSources.push(this.lightSource);\n\n    switch (this.type) {\n      case DoorType.GUARDEDDOOR:\n        if (GameplaySettings.NO_ENEMIES) break;\n        this.guard();\n        break;\n      case DoorType.LOCKEDDOOR:\n        this.lock();\n        break;\n      case DoorType.DOOR:\n        this.removeLock();\n        break;\n      case DoorType.TUNNELDOOR:\n        // this.tileX = ? find the right tile for this\n        this.locked = true;\n        this.iconTileX = 10;\n        this.iconXOffset = 1 / 32;\n        this.tileXOffset = 12;\n        this.drawTopOf = false;\n        break;\n    }\n  }\n\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\n    const vis = this.room.softVis[this.x + offsetX][this.y + offsetY];\n    if (this.opened) return vis / 2;\n    else return vis;\n  };\n\n  openTunnelXOffset = () => {\n    if (this.type === DoorType.TUNNELDOOR) {\n      if (!this.opened) {\n        return 0;\n      } else {\n        return -3;\n      }\n    }\n    return 0;\n  };\n\n  guard = () => {\n    this.type = DoorType.GUARDEDDOOR;\n    this.locked = true;\n    this.iconTileX = 9;\n    this.iconXOffset = 1 / 32;\n  };\n\n  lock = () => {\n    this.type = DoorType.LOCKEDDOOR;\n    this.locked = true;\n    this.iconTileX = 10;\n    this.iconXOffset = 1 / 32;\n  };\n\n  removeLock = () => {\n    if (this.type !== DoorType.TUNNELDOOR) this.type = DoorType.DOOR;\n    this.locked = false;\n  };\n\n  removeLockIcon = () => {\n    this.iconYOffset = 0;\n    this.unlocking = false;\n    this.iconTileX = 2;\n    this.iconXOffset = 0;\n    this.iconAlpha = 1;\n  };\n\n  canUnlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        if (k.doorID === this.keyID) {\n          this.game.pushMessage(\"You use the key to unlock the door.\");\n          return true;\n        } else {\n          this.game.pushMessage(\"The key doesn't fit the lock.\");\n          return false;\n        }\n      } else\n        this.game.pushMessage(\"The door is locked tightly and won't budge.\");\n      return false;\n    }\n\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.room.checkForNoEnemies();\n      this.game.pushMessage(\n        \"There are still remaining foes guarding this door...\",\n      );\n      return false;\n    }\n\n    if (\n      this.type === DoorType.TUNNELDOOR &&\n      (!this.opened || !this.linkedDoor.opened)\n    ) {\n      if (this.linkedDoor === this.room.level.exitRoom.tunnelDoor) {\n        this.game.pushMessage(\"The door refuses to budge from this side.\");\n        return false;\n      } else {\n        this.game.pushMessage(\n          \"You clear the debris, revealing a narrow tunnel.\",\n        );\n        return true;\n      }\n    }\n    return true;\n  };\n\n  unlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        // remove key\n        player.inventory.removeItem(k);\n        Sound.unlock();\n        this.removeLock();\n        this.unlocking = true;\n      }\n    } else if (this.type === DoorType.TUNNELDOOR) {\n      this.locked = false;\n      this.unlocking = true;\n    }\n  };\n\n  unGuard = () => {\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.removeLock();\n      Sound.unlock();\n\n      this.game.tutorialActive = false;\n    }\n    setTimeout(() => {\n      this.removeLockIcon();\n    }, 1000);\n  };\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  isSolid = (): boolean => {\n    if (this.locked) {\n      return true;\n    } else false;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    if (!this.opened) {\n      Sound.doorOpen();\n    }\n    this.opened = true;\n\n    this.linkedDoor.opened = true;\n\n    if (this.doorDir === Direction.UP || this.doorDir === Direction.DOWN) {\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\n    } else\n      this.game.changeLevelThroughDoor(\n        player,\n        this.linkedDoor,\n        this.linkedDoor.room.roomX - this.room.roomX > 0 ? 1 : -1,\n      );\n    this.linkedDoor.removeLock();\n    this.linkedDoor.removeLockIcon();\n    this.removeLockIcon();\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.save();\n\n    if (this.doorDir === Direction.DOWN) {\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (this.opened)\n        Game.drawTile(\n          6 + this.tileXOffset + this.openTunnelXOffset(),\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n      else\n        Game.drawTile(\n          3 + this.tileXOffset + this.openTunnelXOffset(),\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n    }\n    if (this.doorDir !== Direction.UP)\n      //if not top door\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    //the following used to be in the drawaboveplayer function\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (!this.drawTopOf) return;\n      if (!this.opened)\n        Game.drawTile(\n          13,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n      else\n        Game.drawTile(\n          14,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(0, 1),\n        );\n    }\n    Game.ctx.restore();\n  };\n\n  drawAbovePlayer = (delta: number) => {};\n\n  drawAboveShading = (delta: number) => {\n    //if (this.type === DoorType.TUNNELDOOR) return;\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1 * delta;\n    Game.ctx.globalAlpha = this.iconAlpha;\n    let multiplier = 0.125;\n    if (this.unlocking === true) {\n      this.iconAlpha *= 0.92 ** delta;\n      this.iconYOffset -= 0.035 * delta;\n      multiplier = 0;\n      if (this.iconAlpha <= 0.01) {\n        this.removeLockIcon();\n      }\n    }\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      );\n    } else {\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      ); //if not top door\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Player } from \"../player/player\";\nimport { ChatMessage, Game } from \"../game\";\nimport { Room, RoomType } from \"../room/room\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { UpLadder } from \"./upLadder\";\nimport { EVENTS } from \"../event/events\";\nimport { EventEmitter } from \"../event/eventEmitter\";\nimport { globalEventBus } from \"../event/eventBus\";\nimport { Sound } from \"../sound/sound\";\n\nexport class DownLadder extends Tile {\n  linkedRoom: Room;\n  game: Game;\n  isSidePath = false;\n  frame: number = 0;\n  depth: number;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    isSidePath: boolean = false,\n  ) {\n    super(room, x, y);\n    this.game = game;\n    this.linkedRoom = null;\n    this.depth = room.depth;\n    this.isSidePath = isSidePath;\n  }\n\n  getName = () => {\n    return this.isSidePath ? \"rope down\" : \"staircase down\";\n  };\n\n  generate = async () => {\n    if (!this.linkedRoom) {\n      const targetDepth = this.room.depth + (this.isSidePath ? 0 : 1);\n      await this.game.levelgen.generate(\n        this.game,\n        targetDepth,\n        this.isSidePath,\n        this.handleLinkedRoom,\n      );\n    } else {\n      console.log(\"LinkedRoom already exists:\", this.linkedRoom);\n    }\n  };\n\n  private handleLinkedRoom = (linkedRoom: Room) => {\n    if (this.isSidePath) {\n      this.handleSidePathRooms(linkedRoom);\n    }\n\n    this.linkedRoom = linkedRoom;\n    this.linkUpLadder();\n  };\n\n  private handleSidePathRooms = (linkedRoom: Room) => {\n    const targetDepth = this.room.depth;\n    const level = linkedRoom.level; //this.game.levels[targetDepth];\n\n    const sidePathRooms = this.game.rooms.filter(\n      (room) => room.mapGroup === linkedRoom.mapGroup,\n    );\n    console.log(\"sidePathRooms\", sidePathRooms.length);\n    console.log(\"level.rooms.length\", level.rooms.length);\n    const startingId = level.rooms.length;\n    sidePathRooms.forEach((room, index) => {\n      room.id = startingId + index;\n      level.rooms.push(room);\n    });\n  };\n\n  private linkUpLadder = () => {\n    for (\n      let x = this.linkedRoom.roomX;\n      x < this.linkedRoom.roomX + this.linkedRoom.width;\n      x++\n    ) {\n      for (\n        let y = this.linkedRoom.roomY;\n        y < this.linkedRoom.roomY + this.linkedRoom.height;\n        y++\n      ) {\n        let tile = this.linkedRoom.roomArray[x][y];\n\n        if (tile instanceof UpLadder) {\n          this.setUpLadderLink(tile);\n          return; // Exit both loops\n        }\n      }\n    }\n  };\n\n  private setUpLadderLink = (upLadder: UpLadder) => {\n    if (this.isSidePath) {\n      upLadder.linkedRoom = this.room;\n    } else {\n      upLadder.linkedRoom = this.game.levels[this.room.depth].exitRoom;\n    }\n  };\n\n  onCollide = (player: Player) => {\n    let allPlayersHere = true;\n    for (const i in this.game.players) {\n      if (\n        this.game.levels[this.game.players[i].depth].rooms[\n          this.game.players[i].levelID\n        ] !== this.room ||\n        this.game.players[i].x !== this.x ||\n        this.game.players[i].y !== this.y\n      ) {\n        allPlayersHere = false;\n      }\n    }\n    if (allPlayersHere) {\n      globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\n      this.generate().then(() => {\n        globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\n        for (const i in this.game.players) {\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\n        }\n      });\n    } else {\n      if (player === this.game.players[this.game.localPlayerID])\n        this.game.chat.push(new ChatMessage(\"all players must be present\"));\n    }\n  };\n\n  draw = (delta: number) => {\n    let xx = 4;\n    if (this.isSidePath) xx = 16;\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    Game.drawTile(\n      xx,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawAboveShading = (delta: number) => {\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1 * delta;\n    let multiplier = 0.125;\n\n    Game.drawFX(\n      2,\n      2,\n      1,\n      1,\n      this.x,\n      this.y - 1.25 + multiplier * Math.sin((this.frame * Math.PI) / 50),\n      1,\n      1,\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {};\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room/room\";\n\nexport class Floor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n    if (this.skin == SkinType.FOREST)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Room } from \"../room/room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class FountainTile extends Tile {\n  subTileX: number; // each fountain is 3x3, this is the sub-tile coordinate\n  subTileY: number;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    subTileX: number,\n    subTileY: number,\n  ) {\n    super(room, x, y);\n    this.subTileX = subTileX;\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    Game.drawTile(\n      this.subTileX,\n      2 + this.subTileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport class InsideLevelDoor extends Tile {\n  game: Game;\n  opened: boolean;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n  }\n\n  isSolid = (): boolean => {\n    return !this.opened;\n  };\n  canCrushEnemy = (): boolean => {\n    return !this.opened;\n  };\n  isOpaque = (): boolean => {\n    return !this.opened;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      0,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.opened)\n      Game.drawTile(\n        15,\n        1,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        3,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (!this.opened)\n      Game.drawTile(\n        13,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        14,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room/room\";\n\nexport class SpawnFloor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Tile } from \"./tile\";\nimport { Entity } from \"../entity/entity\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { HitWarning } from \"../drawable/hitWarning\";\n\nexport class SpikeTrap extends Tile {\n  on: boolean;\n  tickCount: number;\n  frame: number;\n  t: number;\n\n  constructor(room: Room, x: number, y: number, tickCount?: number) {\n    super(room, x, y);\n    if (tickCount) this.tickCount = tickCount;\n    else this.tickCount = 0;\n    this.on = false;\n    this.frame = 0;\n    this.t = 0;\n    this.name = \"spike trap\";\n  }\n\n  tick = () => {\n    this.tickCount++;\n    if (this.tickCount >= 4) this.tickCount = 0;\n    this.on = this.tickCount === 0;\n\n    if (this.on) {\n      for (const i in this.room.game.players) {\n        if (\n          this.room ===\n            this.room.game.rooms[this.room.game.players[i].levelID] &&\n          this.room.game.players[i].x === this.x &&\n          this.room.game.players[i].y === this.y\n        )\n          this.room.game.players[i].hurt(0.5, \"spike trap\");\n      }\n    }\n\n    if (this.tickCount === 3)\n      this.room.hitwarnings.push(\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y, false),\n      );\n  };\n\n  tickEnd = () => {\n    if (this.on) {\n      for (const e of this.room.entities) {\n        if (e.x === this.x && e.y === this.y) {\n          e.hurt(null, 1);\n        }\n      }\n    }\n  };\n\n  onCollideEnemy = (enemy: Entity) => {\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel))\n      enemy.hurt(null, 1);\n  };\n\n  draw = (delta: number) => {\n    this.drawableY = this.y - 0.01;\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n\n    let rumbleOffsetX = 0;\n    this.t += delta;\n    if (!this.on && this.tickCount === 3) {\n      if (Math.floor(this.t) % 4 === 1) rumbleOffsetX = 0.0325;\n      if (Math.floor(this.t) % 4 === 3) rumbleOffsetX = -0.0325;\n    }\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\n    let f = 6 + frames[Math.floor(this.frame)];\n    if (\n      this.tickCount === 1 ||\n      (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)\n    ) {\n      f = 5;\n    }\n    Game.drawObj(\n      f,\n      0,\n      1,\n      2,\n      this.x + rumbleOffsetX,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.on && this.frame < frames.length - 1) {\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\n      else this.frame += 0.2 * delta;\n    }\n    if (!this.on) this.frame = 0;\n  };\n}\n","import { Room } from \"../room/room\";\nimport { Player } from \"../player/player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable/drawable\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport enum SkinType {\n  DUNGEON = 0,\n  CAVE = 1,\n  FOREST = 2,\n  SWAMP = 3,\n  GLACIER = 4,\n  CASTLE = 5,\n}\n\nexport abstract class Tile extends Drawable {\n  x: number;\n  y: number;\n  room: Room;\n  skin: SkinType;\n  isDoor: boolean;\n  opacity: number;\n  name: string = \"\";\n\n  constructor(room: Room, x: number, y: number) {\n    super();\n    this.skin = room.skin;\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.isDoor = false;\n    this.opacity = 1;\n  }\n\n  getName = () => {\n    return this.name;\n  };\n\n  hasPlayer = (player: Player) => {\n    if (player.x === this.x && player.y === this.y) return true;\n    else return false;\n  };\n\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\n  };\n\n  isSolid = (): boolean => {\n    return false;\n  };\n  canCrushEnemy = (): boolean => {\n    return false;\n  };\n  isOpaque = (): boolean => {\n    return false;\n  };\n  onCollide = (player: Player) => {};\n  onCollideEnemy = (enemy: Entity) => {};\n  tick = () => {};\n  tickEnd = () => {};\n\n  draw = (delta: number) => {};\n  drawUnderPlayer = (delta: number) => {};\n  drawAbovePlayer = (delta: number) => {};\n  drawAboveShading = (delta: number) => {};\n}\n","import { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { Player } from \"../player/player\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Tile } from \"./tile\";\n\nexport class Trapdoor extends Tile {\n  game: Game;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      13,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  onCollide = (player: Player) => {\n    // TODO\n  };\n}\n","import { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { DownLadder } from \"./downLadder\";\nimport { Sound } from \"../sound/sound\";\n\nexport class UpLadder extends Tile {\n  linkedRoom: Room;\n  game: Game;\n  isRope = false;\n  depth: number;\n  frame: number = 0;\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.depth = room.depth;\n  }\n\n  onCollide = (player: Player) => {\n    if (!this.game) {\n      console.error(\"Game instance is undefined in UpLadder:\", this);\n      return;\n    }\n    try {\n      if (!this.linkedRoom) {\n        this.linkRoom();\n      }\n      this.game.changeLevelThroughLadder(player, this);\n      Sound.forestMusic.pause();\n    } catch (error) {\n      console.error(\"Error during changeLevelThroughLadder:\", error);\n    }\n  };\n\n  getName = () => {\n    return this.isRope ? \"rope up\" : \"staircase up\";\n  };\n\n  linkRoom = () => {\n    this.linkedRoom = this.game.levels[this.depth - 1].exitRoom;\n  };\n\n  draw = (delta: number) => {\n    let xx = 29;\n    let yy = 0;\n    if (this.isRope) {\n      xx = 16;\n      yy = 1;\n    }\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (!this.isRope)\n      Game.drawTile(\n        xx,\n        yy,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawTile(\n      xx,\n      yy + 1,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawAboveShading = (delta: number) => {\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1 * delta;\n    let multiplier = 0.125;\n\n    Game.drawFX(\n      2,\n      2,\n      1,\n      1,\n      this.x,\n      this.y - 1.25 + multiplier * Math.sin((this.frame * Math.PI) / 50),\n      1,\n      1,\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.isRope)\n      Game.drawTile(\n        16,\n        1,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { Room, WallDirection } from \"../room/room\";\nimport { Door, DoorDir } from \"./door\";\nimport { Tile } from \"./tile\";\nimport { WallInfo } from \"../room/room\";\n\nexport class Wall extends Tile {\n  private tileXOffset: number;\n  wallDirections: Array<WallDirection>;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    wallDirections?: Array<WallDirection>,\n  ) {\n    super(room, x, y);\n    this.isDoor = false;\n    this.tileXOffset = 6;\n    this.wallDirections = wallDirections || [];\n    this.opacity = 1;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    const wallInfo = this.wallInfo();\n    if (!wallInfo) return false;\n    return (\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\n      wallInfo.isLeftWall ||\n      wallInfo.isRightWall\n    );\n  };\n\n  isInnerWall = (): boolean => {\n    const wallInfo = this.wallInfo();\n    return wallInfo?.isInnerWall || false;\n  };\n\n  get direction() {\n    let directions = [];\n    if (this.room.roomArray[this.x - 1][this.y] == null)\n      directions.push(Direction.LEFT);\n    if (this.room.roomArray[this.x + 1][this.y] == null)\n      directions.push(Direction.RIGHT);\n    if (this.room.roomArray[this.x][this.y - 1] == null)\n      directions.push(Direction.DOWN);\n    if (this.room.roomArray[this.x][this.y + 1] == null)\n      directions.push(Direction.UP);\n    if (directions.length == 1) return directions[0];\n    if (\n      directions.includes(Direction.UP) &&\n      directions.includes(Direction.LEFT)\n    ) {\n      this.opacity = 0.5;\n      return Direction.UP_LEFT;\n    }\n    if (\n      directions.includes(Direction.UP) &&\n      directions.includes(Direction.RIGHT)\n    ) {\n      this.opacity = 0.5;\n      return Direction.UP_RIGHT;\n    }\n    if (\n      directions.includes(Direction.DOWN) &&\n      directions.includes(Direction.LEFT)\n    ) {\n      this.opacity = 0.5;\n      return Direction.DOWN_LEFT;\n    }\n    return Direction.DOWN_RIGHT;\n  }\n\n  wallInfo = () => {\n    return this.room.wallInfo.get(`${this.x},${this.y}`);\n  };\n\n  draw = (delta: number) => {\n    this.drawWall(delta);\n  };\n\n  drawWall = (delta: number) => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return;\n\n    // Set tileYOffset based on inner wall type\n    this.tileXOffset =\n      wallInfo.innerWallType === \"bottomInner\" ||\n      wallInfo.innerWallType === \"surroundedInner\"\n        ? 0\n        : 26;\n\n    // Only draw the bottom part of the wall if it's not at the bottom edge of the room\n    if (\n      wallInfo.isDoorWall ||\n      wallInfo.isBelowDoorWall ||\n      (wallInfo.isTopWall && !wallInfo.isLeftWall && !wallInfo.isRightWall) ||\n      wallInfo.isInnerWall\n    )\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(), //this.room.softVis[this.x][this.y + 1],\n      );\n\n    Game.drawTile(\n      2 + this.tileXOffset,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y - 1,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawTopLayer = (delta: number) => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return;\n    if (\n      wallInfo.isBottomWall ||\n      wallInfo.isBelowDoorWall ||\n      wallInfo.isAboveDoorWall\n    ) {\n      Game.drawTile(\n        2 + this.tileXOffset,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(), //this.room.softVis[this.x][this.y + 1],\n      );\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\nimport { Room } from \"../room/room\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { LevelConstants } from \"../level/levelConstants\";\nimport { Wall } from \"./wall\";\n\nexport class WallTorch extends Wall {\n  frame: number;\n  private tileYOffset: number;\n  private isBottomWall: boolean;\n  private torchOffset: number;\n\n  constructor(room: Room, x: number, y: number, isBottomWall?: boolean) {\n    super(room, x, y);\n\n    this.isBottomWall = isBottomWall;\n    this.torchOffset = isBottomWall ? 1 : 0;\n    this.room.lightSources.push(\n      new LightSource(\n        this.x + 0.5,\n        this.y + 0.5 - this.torchOffset,\n        5,\n        LevelConstants.TORCH_LIGHT_COLOR,\n        1.5,\n      ),\n    );\n    this.frame = Math.random() * 12;\n    this.tileYOffset = 6;\n    this.hasBloom = true;\n    this.bloomColor = \"#FFA500\";\n    this.bloomAlpha = 1;\n    this.softBloomAlpha = 0;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return true;\n    return (\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\n      wallInfo.isLeftWall ||\n      wallInfo.isRightWall\n    );\n  };\n\n  draw = (delta: number) => {\n    this.drawWall(delta);\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) this.tileYOffset = 6;\n    this.frame += 0.3 * delta;\n    if (this.frame >= 12) this.frame = 0;\n\n    this.tileYOffset =\n      wallInfo.innerWallType === \"bottomInner\" ||\n      wallInfo.innerWallType === \"surroundedInner\"\n        ? 0\n        : 6;\n    if (!this.isBottomWall) {\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n\n    Game.drawFX(\n      Math.floor(this.frame),\n      32,\n      1,\n      2,\n      this.x,\n      this.y - 1 - this.torchOffset,\n      1,\n      2,\n    );\n\n    if (this.isBottomWall) {\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y - 0.6,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n}\n","const tips = [\n  \"Too dark? Equip a light source to light up the area around you.\",\n\n  \"Red X's show dangerous tiles, stay off of them to avoid taking damage.\",\n\n  \"If you kill an enemy, it can't hit you on the next turn.\",\n\n  \"Use weapon fragments on your weapon to repair broken weapons.\",\n\n  \"A yellow box around an item means it can be used on another item.\",\n\n  \"Lanterns can be refueled with coal.\",\n\n  \"Some objects can be pushed and kill enemies by crushing them.\",\n\n  \"Reapers spawn other enemies. Target them first to avoid being overrun.\",\n\n  \"Occultists apply a purple occult shield to enemies, giving them an extra health.\",\n\n  \"Killing an Occultist also removes the shields of each shielded enemy.\",\n\n  \"Some enemies have helmets, giving them extra health.\",\n\n  \"The shield absorbs one damage, and regenerates within 15 turns.\",\n\n  \"Explore alternate pathways like caves to gather resources to prepare for tough battles.\",\n\n  \"Vending machine sell useful items in exchange for coins.\",\n\n  \"Different enemies have different movement and attack patterns.\",\n\n  \"Frogs can only deal half damage, but can attack two tiles away in any direction.\",\n\n  \"Sometimes you will need to switch weapons mid-fight to use the best one for the situation.\",\n\n  \"Once you reach the end of a level you can get back to the beginning easily through tunnel doors.\",\n\n  \"Dual daggers give you an extra turn. After attacking you can attack or move again.\",\n\n  \"The Warhammer does two damage for taking out enemies with more than one health.\",\n\n  \"The spear has an attack range of two, so you can hit enemies from a safe distance.\",\n\n  \"Bombs can be placed to blow up enemies, just be sure to avoid blowing yourself up.\",\n\n  \"Mushrooms heal one half health.\",\n\n  \"Weapon blood can be applied to your weapon, giving it a powerful bleed effect upon attacking.\",\n\n  \"Weapon poison can be applied to your weapon poisoning enemies upon attacking.\",\n\n  \"The spellbook can attack multiple enemies from long range, great for getting out of tough situations.\",\n\n  \"Bishops can move diagonally and might sneak up on you if you aren't careful.\",\n\n  \"Rooks can move every turn and attack from any direction.\",\n\n  \"Queens can move any direction and have two health, but retreat when hit.\",\n\n  \"Dark? Equip light source.\",\n\n  \"Red X = danger. Avoid.\",\n\n  \"Kill enemy = safe next turn.\",\n\n  \"Use fragments to repair weapons.\",\n\n  \"Yellow box = usable on items.\",\n\n  \"Coal refuels lanterns.\",\n\n  \"Push objects to crush enemies.\",\n\n  \"Kill reapers first - they spawn enemies.\",\n\n  \"Occultists give enemies purple shields.\",\n\n  \"Kill occultist = remove all shields.\",\n\n  \"Helmets = extra enemy health.\",\n\n  \"Shield: 1 damage, regens in 15 turns.\",\n\n  \"Explore caves for resources.\",\n\n  \"Vending machines: coins for items.\",\n\n  \"Enemies have unique patterns.\",\n\n  \"Frogs: half damage, 2-tile range.\",\n\n  \"Switch weapons mid-fight.\",\n\n  \"Tunnel doors = quick return to start.\",\n\n  \"Dual daggers = extra turn after attack.\",\n\n  \"Warhammer: 2 damage vs multi-health.\",\n\n  \"Spear: 2-tile range.\",\n\n  \"Bombs blow up enemies (not you).\",\n\n  \"Mushrooms: heal 0.5 health.\",\n\n  \"Weapon blood = bleed effect.\",\n\n  \"Weapon poison = poison effect.\",\n\n  \"Spellbook: multi-enemy, long range.\",\n\n  \"Bishops: diagonal movement.\",\n\n  \"Rooks: move every turn, any direction.\",\n\n  \"Queens: 2 health, retreat when hit.\",\n];\n\nexport class Tips {\n  static getRandomTip(): string {\n    return tips[Math.floor(Math.random() * tips.length)];\n  }\n}\n","import { EntityDirection } from \"../entity/entity\";\nimport { Direction } from \"../game\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Wall } from \"../tile/wall\";\n\nexport namespace astar {\n  //================== start graph js\n  /* \n  graph.js http://github.com/bgrins/javascript-astar\n  MIT License\n  Creates a Graph class used in the astar search algorithm.\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \n      URL: http://eloquentjavascript.net/appendix2.html\n      License: http://creativecommons.org/licenses/by/3.0/\n  */\n\n  export interface Position {\n    x: number;\n    y: number;\n  }\n\n  export enum GraphNodeType {\n    WALL,\n    OPEN,\n  }\n\n  let getTileCost = (tile) => {\n    if (tile) return tile.isSolid() || tile.isDoor ? 99999999 : 300;\n    else return 99999999;\n  };\n\n  export class Graph {\n    nodes: GraphNode[][];\n    elements: number[][];\n\n    constructor(grid: number[][]) {\n      this.elements = grid;\n      var nodes: GraphNode[][] = [];\n      var row: number[],\n        rowLength: number,\n        len = grid.length;\n      for (var x = 0; x < len; ++x) {\n        row = grid[x];\n        rowLength = row.length;\n        nodes[x] = new Array(rowLength); // optimum array with size\n        for (var y = 0; y < rowLength; ++y) {\n          nodes[x][y] = new GraphNode(x, y, row[y]);\n        }\n      }\n      this.nodes = nodes;\n    }\n\n    toString(): string {\n      var graphString = \"\\n\";\n      var nodes = this.nodes;\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\n      for (var x = 0, len = nodes.length; x < len; ) {\n        rowDebug = \"\";\n        row = nodes[x++];\n        for (y = 0, l = row.length; y < l; ) {\n          rowDebug += row[y++].type + \" \";\n        }\n        graphString = graphString + rowDebug + \"\\n\";\n      }\n      return graphString;\n    }\n  }\n\n  export class GraphNode {\n    x: number;\n    y: number;\n    type: GraphNodeType;\n    data: any;\n    pos: Position;\n\n    constructor(x: number, y: number, type: GraphNodeType) {\n      this.data = {};\n      this.x = x;\n      this.y = y;\n      this.pos = { x: x, y: y };\n      this.type = type;\n    }\n\n    toString(): string {\n      return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    isWall() {\n      return this.type == GraphNodeType.WALL;\n    }\n  }\n\n  export class BinaryHeap {\n    content: any[];\n    scoreFunction: (node: any) => number;\n\n    constructor(scoreFunction: (node: any) => number) {\n      this.content = [];\n      this.scoreFunction = scoreFunction;\n    }\n\n    push(node: any) {\n      // Add the new node to the end of the array.\n      this.content.push(node);\n      // Allow it to sink down.\n      this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n      // Store the first node so we can return it later.\n      var result = this.content[0];\n      // Get the node at the end of the array.\n      var end = this.content.pop();\n      // If there are any elements left, put the end node at the\n      // start, and let it bubble up.\n      if (this.content.length > 0) {\n        this.content[0] = end;\n        this.bubbleUp(0);\n      }\n      return result;\n    }\n\n    remove(node: any) {\n      var i = this.content.indexOf(node);\n\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      if (i !== this.content.length - 1) {\n        this.content[i] = end;\n        if (this.scoreFunction(end) < this.scoreFunction(node))\n          this.sinkDown(i);\n        else this.bubbleUp(i);\n      }\n    }\n\n    size() {\n      return this.content.length;\n    }\n\n    rescoreElement(node: any) {\n      this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n: number) {\n      // Fetch the element that has to be sunk.\n      var element = this.content[n];\n      // When at 0, an element can not sink any further.\n      while (n > 0) {\n        // Compute the parent element's index, and fetch it.\n        var parentN = ((n + 1) >> 1) - 1,\n          parent = this.content[parentN];\n        // Swap the elements if the parent is greater.\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n          this.content[parentN] = element;\n          this.content[n] = parent;\n          // Update 'n' to continue at the new position.\n          n = parentN;\n        } else {\n          // Found a parent that is less, no need to sink any further.\n          break;\n        }\n      }\n    }\n\n    bubbleUp(n: number) {\n      // Look up the target element and its score.\n      var length = this.content.length,\n        element = this.content[n],\n        elemScore = this.scoreFunction(element);\n\n      while (true) {\n        // Compute the indices of the child elements.\n        var child2N = (n + 1) << 1,\n          child1N = child2N - 1;\n        // This is used to store the new position of the element,\n        // if any.\n        var swap = null;\n        // If the first child exists (is inside the array)...\n        if (child1N < length) {\n          // Look it up and compute its score.\n          var child1 = this.content[child1N],\n            child1Score = this.scoreFunction(child1);\n          // If the score is less than our element's, we need to swap.\n          if (child1Score < elemScore) swap = child1N;\n        }\n        // Do the same checks for the other child.\n        if (child2N < length) {\n          var child2 = this.content[child2N],\n            child2Score = this.scoreFunction(child2);\n          if (child2Score < (swap === null ? elemScore : child1Score))\n            swap = child2N;\n        }\n\n        // If the element needs to be moved, swap it, and continue.\n        if (swap !== null) {\n          this.content[n] = this.content[swap];\n          this.content[swap] = element;\n          n = swap;\n        } else {\n          // Otherwise, we are done.\n          break;\n        }\n      }\n    }\n  }\n  //end graph.js ==================\n\n  // javascript-astar\n  // http://github.com/bgrins/javascript-astar\n  // Freely distributable under the MIT License.\n  // Implements the astar search algorithm in javascript using a binary heap.\n  export interface AStarData {\n    f: number;\n    g: number;\n    h: number;\n    cost: number;\n    visited: boolean;\n    closed: boolean;\n    parent: AStarData;\n    pos: Position;\n    org: any;\n  }\n\n  export class AStar {\n    static NO_CHECK_START_POINT: boolean = false;\n    grid: AStarData[][];\n    constructor(\n      grid: any[][],\n      disablePoints?: Position[],\n      lastPlayerPosition?: Position,\n      enableCost?: boolean,\n    ) {\n      this.grid = [];\n      for (var x = 0, xl = grid.length; x < xl; x++) {\n        this.grid[x] = [];\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\n          var cost = getTileCost(grid[x][y]);\n          this.grid[x][y] = {\n            org: grid[x][y],\n            f: 0,\n            g: 0,\n            h: 0,\n            cost: cost,\n            visited: false,\n            closed: false,\n            pos: {\n              x: x,\n              y: y,\n            },\n            parent: null,\n          };\n        }\n      }\n      if (disablePoints !== undefined) {\n        for (var i = 0; i < disablePoints.length; i++) {\n          if (\n            disablePoints[i].x >= 0 &&\n            disablePoints[i].x < this.grid.length &&\n            disablePoints[i].y >= 0 &&\n            disablePoints[i].y < this.grid[0].length\n          )\n            this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\n        }\n      }\n      if (lastPlayerPosition) {\n        if (\n          lastPlayerPosition.x >= 0 &&\n          lastPlayerPosition.x < this.grid.length &&\n          lastPlayerPosition.y >= 0 &&\n          lastPlayerPosition.y < this.grid[0].length\n        )\n          this.grid[lastPlayerPosition.x][lastPlayerPosition.y].cost = 0.5;\n      }\n    }\n\n    heap(): BinaryHeap {\n      return new BinaryHeap(function (node: AStarData) {\n        return node.f;\n      });\n    }\n\n    _find(org: any) {\n      for (var x = 0; x < this.grid.length; x++)\n        for (var y = 0; y < this.grid[x].length; y++)\n          if (this.grid[x][y].org == org) return this.grid[x][y];\n    }\n\n    _search(\n      start: any,\n      end: any,\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: Direction,\n      heuristic?: Function,\n      diagonalsOmni?: boolean,\n      lastPlayerPosition?: Position,\n    ) {\n      heuristic = heuristic || this.manhattan;\n      diagonal = !!diagonal;\n      diagonalsOnly = !!diagonalsOnly;\n      turnCostsExtra = !!turnCostsExtra;\n      diagonalsOmni = !!diagonalsOmni;\n\n      var openHeap = this.heap();\n\n      var _start: AStarData, _end: AStarData;\n      if (start.x !== undefined && start.y !== undefined)\n        _start = this.grid[start.x][start.y];\n      else _start = this._find(start);\n\n      if (end.x !== undefined && end.y !== undefined)\n        _end = this.grid[end.x][end.y];\n      else _end = this._find(end);\n\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\n\n      openHeap.push(_start);\n\n      while (openHeap.size() > 0) {\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n        var currentNode: AStarData = openHeap.pop();\n\n        // End case -- result has been found, return the traced path.\n        if (currentNode === _end) {\n          var curr = currentNode;\n          var ret = [];\n          while (curr.parent) {\n            ret.push(curr);\n            curr = curr.parent;\n          }\n          return ret.reverse();\n        }\n\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\n        currentNode.closed = true;\n\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\n        var neighbors = this.neighbors(\n          currentNode,\n          diagonal,\n          diagonalsOnly,\n          diagonalsOmni,\n        );\n\n        for (var i = 0, il = neighbors.length; i < il; i++) {\n          var neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.cost <= 0) {\n            // Not a valid node to process, skip to next neighbor.\n            continue;\n          }\n\n          // The g score is the shortest distance from start to current node.\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\n          var gScore = currentNode.g + neighbor.cost;\n          if (turnCostsExtra) {\n            var isTurn = false;\n            if (currentNode.parent)\n              isTurn = !(\n                (currentNode.parent.pos.x === currentNode.pos.x &&\n                  currentNode.pos.x === neighbor.pos.x) ||\n                (currentNode.parent.pos.y === currentNode.pos.y &&\n                  currentNode.pos.y === neighbor.pos.y)\n              );\n            else {\n              // initial step\n              isTurn = true;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 0 &&\n                neighbor.pos.y - currentNode.pos.y === -1 &&\n                turnDirection === Direction.UP\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 0 &&\n                neighbor.pos.y - currentNode.pos.y === 1 &&\n                turnDirection === Direction.DOWN\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 1 &&\n                neighbor.pos.y - currentNode.pos.y === 0 &&\n                turnDirection === Direction.RIGHT\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === -1 &&\n                neighbor.pos.y - currentNode.pos.y === 0 &&\n                turnDirection === Direction.LEFT\n              )\n                isTurn = false;\n            }\n            if (isTurn) gScore++;\n          }\n          var beenVisited = neighbor.visited;\n\n          if (!beenVisited || gScore < neighbor.g) {\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n            neighbor.visited = true;\n            neighbor.parent = currentNode;\n            neighbor.h =\n              neighbor.h ||\n              heuristic(neighbor.pos, _end.pos, lastPlayerPosition);\n            neighbor.g = gScore;\n            neighbor.f = neighbor.g + neighbor.h;\n\n            if (!beenVisited) {\n              // Pushing to heap will put it in proper place based on the 'f' value.\n              openHeap.push(neighbor);\n            } else {\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\n              openHeap.rescoreElement(neighbor);\n            }\n          }\n        }\n      }\n\n      // No result was found - empty array signifies failure to find path.\n      return [];\n    }\n\n    static search(\n      grid: any[][],\n      start: any,\n      end: any,\n      disablePoints?: Position[],\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: Direction,\n      heuristic?: Function,\n      diagonalsOmni?: boolean,\n      lastPlayerPosition?: Position,\n    ) {\n      var astar = new AStar(grid, disablePoints, lastPlayerPosition);\n      return astar._search(\n        start,\n        end,\n        diagonal,\n        diagonalsOnly,\n        turnCostsExtra,\n        turnDirection,\n        heuristic,\n        diagonalsOmni,\n      );\n    }\n\n    manhattan(pos0: Position, pos1: Position): number {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      var heuristic = d1 + d2;\n\n      return heuristic;\n    }\n\n    neighbors(\n      node: AStarData,\n      diagonals?: boolean,\n      diagonalsOnly?: boolean,\n      diagonalsOmni?: boolean,\n    ): AStarData[] {\n      var grid = this.grid;\n      var ret = [];\n      var x = node.pos.x;\n      var y = node.pos.y;\n\n      if (!diagonalsOnly) {\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          ret.push(grid[x][y + 1]);\n        }\n      }\n\n      if (diagonals) {\n        // Southwest\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\n          ret.push(grid[x - 1][y - 1]);\n        }\n\n        // Southeast\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\n          ret.push(grid[x + 1][y - 1]);\n        }\n\n        // Northwest\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\n          ret.push(grid[x - 1][y + 1]);\n        }\n\n        // Northeast\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\n          ret.push(grid[x + 1][y + 1]);\n        }\n      }\n      function getRandomBoolean(): boolean {\n        return Math.random() < 0.5;\n      }\n      if (diagonalsOmni) {\n        const randomBool: boolean = getRandomBoolean();\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          // Instead of pushing West, choose between Southwest and Northwest\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x - 1][y + 1]);\n            return;\n          }\n        }\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          if (randomBool == true) {\n            ret.push(grid[x + 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]);\n            return;\n          }\n        }\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y - 1]);\n            return;\n          }\n        }\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y + 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]);\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n\n      return ret;\n    }\n  }\n}\n","export class Random {\n  static state: number;\n\n  static setState = (state: number) => {\n    Random.state = state;\n  };\n\n  static rand = () => {\n    Random.state ^= Random.state << 21;\n    Random.state ^= Random.state >>> 35;\n    Random.state ^= Random.state << 4;\n    return (Random.state >>> 0) / 4294967296;\n  };\n}\n\n// copy and paste into browser console\n// let state;\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }\n","import { Game } from \"../game\";\n\nexport class Utils {\n  static distance = (\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ) => {\n    return Math.sqrt((endX - startX) ** 2 + (endY - startY) ** 2);\n  };\n\n  static calculateExponentialFalloff = (\n    distance: number,\n    falloffRate: number,\n  ): number => {\n    return Math.exp(-falloffRate * distance);\n  };\n\n  // Corrected HSV to HEX conversion\n  static hsvToHex = (h: number, s: number, v: number): string => {\n    let c = v * s;\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    let m = v - c;\n    let r = 0,\n      g = 0,\n      b = 0;\n\n    if (h >= 0 && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (h >= 60 && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (h >= 120 && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (h >= 180 && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (h >= 240 && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else {\n      r = c;\n      g = 0;\n      b = x;\n    }\n\n    // Convert to RGB values\n    const rFinal = Math.round((r + m) * 255);\n    const gFinal = Math.round((g + m) * 255);\n    const bFinal = Math.round((b + m) * 255);\n\n    return Utils.rgbToHex(rFinal, gFinal, bFinal);\n  };\n\n  // RGB to HEX conversion\n  static rgbToHex = (r: number, g: number, b: number): string => {\n    const toHex = (val: number) => {\n      const hex = val.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    };\n\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n  };\n\n  /**\n   * Generates a random integer using a modified cosine distribution that approximates a normal distribution.\n   *\n   * @param min - The minimum value (inclusive) of the range\n   * @param max - The maximum value (inclusive) of the range\n   * @param options - Optional parameters to modify the distribution\n   * @param options.median - The value to skew the distribution towards (must be between min and max).\n   *                        Default is the middle of the range. This acts as the peak of the distribution curve.\n   * @returns A random integer between min and max (inclusive) following the specified distribution\n   *\n   * @example\n   * // Normal bell curve distribution between 0 and 10 (centered at 5)\n   * randomSineInt(0, 10)\n   *\n   * @example\n   * // Distribution skewed towards 7\n   * randomSineInt(0, 10, { median: 7 })\n   */\n  static randomSineInt = (\n    min: number,\n    max: number,\n    options: {\n      median?: number;\n    } = {},\n  ): number => {\n    const roundedMax = Math.ceil(max);\n    const roundedMin = Math.floor(min);\n    const range = roundedMax - roundedMin + 1;\n\n    const { median = roundedMin + (range - 1) / 2 } = options;\n\n    // Validate median is within range\n    const clampedMedian = Math.min(Math.max(median, roundedMin), roundedMax);\n\n    // Generate two random numbers for a more normal-like distribution\n    const x1 = Math.random() * 2 * Math.PI;\n    const x2 = Math.random() * 2 * Math.PI;\n\n    // Average two cosines to create smoother bell curve, normalized to [0,1]\n    const value = (Math.cos(x1) + Math.cos(x2) + 2) / 4;\n\n    // Calculate the relative median position in [0,1] range\n    const medianPosition = (clampedMedian - roundedMin) / (range - 1);\n\n    // Apply skewing by using a weighted average\n    const weight = 0.7; // How strong the skewing effect should be\n    const skewedValue =\n      value * (1 - weight) +\n      (value < 0.5\n        ? value * (medianPosition / 0.5)\n        : medianPosition + (value - 0.5) * 2 * (1 - medianPosition)) *\n        weight;\n\n    // Ensure we stay within bounds while avoiding edge cases\n    const epsilon = 0.001;\n    const boundedValue = Math.min(Math.max(skewedValue, epsilon), 1 - epsilon);\n\n    // Map to integer range\n    const result = Math.floor(boundedValue * range) + roundedMin;\n\n    return Math.min(Math.max(result, roundedMin), roundedMax);\n  };\n\n  static randTableWeighted = (table: any[]): any => {\n    // If table is empty, return null\n    if (!table || table.length === 0) return null;\n\n    // Check if items have weight property\n    const hasWeights = table.some(\n      (item) => item && typeof item.weight === \"number\",\n    );\n\n    if (!hasWeights) {\n      // Fallback to equal probability selection\n      return table[Game.rand(0, table.length - 1, Math.random)];\n    }\n\n    // Calculate total weight\n    const totalWeight = table.reduce((sum, item) => {\n      return sum + (item && typeof item.weight === \"number\" ? item.weight : 0);\n    }, 0);\n\n    if (totalWeight <= 0) {\n      // If no valid weights, fallback to equal probability\n      return table[Game.rand(0, table.length - 1, Math.random)];\n    }\n\n    // Generate random number between 0 and totalWeight\n    let randomValue = Math.random() * totalWeight;\n\n    // Find the item that corresponds to this random value\n    for (const item of table) {\n      if (item && typeof item.weight === \"number\") {\n        randomValue -= item.weight;\n        if (randomValue <= 0) {\n          return item;\n        }\n      }\n    }\n\n    // Fallback (should rarely happen due to floating point precision)\n    return table[table.length - 1];\n  };\n\n  /**\n   * Generates a random integer using a real normal distribution.\n   *\n   * @param min - The value that represents -2 standard deviations from the mean\n   * @param max - The value that represents +2 standard deviations from the mean\n   * @param options - Optional parameters to modify the distribution\n   * @param options.median - The mean of the distribution (center point).\n   *                        Default is the middle of the range.\n   * @returns A random integer following a normal distribution, with negative values clamped to 0\n   *\n   * @example\n   * // Normal distribution centered at 5, with min/max representing ±2 std devs\n   * randomNormalInt(0, 10)\n   *\n   * @example\n   * // Normal distribution centered at 7\n   * randomNormalInt(0, 10, { median: 7 })\n   */\n  static randomNormalInt = (\n    min: number,\n    max: number,\n    options: {\n      median?: number;\n    } = {},\n  ): number => {\n    const { median = min + (max - min) / 2 } = options;\n\n    // Calculate standard deviation: (max - min) / 4 since min/max are ±2 std devs\n    const standardDeviation = (max - min) / 5;\n\n    // Box-Muller transform to generate normal distribution\n    // Generate two uniform random numbers\n    let u1 = Math.random();\n    let u2 = Math.random();\n\n    // Ensure u1 is not 0 to avoid log(0)\n    while (u1 === 0) {\n      u1 = Math.random();\n    }\n\n    // Box-Muller transformation\n    const z0 = Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n\n    // Scale and shift to desired mean and standard deviation\n    const normalValue = z0 * standardDeviation + median;\n\n    // Clamp negative values to 0\n    const clampedValue = Math.max(0, normalValue);\n\n    // Round to integer\n    return Math.round(clampedValue);\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}
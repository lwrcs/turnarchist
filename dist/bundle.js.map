{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://witch-game/./src/astarclass.ts","webpack://witch-game/./src/beamEffect.ts","webpack://witch-game/./src/drawable.ts","webpack://witch-game/./src/entity/enemy/armoredzombieEnemy.ts","webpack://witch-game/./src/entity/enemy/bigKnightEnemy.ts","webpack://witch-game/./src/entity/enemy/bigSkullEnemy.ts","webpack://witch-game/./src/entity/enemy/bishopEnemy.ts","webpack://witch-game/./src/entity/enemy/chargeEnemy.ts","webpack://witch-game/./src/entity/enemy/crabEnemy.ts","webpack://witch-game/./src/entity/enemy/enemy.ts","webpack://witch-game/./src/entity/enemy/energyWizard.ts","webpack://witch-game/./src/entity/enemy/fireWizard.ts","webpack://witch-game/./src/entity/enemy/frogEnemy.ts","webpack://witch-game/./src/entity/enemy/knightEnemy.ts","webpack://witch-game/./src/entity/enemy/queenEnemy.ts","webpack://witch-game/./src/entity/enemy/rookEnemy.ts","webpack://witch-game/./src/entity/enemy/skullEnemy.ts","webpack://witch-game/./src/entity/enemy/spawner.ts","webpack://witch-game/./src/entity/enemy/wizardEnemy.ts","webpack://witch-game/./src/entity/enemy/zombieEnemy.ts","webpack://witch-game/./src/entity/entity.ts","webpack://witch-game/./src/entity/object/barrel.ts","webpack://witch-game/./src/entity/object/chest.ts","webpack://witch-game/./src/entity/object/crate.ts","webpack://witch-game/./src/entity/object/mushrooms.ts","webpack://witch-game/./src/entity/object/pot.ts","webpack://witch-game/./src/entity/object/pottedPlant.ts","webpack://witch-game/./src/entity/object/pumpkin.ts","webpack://witch-game/./src/entity/object/tombStone.ts","webpack://witch-game/./src/entity/object/vendingMachine.ts","webpack://witch-game/./src/entity/resource/coalResource.ts","webpack://witch-game/./src/entity/resource/emeraldResource.ts","webpack://witch-game/./src/entity/resource/goldResource.ts","webpack://witch-game/./src/entity/resource/resource.ts","webpack://witch-game/./src/entity/resource/rockResource.ts","webpack://witch-game/./src/eventBus.ts","webpack://witch-game/./src/eventEmitter.ts","webpack://witch-game/./src/events.ts","webpack://witch-game/./src/game.ts","webpack://witch-game/./src/gameConstants.ts","webpack://witch-game/./src/gameState.ts","webpack://witch-game/./src/healthbar.ts","webpack://witch-game/./src/hitWarning.ts","webpack://witch-game/./src/input.ts","webpack://witch-game/./src/inventory.ts","webpack://witch-game/./src/item/armor.ts","webpack://witch-game/./src/item/backpack.ts","webpack://witch-game/./src/item/bluegem.ts","webpack://witch-game/./src/item/candle.ts","webpack://witch-game/./src/item/coal.ts","webpack://witch-game/./src/item/coin.ts","webpack://witch-game/./src/item/entitySpawner.ts","webpack://witch-game/./src/item/equippable.ts","webpack://witch-game/./src/item/godStone.ts","webpack://witch-game/./src/item/gold.ts","webpack://witch-game/./src/item/goldenKey.ts","webpack://witch-game/./src/item/greengem.ts","webpack://witch-game/./src/item/heart.ts","webpack://witch-game/./src/item/item.ts","webpack://witch-game/./src/item/key.ts","webpack://witch-game/./src/item/lantern.ts","webpack://witch-game/./src/item/light.ts","webpack://witch-game/./src/item/redgem.ts","webpack://witch-game/./src/item/shrooms.ts","webpack://witch-game/./src/item/stone.ts","webpack://witch-game/./src/item/torch.ts","webpack://witch-game/./src/item/usable.ts","webpack://witch-game/./src/level.ts","webpack://witch-game/./src/levelConstants.ts","webpack://witch-game/./src/levelGenerator.ts","webpack://witch-game/./src/levelParametersGenerator.ts","webpack://witch-game/./src/lightSource.ts","webpack://witch-game/./src/lighting.ts","webpack://witch-game/./src/map.ts","webpack://witch-game/./src/mouseCursor.ts","webpack://witch-game/./src/particle/deathParticle.ts","webpack://witch-game/./src/particle/genericParticle.ts","webpack://witch-game/./src/particle/imageParticle.ts","webpack://witch-game/./src/particle/particle.ts","webpack://witch-game/./src/particle/slashParticle.ts","webpack://witch-game/./src/particle/wizardTeleportParticle.ts","webpack://witch-game/./src/player.ts","webpack://witch-game/./src/postProcess.ts","webpack://witch-game/./src/projectile/enemySpawnAnimation.ts","webpack://witch-game/./src/projectile/playerFireball.ts","webpack://witch-game/./src/projectile/projectile.ts","webpack://witch-game/./src/projectile/wizardFireball.ts","webpack://witch-game/./src/random.ts","webpack://witch-game/./src/reverb.ts","webpack://witch-game/./src/room.ts","webpack://witch-game/./src/sound.ts","webpack://witch-game/./src/stats.ts","webpack://witch-game/./src/textbox.ts","webpack://witch-game/./src/tile/bones.ts","webpack://witch-game/./src/tile/button.ts","webpack://witch-game/./src/tile/chasm.ts","webpack://witch-game/./src/tile/coffinTile.ts","webpack://witch-game/./src/tile/door.ts","webpack://witch-game/./src/tile/downLadder.ts","webpack://witch-game/./src/tile/floor.ts","webpack://witch-game/./src/tile/fountainTile.ts","webpack://witch-game/./src/tile/insideLevelDoor.ts","webpack://witch-game/./src/tile/spawnfloor.ts","webpack://witch-game/./src/tile/spike.ts","webpack://witch-game/./src/tile/spiketrap.ts","webpack://witch-game/./src/tile/tile.ts","webpack://witch-game/./src/tile/trapdoor.ts","webpack://witch-game/./src/tile/upLadder.ts","webpack://witch-game/./src/tile/wall.ts","webpack://witch-game/./src/tile/wallTorch.ts","webpack://witch-game/./src/tutorialListener.ts","webpack://witch-game/./src/utils.ts","webpack://witch-game/./src/weapon/dagger.ts","webpack://witch-game/./src/weapon/dualdagger.ts","webpack://witch-game/./src/weapon/pickaxe.ts","webpack://witch-game/./src/weapon/shotgun.ts","webpack://witch-game/./src/weapon/spear.ts","webpack://witch-game/./src/weapon/spellbook.ts","webpack://witch-game/./src/weapon/warhammer.ts","webpack://witch-game/./src/weapon/weapon.ts","webpack://witch-game/webpack/bootstrap","webpack://witch-game/webpack/before-startup","webpack://witch-game/webpack/startup","webpack://witch-game/webpack/after-startup"],"sourcesContent":["import { EntityDirection } from \"./entity/entity\";\nimport { Direction } from \"./game\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { Wall } from \"./tile/wall\";\n\nexport namespace astar {\n  //================== start graph js\n  /* \n  graph.js http://github.com/bgrins/javascript-astar\n  MIT License\n  Creates a Graph class used in the astar search algorithm.\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \n      URL: http://eloquentjavascript.net/appendix2.html\n      License: http://creativecommons.org/licenses/by/3.0/\n  */\n\n  export interface Position {\n    x: number;\n    y: number;\n  }\n\n  export enum GraphNodeType {\n    WALL,\n    OPEN,\n  }\n\n  let getTileCost = (tile) => {\n    if (tile) return tile.isSolid() || tile.isDoor ? 99999999 : 300;\n    else return 99999999;\n  };\n\n  export class Graph {\n    nodes: GraphNode[][];\n    elements: number[][];\n\n    constructor(grid: number[][]) {\n      this.elements = grid;\n      var nodes: GraphNode[][] = [];\n      var row: number[],\n        rowLength: number,\n        len = grid.length;\n      for (var x = 0; x < len; ++x) {\n        row = grid[x];\n        rowLength = row.length;\n        nodes[x] = new Array(rowLength); // optimum array with size\n        for (var y = 0; y < rowLength; ++y) {\n          nodes[x][y] = new GraphNode(x, y, row[y]);\n        }\n      }\n      this.nodes = nodes;\n    }\n\n    toString(): string {\n      var graphString = \"\\n\";\n      var nodes = this.nodes;\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\n      for (var x = 0, len = nodes.length; x < len; ) {\n        rowDebug = \"\";\n        row = nodes[x++];\n        for (y = 0, l = row.length; y < l; ) {\n          rowDebug += row[y++].type + \" \";\n        }\n        graphString = graphString + rowDebug + \"\\n\";\n      }\n      return graphString;\n    }\n  }\n\n  export class GraphNode {\n    x: number;\n    y: number;\n    type: GraphNodeType;\n    data: any;\n    pos: Position;\n\n    constructor(x: number, y: number, type: GraphNodeType) {\n      this.data = {};\n      this.x = x;\n      this.y = y;\n      this.pos = { x: x, y: y };\n      this.type = type;\n    }\n\n    toString(): string {\n      return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    isWall() {\n      return this.type == GraphNodeType.WALL;\n    }\n  }\n\n  export class BinaryHeap {\n    content: any[];\n    scoreFunction: (node: any) => number;\n\n    constructor(scoreFunction: (node: any) => number) {\n      this.content = [];\n      this.scoreFunction = scoreFunction;\n    }\n\n    push(node: any) {\n      // Add the new node to the end of the array.\n      this.content.push(node);\n      // Allow it to sink down.\n      this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n      // Store the first node so we can return it later.\n      var result = this.content[0];\n      // Get the node at the end of the array.\n      var end = this.content.pop();\n      // If there are any elements left, put the end node at the\n      // start, and let it bubble up.\n      if (this.content.length > 0) {\n        this.content[0] = end;\n        this.bubbleUp(0);\n      }\n      return result;\n    }\n\n    remove(node: any) {\n      var i = this.content.indexOf(node);\n\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      if (i !== this.content.length - 1) {\n        this.content[i] = end;\n        if (this.scoreFunction(end) < this.scoreFunction(node))\n          this.sinkDown(i);\n        else this.bubbleUp(i);\n      }\n    }\n\n    size() {\n      return this.content.length;\n    }\n\n    rescoreElement(node: any) {\n      this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n: number) {\n      // Fetch the element that has to be sunk.\n      var element = this.content[n];\n      // When at 0, an element can not sink any further.\n      while (n > 0) {\n        // Compute the parent element's index, and fetch it.\n        var parentN = ((n + 1) >> 1) - 1,\n          parent = this.content[parentN];\n        // Swap the elements if the parent is greater.\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n          this.content[parentN] = element;\n          this.content[n] = parent;\n          // Update 'n' to continue at the new position.\n          n = parentN;\n        } else {\n          // Found a parent that is less, no need to sink any further.\n          break;\n        }\n      }\n    }\n\n    bubbleUp(n: number) {\n      // Look up the target element and its score.\n      var length = this.content.length,\n        element = this.content[n],\n        elemScore = this.scoreFunction(element);\n\n      while (true) {\n        // Compute the indices of the child elements.\n        var child2N = (n + 1) << 1,\n          child1N = child2N - 1;\n        // This is used to store the new position of the element,\n        // if any.\n        var swap = null;\n        // If the first child exists (is inside the array)...\n        if (child1N < length) {\n          // Look it up and compute its score.\n          var child1 = this.content[child1N],\n            child1Score = this.scoreFunction(child1);\n          // If the score is less than our element's, we need to swap.\n          if (child1Score < elemScore) swap = child1N;\n        }\n        // Do the same checks for the other child.\n        if (child2N < length) {\n          var child2 = this.content[child2N],\n            child2Score = this.scoreFunction(child2);\n          if (child2Score < (swap === null ? elemScore : child1Score))\n            swap = child2N;\n        }\n\n        // If the element needs to be moved, swap it, and continue.\n        if (swap !== null) {\n          this.content[n] = this.content[swap];\n          this.content[swap] = element;\n          n = swap;\n        } else {\n          // Otherwise, we are done.\n          break;\n        }\n      }\n    }\n  }\n  //end graph.js ==================\n\n  // javascript-astar\n  // http://github.com/bgrins/javascript-astar\n  // Freely distributable under the MIT License.\n  // Implements the astar search algorithm in javascript using a binary heap.\n  export interface AStarData {\n    f: number;\n    g: number;\n    h: number;\n    cost: number;\n    visited: boolean;\n    closed: boolean;\n    parent: AStarData;\n    pos: Position;\n    org: any;\n  }\n\n  export class AStar {\n    static NO_CHECK_START_POINT: boolean = false;\n    grid: AStarData[][];\n    constructor(\n      grid: any[][],\n      disablePoints?: Position[],\n      lastPlayerPosition?: Position,\n      enableCost?: boolean,\n    ) {\n      this.grid = [];\n      for (var x = 0, xl = grid.length; x < xl; x++) {\n        this.grid[x] = [];\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\n          var cost = getTileCost(grid[x][y]);\n          this.grid[x][y] = {\n            org: grid[x][y],\n            f: 0,\n            g: 0,\n            h: 0,\n            cost: cost,\n            visited: false,\n            closed: false,\n            pos: {\n              x: x,\n              y: y,\n            },\n            parent: null,\n          };\n        }\n      }\n      if (disablePoints !== undefined) {\n        for (var i = 0; i < disablePoints.length; i++) {\n          if (\n            disablePoints[i].x >= 0 &&\n            disablePoints[i].x < this.grid.length &&\n            disablePoints[i].y >= 0 &&\n            disablePoints[i].y < this.grid[0].length\n          )\n            this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\n        }\n      }\n      if (lastPlayerPosition) {\n        if (\n          lastPlayerPosition.x >= 0 &&\n          lastPlayerPosition.x < this.grid.length &&\n          lastPlayerPosition.y >= 0 &&\n          lastPlayerPosition.y < this.grid[0].length\n        )\n          this.grid[lastPlayerPosition.x][lastPlayerPosition.y].cost = 0.5;\n      }\n    }\n\n    heap(): BinaryHeap {\n      return new BinaryHeap(function (node: AStarData) {\n        return node.f;\n      });\n    }\n\n    _find(org: any) {\n      for (var x = 0; x < this.grid.length; x++)\n        for (var y = 0; y < this.grid[x].length; y++)\n          if (this.grid[x][y].org == org) return this.grid[x][y];\n    }\n\n    _search(\n      start: any,\n      end: any,\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: Direction,\n      heuristic?: Function,\n      diagonalsOmni?: boolean,\n      lastPlayerPosition?: Position,\n    ) {\n      heuristic = heuristic || this.manhattan;\n      diagonal = !!diagonal;\n      diagonalsOnly = !!diagonalsOnly;\n      turnCostsExtra = !!turnCostsExtra;\n      diagonalsOmni = !!diagonalsOmni;\n\n      var openHeap = this.heap();\n\n      var _start: AStarData, _end: AStarData;\n      if (start.x !== undefined && start.y !== undefined)\n        _start = this.grid[start.x][start.y];\n      else _start = this._find(start);\n\n      if (end.x !== undefined && end.y !== undefined)\n        _end = this.grid[end.x][end.y];\n      else _end = this._find(end);\n\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\n\n      openHeap.push(_start);\n\n      while (openHeap.size() > 0) {\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n        var currentNode: AStarData = openHeap.pop();\n\n        // End case -- result has been found, return the traced path.\n        if (currentNode === _end) {\n          var curr = currentNode;\n          var ret = [];\n          while (curr.parent) {\n            ret.push(curr);\n            curr = curr.parent;\n          }\n          return ret.reverse();\n        }\n\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\n        currentNode.closed = true;\n\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\n        var neighbors = this.neighbors(\n          currentNode,\n          diagonal,\n          diagonalsOnly,\n          diagonalsOmni,\n        );\n\n        for (var i = 0, il = neighbors.length; i < il; i++) {\n          var neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.cost <= 0) {\n            // Not a valid node to process, skip to next neighbor.\n            continue;\n          }\n\n          // The g score is the shortest distance from start to current node.\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\n          var gScore = currentNode.g + neighbor.cost;\n          if (turnCostsExtra) {\n            var isTurn = false;\n            if (currentNode.parent)\n              isTurn = !(\n                (currentNode.parent.pos.x === currentNode.pos.x &&\n                  currentNode.pos.x === neighbor.pos.x) ||\n                (currentNode.parent.pos.y === currentNode.pos.y &&\n                  currentNode.pos.y === neighbor.pos.y)\n              );\n            else {\n              // initial step\n              isTurn = true;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 0 &&\n                neighbor.pos.y - currentNode.pos.y === -1 &&\n                turnDirection === Direction.UP\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 0 &&\n                neighbor.pos.y - currentNode.pos.y === 1 &&\n                turnDirection === Direction.DOWN\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === 1 &&\n                neighbor.pos.y - currentNode.pos.y === 0 &&\n                turnDirection === Direction.RIGHT\n              )\n                isTurn = false;\n              if (\n                neighbor.pos.x - currentNode.pos.x === -1 &&\n                neighbor.pos.y - currentNode.pos.y === 0 &&\n                turnDirection === Direction.LEFT\n              )\n                isTurn = false;\n            }\n            if (isTurn) gScore++;\n          }\n          var beenVisited = neighbor.visited;\n\n          if (!beenVisited || gScore < neighbor.g) {\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n            neighbor.visited = true;\n            neighbor.parent = currentNode;\n            neighbor.h =\n              neighbor.h ||\n              heuristic(neighbor.pos, _end.pos, lastPlayerPosition);\n            neighbor.g = gScore;\n            neighbor.f = neighbor.g + neighbor.h;\n\n            if (!beenVisited) {\n              // Pushing to heap will put it in proper place based on the 'f' value.\n              openHeap.push(neighbor);\n            } else {\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\n              openHeap.rescoreElement(neighbor);\n            }\n          }\n        }\n      }\n\n      // No result was found - empty array signifies failure to find path.\n      return [];\n    }\n\n    static search(\n      grid: any[][],\n      start: any,\n      end: any,\n      disablePoints?: Position[],\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: Direction,\n      heuristic?: Function,\n      diagonalsOmni?: boolean,\n      lastPlayerPosition?: Position,\n    ) {\n      var astar = new AStar(grid, disablePoints, lastPlayerPosition);\n      return astar._search(\n        start,\n        end,\n        diagonal,\n        diagonalsOnly,\n        turnCostsExtra,\n        turnDirection,\n        heuristic,\n        diagonalsOmni,\n      );\n    }\n\n    manhattan(pos0: Position, pos1: Position): number {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      var heuristic = d1 + d2;\n\n      return heuristic;\n    }\n\n    neighbors(\n      node: AStarData,\n      diagonals?: boolean,\n      diagonalsOnly?: boolean,\n      diagonalsOmni?: boolean,\n    ): AStarData[] {\n      var grid = this.grid;\n      var ret = [];\n      var x = node.pos.x;\n      var y = node.pos.y;\n\n      if (!diagonalsOnly) {\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          ret.push(grid[x][y + 1]);\n        }\n      }\n\n      if (diagonals) {\n        // Southwest\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\n          ret.push(grid[x - 1][y - 1]);\n        }\n\n        // Southeast\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\n          ret.push(grid[x + 1][y - 1]);\n        }\n\n        // Northwest\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\n          ret.push(grid[x - 1][y + 1]);\n        }\n\n        // Northeast\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\n          ret.push(grid[x + 1][y + 1]);\n        }\n      }\n      function getRandomBoolean(): boolean {\n        return Math.random() < 0.5;\n      }\n      if (diagonalsOmni) {\n        const randomBool: boolean = getRandomBoolean();\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          // Instead of pushing West, choose between Southwest and Northwest\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x - 1][y + 1]);\n            return;\n          }\n        }\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          if (randomBool == true) {\n            ret.push(grid[x + 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]);\n            return;\n          }\n        }\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y - 1]);\n            return;\n          }\n        }\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y + 1]);\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]);\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n\n      return ret;\n    }\n  }\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Room } from \"./room\";\n\ninterface Point {\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n  velocityX: number;\n  velocityY: number;\n  angle: number;\n}\n\nexport class BeamEffect {\n  // Number of points that make up the beam (higher = smoother but more expensive)\n  // Range: 10-100, recommended: 30\n  private static readonly SEGMENTS = 30;\n\n  // Downward force applied to each point (0 = no gravity)\n  // Range: 0-10, recommended: 2\n  private static readonly GRAVITY = 2;\n\n  // Physics simulation steps per frame (higher = more accurate but more expensive)\n  // Range: 1-10, recommended: 1\n  private static readonly ITERATIONS = 5;\n\n  // How much the beam reacts to movement of start/end points\n  // Range: 0-5, recommended: 1\n  private static readonly MOTION_INFLUENCE = 1;\n\n  // Amount of random movement applied to points (0 = straight beam)\n  // Range: 0-1, recommended: 0.5\n  private static readonly TURBULENCE = 0.5;\n\n  // How quickly velocity decreases over time\n  // Range: 0-1, recommended: 0.5\n  private static readonly VELOCITY_DECAY = 0.1;\n\n  // How quickly the turbulence angle changes\n  // Range: 0-2, recommended: 0.9\n  private static readonly ANGLE_CHANGE = 0.01; // for turbulence specifically\n\n  // Maximum speed any point can move per frame\n  // Range: 10-1000, recommended: 100\n  private static readonly MAX_VELOCITY = 100;\n\n  // General movement resistance (1 = no damping, 0 = full stop)\n  // Range: 0.9-0.999, recommended: 0.8\n  private static readonly DAMPING = 0.8;\n\n  // How strongly points pull toward their neighbors\n  // Range: 0.01-1, recommended: 0.01\n  private static readonly SPRING_STIFFNESS = 0.01;\n\n  // How quickly spring oscillations settle\n  // Range: 0.001-0.1, recommended: 0.1\n  private static readonly SPRING_DAMPING = 0.1;\n\n  private points: Point[];\n  private prevStartX: number;\n  private prevStartY: number;\n  private prevEndX: number;\n  private prevEndY: number;\n  private active: boolean = true;\n  private time: number = 0;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n\n    this.points = this.initializePoints(startX, startY, endX, endY);\n    this.prevStartX = startX;\n    this.prevStartY = startY;\n    this.prevEndX = endX;\n    this.prevEndY = endY;\n  }\n\n  render(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string = \"cyan\",\n    lineWidth: number = 2,\n    delta: number = 1 / 60,\n  ): void {\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n\n    const startForceX =\n      (startX - this.prevStartX) * BeamEffect.MOTION_INFLUENCE * delta;\n    const startForceY =\n      (startY - this.prevStartY) * BeamEffect.MOTION_INFLUENCE * delta;\n    const endForceX =\n      (endX - this.prevEndX) * BeamEffect.MOTION_INFLUENCE * delta;\n    const endForceY =\n      (endY - this.prevEndY) * BeamEffect.MOTION_INFLUENCE * delta;\n\n    for (let i = 1; i < 4; i++) {\n      const influence = 1 - i / 4;\n      this.points[i].x += startForceX * influence;\n      this.points[i].y += startForceY * influence;\n    }\n    for (let i = this.points.length - 4; i < this.points.length - 1; i++) {\n      const influence = 1 - (this.points.length - i) / 4;\n      this.points[i].x += endForceX * influence;\n      this.points[i].y += endForceY * influence;\n    }\n\n    this.simulateRope(startX, startY, endX, endY, delta);\n\n    const ctx = Game.ctx;\n    ctx.save();\n\n    for (let i = 0; i < this.points.length - 1; i++) {\n      const p1 = this.points[i];\n      const p2 = this.points[i + 1];\n\n      const dx = p2.x - p1.x;\n      const dy = p2.y - p1.y;\n      const steps = Math.max(Math.abs(dx), Math.abs(dy));\n\n      const xIncrement = dx / steps;\n      const yIncrement = dy / steps;\n\n      let x = p1.x;\n      let y = p1.y;\n\n      for (let step = 0; step <= steps; step++) {\n        for (let w = 0; w < lineWidth; w++) {\n          for (let h = 0; h < lineWidth; h++) {\n            ctx.fillStyle = color;\n            ctx.fillRect(Math.round(x + w), Math.round(y + h), 1, 1);\n          }\n        }\n        x += xIncrement;\n        y += yIncrement;\n      }\n    }\n\n    ctx.restore();\n\n    this.prevStartX = startX;\n    this.prevStartY = startY;\n    this.prevEndX = endX;\n    this.prevEndY = endY;\n  }\n\n  private initializePoints(\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ): Point[] {\n    const points: Point[] = [];\n    for (let i = 0; i < BeamEffect.SEGMENTS; i++) {\n      const t = i / (BeamEffect.SEGMENTS - 1);\n      points.push({\n        x: startX + (endX - startX) * t,\n        y: startY + (endY - startY) * t,\n        oldX: startX + (endX - startX) * t,\n        oldY: startY + (endY - startY) * t,\n        velocityX: 0,\n        velocityY: 0,\n        angle: Math.random() * Math.PI * 2,\n      });\n    }\n    return points;\n  }\n\n  private applyTurbulence(point: Point, index: number): void {\n    point.angle +=\n      Math.sin(this.time * 0.1 + index * 0.5) * BeamEffect.ANGLE_CHANGE;\n\n    const turbulenceX = Math.cos(point.angle) * BeamEffect.TURBULENCE;\n    const turbulenceY = Math.sin(point.angle) * BeamEffect.TURBULENCE;\n\n    point.velocityX += turbulenceX;\n    point.velocityY += turbulenceY;\n\n    point.velocityX = Math.min(\n      Math.max(point.velocityX, -BeamEffect.MAX_VELOCITY),\n      BeamEffect.MAX_VELOCITY,\n    );\n    point.velocityY = Math.min(\n      Math.max(point.velocityY, -BeamEffect.MAX_VELOCITY),\n      BeamEffect.MAX_VELOCITY,\n    );\n  }\n\n  private simulateRope(\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n    delta: number,\n  ): void {\n    const iterationsThisFrame = Math.ceil(BeamEffect.ITERATIONS * delta);\n\n    for (let iteration = 0; iteration < iterationsThisFrame; iteration++) {\n      for (let i = 1; i < this.points.length - 1; i++) {\n        const point = this.points[i];\n        const prevPoint = this.points[i - 1];\n        const nextPoint = this.points[i + 1];\n\n        const springForceXPrev =\n          (prevPoint.x - point.x) * BeamEffect.SPRING_STIFFNESS * delta;\n        const springForceYPrev =\n          (prevPoint.y - point.y) * BeamEffect.SPRING_STIFFNESS * delta;\n        const springForceXNext =\n          (nextPoint.x - point.x) * BeamEffect.SPRING_STIFFNESS * delta;\n        const springForceYNext =\n          (nextPoint.y - point.y) * BeamEffect.SPRING_STIFFNESS * delta;\n\n        this.applyTurbulence(point, i);\n\n        point.velocityX =\n          (point.velocityX + springForceXPrev + springForceXNext) *\n          Math.pow(BeamEffect.DAMPING, delta);\n        point.velocityY =\n          (point.velocityY + springForceYPrev + springForceYNext) *\n          Math.pow(BeamEffect.DAMPING, delta);\n\n        const relativeVXPrev = (prevPoint.velocityX - point.velocityX) * delta;\n        const relativeVYPrev = (prevPoint.velocityY - point.velocityY) * delta;\n        const relativeVXNext = (nextPoint.velocityX - point.velocityX) * delta;\n        const relativeVYNext = (nextPoint.velocityY - point.velocityY) * delta;\n\n        point.velocityX +=\n          (relativeVXPrev + relativeVXNext) * BeamEffect.SPRING_DAMPING;\n        point.velocityY +=\n          (relativeVYPrev + relativeVYNext) * BeamEffect.SPRING_DAMPING;\n\n        point.oldX = point.x;\n        point.oldY = point.y;\n\n        point.x += point.velocityX * delta;\n        point.y += point.velocityY * delta + BeamEffect.GRAVITY * delta * delta;\n      }\n\n      const segmentLength =\n        Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2)) /\n        (BeamEffect.SEGMENTS - 1);\n\n      for (\n        let constraintIteration = 0;\n        constraintIteration < 2;\n        constraintIteration++\n      ) {\n        for (let i = 0; i < this.points.length - 1; i++) {\n          const p1 = this.points[i];\n          const p2 = this.points[i + 1];\n\n          const dx = p2.x - p1.x;\n          const dy = p2.y - p1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          const difference = segmentLength - distance;\n          const percent = difference / distance / 2;\n          const offsetX = dx * percent;\n          const offsetY = dy * percent;\n\n          if (i > 0) {\n            p1.x -= offsetX * 1.5;\n            p1.y -= offsetY * 1.5;\n          }\n          if (i < this.points.length - 2) {\n            p2.x += offsetX * 1.5;\n            p2.y += offsetY * 1.5;\n          }\n        }\n      }\n    }\n\n    this.points[0].x = startX;\n    this.points[0].y = startY;\n    this.points[0].oldX = startX;\n    this.points[0].oldY = startY;\n    this.points[this.points.length - 1].x = endX;\n    this.points[this.points.length - 1].y = endY;\n    this.points[this.points.length - 1].oldX = endX;\n    this.points[this.points.length - 1].oldY = endY;\n  }\n\n  static renderBeam(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string = \"cyan\",\n    lineWidth: number = 2,\n  ): void {\n    const ctx = Game.ctx;\n\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = color;\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  destroy(): void {\n    this.active = false;\n    this.points = [];\n  }\n\n  isActive(): boolean {\n    return this.active;\n  }\n}\n","export class Drawable {\n  drawableY = 0;\n\n  draw = (delta: number) => {};\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Random } from \"../../random\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Pickaxe } from \"../../weapon/pickaxe\";\nimport { Armor } from \"../../item/armor\";\nimport { Enemy } from \"./enemy\";\n\nexport class ArmoredzombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 2;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.name = \"armored zombie\";\n    this.forwardOnlyAttack = true;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.05) this.drop = new Armor(this.room, this.x, this.y);\n      else if (dropProb < 0.01)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      //this.facePlayer(playerHitBy); //\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor,\n      );\n    }\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY &&\n                  oldDir == this.direction\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 27;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 17;\n        this.tileY = 8;\n      }\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../random\";\n\nexport class BigKnightEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n  static difficulty: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 29;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n    this.name = \"giant knight\";\n\n    this.drops = [];\n    if (drop) this.drops.push(drop);\n    while (this.drops.length < 4) {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005)\n        this.drops.push(new Spear(this.room, this.x, this.y));\n      else if (dropProb < 0.04)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.075)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.1)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  addHitWarnings = () => {\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y + 1, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y + 1, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y - 1, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y - 1, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y + 2, this.x, this.y)\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y + 2, this.x, this.y)\n    );\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 1,\n        this.y + 1,\n        this.deathParticleColor\n      );\n    }\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 1,\n      this.y + 1,\n      this.deathParticleColor\n    );\n    this.room.particles.push(new DeathParticle(this.x + 0.5, this.y + 0.5));\n\n    this.dropLoot();\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health == 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health++;\n          this.ticksSinceFirstHit = 0;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID])\n                this.alertTicks = 1;\n              if (this.health >= 3) this.addHitWarnings();\n            }\n          }\n        } else if (this.seenPlayer) {\n          if (this.room.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n            let moveX = this.x;\n            let moveY = this.y;\n            if (this.ticks % 2 === 0) {\n              // horizontal preference\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n            } else {\n              // vertical preference\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n            }\n\n            let hitPlayer = false;\n            if (this.health >= 3) {\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return (\n                  player.x >= moveX &&\n                  player.x < moveX + this.w &&\n                  player.y >= moveY &&\n                  player.y < moveY + this.h\n                );\n              };\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  wouldHit(this.game.players[i], moveX, moveY)\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              if (this.x > oldX) this.direction = Direction.RIGHT;\n              else if (this.x < oldX) this.direction = Direction.LEFT;\n              else if (this.y > oldY) this.direction = Direction.DOWN;\n              else if (this.y < oldY) this.direction = Direction.UP;\n            }\n\n            if (this.health < this.maxHealth) {\n              this.ticksSinceFirstHit++;\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n                this.health++;\n                this.ticksSinceFirstHit = 0;\n              }\n            }\n\n            if (this.health >= 3) this.addHitWarnings();\n          }\n\n          let targetPlayerOffline =\n            Object.values(this.game.offlinePlayers).indexOf(\n              this.targetPlayer\n            ) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (\n                distance <= 4 &&\n                (targetPlayerOffline ||\n                  distance < this.playerDistance(this.targetPlayer))\n              ) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID])\n                    this.alertTicks = 1;\n                  if (this.health >= 3) this.addHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        2 * Math.floor((this.tileX + this.frame) / 2) + 1,\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(\n        delta,\n        GameConstants.TILESIZE * 0.5,\n        GameConstants.TILESIZE * -1\n      );\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(\n        delta,\n        GameConstants.TILESIZE * 0.5,\n        GameConstants.TILESIZE * -1\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x + 0.5,\n      this.y,\n      true\n    );\n    this.updateDrawXY(delta);\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../random\";\n\nexport class BigSkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n  static difficulty: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 21;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n    this.name = \"giant skeleton\";\n\n    this.drops = [];\n    if (drop) this.drops.push(drop);\n    while (this.drops.length < 4) {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005)\n        this.drops.push(new Spear(this.room, this.x, this.y));\n      else if (dropProb < 0.04)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.075)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else if (dropProb < 0.1)\n        this.drops.push(new RedGem(this.room, this.x, this.y));\n      else this.drops.push(new Coin(this.room, this.x, this.y));\n    }\n  }\n\n  addHitWarnings = () => {\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x - 1, this.y + 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 2, this.y + 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y - 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y - 1, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x, this.y + 2, this.x, this.y),\n    );\n    this.room.hitwarnings.push(\n      new HitWarning(this.game, this.x + 1, this.y + 2, this.x, this.y),\n    );\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 1,\n        this.y + 1,\n        this.deathParticleColor,\n      );\n    }\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 1,\n      this.y + 1,\n      this.deathParticleColor,\n    );\n    this.room.particles.push(new DeathParticle(this.x + 0.5, this.y + 0.5));\n\n    this.dropLoot();\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health == 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health++;\n          this.ticksSinceFirstHit = 0;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID])\n                this.alertTicks = 1;\n              if (this.health >= 3) this.addHitWarnings();\n            }\n          }\n        } else if (this.seenPlayer) {\n          if (this.room.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n            let moveX = this.x;\n            let moveY = this.y;\n            if (this.ticks % 2 === 0) {\n              // horizontal preference\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n            } else {\n              // vertical preference\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n            }\n\n            let hitPlayer = false;\n            if (this.health >= 3) {\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return (\n                  player.x >= moveX &&\n                  player.x < moveX + this.w &&\n                  player.y >= moveY &&\n                  player.y < moveY + this.h\n                );\n              };\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  wouldHit(this.game.players[i], moveX, moveY)\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              if (this.x > oldX) this.direction = Direction.RIGHT;\n              else if (this.x < oldX) this.direction = Direction.LEFT;\n              else if (this.y > oldY) this.direction = Direction.DOWN;\n              else if (this.y < oldY) this.direction = Direction.UP;\n            }\n\n            if (this.health < this.maxHealth) {\n              this.ticksSinceFirstHit++;\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n                this.health++;\n                this.ticksSinceFirstHit = 0;\n              }\n            }\n\n            if (this.health >= 3) this.addHitWarnings();\n          }\n\n          let targetPlayerOffline =\n            Object.values(this.game.offlinePlayers).indexOf(\n              this.targetPlayer,\n            ) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (\n                distance <= 4 &&\n                (targetPlayerOffline ||\n                  distance < this.playerDistance(this.targetPlayer))\n              ) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID])\n                    this.alertTicks = 1;\n                  if (this.health >= 3) this.addHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 21;\n      this.tileY = 0;\n      if (this.health === 3) {\n        this.tileX = 21;\n        this.tileY = 4;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 0;\n          }\n        }\n      } else if (this.health === 2) {\n        this.tileX = 21;\n        this.tileY = 8;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 4;\n          }\n        }\n      } else if (this.health === 1) {\n        this.tileX = 21;\n        this.tileY = 12;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 8;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 20 ? Math.floor(this.frame) * 2 : 0),\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(\n        delta,\n        GameConstants.TILESIZE * 0.5,\n        GameConstants.TILESIZE * -1,\n      );\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(\n        delta,\n        GameConstants.TILESIZE * 0.5,\n        GameConstants.TILESIZE * -1,\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x + 0.5,\n      this.y,\n      true,\n    );\n    this.updateDrawXY(delta);\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Random } from \"../../random\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Candle } from \"../../item/candle\";\nimport { Door } from \"../../tile/door\";\nimport { Enemy } from \"./enemy\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class BishopEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 2;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 31;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"bishop\";\n    this.jumpHeight = 1;\n    this.drawMoveSpeed = 0.2;\n    this.diagonalAttackRange = 1;\n    this.diagonalAttack = true;\n    this.orthogonalAttack = false;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.room, this.x, this.y);\n      else if (dropProb < 0.04)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Entity): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 26);\n\n      this.kill();\n    }\n  };\n\n  jump = () => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n    this.jumpY = Math.sin(j * Math.PI) * this.jumpHeight;\n  };\n\n  behavior = () => {\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n              if (this.room.roomArray[xx][yy] instanceof Door) {\n                // don't walk into doorways (normally wouldn't be an issue without diagonals)\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n          disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          disablePositions.push({ x: this.x, y: this.y } as astar.Position);\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n          );\n          moves = moves.filter((move) => {\n            const dx = Math.abs(move.pos.x - this.x);\n            const dy = Math.abs(move.pos.y - this.y);\n            return dx === 1 && dy === 1;\n          });\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                hitPlayer = true;\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY * delta,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount() * (1 + (this.jumpY * delta) / 3),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { Coin } from \"../../item/coin\";\nimport { Door } from \"../../tile/door\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { Random } from \"../../random\";\nimport { Pickaxe } from \"../../weapon/pickaxe\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\n\nexport enum ChargeEnemyState {\n  IDLE,\n  ALERTED,\n  CHARGING,\n}\n\nexport class ChargeEnemy extends Enemy {\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  ticks: number;\n  frame: number;\n  state: ChargeEnemyState;\n  trailFrame: number;\n  drop: Item;\n  static difficulty: number = 3;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 13;\n    this.tileY = 8;\n    this.trailFrame = 0;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.name = \"charge knight\";\n\n    this.state = ChargeEnemyState.IDLE;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.room, this.x, this.y);\n      else if (dropProb < 0.02)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  canMoveOver = (x: number, y: number): boolean => {\n    for (const e of this.room.entities) {\n      if (e !== this && x === e.x && y === e.y) return false;\n    }\n    let t = this.room.roomArray[x][y];\n    return !(t.isSolid() || t instanceof Door);\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (this.state === ChargeEnemyState.IDLE) {\n        let blocked = false;\n        let dx = 0;\n        let dy = 0;\n        for (const i in this.game.players) {\n          if (this.x === this.game.players[i].x) {\n            if (this.y < this.game.players[i].y) dy = 1;\n            else dy = -1;\n            for (let yy = this.y; yy !== this.game.players[i].y; yy += dy) {\n              if (!this.canMoveOver(this.x, yy)) blocked = true;\n            }\n          } else if (this.y === this.game.players[i].y) {\n            if (this.x < this.game.players[i].x) dx = 1;\n            else dx = -1;\n            for (let xx = this.x; xx !== this.game.players[i].x; xx += dx) {\n              if (!this.canMoveOver(xx, this.y)) blocked = true;\n            }\n          }\n          if ((dx !== 0 || dy !== 0) && !blocked) {\n            this.state = ChargeEnemyState.ALERTED;\n            this.targetX = this.x;\n            this.targetY = this.y;\n            while (this.canMoveOver(this.targetX + dx, this.targetY + dy)) {\n              this.targetX += dx;\n              this.targetY += dy;\n              if (\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x - 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x + 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y - 1) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y + 1)\n              )\n                this.room.hitwarnings.push(\n                  new HitWarning(\n                    this.game,\n                    this.targetX,\n                    this.targetY,\n                    this.x,\n                    this.y,\n                  ),\n                );\n            }\n            this.visualTargetX = this.targetX + 0.5 * dx;\n            this.visualTargetY = this.targetY + 0.5 * dy;\n            if (dy === 1) this.visualTargetY += 0.65;\n            if (dx > 0) this.direction = Direction.RIGHT;\n            else if (dx < 0) this.direction = Direction.LEFT;\n            else if (dy < 0) this.direction = Direction.UP;\n            else if (dy > 0) this.direction = Direction.DOWN;\n            break;\n          }\n        }\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.state = ChargeEnemyState.CHARGING;\n        this.trailFrame = 0;\n\n        for (const i in this.game.players) {\n          if (\n            (this.y === this.game.players[i].y &&\n              ((this.x < this.game.players[i].x &&\n                this.game.players[i].x <= this.targetX) ||\n                (this.targetX <= this.game.players[i].x &&\n                  this.game.players[i].x < this.x))) ||\n            (this.x === this.game.players[i].x &&\n              ((this.y < this.game.players[i].y &&\n                this.game.players[i].y <= this.targetY) ||\n                (this.targetY <= this.game.players[i].y &&\n                  this.game.players[i].y < this.y)))\n          ) {\n            this.game.players[i].hurt(this.hit(), this.name);\n          }\n        }\n\n        this.startX = this.x;\n        this.startY = this.y;\n        this.drawX = this.targetX - this.x;\n        this.drawY = this.targetY - this.y;\n        this.x = this.targetX;\n        this.y = this.targetY;\n      } else if (this.state === ChargeEnemyState.CHARGING) {\n        this.state = ChargeEnemyState.IDLE;\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (\n        (this.state === ChargeEnemyState.CHARGING &&\n          Math.abs(this.drawX) > 0.1) ||\n        Math.abs(this.drawY) > 0.1\n      ) {\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"black\",\n        );\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"white\",\n        );\n      }\n\n      if (this.state === ChargeEnemyState.CHARGING) {\n        this.trailFrame += 0.01 * delta;\n        let t = this.trailFrame;\n\n        if (t >= 0 && t <= 1) {\n          Game.ctx.strokeStyle = \"white\";\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 1 - t;\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n          Game.ctx.beginPath();\n          Game.ctx.moveTo(\n            (this.startX + 0.5) * GameConstants.TILESIZE,\n            (this.startY + 0.5) * GameConstants.TILESIZE,\n          );\n          Game.ctx.lineCap = \"round\";\n          Game.ctx.lineTo(\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE,\n          );\n          Game.ctx.stroke();\n          Game.ctx.globalAlpha = 1;\n        }\n      }\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      if (this.state === ChargeEnemyState.IDLE) {\n        this.drawSleepingZs(delta);\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true,\n    );\n    this.drawX += -0.1 * this.drawX;\n    this.drawY += -0.1 * this.drawY;\n\n    if (this.state === ChargeEnemyState.ALERTED) {\n      this.trailFrame += 0.4 * delta;\n\n      if (Math.floor(this.trailFrame) % 2 === 0) {\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\n        if (this.direction === Direction.LEFT) startX -= 3;\n        else if (this.direction === Direction.RIGHT) startX += 3;\n        else if (this.direction === Direction.DOWN) startY += 2;\n        else if (this.direction === Direction.UP) startY -= 8;\n\n        Game.ctx.strokeStyle = \"white\";\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n        Game.ctx.beginPath();\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\n        Game.ctx.lineCap = \"round\";\n        Game.ctx.lineTo(\n          Math.round((this.visualTargetX + 0.5) * GameConstants.TILESIZE),\n          Math.round((this.visualTargetY - 0.25) * GameConstants.TILESIZE),\n        );\n        Game.ctx.stroke();\n        Game.ctx.globalAlpha = 1;\n      }\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Coin } from \"../../item/coin\";\nimport { Player } from \"../../player\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { Item } from \"../../item/item\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class CrabEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 1;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 4;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"crab\";\n    this.orthogonalAttack = true;\n\n    if (drop) this.drop = drop;\n    else {\n      this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  get alertText() {\n    return `New Enemy Spotted: Crab \n    Health: ${this.health}\n    Attack Pattern: Omnidirectional\n    Moves every other turn`;\n  }\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 24);\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              this.lastPlayerPos,\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.setDrawXY(oldX, oldY);\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.rumbling = true;\n            this.makeHitWarnings();\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.makeHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 4;\n      } else {\n        this.tileX = 8;\n        this.tileY = 4;\n      }\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - 0.25 - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction,\n        1,\n        1,\n        this.x - this.drawX + rumbleX,\n        this.y - this.drawYOffset - this.drawY + rumbleY + 1.25,\n        1 * this.crushX,\n        1 * this.crushY,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      if (this.crushed) {\n        this.crushAnim(delta);\n      }\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Candle } from \"../../item/candle\";\nimport { EntityType } from \"../entity\";\nimport { ItemType } from \"../../gameState\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { globalEventBus } from \"../../eventBus\";\n\nenum EnemyState {\n  SLEEP,\n  AGGRO,\n  ATTACK,\n  DEAD,\n  IDLE,\n}\n\nexport abstract class Enemy extends Entity {\n  seenPlayer: boolean;\n  frame: number;\n  ticks: number;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  protected jumpY: number;\n  protected jumpHeight: number;\n  static difficulty: number;\n  //dir: Direction;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.drawYOffset = 1.5;\n    this.name = \"\";\n    this.seenPlayer = false;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.aggro = false;\n    this.jumpY = 0;\n    this.jumpHeight = 0.3;\n    //this.dir = Direction.South;\n    this.name = \"generic enemy\";\n  }\n\n  readonly tryMove = (x: number, y: number, collide: boolean = true) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let entityCollide = (entity: Entity): boolean => {\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) return false;\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && entityCollide(e) && collide) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 26);\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n    }\n  };\n\n  tick = () => {\n    this.behavior();\n    if (this.x !== this.lastX || this.y !== this.lastY) {\n      this.emitEntityData();\n    }\n  };\n  lookForPlayer = () => {\n    let p = this.nearestPlayer();\n    if (p !== false) {\n      let [distance, player] = p;\n      if (distance <= 4) {\n        this.targetPlayer = player;\n        this.facePlayer(player);\n        this.seenPlayer = true;\n        let type = this.constructor;\n        globalEventBus.emit(\"EnemySeenPlayer\", {\n          enemyType: this.constructor.name,\n          enemyName: this.name,\n        });\n        if (player === this.game.players[this.game.localPlayerID])\n          this.alertTicks = 1;\n        this.makeHitWarnings();\n      }\n    }\n  };\n\n  getDisablePositions = (): Array<astar.Position> => {\n    let disablePositions = Array<astar.Position>();\n    for (const e of this.room.entities) {\n      if (e !== this) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n      }\n    }\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n        if (\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\n        ) {\n          // Don't walk on active spike traps\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\n        }\n      }\n    }\n    return disablePositions;\n  };\n\n  findPath = () => {\n    let disablePositions = Array<astar.Position>();\n    for (const e of this.room.entities) {\n      if (e !== this) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n      }\n    }\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n        if (\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\n        ) {\n          // Don't walk on active spike traps\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\n        }\n      }\n    }\n    // Create a grid of the room\n    let grid = [];\n    for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n        if (this.room.roomArray[x] && this.room.roomArray[x][y])\n          grid[x][y] = this.room.roomArray[x][y];\n        else grid[x][y] = false;\n      }\n    }\n\n    // Find a path to the target player\n    let moves = astar.AStar.search(\n      grid,\n      this,\n      this.targetPlayer,\n      disablePositions,\n      false,\n      false,\n      true,\n      this.direction,\n    );\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // Don't walk on active spike traps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  // Attack the player if they are in the way\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(moveX, moveY);\n                if (this.x > moveX) this.direction = Direction.RIGHT;\n                else if (this.x < moveX) this.direction = Direction.LEFT;\n                else if (this.y > moveY) this.direction = Direction.DOWN;\n                else if (this.y < moveY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n    this.jumpY = Math.sin(j * Math.PI) * this.jumpHeight;\n    if (this.jumpY < 0.01 && this.jumpY > -0.01) this.jumpY = 0;\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n  };\n\n  updateDrawXY = (delta: number) => {\n    if (!this.doneMoving()) {\n      this.drawX -= this.drawMoveSpeed * delta * this.drawX;\n      this.drawY -= this.drawMoveSpeed * delta * this.drawY;\n\n      this.drawX =\n        Math.abs(this.drawX) < 0.01 ? 0 : Math.max(-1, Math.min(this.drawX, 1));\n      this.drawY =\n        Math.abs(this.drawY) < 0.01 ? 0 : Math.max(-1, Math.min(this.drawY, 1));\n      this.jump(delta);\n    }\n  };\n\n  setDrawXY = (x: number, y: number) => {\n    this.drawX += this.x - x;\n    this.drawY += this.y - y;\n  };\n\n  get lastPlayerPos() {\n    return {\n      x: this.targetPlayer.lastX,\n      y: this.targetPlayer.lastY,\n    };\n  }\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n  get type() {\n    return EntityType.ENEMY;\n  }\n}\n","import { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { Heart } from \"../../item/heart\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Player } from \"../../player\";\nimport { Coin } from \"../../item/coin\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { Random } from \"../../random\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { LightSource } from \"../../lightSource\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class EnergyWizardEnemy extends WizardEnemy {\n  static difficulty: number = 3;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"wizard bomber\";\n    this.projectileColor = [0, 50, 150];\n\n    if (drop) this.drop = drop;\n    else {\n      if (Random.rand() < 0.02)\n        this.drop = new BlueGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n        this.frame += 0.4 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n\n    this.dead = true;\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n}\n","import { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { Heart } from \"../../item/heart\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Player } from \"../../player\";\nimport { Coin } from \"../../item/coin\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { Random } from \"../../random\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class FireWizardEnemy extends WizardEnemy {\n  static difficulty: number = 3;\n  readonly ATTACK_RADIUS = 5;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 35;\n    this.tileY = 8;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"fire wizard\";\n    this.projectileColor = [200, 20, 0];\n    if (drop) this.drop = drop;\n    else {\n      if (Random.rand() < 0.02)\n        this.drop = new BlueGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if (\n        (this.x - this.game.players[i].x) ** 2 +\n          (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2\n      ) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            const nearestPlayerInfo = this.nearestPlayer();\n            if (nearestPlayerInfo !== false) {\n              const [distance, targetPlayer] = nearestPlayerInfo;\n              const attackLength = 20;\n\n              const offsets = this.calculateProjectileOffsets(\n                targetPlayer.x,\n                targetPlayer.y,\n                10,\n              );\n\n              this.attemptProjectilePlacement(\n                [\n                  { x: -1, y: 0 },\n                  { x: -2, y: 0 },\n                  { x: 1, y: 0 },\n                  { x: 2, y: 0 },\n                  { x: 0, y: -1 },\n                  { x: 0, y: -2 },\n                  { x: 0, y: 1 },\n                  { x: 0, y: 2 },\n                ],\n                WizardFireball,\n                false,\n              );\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\n            emptyTiles = emptyTiles.filter(\n              (tile) =>\n                !this.room.projectiles.some(\n                  (projectile) =>\n                    projectile.x === tile.x && projectile.y === tile.y,\n                ),\n            );\n\n            let optimalDist = Game.randTable(\n              [2, 2, 3, 3, 3, 3, 3],\n              Random.rand,\n            );\n            // pick a random player to target\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n            this.tryMove(bestPos.x, bestPos.y);\n            this.drawX = this.x - oldX;\n            this.drawY = this.y - oldY;\n            this.frame = 0; // trigger teleport animation\n            this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\n            if (this.withinAttackingRangeOfPlayer()) {\n              this.state = WizardState.attack;\n            } else {\n              this.state = WizardState.idle;\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    if (!this.dead) {\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          this.tileX + Math.floor(this.frame),\n          this.tileY,\n          1,\n          2,\n          this.x,\n          this.y - 1.3,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n\n    this.dead = true;\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Coin } from \"../../item/coin\";\nimport { Player } from \"../../player\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { Item } from \"../../item/item\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Utils } from \"../../utils\";\n\nexport class FrogEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  frameLength: number;\n  startFrame: number;\n  animationSpeed: number;\n  tickCount: number;\n  rumbling: boolean;\n  jumping: boolean;\n  jumpDistance: number;\n  static difficulty: number = 1;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 12;\n    this.tileY = 16;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.frameLength = 3;\n    this.startFrame = 0;\n    this.animationSpeed = 0.1;\n    this.tickCount = 0;\n    this.jumping = false;\n    this.jumpDistance = 1;\n    this.drop = drop ? drop : new Coin(this.room, this.x, this.y);\n    this.name = \"frog\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = true;\n    this.jumpHeight = 1;\n    this.drawMoveSpeed = 0.2;\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 30);\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 0.5;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.tileX = 1;\n    this.frameLength = 3;\n    this.animationSpeed = 0.1;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        this.tileX = 12;\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        this.tileX = 1;\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            let targetPosition = {\n              x: this.targetPlayer.x,\n              y: this.targetPlayer.y,\n            };\n            let dx = this.targetPlayer.x - this.x;\n            let dy = this.targetPlayer.y - this.y;\n            if (\n              (dx === 0 && dy <= 1) ||\n              (dx <= 1 && dy === 0) ||\n              (dx === 0 && dy >= -1) ||\n              (dx >= -1 && dy === 0)\n            ) {\n              let jumpOverX = this.targetPlayer.x + dx;\n              let jumpOverY = this.targetPlayer.y + dy;\n              if (\n                this.room.roomArray[jumpOverX] &&\n                this.room.roomArray[jumpOverX][jumpOverY]\n              ) {\n                if (!this.room.roomArray[jumpOverX][jumpOverY].isSolid()) {\n                  targetPosition = {\n                    x: jumpOverX,\n                    y: jumpOverY,\n                  };\n                }\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              targetPosition,\n              disablePositions,\n              false,\n              false,\n              false,\n              undefined,\n              undefined,\n              false,\n              this.lastPlayerPos,\n            );\n            //console.log(moves); //DON'T REMOVE THIS\n\n            if (moves[1]) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[1].pos.x &&\n                  this.game.players[i].y === moves[1].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX += 1.5 * (this.x - this.game.players[i].x);\n                  this.drawY += 1.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                if (moves.length > 1) {\n                  let moveX = moves[1].pos.x;\n                  let moveY = moves[1].pos.y;\n                  this.tryMove(moveX, moveY);\n                  this.setDrawXY(this.lastX, this.lastY);\n\n                  if (this.jumping) {\n                    this.frame = 8;\n                    this.animationSpeed = 1;\n                  }\n                  if (this.x > moveX) this.direction = Direction.RIGHT;\n                  else if (this.x < moveX) this.direction = Direction.LEFT;\n                  else if (this.y > moveY) this.direction = Direction.DOWN;\n                  else if (this.y < moveY) this.direction = Direction.UP;\n                }\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.makeHitWarnings();\n            this.rumbling = true;\n            this.tileX = 3;\n            this.frame = 0;\n            this.frameLength = 2;\n            this.animationSpeed = 0.2;\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.makeHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  jump = (delta: number) => {\n    console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\n    if (this.jumping) {\n      let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n      if (j > 1) {\n        this.jumpDistance = 2;\n        this.drawMoveSpeed = 0.2;\n      }\n      this.jumpY =\n        Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\n      if (this.jumpY < 0.01 && this.jumpY > -0.01) {\n        this.jumpY = 0;\n        this.jumpDistance = 1;\n        this.drawMoveSpeed = 0.2;\n      }\n      if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n    }\n  };\n\n  updateDrawXY = (delta: number) => {\n    if (!this.doneMoving()) {\n      this.drawX -= this.drawMoveSpeed * delta * this.drawX;\n      this.drawY -= this.drawMoveSpeed * delta * this.drawY;\n\n      this.drawX =\n        Math.abs(this.drawX) < 0.01 ? 0 : Math.max(-2, Math.min(this.drawX, 2));\n      this.drawY =\n        Math.abs(this.drawY) < 0.01 ? 0 : Math.max(-2, Math.min(this.drawY, 2));\n      this.jump(delta);\n    }\n  };\n\n  makeHitWarnings = () => {\n    const cullFactor = 0.25;\n    const player: Player = this.getPlayer();\n    const orthogonal = this.orthogonalAttack;\n    const diagonal = this.diagonalAttack;\n    const forwardOnly = this.forwardOnlyAttack;\n    const direction = this.direction;\n    const orthoRange = this.attackRange;\n    const diagRange = this.diagonalAttackRange;\n\n    const generateOffsets = (\n      isOrthogonal: boolean,\n      range: number,\n    ): number[][] => {\n      const baseOffsets = isOrthogonal\n        ? [\n            [-2, 0],\n            [2, 0],\n            [0, -2],\n            [0, 2],\n          ]\n        : [\n            [-1, -1],\n            [1, 1],\n            [1, -1],\n            [-1, 1],\n          ];\n      return baseOffsets.flatMap(([dx, dy]) =>\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\n      );\n    };\n\n    const directionOffsets = {\n      [Direction.LEFT]: [-1, 0],\n      [Direction.RIGHT]: [1, 0],\n      [Direction.UP]: [0, -1],\n      [Direction.DOWN]: [0, 1],\n    };\n\n    let offsets: number[][] = [];\n    if (forwardOnly) {\n      const [dx, dy] = directionOffsets[direction];\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\n        (i + 1) * dx,\n        (i + 1) * dy,\n      ]);\n    } else {\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\n    }\n\n    const warningCoordinates = offsets\n      .map(([dx, dy]) => ({\n        x: dx,\n        y: dy,\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\n      }))\n      .sort((a, b) => a.distance - b.distance);\n\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\n\n    culledWarnings.forEach(({ x, y }) => {\n      const targetX = this.x + x;\n      const targetY = this.y + y;\n      if (this.isWithinRoomBounds(targetX, targetY)) {\n        const hitWarning = new HitWarning(\n          this.game,\n          targetX,\n          targetY,\n          this.x,\n          this.y,\n          true,\n          false,\n          this,\n        );\n        this.room.hitwarnings.push(hitWarning);\n        //this.hitWarnings.push(hitWarning);\n      }\n    });\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += this.animationSpeed * delta;\n      if (this.frame >= this.frameLength) {\n        this.frame = 0;\n      }\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\n      let rumbleY = this.rumble(this.rumbling, this.frame).y;\n      if (this.drawX !== 0 || this.drawY !== 0) {\n        this.jumping = true;\n      } else {\n        this.jumping = false;\n      }\n      if (this.jumping) {\n        this.frameLength = 10;\n        this.animationSpeed = 0.4;\n      } else {\n        this.frameLength = 3;\n        this.animationSpeed = 0.1;\n      }\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX +\n          (this.tileX !== 12 && !this.rumbling ? Math.floor(this.frame) : 0),\n        this.tileY /*+ this.direction * 2,*/,\n        1,\n        2,\n        this.x + rumbleX - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Coin } from \"../../item/coin\";\nimport { Player } from \"../../player\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { Item } from \"../../item/item\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Armor } from \"../../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../random\";\n\nexport class KnightEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  targetPlayer: Player;\n  aggro: boolean;\n  drop: Item;\n  static difficulty: number = 2;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 9;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n    this.name = \"burrow knight\";\n    this.orthogonalAttack = true;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.05)\n        this.drop = new DualDagger(this.room, this.x, this.y);\n      else if (dropProb < 0.01)\n        this.drop = new DualDagger(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 29);\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.rumbling = true;\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            this.rumbling = true;\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              this.lastPlayerPos,\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n            this.rumbling = false;\n          } else {\n            this.rumbling = true;\n            this.makeHitWarnings();\n          }\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.rumbling = true;\n                  this.makeHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    let rumbleX = this.rumble(this.rumbling, this.frame).x;\n    let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 8;\n      } else {\n        this.tileX = 4;\n        this.tileY = 0;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX + rumbleX,\n        this.y -\n          this.drawYOffset -\n          this.drawY +\n          (this.tileX === 4 ? 0.1875 : 0),\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Random } from \"../../random\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Candle } from \"../../item/candle\";\nimport { Enemy } from \"./enemy\";\n\nexport class QueenEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 23;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"queen\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = true;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.room, this.x, this.y);\n      else if (dropProb < 0.04)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor,\n      );\n    }\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false, //diagonalsOmni\n          );\n          if (moves.length > 0) {\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              //if ()\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Random } from \"../../random\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Candle } from \"../../item/candle\";\nimport { Enemy } from \"./enemy\";\n\nexport class RookEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  static difficulty: number = 4;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 23 + 28;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.name = \"rook\";\n    this.orthogonalAttack = true;\n    this.diagonalAttack = false;\n    this.jumpHeight = 0.5;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.room, this.x, this.y);\n      else if (dropProb < 0.04)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor,\n      );\n    }\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.makeHitWarnings();\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false, //diagonalsOmni\n            this.lastPlayerPos,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), this.name);\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.setDrawXY(oldX, oldY);\n            }\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { Candle } from \"../../item/candle\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../random\";\nimport { BeamEffect } from \"../../beamEffect\";\n\nexport class SkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  readonly REGEN_TICKS = 5;\n  drop: Item;\n  static difficulty: number = 2;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 5;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.name = \"skeleton\";\n    this.forwardOnlyAttack = true;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.05) this.drop = new Spear(this.room, this.x, this.y);\n      else if (dropProb < 0.01)\n        this.drop = new RedGem(this.room, this.x, this.y);\n      //else if (dropProb < 0.2) this.drop = new Candle(this.room, 0, 0);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    if (this.health == 2) this.unconscious = false;\n    this.health -= damage;\n    if (this.health == 1) {\n      this.unconscious = true;\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\n    } else this.healthBar.hurt();\n    if (this.health <= 0) {\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\n      this.kill();\n    } else {\n    }\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      if (this.health <= 1) {\n        this.unconscious = true;\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health = 2;\n          this.unconscious = false;\n        }\n        return;\n      }\n\n      this.ticks++;\n      if (!this.seenPlayer) {\n        this.lookForPlayer();\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n            undefined,\n            undefined,\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            this.facePlayer(player);\n\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          this.makeHitWarnings();\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 5;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 3;\n        this.tileY = 0;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileX = 2;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { Heart } from \"../../item/heart\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { SkullEnemy } from \"./skullEnemy\";\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\nimport { RedGem } from \"../../item/redgem\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { KnightEnemy } from \"./knightEnemy\";\nimport { WizardEnemy } from \"./wizardEnemy\";\nimport { Enemy } from \"./enemy\";\nimport { Random } from \"../../random\";\nimport { EnergyWizardEnemy } from \"./energyWizard\";\nimport { ZombieEnemy } from \"./zombieEnemy\";\nimport { BishopEnemy } from \"./bishopEnemy\";\nimport { CrabEnemy } from \"./crabEnemy\";\nimport { ChargeEnemy } from \"./chargeEnemy\";\nimport { BigKnightEnemy } from \"./bigKnightEnemy\";\nimport { BigSkullEnemy } from \"./bigSkullEnemy\";\nimport { FrogEnemy } from \"./frogEnemy\";\nimport { FireWizardEnemy } from \"./fireWizard\";\nimport { QueenEnemy } from \"./queenEnemy\";\nimport { ArmoredzombieEnemy } from \"./armoredzombieEnemy\";\nimport { RookEnemy } from \"./rookEnemy\";\n\nexport class Spawner extends Enemy {\n  ticks: number;\n  seenPlayer: boolean;\n  enemySpawnType: number;\n  enemyTable: number[];\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    enemyTable: number[],\n  ) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 6;\n    this.tileY = 4;\n    this.seenPlayer = true;\n    let drop = Game.randTable([1, 2, 3], Random.rand);\n    switch (drop) {\n      case 1:\n        this.drop = new BlueGem(this.room, this.x, this.y);\n        break;\n      case 2:\n        this.drop = new GreenGem(this.room, this.x, this.y);\n        break;\n      case 3:\n        this.drop = new RedGem(this.room, this.x, this.y);\n        break;\n    }\n    this.enemyTable = enemyTable.filter((t) => t !== 7);\n    const randSpawnType = Game.randTable(this.enemyTable, Random.rand);\n    this.enemySpawnType = randSpawnType;\n\n    this.name = \"reaper\";\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  behavior = () => {\n    let shouldSpawn = true;\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.tileX = 6;\n      if (this.ticks % 8 === 0) {\n        let positions = this.room\n          .getEmptyTiles()\n          .filter(\n            (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\n          );\n        if (this.enemySpawnType === 8) {\n          const offLimits = [\n            { x: this.x, y: this.y },\n            { x: this.x + 1, y: this.y + 1 },\n            { x: this.x - 1, y: this.y - 1 },\n            { x: this.x + 1, y: this.y - 1 },\n            { x: this.x - 1, y: this.y + 1 },\n          ];\n          positions = positions.filter(\n            (t) => !offLimits.some((o) => o.x === t.x && o.y === t.y),\n          );\n        }\n        if (positions.length > 0) {\n          this.tileX = 7;\n\n          const position = Game.randTable(positions, Random.rand);\n\n          let spawned;\n          switch (this.enemySpawnType) {\n            case 1:\n              spawned = new CrabEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 2:\n              spawned = new FrogEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 3:\n              spawned = new ZombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 4:\n              spawned = new SkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 5:\n              spawned = new EnergyWizardEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 6:\n              spawned = new ChargeEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 7:\n              spawned = new RookEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 8:\n              spawned = new BishopEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 9:\n              spawned = new ArmoredzombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 10:\n              spawned = new BigSkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.room.roomArray[position.x + xx][position.y + yy] =\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\n                }\n              }\n              break;\n            case 11:\n              spawned = new QueenEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 12:\n              spawned = new KnightEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 13:\n              spawned = new BigKnightEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.room.roomArray[position.x + xx][position.y + yy] =\n                    new Floor(this.room, position.x + xx, position.y + yy); // remove any walls\n                }\n              }\n              break;\n            case 14:\n              spawned = new ZombieEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n            case 15:\n              spawned = new FireWizardEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n              );\n              break;\n          }\n          let roomArea = this.room.width * this.room.height;\n          let enemies = this.room.entities.filter((e) => e instanceof Enemy);\n          let maxIndividualCount = Math.round(\n            (this.room.width + this.room.height) /\n              spawned.constructor.difficulty ** 2,\n          );\n          let enemySpawnTypeCount = this.room.entities.filter(\n            (e) => e instanceof spawned.constructor,\n          ).length;\n          console.log(\n            `Count in room of ${spawned.constructor.name}: ${enemySpawnTypeCount}`,\n          );\n          console.log(\n            `maxIndividualCount of ${spawned.constructor.name}: ${maxIndividualCount}`,\n          );\n\n          if (\n            enemies.length >= Math.round(roomArea / 4) ||\n            enemySpawnTypeCount >= maxIndividualCount\n          ) {\n            shouldSpawn = false;\n          }\n\n          if (shouldSpawn) {\n            this.room.projectiles.push(\n              new EnemySpawnAnimation(\n                this.room,\n                spawned,\n                position.x,\n                position.y,\n              ),\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, position.x, position.y, this.x, this.y),\n            );\n          }\n        }\n      }\n      if (shouldSpawn) this.ticks++;\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n  dropLoot = () => {\n    this.room.items.push(this.drop);\n  };\n}\n","import { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { astar } from \"../../astarclass\";\nimport { Heart } from \"../../item/heart\";\nimport { Floor } from \"../../tile/floor\";\nimport { Bones } from \"../../tile/bones\";\nimport { DeathParticle } from \"../../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Player } from \"../../player\";\nimport { Coin } from \"../../item/coin\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { Random } from \"../../random\";\nimport { Item } from \"../../item/item\";\nimport { Enemy } from \"./enemy\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { LightSource } from \"../../lightSource\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport abstract class WizardEnemy extends Enemy {\n  static difficulty: number = 3;\n  ticks: number;\n  state: WizardState;\n  frame: number;\n  seenPlayer: boolean;\n  projectileColor: [number, number, number];\n  readonly ATTACK_RADIUS = 5;\n\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.name = \"wizard bomber\";\n    if (drop) this.drop = drop;\n    else {\n      if (Random.rand() < 0.02)\n        this.drop = new BlueGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  newLightSource = (\n    x: number,\n    y: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.lightSource = new LightSource(x, y, radius, color, brightness);\n  };\n\n  addLightSource = (lightSource: LightSource) => {\n    this.room.lightSources.push(lightSource);\n  };\n\n  removeLightSource = (lightSource: LightSource) => {\n    this.room.lightSources = this.room.lightSources.filter(\n      (ls) => ls !== lightSource,\n    );\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if (\n        (this.x - this.game.players[i].x) ** 2 +\n          (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2\n      ) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  behavior = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            const nearestPlayerInfo = this.nearestPlayer();\n            if (nearestPlayerInfo !== false) {\n              const [distance, targetPlayer] = nearestPlayerInfo;\n              const attackLength = 20;\n\n              const offsets = this.calculateProjectileOffsets(\n                targetPlayer.x,\n                targetPlayer.y,\n                10,\n              );\n\n              this.attemptProjectilePlacement(\n                [\n                  { x: -1, y: 0 },\n                  { x: -2, y: 0 },\n                  { x: 1, y: 0 },\n                  { x: 2, y: 0 },\n                  { x: 0, y: -1 },\n                  { x: 0, y: -2 },\n                  { x: 0, y: 1 },\n                  { x: 0, y: 2 },\n                ],\n                WizardFireball,\n                false,\n              );\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\n            emptyTiles = emptyTiles.filter(\n              (tile) =>\n                !this.room.projectiles.some(\n                  (projectile) =>\n                    projectile.x === tile.x && projectile.y === tile.y,\n                ),\n            );\n\n            let optimalDist = Game.randTable(\n              [2, 2, 3, 3, 3, 3, 3],\n              Random.rand,\n            );\n            // pick a random player to target\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n            if (bestPos) {\n              this.tryMove(bestPos.x, bestPos.y);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              this.frame = 0; // trigger teleport animation\n              this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\n              if (this.withinAttackingRangeOfPlayer()) {\n                this.state = WizardState.attack;\n              } else {\n                this.state = WizardState.idle;\n              }\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n        this.frame += 0.2 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.3 - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n\n    this.dead = true;\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n}\n","import { Entity, EntityDirection } from \"../entity\";\nimport { Direction, Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Player } from \"../../player\";\nimport { HitWarning } from \"../../hitWarning\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { RedGem } from \"../../item/redgem\";\nimport { Item } from \"../../item/item\";\nimport { Spear } from \"../../weapon/spear\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Random } from \"../../random\";\nimport { astar } from \"../../astarclass\";\nimport { SpikeTrap } from \"../../tile/spiketrap\";\nimport { Pickaxe } from \"../../weapon/pickaxe\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Enemy } from \"./enemy\";\n\nexport class ZombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  dir: Direction;\n  static difficulty: number = 1;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.dir = Direction.DOWN;\n    this.name = \"zombie\";\n    this.forwardOnlyAttack = true;\n    this.drawMoveSpeed = 0.2;\n    this.jumpHeight = 0.35;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.room, this.x, this.y);\n      else if (dropProb < 0.02)\n        this.drop = new GreenGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 26);\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n    }\n  };\n\n  behavior = () => {\n    // Store the current position\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    // If the enemy is not dead\n    if (!this.dead) {\n      // Skip turns if necessary\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n\n      // Increment the tick counter\n      this.ticks++;\n\n      // If the enemy has not seen the player yet\n      if (!this.seenPlayer) this.lookForPlayer();\n      else if (this.seenPlayer) {\n        // If the target player has taken their turn\n        if (this.room.playerTicked === this.targetPlayer) {\n          // Decrement alert ticks\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n\n          // Store the old position\n          let oldX = this.x;\n          let oldY = this.y;\n\n          // Create a list of positions to avoid\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // Don't walk on active spike traps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          // Create a grid of the room\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n\n          // Find a path to the target player\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction,\n          );\n\n          // If there are moves available\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n\n            // Face the target player\n            this.facePlayer(player);\n\n            // Determine the new direction based on the move\n            if (moveX > oldX) this.direction = Direction.RIGHT;\n            else if (moveX < oldX) this.direction = Direction.LEFT;\n            else if (moveY > oldY) this.direction = Direction.DOWN;\n            else if (moveY < oldY) this.direction = Direction.UP;\n\n            // If the direction hasn't changed, attempt to move or attack\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moveX &&\n                  this.game.players[i].y === moveY\n                ) {\n                  // Attack the player if they are in the way\n                  this.game.players[i].hurt(this.hit(), this.name);\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (\n                    this.game.players[i] ===\n                    this.game.players[this.game.localPlayerID]\n                  )\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                // Move to the new position\n                this.tryMove(moveX, moveY);\n                this.setDrawXY(oldX, oldY);\n\n                if (this.x > oldX) this.direction = Direction.RIGHT;\n                else if (this.x < oldX) this.direction = Direction.LEFT;\n                else if (this.y > oldY) this.direction = Direction.DOWN;\n                else if (this.y < oldY) this.direction = Direction.UP;\n              }\n            }\n          }\n\n          // Add positions to avoid based on the current direction\n          if (this.direction == Direction.LEFT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.RIGHT) {\n            disablePositions.push({\n              x: this.x,\n              y: this.y + 1,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x,\n              y: this.y - 1,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.DOWN) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          if (this.direction == Direction.UP) {\n            disablePositions.push({\n              x: this.x + 1,\n              y: this.y,\n            } as astar.Position);\n            disablePositions.push({\n              x: this.x - 1,\n              y: this.y,\n            } as astar.Position);\n          }\n          // Make hit warnings\n          this.makeHitWarnings();\n        }\n\n        // Check if the target player is offline\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        // If the enemy is not aggro or the target player is offline, find a new target player\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.makeHitWarnings();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Bones } from \"../tile/bones\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { Floor } from \"../tile/floor\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { HealthBar } from \"../healthbar\";\nimport { Drawable } from \"../drawable\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Sound } from \"../sound\";\nimport { Projectile } from \"../projectile/projectile\";\nimport { Utils } from \"../utils\";\nimport { globalEventBus } from \"../eventBus\";\nimport { LightSource } from \"../lightSource\";\nimport { ZombieEnemy } from \"./enemy/zombieEnemy\";\nimport { EVENTS } from \"../events\";\n\nexport enum EntityDirection {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n}\n\nexport enum EntityType {\n  ENEMY,\n  FRIENDLY,\n  RESOURCE,\n  PROP,\n  CHEST,\n}\n\nexport interface entityData {\n  name: string;\n  location: { x: number; y: number };\n}\n\nexport class Entity extends Drawable {\n  room: Room;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  direction: Direction;\n  drawX: number;\n  drawY: number;\n  dead: boolean;\n  game: Game;\n  health: number;\n  maxHealth: number;\n  protected tileX: number;\n  protected tileY: number;\n  protected hasShadow: boolean;\n  skipNextTurns: number;\n  //TODO: change these to functions? for enemies that switch states\n  destroyable: boolean; // can the player destroy this enemy?\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\n  interactable: boolean; // can the player interact\n  protected deathParticleColor: string;\n  healthBar: HealthBar;\n  drop: Item;\n  protected sleepingZFrame = 0;\n  alertTicks: number;\n  protected exclamationFrame: number;\n  protected lastX: number;\n  protected lastY: number;\n  protected hitBy: Player;\n  protected crushX: number;\n  protected crushY: number;\n  protected crushVertical: boolean;\n  protected crushed: boolean;\n  protected rumbling: boolean;\n  protected animationSpeed: number;\n  protected drawYOffset: number;\n  name: string;\n  protected orthogonalAttack: boolean;\n  protected diagonalAttack: boolean;\n  protected forwardOnlyAttack: boolean;\n  protected attackRange: number;\n  protected diagonalAttackRange: number;\n  lightSource: LightSource;\n  drawMoveSpeed: number;\n  unconscious: boolean;\n  hitWarnings: HitWarning[];\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super();\n\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.game = game;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = true;\n    this.skipNextTurns = 0;\n    this.direction = Direction.DOWN;\n    this.destroyable = true;\n    this.pushable = false;\n    this.chainPushable = true;\n    this.interactable = false;\n    this.healthBar = new HealthBar();\n    this.alertTicks = 0;\n    this.exclamationFrame = 0;\n    this.lastX = x;\n    this.lastY = y;\n    this.hitBy = null;\n    this.crushX = 1;\n    this.crushY = 1;\n    this.crushVertical = false;\n    this.crushed = false;\n    this.rumbling = false;\n    this.animationSpeed = 0.1;\n    this.drawYOffset = 1.175;\n    this.hitWarnings = [];\n    this.orthogonalAttack = false;\n    this.diagonalAttack = false;\n    this.forwardOnlyAttack = false;\n    this.attackRange = 1;\n    this.diagonalAttackRange = 1;\n    this.drawMoveSpeed = 0.3;\n    this.unconscious = false;\n  }\n\n  static add<\n    T extends new (\n      room: Room,\n      game: Game,\n      x: number,\n      y: number,\n      ...rest: any[]\n    ) => Entity,\n  >(this: T, room: Room, game: Game, x: number, y: number, ...rest: any[]) {\n    room.entities.push(new this(room, game, x, y, ...rest));\n  }\n\n  addLightSource = (lightSource: LightSource) => {\n    this.room.lightSources.push(lightSource);\n  };\n\n  removeLightSource = (lightSource: LightSource) => {\n    this.room.lightSources = this.room.lightSources.filter(\n      (ls) => ls !== lightSource,\n    );\n  };\n\n  behavior = () => {};\n\n  hit = (): number => {\n    return 0;\n  };\n\n  hurtCallback = () => {};\n\n  get type() {\n    return EntityType.ENEMY;\n  }\n  /*\n  playerKilledBy = (enemy: Entity) => {\n    return enemy;\n  };\n*/\n  pointIn = (x: number, y: number): boolean => {\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n  };\n\n  updateDrawXY = (delta: number) => {\n    if (!this.doneMoving()) {\n      this.drawX -= this.drawMoveSpeed * delta * this.drawX;\n      this.drawY -= this.drawMoveSpeed * delta * this.drawY;\n\n      this.drawX =\n        Math.abs(this.drawX) < 0.01 ? 0 : Math.max(-1, Math.min(this.drawX, 1));\n      this.drawY =\n        Math.abs(this.drawY) < 0.01 ? 0 : Math.max(-1, Math.min(this.drawY, 1));\n    }\n  };\n\n  setDrawXY = (x: number, y: number) => {\n    this.drawX += this.x - x;\n    this.drawY += this.y - y;\n  };\n\n  readonly getPlayer = () => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return closestPlayer;\n  };\n  /*\n  readonly lastHitBy = (player: Player) => {\n    this.hitBy = player;\n    if (this.hitBy) this.game.pushMessage(`${this.hitBy}`);\n    else this.game.pushMessage(\"Unknown\");\n  };\n  */\n\n  readonly hurt = (playerHitBy: Player, damage: number) => {\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  interact = (player: Player) => {};\n\n  readonly dropLoot = () => {\n    if (this.drop) {\n      this.drop.level = this.room;\n      if (!this.room.roomArray[this.x][this.y].isSolid()) {\n        this.drop.x = this.x;\n        this.drop.y = this.y;\n      } else if (this.room.roomArray[this.x][this.y].isSolid()) {\n        this.drop.x = this.lastX;\n        this.drop.y = this.lastY;\n      }\n      this.room.items.push(this.drop);\n      this.drop.onDrop();\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n    this.emitEnemyKilled();\n\n    this.killNoBones();\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    /*GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      this.deathParticleColor\n    );\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n*/\n    this.dropLoot();\n  };\n\n  shadeAmount = () => {\n    return this.room.softVis[this.x][this.y];\n  };\n\n  emitEnemyKilled = () => {\n    globalEventBus.emit(EVENTS.ENEMY_KILLED, {\n      enemyId: this.name,\n    });\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  nearestPlayer = (): [number, Player] | false => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return [closestDistance, closestPlayer];\n  };\n\n  playerDistance = (player: Player): number => {\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\n  };\n\n  facePlayer = (player: Player) => {\n    let dx = player.x - this.x;\n    let dy = player.y - this.y;\n    if (Math.abs(dx) === Math.abs(dy)) {\n      // just moved, already facing player\n    } else if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx > 0) this.direction = Direction.RIGHT;\n      if (dx < 0) this.direction = Direction.LEFT;\n    } else {\n      if (dy > 0) this.direction = Direction.DOWN;\n      if (dy < 0) this.direction = Direction.UP;\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n    /*if (this.crushed) {\n      this.crushAnim(delta);\n    }*/\n  };\n\n  tick = () => {\n    this.behavior();\n  };\n\n  emitEntityData = (): void => {\n    globalEventBus.emit(\"EntityData\", {\n      name: this.name,\n      location: { x: this.x, y: this.y },\n    });\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.updateDrawXY(delta);\n\n    this.drawableY = this.y - this.drawY;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true,\n    );\n  };\n\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.sleepingZFrame += delta;\n\n    let numZs = 2;\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\n    t -= Math.floor(t);\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\n    for (let off = numZs - 1; off >= 0; off--) {\n      let yoff = (t + off) * 7;\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\n\n      let xoff = 0;\n      if (off === 0) xoff = 1;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n\n      let width = Game.measureText(\"Z\").width;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\n      Game.fillTextOutline(\n        \"Z\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\n        GameConstants.OUTLINE,\n        \"white\",\n      );\n      Game.ctx.globalAlpha = 1;\n    }\n  };\n\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.exclamationFrame += delta;\n\n    let yoff: number | false = 0;\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\n    else yoff = yoffs[this.exclamationFrame];\n\n    let width = Game.measureText(\"!\").width;\n    Game.ctx.globalAlpha = 1;\n    if (yoff !== false) {\n      Game.fillTextOutline(\n        \"!\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\n        GameConstants.OUTLINE,\n        GameConstants.WARNING_RED,\n      );\n    }\n  };\n\n  crush = () => {\n    this.crushed = true;\n    let player: Player;\n    for (let i in this.game.players) {\n      player = this.game.players[i];\n    }\n    if (this.x == player.x) {\n      this.crushVertical = true;\n    }\n    this.kill();\n  };\n\n  crushAnim = (delta: number) => {\n    if (this.crushVertical && this.crushY >= 0) {\n      this.crushY *= 0.95;\n    } else if (this.crushX >= 0) {\n      this.crushX *= 0.95;\n    }\n  };\n  //set rumbling in the tick function for the enemies\n  //create variables for the rumbling x and y offsets\n  //return the rumbling x and y offsets\n  //add the rumbling x and y offsets to the enemy's x and y in the draw function\n  rumble = (rumbling: boolean, frame: number, direction?: Direction) => {\n    let rumbleOffset = { x: 0, y: 0 };\n\n    if (rumbling) {\n      const isOddFrame = Math.floor(frame) % 2 === 1;\n      const offset = isOddFrame ? 0.0325 : 0;\n\n      if (direction === Direction.LEFT || direction === Direction.RIGHT) {\n        rumbleOffset.y = offset;\n      } else if (\n        direction === Direction.UP ||\n        direction === Direction.DOWN ||\n        !direction\n      ) {\n        rumbleOffset.x = offset;\n      }\n      this.animationSpeed = 0.2;\n    }\n    return rumbleOffset;\n  };\n\n  attemptProjectilePlacement = (\n    offsets: { x: number; y: number }[],\n    projectileClass: new (parent: Entity, x: number, y: number) => Projectile,\n    collide: boolean = false,\n    clearPath: boolean = true,\n    targetingPlayer: boolean = false,\n  ) => {\n    for (const offset of offsets) {\n      const targetX = this.x + offset.x;\n      const targetY = this.y + offset.y;\n\n      if (\n        !this.isValidProjectilePosition(targetX, targetY, collide, clearPath)\n      ) {\n        if (targetingPlayer) break;\n        continue;\n      }\n\n      this.placeProjectile(projectileClass, targetX, targetY);\n\n      if (targetingPlayer) break;\n    }\n  };\n\n  private isValidProjectilePosition = (\n    x: number,\n    y: number,\n    collide: boolean,\n    clearPath: boolean,\n  ): boolean => {\n    if (!this.isWithinRoomBounds(x, y)) return false;\n    if (clearPath && !this.isPathClear(this.x, this.y, x, y)) return false;\n    if (collide && this.isEntityColliding(x, y)) return false;\n\n    const targetTile = this.room.roomArray[x][y];\n    return targetTile && !targetTile.isSolid() && !targetTile.isDoor;\n  };\n\n  private isEntityColliding = (x: number, y: number): boolean => {\n    return this.room.entities.some(\n      (entity) => entity.x === x && entity.y === y,\n    );\n  };\n\n  private placeProjectile = (\n    projectileClass: new (\n      parent: Entity,\n      x: number,\n      y: number,\n      color?: [number, number, number],\n    ) => Projectile,\n    x: number,\n    y: number,\n    color?: [number, number, number],\n  ) => {\n    this.room.projectiles.push(new projectileClass(this, x, y, color));\n  };\n\n  isPathClear = (\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ): boolean => {\n    const dx = Math.sign(endX - startX);\n    const dy = Math.sign(endY - startY);\n    let x = startX;\n    let y = startY;\n\n    while (x !== endX || y !== endY) {\n      x += dx;\n      y += dy;\n      if (\n        !this.isWithinRoomBounds(x, y) ||\n        this.room.roomArray[x][y]?.isSolid()\n      ) {\n        //console.log(`Path blocked at (${x}, ${y})`);\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  calculateProjectileOffsets(\n    targetX: number,\n    targetY: number,\n    attackLength: number,\n  ): { x: number; y: number }[] {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    let offsets = [];\n\n    // Normalize the direction\n    const stepX = dx !== 0 ? Math.sign(dx) : 0;\n    const stepY = dy !== 0 ? Math.sign(dy) : 0;\n\n    // Generate offsets for the full attackLength\n    for (let i = 1; i <= attackLength; i++) {\n      offsets.push({ x: i * stepX, y: i * stepY });\n    }\n\n    return offsets;\n  }\n\n  getLuminance = (): number => {\n    if (this.room.roomArray[this.x][this.y]) {\n      return this.room.vis[this.x][this.y];\n    }\n    return null;\n  };\n\n  getAverageLuminance = (): number => {\n    let total = 0;\n    let count = 0;\n    for (let x = this.x - 2; x <= this.x + 2; x++) {\n      for (let y = this.y - 2; y <= this.y + 2; y++) {\n        if (this.room.vis[x][y]) {\n          total += this.room.vis[x][y];\n          count++;\n        }\n      }\n    }\n    return total / count;\n  };\n\n  makeHitWarnings = () => {\n    const cullFactor = 0.25;\n    const player: Player = this.getPlayer();\n    const orthogonal = this.orthogonalAttack;\n    const diagonal = this.diagonalAttack;\n    const forwardOnly = this.forwardOnlyAttack;\n    const direction = this.direction;\n    const orthoRange = this.attackRange;\n    const diagRange = this.diagonalAttackRange;\n\n    const generateOffsets = (\n      isOrthogonal: boolean,\n      range: number,\n    ): number[][] => {\n      const baseOffsets = isOrthogonal\n        ? [\n            [-1, 0],\n            [1, 0],\n            [0, -1],\n            [0, 1],\n          ]\n        : [\n            [-1, -1],\n            [1, 1],\n            [1, -1],\n            [-1, 1],\n          ];\n      return baseOffsets.flatMap(([dx, dy]) =>\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\n      );\n    };\n\n    const directionOffsets = {\n      [Direction.LEFT]: [-1, 0],\n      [Direction.RIGHT]: [1, 0],\n      [Direction.UP]: [0, -1],\n      [Direction.DOWN]: [0, 1],\n    };\n\n    let offsets: number[][] = [];\n    if (forwardOnly) {\n      const [dx, dy] = directionOffsets[direction];\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\n        (i + 1) * dx,\n        (i + 1) * dy,\n      ]);\n    } else {\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\n    }\n\n    const warningCoordinates = offsets\n      .map(([dx, dy]) => ({\n        x: dx,\n        y: dy,\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\n      }))\n      .sort((a, b) => a.distance - b.distance);\n\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\n\n    culledWarnings.forEach(({ x, y }) => {\n      const targetX = this.x + x;\n      const targetY = this.y + y;\n      if (this.isWithinRoomBounds(targetX, targetY)) {\n        const hitWarning = new HitWarning(\n          this.game,\n          targetX,\n          targetY,\n          this.x,\n          this.y,\n          true,\n          false,\n          this,\n        );\n        this.room.hitwarnings.push(hitWarning);\n        //this.hitWarnings.push(hitWarning);\n      }\n    });\n  };\n\n  isWithinRoomBounds = (x: number, y: number): boolean => {\n    const xInBounds =\n      x >= this.room.roomX && x < this.room.roomX + this.room.width;\n    const yInBounds =\n      y >= this.room.roomY && y < this.room.roomY + this.room.height;\n    const tileExists =\n      this.room.roomArray[x] && this.room.roomArray[x][y] !== undefined;\n\n    return xInBounds && yInBounds && tileExists;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Barrel extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 1;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.name = \"barrel\";\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 25);\n\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.updateDrawXY(delta);\n  };\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room\";\nimport { Heart } from \"../../item/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coin } from \"../../item/coin\";\nimport { Sound } from \"../../sound\";\nimport { RedGem } from \"../../item/redgem\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { EntityType } from \"../entity\";\nimport { Random } from \"../../random\";\nimport { Player } from \"../../player\";\nimport { Torch } from \"../../item/torch\";\n\nexport class Chest extends Entity {\n  frame: number;\n  opening: boolean;\n  dropX: number;\n  dropY: number;\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.health = 2;\n    this.name = \"chest\";\n    this.frame = 0;\n    this.opening = false;\n    this.dropX = 0;\n    this.dropY = 0;\n    this.drop = null;\n  }\n\n  get type() {\n    return EntityType.CHEST;\n  }\n\n  readonly hurt = (playerHitBy: Player, damage: number) => {\n    //this.healthBar.hurt();\n    this.health -= 1;\n    if (this.health === 1 && !this.opening) this.open();\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  private open = () => {\n    this.tileX = 0;\n    this.tileY = 2;\n\n    this.opening = true;\n    const { x, y } = this.getOpenTile();\n\n    switch (this.rollDrop()) {\n      case 1:\n        this.drop = new Heart(this.room, x, y);\n        break;\n      case 2:\n        this.drop = new Torch(this.room, x, y);\n        break;\n      case 3:\n        this.drop = new RedGem(this.room, x, y);\n        break;\n      case 4:\n        this.drop = new BlueGem(this.room, x, y);\n        break;\n      case 5:\n        this.drop = new Key(this.room, x, y);\n        break;\n      case 6:\n        this.drop = new Armor(this.room, x, y);\n        break;\n    }\n    this.room.items.push(this.drop);\n  };\n\n  rollDrop = (): number => {\n    return Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 2, 2], Random.rand);\n  };\n\n  kill = () => {\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#fbf236\",\n    );\n\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  getOpenTile = (): { x: number; y: number } => {\n    let x, y;\n    do {\n      x = Game.rand(this.x - 1, this.x + 1, Random.rand);\n      y = Game.rand(this.y - 1, this.y + 1, Random.rand);\n    } while (\n      (x === this.x && y === this.y) ||\n      this.room.roomArray[x][y].isSolid() ||\n      this.room.entities.some((e) => e.x === x && e.y === y)\n    );\n    return { x, y };\n  };\n\n  draw = (delta: number) => {\n    if (this.opening) {\n      if (this.tileX <= 6) {\n        this.tileX += 0.15 * delta;\n      } else {\n        this.opening = false;\n      }\n    }\n\n    if (!this.dead) {\n      Game.drawObj(\n        Math.floor(this.tileX),\n        Math.floor(this.tileY),\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Crate extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.name = \"crate\";\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 26);\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.updateDrawXY(delta);\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Mushrooms extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 9;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"mushrooms\";\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 30);\n\n    this.room.items.push(new Shrooms(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Candle } from \"../../item/candle\";\nimport { Random } from \"../../random\";\nimport { Coin } from \"../../item/coin\";\nimport { Sound } from \"../../sound\";\n\nexport class Pot extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 11;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"pot\";\n\n    let dropProb = Random.rand();\n    if (dropProb < 0.025) this.drop = new Heart(this.room, this.x, this.y);\n    else this.drop = new Coin(this.room, this.x, this.y);\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    this.dropLoot();\n    this.dead = true;\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 29);\n    Sound.delayPlay(Sound.potSmash, 250);\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Item } from \"../../item/item\";\nimport { Coin } from \"../../item/coin\";\nimport { EntityType } from \"../entity\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { Random } from \"../../random\";\nimport { Sound } from \"../../sound\";\n\nexport class PottedPlant extends Entity {\n  drop: Item;\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 2;\n    this.tileX = 3;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"plant\";\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Heart(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  hurtCallback = () => {\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 28);\n  };\n\n  kill = () => {\n    this.dead = true;\n    this.dropLoot();\n    Sound.delayPlay(Sound.potSmash, 250);\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 29);\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 28);\n  };\n  killNoBones = () => {\n    this.dead = true;\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      if (this.health <= 1) this.tileX = 2;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n\n  dropLoot = () => {\n    this.drop.level = this.room;\n    this.drop.x = this.x;\n    this.drop.y = this.y;\n    this.room.items.push(this.drop);\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Shrooms } from \"../../item/shrooms\";\nimport { EntityType } from \"../entity\";\nimport { LightSource } from \"../../lightSource\";\nimport { Spellbook } from \"../../weapon/spellbook\";\nimport { Random } from \"../../random\";\nimport { Candle } from \"../../item/candle\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Pumpkin extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 1;\n    this.tileX = 15;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"pumpkin\";\n    this.drop = new Candle(this.room, this.x, this.y);\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      5,\n      [200, 30, 1],\n      3,\n    );\n    this.addLightSource(this.lightSource);\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    this.removeLightSource(this.lightSource);\n    this.dead = true;\n    this.dropLoot();\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 25);\n\n    //this.room.items.push(new Shrooms(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"../entity\";\nimport { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { EntityType } from \"../entity\";\nimport { SkullEnemy } from \"../enemy/skullEnemy\";\nimport { Random } from \"../../random\";\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\nimport { Player } from \"../../player\";\nimport { Item } from \"../../item/item\";\nimport { Spellbook } from \"../../weapon/spellbook\";\nimport { Sound } from \"../../sound\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\nimport { LightSource } from \"../../lightSource\";\n\nexport class TombStone extends Entity {\n  skinType: number;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    skinType: number,\n    drop?: Item,\n  ) {\n    super(room, game, x, y);\n    this.skinType = skinType;\n    this.room = room;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 11 + this.skinType;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.pushable = false;\n    this.destroyable = true;\n    this.skinType = skinType;\n    this.chainPushable = false;\n    this.name = \"tombstone\";\n    let dropProb = Random.rand();\n    if (dropProb < 0.05) this.drop = new Spellbook(this.room, this.x, this.y);\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      7,\n      [5, 150, 5],\n      1,\n    );\n    this.addLightSource(this.lightSource);\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  kill = () => {\n    this.removeLightSource(this.lightSource);\n    this.dead = true;\n    this.dropLoot();\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    this.healthBar.hurt();\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 25);\n\n    Sound.delayPlay(Sound.hurt, 0);\n\n    this.health -= 1;\n    if (this.health === 1) {\n      const positions = this.room\n        .getEmptyTiles()\n        .filter(\n          (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\n        );\n      if (positions.length > 0) {\n        for (let position of positions) {\n          for (const i in this.game.players) {\n            const playerX = this.game.players[i].x;\n            const playerY = this.game.players[i].y;\n            if (\n              (playerX !== position.x && playerY === position.y) ||\n              (playerX === position.x && playerY !== position.y)\n            ) {\n              this.room.entities.push(\n                new SkullEnemy(this.room, this.game, position.x, position.y),\n              );\n            }\n          }\n        }\n        Sound.delayPlay(Sound.skeleSpawn, 50);\n      }\n      this.tileX += 2;\n      //draw half broken tombstone based on skintype after it takes one damage\n    }\n    if (this.health <= 0) {\n      this.kill();\n      Sound.delayPlay(Sound.breakRock, 50);\n    } else {\n      this.hurtCallback();\n      //Sound.delayPlay(Sound.hit, 0);\n    }\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - this.drawYOffset - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.updateDrawXY(delta);\n  };\n}\n","import { Player } from \"../../player\";\nimport { Game } from \"../../game\";\nimport { Room } from \"../../room\";\nimport { Entity } from \"../entity\";\nimport { Item } from \"../../item/item\";\nimport { Key } from \"../../item/key\";\nimport { Coin } from \"../../item/coin\";\nimport { Coal } from \"../../item/coal\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { GameConstants } from \"../../gameConstants\";\nimport { Shotgun } from \"../../weapon/shotgun\";\nimport { Dagger } from \"../../weapon/dagger\";\nimport { Armor } from \"../../item/armor\";\nimport { Heart } from \"../../item/heart\";\nimport { Spear } from \"../../weapon/spear\";\nimport { Gold } from \"../../item/gold\";\nimport { BlueGem } from \"../../item/bluegem\";\nimport { DualDagger } from \"../../weapon/dualdagger\";\nimport { Lantern } from \"../../item/lantern\";\nimport { RedGem } from \"../../item/redgem\";\nimport { EntityType } from \"../entity\";\nimport { Random } from \"../../random\";\nimport { Warhammer } from \"../../weapon/warhammer\";\nimport { Torch } from \"../../item/torch\";\nimport { Spellbook } from \"../../weapon/spellbook\";\n\nlet OPEN_TIME = 150;\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet FULL_OUTLINE = \"white\";\n\nexport class VendingMachine extends Entity {\n  playerOpened: Player;\n  open = false;\n  openTime = 0;\n  costItems: Array<Item>;\n  item: Item;\n  isInf = false;\n  quantity = 1;\n  buyAnimAmount = 0;\n\n  constructor(room: Room, game: Game, x: number, y: number, item: Item) {\n    super(room, game, x, y);\n\n    this.destroyable = false;\n    this.pushable = false;\n    this.chainPushable = false;\n    this.interactable = true;\n\n    this.costItems = [];\n\n    this.item = item;\n    this.name = \"vending machine\";\n    if (this.item instanceof Shotgun) {\n      let g = new BlueGem(room, 0, 0);\n      g.stackCount = Game.randTable([7], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Heart) {\n      let c = new Coin(room, 0, 0);\n      c.stackCount = 10;\n      this.costItems = [c];\n      this.quantity = 3;\n    } else if (this.item instanceof Spear) {\n      let g = new GreenGem(room, 0, 0);\n      g.stackCount = Game.randTable([5], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Armor) {\n      let g = new GreenGem(room, 0, 0);\n      g.stackCount = Game.randTable([5], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof DualDagger) {\n      let g = new BlueGem(room, 0, 0);\n      g.stackCount = Game.randTable([5], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Lantern) {\n      let c = new Coin(room, 0, 0);\n      c.stackCount = Game.randTable([50], Random.rand);\n      this.costItems = [c];\n    } else if (this.item instanceof Warhammer) {\n      let g = new RedGem(room, 0, 0);\n      g.stackCount = Game.randTable([5], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Spellbook) {\n      let g = new RedGem(room, 0, 0);\n      g.stackCount = Game.randTable([7], Random.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Torch) {\n      let g = new RedGem(room, 0, 0);\n      g.stackCount = Game.randTable([1], Random.rand);\n      this.costItems = [g];\n    }\n  }\n\n  get type() {\n    return EntityType.PROP;\n  }\n\n  interact = (player: Player) => {\n    if (this.isInf || this.quantity > 0) {\n      if (this.open) this.playerOpened.openVendingMachine = null;\n      this.open = true;\n      this.playerOpened = player;\n      this.openTime = Date.now();\n      if (\n        this.playerOpened.openVendingMachine &&\n        this.playerOpened.openVendingMachine !== this\n      )\n        this.playerOpened.openVendingMachine.close();\n      this.playerOpened.openVendingMachine = this;\n    }\n  };\n\n  close = () => {\n    this.open = false;\n    this.playerOpened.openVendingMachine = null;\n  };\n\n  space = () => {\n    if (this.open) {\n      // check if player can pay\n      for (const i of this.costItems) {\n        if (!this.playerOpened.inventory.hasItemCount(i)) return;\n      }\n\n      for (const i of this.costItems) {\n        this.playerOpened.inventory.subtractItemCount(i);\n      }\n\n      let x, y;\n      do {\n        x = Game.rand(this.x - 1, this.x + 1, Random.rand);\n        y = Game.rand(this.y - 1, this.y + 1, Random.rand);\n      } while (\n        (x === this.x && y === this.y) ||\n        this.room.roomArray[x][y].isSolid() ||\n        this.room.entities.some((e) => e.x === x && e.y === y)\n      );\n\n      let newItem = new (this.item.constructor as { new (): Item })();\n      newItem = newItem.constructor(this.room, x, y);\n      this.room.items.push(newItem);\n\n      if (!this.isInf) {\n        this.quantity--;\n        if (this.quantity <= 0) this.close();\n      }\n\n      this.buyAnimAmount = 0.99;\n      if (this.playerOpened === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(0, 4);\n    }\n  };\n\n  draw = (delta: number) => {\n    let tileX = 19;\n    if (!this.isInf && this.quantity === 0) tileX = 20;\n    Game.drawObj(\n      tileX,\n      0,\n      1,\n      2,\n      this.x,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    if (\n      this.open &&\n      this.playerOpened === this.game.players[this.game.localPlayerID]\n    ) {\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3; // highlighted growth\n      let ob = 1; // outer border\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\n      let height = s + 2 * b + g - g;\n\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob),\n      );\n      for (let x = 0; x < this.costItems.length + 2; x++) {\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\n          Math.round(cy - 0.5 * height),\n          Math.round(s + 2 * b),\n          Math.round(s + 2 * b),\n        );\n        if (x !== this.costItems.length) {\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(cy - 0.5 * height + b),\n            Math.round(s),\n            Math.round(s),\n          );\n        }\n      }\n\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.costItems.length + 2; i++) {\n          let drawX = Math.round(\n            cx -\n              0.5 * width +\n              i * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n          let drawY = Math.round(\n            cy -\n              0.5 * height +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE,\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          if (i < this.costItems.length) {\n            let a = 1;\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i]))\n              a = 0.15;\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\n          } else if (i === this.costItems.length) {\n            Game.drawFX(2, 0, 1, 1, drawXScaled, drawYScaled, 1, 1);\n          } else if (i === this.costItems.length + 1) {\n            this.item.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n      }\n      this.buyAnimAmount *= this.buyAnimAmount;\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = this.buyAnimAmount;\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob),\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room\";\nimport { Heart } from \"../../item/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Coal } from \"../../item/coal\";\nimport { Sound } from \"../../sound\";\nimport { Inventory } from \"../../inventory\";\nimport { Weapon } from \"../../weapon/weapon\";\nimport { Pickaxe } from \"../../weapon/pickaxe\";\nimport { Player } from \"../../player\";\nimport { ItemState, ItemType } from \"../../gameState\";\n\nexport class CoalResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.name = \"coal\";\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#ffffff\",\n    );\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new Coal(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room\";\nimport { Heart } from \"../../item/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Sound } from \"../../sound\";\n\nexport class EmeraldResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 14;\n    this.tileY = 0;\n    this.health = 3;\n    this.name = \"emerald\";\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#fbf236\",\n    );\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new GreenGem(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room\";\nimport { Heart } from \"../../item/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Gold } from \"../../item/gold\";\nimport { Sound } from \"../../sound\";\n\nexport class GoldResource extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n    this.health = 2;\n    this.name = \"gold\";\n  }\n\n  hurtCallback = () => {\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new Gold(this.room, this.x, this.y));\n\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#fbf236\",\n    );\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Item } from \"../../item/item\";\nimport { Game } from \"../../game\";\nimport { Key } from \"../../item/key\";\nimport { Room } from \"../../room\";\nimport { Heart } from \"../../item/heart\";\nimport { Armor } from \"../../item/armor\";\nimport { Entity } from \"../entity\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GreenGem } from \"../../item/greengem\";\nimport { Player } from \"../../player\";\nimport { Pickaxe } from \"../../weapon/pickaxe\";\nimport { Spellbook } from \"../../weapon/spellbook\";\nimport { EntityType } from \"../entity\";\n\nexport class Resource extends Entity {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.chainPushable = false;\n    this.name = \"resource\";\n  }\n\n  get type() {\n    return EntityType.RESOURCE;\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy.inventory.getWeapon().canMine === true) {\n      this.healthBar.hurt();\n      this.health -= damage;\n      if (this.health <= 0) this.kill();\n      else {\n        this.game.pushMessage(\"Your weapon fails to damage the rock.\");\n        this.hurtCallback();\n      }\n    } else return;\n  };\n\n  kill = () => {\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Room } from \"../../room\";\nimport { Game } from \"../../game\";\nimport { Heart } from \"../../item/heart\";\nimport { LevelConstants } from \"../../levelConstants\";\nimport { GenericParticle } from \"../../particle/genericParticle\";\nimport { Player } from \"../../player\";\nimport { Sound } from \"../../sound\";\nimport { Stone } from \"../../item/stone\";\nimport { Resource } from \"./resource\";\nimport { ImageParticle } from \"../../particle/imageParticle\";\n\nexport class Rock extends Resource {\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, game, x, y);\n    this.room = room;\n    this.health = 2;\n    this.tileX = 8;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.name = \"rock\";\n  }\n\n  hurtCallback = () => {\n    ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24); //rock particle coord 0, 24\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#9badb7\",\n    );\n\n    this.room.items.push(new Stone(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.updateDrawXY(delta);\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { EventEmitter } from \"./eventEmitter\";\n\nclass EventBus {\n  private static instance: EventBus;\n  private eventEmitter: EventEmitter;\n\n  private constructor() {\n    this.eventEmitter = new EventEmitter();\n  }\n\n  public static getInstance(): EventBus {\n    if (!EventBus.instance) {\n      EventBus.instance = new EventBus();\n    }\n    return EventBus.instance;\n  }\n\n  public emit<T>(event: string, data: T): void {\n    this.eventEmitter.emit(event, data);\n  }\n\n  public on<T>(event: string, callback: (data: T) => void): void {\n    this.eventEmitter.on(event, callback);\n  }\n\n  public off<T>(event: string, callback: (data: T) => void): void {\n    this.eventEmitter.off(event, callback);\n  }\n}\n\nexport const globalEventBus = EventBus.getInstance();\n","type EventCallback<T = any> = (data: T) => void;\n\nexport class EventEmitter {\n  private events: Record<string, EventCallback[]> = {};\n\n  on<T>(event: string, listener: EventCallback<T>): void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off<T>(event: string, listener: EventCallback<T>): void {\n    if (!this.events[event]) return;\n    this.events[event] = this.events[event].filter((l) => l !== listener);\n  }\n\n  emit<T>(event: string, data: T): void {\n    if (!this.events[event]) return;\n    this.events[event].forEach((listener) => listener(data));\n  }\n\n  // New method to remove all listeners for an event\n  removeAllListeners(event: string): void {\n    delete this.events[event];\n  }\n}\n","export const EVENTS = {\n  KEY_DOWN: \"KEY_DOWN\",\n  KEY_UP: \"KEY_UP\",\n  MOUSE_LEFT_CLICK: \"MOUSE_LEFT_CLICK\",\n  MOUSE_RIGHT_CLICK: \"MOUSE_RIGHT_CLICK\",\n  MOUSE_MOVE: \"MOUSE_MOVE\",\n  TOUCH_START: \"TOUCH_START\",\n  TOUCH_MOVE: \"TOUCH_MOVE\",\n  TOUCH_END: \"TOUCH_END\",\n  TAP: \"TAP\",\n  TAP_HOLD: \"TAP_HOLD\",\n  MOUSE_DOWN: \"MOUSE_DOWN\",\n  MOUSE_UP: \"MOUSE_UP\",\n\n  // **Additional Custom Events:**\n  CHAT_MESSAGE: \"ChatMessage\",\n  ENEMY_SEEN_PLAYER: \"EnemySeenPlayer\",\n  ENEMY_KILLED: \"ENEMY_KILLED\",\n  DAMAGE_DONE: \"DAMAGE_DONE\",\n  DAMAGE_TAKEN: \"DAMAGE_TAKEN\",\n  TURN_PASSED: \"TURN_PASSED\",\n  COIN_COLLECTED: \"COIN_COLLECTED\",\n  ITEM_COLLECTED: \"ITEM_COLLECTED\",\n  LEVEL_GENERATION_STARTED: \"LEVEL_GENERATION_STARTED\",\n  LEVEL_GENERATION_COMPLETED: \"LEVEL_GENERATION_COMPLETED\",\n  // Add other custom events as needed\n} as const;\n\n// **TypeScript Interfaces for Event Payloads:**\n\nexport interface MouseClickEvent {\n  x: number;\n  y: number;\n}\n\nexport interface MouseMoveEvent {\n  x: number;\n  y: number;\n}\n\nexport interface KeyEvent {\n  key: string;\n}\n\nexport interface TouchEventData {\n  x: number;\n  y: number;\n}\n\nexport interface ChatMessageEvent {\n  message: string;\n}\n\nexport interface EnemySeenPlayerEvent {\n  enemyId: string;\n  playerId: string;\n  // Add other relevant properties\n}\n\nexport interface EnemyKilledEvent {\n  enemyId: string;\n}\n\nexport interface DamageDoneEvent {\n  amount: number;\n}\n\nexport interface DamageTakenEvent {\n  amount: number;\n}\n\nexport interface CoinCollectedEvent {\n  amount: number;\n}\n\nexport interface ItemCollectedEvent {\n  itemId: string;\n}\n\n// **Union Type for Events:**\nexport type AppEvents =\n  | typeof EVENTS.KEY_DOWN\n  | typeof EVENTS.KEY_UP\n  | typeof EVENTS.MOUSE_LEFT_CLICK\n  | typeof EVENTS.MOUSE_RIGHT_CLICK\n  | typeof EVENTS.MOUSE_MOVE\n  | typeof EVENTS.TOUCH_START\n  | typeof EVENTS.TOUCH_MOVE\n  | typeof EVENTS.TOUCH_END\n  | typeof EVENTS.TAP\n  | typeof EVENTS.TAP_HOLD\n  | typeof EVENTS.MOUSE_DOWN\n  | typeof EVENTS.MOUSE_UP\n  | typeof EVENTS.CHAT_MESSAGE\n  | typeof EVENTS.ENEMY_SEEN_PLAYER\n  | typeof EVENTS.ENEMY_KILLED\n  | typeof EVENTS.DAMAGE_DONE\n  | typeof EVENTS.DAMAGE_TAKEN\n  | typeof EVENTS.TURN_PASSED\n  | typeof EVENTS.COIN_COLLECTED\n  | typeof EVENTS.ITEM_COLLECTED\n  | typeof EVENTS.LEVEL_GENERATION_STARTED\n  | typeof EVENTS.LEVEL_GENERATION_COMPLETED;\n// | Add other events as needed\n\n// **Type Mapping for Event Payloads:**\nexport type EventPayloads = {\n  [EVENTS.KEY_DOWN]: string; // key identifier\n  [EVENTS.KEY_UP]: string;\n  [EVENTS.MOUSE_LEFT_CLICK]: MouseClickEvent;\n  [EVENTS.MOUSE_RIGHT_CLICK]: MouseClickEvent;\n  [EVENTS.MOUSE_MOVE]: MouseMoveEvent;\n  [EVENTS.TOUCH_START]: TouchEventData;\n  [EVENTS.TOUCH_MOVE]: TouchEventData;\n  [EVENTS.TOUCH_END]: TouchEventData;\n  [EVENTS.TAP]: MouseClickEvent;\n  [EVENTS.TAP_HOLD]: MouseClickEvent;\n  [EVENTS.MOUSE_DOWN]: MouseClickEvent;\n  [EVENTS.MOUSE_UP]: MouseClickEvent;\n\n  [EVENTS.CHAT_MESSAGE]: ChatMessageEvent;\n  [EVENTS.ENEMY_SEEN_PLAYER]: EnemySeenPlayerEvent;\n  [EVENTS.ENEMY_KILLED]: EnemyKilledEvent;\n  [EVENTS.DAMAGE_DONE]: DamageDoneEvent;\n  [EVENTS.DAMAGE_TAKEN]: DamageTakenEvent;\n  [EVENTS.TURN_PASSED]: void;\n  [EVENTS.COIN_COLLECTED]: CoinCollectedEvent;\n  [EVENTS.ITEM_COLLECTED]: ItemCollectedEvent;\n  [EVENTS.LEVEL_GENERATION_STARTED]: void;\n  [EVENTS.LEVEL_GENERATION_COMPLETED]: void;\n  // | Add other event payloads as needed\n};\n","import { GameConstants } from \"./gameConstants\";\nimport { EnemyType, Room, RoomType } from \"./room\";\nimport { Player } from \"./player\";\nimport { Door } from \"./tile/door\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { Input, InputEnum } from \"./input\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { TextBox } from \"./textbox\";\nimport { GameState, loadGameState } from \"./gameState\";\nimport { DoorDir } from \"./tile/door\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { TutorialListener } from \"./tutorialListener\";\nimport { MouseCursor } from \"./mouseCursor\";\nimport { PostProcessor } from \"./postProcess\";\nimport { globalEventBus } from \"./eventBus\";\nimport { ReverbEngine } from \"./reverb\";\nimport { Level } from \"./level\";\nimport { statsTracker } from \"./stats\";\nimport { EVENTS } from \"./events\";\n\nexport enum LevelState {\n  IN_LEVEL,\n  TRANSITIONING,\n  TRANSITIONING_LADDER,\n  LEVEL_GENERATION,\n}\n\nexport enum Direction {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n  DOWN_RIGHT,\n  UP_LEFT,\n  UP_RIGHT,\n  DOWN_LEFT,\n  CENTER,\n}\n\nexport class ChatMessage {\n  message: string;\n  timestamp: number;\n  constructor(message: string) {\n    this.message = message;\n    this.timestamp = Date.now();\n  }\n}\n\nlet getShadeCanvasKey = (\n  set: HTMLImageElement,\n  sx: number,\n  sy: number,\n  sw: number,\n  sh: number,\n  opacity: number,\n): string => {\n  return set.src + \",\" + sx + \",\" + sy + \",\" + sw + \",\" + sh + \",\" + opacity;\n};\n\n// fps counter\nconst times = [];\nlet fps = 60;\n\nexport class Game {\n  static ctx: CanvasRenderingContext2D;\n  static shade_canvases: Record<string, HTMLCanvasElement>;\n  prevLevel: Room; // for transitions\n  room: Room;\n  rooms: Array<Room>;\n  level: Level;\n  levels: Array<Level>;\n  levelgen: LevelGenerator;\n  localPlayerID = \"localplayer\";\n  players: Record<string, Player>;\n  offlinePlayers: Record<string, Player>;\n  levelState: LevelState;\n  transitionStartTime: number;\n  transitionX: number;\n  transitionY: number;\n  upwardTransition: boolean;\n  sideTransition: boolean;\n  sideTransitionDirection: number;\n  transitioningLadder: any;\n  screenShakeX: number;\n  screenShakeY: number;\n  shakeAmountX: number;\n  shakeAmountY: number;\n  shakeFrame: number;\n  screenShakeCutoff: number;\n  chat: Array<ChatMessage>;\n  chatOpen: boolean;\n  chatTextBox: TextBox;\n  previousFrameTimestamp: number;\n\n  mostRecentInputReceived = true;\n\n  loginMessage: string = \"\";\n  username: string;\n  usernameTextBox: TextBox;\n  passwordTextBox: TextBox;\n  worldCodes: Array<string>;\n  selectedWorldCode: number;\n  tutorialActive: boolean;\n  static scale;\n  static tileset: HTMLImageElement;\n  static objset: HTMLImageElement;\n  static mobset: HTMLImageElement;\n  static itemset: HTMLImageElement;\n  static fxset: HTMLImageElement;\n  static fontsheet: HTMLImageElement;\n  isMobile: boolean;\n  started: boolean;\n  startedFadeOut: boolean;\n  screenShakeActive: boolean;\n  encounteredEnemies: Array<number>;\n  private startScreenAlpha = 1;\n  generating: boolean = true;\n\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\n  static readonly letters = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\";\n  static readonly letter_widths = [\n    4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5,\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3,\n  ];\n  static readonly letter_height = 6;\n  static letter_positions = [];\n\n  // [min, max] inclusive\n  static rand = (min: number, max: number, rand): number => {\n    if (max < min) return min;\n    return Math.floor(rand() * (max - min + 1) + min);\n  };\n\n  static randTable = (table: any[], rand): any => {\n    return table[Game.rand(0, table.length - 1, rand)];\n  };\n  tutorialListener: TutorialListener;\n\n  constructor() {\n    window.addEventListener(\"load\", () => {\n      let canvas = document.getElementById(\"gameCanvas\");\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\n        alpha: false,\n      }) as CanvasRenderingContext2D;\n\n      // Create TextBox instances and associate them with HTML elements\n      const usernameElement = document.createElement(\"input\");\n      usernameElement.type = \"text\";\n      usernameElement.autocomplete = \"off\";\n      usernameElement.autocapitalize = \"off\";\n      usernameElement.style.position = \"absolute\";\n      usernameElement.style.left = \"-1000px\"; // Position off-screen\n      //const passwordElement = document.createElement(\"input\");\n      //passwordElement.type = \"password\";\n      //passwordElement.style.position = \"absolute\";\n      //passwordElement.style.left = \"-1000px\"; // Position off-screen\n      const chatElement = document.createElement(\"input\");\n      chatElement.type = \"text\";\n      chatElement.style.position = \"absolute\";\n      chatElement.style.left = \"-1000px\"; // Position off-screen\n      //document.body.appendChild(usernameElement);\n      //document.body.appendChild(passwordElement);\n      document.body.appendChild(chatElement);\n\n      document.addEventListener(\n        \"click\",\n        () => {\n          usernameElement.focus();\n        },\n        { once: true },\n      );\n\n      this.chat = [];\n      this.chatTextBox = new TextBox(chatElement);\n      this.chatTextBox.setEnterCallback(() => {\n        if (this.chatTextBox.text.length > 0) {\n          this.chat.push(new ChatMessage(this.chatTextBox.text));\n          this.chatTextBox.clear();\n        } else {\n          this.chatOpen = false;\n        }\n      });\n      this.chatTextBox.setEscapeCallback(() => {\n        this.chatOpen = false;\n      });\n      this.worldCodes = [];\n      this.selectedWorldCode = 0;\n\n      Game.shade_canvases = {};\n      Game.text_rendering_canvases = {};\n\n      let resourcesLoaded = 0;\n      const NUM_RESOURCES = 6;\n\n      Game.tileset = new Image();\n      Game.tileset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.tileset.src = \"res/tileset.png\";\n      Game.objset = new Image();\n      Game.objset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.objset.src = \"res/objset.png\";\n      Game.mobset = new Image();\n      Game.mobset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.mobset.src = \"res/mobset.png\";\n      Game.itemset = new Image();\n      Game.itemset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.itemset.src = \"res/itemset.png\";\n      Game.fxset = new Image();\n      Game.fxset.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.fxset.src = \"res/fxset.png\";\n      Game.fontsheet = new Image();\n      Game.fontsheet.onload = () => {\n        resourcesLoaded++;\n      };\n      Game.fontsheet.src = \"res/font.png\";\n\n      this.levelState = LevelState.LEVEL_GENERATION;\n\n      let checkResourcesLoaded = () => {\n        if (resourcesLoaded < NUM_RESOURCES) {\n          window.setTimeout(checkResourcesLoaded, 500);\n        } else {\n          console.log(\"loaded all images\");\n\n          // proceed with constructor\n\n          Game.scale = GameConstants.SCALE;\n\n          Sound.loadSounds();\n          Sound.playMusic(); // loops forever\n\n          document.addEventListener(\n            \"touchstart\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n          document.addEventListener(\n            \"touchend\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n          document.addEventListener(\n            \"touchmove\",\n            function (e) {\n              if (e.target == canvas) {\n                e.preventDefault();\n              }\n            },\n            false,\n          );\n\n          document.addEventListener(\"touchstart\", Input.handleTouchStart, {\n            passive: false,\n          });\n          document.addEventListener(\"touchmove\", Input.handleTouchMove, {\n            passive: false,\n          });\n          document.addEventListener(\"touchend\", Input.handleTouchEnd, {\n            passive: false,\n          });\n\n          Input.keyDownListener = (key: string) => {\n            this.keyDownListener(key);\n          };\n\n          window.requestAnimationFrame(this.run);\n          this.onResize();\n          window.addEventListener(\"resize\", this.onResize);\n\n          this.players = {};\n          this.offlinePlayers = {};\n          this.chatOpen = false;\n\n          this.screenShakeX = 0;\n          this.screenShakeY = 0;\n          this.shakeAmountX = 0;\n          this.shakeAmountY = 0;\n          this.shakeFrame = (3 * Math.PI) / 2;\n          this.screenShakeCutoff = 0;\n          this.tutorialActive = false;\n          this.screenShakeActive = false;\n          this.levels = [];\n          this.encounteredEnemies = [];\n          this.newGame();\n        }\n      };\n      checkResourcesLoaded();\n    });\n    this.started = false;\n    this.tutorialListener = new TutorialListener(this);\n    this.setupEventListeners();\n    ReverbEngine.initialize();\n\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_STARTED, () => {\n      this.levelState = LevelState.LEVEL_GENERATION;\n    });\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, () => {\n      this.levelState = LevelState.IN_LEVEL;\n    });\n  }\n\n  newGame = () => {\n    statsTracker.resetStats();\n    this.encounteredEnemies = [];\n    this.levels = [];\n    let gs = new GameState();\n    gs.seed = (Math.random() * 4294967296) >>> 0;\n    gs.randomState = (Math.random() * 4294967296) >>> 0;\n    loadGameState(this, [this.localPlayerID], gs, true);\n    this.levelState = LevelState.LEVEL_GENERATION;\n  };\n\n  startGame = () => {\n    this.started = true;\n    Sound.ambientSound.play();\n  };\n\n  keyDownListener = (key: string) => {\n    if (!this.started) {\n      this.startedFadeOut = true;\n      return;\n    }\n    if (!this.chatOpen) {\n      switch (key.toUpperCase()) {\n        case \"C\":\n          this.chatOpen = true;\n          break;\n        case \"/\":\n          this.chatOpen = true;\n          this.chatTextBox.clear();\n          this.chatTextBox.handleKeyPress(key);\n          break;\n        case \"A\":\n        case \"ARROWLEFT\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.LEFT);\n          break;\n        case \"D\":\n        case \"ARROWRIGHT\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.RIGHT);\n          break;\n        case \"W\":\n        case \"ARROWUP\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.UP);\n          break;\n        case \"S\":\n        case \"ARROWDOWN\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.DOWN);\n          break;\n        case \" \":\n          this.players[this.localPlayerID].inputHandler(InputEnum.SPACE);\n          break;\n        case \"I\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.I);\n          break;\n        case \"Q\":\n          this.players[this.localPlayerID].inputHandler(InputEnum.Q);\n          break;\n        case \"1\":\n          LevelGenerator.ANIMATION_CONSTANT = 1;\n          break;\n        case \"2\":\n          LevelGenerator.ANIMATION_CONSTANT = 2;\n          break;\n        case \"3\":\n          LevelGenerator.ANIMATION_CONSTANT = 5;\n          break;\n        case \"4\":\n          LevelGenerator.ANIMATION_CONSTANT = 10000;\n          break;\n        case \"0\":\n          LevelGenerator.ANIMATION_CONSTANT = 0;\n          break;\n      }\n    } else {\n      this.chatTextBox.handleKeyPress(key);\n    }\n  };\n\n  changeLevel = (player: Player, newLevel: Room) => {\n    player.levelID = this.rooms.indexOf(newLevel);\n    if (this.players[this.localPlayerID] === player) {\n      //this.level.exitLevel();\n      this.room = newLevel;\n    }\n    newLevel.enterLevel(player);\n  };\n\n  changeLevelThroughLadder = (player: Player, ladder: any) => {\n    player.levelID = this.rooms.indexOf(ladder.linkedLevel);\n\n    if (ladder instanceof DownLadder) {\n      player.map.saveOldMap();\n      ladder.generate();\n      //let newLevel = new Level(1);\n    }\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING_LADDER;\n      this.transitionStartTime = Date.now();\n      this.transitioningLadder = ladder;\n    } else {\n      ladder.linkedLevel.enterLevel(player, ladder.linkedLevel); // since it's not a local player, don't wait for transition\n    }\n  };\n\n  changeLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    player.levelID = this.rooms.indexOf(door.room);\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING;\n      this.transitionStartTime = Date.now();\n\n      let oldX = this.players[this.localPlayerID].x;\n      let oldY = this.players[this.localPlayerID].y;\n\n      this.prevLevel = this.room;\n      //this.level.exitLevel();\n      this.room = door.room;\n      door.room.enterLevelThroughDoor(player, door, side);\n\n      this.transitionX =\n        (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\n      this.transitionY =\n        (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\n\n      this.upwardTransition = false;\n      this.sideTransition = false;\n      this.sideTransitionDirection = side;\n      if (\n        door instanceof Door &&\n        [Direction.RIGHT, Direction.LEFT].includes(door.doorDir)\n      )\n        this.sideTransition = true;\n      else if (door instanceof Door && door.doorDir === Direction.DOWN)\n        this.upwardTransition = true;\n    } else {\n      door.room.enterLevelThroughDoor(player, door, side);\n    }\n    player.map.saveMapData();\n  };\n\n  run = (timestamp: number) => {\n    if (!this.previousFrameTimestamp) this.previousFrameTimestamp = timestamp;\n\n    // normalized so 1.0 = 60fps\n    let delta = Math.min(\n      ((timestamp - this.previousFrameTimestamp) * 60) / 1000.0,\n      100,\n    );\n\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\n      times.shift();\n    }\n    times.push(timestamp);\n    fps = times.length;\n\n    if (\n      Math.floor(timestamp / (1000 / 60)) >\n      Math.floor(this.previousFrameTimestamp / (1000 / 60))\n    ) {\n      this.update();\n    }\n\n    this.draw(delta * GameConstants.ANIMATION_SPEED * 0.8);\n    window.requestAnimationFrame(this.run);\n\n    this.previousFrameTimestamp = timestamp;\n  };\n\n  update = () => {\n    Input.checkIsTapHold();\n\n    if (\n      Input.lastPressTime !== 0 &&\n      Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\n    ) {\n      Input.onKeydown({\n        repeat: false,\n        key: Input.lastPressKey,\n      } as KeyboardEvent);\n    }\n\n    if (this.levelState === LevelState.TRANSITIONING) {\n      if (\n        Date.now() - this.transitionStartTime >=\n        LevelConstants.LEVEL_TRANSITION_TIME\n      ) {\n        this.levelState = LevelState.IN_LEVEL;\n      }\n    }\n    if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n      if (\n        Date.now() - this.transitionStartTime >=\n        LevelConstants.LEVEL_TRANSITION_TIME_LADDER\n      ) {\n        this.levelState = LevelState.IN_LEVEL;\n        this.players[this.localPlayerID].map.saveMapData();\n      }\n    }\n    if (this.levelState !== LevelState.LEVEL_GENERATION) {\n      for (const i in this.players) {\n        this.players[i].update();\n        this.rooms[this.players[i].levelID].update();\n\n        if (this.players[i].dead) {\n          for (const j in this.players) {\n            this.players[j].dead = true;\n          }\n        }\n      }\n    }\n  };\n\n  lerp = (a: number, b: number, t: number): number => {\n    return (1 - t) * a + t * b;\n  };\n\n  pushMessage = (message: string) => {\n    this.chat.push(new ChatMessage(message));\n  };\n\n  commandHandler = (command: string): void => {\n    const player = this.room.game.players[0];\n    command = command.toLowerCase();\n    switch (command) {\n      case \"devmode\":\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\n        break;\n      case \"new\":\n        this.newGame();\n        break;\n      case \"dev\":\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\n        this.newGame();\n        break;\n      case \"kill\":\n        for (const i in this.players) {\n          this.players[i].dead = true;\n        }\n        break;\n      case \"killall\":\n        for (const i in this.players) {\n          this.players[i].game.room.entities.forEach((e) => {\n            e.kill();\n          });\n        }\n        break;\n      default:\n        if (command.startsWith(\"new \")) {\n          this.room.addNewEnemy(command.slice(4) as EnemyType);\n        }\n        break;\n    }\n  };\n\n  private setupEventListeners(): void {\n    //console.log(\"Setting up event listeners\");\n    globalEventBus.on(\"ChatMessage\", this.commandHandler.bind(this));\n    console.log(\"Event listeners set up\");\n  }\n\n  onResize = () => {\n    let maxWidthScale = Math.floor(\n      window.innerWidth / GameConstants.DEFAULTWIDTH,\n    );\n    let maxHeightScale = Math.floor(\n      window.innerHeight / GameConstants.DEFAULTHEIGHT,\n    );\n\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n    if (this.isMobile) {\n      this.pushMessage(\"mobile detected\");\n      // Adjust scale for mobile devices\n      Game.scale = 2; // Example: limit scale to 2 for mobile\n    } else {\n      Game.scale = GameConstants.SCALE;\n      Game.scale = Math.min(maxWidthScale, maxHeightScale);\n    }\n\n    Game.scale = Math.min(maxWidthScale, maxHeightScale);\n    if (Game.scale === 0) {\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\n    }\n    Game.scale = GameConstants.SCALE; //Math.min(maxWidthScale, maxHeightScale);\n\n    LevelConstants.SCREEN_W = Math.floor(\n      window.innerWidth / Game.scale / GameConstants.TILESIZE,\n    );\n    LevelConstants.SCREEN_H = Math.floor(\n      window.innerHeight / Game.scale / GameConstants.TILESIZE,\n    );\n    GameConstants.WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n    GameConstants.HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\n    Game.ctx.canvas.setAttribute(\n      \"style\",\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${\n        GameConstants.HEIGHT * Game.scale\n      }px;\n    display: block;\n    margin: 0 auto;\n  \n    image-rendering: optimizeSpeed; /* Older versions of FF          */\n    image-rendering: -moz-crisp-edges; /* FF 6.0+                       */\n    image-rendering: -webkit-optimize-contrast; /* Safari                        */\n    image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\n    image-rendering: pixelated; /* Awesome future-browsers       */\n  \n    -ms-interpolation-mode: nearest-neighbor;`,\n    );\n    //Game.ctx.canvas.width = window.innerWidth;\n    //Game.ctx.canvas.height = window.innerHeight;\n  };\n\n  shakeScreen = (shakeX: number, shakeY: number) => {\n    this.screenShakeX = 0;\n    this.screenShakeY = 0;\n    this.shakeAmountX = 0;\n    this.shakeAmountY = 0;\n    this.screenShakeActive = true;\n    this.screenShakeX = shakeX;\n    this.screenShakeY = shakeY;\n    this.shakeAmountX = Math.abs(shakeX);\n    this.shakeAmountY = Math.abs(shakeY);\n    if (shakeX < 0 || shakeY < 0) this.shakeFrame = (3 * Math.PI) / 2;\n    if (shakeX > 0 || shakeY > 0) this.shakeFrame = Math.PI / 2;\n    this.screenShakeCutoff = Date.now();\n  };\n\n  static measureText = (text: string): { width: number; height: number } => {\n    let w = 0;\n    for (const letter of text.toLowerCase()) {\n      if (letter === \" \") w += 4;\n      else\n        for (let i = 0; i < Game.letters.length; i++) {\n          if (Game.letters[i] === letter) {\n            w += Game.letter_widths[i] + 1;\n          }\n        }\n    }\n    return { width: w, height: Game.letter_height };\n  };\n\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\n    x = Math.round(x);\n    y = Math.round(y);\n\n    if (Game.letter_positions.length === 0) {\n      // calculate letter positions\n      for (let i = 0; i < Game.letter_widths.length; i++) {\n        if (i === 0) Game.letter_positions[0] = 0;\n        else\n          Game.letter_positions[i] =\n            Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\n      }\n    } else {\n      let dimensions = Game.measureText(text);\n      if (dimensions.width > 0) {\n        let key = text + Game.ctx.fillStyle;\n\n        if (!Game.text_rendering_canvases[key]) {\n          Game.text_rendering_canvases[key] = document.createElement(\"canvas\");\n          Game.text_rendering_canvases[key].width = dimensions.width;\n          Game.text_rendering_canvases[key].height = dimensions.height;\n          let bx = Game.text_rendering_canvases[key].getContext(\"2d\");\n\n          let letter_x = 0;\n          for (const letter of text.toLowerCase()) {\n            if (letter === \" \") letter_x += 4;\n            else\n              for (let i = 0; i < Game.letters.length; i++) {\n                if (Game.letters[i] === letter) {\n                  bx.drawImage(\n                    Game.fontsheet,\n                    Game.letter_positions[i] + 1,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height,\n                    letter_x,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height,\n                  );\n                  letter_x += Game.letter_widths[i] + 1;\n                }\n              }\n          }\n          bx.fillStyle = Game.ctx.fillStyle;\n          bx.globalCompositeOperation = \"source-in\";\n          bx.fillRect(\n            0,\n            0,\n            Game.text_rendering_canvases[key].width,\n            Game.text_rendering_canvases[key].height,\n          );\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        } else {\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        }\n      }\n    }\n  };\n\n  static fillTextOutline = (\n    text: string,\n    x: number,\n    y: number,\n    outlineColor: string,\n    fillColor: string,\n  ) => {\n    Game.ctx.fillStyle = outlineColor;\n    for (let xx = -1; xx <= 1; xx++) {\n      for (let yy = -1; yy <= 1; yy++) {\n        Game.fillText(text, x + xx, y + yy);\n      }\n    }\n    Game.ctx.fillStyle = fillColor;\n    Game.fillText(text, x, y);\n  };\n\n  drawStuff = (delta: number) => {\n    this.room.drawColorLayer();\n    this.room.drawShade(delta);\n    this.room.drawOverShade(delta);\n  };\n\n  drawStartScreen = (delta: number) => {\n    let startString = \"Welcome to Turnarchist\";\n\n    Game.ctx.globalAlpha = this.startScreenAlpha;\n    if (!this.started && !this.startedFadeOut) {\n      this.startScreenAlpha = 1;\n      if (this.startScreenAlpha <= 0) this.startScreenAlpha = 0;\n    } else if (!this.started && this.startedFadeOut) {\n      this.startScreenAlpha -= delta * 0.025;\n      if (this.startScreenAlpha <= 0) {\n        this.startScreenAlpha = 0;\n        this.started = true;\n        Sound.playAmbient();\n      }\n    }\n\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n\n    Game.fillText(\n      startString,\n      GameConstants.WIDTH / 2 - Game.measureText(startString).width / 2,\n      GameConstants.HEIGHT / 2 - Game.letter_height + 2,\n    );\n    let restartButton = \"Press space or click to start\";\n    if (this.isMobile) restartButton = \"Tap to start\";\n    Game.fillText(\n      restartButton,\n      GameConstants.WIDTH / 2 - Game.measureText(restartButton).width / 2,\n      GameConstants.HEIGHT / 2 + Game.letter_height + 5,\n    );\n\n    Game.ctx.globalAlpha = 1;\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.globalAlpha = 1;\n    if (this.room) Game.ctx.fillStyle = this.room.shadeColor;\n    else Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (this.levelState === LevelState.TRANSITIONING) {\n      let levelOffsetX = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          -this.transitionX,\n        ),\n      );\n      let levelOffsetY = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          -this.transitionY,\n        ),\n      );\n      let playerOffsetX = levelOffsetX - this.transitionX;\n      let playerOffsetY = levelOffsetY - this.transitionY;\n\n      let playerCX =\n        (this.players[this.localPlayerID].x -\n          this.players[this.localPlayerID].drawX +\n          0.5) *\n        GameConstants.TILESIZE;\n      let playerCY =\n        (this.players[this.localPlayerID].y -\n          this.players[this.localPlayerID].drawY +\n          0.5) *\n        GameConstants.TILESIZE;\n\n      Game.ctx.translate(\n        -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n        -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      let extraTileLerp = Math.floor(\n        this.lerp(\n          (Date.now() - this.transitionStartTime) /\n            LevelConstants.LEVEL_TRANSITION_TIME,\n          0,\n          GameConstants.TILESIZE,\n        ),\n      );\n\n      let newLevelOffsetX = playerOffsetX;\n      let newLevelOffsetY = playerOffsetY;\n\n      if (this.sideTransition) {\n        if (this.sideTransitionDirection > 0) {\n          levelOffsetX += extraTileLerp;\n          newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\n        } else {\n          levelOffsetX -= extraTileLerp;\n          newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\n        }\n      } else if (this.upwardTransition) {\n        levelOffsetY -= extraTileLerp;\n        newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\n      } else {\n        levelOffsetY += extraTileLerp;\n        newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\n      }\n\n      let ditherFrame = Math.floor(\n        (7 * (Date.now() - this.transitionStartTime)) /\n          LevelConstants.LEVEL_TRANSITION_TIME,\n      );\n\n      Game.ctx.translate(levelOffsetX, levelOffsetY);\n      this.prevLevel.draw(delta);\n      this.prevLevel.drawEntities(delta);\n      for (\n        let x = this.prevLevel.roomX - 1;\n        x <= this.prevLevel.roomX + this.prevLevel.width;\n        x++\n      ) {\n        for (\n          let y = this.prevLevel.roomY - 1;\n          y <= this.prevLevel.roomY + this.prevLevel.height;\n          y++\n        ) {\n          Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n        }\n      }\n      Game.ctx.translate(-levelOffsetX, -levelOffsetY);\n\n      Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n      this.room.draw(delta);\n      this.room.drawEntities(delta, true);\n      for (\n        let x = this.room.roomX - 1;\n        x <= this.room.roomX + this.room.width;\n        x++\n      ) {\n        for (\n          let y = this.room.roomY - 1;\n          y <= this.room.roomY + this.room.height;\n          y++\n        ) {\n          Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\n        }\n      }\n      Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n      Game.ctx.translate(playerOffsetX, playerOffsetY);\n      this.players[this.localPlayerID].draw(delta);\n\n      Game.ctx.translate(-playerOffsetX, -playerOffsetY);\n      Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n\n      this.drawStuff(delta);\n\n      Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n      Game.ctx.translate(\n        Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n        Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      this.players[this.localPlayerID].drawGUI(delta);\n\n      for (const i in this.players) this.players[i].updateDrawXY(delta);\n    } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n      let playerCX =\n        (this.players[this.localPlayerID].x -\n          this.players[this.localPlayerID].drawX +\n          0.5) *\n        GameConstants.TILESIZE;\n      let playerCY =\n        (this.players[this.localPlayerID].y -\n          this.players[this.localPlayerID].drawY +\n          0.5) *\n        GameConstants.TILESIZE;\n\n      Game.ctx.translate(\n        -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n        -Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      let deadFrames = 6;\n      let ditherFrame = Math.floor(\n        ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER,\n      );\n\n      if (ditherFrame < 7) {\n        this.room.draw(delta);\n        this.room.drawEntities(delta);\n\n        this.drawStuff(delta);\n\n        for (\n          let x = this.room.roomX - 1;\n          x <= this.room.roomX + this.room.width;\n          x++\n        ) {\n          for (\n            let y = this.room.roomY - 1;\n            y <= this.room.roomY + this.room.height;\n            y++\n          ) {\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n      } else if (ditherFrame >= 7 + deadFrames) {\n        if (this.transitioningLadder) {\n          this.prevLevel = this.room;\n          this.room.exitLevel();\n          this.room = this.transitioningLadder.linkedLevel;\n\n          this.room.enterLevel(this.players[this.localPlayerID]);\n          this.transitioningLadder = null;\n        }\n\n        this.room.draw(delta);\n        this.room.drawEntities(delta);\n\n        this.drawStuff(delta);\n\n        for (\n          let x = this.room.roomX - 1;\n          x <= this.room.roomX + this.room.width;\n          x++\n        ) {\n          for (\n            let y = this.room.roomY - 1;\n            y <= this.room.roomY + this.room.height;\n            y++\n          ) {\n            Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\n          }\n        }\n      }\n      Game.ctx.translate(\n        Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n        Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\n      );\n\n      this.players[this.localPlayerID].drawGUI(delta);\n      for (const i in this.players) this.players[i].updateDrawXY(delta);\n    } else if (this.levelState === LevelState.LEVEL_GENERATION) {\n      this.levelgen.draw(delta);\n    } else if (this.levelState === LevelState.IN_LEVEL) {\n      // Start of Selection\n\n      if (this.screenShakeActive) {\n        //const decayFactor = 1 - 0.15 * delta;\n        const decayFactor =\n          3 / Math.sqrt((Date.now() + 30 - this.screenShakeCutoff) * delta);\n        this.shakeAmountX -= this.shakeAmountX * 0.1 * delta;\n        this.shakeAmountY -= this.shakeAmountY * 0.1 * delta;\n        this.screenShakeX =\n          Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountX * decayFactor;\n        this.screenShakeY =\n          Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountY * decayFactor;\n        this.shakeFrame += 0.3 * delta;\n\n        if (Math.abs(decayFactor) < 0.001) {\n          this.shakeAmountX = 0;\n          this.shakeAmountY = 0;\n          this.shakeFrame = 0;\n          this.screenShakeX = 0;\n          this.screenShakeY = 0;\n          this.screenShakeActive = false;\n        }\n      }\n\n      let playerDrawX = this.players[this.localPlayerID].drawX;\n      let playerDrawY = this.players[this.localPlayerID].drawY;\n\n      let cameraX = Math.round(\n        (this.players[this.localPlayerID].x - playerDrawX + 0.5) *\n          GameConstants.TILESIZE -\n          0.5 * GameConstants.WIDTH -\n          this.screenShakeX,\n      );\n      let cameraY = Math.round(\n        (this.players[this.localPlayerID].y - playerDrawY + 0.5) *\n          GameConstants.TILESIZE -\n          0.5 * GameConstants.HEIGHT -\n          this.screenShakeY,\n      );\n\n      Game.ctx.translate(-cameraX, -cameraY);\n      this.room.draw(delta);\n      this.room.drawEntities(delta);\n\n      this.drawStuff(delta);\n\n      this.players[this.localPlayerID].drawTopLayer(delta);\n      Game.ctx.translate(cameraX, cameraY);\n\n      this.room.drawTopLayer(delta);\n      this.players[this.localPlayerID].drawGUI(delta);\n      for (const i in this.players) this.players[i].updateDrawXY(delta);\n    }\n    // draw chat\n    let CHAT_X = 10;\n    let CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 32;\n    let CHAT_OPACITY = 0.5;\n    if (this.chatOpen) {\n      Game.ctx.fillStyle = \"black\";\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\n      let cursorX = Game.measureText(\n        this.chatTextBox.text.substring(0, this.chatTextBox.cursor),\n      ).width;\n      Game.ctx.fillRect(CHAT_X + cursorX, CHAT_BOTTOM_Y, 1, Game.letter_height);\n    }\n    for (let i = 0; i < this.chat.length; i++) {\n      Game.ctx.fillStyle = \"white\";\n      if (this.chat[i][0] === \"/\") Game.ctx.fillStyle = GameConstants.GREEN;\n      let y =\n        CHAT_BOTTOM_Y - (this.chat.length - 1 - i) * (Game.letter_height + 1);\n      if (this.chatOpen) y -= Game.letter_height + 1;\n\n      let age = Date.now() - this.chat[i].timestamp;\n      if (this.chatOpen) {\n        Game.ctx.globalAlpha = 1;\n      } else {\n        if (age <= GameConstants.CHAT_APPEAR_TIME) {\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = CHAT_OPACITY;\n        } else if (\n          age <=\n          GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME\n        ) {\n          if (GameConstants.ALPHA_ENABLED)\n            Game.ctx.globalAlpha =\n              CHAT_OPACITY *\n              (1 -\n                (age - GameConstants.CHAT_APPEAR_TIME) /\n                  GameConstants.CHAT_FADE_TIME);\n        } else {\n          Game.ctx.globalAlpha = 0;\n        }\n      }\n      Game.fillText(this.chat[i].message, CHAT_X, y);\n    }\n\n    // game version\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      GameConstants.VERSION,\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\n      1,\n    );\n    Game.ctx.globalAlpha = 1;\n\n    // fps\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(fps + \"fps\", 1, 1);\n    Game.ctx.globalAlpha = 1;\n    if (!this.started && this.levelState !== LevelState.LEVEL_GENERATION) {\n      this.drawStartScreen(delta);\n    }\n    MouseCursor.getInstance().draw();\n  };\n\n  static drawHelper = (\n    set: HTMLImageElement,\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    // snap to nearest shading increment\n    shadeOpacity =\n      Math.round(shadeOpacity * GameConstants.SHADE_LEVELS) /\n      GameConstants.SHADE_LEVELS;\n    let key = getShadeCanvasKey(set, sX, sY, sW, sH, shadeOpacity);\n    if (!Game.shade_canvases[key]) {\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\n\n      shCtx.clearRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height,\n      );\n\n      shCtx.globalCompositeOperation = \"source-over\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n      );\n\n      shCtx.globalAlpha = shadeOpacity;\n      shCtx.fillStyle = shadeColor;\n      shCtx.fillRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height,\n      );\n      shCtx.globalAlpha = 1.0;\n\n      shCtx.globalCompositeOperation = \"destination-in\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n      );\n    }\n    Game.ctx.drawImage(\n      Game.shade_canvases[key],\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE),\n    );\n  };\n\n  static drawTile = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.tileset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n\n    /*Game.ctx.drawImage(\n      Game.tileset,\n      Math.round(sX * GameConstants.TILESIZE),\n      Math.round(sY * GameConstants.TILESIZE),\n      Math.round(sW * GameConstants.TILESIZE),\n      Math.round(sH * GameConstants.TILESIZE),\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE)\n    );\n\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = shadeOpacity;\n      Game.ctx.fillStyle = shadeColor;\n      Game.ctx.fillRect(\n        Math.round(dX * GameConstants.TILESIZE),\n        Math.round(dY * GameConstants.TILESIZE),\n        Math.round(dW * GameConstants.TILESIZE),\n        Math.round(dH * GameConstants.TILESIZE)\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }*/\n  };\n\n  static drawObj = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.objset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n  };\n\n  static drawMob = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.mobset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n  };\n\n  static drawItem = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.itemset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n  };\n\n  static drawFX = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0,\n  ) => {\n    Game.drawHelper(\n      Game.fxset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity,\n    );\n  };\n}\n\nlet game = new Game();\n","import { Armor } from \"./item/armor\";\nimport { Backpack } from \"./item/backpack\";\nimport { Candle } from \"./item/candle\";\nimport { Coal } from \"./item/coal\";\nimport { EntitySpawner } from \"./item/entitySpawner\";\nimport { GodStone } from \"./item/godStone\";\nimport { Heart } from \"./item/heart\";\nimport { Key } from \"./item/key\";\nimport { Lantern } from \"./item/lantern\";\nimport { Torch } from \"./item/torch\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Spear } from \"./weapon/spear\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Warhammer } from \"./weapon/warhammer\";\n\nexport class GameConstants {\n  static readonly VERSION = \"v1.0.0\"; //\"v0.6.3\";\n  static DEVELOPER_MODE = false;\n\n  static readonly FPS = 120;\n  static readonly ALPHA_ENABLED = true;\n  static readonly SHADE_LEVELS = 25;\n\n  static readonly TILESIZE = 16;\n  static readonly SCALE = 3;\n\n  static readonly SWIPE_THRESH = 25 ** 2; // (size of swipe threshold circle)^2\n  static readonly HOLD_THRESH = 250; // milliseconds\n\n  static readonly KEY_REPEAT_TIME = 250; // millseconds\n  static readonly MOVEMENT_COOLDOWN = 100; // milliseconds\n\n  static readonly CHAT_APPEAR_TIME = 5000;\n  static readonly CHAT_FADE_TIME = 1000;\n  static ANIMATION_SPEED = 1;\n\n  static readonly DEFAULTWIDTH = 6 * GameConstants.TILESIZE;\n  static readonly DEFAULTHEIGHT = 12 * GameConstants.TILESIZE;\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n  static scrolling = true;\n\n  static readonly SCRIPT_FONT_SIZE = 16;\n  static readonly FONT_SIZE = 7;\n  static readonly BIG_FONT_SIZE = 15;\n\n  static readonly RED = \"#ac3232\";\n  static readonly WARNING_RED = \"#ff0000\";\n  static readonly GREEN = \"#6abe30\";\n  static readonly ARMOR_GREY = \"#9badb7\";\n  static readonly OUTLINE = \"#222034\";\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\n  static readonly MISS_COLOR = \"#639bff\";\n\n  static readonly STARTING_INVENTORY = [Dagger, Candle];\n  static readonly STARTING_DEV_INVENTORY = [\n    Dagger,\n    DualDagger,\n    EntitySpawner,\n    Candle,\n    GodStone,\n    Warhammer,\n    Spear,\n    Spellbook,\n    Armor,\n    Heart,\n    Backpack,\n    Torch,\n    Lantern,\n    Coal,\n  ];\n}\n","import { Barrel } from \"./entity/object/barrel\";\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\nimport { ChargeEnemy, ChargeEnemyState } from \"./entity/enemy/chargeEnemy\";\nimport { Chest } from \"./entity/object/chest\";\nimport { CoalResource } from \"./entity/resource/coalResource\";\nimport { Crate } from \"./entity/object/crate\";\nimport { EmeraldResource } from \"./entity/resource/emeraldResource\";\nimport { Entity, EntityDirection } from \"./entity/entity\";\nimport { GoldResource } from \"./entity/resource/goldResource\";\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\nimport { PottedPlant } from \"./entity/object/pottedPlant\";\nimport { Pot } from \"./entity/object/pot\";\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\nimport { CrabEnemy } from \"./entity/enemy/crabEnemy\";\nimport { Spawner } from \"./entity/enemy/spawner\";\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\nimport { WizardEnemy, WizardState } from \"./entity/enemy/wizardEnemy\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { Direction, Game } from \"./game\";\nimport { HitWarning } from \"./hitWarning\";\nimport { Inventory } from \"./inventory\";\nimport { Armor } from \"./item/armor\";\nimport { BlueGem } from \"./item/bluegem\";\nimport { Candle } from \"./item/candle\";\nimport { Coal } from \"./item/coal\";\nimport { Coin } from \"./item/coin\";\nimport { Equippable } from \"./item/equippable\";\nimport { Gold } from \"./item/gold\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Heart } from \"./item/heart\";\nimport { Item } from \"./item/item\";\nimport { Key } from \"./item/key\";\nimport { Lantern } from \"./item/lantern\";\nimport { RedGem } from \"./item/redgem\";\nimport { Torch } from \"./item/torch\";\nimport { Room } from \"./room\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { Player, PlayerDirection } from \"./player\";\nimport { EnemySpawnAnimation } from \"./projectile/enemySpawnAnimation\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { WizardFireball } from \"./projectile/wizardFireball\";\nimport { Random } from \"./random\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Spear } from \"./weapon/spear\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Backpack } from \"./item/backpack\";\nimport { TutorialListener } from \"./tutorialListener\";\nimport { DoorType } from \"./tile/door\";\nimport { Mushrooms } from \"./entity/object/mushrooms\";\nimport { Pumpkin } from \"./entity/object/pumpkin\";\nimport { Block } from \"./entity/object/block\";\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\nimport { Level } from \"./level\";\nimport { globalEventBus } from \"./eventBus\";\nimport { EVENTS } from \"./events\";\n\nexport class HitWarningState {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(hw: HitWarning) {\n    this.x = hw.x;\n    this.y = hw.y;\n    this.dead = hw.dead;\n  }\n}\n\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\n  let hw = new HitWarning(game, hws.x, hws.y, hws.x, hws.y);\n  hw.dead = hws.dead;\n  return hw;\n};\n\nexport enum ProjectileType {\n  SPAWN,\n  WIZARD,\n}\n\nexport class ProjectileState {\n  type: ProjectileType;\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  enemySpawn: EnemyState;\n  wizardState: number;\n  wizardParentID: number;\n\n  constructor(projectile: Projectile, game: Game) {\n    this.x = projectile.x;\n    this.y = projectile.y;\n    this.dead = projectile.dead;\n    if (projectile instanceof EnemySpawnAnimation) {\n      this.type = ProjectileType.SPAWN;\n      this.levelID = game.rooms.indexOf(projectile.room);\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\n    }\n    if (projectile instanceof WizardFireball) {\n      this.type = ProjectileType.WIZARD;\n      this.wizardState = projectile.state;\n      this.levelID = game.rooms.indexOf(projectile.parent.room);\n      this.wizardParentID = projectile.parent.room.entities.indexOf(\n        projectile.parent,\n      );\n    }\n  }\n}\n\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\n  if (ps.type === ProjectileType.SPAWN) {\n    let level = game.rooms[ps.levelID];\n    let enemy = loadEnemy(ps.enemySpawn, game);\n    let p = new EnemySpawnAnimation(level, enemy, ps.x, ps.y);\n    p.dead = ps.dead;\n    return p;\n  }\n  if (ps.type === ProjectileType.WIZARD) {\n    let wizard = game.rooms[ps.levelID].entities[\n      ps.wizardParentID\n    ] as EnergyWizardEnemy;\n    let p = new WizardFireball(wizard, ps.x, ps.y);\n    p.state = ps.wizardState;\n    return p;\n  }\n};\n\nexport enum EnemyType {\n  BARREL,\n  BIGSKULL,\n  CHARGE,\n  CHEST,\n  COAL,\n  CRATE,\n  EMERALD,\n  GOLD,\n  KNIGHT,\n  PLANT,\n  SKULL,\n  CRAB,\n  SPAWNER,\n  VENDINGMACHINE,\n  WIZARD,\n  ZOMBIE,\n}\n\nexport class EnemyState {\n  type: EnemyType;\n  levelID: number;\n  x: number;\n  y: number;\n  health: number;\n  direction: Direction;\n  dead: boolean;\n  skipNextTurns: number;\n  hasDrop: boolean;\n  drop: ItemState;\n  alertTicks: number;\n  ticks: number;\n  seenPlayer: boolean;\n  targetPlayerID: string;\n  // skeleton\n  ticksSinceFirstHit: number;\n  // big skeleton\n  drops: Array<ItemState>;\n  // charge enemy\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  chargeEnemyState: ChargeEnemyState;\n  // spawner\n  enemySpawnType: number;\n  // vending machine\n  isPlayerOpened: boolean;\n  playerOpenedID: string;\n  open: boolean;\n  costItems: Array<ItemState>;\n  item: ItemState;\n  isInf: boolean;\n  quantity: number;\n  // wizard\n  wizardState: WizardState;\n\n  constructor(enemy: Entity, game: Game) {\n    this.levelID = game.rooms.indexOf(enemy.room);\n    this.x = enemy.x;\n    this.y = enemy.y;\n    this.health = enemy.health;\n    this.direction = enemy.direction;\n    this.dead = enemy.dead;\n    this.skipNextTurns = enemy.skipNextTurns;\n    this.hasDrop = false;\n    if (enemy.drop) {\n      this.hasDrop = true;\n      this.drop = new ItemState(enemy.drop, game);\n    }\n    this.alertTicks = enemy.alertTicks;\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\n    if (enemy instanceof BigSkullEnemy) {\n      this.type = EnemyType.BIGSKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n      this.drops = [];\n      for (const d of enemy.drops) this.drops.push(new ItemState(d, game));\n    }\n    if (enemy instanceof ChargeEnemy) {\n      this.type = EnemyType.CHARGE;\n      this.ticks = enemy.ticks;\n      this.chargeEnemyState = enemy.state;\n      this.startX = enemy.startX;\n      this.startY = enemy.startY;\n      this.targetX = enemy.targetX;\n      this.targetY = enemy.targetY;\n      this.visualTargetX = enemy.visualTargetX;\n      this.visualTargetY = enemy.visualTargetY;\n    }\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\n    if (enemy instanceof KnightEnemy) {\n      this.type = EnemyType.KNIGHT;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\n    if (enemy instanceof Pot) this.type = EnemyType.PLANT;\n    if (enemy instanceof SkullEnemy) {\n      this.type = EnemyType.SKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof CrabEnemy) {\n      this.type = EnemyType.CRAB;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n    if (enemy instanceof Spawner) {\n      this.type = EnemyType.SPAWNER;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      this.enemySpawnType = enemy.enemySpawnType;\n    }\n    if (enemy instanceof VendingMachine) {\n      this.type = EnemyType.VENDINGMACHINE;\n      this.isPlayerOpened = false;\n      if (enemy.playerOpened) {\n        this.isPlayerOpened = true;\n        this.playerOpenedID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.playerOpened,\n        );\n        if (!this.playerOpenedID)\n          this.playerOpenedID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.playerOpened,\n          );\n      }\n      this.open = enemy.open;\n      this.costItems = [];\n      for (const item of enemy.costItems)\n        this.costItems.push(new ItemState(item, game));\n      this.item = new ItemState(enemy.item, game);\n      this.isInf = enemy.isInf;\n      this.quantity = enemy.quantity;\n    }\n    if (enemy instanceof WizardEnemy) {\n      this.type = EnemyType.WIZARD;\n      this.ticks = enemy.ticks;\n      this.wizardState = enemy.state;\n      this.seenPlayer = enemy.seenPlayer;\n    }\n    if (enemy instanceof ZombieEnemy) {\n      this.type = EnemyType.ZOMBIE;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(\n          (key) => game.players[key] === enemy.targetPlayer,\n        );\n        if (!this.targetPlayerID)\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\n          );\n      }\n    }\n  }\n}\n\nlet loadEnemy = (es: EnemyState, game: Game): Entity => {\n  let enemy;\n  let level = game.rooms[es.levelID];\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(level, game, es.x, es.y);\n  if (es.type === EnemyType.BIGSKULL) {\n    enemy = new BigSkullEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n    enemy.drops = [];\n    for (const d of es.drops) enemy.drops.push(loadItem(d, game));\n  }\n  if (es.type === EnemyType.CHARGE) {\n    enemy = new ChargeEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.chargeEnemyState;\n    enemy.startX = es.startX;\n    enemy.startY = es.startY;\n    enemy.targetX = es.targetX;\n    enemy.targetY = es.targetY;\n    enemy.visualTargetX = es.visualTargetX;\n    enemy.visualTargetY = es.visualTargetY;\n  }\n  if (es.type === EnemyType.CHEST) enemy = new Chest(level, game, es.x, es.y);\n  if (es.type === EnemyType.COAL)\n    enemy = new CoalResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.CRATE) enemy = new Crate(level, game, es.x, es.y);\n  if (es.type === EnemyType.EMERALD)\n    enemy = new EmeraldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.GOLD)\n    enemy = new GoldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.KNIGHT) {\n    enemy = new KnightEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.PLANT)\n    enemy = new PottedPlant(level, game, es.x, es.y);\n  if (es.type === EnemyType.PLANT) enemy = new Pot(level, game, es.x, es.y);\n  if (es.type === EnemyType.SKULL) {\n    enemy = new SkullEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.CRAB) {\n    enemy = new CrabEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SPAWNER) {\n    enemy = new Spawner(level, game, es.x, es.y, [es.enemySpawnType]);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    enemy.enemySpawnType = es.enemySpawnType;\n  }\n  if (es.type === EnemyType.VENDINGMACHINE) {\n    let item = loadItem(es.item, game);\n    enemy = new VendingMachine(level, game, es.x, es.y, item);\n    if (es.isPlayerOpened) {\n      enemy.playerOpened = game.players[es.playerOpenedID];\n      if (!enemy.playerOpened)\n        enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\n    }\n    enemy.open = es.open;\n    enemy.costItems = [];\n    for (const item of es.costItems) enemy.costItems.push(loadItem(item, game));\n    enemy.isInf = es.isInf;\n    enemy.quantity = es.quantity;\n  }\n  if (es.type === EnemyType.WIZARD) {\n    enemy = new EnergyWizardEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.wizardState;\n    enemy.seenPlayer = es.seenPlayer;\n  }\n  if (es.type === EnemyType.ZOMBIE) {\n    enemy = new ZombieEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer)\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n\n  enemy.x = es.x;\n  enemy.y = es.y;\n  enemy.health = es.health;\n  enemy.direction = es.direction;\n  enemy.dead = es.dead;\n  enemy.skipNextTurns = es.skipNextTurns;\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\n  enemy.alertTicks = es.alertTicks;\n\n  return enemy;\n};\n\nexport class LevelState {\n  levelID: number;\n  entered: boolean;\n  enemies: Array<EnemyState>;\n  items: Array<ItemState>;\n  projectiles: Array<ProjectileState>;\n  hitwarnings: Array<HitWarningState>;\n\n  constructor(level: Room, game: Game) {\n    this.levelID = game.rooms.indexOf(level);\n    this.entered = level.entered;\n    this.enemies = [];\n    this.items = [];\n    this.projectiles = [];\n    this.hitwarnings = [];\n    for (const enemy of level.entities)\n      this.enemies.push(new EnemyState(enemy, game));\n    for (const item of level.items) this.items.push(new ItemState(item, game));\n    for (const projectile of level.projectiles)\n      this.projectiles.push(new ProjectileState(projectile, game));\n    for (const hw of level.hitwarnings)\n      this.hitwarnings.push(new HitWarningState(hw));\n  }\n}\n\nlet loadLevel = (level: Room, levelState: LevelState, game: Game) => {\n  level.entered = levelState.entered;\n  level.entities = [];\n  level.items = [];\n  level.projectiles = [];\n  level.hitwarnings = [];\n  for (const enemy of levelState.enemies)\n    level.entities.push(loadEnemy(enemy, game));\n  for (const item of levelState.items) level.items.push(loadItem(item, game));\n  for (const projectile of levelState.projectiles)\n    level.projectiles.push(loadProjectile(projectile, game));\n  for (const hw of levelState.hitwarnings)\n    level.hitwarnings.push(loadHitWarning(hw, game));\n};\n\nexport enum ItemType {\n  ARMOR,\n  BLUEGEM,\n  CANDLE,\n  COAL,\n  COIN,\n  GOLD,\n  GOLDENKEY,\n  GREENGEM,\n  HEART,\n  KEY,\n  LANTERN,\n  REDGEM,\n  TORCH,\n  DAGGER,\n  DUALDAGGER,\n  SHOTGUN,\n  SPEAR,\n  PICKAXE,\n  BACKPACK,\n}\n\nexport class ItemState {\n  type: ItemType;\n  x: number;\n  y: number;\n  levelID: number;\n  stackCount: number;\n  pickedUp: boolean;\n  equipped: boolean;\n\n  constructor(item: Item, game: Game) {\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\n    if (item instanceof Coal) this.type = ItemType.COAL;\n    if (item instanceof Coin) this.type = ItemType.COIN;\n    if (item instanceof Gold) this.type = ItemType.GOLD;\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\n    if (item instanceof Heart) this.type = ItemType.HEART;\n    if (item instanceof Key) this.type = ItemType.KEY;\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\n    if (item instanceof Torch) this.type = ItemType.TORCH;\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\n\n    this.equipped = item instanceof Equippable && item.equipped;\n    this.x = item.x;\n    this.y = item.y;\n    this.levelID = game.rooms.indexOf(item.level);\n    if (this.levelID === -1) this.levelID = 0;\n    this.stackCount = item.stackCount;\n    this.pickedUp = item.pickedUp;\n  }\n}\n\nlet loadItem = (i: ItemState, game: Game, player?: Player): Item => {\n  let level = game.rooms[i.levelID];\n  let item;\n  if (i.type === ItemType.ARMOR) item = new Armor(level, i.x, i.y);\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(level, i.x, i.y);\n  if (i.type === ItemType.CANDLE) item = new Candle(level, i.x, i.y);\n  if (i.type === ItemType.COAL) item = new Coal(level, i.x, i.y);\n  if (i.type === ItemType.COIN) item = new Coin(level, i.x, i.y);\n  if (i.type === ItemType.GOLD) item = new Gold(level, i.x, i.y);\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(level, i.x, i.y);\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(level, i.x, i.y);\n  if (i.type === ItemType.HEART) item = new Heart(level, i.x, i.y);\n  if (i.type === ItemType.KEY) item = new Key(level, i.x, i.y);\n  if (i.type === ItemType.LANTERN) item = new Lantern(level, i.x, i.y);\n  if (i.type === ItemType.REDGEM) item = new RedGem(level, i.x, i.y);\n  if (i.type === ItemType.TORCH) item = new Torch(level, i.x, i.y);\n  if (i.type === ItemType.DAGGER) {\n    item = new Dagger(level, i.x, i.y);\n  }\n  if (i.type === ItemType.DUALDAGGER) {\n    item = new DualDagger(level, i.x, i.y);\n  }\n  if (i.type === ItemType.SHOTGUN) {\n    item = new Shotgun(level, i.x, i.y);\n  }\n  if (i.type === ItemType.SPEAR) {\n    item = new Spear(level, i.x, i.y);\n  }\n  if (i.type === ItemType.PICKAXE) {\n    item = new Pickaxe(level, i.x, i.y);\n  }\n  if (i.type === ItemType.BACKPACK) {\n    item = new Backpack(level, i.x, i.y);\n  }\n  if (i.equipped) item.equipped = true;\n  if (item instanceof Equippable) item.setWielder(player);\n  item.stackCount = i.stackCount;\n  item.pickedUp = i.pickedUp;\n  return item;\n};\n\nexport class InventoryState {\n  isOpen: boolean;\n  cols: number;\n  rows: number;\n  selX: number;\n  selY: number;\n  equipAnimAmount: Array<number>;\n  isWeaponEquipped: boolean;\n  weaponI: number;\n  coins: number;\n  items: Array<ItemState>;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.isOpen = inventory.isOpen;\n    this.cols = inventory.cols;\n    this.rows = inventory.rows;\n    this.equipAnimAmount = inventory.equipAnimAmount.map((x) => x);\n    this.isWeaponEquipped = false;\n    if (inventory.weapon) {\n      this.isWeaponEquipped = true;\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\n    }\n    this.coins = inventory.coins;\n    this.selX = inventory.selX;\n    this.selY = inventory.selY;\n    this.items = Array<ItemState>();\n    for (const item of inventory.items) {\n      this.items.push(new ItemState(item, game));\n    }\n  }\n}\n\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\n  inventory.clear();\n  inventory.isOpen = i.isOpen;\n  inventory.cols = i.cols;\n  inventory.rows = i.rows;\n  inventory.selX = i.selX;\n  inventory.selY = i.selY;\n  inventory.equipAnimAmount = i.equipAnimAmount.map((x) => x);\n  inventory.coins = i.coins;\n  for (const item of i.items)\n    inventory.items.push(loadItem(item, game, inventory.player));\n\n  if (i.isWeaponEquipped)\n    inventory.weapon = inventory.items[i.weaponI] as Weapon;\n};\n\nexport class PlayerState {\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  direction: Direction;\n  health: number;\n  maxHealth: number;\n  lastTickHealth: number;\n  inventory: InventoryState;\n  hasOpenVendingMachine: boolean;\n  openVendingMachineLevelID: number;\n  openVendingMachineID: number;\n  sightRadius: number;\n\n  constructor(player: Player, game: Game) {\n    this.x = player.x;\n    this.y = player.y;\n    this.dead = player.dead;\n    this.levelID = player.levelID;\n    this.direction = player.direction;\n    this.health = player.health;\n    this.maxHealth = player.maxHealth;\n    this.lastTickHealth = player.lastTickHealth;\n    this.inventory = new InventoryState(player.inventory, game);\n    this.hasOpenVendingMachine = false;\n    if (player.openVendingMachine) {\n      this.hasOpenVendingMachine = true;\n      this.openVendingMachineLevelID = game.rooms.indexOf(\n        player.openVendingMachine.room,\n      );\n      this.openVendingMachineID =\n        player.openVendingMachine.room.entities.indexOf(\n          player.openVendingMachine,\n        );\n    }\n    this.sightRadius = player.sightRadius;\n  }\n}\n\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\n  player.dead = p.dead;\n\n  player.levelID = p.levelID;\n  if (player.levelID < game.levelgen.currentFloorFirstLevelID) {\n    // catch up to the current level\n    player.levelID = game.levelgen.currentFloorFirstLevelID;\n    player.x =\n      game.rooms[player.levelID].roomX +\n      Math.floor(game.rooms[player.levelID].width / 2);\n    player.y =\n      game.rooms[player.levelID].roomY +\n      Math.floor(game.rooms[player.levelID].height / 2);\n  }\n  player.direction = p.direction;\n  player.health = p.health;\n  player.maxHealth = p.maxHealth;\n  player.lastTickHealth = p.lastTickHealth;\n  loadInventory(player.inventory, p.inventory, game);\n  if (p.hasOpenVendingMachine) {\n    player.openVendingMachine = game.rooms[p.openVendingMachineLevelID]\n      .entities[p.openVendingMachineID] as VendingMachine;\n  }\n  player.sightRadius = p.sightRadius;\n\n  return player;\n};\n\nexport class GameState {\n  seed: number;\n  randomState: number;\n  depth: number;\n  players: Record<string, PlayerState>;\n  offlinePlayers: Record<string, PlayerState>;\n  levels: Array<LevelState>;\n\n  constructor() {\n    this.seed = 0;\n    this.randomState = 0;\n    this.depth = 0;\n    this.players = {};\n    this.offlinePlayers = {};\n    this.levels = [];\n  }\n}\n\nexport const createGameState = (game: Game): GameState => {\n  let gs = new GameState();\n  gs.seed = game.levelgen.seed; // random state for generating levels\n  gs.randomState = Random.state; // current random state\n  gs.depth = game.level.depth;\n  for (const i in game.players)\n    gs.players[i] = new PlayerState(game.players[i], game);\n  for (const i in game.offlinePlayers) {\n    gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\n  }\n  for (let level of game.rooms) {\n    level.catchUp();\n    gs.levels.push(new LevelState(level, game));\n  }\n  return gs;\n};\n\nexport const loadGameState = (\n  game: Game,\n  activeUsernames: Array<string>,\n  gameState: GameState,\n  newWorld: boolean,\n) => {\n  game.rooms = Array<Room>();\n\n  game.levelgen = new LevelGenerator();\n  game.levelgen.setSeed(gameState.seed);\n  if (newWorld) gameState.depth = 0;\n  globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\n  game.levelgen.generateFirstNFloors(game, gameState.depth).then(() => {\n    globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\n    if (!newWorld) {\n      if (gameState.players) {\n        for (const i in gameState.players) {\n          if (activeUsernames.includes(i))\n            game.players[i] = loadPlayer(i, gameState.players[i], game);\n          else game.offlinePlayers[i] = loadPlayer(i, gameState.players[i], game);\n        }\n      }\n      if (gameState.offlinePlayers) {\n        for (const i in gameState.offlinePlayers) {\n          if (i === game.localPlayerID)\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n          else if (activeUsernames.includes(i))\n            game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n          else\n            game.offlinePlayers[i] = loadPlayer(\n              i,\n              gameState.offlinePlayers[i],\n              game,\n            );\n        }\n      }\n      for (let levelState of gameState.levels) {\n        for (let i = 0; i < game.rooms.length; i++) {\n          if (i === levelState.levelID) {\n            loadLevel(game.rooms[i], levelState, game);\n          }\n        }\n      }\n      if (\n        !(game.localPlayerID in gameState.players) &&\n        !(game.localPlayerID in gameState.offlinePlayers)\n      ) {\n        // we're not in the gamestate, create a new player\n        game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n        game.players[game.localPlayerID].levelID =\n          game.levelgen.currentFloorFirstLevelID;\n        game.players[game.localPlayerID].x =\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomX +\n          Math.floor(\n            game.rooms[game.levelgen.currentFloorFirstLevelID].width / 2,\n          );\n        game.players[game.localPlayerID].y =\n          game.rooms[game.levelgen.currentFloorFirstLevelID].roomY +\n          Math.floor(\n            game.rooms[game.levelgen.currentFloorFirstLevelID].height / 2,\n          );\n        game.room = game.rooms[game.levelgen.currentFloorFirstLevelID];\n\n        game.room.enterLevel(game.players[game.localPlayerID]);\n      } else {\n        game.room = game.rooms[game.players[game.localPlayerID].levelID];\n      }\n    } else {\n      // stub game state, start a new world\n      game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n      game.room = game.rooms[game.players[game.localPlayerID].levelID];\n      game.room.enterLevel(game.players[game.localPlayerID]);\n    }\n    Random.setState(gameState.randomState);\n    game.room.updateLighting();\n    let p = game.players[game.localPlayerID];\n    game.room.items.push(new Key(game.room, p.x - 1, p.y + 1));\n\n    //choose one door to lock\n    let locked = false;\n    if (!locked) {\n      game.room.doors.forEach((door) => {\n        door.lock();\n        locked = true;\n      });\n    }\n    /*\n    game.rooms.forEach((room) => {\n      room.addWallCrack();\n    });\n   \n    */\n\n    game.chat = [];\n  });\n};\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { LevelConstants } from \"./levelConstants\";\n\nexport class HealthBar {\n  hurtTimer: number;\n\n  constructor() {\n    this.hurtTimer = 0;\n  }\n\n  hurt = () => {\n    this.hurtTimer = Date.now();\n  };\n\n  draw = (\n    delta: number,\n    hearts: number,\n    maxHearts: number,\n    x: number,\n    y: number,\n    flashing: boolean,\n  ) => {\n    let t = Date.now() - this.hurtTimer;\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\n      let fullHearts = Math.floor(hearts);\n\n      let halfHearts = Math.ceil(hearts - fullHearts);\n\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\n\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\n      //   (which isn't really parameterizable)\n      let drawWidth = Math.round(\n        Math.min(\n          9,\n          Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t),\n        ),\n      );\n      let drawHeight =\n        Math.round(\n          Math.min(\n            0.5,\n            Math.min(\n              0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t),\n              0.003 * t,\n            ),\n          ) * 16,\n        ) / 16.0;\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\n      let xxStart = 0.5 + -width / 2;\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\n        let tileX = 0;\n        if (!flashing) tileX = 1.5;\n        else if (i < fullHearts) tileX = 0;\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\n        else tileX = 1;\n        let xx = (drawWidth * i) / 16.0 + xxStart;\n        Game.drawFX(\n          tileX,\n          8,\n          0.5,\n          0.5,\n          x + xx,\n          y - 1 - drawHeight / 2,\n          0.5,\n          drawHeight,\n        );\n        xx += 9.0 / 16.0;\n\n        let j = maxHearts - i - 1;\n        if (j !== i) {\n          let tileX = 0;\n          if (!flashing) tileX = 1.5;\n          else if (j < fullHearts) tileX = 0;\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\n          else tileX = 1;\n          let xx = (drawWidth * j) / 16.0 + xxStart;\n          Game.drawFX(\n            tileX,\n            8,\n            0.5,\n            0.5,\n            x + xx,\n            y - 1 - drawHeight / 2,\n            0.5,\n            drawHeight,\n          );\n          xx += 9.0 / 16.0;\n        }\n      }\n    }\n  };\n}\n","import { Game } from \"./game\";\nimport { Drawable } from \"./drawable\";\nimport { Room } from \"./room\";\nimport { Entity } from \"./entity/entity\";\n\nenum Direction {\n  North,\n  NorthEast,\n  East,\n  SouthEast,\n  South,\n  SouthWest,\n  West,\n  NorthWest,\n  Center,\n}\n\nexport class HitWarning extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  static frame = 0;\n  private game: Game;\n  parent: Entity | null = null;\n  private _pointerDir: Direction | null = null;\n  private _pointerOffset: { x: number; y: number } | null = null;\n  private tileX: number;\n  private tileY: number;\n  private eX: number;\n  private eY: number;\n  private offsetY: number;\n  private pointerOffset: { x: number; y: number };\n  private isEnemy: Boolean;\n  private dirOnly: Boolean;\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    eX?: number,\n    eY?: number,\n    isEnemy?: Boolean,\n    dirOnly: Boolean = false,\n    parent: Entity | null = null,\n  ) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.game = game;\n    this.parent = parent;\n    this.tileX = 0;\n    this.tileY = 22;\n    this.eX = eX;\n    this.eY = eY;\n    this.offsetY = 0.2;\n    this.dirOnly = dirOnly;\n\n    this.isEnemy = isEnemy !== undefined ? isEnemy : true;\n    this.pointerOffset = this.getPointerOffset();\n    this.removeOverlapping();\n  }\n\n  tick = () => {\n    this.dead = true;\n  };\n\n  static updateFrame = (delta: number) => {\n    HitWarning.frame += 0.125 * delta;\n    if (HitWarning.frame >= 2) HitWarning.frame = 0;\n  };\n\n  removeOverlapping = () => {\n    for (const entity of this.game.room.entities) {\n      if (\n        entity.x === this.x &&\n        entity.y === this.y &&\n        entity.pushable === false\n      ) {\n        this.dead = true;\n        break;\n      }\n    }\n    for (const door of this.game.room.doors) {\n      if (door.x === this.x && door.y === this.y) {\n        this.dead = true;\n        break;\n      }\n    }\n  };\n\n  private getPointerDir(): Direction {\n    if (this._pointerDir === null) {\n      const dx = this.eX - this.x;\n      const dy = this.eY - this.y;\n\n      if (dx === 0 && dy === 0) {\n        this._pointerDir = Direction.Center;\n      } else if (dx === 0) {\n        this._pointerDir = dy < 0 ? Direction.South : Direction.North;\n      } else if (dy === 0) {\n        this._pointerDir = dx < 0 ? Direction.East : Direction.West;\n      } else if (dx < 0) {\n        this._pointerDir = dy < 0 ? Direction.SouthEast : Direction.NorthEast;\n      } else {\n        this._pointerDir = dy < 0 ? Direction.SouthWest : Direction.NorthWest;\n      }\n\n      this.tileX = 0 + 2 * this._pointerDir;\n    }\n    return this._pointerDir;\n  }\n\n  private getPointerOffset(): { x: number; y: number } {\n    if (this._pointerOffset === null) {\n      const offsets = {\n        [Direction.North]: { x: 0, y: 0.5 },\n        [Direction.South]: { x: 0, y: -0.6 },\n        [Direction.West]: { x: 0.6, y: 0 },\n        [Direction.East]: { x: -0.6, y: 0 },\n        [Direction.NorthEast]: { x: -0.5, y: 0.5 },\n        [Direction.NorthWest]: { x: 0.5, y: 0.5 },\n        [Direction.SouthEast]: { x: -0.5, y: -0.5 },\n        [Direction.SouthWest]: { x: 0.5, y: -0.5 },\n        [Direction.Center]: { x: 0, y: -0.25 },\n      };\n\n      this._pointerOffset = offsets[this.getPointerDir()];\n    }\n    return this._pointerOffset;\n  }\n\n  draw = (delta: number) => {\n    if (\n      Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1 &&\n      Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1\n    ) {\n      if (this.isEnemy) {\n        Game.drawFX(\n          this.tileX + Math.floor(HitWarning.frame),\n          this.tileY,\n          1,\n          1,\n          this.x + this.pointerOffset.x,\n          this.y + this.pointerOffset.y - this.offsetY,\n          1,\n          1,\n        );\n      }\n      if (!this.dirOnly) {\n        Game.drawFX(\n          18 + Math.floor(HitWarning.frame),\n          5,\n          1,\n          1,\n          this.x,\n          this.y - this.offsetY + 0,\n          1,\n          1,\n        );\n      }\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.isEnemy) {\n      Game.drawFX(\n        this.tileX + Math.floor(HitWarning.frame),\n        this.tileY + 1,\n        1,\n        1,\n        this.x + this.pointerOffset.x,\n        this.y + this.pointerOffset.y - this.offsetY,\n        1,\n        1,\n      );\n    }\n    if (\n      Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1 &&\n      Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1\n    ) {\n      if (!this.dirOnly) {\n        Game.drawFX(\n          18 + Math.floor(HitWarning.frame),\n          6,\n          1,\n          1,\n          this.x,\n          this.y - this.offsetY + 0,\n          1,\n          1,\n        );\n      }\n    }\n  };\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Game } from \"./game\";\n\nexport enum InputEnum {\n  I,\n  M,\n  M_UP,\n  Q,\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SPACE,\n  COMMA,\n  PERIOD,\n  LEFT_CLICK,\n  RIGHT_CLICK,\n  MOUSE_MOVE,\n  NUMBER_1,\n  NUMBER_2,\n  NUMBER_3,\n  NUMBER_4,\n  NUMBER_5,\n  NUMBER_6,\n  NUMBER_7,\n  NUMBER_8,\n  NUMBER_9,\n}\n\nconst checkIsMouseHold = function () {\n  if (\n    Input.mouseDownStartTime !== null &&\n    Date.now() >= Input.mouseDownStartTime + GameConstants.HOLD_THRESH\n  ) {\n    Input.isMouseHold = true;\n  }\n};\n\nexport const Input = {\n  _pressed: {},\n\n  isTapHold: false,\n  tapStartTime: null,\n  IS_TAP_HOLD_THRESH: 300,\n  keyDownListener: function (key: string) { },\n  iListener: function () { },\n  mListener: function () { },\n  mUpListener: function () { },\n  qListener: function () { },\n  leftListener: function () { },\n  rightListener: function () { },\n  upListener: function () { },\n  downListener: function () { },\n  aListener: function () {\n    Input.leftListener();\n  },\n  dListener: function () {\n    Input.rightListener();\n  },\n  wListener: function () {\n    Input.upListener();\n  },\n  sListener: function () {\n    Input.downListener();\n  },\n  spaceListener: function () { },\n  leftSwipeListener: function () { },\n  rightSwipeListener: function () { },\n  upSwipeListener: function () { },\n  downSwipeListener: function () { },\n  tapListener: function () { },\n  commaListener: function () { },\n  periodListener: function () { },\n  numKeyListener: function (num: number) { },\n  mouseLeftClickListeners: [],\n  mouseRightClickListeners: [],\n  mouseMoveListeners: [],\n  mouseDownListeners: [],\n  mouseUpListeners: [],\n\n  mouseX: 0,\n  mouseY: 0,\n  mouseDown: false,\n\n  lastPressTime: 0,\n  lastPressKey: \"\",\n\n  SPACE: \"Space\",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  W: \"KeyW\",\n  A: \"KeyA\",\n  S: \"KeyS\",\n  D: \"KeyD\",\n  M: \"KeyM\",\n  N: \"KeyN\",\n  I: \"KeyI\",\n  Q: \"KeyQ\",\n  NUMBER_1: \"Digit1\",\n  NUMBER_2: \"Digit2\",\n  NUMBER_3: \"Digit3\",\n  NUMBER_4: \"Digit4\",\n  NUMBER_5: \"Digit5\",\n  NUMBER_6: \"Digit6\",\n  NUMBER_7: \"Digit7\",\n  NUMBER_8: \"Digit8\",\n  NUMBER_9: \"Digit9\",\n  COMMA: \"Comma\",\n  PERIOD: \"Period\",\n\n  isDown: function (keyCode: string) {\n    return this._pressed[keyCode];\n  },\n\n  onKeydown: (event: KeyboardEvent) => {\n    if (event.repeat) return; // ignore repeat keypresses\n    if (event.key) Input.keyDownListener(event.key);\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\")\n      event.preventDefault();\n    Input.lastPressTime = Date.now();\n    Input.lastPressKey = event.key;\n    Input._pressed[event.code] = true;\n    switch (event.code) {\n      case Input.LEFT:\n        Input.leftListener();\n        break;\n      case Input.A:\n        Input.aListener();\n        break;\n      case Input.RIGHT:\n        Input.rightListener();\n        break;\n      case Input.D:\n        Input.dListener();\n        break;\n      case Input.UP:\n        Input.upListener();\n        break;\n      case Input.W:\n        Input.wListener();\n        break;\n      case Input.DOWN:\n        Input.downListener();\n        break;\n      case Input.S:\n        Input.sListener();\n        break;\n      case Input.SPACE:\n        Input.spaceListener();\n        break;\n      case Input.M:\n        Input.mListener();\n        break;\n      case Input.I:\n        Input.iListener();\n        break;\n      case Input.Q:\n        Input.qListener();\n        break;\n      case Input.COMMA:\n        Input.commaListener();\n        break;\n      case Input.PERIOD:\n        Input.periodListener();\n        break;\n      case Input.NUMBER_1:\n      case Input.NUMBER_2:\n      case Input.NUMBER_3:\n      case Input.NUMBER_4:\n      case Input.NUMBER_5:\n      case Input.NUMBER_6:\n      case Input.NUMBER_7:\n      case Input.NUMBER_8:\n      case Input.NUMBER_9:\n        Input.numKeyListener(parseInt(event.code.slice(-1)));\n        break;\n    }\n  },\n\n  onKeyup: function (event: KeyboardEvent) {\n    delete this._pressed[event.code];\n    if (event.key === this.lastPressKey) {\n      this.lastPressTime = 0;\n      this.lastPressKey = 0;\n    }\n    if (event.code === Input.M) Input.mUpListener();\n  },\n\n  mouseLeftClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\n      Input.mouseLeftClickListeners[i](x, y);\n  },\n\n  mouseRightClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseRightClickListeners.length; i++)\n      Input.mouseRightClickListeners[i](x, y);\n  },\n\n  mouseMoveListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseMoveListeners.length; i++)\n      Input.mouseMoveListeners[i](x, y);\n  },\n\n  mouseDownListener: function (x: number, y: number, button: number) {\n    for (let i = 0; i < Input.mouseDownListeners.length; i++)\n      Input.mouseDownListeners[i](x, y, button);\n  },\n\n  mouseUpListener: function (x: number, y: number, button: number) {\n    for (let i = 0; i < Input.mouseUpListeners.length; i++)\n      Input.mouseUpListeners[i](x, y, button);\n  },\n\n  mouseClickListener: function (event: MouseEvent) {\n    if (event.button === 0 || event.button === 2) {\n      let rect = window.document\n        .getElementById(\"gameCanvas\")\n        .getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      let scaledX = Math.floor(x / Game.scale);\n      let scaledY = Math.floor(y / Game.scale);\n\n      if (event.button === 0) {\n        Input.mouseLeftClickListener(scaledX, scaledY);\n      } else if (event.button === 2) {\n        Input.mouseRightClickListener(scaledX, scaledY);\n      }\n    }\n  },\n\n  updateMousePos: function (event: MouseEvent) {\n    let rect = window.document\n      .getElementById(\"gameCanvas\")\n      .getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    Input.mouseX = Math.floor(x / Game.scale);\n    Input.mouseY = Math.floor(y / Game.scale);\n\n    Input.mouseMoveListener(Input.mouseX, Input.mouseY);\n  },\n\n  handleMouseDown: function (event: MouseEvent) {\n    if (Input.mouseDown) return; // Prevent multiple triggers\n\n    Input.mouseDown = true;\n    Input.mouseDownStartTime = Date.now();\n    Input.isMouseHold = false;\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, event.button);\n\n    // Start checking for hold\n    if (!Input._holdCheckInterval) {\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16); // Check every frame\n    }\n  },\n\n  handleMouseUp: function (event: MouseEvent) {\n    Input.mouseDown = false;\n    Input.mouseDownStartTime = null;\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, event.button);\n\n    // Clear hold check interval\n    if (Input._holdCheckInterval) {\n      clearInterval(Input._holdCheckInterval);\n      Input._holdCheckInterval = null;\n    }\n\n    // Clear isMouseHold after a short delay to ensure click handler sees it\n    setTimeout(() => {\n      Input.isMouseHold = false;\n    }, 50);\n  },\n\n  _holdCheckInterval: null,\n\n  checkIsMouseHold: function () {\n    if (!Input.mouseDown || Input.mouseDownStartTime === null) return;\n\n    if (Date.now() >= Input.mouseDownStartTime + Input.HOLD_THRESH) {\n      if (!Input.isMouseHold) {\n        Input.isMouseHold = true;\n        // Call the hold callback if one is registered\n        if (Input.holdCallback) {\n          Input.holdCallback();\n        }\n      }\n    }\n  },\n\n  getTouches: function (evt) {\n    return (\n      evt.touches || evt.originalEvent.touches // browser API\n    ); // jQuery\n  },\n\n  xDown: null,\n  yDown: null,\n  currentX: 0,\n  currentY: 0,\n  swiped: false,\n\n  handleTouchStart: function (evt) {\n    evt.preventDefault();\n\n    const firstTouch = Input.getTouches(evt)[0];\n    Input.xDown = firstTouch.clientX;\n    Input.yDown = firstTouch.clientY;\n    Input.currentX = firstTouch.clientX;\n    Input.currentY = firstTouch.clientY;\n\n    Input.tapStartTime = Date.now();\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.swiped = false;\n  },\n\n  handleTouchMove: function (evt) {\n    evt.preventDefault();\n\n    Input.currentX = evt.touches[0].clientX;\n    Input.currentY = evt.touches[0].clientY;\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    if (Input.swiped) return;\n\n    var xDiff = Input.xDown - Input.currentX;\n    var yDiff = Input.yDown - Input.currentY;\n\n    // we have not swiped yet\n    // check if we've swiped\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        /*most significant*/\n        if (xDiff > 0) {\n          Input.leftSwipeListener();\n        } else {\n          Input.rightSwipeListener();\n        }\n        Input.swiped = true;\n      } else {\n        if (yDiff > 0) {\n          Input.upSwipeListener();\n        } else {\n          Input.downSwipeListener();\n        }\n        Input.swiped = true;\n      }\n    }\n  },\n\n  handleTouchEnd: function (evt) {\n    evt.preventDefault();\n\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\n    Input.isTapHold = false;\n    Input.tapStartTime = null;\n\n    // we've already swiped, don't count the click\n    if (Input.swiped) return;\n    Input.mouseClickListener({\n      button: 0,\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.updateMousePos({\n      clientX: 0,\n      clientY: 0,\n    } as MouseEvent);\n  },\n\n  checkIsTapHold: function () {\n    if (\n      Input.tapStartTime !== null &&\n      Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH\n    )\n      Input.isTapHold = true;\n  },\n\n  isMouseHold: false,\n  mouseDownStartTime: null,\n  HOLD_THRESH: 200, // Adjust this value as needed\n\n  holdCallback: null as (() => void) | null,\n};\nwindow.addEventListener(\n  \"keyup\",\n  function (event) {\n    Input.onKeyup(event);\n  },\n  false\n);\nwindow.addEventListener(\n  \"keydown\",\n  function (event) {\n    Input.onKeydown(event);\n  },\n  false\n);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"click\", (event) => Input.mouseClickListener(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mousemove\", (event) => Input.updateMousePos(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\n    \"mousedown\",\n    (event) => Input.handleMouseDown(event),\n    false\n  );\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mouseup\", (event) => Input.handleMouseUp(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"contextmenu\", (event) => event.preventDefault(), false);\n","import { Item } from \"./item/item\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Game } from \"./game\";\nimport { Key } from \"./item/key\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Equippable } from \"./item/equippable\";\nimport { Armor } from \"./item/armor\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { Coin } from \"./item/coin\";\nimport { Gold } from \"./item/gold\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Coal } from \"./item/coal\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { Room } from \"./room\";\nimport { Usable } from \"./item/usable\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Candle } from \"./item/candle\";\nimport { Torch } from \"./item/torch\";\nimport { Lantern } from \"./item/lantern\";\nimport { Player } from \"./player\";\nimport { Spear } from \"./weapon/spear\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Backpack } from \"./item/backpack\";\nimport { Slingshot } from \"./weapon/slingshot\";\nimport { Heart } from \"./item/heart\";\nimport { MouseCursor } from \"./mouseCursor\";\nimport { Warhammer } from \"./weapon/warhammer\";\nimport { GodStone } from \"./item/godStone\";\nimport { Input } from \"./input\";\n\nlet OPEN_TIME = 100; // milliseconds\n// Dark gray color used for the background of inventory slots\nlet FILL_COLOR = \"#5a595b\";\n// Very dark blue-gray color used for outlines and borders\nlet OUTLINE_COLOR = \"#292c36\";\n// Light blue color used to indicate equipped items\nlet EQUIP_COLOR = \"#85a8e6\";\n// White color used for the outer border of the inventory\nlet FULL_OUTLINE = \"white\";\n\nexport class Inventory {\n  player: Player;\n  items: Array<Item | null>;\n  rows = 3;\n  cols = 5;\n  selX = 0;\n  selY = 0;\n  game: Game;\n  isOpen: boolean = false;\n  openTime: number = Date.now();\n  coins: number = 0;\n  equipAnimAmount: Array<number>;\n  weapon: Weapon | null = null;\n  expansion: number = 0;\n  grabbedItem: Item | null = null;\n  private _mouseDownStartX: number | null = null;\n  private _mouseDownStartY: number | null = null;\n  private _mouseDownItem: Item | null = null;\n  private _wasHoldDetected: boolean = false;\n  private _isDragging: boolean = false;\n  private _dragStartItem: Item | null = null;\n  private _dragStartSlot: number | null = null;\n  private itemEquipAnimations: Map<Item, number> = new Map();\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.player = player;\n    Input.mouseDownListeners.push((x, y, button) =>\n      this.handleMouseDown(x, y, button),\n    );\n    Input.mouseUpListeners.push((x, y, button) =>\n      this.handleMouseUp(x, y, button),\n    );\n    Input.holdCallback = () => this.onHoldDetected();\n\n    this.items = new Array<Item | null>(\n      (this.rows + this.expansion) * this.cols,\n    ).fill(null);\n    this.equipAnimAmount = new Array<number>(\n      (this.rows + this.expansion) * this.cols,\n    ).fill(0);\n    let a = (i: Item | null) => {\n      if (i === null) return;\n      if (i instanceof Equippable) {\n        i.setWielder(this.player);\n      }\n      if (i instanceof Weapon && this.weapon === null) {\n        i.toggleEquip();\n        this.weapon = i;\n        //this.player.weapon = this.weapon;\n      }\n\n      this.addItem(i);\n    };\n    let startingInv = GameConstants.DEVELOPER_MODE\n      ? GameConstants.STARTING_DEV_INVENTORY\n      : GameConstants.STARTING_INVENTORY;\n\n    startingInv.forEach((item) => {\n      a(new item({ game: this.game } as Room, 0, 0));\n    });\n\n    Input.mouseDownListeners.push((x, y, button) =>\n      this.handleMouseDown(x, y, button),\n    );\n    Input.mouseUpListeners.push((x, y, button) =>\n      this.handleMouseUp(x, y, button),\n    );\n  }\n\n  clear = () => {\n    this.items.fill(null);\n    this.equipAnimAmount.fill(0);\n  };\n\n  open = () => {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) this.openTime = Date.now();\n    if (!this.isOpen) {\n      this.selY = 0;\n    }\n  };\n\n  close = () => {\n    this.isOpen = false;\n    if (this.selY > 0) {\n      this.selY = 0;\n    }\n  };\n\n  left = () => {\n    if (this.selX > 0) {\n      this.selX--;\n    }\n  };\n\n  right = () => {\n    if (this.selX < this.cols - 1) {\n      this.selX++;\n    }\n  };\n\n  up = () => {\n    if (this.selY > 0) {\n      this.selY--;\n    }\n  };\n\n  down = () => {\n    if (this.selY < this.rows + this.expansion - 1) {\n      this.selY++;\n    }\n  };\n\n  space = () => {\n    this.itemUse();\n  };\n\n  itemAtSelectedSlot = (): Item | null => {\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) {\n      return null;\n    }\n    return this.items[index];\n  };\n\n  getIndexOfItem = (item: Item): number => {\n    if (item === null) return -1;\n    return this.items.indexOf(item);\n  };\n\n  itemUse = () => {\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) return;\n    const item = this.items[index];\n    if (item instanceof Usable) {\n      item.onUse(this.player);\n      //this.items[index] = null; // Optionally remove the item after use\n    } else if (item instanceof Equippable) {\n      // Don't equip on the same tick as using an item\n      item.toggleEquip();\n      if (item instanceof Weapon) {\n        this.weapon = item.equipped ? item : null;\n      }\n      if (item.equipped) {\n        this.items.forEach((i, idx) => {\n          if (i instanceof Equippable && i !== item && !item.coEquippable(i)) {\n            i.equipped = false;\n            this.equipAnimAmount[idx] = 0;\n          }\n        });\n      }\n    }\n  };\n\n  mouseLeftClick = () => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const bounds = this.isPointInInventoryBounds(x, y);\n\n    // Only close inventory if clicking outside\n    if (!bounds.inBounds && !this.isPointInQuickbarBounds(x, y).inBounds) {\n      this.close();\n    }\n  };\n\n  mouseRightClick = () => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const bounds = this.isPointInInventoryBounds(x, y);\n\n    if (bounds.inBounds) {\n      this.drop();\n    }\n  };\n\n  leftQuickbar = () => {\n    this.left();\n  };\n\n  rightQuickbar = () => {\n    this.right();\n  };\n\n  spaceQuickbar = () => {\n    this.itemUse();\n  };\n\n  handleNumKey = (num: number) => {\n    this.selX = Math.max(0, Math.min(num - 1, this.cols - 1));\n    this.selY = 0;\n    this.itemUse();\n  };\n\n  mouseMove = () => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const bounds = this.isPointInInventoryBounds(x, y);\n\n    if (bounds.inBounds) {\n      const s = this.isOpen\n        ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n        : 18;\n      const b = 2;\n      const g = -2;\n\n      const oldSelX = this.selX;\n      const oldSelY = this.selY;\n\n      this.selX = Math.max(\n        0,\n        Math.min(\n          Math.floor((x - bounds.startX) / (s + 2 * b + g)),\n          this.cols - 1,\n        ),\n      );\n      this.selY = this.isOpen\n        ? Math.max(\n            0,\n            Math.min(\n              Math.floor((y - bounds.startY) / (s + 2 * b + g)),\n              this.rows + this.expansion - 1,\n            ),\n          )\n        : 0;\n\n      if (oldSelX !== this.selX || oldSelY !== this.selY) {\n      }\n    }\n  };\n\n  moveItemToSlot = (\n    item: Item | null,\n    index: number,\n    otherItem: Item | null,\n    otherIndex: number,\n  ) => {\n    if (item === null) return;\n\n    // Preserve animation states before moving\n    const itemAnim = this.equipAnimAmount[index];\n    const otherAnim = otherItem ? this.equipAnimAmount[otherIndex] : 0;\n\n    if (otherItem === null) {\n      this.items[index] = item;\n      this.equipAnimAmount[index] = this.itemEquipAnimations.get(item) ?? 0;\n    } else {\n      this.items[index] = otherItem;\n      this.items[otherIndex] = item;\n      this.equipAnimAmount[index] =\n        this.itemEquipAnimations.get(otherItem) ?? 0;\n      this.equipAnimAmount[otherIndex] =\n        this.itemEquipAnimations.get(item) ?? 0;\n    }\n  };\n\n  grabItem = (item: Item) => {\n    if (item === null) {\n      return;\n    }\n    if (this.grabbedItem !== null) {\n      return;\n    }\n\n    // Remove the item from its slot when grabbed\n    const index = this.getIndexOfItem(item);\n\n    if (index !== -1) {\n      this.items[index] = null;\n      this.grabbedItem = item;\n    } else {\n    }\n  };\n\n  releaseItem = () => {\n    if (this.grabbedItem === null) {\n      return;\n    }\n\n    const targetIndex = this.selX + this.selY * this.cols;\n    const existingItem = this.items[targetIndex];\n\n    // If target slot is empty, place item there\n    if (existingItem === null) {\n      this.items[targetIndex] = this.grabbedItem;\n    } else {\n      // Swap items\n      this.items[targetIndex] = this.grabbedItem;\n    }\n\n    this.grabbedItem = null;\n  };\n\n  drawDraggedItem = (delta: number) => {\n    if (this.grabbedItem === null) return;\n    const { x, y } = MouseCursor.getInstance().getPosition();\n\n    let item = this.grabbedItem;\n    const drawX = x - 0.5 * GameConstants.TILESIZE;\n    const drawY = y - 0.5 * GameConstants.TILESIZE;\n    const drawXScaled = drawX / GameConstants.TILESIZE;\n    const drawYScaled = drawY / GameConstants.TILESIZE;\n    item.drawIcon(delta, drawXScaled, drawYScaled);\n  };\n\n  drop = () => {\n    let index = this.selX + this.selY * this.cols;\n    if (index < 0 || index >= this.items.length) return;\n    const item = this.items[index];\n    if (item === null) return;\n    this.dropItem(item, index);\n  };\n\n  dropItem = (item: Item, index: number) => {\n    item.level = this.game.rooms[this.player.levelID];\n    item.x = this.player.x;\n    item.y = this.player.y;\n    item.alpha = 1;\n    item.pickedUp = false;\n    item.dropFromInventory();\n    this.equipAnimAmount[index] = 0;\n    this.game.rooms[this.player.levelID].items.push(item);\n    this.items[index] = null;\n  };\n\n  dropFromInventory = () => {\n    // Intentionally left blank or implement if needed\n  };\n\n  hasItem = <T extends Item>(itemType: new (...args: any[]) => T): T | null => {\n    return this.items.find((i): i is T => i instanceof itemType) || null;\n  };\n\n  hasItemCount = (item: Item | null): boolean => {\n    if (item === null) return false;\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\n    return this.items.some(\n      (i) =>\n        i !== null &&\n        i.constructor === item.constructor &&\n        i.stackCount >= item.stackCount,\n    );\n  };\n\n  subtractItemCount = (item: Item | null) => {\n    if (item === null) return;\n    if (item instanceof Coin) {\n      this.subtractCoins(item.stackCount);\n      return;\n    }\n    this.items.forEach((i, idx) => {\n      if (i === null) return;\n      if (i.constructor === item.constructor) {\n        i.stackCount -= item.stackCount;\n        if (i.stackCount <= 0) {\n          this.items[idx] = null;\n        }\n      }\n    });\n  };\n\n  coinCount = (): number => {\n    return this.coins;\n  };\n\n  subtractCoins = (n: number) => {\n    this.coins = Math.max(0, this.coins - n);\n  };\n\n  addCoins = (n: number) => {\n    this.coins += n;\n  };\n\n  isFull = (): boolean => {\n    return (\n      this.items.filter((i) => i !== null).length >=\n      (this.rows + this.expansion) * this.cols\n    );\n  };\n\n  addItem = (item: Item | null): boolean => {\n    if (item === null) return false;\n    if (item instanceof Coin) {\n      this.coins += item.stack;\n      return true;\n    }\n    if (item instanceof Equippable) {\n      item.setWielder(this.player);\n    }\n    if (item.stackable) {\n      for (let i = 0; i < this.items.length; i++) {\n        if (\n          this.items[i] !== null &&\n          this.items[i]!.constructor === item.constructor\n        ) {\n          this.items[i]!.stackCount += item.stackCount;\n          return true;\n        }\n      }\n    }\n    if (!this.isFull()) {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i] === null) {\n          this.items[i] = item;\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  removeItem = (item: Item | null) => {\n    if (item === null) return;\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items[index] = null;\n    }\n  };\n\n  getArmor = (): Armor | null => {\n    return (\n      this.items.find((i): i is Armor => i instanceof Armor && i.equipped) ||\n      null\n    );\n  };\n\n  hasWeapon = (): boolean => {\n    return this.weapon !== null;\n  };\n\n  getWeapon = (): Weapon | null => {\n    return this.weapon;\n  };\n\n  tick = () => {\n    this.items.forEach((i) => {\n      if (i !== null) i.tickInInventory();\n    });\n\n    // Check for drag initiation\n    this.checkForDragStart();\n  };\n\n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\n    // Returns y value for next line\n    if (text === \"\") return y;\n    let words = text.split(\" \");\n    let line = \"\";\n\n    while (words.length > 0) {\n      if (Game.measureText(line + words[0]).width > maxWidth) {\n        Game.fillText(line, x, y);\n        line = \"\";\n        y += 8;\n      } else {\n        if (line !== \"\") line += \" \";\n        line += words[0];\n        words.splice(0, 1);\n      }\n    }\n    if (line.trim() !== \"\") {\n      Game.fillText(line, x, y);\n      y += 8;\n    }\n    return y;\n  };\n\n  drawCoins = (delta: number) => {\n    const coinX = LevelConstants.SCREEN_W - 1;\n    const coinY = LevelConstants.SCREEN_H - 1;\n\n    Game.drawItem(19, 0, 1, 2, coinX, coinY - 1, 1, 2);\n\n    const countText = `${this.coins}`;\n    const width = Game.measureText(countText).width;\n    const countX = 4 - width;\n    const countY = -1;\n\n    Game.fillTextOutline(\n      countText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n\n    const turnCountText = `${this.player.turnCount}`;\n    Game.fillTextOutline(\n      turnCountText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY - 15,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n  };\n\n  pointInside = (x: number, y: number): boolean => {\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = this.cols * (s + 2 * b + g) - g;\n    const height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n    const startY = this.isOpen\n      ? Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob\n      : GameConstants.HEIGHT - (s + 2 * b) - 5 - ob;\n    const checkHeight = this.isOpen ? height + 2 * ob : s + 2 * b + 2 * ob;\n\n    return (\n      x >= startX &&\n      x <= startX + width + 2 * ob &&\n      y >= startY &&\n      y <= startY + checkHeight\n    );\n  };\n\n  drawQuickbar = (delta: number) => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\n\n    const s = 18; // size of box\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = this.cols * (s + 2 * b + g) - g;\n    const height = s + 2 * b;\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\n    const startY = GameConstants.HEIGHT - height - 5; // 5 pixels from bottom\n\n    // Draw main background\n    Game.ctx.fillStyle = FULL_OUTLINE;\n    Game.ctx.fillRect(startX - ob, startY - 1, width + 2, height + 2);\n\n    // Draw highlighted background for selected item only if mouse is in bounds\n    if (isInBounds) {\n      Game.ctx.fillRect(\n        startX + this.selX * (s + 2 * b + g) - hg - ob,\n        startY - hg - ob,\n        s + 2 * b + 2 * hg + 2 * ob,\n        s + 2 * b + 2 * hg + 2 * ob,\n      );\n    }\n\n    // Draw individual item slots\n    for (let xIdx = 0; xIdx < this.cols; xIdx++) {\n      // Draw slot outline\n      Game.ctx.fillStyle = OUTLINE_COLOR;\n      Game.ctx.fillRect(\n        startX + xIdx * (s + 2 * b + g),\n        startY,\n        s + 2 * b,\n        s + 2 * b,\n      );\n\n      // Draw slot background\n      Game.ctx.fillStyle = FILL_COLOR;\n      Game.ctx.fillRect(startX + xIdx * (s + 2 * b + g) + b, startY + b, s, s);\n\n      // Draw equip animation (this should always show)\n      const idx = xIdx;\n      Game.ctx.fillStyle = EQUIP_COLOR;\n      const yOff = s * (1 - this.equipAnimAmount[idx]);\n      Game.ctx.fillRect(\n        startX + xIdx * (s + 2 * b + g) + b,\n        startY + b + yOff,\n        s,\n        s - yOff,\n      );\n\n      // Draw item icon if exists\n      if (idx < this.items.length && this.items[idx] !== null) {\n        const drawX =\n          startX +\n          xIdx * (s + 2 * b + g) +\n          b +\n          Math.floor(0.5 * s) -\n          0.5 * GameConstants.TILESIZE;\n        const drawY =\n          startY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawXScaled = drawX / GameConstants.TILESIZE;\n        const drawYScaled = drawY / GameConstants.TILESIZE;\n        this.items[idx]!.drawIcon(delta, drawXScaled, drawYScaled);\n      }\n    }\n\n    // Draw selection box only if mouse is in bounds\n    if (isInBounds) {\n      const selStartX = startX + this.selX * (s + 2 * b + g);\n      const selStartY = startY;\n\n      // Outer selection box (dark)\n      Game.ctx.fillStyle = OUTLINE_COLOR;\n      Game.ctx.fillRect(\n        selStartX - hg,\n        selStartY - hg,\n        s + 2 * b + 2 * hg,\n        s + 2 * b + 2 * hg,\n      );\n\n      // Inner selection box (light grey)\n      Game.ctx.fillStyle = FILL_COLOR;\n      Game.ctx.fillRect(\n        selStartX + b - hg,\n        selStartY + b - hg,\n        s + 2 * hg,\n        s + 2 * hg,\n      );\n\n      // Draw equip animation for selected slot with highlight\n      const idx = this.selX;\n      Game.ctx.fillStyle = EQUIP_COLOR;\n      const yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[idx]);\n      Game.ctx.fillRect(\n        Math.round(startX + this.selX * (s + 2 * b + g) + b - hg),\n        Math.round(startY + b + yOff - hg),\n        s + 2 * hg,\n        s + 2 * hg - yOff,\n      );\n\n      // Redraw the selected item\n      if (idx < this.items.length && this.items[idx] !== null) {\n        const drawX =\n          selStartX + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawY =\n          selStartY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\n        const drawXScaled = drawX / GameConstants.TILESIZE;\n        const drawYScaled = drawY / GameConstants.TILESIZE;\n        this.items[idx]!.drawIcon(delta, drawXScaled, drawYScaled);\n      }\n    }\n  };\n\n  updateEquipAnimAmount = (delta: number) => {\n    this.equipAnimAmount.forEach((amount, idx) => {\n      const item = this.items[idx];\n      if (item instanceof Equippable) {\n        let targetAmount = item.equipped ? 1 : 0;\n        let currentAmount = this.itemEquipAnimations.get(item) ?? amount;\n\n        currentAmount += 0.2 * delta * (targetAmount - currentAmount);\n        currentAmount = Math.max(0, Math.min(1, currentAmount));\n\n        this.itemEquipAnimations.set(item, currentAmount);\n        this.equipAnimAmount[idx] = currentAmount;\n      } else {\n        this.equipAnimAmount[idx] = 0;\n        if (item) this.itemEquipAnimations.delete(item);\n      }\n    });\n  };\n\n  draw = (delta: number) => {\n    const { x, y } = MouseCursor.getInstance().getPosition();\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\n\n    // Draw coins and quickbar (these are always visible)\n    this.drawCoins(delta);\n    this.drawQuickbar(delta);\n    this.updateEquipAnimAmount(delta);\n\n    if (this.isOpen) {\n      // Draw semi-transparent background for full inventory\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n\n      // Define dimensions and styling variables (similar to drawQuickbar)\n      const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      const b = 2; // border\n      const g = -2; // gap\n      const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n      const invRows = this.rows + this.expansion;\n      const ob = 1; // outer border\n      const width = this.cols * (s + 2 * b + g) - g;\n      const height = invRows * (s + 2 * b + g) - g;\n\n      // Draw main inventory background (similar to drawQuickbar)\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\n      const mainBgY =\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\n      Game.ctx.fillRect(mainBgX, mainBgY, width + 2 * ob, height + 2 * ob);\n\n      // Draw highlighted background for selected item only if mouse is in bounds\n      if (isInBounds) {\n        const highlightX =\n          Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g),\n          ) -\n          hg -\n          ob;\n        const highlightY =\n          Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g),\n          ) -\n          hg -\n          ob;\n\n        Game.ctx.fillRect(\n          highlightX,\n          highlightY,\n          s + 2 * b + 2 * hg + 2 * ob,\n          s + 2 * b + 2 * hg + 2 * ob,\n        );\n      }\n\n      // Draw individual inventory slots (similar to drawQuickbar, but for all rows)\n      for (let xIdx = 0; xIdx < this.cols; xIdx++) {\n        for (let yIdx = 0; yIdx < this.rows + this.expansion; yIdx++) {\n          // Draw slot outline\n          const slotX = Math.round(\n            0.5 * GameConstants.WIDTH - 0.5 * width + xIdx * (s + 2 * b + g),\n          );\n          const slotY = Math.round(\n            0.5 * GameConstants.HEIGHT - 0.5 * height + yIdx * (s + 2 * b + g),\n          );\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(slotX, slotY, s + 2 * b, s + 2 * b);\n\n          // Draw slot background\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(slotX + b, slotY + b, s, s);\n\n          // Draw equip animation (unique to full inventory view)\n          const idx = xIdx + yIdx * this.cols;\n          Game.ctx.fillStyle = EQUIP_COLOR;\n          const yOff = s * (1 - this.equipAnimAmount[idx]);\n          Game.ctx.fillRect(slotX + b, slotY + b + yOff, s, s - yOff);\n\n          // Draw item icon if exists\n          if (idx < this.items.length && this.items[idx] !== null) {\n            const drawX =\n              0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              xIdx * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE;\n            const drawY =\n              0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              yIdx * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE;\n            const drawXScaled = drawX / GameConstants.TILESIZE;\n            const drawYScaled = drawY / GameConstants.TILESIZE;\n            this.items[idx]!.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n      }\n\n      // Draw item icons after animation delay (similar to drawQuickbar, but for all items)\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        this.items.forEach((item, idx) => {\n          if (item === null) return;\n          const x = idx % this.cols;\n          const y = Math.floor(idx / this.cols);\n\n          const drawX =\n            0.5 * GameConstants.WIDTH -\n            0.5 * width +\n            x * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE;\n          const drawY =\n            0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            y * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE;\n\n          const drawXScaled = drawX / GameConstants.TILESIZE;\n          const drawYScaled = drawY / GameConstants.TILESIZE;\n\n          item.drawIcon(delta, drawXScaled, drawYScaled);\n        });\n\n        // Draw selection box and related elements only if mouse is in bounds\n        if (isInBounds) {\n          // Draw selection box\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) -\n              hg,\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) -\n              hg,\n            s + 2 * b + 2 * hg,\n            s + 2 * b + 2 * hg,\n          );\n\n          const slotX = Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) +\n              b -\n              hg,\n          );\n          const slotY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) +\n              b -\n              hg,\n          );\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(slotX, slotY, s + 2 * hg, s + 2 * hg);\n\n          // Draw equip animation for selected item (unique to full inventory view)\n          const idx = this.selX + this.selY * this.cols;\n          if (idx < this.items.length && this.items[idx] !== null) {\n            Game.ctx.fillStyle = EQUIP_COLOR;\n            const yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[idx]);\n            Game.ctx.fillRect(\n              0.5 * GameConstants.WIDTH -\n                0.5 * width +\n                this.selX * (s + 2 * b + g) +\n                b -\n                hg,\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                this.selY * (s + 2 * b + g) +\n                b -\n                hg +\n                yOff,\n              s + 2 * hg,\n              s + 2 * hg - yOff,\n            );\n\n            // Redraw selected item icon (similar to drawQuickbar)\n            const drawX =\n              0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE;\n            const drawY =\n              0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE;\n\n            const drawXScaled = drawX / GameConstants.TILESIZE;\n            const drawYScaled = drawY / GameConstants.TILESIZE;\n\n            this.items[idx]!.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n\n        // Draw item description and action text (unique to full inventory view)\n        const selectedIdx = this.selX + this.selY * this.cols;\n\n        if (\n          selectedIdx < this.items.length &&\n          this.items[selectedIdx] !== null\n        ) {\n          const item = this.items[selectedIdx]!;\n          Game.ctx.fillStyle = \"white\";\n\n          // Determine action text\n          let topPhrase = \"\";\n          if (item instanceof Equippable) {\n            topPhrase = item.equipped\n              ? \"[SPACE] to unequip\"\n              : \"[SPACE] to equip\";\n          }\n          if (item instanceof Usable) {\n            topPhrase = \"[SPACE] to use\";\n          }\n\n          // Draw action text\n          const actionTextWidth = Game.measureText(topPhrase).width;\n          Game.fillText(\n            topPhrase,\n            0.5 * (GameConstants.WIDTH - actionTextWidth),\n            5,\n          );\n\n          // Draw item description\n          const lines = item.getDescription().split(\"\\n\");\n          let nextY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              (this.rows + this.expansion) * (s + 2 * b + g) +\n              b +\n              5,\n          );\n          lines.forEach((line) => {\n            nextY = this.textWrap(line, 5, nextY, GameConstants.WIDTH - 10);\n          });\n        }\n      }\n    }\n    this.drawDraggedItem(delta);\n  };\n\n  private isPointInInventoryBounds = (\n    x: number,\n    y: number,\n  ): { inBounds: boolean; startX: number; startY: number } => {\n    const s = this.isOpen\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n      : 18;\n    const b = 2; // border\n    const g = -2; // gap\n    const hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    const ob = 1; // outer border\n    const width = this.cols * (s + 2 * b + g) - g;\n\n    let startX: number;\n    let startY: number;\n    let height: number;\n\n    if (this.isOpen) {\n      // Full inventory bounds\n      height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n      startX = 0.5 * GameConstants.WIDTH - 0.5 * width;\n      startY = 0.5 * GameConstants.HEIGHT - 0.5 * height;\n    } else {\n      // Quickbar bounds\n      height = s + 2 * b;\n      startX = 0.5 * GameConstants.WIDTH - 0.5 * width;\n      startY = GameConstants.HEIGHT - height - 5;\n    }\n\n    const inBounds =\n      x >= startX - ob &&\n      x <= startX + width + ob &&\n      y >= startY - ob &&\n      y <= startY + height + ob;\n\n    return {\n      inBounds,\n      startX,\n      startY,\n    };\n  };\n\n  isPointInQuickbarBounds = (\n    x: number,\n    y: number,\n  ): { inBounds: boolean; startX: number; startY: number } => {\n    const s = this.isOpen\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\n      : 18;\n    const b = 2; // border\n    const g = -2; // gap\n    const width = this.cols * (s + 2 * b + g) - g;\n    const startX = 0.5 * GameConstants.WIDTH - 0.5 * width;\n    const startY = GameConstants.HEIGHT - (s + 2 * b) - 5;\n    const quickbarHeight = s + 2 * b;\n\n    const inBounds =\n      x >= startX &&\n      x <= startX + width &&\n      y >= startY &&\n      y <= startY + quickbarHeight;\n\n    return {\n      inBounds,\n      startX,\n      startY,\n    };\n  };\n\n  isPointInInventoryButton = (x: number, y: number): boolean => {\n    const tX = x / GameConstants.TILESIZE;\n    const tY = y / GameConstants.TILESIZE;\n    return (\n      tX >= LevelConstants.SCREEN_W - 2 &&\n      tX <= LevelConstants.SCREEN_W &&\n      tY >= 0 &&\n      tY <= 2\n    );\n  };\n\n  handleMouseDown = (x: number, y: number, button: number) => {\n    // Ignore if not left click\n    if (button !== 0) return;\n\n    const bounds = this.isPointInInventoryBounds(x, y);\n    if (bounds.inBounds) {\n      const selectedItem = this.itemAtSelectedSlot();\n      if (selectedItem !== null) {\n        this._dragStartItem = selectedItem;\n        this._dragStartSlot = this.selX + this.selY * this.cols;\n      }\n    }\n  };\n\n  onHoldDetected = () => {\n    if (this._dragStartItem !== null && !this._isDragging) {\n      this._isDragging = true;\n      this.grabbedItem = this._dragStartItem;\n\n      // Remove item from original slot\n      if (this._dragStartSlot !== null) {\n        this.items[this._dragStartSlot] = null;\n      }\n    }\n  };\n\n  handleMouseUp = (x: number, y: number, button: number) => {\n    // Ignore if not left click\n    if (button !== 0) return;\n\n    const invBounds = this.isPointInInventoryBounds(x, y);\n    const quickbarBounds = this.isPointInQuickbarBounds(x, y);\n    const isValidDropZone = this.isOpen\n      ? invBounds.inBounds\n      : quickbarBounds.inBounds;\n\n    if (isValidDropZone) {\n      if (this._isDragging && this.grabbedItem !== null) {\n        // We were dragging, place the item\n        const targetSlot = this.selX + this.selY * this.cols;\n        this.placeItemInSlot(targetSlot);\n      } else if (this._dragStartItem !== null) {\n        // We had an item but weren't dragging (quick click)\n        this.itemUse();\n      }\n    } else if (this.grabbedItem !== null) {\n      // Drop the item in the world\n      this.dropItem(this.grabbedItem, this._dragStartSlot);\n\n      this.grabbedItem = null;\n      this.items[this._dragStartSlot] = null;\n    }\n\n    // Reset all drag/hold state\n    this._isDragging = false;\n    this._dragStartItem = null;\n    this._dragStartSlot = null;\n    this.grabbedItem = null;\n  };\n  z;\n  checkForDragStart = () => {\n    if (!Input.mouseDown || this._dragStartItem === null || this._isDragging) {\n      return;\n    }\n\n    if (Input.isMouseHold) {\n      this._isDragging = true;\n      this.grabbedItem = this._dragStartItem;\n\n      // Remove item from original slot\n      if (this._dragStartSlot !== null) {\n        this.items[this._dragStartSlot] = null;\n      }\n    }\n  };\n\n  placeItemInSlot = (targetSlot: number) => {\n    if (this.grabbedItem === null) return;\n\n    const existingItem = this.items[targetSlot];\n\n    // If target slot is empty\n    if (existingItem === null) {\n      this.items[targetSlot] = this.grabbedItem;\n    } else {\n      // Swap items\n      if (this._dragStartSlot !== null) {\n        this.items[this._dragStartSlot] = existingItem;\n      }\n      this.items[targetSlot] = this.grabbedItem;\n    }\n\n    this.grabbedItem = null;\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Equippable } from \"./equippable\";\n\nexport class Armor extends Equippable {\n  health: number;\n  rechargeTurnCounter: number;\n  readonly RECHARGE_TURNS = 15;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.health = 1;\n    this.rechargeTurnCounter = -1;\n    this.tileX = 5;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Armor) return false;\n    return true;\n  };\n\n  getDescription = (): string => {\n    return (\n      \"ENCHANTED ARMOR\\nA magic suit of armor. Absorbs one hit and regenerates after \" +\n      this.RECHARGE_TURNS +\n      \" turns.\"\n    );\n  };\n\n  tickInInventory = () => {\n    if (this.rechargeTurnCounter > 0) {\n      this.rechargeTurnCounter--;\n      if (this.rechargeTurnCounter === 0) {\n        this.rechargeTurnCounter = -1;\n        this.health = 1;\n      }\n    }\n  };\n\n  hurt = (damage: number) => {\n    if (this.health <= 0) return;\n    this.health -= damage;\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\n  };\n\n  drawGUI = (delta: number, playerHealth: number) => {\n    if (this.rechargeTurnCounter === -1)\n      Game.drawFX(5, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n    else {\n      let rechargeProportion =\n        1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\n\n      if (rechargeProportion < 0.5)\n        Game.drawFX(\n          7,\n          2,\n          1,\n          1,\n          playerHealth,\n          LevelConstants.SCREEN_H - 1,\n          1,\n          1,\n        );\n      else\n        Game.drawFX(\n          8,\n          2,\n          1,\n          1,\n          playerHealth,\n          LevelConstants.SCREEN_H - 1,\n          1,\n          1,\n        );\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\nimport { Usable } from \"./usable\";\nimport { Inventory } from \"../inventory\";\n\nexport class Backpack extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n    player.inventory.removeItem(this);\n    player.inventory.expansion += 1;\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n  getDescription = () => {\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class BlueGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"ZIRCON\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Torch } from \"./torch\";\nimport { Lantern } from \"./lantern\";\nimport { Inventory } from \"../inventory\";\nimport { Player } from \"../player\";\nimport { Light } from \"./light\";\n\nexport class Candle extends Light {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 100; //how many turns before it burns out\n    this.tileX = 27;\n    this.tileY = 0;\n    this.name = \"candle\";\n    this.fuelCap = 100;\n    this.radius = 4;\n  }\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Usable } from \"./usable\";\nimport { Lantern } from \"./lantern\";\n\nexport class Coal extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 17;\n    this.tileY = 0;\n    this.stackable = true;\n  }\n  onUse = (player: Player) => {\n    let l = player.inventory.hasItem(Lantern);\n    if (l instanceof Lantern) {\n      if (l.fuel <= l.fuelCap - 50) {\n        l.addFuel(50);\n        player.game.pushMessage(\"You add some fuel to your lantern.\");\n        this.stackCount -= 1;\n        if (this.stackCount <= 0) {\n          player.inventory.removeItem(this);\n        }\n      }\n    }\n  };\n\n  getDescription = (): string => {\n    return \"COAL\\nA lump of coal.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Sound } from \"../sound\";\n\nexport class Coin extends Item {\n  stack: number;\n  //checked: boolean;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 19;\n    this.tileY = 0;\n    this.stack = 1;\n    this.stackable = true;\n  }\n  onDrop = () => {\n    const coinList = []; //array to store coin objects\n    for (const item of this.level.items) {\n      if (item instanceof Coin) coinList.push(item);\n    }\n    for (const otherCoin of coinList) {\n      if (\n        this !== otherCoin &&\n        this.x === otherCoin.x &&\n        this.y === otherCoin.y\n      ) {\n        this.stack += otherCoin.stack;\n        this.level.items = this.level.items.filter((x) => x !== otherCoin);\n      }\n      if (this.stack === 2) this.tileX = 20;\n      else if (this.stack >= 3) this.tileX = 21;\n    }\n  };\n  get distanceToBottomRight() {\n    return Math.sqrt(\n      (this.x + this.w - window.innerWidth) ** 2 +\n        (this.y + this.h - window.innerHeight) ** 2,\n    );\n  }\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.pickupCoin();\n  };\n}\n","import { Item } from \"./item\";\nimport { Player, PlayerDirection } from \"../player\";\nimport { Direction, Game } from \"../game\";\nimport { Room, RoomType } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Usable } from \"./usable\";\nimport { DownLadder } from \"../tile/downLadder\";\nimport { Tile } from \"../tile/tile\";\nimport { SpawnFloor } from \"../tile/spawnfloor\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Entity } from \"../entity/entity\";\nimport { globalEventBus } from \"../eventBus\";\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\nimport { Enemy } from \"../entity/enemy/enemy\";\n\nexport class EntitySpawner extends Usable {\n  room: Room;\n  count: number;\n  player: Player;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.room = level;\n    this.count = 0;\n    this.tileX = 31;\n    this.tileY = 0;\n    this.setupEventListeners();\n    this.player = this.room.game.players[0];\n\n    this.stackable = false;\n  }\n  onUse = (player: Player): void => {};\n\n  spawnEntity = (entity: Entity): void => {\n    Entity.add(this.room, this.player.game, this.player.x, this.player.y);\n    console.log(\"Entity spawned\");\n  };\n\n  commandHandler = (command: string): void => {\n    const player = this.room.game.players[0];\n    command = command.toLowerCase();\n    if (!command.startsWith(\"/new\")) {\n      return;\n    }\n    switch (command.split(\" \")[1]) {\n      case \"bishop\":\n        this.spawnEntity(\n          new BishopEnemy(\n            this.room,\n            this.player.game,\n            this.player.x,\n            this.player.y,\n          ),\n        );\n        break;\n      default:\n        console.log(`Unknown command: ${command}`);\n        break;\n    }\n    console.log(`Command executed: ${command}`);\n  };\n\n  private setupEventListeners(): void {\n    //console.log(\"Setting up event listeners\");\n    globalEventBus.on(\"ChatMessage\", this.commandHandler.bind(this));\n    console.log(\"Event listeners set up\");\n  }\n\n  getDescription = (): string => {\n    return \"YOU SHOULD NOT HAVE THIS\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\n\nexport class Equippable extends Item {\n  wielder: Player;\n  equipped: boolean;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.equipped = false;\n  }\n\n  setWielder = (wielder: Player) => {\n    this.wielder = wielder;\n  };\n\n  coEquippable = (other: Equippable): boolean => {\n    return true;\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n  };\n\n  drawEquipped = (delta: number, x: number, y: number) => {\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n  };\n\n  degrade = (degradeAmount: number = 1) => {\n    this.durability -= degradeAmount;\n    if (this.durability <= 0) this.break();\n  };\n\n  break = () => {\n    this.durability = 0;\n    this.toggleEquip();\n    this.wielder.inventory.removeItem(this);\n    this.wielder = null;\n  };\n\n  onDrop = () => {};\n\n  dropFromInventory = () => {\n    this.wielder.inventory.weapon = null;\n    this.wielder = null;\n    this.equipped = false;\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room, RoomType } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Usable } from \"./usable\";\nimport { DownLadder } from \"../tile/downLadder\";\n\nexport class GodStone extends Usable {\n  room: Room;\n  count: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.room = level;\n    this.count = 0;\n    this.tileX = 31;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n  onUse = (player: Player): void => {\n    this.teleportToExit(player);\n  };\n  teleportToExit = (player: Player): void => {\n    let downLadders = this.room.game.rooms.filter(\n      (room) => room.type === RoomType.DOWNLADDER,\n    );\n    console.log(\"downLadders\", downLadders);\n    const room = downLadders[downLadders.length - 1];\n    room.game.changeLevelThroughDoor(player, room.doors[0], 1);\n    player.x = room.roomX + 2;\n    player.y = room.roomY + 3;\n  };\n  getDescription = (): string => {\n    return \"YOU SHOULD NOT HAVE THIS\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Gold extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 18;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD\\nA nugget of gold.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room\";\n\nexport class GoldenKey extends Equippable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD KEY\\nA heavy gold key.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GreenGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 11;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"PERIDOT\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\nimport { Usable } from \"./usable\";\n\nexport class Heart extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 8;\n    this.tileY = 0;\n    this.offsetY = -0.3;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n    player.inventory.removeItem(this);\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  getDescription = () => {\n    return \"HEALTH POTION\\nRestores 1 heart\";\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { Drawable } from \"../drawable\";\nimport { Utils } from \"../utils\";\n\n// Item class extends Drawable class and represents an item in the game\nexport class Item extends Drawable {\n  // Item properties\n  x: number; // x-coordinate of the item\n  y: number; // y-coordinate of the item\n  w: number; // width of the item\n  h: number; // height of the item\n  offsetY: number; // offset of the item on the y-axis\n  tileX: number; // x-coordinate of the tile where the item is located\n  tileY: number; // y-coordinate of the tile where the item is located\n  frame: number; // frame number for animation\n  level: Room; // level where the item is located\n  stackable: boolean; // whether the item is stackable or not\n  stackCount: number; // number of items in the stack\n  pickedUp: boolean; // whether the item has been picked up or not\n  alpha: number; // alpha value for transparency\n  scaleFactor: number; // scale factor for size adjustment\n  name: string;\n  startY: number;\n  randomOffset: number;\n  durability: number;\n  durabilityMax: number;\n\n  // Constructor for the Item class\n  constructor(level: Room, x: number, y: number) {\n    super();\n\n    // Initialize properties\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.w = 1;\n    this.h = 2;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.frame = 0;\n    this.stackable = false;\n    this.stackCount = 1;\n    this.pickedUp = false;\n    this.alpha = 1;\n    this.scaleFactor = 0.2;\n    this.offsetY = -0.25;\n    this.name = \"\";\n    this.startY = y;\n    this.randomOffset = Math.random();\n    this.durability = 25;\n    this.durabilityMax = 25;\n  }\n\n  // Empty tick function to be overridden by subclasses\n  tick = () => {};\n  // Empty tick function for inventory behavior to be overridden by subclasses\n  tickInInventory = () => {};\n\n  // Function to get description of the item, to be overridden by subclasses\n  getDescription = (): string => {\n    return \"\";\n  };\n\n  // Function to play sound when item is picked up\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.genericPickup();\n  };\n\n  // Empty function to be called when item is dropped, to be overridden by subclasses\n  onDrop = () => {};\n  // Function to be called when item is picked up\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.startY = player.y;\n      this.y = player.y;\n      this.x = player.x;\n      this.drawableY = this.y;\n      this.alpha = 1;\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) this.pickupSound();\n    }\n  };\n\n  dropFromInventory = () => {};\n\n  // Function to get the amount of shade at the item's location\n  shadeAmount = () => {\n    if (!this.x || !this.y) return 0;\n    else return this.level.softVis[this.x][this.y];\n  };\n\n  // Function to draw the item\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n\n  degrade = () => {\n    this.durability -= 1;\n  };\n\n  // Function to draw the top layer of the item\n  drawTopLayer = (delta: number) => {\n    if (this.pickedUp) {\n      this.y -= 0.125 * delta;\n      //this.x += (Math.sin(Date.now() / 50) * delta) / 10;\n      this.alpha -= 0.03 * delta;\n      if (Math.abs(this.y - this.startY) > 5) {\n        this.level.items = this.level.items.filter((x) => x !== this);\n      }\n\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\n\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x,\n        this.y - 1,\n        this.w,\n        this.h,\n      );\n\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n  // Function to draw the item's icon\n  drawIcon = (delta: number, x: number, y: number, opacity = 1) => {\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\n    this.drawDurability(x, y);\n\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n    Game.ctx.globalAlpha = 1;\n\n    let countText = this.stackCount <= 1 ? \"\" : \"\" + this.stackCount;\n    let width = Game.measureText(countText).width;\n    let countX = 16 - width;\n    let countY = 10;\n\n    Game.fillTextOutline(\n      countText,\n      x * GameConstants.TILESIZE + countX,\n      y * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\",\n    );\n  };\n\n  // Function to draw the item's durability bar with color transitioning from green to red\n  drawDurability = (x: number, y: number) => {\n    if (this.durability < this.durabilityMax) {\n      // Calculate durability ratio (1 = full, 0 = broken)\n      const durabilityRatio = this.durability / this.durabilityMax;\n\n      // Map durability ratio to hue (120 = green, 0 = red)\n      let color = Utils.hsvToHex(\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\n        1, // Full saturation\n        1, // Full value\n      );\n\n      const iconWidth = GameConstants.TILESIZE;\n      const barWidth = durabilityRatio * iconWidth;\n      const barHeight = 2; // 2 pixels tall\n\n      // Calculate the position of the durability bar\n      const barX = x * GameConstants.TILESIZE;\n      const barY = y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2;\n\n      // Set the fill style for the durability bar\n      Game.ctx.fillStyle = color;\n      // Set the interpolation mode to nearest neighbor\n      Game.ctx.imageSmoothingEnabled = false;\n\n      // Draw the durability bar\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\n\n      // Reset fill style to default\n      Game.ctx.fillStyle = \"white\";\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { Player } from \"../player\";\n\nexport class Key extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 1;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"KEY\\nAn iron key.\";\n  };\n\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) Sound.keyPickup();\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Torch } from \"./torch\";\nimport { Coal } from \"./coal\";\nimport { Light } from \"./light\";\n\nexport class Lantern extends Light {\n  fuelCap: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 0;\n    this.tileX = 29;\n    this.tileY = 0;\n    this.fuelCap = 250;\n    this.name = \"lantern\";\n  }\n  addFuel = (amount: number) => {\n    this.fuel += amount;\n  };\n\n  setRadius = () => {\n    this.wielder.sightRadius = Math.min(this.fuel / 4 + 3, 7);\n  };\n\n  toggleEquip = () => {\n    if (this.fuel > 0) {\n      this.equipped = !this.equipped;\n      if (this.isIgnited()) this.setRadius();\n      else this.resetRadius();\n    } else\n      this.wielder.game.pushMessage(\n        \"I'll need some fuel before I can use this\"\n      );\n  };\n\n  getDescription = () => {\n    const percentage = Math.round((this.fuel / this.fuelCap) * 100);\n    return `LANTERN - Fuel: ${percentage}%, Capacity: ${this.fuelCap / 50}`;\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Lantern } from \"./lantern\";\nimport { Torch } from \"./torch\";\nimport { PostProcessor } from \"../postProcess\";\nimport { GameConstants } from \"../gameConstants\";\nimport { LightSource } from \"../lightSource\";\nimport { Utils } from \"../utils\";\n\nexport class Light extends Equippable {\n  fuel: number;\n  fuelCap: number;\n  radius: number;\n  maxBrightness: number;\n  minBrightness: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n    this.fuel = 0;\n    this.fuelCap = 250;\n    this.maxBrightness = 2;\n    this.minBrightness = 0.3;\n    this.radius = 6;\n  }\n\n  updateLighting = () => {\n    this.wielder.game.rooms[this.wielder.levelID].updateLighting();\n  };\n\n  get fuelPercentage() {\n    return this.fuel / this.fuelCap;\n  }\n\n  isIgnited = () => {\n    if (this.fuel > 0 && this.equipped) {\n      return true;\n    }\n    return false;\n  };\n\n  setRadius = () => {\n    this.wielder.sightRadius =\n      this.wielder.defaultSightRadius + this.fuelPercentage * this.radius;\n  };\n\n  setBrightness = () => {\n    this.wielder.lightBrightness =\n      this.minBrightness + this.fuelPercentage * this.maxBrightness;\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.isIgnited()) {\n      this.setRadius();\n      this.wielder.lightEquipped = true;\n    } else {\n      this.resetRadius();\n      this.wielder.lightEquipped = false;\n    }\n    this.updateLighting();\n  };\n\n  coEquippable = (other: Light): boolean => {\n    return !(other instanceof Light);\n  };\n\n  resetRadius = () => {\n    this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  burn = () => {\n    if (this.fuel <= 0) {\n      this.wielder.game.pushMessage(`${this.name} depletes.`);\n      this.resetRadius();\n      this.wielder.lightEquipped = false;\n      this.wielder.inventory.removeItem(this);\n      this.updateLighting();\n    } else if (this.isIgnited()) {\n      this.fuel--;\n      this.setRadius();\n    }\n  };\n\n  drawDurability = (x: number, y: number) => {\n    if (this.fuel < this.fuelCap) {\n      // Calculate durability ratio (1 = full, 0 = broken)\n      const durabilityRatio = this.fuel / this.fuelCap;\n\n      // Map durability ratio to hue (120 = green, 0 = red)\n      let color = Utils.hsvToHex(\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\n        1, // Full saturation\n        1, // Full value\n      );\n\n      const iconWidth = GameConstants.TILESIZE;\n      const barWidth = durabilityRatio * iconWidth;\n      const barHeight = 2; // 2 pixels tall\n\n      // Calculate the position of the durability bar\n      const barX = x * GameConstants.TILESIZE;\n      const barY = y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2;\n\n      // Set the fill style for the durability bar\n      Game.ctx.fillStyle = color;\n      // Set the interpolation mode to nearest neighbor\n      Game.ctx.imageSmoothingEnabled = false;\n\n      // Draw the durability bar\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\n\n      // Reset fill style to default\n      Game.ctx.fillStyle = \"white\";\n    }\n  };\n\n  tickInInventory = () => {\n    this.burn();\n  };\n\n  getDescription = () => {\n    return `${this.name}: ${this.fuelPercentage * 100}%`;\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class RedGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GARNET\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Shrooms extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"SHROOMS\\nI don't think I should eat these...\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Stone extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 15;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"STONE\\nSome fragments of stone.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Lantern } from \"./lantern\";\nimport { Light } from \"./light\";\n\nexport class Torch extends Light {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n    this.name = \"torch\";\n    this.fuelCap = 500;\n    this.fuel = 500;\n    this.radius = 6;\n  }\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\n\nexport class Usable extends Item {\n  user: Player;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n  }\n  onUse = (player: Player) => {};\n}\n","import { Room } from \"./room\";\nimport { Game } from \"./game\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { Item } from \"./item/item\";\nimport { DoorType } from \"./tile/door\";\nimport { Tile } from \"./tile/tile\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { LevelParameterGenerator } from \"./levelParametersGenerator\";\n\nexport interface EnemyParameters {\n  enemyTables: Record<number, number[]>;\n  maxDepthTable: number;\n  minDepths: Record<number, number>;\n}\n\nexport const enemyMinimumDepth: Record<number, number> = {\n  1: 0, // CrabEnemy\n  2: 0, // FrogEnemy\n  3: 0, // ZombieEnemy\n  4: 0, // SkullEnemy\n  5: 1, // EnergyWizardEnemy\n  6: 2, // ChargeEnemy\n  7: 2, // RookEnemy\n  8: 1, // BishopEnemy\n  9: 1, // ArmoredzombieEnemy\n  10: 3, // BigSkullEnemy\n  11: 2, // QueenEnemy\n  12: 2, // KnightEnemy\n  13: 3, // BigKnightEnemy\n  14: 3, // FireWizardEnemy\n};\n/*\ninterface enemySpawnPoolData {\n  maxCount: number;\n  minCount: number;\n}\n\ninterface environmentData {\n  name: string;\n  preferredEnemies: Array<Enemy>;\n  preferredEntities: Array<Entity>;\n  entityBlacklist: Array<Entity>;\n  enemySpawnPoolData: enemySpawnPoolData;\n  roomData: roomData;\n}\n\ninterface entitySpawnData {\n  enemy: Enemy;\n  spawnChance: number;\n  maximumCount: number;\n}\n*/\n\nexport class Level {\n  depth: number;\n  levelArray: (Tile | null)[][];\n  width: number;\n  height: number;\n  game: Game;\n  rooms: Room[];\n  //environmentData: environmentData;\n  //enemySpawnPool: Array<entitySpawnData>;\n  enemyParameters: EnemyParameters;\n  constructor(game: Game, depth: number, width: number, height: number) {\n    this.game = game;\n    this.depth = depth;\n    this.width = width;\n    this.height = height;\n    this.rooms = game.rooms;\n    this.initializeLevelArray();\n    //this.loadRoomsIntoLevelArray();\n    console.log(`depth: ${this.depth}`);\n    this.enemyParameters = this.getEnemyParameters();\n  }\n\n  initializeLevelArray = () => {\n    // Create a 300x300 grid for depth 0\n    this.levelArray = [];\n    for (let x = 0; x < this.width; x++) {\n      this.levelArray[x] = [];\n      for (let y = 0; y < this.height; y++) {\n        this.levelArray[x][y] = null;\n      }\n    }\n  };\n\n  loadRoomsIntoLevelArray = () => {\n    for (let room of this.rooms) {\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\n          this.levelArray[x][y] = room.roomArray[x][y];\n        }\n      }\n    }\n  };\n\n  /**\n   * Generates enemy parameters based on the current depth.\n   * @param depth The current depth level.\n   * @returns An object conforming to the EnemyParameters interface.\n   */\n  getEnemyParameters(): EnemyParameters {\n    let currentDepth = this.depth;\n    // Generate the enemy pool based on current depth\n    const enemyPoolIds = this.generateEnemyPoolIds(currentDepth);\n\n    // Create enemyTables where each level maps to the enemyPoolIds\n    const enemyTables: Record<number, number[]> = {};\n\n    for (let tableDepth = 0; tableDepth <= currentDepth; tableDepth++) {\n      // Assign the same pool for all tables up to current depth\n      enemyTables[tableDepth] = enemyPoolIds;\n    }\n    const newEnemies = enemyTables[currentDepth].filter(\n      (id) => !this.game.encounteredEnemies.includes(id),\n    );\n    this.game.encounteredEnemies.push(...newEnemies);\n    console.log(\n      `encounteredEnemies for depth ${this.depth}: ${this.game.encounteredEnemies}`,\n    );\n\n    return {\n      enemyTables,\n      maxDepthTable: currentDepth,\n      minDepths: enemyMinimumDepth,\n    };\n  }\n\n  /**\n   * Generates the enemy pool IDs based on the current depth, introducing up to 2 new enemies each level.\n   * @param depth The current depth level.\n   * @returns An array of selected enemy IDs.\n   */\n  generateEnemyPoolIds(depth: number): number[] {\n    const availableEnemies = Object.entries(enemyMinimumDepth)\n      .filter(([enemyId, minDepth]) => depth >= minDepth)\n      .map(([enemyId]) => Number(enemyId));\n\n    // Determine which enemies are new (not yet encountered)\n    const newEnemies = availableEnemies.filter(\n      (id) => !this.game.encounteredEnemies.includes(id),\n    );\n\n    // Decide how many new enemies to introduce (1 or 2)\n    const newEnemiesToAddCount = Math.min(newEnemies.length, 2);\n    const newEnemiesToAdd = this.getRandomElements(\n      newEnemies,\n      newEnemiesToAddCount,\n    );\n\n    // Add the new enemies to encounteredEnemies\n    this.game.encounteredEnemies.push(...newEnemiesToAdd);\n\n    // Log the newly added enemies for debugging\n    console.log(`New enemies introduced at depth ${depth}: ${newEnemiesToAdd}`);\n\n    // Combine encountered enemies to form the enemy pool\n    const enemyPoolIds = this.game.encounteredEnemies.slice();\n\n    // Determine the number of enemy types for the current depth\n    const numberOfTypes = this.getNumberOfEnemyTypes(depth);\n\n    // Select the final set of enemy IDs for the pool\n    const selectedEnemyIds = this.getRandomElements(\n      enemyPoolIds,\n      numberOfTypes,\n    );\n\n    // Ensure uniqueness and limit based on available enemies\n    return Array.from(new Set(selectedEnemyIds)).slice(0, numberOfTypes);\n  }\n\n  /**\n   * Determines the number of enemy types allowed based on the current depth.\n   * @param depth The current depth level.\n   * @returns The number of enemy types.\n   */\n  getNumberOfEnemyTypes(depth: number): number {\n    // Example logic: depth 0 -> 2 types, depth 1 -> 4, depth 2 -> 6, etc.\n    let numberOfTypes = depth === 0 ? 2 : Math.ceil(Math.sqrt(depth + 1)) + 2;\n    console.log(`numberOfTypes: ${numberOfTypes}`);\n    return numberOfTypes;\n  }\n\n  /**\n   * Utility function to get random elements from an array.\n   * @param array The array to select from.\n   * @param count The number of elements to select.\n   * @returns An array of randomly selected elements.\n   */\n  getRandomElements<T>(array: T[], count: number): T[] {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled.slice(0, Math.min(count, shuffled.length));\n  }\n}\n","import { GameConstants } from \"./gameConstants\";\n\nexport class LevelConstants {\n  static SCREEN_W = 1;\n  static SCREEN_H = 1;\n\n  static readonly COMPUTER_TURN_DELAY = 300; // milliseconds\n  static readonly TURN_TIME = 3000; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\n  static readonly ROOM_COUNT = 50;\n\n  static readonly HEALTH_BAR_FADEIN = 100;\n  static readonly HEALTH_BAR_FADEOUT = 350;\n  static readonly HEALTH_BAR_TOTALTIME = 2000;\n\n  static readonly SHADED_TILE_CUTOFF = 1;\n  static SMOOTH_LIGHTING = false; //doesn't work\n  static readonly MIN_VISIBILITY = 0; // visibility level of places you've already seen\n  static readonly LIGHTING_ANGLE_STEP = 5; // how many degrees between each ray, previously 5\n  static readonly LIGHTING_MAX_DISTANCE = 7;\n  static readonly LIGHT_RESOLUTION = 0.1; //1 is default\n\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\n  static readonly AMBIENT_LIGHT_COLOR: [number, number, number] = [10, 10, 10];\n  static readonly TORCH_LIGHT_COLOR: [number, number, number] = [200, 25, 5];\n}\n","import { ChatMessage, Game } from \"./game\";\nimport { Room, RoomType } from \"./room\";\nimport { Door } from \"./tile/door\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Random } from \"./random\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport {\n  LevelParameterGenerator,\n  LevelParameters,\n} from \"./levelParametersGenerator\";\nimport { Level } from \"./level\";\nimport { GameConstants } from \"./gameConstants\";\n\n// animation delays in ms\nlet ANIMATION_PARTITION_SPLIT_DELAY = 0; // for partition splitting\nlet ANIMATION_PATHFINDING_DELAY = 0; // for pathfinding\nlet ANIMATION_LARGE_DELAY = 0; // in between larger steps\nif (document.cookie.includes(\"showgeneration=true\")) {\n  ANIMATION_PARTITION_SPLIT_DELAY = 10; // for partition splitting\n  ANIMATION_PATHFINDING_DELAY = 100; // for pathfinding\n  ANIMATION_LARGE_DELAY = 100; // in between larger steps\n}\n\nclass PartitionConnection {\n  x: number;\n  y: number;\n  other: Partition;\n\n  constructor(x: number, y: number, other: Partition) {\n    this.x = x;\n    this.y = y;\n    this.other = other;\n  }\n}\n\nclass Partition {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  type: RoomType;\n  fillStyle: string;\n  connections: Array<PartitionConnection>;\n  distance: number;\n  isTopOpen: boolean;\n  isRightOpen: boolean;\n  isBottomOpen: boolean;\n  isLeftOpen: boolean;\n\n  constructor(x: number, y: number, w: number, h: number, fillStyle: string) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.fillStyle = fillStyle;\n    this.type = RoomType.DUNGEON;\n    this.connections = [];\n    this.distance = 1000;\n    this.isTopOpen = true;\n    this.isRightOpen = true;\n    this.isBottomOpen = true;\n    this.isLeftOpen = true;\n  }\n\n  split = async (): Promise<Array<Partition>> => {\n    await new Promise((resolve) =>\n      setTimeout(\n        resolve,\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PARTITION_SPLIT_DELAY,\n      ),\n    );\n\n    // Reset open walls when a partition is split\n    this.isTopOpen = true;\n    this.isRightOpen = true;\n    this.isBottomOpen = true;\n    this.isLeftOpen = true;\n\n    // This function generates a random number around the center (0.5) within a certain width (0.6).\n    // It uses the Random.rand() function to generate a random number between 0 and 1, subtracts 0.5 to center it around 0,\n    // multiplies it by the width to scale it, and then adds the center (0.5) to shift it back to being between 0 and 1.\n    let rand_mid = () => {\n      let center = 0.5;\n      let width = 0.6;\n      return (Random.rand() - 0.5) * width + center;\n    };\n\n    let sizeRange = () => {\n      let sizes = [\n        { size: 1, probability: 0.2 },\n        { size: 3, probability: 0.6 },\n        { size: 10, probability: 0.2 },\n      ];\n      let rand = Random.rand();\n      let sum = 0;\n      for (let size of sizes) {\n        sum += size.probability;\n        if (rand <= sum) return size.size;\n      }\n      return sizes[sizes.length - 1].size;\n    };\n    let MIN_SIZE = 4;\n\n    if (this.w > this.h) {\n      //if the partitions width is greater than its height\n      let w1 = Math.floor(rand_mid() * this.w);\n      //choose a random tile within the width of the tiles\n      let w2 = this.w - w1 - 1;\n      //The remaining border - 1\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\n      //if either of these are less than the min size: return an array with this Partition\n      return [\n        new Partition(this.x, this.y, w1, this.h, this.fillStyle),\n        new Partition(this.x + w1 + 1, this.y, w2, this.h, this.fillStyle),\n      ];\n      //return an array with two new partitions\n    } else {\n      let h1 = Math.floor(rand_mid() * this.h);\n      let h2 = this.h - h1 - 1;\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\n      return [\n        new Partition(this.x, this.y, this.w, h1, this.fillStyle),\n        new Partition(this.x, this.y + h1 + 1, this.w, h2, this.fillStyle),\n      ];\n      //identical code for case where height > width\n    }\n  };\n\n  point_in = (x: number, y: number): boolean => {\n    //given the input argument x,y coordinates output boolean\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n\n    //only return true if both input x and input y are within the partitions x and y\n  };\n\n  point_next_to = (x: number, y: number): boolean => {\n    return (\n      (x >= this.x - 1 &&\n        x < this.x + this.w + 1 &&\n        y >= this.y &&\n        y < this.y + this.h) ||\n      (x >= this.x &&\n        x < this.x + this.w &&\n        y >= this.y - 1 &&\n        y < this.y + this.h + 1)\n    );\n    //return true if the input x and y are next to any point of the partition\n  };\n\n  area = (): number => {\n    return this.w * this.h;\n    //return the damn area\n  };\n\n  overlaps = (other: Partition): boolean => {\n    return (\n      other.x < this.x + this.w + 1 &&\n      other.x + other.w > this.x - 1 &&\n      other.y < this.y + this.h + 1 &&\n      other.y + other.h > this.y - 1\n    );\n    //takes another partition instance as argument\n    //returns true if any points of each overlap\n  };\n\n  setOpenWall = (connection: PartitionConnection) => {\n    if (\n      connection.y === this.y - 1 &&\n      connection.x >= this.x &&\n      connection.x < this.x + this.w\n    ) {\n      this.isTopOpen = false;\n    }\n    if (\n      connection.y === this.y + this.h &&\n      connection.x >= this.x &&\n      connection.x < this.x + this.w\n    ) {\n      this.isBottomOpen = false;\n    }\n    if (\n      connection.x === this.x + this.w &&\n      connection.y >= this.y &&\n      connection.y < this.y + this.h\n    ) {\n      this.isRightOpen = false;\n    }\n    if (\n      connection.x === this.x - 1 &&\n      connection.y >= this.y &&\n      connection.y < this.y + this.h\n    ) {\n      this.isLeftOpen = false;\n    }\n  };\n\n  get_branch_point = (): { x: number; y: number } => {\n    let points = [];\n    for (let x = this.x; x < this.x + this.w; x++) {\n      //count up from the partitions x to its width\n      points.push({ x: x, y: this.y - 1 /*one row above partition*/ });\n      points.push({ x: x, y: this.y + this.h /*one row below partition*/ });\n    } // pushes the points above and below the partition\n    for (let y = this.y; y < this.y + this.h; y++) {\n      points.push({ x: this.x - 1, y: y });\n      points.push({ x: this.x + this.w, y: y });\n    } //pushes points to left and right of the partition\n    points = points.filter(\n      (p) =>\n        !this.connections.some(\n          (c) => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1,\n        ),\n      //if the sum of the distance between the input x and y values and the partitions x and y values is > 1\n      //delete those from the points array\n    );\n    points.sort(() => 0.5 - Random.rand());\n    return points[0]; //return first object of x y points in array points\n  };\n\n  draw = (delta: number, levelCenterX: number, levelCenterY: number) => {\n    Game.ctx.fillStyle = this.fillStyle;\n    Game.ctx.fillRect(\n      Math.round(GameConstants.WIDTH / 2 + this.x - levelCenterX),\n      Math.round(GameConstants.HEIGHT / 2 + this.y - levelCenterY),\n      this.w,\n      this.h,\n    );\n\n    for (let connection of this.connections) {\n      Game.ctx.fillRect(\n        Math.round(GameConstants.WIDTH / 2 + connection.x - levelCenterX),\n        Math.round(GameConstants.HEIGHT / 2 + connection.y - levelCenterY),\n        1,\n        1,\n      );\n    }\n  };\n} //end of Partition class\n\nlet split_partitions = async (\n  partitions: Array<Partition>,\n  prob: number,\n): Promise<Array<Partition>> => {\n  for (let partition of partitions) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter((p) => p !== partition); // remove partition\n      partitions = partitions.concat(await partition.split()); // add splits\n    }\n  }\n  return partitions;\n  //takes input partitions array, randomly removes partitions and adds splits, output modified partitions array\n};\n\nlet split_partition = async (\n  partition: Partition,\n  prob: number,\n): Promise<Array<Partition>> => {\n  if (Random.rand() < prob) {\n    return await partition.split();\n  } else {\n    return [partition];\n  }\n  // Takes a single partition and probability\n  // Returns an array with either the split partitions or the original partition\n};\n\nlet reduce_dimensions = (partition: Partition, params: LevelParameters) => {\n  let reduceY = 0;\n  let reduceX = 0;\n  let translateX = 0;\n  let translateY = 0;\n  partition.connections.forEach((connection) => {\n    if (connection.y === partition.y) reduceY++, translateY++;\n    if (connection.y === partition.y + partition.h) reduceY++;\n    if (connection.x === partition.x) reduceX++, translateX++;\n    if (connection.x === partition.x + partition.w) reduceX++;\n  });\n\n  if (partition.w > 7) {\n    partition.w -= translateX;\n    partition.x += translateX;\n  }\n  if (partition.h > 7) {\n    partition.h -= translateY;\n    partition.y += translateY;\n  }\n};\n\nlet get_wall_rooms = (\n  partitions: Array<Partition>,\n  mapWidth: number,\n  mapHeight: number,\n): Array<Partition> => {\n  return partitions.filter((partition, index) => {\n    // Helper function to check if a specific path is clear\n    const isPathClear = (\n      direction: \"left\" | \"right\" | \"top\" | \"bottom\",\n    ): boolean => {\n      switch (direction) {\n        case \"left\":\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this y-coordinate and is to the left\n              return (\n                other.y <= y &&\n                y < other.y + other.h &&\n                other.x + other.w > 0 &&\n                other.x + other.w <= partition.x\n              );\n            });\n            if (!blocked) return true; // Found at least one y without a blocker\n          }\n          return false;\n\n        case \"right\":\n          for (let y = partition.y; y < partition.y + partition.h; y++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this y-coordinate and is to the right\n              return (\n                other.y <= y &&\n                y < other.y + other.h &&\n                other.x < mapWidth &&\n                other.x >= partition.x + partition.w\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        case \"top\":\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this x-coordinate and is above\n              return (\n                other.x <= x &&\n                x < other.x + other.w &&\n                other.y + other.h > 0 &&\n                other.y + other.h <= partition.y\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        case \"bottom\":\n          for (let x = partition.x; x < partition.x + partition.w; x++) {\n            let blocked = partitions.some((other) => {\n              if (other === partition) return false;\n              // Check if other partition overlaps this x-coordinate and is below\n              return (\n                other.x <= x &&\n                x < other.x + other.w &&\n                other.y < mapHeight &&\n                other.y >= partition.y + partition.h\n              );\n            });\n            if (!blocked) return true;\n          }\n          return false;\n\n        default:\n          return false;\n      }\n    };\n\n    const hasLeftPath = isPathClear(\"left\");\n    const hasRightPath = isPathClear(\"right\");\n    const hasTopPath = isPathClear(\"top\");\n    const hasBottomPath = isPathClear(\"bottom\");\n\n    // Count the number of open paths\n    const openPaths = [\n      hasLeftPath,\n      hasRightPath,\n      hasTopPath,\n      hasBottomPath,\n    ].filter(Boolean).length;\n\n    // Define wall rooms as those with exactly one open path\n    const isWallRoom = openPaths === 1;\n\n    return isWallRoom;\n  });\n};\n\nlet remove_wall_rooms = (\n  partitions: Array<Partition>,\n  w: number,\n  h: number,\n  prob: number = 1.0,\n): Array<Partition> => {\n  // Get all wall rooms\n  const wallRooms = get_wall_rooms(partitions, w, h);\n\n  // Remove wall rooms based on probability\n  for (const wallRoom of wallRooms) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter((p) => p !== wallRoom);\n    }\n  }\n\n  return partitions;\n};\n\nlet populate_grid = (\n  partitions: Array<Partition>,\n  grid: Array<Array<Partition | false>>,\n  w: number,\n  h: number,\n): Array<Array<Partition | false>> => {\n  for (let x = 0; x < w; x++) {\n    //loop through the horizontal tiles\n    grid[x] = []; //empty array at x index\n    for (let y = 0; y < h; y++) {\n      grid[x][y] = false;\n      for (const partition of partitions) {\n        if (partition.point_in(x, y)) grid[x][y] = partition;\n      }\n    }\n  }\n  return grid;\n  //input grid array, partitions array and width and height\n  //output grid array that indicates which cells are in which partition\n};\n\nlet generate_dungeon_candidate = async (\n  game: Game,\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  depth: number,\n  params: LevelParameters,\n) => {\n  const {\n    minRoomCount,\n    maxRoomCount,\n    maxRoomArea,\n    splitProbabilities,\n    wallRemoveProbability,\n  } = params;\n\n  partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\n  let grid = [];\n\n  // Use splitProbabilities for splitting\n  while (partialLevel.partitions.length < params.maxRoomCount) {\n    for (let i = 0; i < splitProbabilities.length; i++) {\n      partialLevel.partitions = await split_partitions(\n        partialLevel.partitions,\n        splitProbabilities[i],\n      );\n    }\n  }\n  for (let i = 0; i < 100; i++) {\n    partialLevel.partitions.forEach(async (partition) => {\n      let roomArea = 100000;\n      //Math.random() > 0.95 ? params.softMaxRoomArea : params.maxRoomArea;\n      if (partition.area() > roomArea) {\n        partialLevel.partitions = partialLevel.partitions.filter(\n          (p) => p !== partition,\n        );\n        partialLevel.partitions = partialLevel.partitions.concat(\n          await split_partition(partition, 0.5),\n        );\n      }\n    });\n  }\n\n  //visualize_partialLevel.partitions(partialLevel.partitions, map_w, map_h);\n  partialLevel.partitions = remove_wall_rooms(\n    partialLevel.partitions,\n    map_w,\n    map_h,\n    wallRemoveProbability,\n  );\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  // Remove wall rooms based on probability\n  /*\n  if (partitions.length > params.minRoomCount) {\n    for (let i = 0; i < 1; i++) {\n      partitions = remove_wall_rooms(partitions, map_w, map_h, wallRemoveProbability);\n    }\n  }\n  \n  /*\n    partitions = partitions.filter((p) => {\n      if (p.area() > maxRoomArea && partitions.length > params.minRoomCount) {\n        return false;\n      }\n      return true;\n    });\n   \n    while (partitions.length > maxRoomCount) {\n      partitions.pop();\n    }\n  */\n\n  // Check if we have any partitions before proceeding\n  if (partialLevel.partitions.length === 0) {\n    partialLevel.partitions = [];\n    return;\n  }\n\n  //populate the grid with partitions\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\n  // shade each partition's fillStyle based on its area, medium gray for smallest, white for largest\n  partialLevel.partitions.forEach((partition) => {\n    partition.fillStyle = `rgba(128, 128, 128, ${partition.area() / partialLevel.partitions[0].area()})`;\n  });\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  // Make sure we have at least one partition before assigning spawn\n  if (partialLevel.partitions.length === 0) {\n    console.log(\"No partitions generated after filtering.\");\n    partialLevel.partitions = [];\n    return;\n  }\n\n  let spawn = partialLevel.partitions[0];\n  if (!spawn) {\n    console.log(\"No spawn point found.\");\n    partialLevel.partitions = [];\n    return;\n  }\n\n  spawn.type = RoomType.START;\n  spawn.fillStyle = \"rgb(0, 255, 0)\";\n  if (partialLevel.partitions.length > 1) {\n    partialLevel.partitions[partialLevel.partitions.length - 1].type =\n      RoomType.BOSS;\n    partialLevel.partitions[partialLevel.partitions.length - 1].fillStyle =\n      \"red\";\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  let found_boss = false;\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && !found_boss) {\n    let room = frontier[0];\n    if (room !== spawn) room.fillStyle = \"green\";\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 1000;\n\n    while (doors_found < num_doors && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of partialLevel.partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n\n          // Set open walls based on connection\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\n\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          if (p.type === RoomType.BOSS) {\n            found_boss = true;\n            p.fillStyle = \"rgb(255, 0, 0)\";\n          }\n          break;\n        }\n      }\n      tries++;\n    }\n\n    await new Promise((resolve) =>\n      setTimeout(\n        resolve,\n        LevelGenerator.ANIMATION_CONSTANT * ANIMATION_PATHFINDING_DELAY,\n      ),\n    );\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partialLevel.partitions) {\n    if (partition.connections.length === 0)\n      partialLevel.partitions = partialLevel.partitions.filter(\n        (p) => p !== partition,\n      );\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partialLevel.partitions.length === 0) {\n    partialLevel.partitions = [];\n    return; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\n    let room = partialLevel.partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 10;\n\n    let not_already_connected = partialLevel.partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p),\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n\n          // Set open walls based on connection\n          room.setOpenWall(new PartitionConnection(point.x, point.y, p));\n          p.setOpenWall(new PartitionConnection(point.x, point.y, room));\n\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // add stair room\n  if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\n    partialLevel.partitions = [];\n    return;\n  }\n  let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\n  let found_stair = false;\n  const max_stair_tries = 100;\n  for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\n    let stair = new Partition(\n      Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand),\n      boss.y - 4,\n      3,\n      3,\n      \"white\",\n    );\n    stair.type = RoomType.DOWNLADDER;\n    stair.fillStyle = \"blue\";\n    if (!partialLevel.partitions.some((p) => p.overlaps(stair))) {\n      found_stair = true;\n      partialLevel.partitions.push(stair);\n      stair.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + 3, boss),\n      );\n      boss.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + 3, stair),\n      );\n\n      // Set open walls for stair and boss connection\n      stair.setOpenWall(\n        new PartitionConnection(stair.x + 1, stair.y + 3, boss),\n      );\n      boss.setOpenWall(\n        new PartitionConnection(stair.x + 1, stair.y + 3, stair),\n      );\n      break;\n    }\n  }\n  if (!found_stair) {\n    console.log(\"No stair found\");\n    partialLevel.partitions = [];\n    game.pushMessage(\"No stair found\");\n    return;\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  // add special rooms\n  let added_rope_hole = false;\n  for (const p of partialLevel.partitions) {\n    if (p.type === RoomType.DUNGEON) {\n      if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0.1) {\n        p.type = RoomType.TREASURE;\n      } else if (\n        !added_rope_hole &&\n        p.distance > 3 &&\n        p.area() <= 20 &&\n        Random.rand() < 0.5\n      ) {\n        p.type = RoomType.ROPEHOLE;\n        added_rope_hole = true;\n      }\n    }\n  }\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n};\n\nlet generate_dungeon = async (\n  game: Game,\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  depth: number,\n  params: LevelParameters,\n) => {\n  let passes_checks = false;\n\n  let tries = 0;\n\n  while (!passes_checks) {\n    await generate_dungeon_candidate(\n      game,\n      partialLevel,\n      map_w,\n      map_h,\n      depth,\n      params,\n    );\n\n    passes_checks = true;\n    if (partialLevel.partitions.length < params.minRoomCount) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Not enough rooms\");\n    } else if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Boss room unreachable\");\n    } else if (\n      partialLevel.partitions.find((p) => p.type === RoomType.BOSS).distance < 3\n    ) {\n      passes_checks = false;\n      if (document.cookie.includes(\"showgeneration=true\"))\n        game.pushMessage(\"Boss room too close to spawn\");\n    }\n\n    tries++;\n    //if (tries > 100) break;\n  }\n\n  game.pushMessage(\"Dungeon passed all checks\");\n\n  await new Promise((resolve) =>\n    setTimeout(\n      resolve,\n      10 * LevelGenerator.ANIMATION_CONSTANT * ANIMATION_LARGE_DELAY,\n    ),\n  );\n\n  console.log(\"finished generation\");\n  //partialLevel.partitions.forEach((partition) => reduce_dimensions(partition, params));\n};\n\nlet generate_cave_candidate = async (\n  partialLevel: PartialLevel,\n  map_w: number,\n  map_h: number,\n  num_rooms: number,\n) => {\n  partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\n  let grid = [];\n\n  for (let i = 0; i < 3; i++)\n    partialLevel.partitions = await split_partitions(\n      partialLevel.partitions,\n      0.75,\n    );\n  for (let i = 0; i < 3; i++)\n    partialLevel.partitions = await split_partitions(\n      partialLevel.partitions,\n      1,\n    );\n  for (let i = 0; i < 3; i++)\n    partialLevel.partitions = await split_partitions(\n      partialLevel.partitions,\n      0.5,\n    );\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h);\n\n  partialLevel.partitions.sort((a, b) => a.area() - b.area());\n\n  if (partialLevel.partitions.length === 0) {\n    throw new Error(\"No partitions generated.\"); // Throw an error if no partitions\n  }\n\n  let spawn = partialLevel.partitions[0];\n  spawn.type = RoomType.ROPECAVE;\n  for (let i = 1; i < partialLevel.partitions.length; i++)\n    partialLevel.partitions[i].type = RoomType.CAVE;\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  // connect rooms until we hit num_rooms\n  while (frontier.length > 0 && connected.length < num_rooms) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 1000;\n\n    while (\n      doors_found < num_doors &&\n      tries < max_tries &&\n      connected.length < num_rooms\n    ) {\n      let point = room.get_branch_point();\n      if (!point) {\n      }\n\n      for (const p of partialLevel.partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  partialLevel.partitions = partialLevel.partitions.filter(\n    (partition) => partition.connections.length > 0,\n  );\n  grid = populate_grid(partialLevel.partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partialLevel.partitions.length === 0) {\n    throw new Error(\"No valid rooms after filtering.\"); // Throw an error if no valid rooms\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partialLevel.partitions.length);\n    let room = partialLevel.partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partialLevel.partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p),\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      if (!point) {\n        break; // Skip if no valid branch point found\n      }\n\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  return partialLevel.partitions;\n};\n\nlet generate_cave = async (\n  partialLevel: PartialLevel,\n  mapWidth: number,\n  mapHeight: number,\n): Promise<Array<Partition>> => {\n  const numberOfRooms = 5; // don't set this too high or cave generation will time out\n\n  do {\n    await generate_cave_candidate(\n      partialLevel,\n      mapWidth,\n      mapHeight,\n      numberOfRooms,\n    );\n  } while (partialLevel.partitions.length < numberOfRooms);\n\n  return partialLevel.partitions;\n};\n\nlet generate_tutorial = (\n  height: number = 7,\n  width: number = 7,\n): Array<Partition> => {\n  let partitions: Array<Partition>;\n\n  partitions = [new Partition(0, 0, height, width, \"white\")];\n  partitions[0].type = RoomType.TUTORIAL;\n\n  return partitions;\n};\n\nlet visualize_partitions = (\n  partitions: Array<Partition>,\n  mapWidth: number,\n  mapHeight: number,\n) => {\n  // Create grid with padded spaces\n  const grid = Array.from(\n    { length: mapHeight },\n    () => Array(mapWidth).fill(\" . \"), // Pad dots with spaces\n  );\n\n  // Calculate the maximum number of digits needed\n  const maxIndex = partitions.length - 1;\n  const padLength = maxIndex.toString().length;\n\n  partitions.forEach((partition, index) => {\n    // Pad the index number with spaces to maintain consistent width\n    const paddedIndex = index.toString().padStart(padLength, \" \");\n\n    for (let x = partition.x; x < partition.x + partition.w; x++) {\n      for (let y = partition.y; y < partition.y + partition.h; y++) {\n        if (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\n          grid[y][x] = ` ${paddedIndex} `; // Pad numbers with spaces\n        }\n      }\n    }\n  });\n\n  console.log(\"Partition Layout:\");\n  console.log(\n    \"   \" + [...Array(mapWidth)].map((_, i) => i % 10).join(\"  \") + \" X\",\n  ); // Column headers\n  grid.forEach((row, index) => {\n    const paddedIndex = index.toString().padStart(2, \" \");\n    console.log(`${paddedIndex} ${row.join(\"\")}`);\n  });\n  console.log(\"Y\");\n};\n\nlet check_overlaps = (partitions: Array<Partition>): boolean => {\n  for (let i = 0; i < partitions.length; i++) {\n    for (let j = i + 1; j < partitions.length; j++) {\n      const a = partitions[i];\n      const b = partitions[j];\n      if (\n        a.x < b.x + b.w &&\n        a.x + a.w > b.x &&\n        a.y < b.y + b.h &&\n        a.y + a.h > b.y\n      ) {\n        console.log(\n          `Overlap detected between Partition ${i} and Partition ${j}`,\n        );\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport class PartialLevel {\n  partitions: Array<Partition>;\n}\n\nexport class LevelGenerator {\n  game: Game;\n  seed: number;\n  depthReached = 0;\n  currentFloorFirstLevelID = 0;\n  partialLevel: PartialLevel;\n  levelParams: LevelParameters;\n  static ANIMATION_CONSTANT = 1;\n\n  private setOpenWallsForPartitions = (\n    partitions: Array<Partition>,\n    mapWidth: number,\n    mapHeight: number,\n  ) => {\n    for (const partition of partitions) {\n      // Reset all walls to closed by default\n      partition.isTopOpen = false;\n      partition.isRightOpen = false;\n      partition.isBottomOpen = false;\n      partition.isLeftOpen = false;\n\n      // Check if partition touches map boundaries\n      if (partition.x === 0) {\n        partition.isLeftOpen = true;\n      }\n      if (partition.y === 0) {\n        partition.isTopOpen = true;\n      }\n      if (partition.x + partition.w === mapWidth) {\n        partition.isRightOpen = true;\n      }\n      if (partition.y + partition.h === mapHeight) {\n        partition.isBottomOpen = true;\n      }\n    }\n  };\n\n  createLevel = (depth: number) => {\n    let newLevel = new Level(this.game, depth, 100, 100);\n    this.game.levels.push(newLevel);\n    this.game.level = newLevel;\n  };\n\n  getRooms = (\n    partitions: Array<Partition>,\n    depth: number,\n    mapGroup: number,\n  ): Array<Room> => {\n    //this.setOpenWallsForPartitions(partitions, 35, 35); // Using standard map size\n\n    let rooms: Array<Room> = [];\n\n    for (let i = 0; i < partitions.length; i++) {\n      let partition = partitions[i];\n\n      // Pass open walls information to the Room constructor\n      let room = new Room(\n        this.game,\n        partition.x - 1,\n        partition.y - 1,\n        partition.w + 2,\n        partition.h + 2,\n        partition.type,\n        depth,\n        mapGroup,\n        this.game.levels[depth],\n        Random.rand,\n        partition.isTopOpen, // New parameter\n        partition.isRightOpen, // New parameter\n        partition.isBottomOpen, // New parameter\n        partition.isLeftOpen, // New parameter\n      );\n      rooms.push(room);\n    }\n\n    let doors_added: Array<Door> = [];\n\n    partitions.forEach((partition, index) => {\n      partition.connections.forEach((connection) => {\n        let door = rooms[index].addDoor(connection.x, connection.y);\n        let existingDoor = doors_added.find(\n          (existing) => existing.x === door.x && existing.y === door.y,\n        );\n        if (existingDoor) {\n          existingDoor.link(door);\n          door.link(existingDoor);\n        }\n        doors_added.push(door);\n      });\n    });\n\n    for (let room of rooms) {\n      room.populate(Random.rand);\n    }\n\n    return rooms;\n  };\n\n  setSeed = (seed: number) => {\n    this.seed = seed;\n  };\n\n  generate = async (\n    game: Game,\n    depth: number,\n    cave = false,\n    callback: (linkedLevel: Room) => void,\n  ) => {\n    this.levelParams = LevelParameterGenerator.getParameters(depth);\n    this.depthReached = depth;\n\n    // Set the random state based on the seed and depth\n    Random.setState(this.seed + depth);\n\n    this.game = game;\n\n    // Determine the map group\n    let mapGroup =\n      this.game.rooms.length > 0\n        ? this.game.rooms[this.game.rooms.length - 1].mapGroup + 1\n        : 0;\n\n    this.partialLevel = new PartialLevel();\n\n    // Generate partitions based on whether it's a cave or a dungeon\n    if (cave)\n      await generate_cave(this.partialLevel, 20, 20); // You might want to make these dynamic based on params\n    else\n      await generate_dungeon(\n        game,\n        this.partialLevel,\n        this.levelParams.mapWidth,\n        this.levelParams.mapHeight,\n        depth,\n        this.levelParams,\n      );\n\n    // Call this function before get_wall_rooms\n    if (check_overlaps(this.partialLevel.partitions)) {\n      console.warn(\"There are overlapping partitions.\");\n    }\n\n    // Get the levels based on the partitions\n    this.createLevel(depth);\n    let rooms = this.getRooms(this.partialLevel.partitions, depth, mapGroup);\n    console.log(`mapGroup: ${mapGroup}`);\n    console.log(`depth: ${depth}`);\n\n    // Update the current floor first level ID if it's not a cave\n    if (!cave) this.currentFloorFirstLevelID = this.game.rooms.length;\n\n    // Add the new levels to the game rooms\n    this.game.rooms = rooms;\n\n    // // Generate the rope hole if it exists\n    // for (let room of rooms) {\n    //   if (room.type === RoomType.ROPEHOLE) {\n    //     for (let x = room.roomX; x < room.roomX + room.width; x++) {\n    //       for (let y = room.roomY; y < room.roomY + room.height; y++) {\n    //         let tile = room.roomArray[x][y];\n    //         if (tile instanceof DownLadder && tile.isRope) {\n    //           tile.generate();\n\n    //           callback(cave\n    //             ? rooms.find((r) => r.type === RoomType.ROPECAVE)\n    //             : rooms.find((r) => r.type === RoomType.START));\n    //           return;\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n\n    // Return the start room or the rope cave room\n    callback(\n      cave\n        ? rooms.find((r) => r.type === RoomType.ROPECAVE)\n        : rooms.find((r) => r.type === RoomType.START),\n    );\n  };\n\n  generateFirstNFloors = async (game, numFloors) => {\n    await this.generate(game, 0, false, () => {});\n    for (let i = 0; i < numFloors; i++) {\n      let foundRoom = this.game.rooms\n        .slice()\n        .reverse()\n        .find((room) => room.type === RoomType.DOWNLADDER);\n\n      if (foundRoom) {\n        for (\n          let x = foundRoom.roomX;\n          x < foundRoom.roomX + foundRoom.width;\n          x++\n        ) {\n          for (\n            let y = foundRoom.roomY;\n            y < foundRoom.roomY + foundRoom.height;\n            y++\n          ) {\n            let tile = foundRoom.roomArray[x][y];\n            if (tile instanceof DownLadder) {\n              tile.generate();\n              break;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (document.cookie.includes(\"showgeneration=true\")) {\n      if (this.partialLevel.partitions) {\n        this.partialLevel.partitions.forEach((partition) => {\n          partition.draw(\n            delta,\n            this.levelParams.mapWidth / 2,\n            this.levelParams.mapHeight / 2,\n          );\n        });\n      }\n    } else {\n      Game.ctx.fillStyle = \"rgb(255, 255, 255)\";\n      let dimensions = Game.measureText(\"generating level...\");\n      Game.fillText(\n        \"generating level...\",\n        GameConstants.WIDTH / 2 - dimensions.width / 2,\n        GameConstants.HEIGHT / 2 - dimensions.height / 2,\n      );\n    }\n  };\n}\n","import { CrabEnemy } from \"./entity/enemy/crabEnemy\";\nimport { FrogEnemy } from \"./entity/enemy/frogEnemy\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\nimport { ChargeEnemy } from \"./entity/enemy/chargeEnemy\";\nimport { Spawner } from \"./entity/enemy/spawner\";\nimport { BishopEnemy } from \"./entity/enemy/bishopEnemy\";\nimport { ArmoredzombieEnemy } from \"./entity/enemy/armoredzombieEnemy\";\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\nimport { QueenEnemy } from \"./entity/enemy/queenEnemy\";\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\nimport { BigKnightEnemy } from \"./entity/enemy/bigKnightEnemy\";\nimport { FireWizardEnemy } from \"./entity/enemy/fireWizard\";\nimport { RookEnemy } from \"./entity/enemy/rookEnemy\";\n\nexport const enemyClasses = {\n  1: CrabEnemy,\n  2: FrogEnemy,\n  3: ZombieEnemy,\n  4: SkullEnemy,\n  5: EnergyWizardEnemy,\n  6: ChargeEnemy,\n  7: RookEnemy,\n  8: BishopEnemy,\n  9: ArmoredzombieEnemy,\n  10: BigSkullEnemy,\n  11: QueenEnemy,\n  12: KnightEnemy,\n  13: BigKnightEnemy,\n  14: FireWizardEnemy,\n};\n\nexport interface LevelParameters {\n  minRoomCount: number;\n  maxRoomCount: number;\n  maxRoomArea: number;\n  mapWidth: number;\n  mapHeight: number;\n  splitProbabilities: number[];\n  wallRemoveProbability: number;\n  numLoopDoorsRange: [number, number];\n  numberOfRooms: number;\n  softMaxRoomArea: number;\n}\n\nexport class LevelParameterGenerator {\n  /**\n   * Generates level parameters based on the current depth.\n   * @param depth The current depth level.\n   * @returns An object conforming to the LevelParameters interface.\n   */\n  static getParameters(depth: number): LevelParameters {\n    return {\n      minRoomCount: depth > 0 ? 4 : 5,\n      maxRoomCount: depth > 0 ? 12 : 8,\n      maxRoomArea: depth > 0 ? 120 + 10 * depth : 40,\n      mapWidth: 25 + 5 * depth,\n      mapHeight: 25 + 5 * depth,\n      splitProbabilities: [0.75, 1.0, 0.25], // Example probabilities\n      wallRemoveProbability: depth > 0 ? 0.5 : 1,\n      numLoopDoorsRange: [4, 8], // Random between 4 and 8\n      numberOfRooms: depth > 0 ? 5 : 3,\n      softMaxRoomArea: 0.5 * (120 + 10 * depth),\n    };\n  }\n}\n","import { Room } from \"./room\";\n\nexport class LightSource {\n  x: number;\n  y: number;\n  r: number;\n  c: [number, number, number];\n  b: number = 1;\n\n  oldX: number;\n  oldY: number;\n  oldR: number;\n  oldC: [number, number, number];\n  oldB: number;\n\n  hasChanged: boolean;\n  constructor(\n    x: number,\n    y: number,\n    r: number,\n    c: [number, number, number] = [180, 60, 5],\n    b: number = 1,\n  ) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    this.c = c;\n    this.b = b;\n    this.oldX = x;\n    this.oldY = y;\n    this.oldR = r;\n    this.oldC = c;\n    this.oldB = b;\n    this.hasChanged = true;\n  }\n\n  updatePosition = (x: number, y: number) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  shouldUpdate = () => {\n    this.hasChanged =\n      this.x !== this.oldX ||\n      this.y !== this.oldY ||\n      this.r !== this.oldR ||\n      this.c !== this.oldC ||\n      this.b !== this.oldB ||\n      this.hasChanged;\n    return this.hasChanged;\n  };\n}\n","import { LightSource } from \"./lightSource\";\nimport { Room } from \"./room\";\n\nexport class Lighting {\n  static momentaryLight = (\n    room: Room,\n    x: number,\n    y: number,\n    radius: number,\n    color: [number, number, number],\n    duration: number,\n    brightness: number,\n    delay: number,\n  ) => {\n    const lightSource = Lighting.newLightSource(\n      x,\n      y,\n      color,\n      radius,\n      brightness,\n    );\n    setTimeout(() => {\n      room.updateLightSources(lightSource);\n\n      setTimeout(() => {\n        room.updateLightSources(lightSource, true);\n      }, duration);\n    }, delay);\n  };\n\n  static newLightSource = (\n    x: number,\n    y: number,\n    color: [number, number, number],\n    radius: number,\n    brightness: number,\n  ) => {\n    return new LightSource(x, y, radius, color, brightness);\n  };\n\n  static addLightSource = (room: Room, lightSource: LightSource) => {\n    room.lightSources.push(lightSource);\n  };\n\n  static removeLightSource = (room: Room, lightSource: LightSource) => {\n    room.lightSources = room.lightSources.filter((ls) => ls !== lightSource);\n  };\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Room, RoomType } from \"./room\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { Wall } from \"./tile/wall\";\nimport { Player } from \"./player\";\nimport { LevelConstants } from \"./levelConstants\";\n\nexport class Map {\n  game: Game;\n  mapData: any[] = [];\n  oldMapData: any[] = [];\n  depth: number;\n  scale: number;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.scale = 1;\n    //this.depth = player.game.level.depth\n  }\n\n  saveMapData = () => {\n    this.clearMap();\n    for (const level of this.game.rooms) {\n      if (\n        this.game.room.mapGroup === level.mapGroup &&\n        (level.entered === true || GameConstants.DEVELOPER_MODE)\n      ) {\n        this.mapData.push({\n          room: level,\n          walls: level.innerWalls,\n          doors: level.doors,\n          entities: level.entities,\n          items: level.items,\n          players: this.game.players,\n        });\n      }\n    }\n  };\n\n  clearMap = () => {\n    this.mapData = [];\n  };\n\n  saveOldMap = () => {\n    this.oldMapData = [...this.mapData];\n  };\n\n  renderMap = (delta: number) => {\n    this.setInitialCanvasSettings(1);\n    this.translateCanvas(0);\n    for (const data of this.mapData) {\n      this.drawRoom(data, delta);\n    }\n    /*for (const data of this.oldMapData) {\n      this.drawRoom(data);\n    }*/\n    this.resetCanvasTransform();\n  };\n\n  draw = (delta: number) => {\n    this.renderMap(delta);\n  };\n\n  setInitialCanvasSettings = (alpha: number) => {\n    Game.ctx.globalAlpha = alpha;\n    Game.ctx.globalCompositeOperation = \"source-over\";\n  };\n\n  translateCanvas = (offset: number) => {\n    Game.ctx.translate(\n      0.75 * GameConstants.WIDTH -\n        this.game.room.roomX -\n        Math.floor(0.5 * this.game.room.width) +\n        20 -\n        15 * this.scale,\n      0.25 * GameConstants.HEIGHT -\n        this.game.room.roomY -\n        Math.floor(0.5 * this.game.room.height) -\n        1 * this.scale -\n        offset,\n    );\n  };\n\n  drawRoom = (data, delta: number) => {\n    this.drawRoomOutline(data.room);\n    this.drawRoomWalls(data.walls);\n    this.drawRoomDoors(data.doors);\n    this.drawRoomEntities(data.entities);\n    this.drawRoomItems(data.items);\n    this.drawRoomPlayers(data.players, delta);\n  };\n\n  drawRoomOutline = (level) => {\n    const s = this.scale;\n    Game.ctx.fillStyle = \"#5A5A5A\";\n    Game.ctx.fillRect(\n      level.roomX * s + 0,\n      level.roomY * s + 0,\n      level.width * s - 0,\n      level.height * s - 0,\n    );\n    if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\n    if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(\n      level.roomX * s + 1,\n      level.roomY * s + 1,\n      level.width * s - 2,\n      level.height * s - 2,\n    );\n  };\n\n  drawRoomWalls = (walls) => {\n    const s = this.scale;\n    for (const wall of walls) {\n      Game.ctx.fillStyle = \"#404040\";\n      Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  drawRoomDoors = (doors) => {\n    const s = this.scale;\n    for (const door of doors) {\n      if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\n      if (door.opened === true)\n        (Game.ctx.fillStyle = \"black\"),\n          Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  drawRoomPlayers = (players, delta: number) => {\n    const s = this.scale;\n    for (const i in players) {\n      Game.ctx.fillStyle = \"white\";\n      if (\n        this.game.rooms[players[i].levelID].mapGroup === this.game.room.mapGroup\n      ) {\n        Game.ctx.fillRect(players[i].x * s, players[i].y * s, 1 * s, 1 * s);\n      }\n    }\n  };\n\n  drawRoomEntities = (entities) => {\n    const s = this.scale;\n    for (const enemy of entities) {\n      this.setEntityColor(enemy);\n      Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  setEntityColor = (enemy) => {\n    if (enemy.type === EntityType.ENEMY) {\n      Game.ctx.fillStyle = \"yellow\";\n    }\n    if (enemy.type === EntityType.PROP) {\n      Game.ctx.fillStyle = \"#847e87\";\n    }\n    if (enemy.type === EntityType.RESOURCE) {\n      Game.ctx.fillStyle = \"#5a595b\";\n    }\n    if (enemy.type === EntityType.FRIENDLY) {\n      Game.ctx.fillStyle = \"cyan\";\n    }\n  };\n\n  drawRoomItems = (items) => {\n    const s = this.scale;\n    for (const item of items) {\n      let x = item.x;\n      let y = item.y;\n      Game.ctx.fillStyle = \"#ac3232\";\n      if (!item.pickedUp) {\n        Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\n      }\n    }\n  };\n\n  resetCanvasTransform = () => {\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  };\n}\n","import { Game } from \"./game\";\nimport { Input } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\n\nexport class MouseCursor {\n  private static instance: MouseCursor;\n  private cursorSize: number = 5; // Size of the cursor rectangle\n\n  private constructor() {}\n\n  public static getInstance(): MouseCursor {\n    if (!MouseCursor.instance) {\n      MouseCursor.instance = new MouseCursor();\n    }\n    return MouseCursor.instance;\n  }\n\n  public draw(): void {\n    /*\n    Game.ctx.save();\n    Game.ctx.fillStyle = \"rgba(255, 0, 0, 0.5)\"; // Semi-transparent red\n    Game.ctx.fillRect(\n      Input.mouseX - this.cursorSize / 2,\n      Input.mouseY - this.cursorSize / 2,\n      this.cursorSize,\n      this.cursorSize\n    );\n    Game.ctx.restore();\n    */\n  }\n\n  public getPosition(): { x: number; y: number } {\n    return { x: Input.mouseX, y: Input.mouseY };\n  }\n\n  public getTilePosition(): { x: number; y: number } {\n    return {\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\n    };\n  }\n\n  public getInventoryPosition(): { x: number; y: number } {\n    return {\n      x: Input.mouseX,\n      y: Input.mouseY,\n    };\n  }\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class DeathParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 1.5;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    let yOffset = Math.max(0, ((this.frame - 3) * 3) / GameConstants.TILESIZE);\n    let f = Math.round(this.frame);\n    if (f == 2 || f == 4 || f == 6)\n      Game.drawMob(2, 0, 1, 2, this.x, this.y - yOffset, 1, 2);\n    else\n      Game.drawFX(\n        Math.round(this.frame),\n        4,\n        1,\n        2,\n        this.x,\n        this.y - yOffset,\n        1,\n        2,\n      );\n\n    this.frame += 0.3 * delta;\n    if (this.frame > 10) this.dead = true;\n  };\n}\n","import { Room } from \"../room\";\nimport { Particle } from \"./particle\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GenericParticle extends Particle {\n  level: Room;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n\n  static shotgun = (\n    level: Room,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    color: string,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          color,\n          0,\n          10000000,\n          tx + Math.random() - 0.5,\n          ty + Math.random() - 0.5,\n          0,\n        ),\n      );\n    }\n  };\n\n  static spawnCluster = (\n    level: Room,\n    cx: number,\n    cy: number,\n    color: string,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025,\n          cy + Math.random() * 0.05 - 0.025,\n          Math.random() * 0.5,\n          0.0625 * (i + 8),\n          0.025 * (Math.random() * 2 - 1),\n          0.025 * (Math.random() * 2 - 1),\n          0.2 * (Math.random() - 1),\n          color,\n          0,\n        ),\n      );\n    }\n  };\n\n  constructor(\n    level: Room,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    color: string,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number,\n  ) {\n    super();\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.color = color;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 1000000;\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\n    let halfS = 0.5 * scaledS;\n    let oldFillStyle = Game.ctx.fillStyle;\n    Game.ctx.fillStyle = this.color;\n    Game.ctx.imageSmoothingEnabled = false;\n\n    Game.ctx.beginPath();\n    Game.ctx.arc(\n      Math.round(this.x * scale),\n      Math.round((this.y - this.z) * scale),\n      Math.round(halfS * scale),\n      0,\n      2 * Math.PI,\n      false,\n    );\n    Game.ctx.fill();\n\n    Game.ctx.fillStyle = oldFillStyle;\n  };\n\n  draw = (delta: number) => {\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\n    else this.x += this.dx;\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\n    else this.y += this.dy;\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\n    else this.z += this.dz;\n\n    this.dx *= 0.97;\n    this.dy *= 0.97;\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    // apply gravity\n    this.dz -= 0.01;\n\n    if (this.alpha < 0.2) this.alpha -= 0.007;\n    else this.alpha -= 0.02;\n    if (this.alpha <= 0.1) this.dead = true;\n\n    this.expirationTimer--;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Room } from \"../room\";\nimport { Particle } from \"./particle\";\nimport { Direction, Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Random } from \"../random\";\nimport { Player, PlayerDirection } from \"../player\";\nimport { Entity } from \"../entity/entity\";\n\nexport class ImageParticle extends Particle {\n  room: Room;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n  tileX: number;\n  tileY: number;\n  size: number;\n  static shotgun = (\n    room: Room,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    tileX: number,\n    tileY: number,\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      room.particles.push(\n        new ImageParticle(\n          room,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          tileX,\n          tileY,\n          0, //size\n        ),\n      );\n    }\n  };\n\n  static spawnCluster = (\n    level: Room,\n    cx: number,\n    cy: number,\n    tileX: number,\n    tileY: number,\n  ) => {\n    for (let i = Math.floor(Math.random() * 3); i < 5; i++) {\n      level.particles.push(\n        new ImageParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025, // x\n          cy + Math.random() * 0.05 - 0.025, // y\n          Math.random() * 0.5, // z\n          0.0625 * (i + 8), // s\n          0.025 * (Math.random() * 2 - 1), //dx\n          0.025 * (Math.random() * 2 - 1), //dy\n          0.2 * (Math.random() - 1), //dz\n          tileX,\n          tileY,\n          [2, 1, 0, 1, 2, 2, 2][i], //size\n        ),\n      );\n    }\n  };\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    tileX: number,\n    tileY: number,\n    size: number,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number,\n  ) {\n    super();\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.z = z; // Use provided height\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.tileX = tileX;\n    this.tileY = tileY;\n    this.size = size;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 100; // Increased life duration\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let yOffset = this.z * scale;\n    let frame = this.s > 0.5 ? 1 : 0; // Placeholder frames for large and small particles\n    Game.ctx.imageSmoothingEnabled = false;\n\n    let adjustedTileX = this.tileX + this.size;\n    Game.drawFX(\n      adjustedTileX,\n      this.tileY,\n      1,\n      1,\n      this.x - this.alpha / 2,\n      this.y - this.z - this.alpha / 2,\n      1,\n      1,\n      this.shadeColor(),\n      this.shadeAmount(),\n    );\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.imageSmoothingEnabled = false;\n\n    if (this.targetX) this.x += 0.2 * (this.targetX - this.x) * delta;\n    else this.x += this.dx * delta;\n    if (this.targetY) this.y += 0.2 * (this.targetY - this.y) * delta;\n    else this.y += this.dy * delta;\n    if (this.targetZ) this.z += 0.2 * (this.targetZ - this.z) * delta;\n    else this.z += this.dz * delta;\n\n    this.dx *= Math.pow(0.97, delta);\n    this.dy *= Math.pow(0.97, delta);\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    this.dz -= 0.01 * delta;\n\n    this.expirationTimer -= delta;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Drawable } from \"../drawable\";\nimport { Entity } from \"../entity/entity\";\nimport { Player } from \"../player\";\nimport { Room } from \"../room\";\n\nexport class Particle extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  room: Room;\n  drawTopLayer = (delta) => {};\n  shadeAmount = () => {\n    const x = Math.floor(this.x);\n    const y = Math.floor(this.y);\n\n    if (!this.room.softVis[x]) return 0.9;\n\n    const shade = this.room.softVis[x][y];\n    return shade ?? 0.9;\n  };\n  shadeColor = () => {\n    return this.room.shadeColor;\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class SlashParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 0.25;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    Game.drawFX(Math.round(this.frame), 13, 1, 1, this.x, this.y, 1, 1);\n\n    this.frame += 0.5 * delta;\n    if (this.frame > 9) this.dead = true;\n  };\n}\n","import { Particle } from \"./particle\";\nimport { Game } from \"../game\";\n\nexport class WizardTeleportParticle extends Particle {\n  x: number;\n  y: number;\n  z: number;\n  dz: number;\n  frame: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.frame = 0;\n    this.z = 0;\n    this.dz = 0.1;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\n    this.z += this.dz * delta;\n    this.dz *= 0.9;\n    this.frame += 0.3 * delta;\n    if (this.frame > 6) this.dead = true;\n  };\n}\n","import { Input, InputEnum } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\nimport { ChatMessage, Direction, Game, LevelState } from \"./game\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { Inventory } from \"./inventory\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Map } from \"./map\";\nimport { SlashParticle } from \"./particle/slashParticle\";\nimport { HealthBar } from \"./healthbar\";\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\nimport { Drawable } from \"./drawable\";\nimport { Random } from \"./random\";\nimport { GenericParticle } from \"./particle/genericParticle\";\nimport { ActionState, ActionTab } from \"./actionTab\";\nimport { HitWarning } from \"./hitWarning\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { Item } from \"./item/item\";\nimport { PostProcessor } from \"./postProcess\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Room } from \"./room\";\nimport { ImageParticle } from \"./particle/imageParticle\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { MouseCursor } from \"./mouseCursor\";\nimport { Light } from \"./item/light\";\nimport { LightSource } from \"./lightSource\";\nimport { statsTracker } from \"./stats\";\nimport { BeamEffect } from \"./beamEffect\";\nimport { Spellbook } from \"./weapon/spellbook\";\n\nexport enum PlayerDirection {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n}\n\nenum DrawDirection {\n  X,\n  Y,\n}\n\nexport class Player extends Drawable {\n  id: string;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  drawX: number;\n  drawY: number;\n  hitX: number;\n  hitY: number;\n  frame: number;\n  direction: Direction;\n  game: Game;\n  levelID: number; // which room we're in (level[levelID])\n  flashing: boolean;\n  flashingFrame: number;\n  health: number;\n  maxHealth: number;\n  healthBar: HealthBar;\n  dead: boolean;\n  lastTickHealth: number;\n  inventory: Inventory;\n  sightRadius: number;\n  defaultSightRadius: number;\n  static minSightRadius: number = 2; //hard minimum sight radius that ignores depth\n  guiHeartFrame: number;\n  map: Map;\n  openVendingMachine: VendingMachine;\n  isLocalPlayer: boolean;\n  mapToggled: boolean;\n  //actionTab: ActionTab;\n  lastHitBy: string;\n  turnCount: number;\n  triedMove: boolean;\n  tutorialRoom: boolean;\n  private lastMoveTime: number;\n  private moveCooldown: number;\n  moveRange: number;\n  tileCursor: { x: number; y: number };\n  private jumpY: number;\n  lightEquipped: boolean;\n  lightSource: LightSource;\n  hurtAlpha: number;\n  hurting: boolean;\n  lightBrightness: number;\n  sineAngle: number;\n  drawMoveSpeed: number;\n  jumpHeight: number;\n  moveDistance: number;\n  moveQueue: { x: number; y: number; direction: Direction }[];\n  lastX: number;\n  lastY: number;\n  motionSpeed: number;\n  slowMotionEnabled: boolean;\n  justMoved: DrawDirection;\n  slowMotionTickDuration: number;\n  private animationFrameId: number | null = null;\n  private isProcessingQueue: boolean = false;\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\n    super();\n\n    this.game = game;\n\n    this.levelID = 0;\n\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.jumpY = 0;\n    this.jumpHeight = 0.3;\n    this.frame = 0;\n    this.moveDistance = 0;\n    this.direction = Direction.UP;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.isLocalPlayer = isLocalPlayer;\n    if (isLocalPlayer) {\n      Input.leftSwipeListener = () => this.inputHandler(InputEnum.LEFT);\n      Input.rightSwipeListener = () => this.inputHandler(InputEnum.RIGHT);\n      Input.upSwipeListener = () => this.inputHandler(InputEnum.UP);\n      Input.downSwipeListener = () => this.inputHandler(InputEnum.DOWN);\n      Input.commaListener = () => this.inputHandler(InputEnum.COMMA);\n      Input.periodListener = () => this.inputHandler(InputEnum.PERIOD);\n      Input.tapListener = () => {\n        /*\n        if (this.inventory.isOpen) {\n          if (this.inventory.pointInside(Input.mouseX, Input.mouseY)) {\n            this.inputHandler(InputEnum.SPACE);\n          } else {\n            this.inputHandler(InputEnum.I);\n          }\n        } else this.inputHandler(InputEnum.I);\n         */\n      };\n      Input.mouseMoveListener = () => this.inputHandler(InputEnum.MOUSE_MOVE);\n      Input.mouseLeftClickListeners.push(() =>\n        this.inputHandler(InputEnum.LEFT_CLICK),\n      );\n      Input.mouseRightClickListeners.push(() =>\n        this.inputHandler(InputEnum.RIGHT_CLICK),\n      );\n      Input.numKeyListener = (num: number) =>\n        this.inputHandler(InputEnum.NUMBER_1 + num - 1);\n    }\n    this.mapToggled = true;\n    this.health = 3;\n    this.maxHealth = 3;\n    this.healthBar = new HealthBar();\n    this.dead = false;\n    this.flashing = false;\n    this.flashingFrame = 0;\n    this.lastTickHealth = this.health;\n    this.guiHeartFrame = 0;\n\n    this.inventory = new Inventory(game, this);\n    this.defaultSightRadius = 3;\n    this.sightRadius = this.defaultSightRadius;\n    this.map = new Map(this.game, this);\n    //this.actionTab = new ActionTab(this.inventory, this.game);\n    this.turnCount = 0;\n    this.triedMove = false;\n    this.tutorialRoom = false;\n    this.lastMoveTime = 0;\n    this.moveCooldown = 100; // Cooldown in milliseconds (adjust as needed)\n    this.tileCursor = { x: 0, y: 0 };\n    this.moveRange = 1;\n    this.lightEquipped = false;\n    this.hurting = false;\n    this.hurtAlpha = 0.5;\n    this.lightBrightness = 0.3;\n    this.sineAngle = Math.PI / 2;\n    this.drawMoveSpeed = 0.3; // greater than 1 less than 2\n    this.moveQueue = [];\n    this.isProcessingQueue = false;\n\n    this.hitX = 0;\n    this.hitY = 0;\n    this.motionSpeed = 1;\n    this.slowMotionEnabled = false;\n    this.slowMotionTickDuration = 0;\n    this.justMoved = DrawDirection.Y;\n  }\n\n  get angle(): number {\n    if (this.direction !== undefined) {\n      switch (this.direction) {\n        case Direction.UP:\n          return 270;\n        case Direction.RIGHT:\n          return 0;\n        case Direction.DOWN:\n          return 90;\n        case Direction.LEFT:\n          return 180;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  inputHandler = (input: InputEnum) => {\n    if (!this.game.started && input !== InputEnum.MOUSE_MOVE) {\n      this.game.startedFadeOut = true;\n      return;\n    }\n    switch (input) {\n      case InputEnum.I:\n        this.iListener();\n        break;\n      case InputEnum.Q:\n        this.qListener();\n        break;\n      case InputEnum.LEFT:\n        if (!this.ignoreDirectionInput()) this.leftListener(false);\n        break;\n      case InputEnum.RIGHT:\n        if (!this.ignoreDirectionInput()) this.rightListener(false);\n        break;\n      case InputEnum.UP:\n        if (!this.ignoreDirectionInput()) this.upListener(false);\n        break;\n      case InputEnum.DOWN:\n        if (!this.ignoreDirectionInput()) this.downListener(false);\n        break;\n      case InputEnum.SPACE:\n        this.spaceListener();\n        break;\n      case InputEnum.COMMA:\n        this.commaListener();\n        break;\n      case InputEnum.PERIOD:\n        this.periodListener();\n        break;\n      case InputEnum.LEFT_CLICK:\n        this.mouseLeftClick();\n        break;\n      case InputEnum.RIGHT_CLICK:\n        this.mouseRightClick();\n        break;\n      case InputEnum.MOUSE_MOVE:\n        this.mouseMove();\n        break;\n      case InputEnum.NUMBER_1:\n      case InputEnum.NUMBER_2:\n      case InputEnum.NUMBER_3:\n      case InputEnum.NUMBER_4:\n      case InputEnum.NUMBER_5:\n      case InputEnum.NUMBER_6:\n      case InputEnum.NUMBER_7:\n      case InputEnum.NUMBER_8:\n      case InputEnum.NUMBER_9:\n        this.numKeyListener(input);\n        break;\n    }\n  };\n  commaListener = () => {\n    this.inventory.left();\n  };\n  periodListener = () => {\n    this.inventory.right();\n  };\n  numKeyListener = (input: InputEnum) => {\n    this.inventory.handleNumKey(input - 13);\n  };\n\n  tapListener = () => {\n    this.inventory.open();\n  };\n  iListener = () => {\n    this.inventory.open();\n  };\n  qListener = () => {\n    if (this.inventory.isOpen) {\n      this.inventory.drop();\n    }\n  };\n  ignoreDirectionInput = (): boolean => {\n    return (\n      !this.inventory.isOpen &&\n      (this.dead || this.game.levelState !== LevelState.IN_LEVEL)\n    );\n  };\n  leftListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.left();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.left();\n      return true;\n    }\n\n    return false;\n  };\n  rightListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.right();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.right();\n      return true;\n    }\n\n    return false;\n  };\n  upListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.up();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.up();\n      return true;\n    }\n\n    return false;\n  };\n  downListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.down();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.down();\n      return true;\n    }\n\n    return false;\n  };\n  spaceListener = () => {\n    if (!this.game.chatOpen) {\n      if (this.dead) {\n        this.restart();\n      } else if (this.openVendingMachine) {\n        this.openVendingMachine.space();\n      } else if (\n        this.inventory.isOpen ||\n        this.game.levelState === LevelState.IN_LEVEL\n      ) {\n        this.inventory.space();\n        return;\n      }\n    }\n  };\n  mouseLeftClick = () => {\n    if (this.dead) {\n      this.restart();\n    } else {\n      this.inventory.mouseLeftClick();\n    }\n    if (\n      !this.inventory.isOpen &&\n      !this.inventory.isPointInInventoryButton(\n        MouseCursor.getInstance().getPosition().x,\n        MouseCursor.getInstance().getPosition().y,\n      ) &&\n      !this.inventory.isPointInQuickbarBounds(\n        MouseCursor.getInstance().getPosition().x,\n        MouseCursor.getInstance().getPosition().y,\n      ).inBounds\n    ) {\n      this.moveWithMouse();\n    } else if (\n      this.inventory.isPointInInventoryButton(\n        MouseCursor.getInstance().getPosition().x,\n        MouseCursor.getInstance().getPosition().y,\n      )\n    ) {\n      this.inventory.open();\n    }\n  };\n  mouseRightClick = () => {\n    this.inventory.mouseRightClick();\n  };\n\n  mouseMove = () => {\n    this.inventory.mouseMove();\n    //this.faceMouse();\n    this.setTileCursorPosition();\n  };\n\n  moveWithMouse = () => {\n    /*\n    this.faceMouse();\n    if (this.moveRangeCheck(this.mouseToTile().x, this.mouseToTile().y)) {\n      this.tryMove(this.mouseToTile().x, this.mouseToTile().y);\n    }\n    */\n  };\n\n  mouseToTile = () => {\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Convert pixel offset to tile offset (this part was working correctly)\n    const tileOffsetX = Math.floor(\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n    const tileOffsetY = Math.floor(\n      (Input.mouseY - screenCenterY + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n\n    return {\n      x: this.x + tileOffsetX,\n      y: this.y + tileOffsetY,\n    };\n  };\n\n  tryVaultOver = (x: number, y: number, direction: PlayerDirection) => {\n    switch (direction) {\n      case PlayerDirection.UP:\n        this.tryMove(x, y - 1);\n        break;\n      case PlayerDirection.DOWN:\n        this.tryMove(x, y + 1);\n        break;\n      case PlayerDirection.LEFT:\n        this.tryMove(x - 1, y);\n        break;\n      case PlayerDirection.RIGHT:\n        this.tryMove(x + 1, y);\n        break;\n    }\n  };\n\n  moveRangeCheck = (x: number, y: number) => {\n    const dx = Math.abs(this.x - x);\n    const dy = Math.abs(this.y - y);\n    return dx <= this.moveRange && dy <= this.moveRange && dx + dy !== 0;\n  };\n\n  setTileCursorPosition = () => {\n    this.tileCursor = {\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\n    };\n  };\n\n  restart = () => {\n    this.dead = false;\n    this.game.newGame();\n  };\n\n  left = () => {\n    if (this.canMove() || this.moveQueue.length >= 1) {\n      this.direction = Direction.LEFT;\n      this.tryMove(this.x - 1, this.y);\n    } else this.queueMove(this.x - 1, this.y, Direction.LEFT);\n  };\n  right = () => {\n    if (this.canMove() || this.moveQueue.length >= 1) {\n      this.direction = Direction.RIGHT;\n      this.tryMove(this.x + 1, this.y);\n    } else this.queueMove(this.x + 1, this.y, Direction.RIGHT);\n  };\n  up = () => {\n    if (this.canMove() || this.moveQueue.length >= 1) {\n      this.direction = Direction.UP;\n      this.tryMove(this.x, this.y - 1);\n    } else this.queueMove(this.x, this.y - 1, Direction.UP);\n  };\n  down = () => {\n    if (this.canMove() || this.moveQueue.length >= 1) {\n      this.direction = Direction.DOWN;\n      this.tryMove(this.x, this.y + 1);\n    } else this.queueMove(this.x, this.y + 1, Direction.DOWN);\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tryCollide = (other: any, newX: number, newY: number) => {\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\n    return true;\n  };\n\n  tryMove = (x: number, y: number) => {\n    console.log(`lastX, lastY: ${this.lastX}, ${this.lastY}`);\n\n    let slowMotion = this.slowMotionEnabled;\n    let newMove = { x: x, y: y };\n    // TODO don't move if hit by enemy\n    this.game.rooms[this.levelID].catchUp();\n    if (this.dead) return;\n\n    for (let i = 0; i < 2; i++)\n      if (\n        this.inventory.hasWeapon() &&\n        !this.inventory.getWeapon().weaponMove(x, y)\n      ) {\n        //for (let h of this.game.levels[this.levelID].hitwarnings) {\n        //if (newMove instanceof HitWarning)\n        return;\n        //}\n      }\n\n    for (let e of this.game.rooms[this.levelID].entities) {\n      if (this.tryCollide(e, x, y)) {\n        if (e.pushable) {\n          // pushing a crate or barrel\n          let dx = x - this.x;\n          let dy = y - this.y;\n          let nextX = x + dx;\n          let nextY = y + dy;\n          let foundEnd = false; // end of the train of whatever we're pushing\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\n          let pushedEnemies = [];\n          while (true) {\n            foundEnd = true;\n            for (const f of this.game.rooms[this.levelID].entities) {\n              if (f.pointIn(nextX, nextY)) {\n                if (!f.chainPushable) {\n                  enemyEnd = true;\n                  foundEnd = true;\n                  break;\n                }\n                foundEnd = false;\n                pushedEnemies.push(f);\n                break;\n              }\n            }\n            if (foundEnd) break;\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\n          }\n          /* if no enemies and there is a wall, no move\n          otherwise, push everything, killing last enemy if there is a wall */\n          // here, (nextX, nextY) is the position immediately after the end of the train\n\n          if (\n            pushedEnemies.length === 0 &&\n            (this.game.rooms[this.levelID].roomArray[nextX][\n              nextY\n            ].canCrushEnemy() ||\n              enemyEnd)\n          ) {\n            if (e.destroyable) {\n              e.kill();\n              if (this.game.rooms[this.levelID] === this.game.room) Sound.hit();\n              this.game.rooms[this.levelID].particles.push(\n                new SlashParticle(e.x, e.y),\n              );\n              this.shakeScreen(this.x, this.y, e.x, e.y, 10);\n\n              this.game.rooms[this.levelID].tick(this);\n              return;\n            }\n          } else {\n            if (this.game.rooms[this.levelID] === this.game.room) Sound.push();\n            // here pushedEnemies may still be []\n            for (const f of pushedEnemies) {\n              f.x += dx;\n              f.y += dy;\n              f.drawX = dx;\n              f.drawY = dy;\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\n            }\n            if (\n              this.game.rooms[this.levelID].roomArray[nextX][\n                nextY\n              ].canCrushEnemy() ||\n              enemyEnd\n            ) {\n              pushedEnemies[pushedEnemies.length - 1].crush();\n              if (this.game.rooms[this.levelID] === this.game.room) Sound.hit();\n            }\n            e.x += dx;\n            e.y += dy;\n            e.drawX = dx;\n            e.drawY = dy;\n            this.move(x, y);\n            this.moveDistance++;\n            this.game.rooms[this.levelID].tick(this);\n            return;\n          }\n        } else {\n          // if we're trying to hit an enemy, check if it's destroyable\n          if (!e.dead) {\n            if (e.interactable) e.interact(this);\n            //this.actionTab.actionState = ActionState.ATTACK;\n            //sets the action tab state to Attack\n            return;\n          }\n        }\n      }\n    }\n    let other = this.game.rooms[this.levelID].roomArray[x][y];\n    if (!other.isSolid()) {\n      this.move(x, y);\n      other.onCollide(this);\n      if (!(other instanceof Door || other instanceof Trapdoor))\n        this.game.rooms[this.levelID].tick(this);\n    } else {\n      if (other instanceof Door) {\n        this.shakeScreen(this.x, this.y, x, y, 10);\n        if (other.canUnlock(this)) other.unlock(this);\n      }\n    }\n  };\n  private updateLastPosition = (x: number, y: number) => {\n    console.log(`updateLastPosition: ${x}, ${y}`);\n    this.lastX = x;\n    this.lastY = y;\n  };\n\n  //get cancelHoldMove = () => {};\n\n  wouldHurt = (x: number, y: number) => {\n    for (let h of this.game.rooms[this.levelID].hitwarnings) {\n      if (h instanceof HitWarning && h.x == x && h.y == y) return true;\n      else {\n        return false;\n      }\n    }\n  };\n\n  hurt = (damage: number, enemy: string) => {\n    if (this.game.rooms[this.levelID] === this.game.room) Sound.hurt();\n\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      this.inventory.getArmor().hurt(damage);\n    } else {\n      this.lastHitBy = enemy;\n      //console.log(\"Last Hit by: \", enemy);\n      this.healthBar.hurt();\n      this.flashing = true;\n      this.health -= damage;\n      this.hurting = true;\n      this.hurtAlpha = 0.5;\n      if (this.health <= 0 && !GameConstants.DEVELOPER_MODE) {\n        this.dead = true;\n      }\n\n      /*\n      if (this.health <= 0) {\n        this.health = 0;\n        \n        if (!this.game.tutorialActive) {\n          this.dead = true;\n        } else {\n          this.health = 2;\n          this.game.pushMessage(\"You are dead, but you can try again!\");\n        }\n        */\n    }\n  };\n\n  dashMove = (x: number, y: number) => {\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.rooms[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n\n    //this.game.rooms[this.levelID].updateLighting();\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  doneHitting = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.hitX) < EPSILON && Math.abs(this.hitY) < EPSILON;\n  };\n\n  enableSlowMotion = () => {\n    if (this.motionSpeed < 1 && !this.slowMotionEnabled) {\n      this.motionSpeed *= 1.08;\n      if (this.motionSpeed >= 1) this.motionSpeed = 1;\n    }\n    if (this.slowMotionEnabled && this.motionSpeed > 0.25) {\n      this.motionSpeed *= 0.95;\n      if (this.motionSpeed < 0.25) this.motionSpeed = 0.25;\n    }\n  };\n\n  move = (x: number, y: number) => {\n    this.updateLastPosition(this.x, this.y);\n\n    //this.actionTab.setState(ActionState.MOVE);\n    if (this.game.rooms[this.levelID] === this.game.room)\n      Sound.playerStoneFootstep();\n\n    if (this.openVendingMachine) this.openVendingMachine.close();\n\n    this.drawX += x - this.x;\n    this.drawY += y - this.y;\n\n    /*\n    if (this.drawX > 1) this.drawX = 1;\n    if (this.drawY > 1) this.drawY = 1;\n    if (this.drawX < -1) this.drawX = -1;\n    if (this.drawY < -1) this.drawY = -1;\n    */\n\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.rooms[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n    let diffX = x - this.lastX;\n    let diffY = y - this.lastY;\n    if (diffX === 0 && diffY === 0) return;\n\n    //this.game.rooms[this.levelID].updateLighting();\n  };\n\n  moveNoSmooth = (x: number, y: number) => {\n    // doesn't touch smoothing\n    this.x = x;\n    this.y = y;\n  };\n\n  moveSnap = (x: number, y: number) => {\n    // no smoothing\n    this.x = x;\n    this.y = y;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.hitX = 0;\n    this.hitY = 0;\n  };\n\n  update = () => {};\n  updateSlowMotion = () => {\n    if (this.slowMotionTickDuration > 0) this.slowMotionTickDuration -= 1;\n    if (this.slowMotionTickDuration === 0) this.slowMotionEnabled = false;\n  };\n\n  finishTick = () => {\n    this.turnCount += 1;\n    this.inventory.tick();\n\n    this.flashing = false;\n\n    let totalHealthDiff = this.health - this.lastTickHealth;\n    this.lastTickHealth = this.health; // update last tick health\n    if (totalHealthDiff < 0) {\n      this.flashing = true;\n    }\n    this.moveDistance = 0;\n\n    //this.actionTab.actionState = ActionState.READY;\n    //Sets the action tab state to Wait (during enemy turn)\n  };\n\n  drawPlayerSprite = (delta: number) => {\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    Game.drawMob(\n      1 + Math.floor(this.frame),\n      8 + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - 1.45 - this.drawY - this.jumpY,\n      1,\n      2,\n    );\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      // TODO draw armor\n    }\n  };\n\n  drawSpellBeam = (delta: number) => {\n    // Clear existing beam effects each frame\n    this.game.rooms[this.levelID].beamEffects = [];\n\n    if (this.inventory.getWeapon() instanceof Spellbook) {\n      const spellbook = this.inventory.getWeapon() as Spellbook;\n      if (spellbook.isTargeting) {\n        let targets = spellbook.targets;\n        for (let target of targets) {\n          // Create a new beam effect from the player to the enemy\n          this.game.rooms[this.levelID].addBeamEffect(\n            this.x - this.drawX,\n            this.y - this.drawY,\n            target.x - target.drawX,\n            target.y - target.drawY,\n          );\n\n          // Retrieve the newly added beam effect\n          const beam =\n            this.game.rooms[this.levelID].beamEffects[\n              this.game.rooms[this.levelID].beamEffects.length - 1\n            ];\n\n          // Render the beam\n          beam.render(\n            this.x - this.drawX,\n            this.y - this.drawY,\n            target.x - target.drawX,\n            target.y - target.drawY,\n            \"cyan\",\n            2,\n            delta,\n          );\n        }\n      }\n    }\n  };\n  draw = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\n    if (!this.dead) {\n      Game.drawMob(0, 0, 1, 1, this.x - this.drawX, this.y - this.drawY, 1, 1);\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\n        this.drawPlayerSprite(delta);\n      }\n    }\n    this.drawSpellBeam(delta);\n  };\n\n  faceMouse = () => {\n    const mousePosition = MouseCursor.getInstance().getPosition();\n    const playerPixelPosition = {\n      x: GameConstants.WIDTH / 2,\n      y: GameConstants.HEIGHT / 2,\n    };\n    const dx = mousePosition.x - playerPixelPosition.x;\n    const dy = mousePosition.y - playerPixelPosition.y;\n    const angle = Math.atan2(dy, dx);\n\n    // Convert angle to direction\n    // atan2 returns angle in radians (-π to π)\n    // Divide the circle into 4 sectors for the 4 directions\n    if (angle >= -Math.PI / 4 && angle < Math.PI / 4) {\n      this.direction = Direction.RIGHT;\n    } else if (angle >= Math.PI / 4 && angle < (3 * Math.PI) / 4) {\n      this.direction = Direction.DOWN;\n    } else if (angle >= (-3 * Math.PI) / 4 && angle < -Math.PI / 4) {\n      this.direction = Direction.UP;\n    } else {\n      this.direction = Direction.LEFT;\n    }\n  };\n\n  heartbeat = () => {\n    this.guiHeartFrame = 1;\n  };\n\n  tapHoldHandler = () => {\n    this.mapToggled = !this.mapToggled;\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x - this.drawX,\n      this.y - this.drawY,\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0,\n    );\n  };\n\n  drawGUI = (delta: number, transitioning: boolean = false) => {\n    if (!this.dead) {\n      if (!transitioning) this.inventory.draw(delta);\n      //this.actionTab.draw(delta);\n\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\n      if (this.guiHeartFrame > 5) {\n        this.guiHeartFrame = 0;\n      }\n      for (let i = 0; i < this.maxHealth; i++) {\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\n        if (i >= Math.floor(this.health)) {\n          if (i == Math.floor(this.health) && (this.health * 2) % 2 == 1) {\n            // draw half heart\n            Game.drawFX(4, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          } else {\n            Game.drawFX(3, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          }\n        } else {\n          Game.drawFX(frame, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n        }\n      }\n      if (this.inventory.getArmor())\n        this.inventory.getArmor().drawGUI(delta, this.maxHealth);\n    } else {\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n      const enemies = statsTracker.getStats().enemies;\n      // Count the occurrences of each enemy\n      const enemyCounts = enemies.reduce(\n        (acc, enemy) => {\n          acc[enemy] = (acc[enemy] || 0) + 1;\n          return acc;\n        },\n        {} as Record<string, number>,\n      );\n\n      // Create individual lines\n      const lines: string[] = [];\n\n      // Line 1: Game Over or slain by\n      if (this.lastHitBy !== \"enemy\") {\n        lines.push(`You were slain by ${this.lastHitBy}.`);\n      } else {\n        lines.push(\"Game Over\");\n      }\n\n      lines.push(`Depth reached: ${this.game.rooms[this.levelID].depth}`);\n\n      // Line 2: Enemies killed\n      lines.push(\n        `${Object.values(enemyCounts).reduce(\n          (a, b) => a + b,\n          0,\n        )} enemies killed in total:`,\n      );\n\n      // Subsequent lines: Each enemy count\n      Object.entries(enemyCounts).forEach(([enemy, count]) => {\n        lines.push(`${enemy} x${count}`);\n      });\n\n      // Line after enemy counts: Restart instruction\n      const restartButton = \"Press space or click to restart\";\n\n      // Calculate total height based on number of lines\n      const lineHeight = Game.letter_height + 2; // Adjust spacing as needed\n      const totalHeight = lines.length * lineHeight + lineHeight; // Additional space for restart button\n\n      // Starting Y position to center the text block\n      let startY = GameConstants.HEIGHT / 2 - totalHeight / 2;\n\n      // Draw each line centered horizontally\n      lines.forEach((line, index) => {\n        const textWidth = Game.measureText(line).width;\n        const spacing =\n          index === 0 || index === 1 || index === lines.length - 1\n            ? lineHeight * 1.5\n            : lineHeight;\n        Game.fillText(line, GameConstants.WIDTH / 2 - textWidth / 2, startY);\n        startY += spacing;\n      });\n\n      // Draw the restart button\n      const restartTextWidth = Game.measureText(restartButton).width;\n      Game.fillText(\n        restartButton,\n        GameConstants.WIDTH / 2 - restartTextWidth / 2,\n        startY,\n      );\n    }\n    PostProcessor.draw(delta);\n    if (this.hurting) this.drawHurt(delta);\n    if (this.mapToggled === true) this.map.draw(delta);\n    //this.drawTileCursor(delta);\n    this.drawInventoryButton(delta);\n  };\n\n  drawHurt = (delta: number) => {\n    Game.ctx.globalAlpha = this.hurtAlpha;\n    this.hurtAlpha -= (this.hurtAlpha / 10) * delta;\n    if (this.hurtAlpha <= 0.03) {\n      this.hurtAlpha = 0;\n      this.hurting = false;\n    }\n    Game.ctx.globalCompositeOperation = \"screen\";\n    Game.ctx.fillStyle = \"#cc3333\"; // bright but not fully saturated red\n\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.globalCompositeOperation = \"source-over\";\n  };\n\n  updateDrawXY = (delta: number) => {\n    //console.log(\"this.x\", this.x);\n    //console.log(\"this.y\", this.y);\n    if (!this.doneMoving()) {\n      this.drawX -= this.drawX * this.drawMoveSpeed * delta;\n      this.drawY -= this.drawY * this.drawMoveSpeed * delta;\n    }\n    if (this.doneHitting()) {\n      this.jump(delta);\n    }\n    if (Math.abs(this.drawX) < 0.01) {\n      this.drawX = 0;\n      this.justMoved = DrawDirection.Y;\n    }\n    if (Math.abs(this.drawY) < 0.01) {\n      this.drawY = 0;\n      this.justMoved = DrawDirection.X;\n    }\n    if (!this.doneHitting()) {\n      this.updateHitXY(delta);\n    }\n    this.drawX += this.hitX;\n    this.drawY += this.hitY;\n\n    this.enableSlowMotion();\n    GameConstants.ANIMATION_SPEED = this.motionSpeed;\n  };\n\n  updateHitXY = (delta: number) => {\n    this.hitX -= this.hitX * 0.3;\n    this.hitY -= this.hitY * 0.3;\n    if (Math.abs(this.hitX) < 0.01) this.hitX = 0;\n    if (Math.abs(this.hitY) < 0.01) this.hitY = 0;\n  };\n\n  hitShake = (\n    playerX: number,\n    playerY: number,\n    otherX: number,\n    otherY: number,\n  ) => {\n    this.hitX = 0.5 * (playerX - otherX);\n    this.hitY = 0.5 * (playerY - otherY);\n  };\n\n  shakeScreen = (\n    playerX: number,\n    playerY: number,\n    otherX: number,\n    otherY: number,\n    shakeStrength: number = 10,\n  ) => {\n    this.hitShake(playerX, playerY, otherX, otherY);\n\n    this.game.shakeScreen(this.hitX * shakeStrength, this.hitY * shakeStrength);\n  };\n\n  jump = (delta: number) => {\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\n    this.jumpY = Math.sin(j * Math.PI * delta) * this.jumpHeight;\n    if (this.jumpY < 0.01 && this.jumpY > -0.01) this.jumpY = 0;\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\n  };\n\n  drawInventoryButton = (delta: number) => {\n    Game.drawFX(0, 0, 2, 2, LevelConstants.SCREEN_W - 2, 0, 2, 2);\n  };\n\n  drawTileCursor = (delta: number) => {\n    const inRange = this.moveRangeCheck(\n      this.mouseToTile().x,\n      this.mouseToTile().y,\n    );\n    let tileX = inRange ? 22 : 24;\n\n    Game.drawFX(\n      tileX + Math.floor(HitWarning.frame),\n      4,\n      1,\n      2,\n      this.tileCursor.x,\n      //round to lower odd number\n      this.tileCursor.y - 1,\n      1,\n      2,\n    );\n  };\n\n  private queueHandler = () => {\n    //      console.log(\"Queue handler running, queue length:\", this.moveQueue.length);\n    //console.log(\"Is processing queue:\", this.isProcessingQueue);\n\n    if (!this.isProcessingQueue) {\n      return;\n    }\n\n    const currentTime = Date.now();\n    const timeSinceLastMove = currentTime - this.lastMoveTime;\n    //console.log(\"Time since last move:\", timeSinceLastMove);\n\n    if (currentTime - this.lastMoveTime >= GameConstants.MOVEMENT_COOLDOWN) {\n      if (this.moveQueue.length > 0) {\n        const { x, y, direction } = this.moveQueue.shift();\n        //console.log(\"Processing move to:\", x, y);\n        this.handleMoveLoop({ x, y, direction });\n        this.lastMoveTime = currentTime;\n      } else {\n        //console.log(\"Queue empty, stopping processing\");\n        this.stopQueueProcessing();\n      }\n    } else {\n      //console.log(\n      //  \"Waiting for cooldown, remaining time:\",\n      //  GameConstants.MOVEMENT_COOLDOWN - timeSinceLastMove\n      //);\n    }\n\n    this.animationFrameId = requestAnimationFrame(this.queueHandler);\n    //console.log(\"Next animation frame requested:\", this.animationFrameId);\n  };\n\n  private startQueueProcessing = () => {\n    //console.log(\"Attempting to start queue processing\");\n    //console.log(\n    //  \"Current state - isProcessing:\",\n    //  this.isProcessingQueue,\n    //  \"animationFrameId:\",\n    //  this.animationFrameId\n    //);\n\n    if (!this.isProcessingQueue) {\n      //console.log(\"Starting queue processing\");\n      this.isProcessingQueue = true;\n      this.animationFrameId = requestAnimationFrame(this.queueHandler);\n      //console.log(\"Animation frame requested:\", this.animationFrameId);\n    } else {\n      //console.log(\"Queue processing already running\");\n    }\n  };\n\n  private stopQueueProcessing = () => {\n    //console.log(\"Stopping queue processing\");\n    //console.log(\n    //  \"Current state - isProcessing:\",\n    //  this.isProcessingQueue,\n    //  \"animationFrameId:\",\n    //  this.animationFrameId\n    //);\n\n    this.isProcessingQueue = false;\n    if (this.animationFrameId !== null) {\n      //console.log(\"Canceling animation frame:\", this.animationFrameId);\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = null;\n    }\n  };\n\n  handleMoveLoop = ({\n    x,\n    y,\n    direction,\n  }: {\n    x: number;\n    y: number;\n    direction: Direction;\n  }) => {\n    switch (direction) {\n      case Direction.RIGHT:\n        this.right();\n        break;\n      case Direction.LEFT:\n        this.left();\n        break;\n      case Direction.DOWN:\n        this.down();\n        break;\n      case Direction.UP:\n        this.up();\n        break;\n    }\n  };\n\n  queueMove = (x: number, y: number, direction: Direction) => {\n    if (!x || !y || this.moveQueue.length > 0) return;\n\n    //console.log(\"Queueing move to:\", x, y);\n    //console.log(\"Current queue length:\", this.moveQueue.length);\n    const move = { x, y, direction };\n    this.moveQueue.push(move);\n    this.startQueueProcessing();\n    //console.log(\"Queue length after push:\", this.moveQueue.length);\n  };\n\n  private canMove(): boolean {\n    const currentTime = Date.now();\n    if (currentTime - this.lastMoveTime >= GameConstants.MOVEMENT_COOLDOWN) {\n      this.lastMoveTime = currentTime;\n      return true;\n    }\n    return false;\n  }\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\n\nexport class PostProcessor {\n  static draw = (delta: number) => {\n    Game.ctx.globalAlpha = 0.2;\n    Game.ctx.globalCompositeOperation = \"screen\";\n\n    Game.ctx.fillStyle = \"#006A6E\"; //dark teal\n    //Game.ctx.fillStyle = \"#003B6F\"; //deep underwater blue\n    //Game.ctx.fillStyle = \"#2F2F2F\"; //smoky fog prison\n\n    //Game.ctx.fillStyle = \"#4a6c4b\"; //darker muddy green\n    //Game.ctx.fillStyle = \"#800000\"; // lighter red for dungeon hell theme\n\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.globalCompositeOperation = \"source-over\";\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Room } from \"../room\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class EnemySpawnAnimation extends Projectile {\n  readonly ANIM_COUNT = 3;\n\n  room: Room;\n  enemy: Entity;\n  frame: number;\n\n  constructor(room: Room, enemy: Entity, x: number, y: number) {\n    super(enemy, x, y);\n    this.room = room;\n    this.enemy = enemy;\n    this.frame = 0;\n  }\n\n  tick = () => {\n    if (this.room === this.room.game.room) Sound.enemySpawn();\n\n    let hitPlayer = false;\n    for (const i in this.room.game.players) {\n      if (\n        this.room.game.players[i].x === this.x &&\n        this.room.game.players[i].y === this.y\n      ) {\n        this.room.game.players[i].hurt(0.5, \"reaper\");\n        hitPlayer = true;\n      }\n    }\n    if (!hitPlayer) {\n      this.dead = true;\n      this.enemy.skipNextTurns = 1;\n      this.room.entities.push(this.enemy);\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        \"#ffffff\",\n      );\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        \"#ffffff\",\n      );\n    } else {\n      this.room.hitwarnings.push(\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y),\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    this.frame += 0.25 * delta;\n    if (this.frame >= 8) this.frame = 0;\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\n      let offsetX = 0;\n      Game.drawFX(\n        Math.floor(this.frame),\n        27,\n        1,\n        1,\n        this.x + Math.round(offsetX) / 16.0,\n        this.y - 0.5,\n        1,\n        1,\n      );\n    }\n    if (Math.floor(this.frame * 4) % 2 == 0)\n      this.room.particles.push(\n        new GenericParticle(\n          this.room,\n          this.x + 0.5 + Math.random() * 0.05 - 0.025,\n          this.y + Math.random() * 0.05 - 0.025,\n          0.25,\n          Math.random() * 0.5,\n          0.025 * (Math.random() * 1 - 0.5),\n          0.025 * (Math.random() * 1 - 0.5),\n          0.2 * (Math.random() - 1),\n          \"#ffffff\",\n          0,\n        ),\n      );\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Lighting } from \"../lighting\";\nimport { Utils } from \"../utils\";\nexport class PlayerFireball extends Projectile {\n  state: number;\n  frame: number;\n  delay: number;\n  parent: Player;\n  offsetFrame: number;\n\n  constructor(parent: Player, x: number, y: number) {\n    super(parent, x, y);\n    this.state = 0;\n    this.frame = 6;\n    this.offsetFrame =\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 50;\n    this.delay = 0;\n    Lighting.momentaryLight(\n      this.parent.game.rooms[this.parent.levelID],\n      this.x + 0.5,\n      this.y + 0.5,\n      0.5,\n      [255, 100, 0],\n      250,\n      10,\n      1,\n    );\n  }\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\n    if (this.offsetFrame >= 0) {\n      this.frame += 0.25 * delta;\n    }\n\n    if (this.frame > 17) this.dead = true;\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Direction } from \"../game\";\nimport { LightSource } from \"../lightSource\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\n\nexport class Projectile extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  parent: Entity | Player;\n  dir: Direction;\n  lightSource: LightSource;\n\n  constructor(parent: Entity | Player, x: number, y: number) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.parent = parent;\n    this.drawableY = y;\n  }\n\n  get distanceToParent() {\n    return Math.abs(this.x - this.parent.x) + Math.abs(this.y - this.parent.y);\n  }\n\n  hitPlayer = (player: Player) => {};\n  hitEnemy = (enemy: Entity) => {};\n\n  tick = () => {};\n  draw = (delta: number) => {};\n  drawTopLayer = (delta: number) => {};\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Entity } from \"../entity/entity\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { LightSource } from \"../lightSource\";\nimport { Lighting } from \"../lighting\";\n\nexport class WizardFireball extends Projectile {\n  state: number;\n  frame: number;\n  parent: WizardEnemy;\n  delay: number;\n  frameOffset: number;\n  offsetX: number;\n  hitWarning: HitWarning;\n  tileX: number;\n  tileY: number;\n\n  constructor(parent: WizardEnemy, x: number, y: number) {\n    super(parent, x, y);\n    this.tileY = parent.name === \"wizard bomber\" ? 7 : 8;\n    this.parent = parent;\n    this.frame = 0;\n    this.state = 0; // this.distanceToParent;\n    this.lightSource = new LightSource(\n      this.x + 0.5,\n      this.y + 0.5,\n      4,\n      (parent as WizardEnemy).projectileColor,\n      0.1,\n    );\n    this.parent.addLightSource(this.lightSource);\n    //this.parent.room.updateLighting();\n  }\n  setMarkerFrame = () => {\n    // Calculate offsetX based on direction\n    this.offsetX = Math.floor(((this.dir + 1) % 8) / 2);\n  };\n\n  tick = () => {\n    if (this.parent.dead || this.state === 3) {\n      this.parent.removeLightSource(this.lightSource);\n      this.dead = true;\n    }\n\n    if (!this.dead && this.state === 0) {\n    }\n\n    this.state++;\n    if (!this.dead && this.state === 1) {\n      const lightSource = this.parent.room.lightSources.find(\n        (ls) => ls === this.lightSource,\n      );\n      lightSource.b = 0.4;\n      this.parent.room.hitwarnings.push(\n        new HitWarning(\n          this.parent.game,\n          this.x,\n          this.y,\n          this.parent.x,\n          this.parent.y,\n          true,\n        ),\n      );\n    }\n    if (!this.dead && this.state === 2) {\n      Lighting.momentaryLight(\n        this.parent.room,\n        this.x,\n        this.y,\n        3,\n        (this.parent as WizardEnemy).projectileColor,\n        500,\n        5,\n        350,\n      );\n      this.parent.removeLightSource(this.lightSource);\n      this.frame = 0;\n      this.delay = Game.rand(0, 10, Math.random);\n    }\n  };\n\n  hitPlayer = (player: Player) => {\n    if (!this.dead && this.state === 2) {\n      player.hurt(1, this.parent.name);\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    /*Game.drawFX(\n      18 + this.offsetX, //+ Math.floor(HitWarning.frame),\n      4,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1\n    );*/\n\n    if (this.state >= 0) {\n      if (this.state === 0) {\n        this.frame += 0.25 * delta;\n        if (this.frame >= 4) this.frame = 0;\n        Game.drawFX(\n          22 + Math.floor(this.frame),\n          this.tileY,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n        );\n      } else if (this.state === 1) {\n        this.frame += 0.25 * delta;\n        if (this.frame >= 4) this.frame = 0;\n        Game.drawFX(\n          18 + Math.floor(this.frame),\n          this.tileY,\n          1,\n          1,\n          this.x,\n          this.y - 0.2,\n          1,\n          1,\n        );\n      } else {\n        if (this.delay > 0) {\n          this.delay--;\n          return;\n        }\n        this.frame += 0.3 * delta;\n        if (this.frame > 17) this.dead = true;\n        Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n      }\n    }\n  };\n}\n","export class Random {\n  static state: number;\n\n  static setState = (state: number) => {\n    Random.state = state;\n  };\n\n  static rand = () => {\n    Random.state ^= Random.state << 21;\n    Random.state ^= Random.state >>> 35;\n    Random.state ^= Random.state << 4;\n    return (Random.state >>> 0) / 4294967296;\n  };\n}\n\n// copy and paste into browser console\n// let state;\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }\n","export class ReverbEngine {\n  private static audioContext: AudioContext;\n  private static convolver: ConvolverNode;\n  private static reverbBuffer: AudioBuffer | null = null;\n  private static mediaSources: WeakMap<\n    HTMLAudioElement,\n    MediaElementAudioSourceNode\n  > = new WeakMap();\n\n  // Initialize the AudioContext and ConvolverNode\n  public static async initialize() {\n    if (!ReverbEngine.audioContext) {\n      ReverbEngine.audioContext = new (window.AudioContext ||\n        (window as any).webkitAudioContext)();\n      ReverbEngine.convolver = ReverbEngine.audioContext.createConvolver();\n      ReverbEngine.convolver.connect(ReverbEngine.audioContext.destination);\n      await ReverbEngine.loadReverbBuffer(`res/SFX/impulses/small.mp3`);\n      ReverbEngine.setDefaultReverb();\n    }\n  }\n\n  // Load a specified impulse response\n  private static async loadReverbBuffer(filePath: string) {\n    try {\n      const response = await fetch(filePath);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const arrayBuffer = await response.arrayBuffer();\n      ReverbEngine.reverbBuffer =\n        await ReverbEngine.audioContext.decodeAudioData(arrayBuffer);\n    } catch (error) {}\n  }\n\n  // Set the default reverb buffer\n  private static setDefaultReverb() {\n    if (ReverbEngine.reverbBuffer) {\n      ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\n    }\n  }\n\n  /**\n   * Set the reverb characteristics by specifying an impulse response file.\n   * @param filePath - The path to the impulse response file.\n   */\n  public static async setReverbImpulse(filePath: string): Promise<void> {\n    try {\n      await ReverbEngine.loadReverbBuffer(filePath);\n      if (ReverbEngine.reverbBuffer) {\n        ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\n      }\n    } catch (error) {}\n  }\n\n  // Apply reverb to a given HTMLAudioElement\n  public static applyReverb(audioElement: HTMLAudioElement) {\n    try {\n      if (ReverbEngine.mediaSources.has(audioElement)) {\n        return;\n      }\n\n      const track =\n        ReverbEngine.audioContext.createMediaElementSource(audioElement);\n      track.connect(ReverbEngine.convolver);\n      ReverbEngine.mediaSources.set(audioElement, track);\n    } catch (error) {}\n  }\n\n  // Remove reverb from a given HTMLAudioElement\n  public static removeReverb(audioElement: HTMLAudioElement) {\n    const track = ReverbEngine.mediaSources.get(audioElement);\n    if (track) {\n      track.disconnect();\n      ReverbEngine.mediaSources.delete(audioElement);\n    }\n  }\n}\n","import { Wall } from \"./tile/wall\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Floor } from \"./tile/floor\";\nimport { Direction, Game, LevelState } from \"./game\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Tile, SkinType } from \"./tile/tile\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { KnightEnemy } from \"./entity/enemy/knightEnemy\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { Chest } from \"./entity/object/chest\";\nimport { Item } from \"./item/item\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { SpawnFloor } from \"./tile/spawnfloor\";\n//import { GoldenDoor } from \"./tile/goldenDoor\";\nimport { Spike } from \"./tile/spike\";\nimport { GameConstants } from \"./gameConstants\";\nimport { WizardEnemy } from \"./entity/enemy/wizardEnemy\";\nimport { SkullEnemy } from \"./entity/enemy/skullEnemy\";\nimport { Barrel } from \"./entity/object/barrel\";\nimport { Crate } from \"./entity/object/crate\";\nimport { Input } from \"./input\";\nimport { Armor } from \"./item/armor\";\nimport { Particle } from \"./particle/particle\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { FountainTile } from \"./tile/fountainTile\";\nimport { CoffinTile } from \"./tile/coffinTile\";\nimport { PottedPlant } from \"./entity/object/pottedPlant\";\nimport { InsideLevelDoor } from \"./tile/insideLevelDoor\";\nimport { Button } from \"./tile/button\";\nimport { HitWarning } from \"./hitWarning\";\nimport { UpLadder } from \"./tile/upLadder\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { CoalResource } from \"./entity/resource/coalResource\";\nimport { GoldResource } from \"./entity/resource/goldResource\";\nimport { EmeraldResource } from \"./entity/resource/emeraldResource\";\nimport { Chasm } from \"./tile/chasm\";\nimport { Spawner } from \"./entity/enemy/spawner\";\nimport { VendingMachine } from \"./entity/object/vendingMachine\";\nimport { WallTorch } from \"./tile/wallTorch\";\nimport { LightSource } from \"./lightSource\";\nimport { ChargeEnemy } from \"./entity/enemy/chargeEnemy\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Heart } from \"./item/heart\";\nimport { Spear } from \"./weapon/spear\";\nimport { Drawable } from \"./drawable\";\nimport { Player, PlayerDirection } from \"./player\";\nimport { CrabEnemy } from \"./entity/enemy/crabEnemy\";\nimport { ZombieEnemy } from \"./entity/enemy/zombieEnemy\";\nimport { BigSkullEnemy } from \"./entity/enemy/bigSkullEnemy\";\nimport { Random } from \"./random\";\nimport { Lantern } from \"./item/lantern\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Pot } from \"./entity/object/pot\";\nimport { BishopEnemy } from \"./entity/enemy/bishopEnemy\";\nimport { Rock } from \"./entity/resource/rockResource\";\nimport { Mushrooms } from \"./entity/object/mushrooms\";\nimport { ArmoredzombieEnemy } from \"./entity/enemy/armoredzombieEnemy\";\nimport { Backpack } from \"./item/backpack\";\nimport { DoorDir } from \"./tile/door\";\n//import { ActionState, ActionTab } from \"./actionTab\";\nimport { TombStone } from \"./entity/object/tombStone\";\nimport { Pumpkin } from \"./entity/object/pumpkin\";\nimport { QueenEnemy } from \"./entity/enemy/queenEnemy\";\nimport { FrogEnemy } from \"./entity/enemy/frogEnemy\";\nimport { BigKnightEnemy } from \"./entity/enemy/bigKnightEnemy\";\nimport { EventEmitter } from \"./eventEmitter\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { FireWizardEnemy } from \"./entity/enemy/fireWizard\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { TutorialListener } from \"./tutorialListener\";\nimport { globalEventBus } from \"./eventBus\";\nimport { RedGem } from \"./item/redgem\";\nimport { EnergyWizardEnemy } from \"./entity/enemy/energyWizard\";\nimport { ReverbEngine } from \"./reverb\";\nimport { astar } from \"./astarclass\";\nimport { Level } from \"./level\";\nimport { Warhammer } from \"./weapon/warhammer\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Torch } from \"./item/torch\";\nimport { RookEnemy } from \"./entity/enemy/rookEnemy\";\nimport { BeamEffect } from \"./beamEffect\";\n\n/**\n * Enumeration of available enemy types.\n */\nexport enum EnemyType {\n  crab = \"crab\",\n  frog = \"frog\",\n  zombie = \"zombie\",\n  skull = \"skull\",\n  energyWizard = \"energywizard\",\n  charge = \"charge\",\n  rook = \"rook\",\n  bishop = \"bishop\",\n  armoredzombie = \"armoredzombie\",\n  bigskull = \"bigskull\",\n  queen = \"queen\",\n  knight = \"knight\",\n  bigknight = \"bigknight\",\n  firewizard = \"firewizard\",\n  // Add other enemy types here\n}\n\n/**\n * Mapping of enemy types to their corresponding classes.\n */\nexport const EnemyTypeMap: { [key in EnemyType]: EnemyStatic } = {\n  [EnemyType.crab]: CrabEnemy,\n  [EnemyType.frog]: FrogEnemy,\n  [EnemyType.zombie]: ZombieEnemy,\n  [EnemyType.skull]: SkullEnemy,\n  [EnemyType.energyWizard]: EnergyWizardEnemy,\n  [EnemyType.charge]: ChargeEnemy,\n  [EnemyType.rook]: RookEnemy,\n  [EnemyType.bishop]: BishopEnemy,\n  [EnemyType.armoredzombie]: ArmoredzombieEnemy,\n  [EnemyType.bigskull]: BigSkullEnemy,\n  [EnemyType.queen]: QueenEnemy,\n  [EnemyType.knight]: KnightEnemy,\n  [EnemyType.bigknight]: BigKnightEnemy,\n  [EnemyType.firewizard]: FireWizardEnemy,\n  // Add other enemy mappings here\n};\n\nexport enum RoomType {\n  START,\n  DUNGEON,\n  BOSS,\n  BIGDUNGEON,\n  TREASURE,\n  FOUNTAIN,\n  COFFIN,\n  GRASS,\n  PUZZLE,\n  KEYROOM,\n  CHESSBOARD,\n  MAZE,\n  CORRIDOR,\n  SPIKECORRIDOR,\n  UPLADDER,\n  DOWNLADDER,\n  SHOP,\n  BIGCAVE,\n  CAVE,\n  SPAWNER,\n  ROPEHOLE,\n  ROPECAVE,\n  TUTORIAL,\n}\n\nexport enum TurnState {\n  playerTurn,\n  computerTurn,\n}\n\nexport interface WallInfo {\n  isTopWall: boolean;\n  isBottomWall: boolean;\n  isLeftWall: boolean;\n  isRightWall: boolean;\n  isInnerWall: boolean;\n  isBelowDoorWall: boolean;\n  isDoorWall: boolean;\n  innerWallType: string | null;\n  shouldDrawBottom: boolean;\n  isAboveDoorWall: boolean;\n}\n\nexport enum WallDirection {\n  NORTH = \"North\",\n  EAST = \"East\",\n  SOUTH = \"South\",\n  WEST = \"West\",\n  TOPLEFT = \"TopLeft\",\n  TOPRIGHT = \"TopRight\",\n  BOTTOMLEFT = \"BottomLeft\",\n  BOTTOMRIGHT = \"BottomRight\",\n}\n\ninterface RoomDimensions {\n  width: number;\n  height: number;\n}\n\ninterface EntitySpawnConfig {\n  name: Entity[\"name\"];\n  weight: number;\n}\n\nexport interface EnemyStatic {\n  add(room: Room, game: Game, x: number, y: number, ...rest: any[]): void;\n}\nexport class Room {\n  roomArray: Tile[][];\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\n  softCol: [number, number, number][][];\n  col: [number, number, number][][];\n  renderBuffer: [number, number, number, number][][][]; // Array of color arrays (r,g,b,alpha) for each x,y position\n\n  oldVis: number[][];\n  oldCol: [number, number, number][][];\n\n  entities: Array<Entity>;\n  items: Array<Item>;\n  doors: Array<Door>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\n  projectiles: Array<Projectile>;\n  particles: Array<Particle>;\n  hitwarnings: Array<HitWarning>;\n  game: Game;\n  roomX: number;\n  roomY: number;\n  width: number;\n  height: number;\n  type: RoomType;\n  depth: number;\n  mapGroup: number;\n  name: string = \"\";\n  message: string;\n  turn: TurnState;\n  playerTurnTime: number;\n  playerTicked: Player;\n  skin: SkinType;\n  entered: boolean; // has the player entered this level\n  lightSources: Array<LightSource>;\n  shadeColor = \"black\";\n  innerWalls: Array<Wall>;\n  //actionTab: ActionTab;\n  wallInfo: Map<string, WallInfo> = new Map();\n  savePoint: Room;\n  lastEnemyCount: number;\n  outerWalls: Array<Wall>;\n  level: Level;\n  private pointInside(\n    x: number,\n    y: number,\n    rX: number,\n    rY: number,\n    rW: number,\n    rH: number,\n  ): boolean {\n    if (x < rX || x >= rX + rW) return false;\n    if (y < rY || y >= rY + rH) return false;\n    return true;\n  }\n\n  // Add a list to keep track of BeamEffect instances\n  beamEffects: BeamEffect[] = [];\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    type: RoomType,\n    depth: number,\n    mapGroup: number,\n    level: Level,\n    rand = Random.rand,\n    isTopOpen = false,\n    isRightOpen = false,\n    isBottomOpen = false,\n    isLeftOpen = false,\n  ) {\n    this.game = game;\n    this.roomX = x; //Math.floor(- this.width / 2);\n    this.roomY = y; //Math.floor(- this.height / 2);\n    this.width = w;\n    this.height = h;\n    this.type = type;\n    this.depth = depth;\n    this.mapGroup = mapGroup;\n\n    this.entered = false;\n    this.turn = TurnState.playerTurn;\n    this.playerTurnTime = Date.now();\n\n    this.items = Array<Item>();\n    this.projectiles = Array<Projectile>();\n    this.hitwarnings = Array<HitWarning>();\n    this.particles = Array<Particle>();\n    this.doors = Array<Door>();\n    this.entities = Array<Entity>();\n    this.lightSources = Array<LightSource>();\n    this.innerWalls = Array<Wall>();\n    this.level = level;\n\n    this.roomArray = [];\n    for (let x = this.roomX - 1; x < this.roomX + this.width + 1; x++) {\n      this.roomArray[x] = [];\n      for (let y = this.roomY - 1; y < this.roomY + this.height + 1; y++) {\n        this.roomArray[x][y] = null;\n      }\n    }\n    this.vis = [];\n    this.softVis = [];\n    this.col = [];\n    this.softCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.vis[x] = [];\n      this.softVis[x] = [];\n      this.col[x] = [];\n      this.softCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = 1;\n        this.softVis[x][y] = 1;\n        this.col[x][y] = [0, 0, 0];\n        this.softCol[x][y] = [0, 0, 0];\n      }\n    }\n    this.renderBuffer = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.renderBuffer[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.renderBuffer[x][y] = [];\n      }\n    }\n\n    this.skin = SkinType.DUNGEON;\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE)\n      this.skin = SkinType.CAVE;\n    this.buildEmptyRoom();\n  }\n\n  public async changeReverb(newImpulsePath: string) {\n    await ReverbEngine.setReverbImpulse(newImpulsePath);\n  }\n  get roomArea() {\n    let area = (this.width - 2) * (this.height - 2);\n    let openTiles = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (this.roomArray[x][y] instanceof Floor) openTiles.push({ x, y });\n      }\n    }\n    //console.log(area, openTiles.length);\n    return openTiles.length;\n  }\n\n  private setReverb() {\n    const roomArea = this.roomArea;\n    if (roomArea < 10) {\n      this.changeReverb(`res/SFX/impulses/small.mp3`);\n    } else if (roomArea < 55) {\n      this.changeReverb(`res/SFX/impulses/medium.mp3`);\n    } else {\n      this.changeReverb(`res/SFX/impulses/large.mp3`);\n    }\n  }\n\n  tileInside = (tileX: number, tileY: number): boolean => {\n    return this.pointInside(\n      tileX,\n      tileY,\n      this.roomX,\n      this.roomY,\n      this.width,\n      this.height,\n    );\n  };\n\n  /**\n   * Checks if a room can be placed at the specified position with the given dimensions.\n   *\n   * @param x - The x-coordinate of the door which the new room will branch from.\n   * @param y - The y-coordinate of the door which the new room will branch from.\n   * @param width - The width of the room.\n   * @param height - The height of the room.\n   * @returns `true` if the room can be placed without overlapping; otherwise, `false`.\n   */\n\n  private buildEmptyRoom() {\n    // fill in wall and floor\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (\n          this.pointInside(\n            x,\n            y,\n            this.roomX + 1,\n            this.roomY + 1,\n            this.width - 2,\n            this.height - 2,\n          )\n        ) {\n          this.roomArray[x][y] = new Floor(this, x, y);\n        } else {\n          this.roomArray[x][y] = new Wall(\n            this,\n            x,\n            y,\n            this.getWallType(\n              x,\n              y,\n              this.roomX,\n              this.roomY,\n              this.width,\n              this.height,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  removeWall = (x: number, y: number) => {\n    if (this.roomArray[x][y] instanceof Wall) {\n      this.roomArray[x][y] = null;\n    }\n    //this.innerWalls = this.innerWalls.filter((w) => w.x !== x && w.y !== y);\n    //this.outerWalls = this.outerWalls.filter((w) => w.x !== x && w.y !== y);\n  };\n  getWallType = (\n    pointX: number,\n    pointY: number,\n    rectX: number,\n    rectY: number,\n    width: number,\n    height: number,\n  ): Array<WallDirection> => {\n    let directions: Array<WallDirection> = [];\n    if (pointY === rectY && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.NORTH);\n    if (pointY === rectY + height && pointX >= rectX && pointX <= rectX + width)\n      directions.push(WallDirection.SOUTH);\n    if (pointX === rectX && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.WEST);\n    if (pointX === rectX + width && pointY >= rectY && pointY <= rectY + height)\n      directions.push(WallDirection.EAST);\n    return directions;\n  };\n\n  private addWallBlocks(rand: () => number) {\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\n    if (this.width > 8 && rand() > 0.5) numBlocks *= 4;\n    for (let i = 0; i < numBlocks; i++) {\n      let blockW = Math.min(\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\n        this.width - 4,\n      );\n      let blockH = Math.min(blockW + Game.rand(-2, 2, rand), this.height - 4);\n\n      let x = Game.rand(\n        this.roomX + 2,\n        this.roomX + this.width - blockW - 2,\n        rand,\n      );\n      let y = Game.rand(\n        this.roomY + 2,\n        this.roomY + this.height - blockH - 2,\n        rand,\n      );\n      let neighborCount = (wall: Wall) => {\n        let count = 0;\n        for (let xx = wall.x - 1; xx <= wall.x + 1; xx++) {\n          for (let yy = wall.y - 1; yy <= wall.y + 1; yy++) {\n            if (\n              this.roomArray[xx]?.[yy] instanceof Wall &&\n              !(xx === wall.x && yy === wall.y)\n            )\n              count++;\n          }\n        }\n        return count;\n      };\n\n      for (let xx = x; xx < x + blockW; xx++) {\n        for (let yy = y; yy < y + blockH; yy++) {\n          let w = new Wall(this, xx, yy);\n          this.roomArray[xx][yy] = w;\n          this.innerWalls.push(w);\n        }\n      }\n      this.innerWalls.forEach((wall) => {\n        if (neighborCount(wall) <= 1) {\n          this.removeWall(wall.x, wall.y);\n          this.roomArray[wall.x][wall.y] = new Floor(this, wall.x, wall.y);\n          this.innerWalls = this.innerWalls.filter((w) => w !== wall);\n        }\n      });\n    }\n  }\n\n  private addTorches(numTorches: number, rand: () => number) {\n    let walls = [];\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\n        if (\n          this.roomArray[xx][yy] instanceof Wall &&\n          !(this.roomArray[xx][yy + 1] instanceof Wall)\n        ) {\n          walls.push(this.roomArray[xx][yy]);\n        }\n      }\n    }\n    for (let i = 0; i < numTorches; i++) {\n      let t, x, y;\n      if (walls.length == 0) return;\n      t = walls.splice(Game.rand(0, walls.length - 1, rand), 1)[0];\n      x = t.x;\n      y = t.y;\n      this.roomArray[x][y] = new WallTorch(this, x, y);\n    }\n  }\n\n  private addChasms(rand: () => number) {\n    // add chasms\n    let w = Game.rand(2, 4, rand);\n    let h = Game.rand(2, 4, rand);\n    let xmin = this.roomX + 2;\n    let xmax = this.roomX + this.width - w - 2;\n    let ymin = this.roomY + 2;\n    let ymax = this.roomY + this.height - h - 2;\n    if (xmax < xmin || ymax < ymin) return;\n    let x = Game.rand(xmin, xmax, rand);\n    let y = Game.rand(ymin, ymax, rand);\n\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\n        // add a floor border\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\n          if (!(this.roomArray[xx][yy] instanceof SpawnFloor))\n            this.roomArray[xx][yy] = new Floor(this, xx, yy);\n        } else\n          this.roomArray[xx][yy] = new Chasm(\n            this,\n            xx,\n            yy,\n            xx === x,\n            xx === x + w - 1,\n            yy === y,\n            yy === y + h - 1,\n          );\n      }\n    }\n  }\n\n  private addChests(numChests: number, rand: () => number) {\n    // add chests\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numChests; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.entities.push(new Chest(this, this.game, x, y));\n    }\n  }\n\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.roomArray[x][y] = new SpikeTrap(this, x, y);\n    }\n  }\n\n  private addSpikes(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      this.roomArray[x][y] = new Spike(this, x, y);\n    }\n  }\n\n  hasPlayer(player: Player): boolean {\n    for (let tile of this.roomArray) {\n      if (tile instanceof Player) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Function to add enemies to the room\n  private addEnemies(numEnemies: number, rand: () => number) {\n    // Get all empty tiles in the room\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) return;\n    //don't put enemies near the entrances so you don't get screwed instantly\n\n    const adjecentTiles = [];\n    let spawnerCount = 0;\n    for (let door of this.doors) {\n      if (door.doorDir === Direction.UP) {\n        adjecentTiles.push(\n          { x: door.x, y: door.y - 2 },\n          { x: door.x - 1, y: door.y - 1 },\n          { x: door.x + 1, y: door.y - 1 },\n          { x: door.x - 1, y: door.y - 2 },\n          { x: door.x + 1, y: door.y - 2 },\n        );\n      }\n      if (door.doorDir === Direction.DOWN) {\n        adjecentTiles.push(\n          { x: door.x, y: door.y + 2 },\n          { x: door.x - 1, y: door.y + 1 },\n          { x: door.x + 1, y: door.y + 1 },\n          { x: door.x - 1, y: door.y + 2 },\n          { x: door.x + 1, y: door.y + 2 },\n        );\n      }\n      if (door.doorDir === Direction.LEFT) {\n        adjecentTiles.push(\n          { x: door.x - 2, y: door.y },\n          { x: door.x - 1, y: door.y - 1 },\n          { x: door.x - 1, y: door.y + 1 },\n          { x: door.x - 1, y: door.y - 2 },\n          { x: door.x - 1, y: door.y + 2 },\n        );\n      }\n      if (door.doorDir === Direction.RIGHT) {\n        adjecentTiles.push(\n          { x: door.x + 2, y: door.y },\n          { x: door.x + 1, y: door.y - 1 },\n          { x: door.x + 1, y: door.y + 1 },\n          { x: door.x + 1, y: door.y - 2 },\n          { x: door.x + 1, y: door.y + 2 },\n        );\n      }\n    }\n    tiles = tiles.filter(\n      (tile) => !adjecentTiles.some((t) => t.x === tile.x && t.y === tile.y),\n    );\n    // Loop through the number of enemies to be added\n    for (let i = 0; i < numEnemies; i++) {\n      let rerolls = 1;\n\n      if (tiles.length === 0) {\n        console.log(`No tiles left to spawn enemies`);\n        break;\n      }\n      let emptyTiles = this.getRandomEmptyPosition(tiles);\n      if (emptyTiles.x === null || emptyTiles.y === null) {\n        i = numEnemies;\n        break;\n      }\n      const { x, y } = emptyTiles;\n\n      // Define the enemy tables for each depth level\n      let tables = this.level.enemyParameters.enemyTables;\n      // Define the maximum depth level\n      let max_depth_table = this.level.enemyParameters.maxDepthTable;\n      // Get the current depth level, capped at the maximum\n      let d = Math.min(this.depth, max_depth_table);\n      // If there is a table for the current depth level\n      if (tables[d] && tables[d].length > 0) {\n        // Function to add an enemy to the room\n        let addEnemy = (enemy: Entity): boolean => {\n          // Check if the enemy overlaps with any other enemies\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              if (!tiles.some((tt) => tt.x === x + xx && tt.y === y + yy)) {\n                // If it does, increment the enemy count and return false\n                numEnemies++;\n                return false;\n              }\n            }\n          }\n          // If it doesn't, add the enemy to the room, remove the tiles used from the available pool, and return true\n          this.entities.push(enemy);\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              tiles = tiles.filter((t) => !(t.x === x + xx && t.y === y + yy));\n            }\n          }\n          return true;\n        };\n\n        // Randomly select an enemy type from the table\n        let type = Game.randTable(tables[d], Math.random);\n\n        switch (type) {\n          case 1:\n            CrabEnemy.add(this, this.game, x, y);\n            break;\n          case 2:\n            FrogEnemy.add(this, this.game, x, y);\n            break;\n          case 3:\n            ZombieEnemy.add(this, this.game, x, y);\n            break;\n          case 4:\n            SkullEnemy.add(this, this.game, x, y);\n            break;\n          case 5:\n            EnergyWizardEnemy.add(this, this.game, x, y);\n            break;\n          case 6:\n            ChargeEnemy.add(this, this.game, x, y);\n            break;\n          case 7:\n            RookEnemy.add(this, this.game, x, y);\n            break;\n          case 8:\n            BishopEnemy.add(this, this.game, x, y);\n            break;\n          case 9:\n            ArmoredzombieEnemy.add(this, this.game, x, y);\n            break;\n          case 10:\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 11:\n            QueenEnemy.add(this, this.game, x, y);\n            break;\n          case 12:\n            KnightEnemy.add(this, this.game, x, y);\n            break;\n          case 13:\n            if (addEnemy(new BigKnightEnemy(this, this.game, x, y))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy,\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n          case 14:\n            ZombieEnemy.add(this, this.game, x, y);\n            break;\n          case 15:\n            FireWizardEnemy.add(this, this.game, x, y);\n            break;\n        }\n      }\n    }\n    let spawnerAmounts = [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3,\n    ];\n    if (this.depth > 0) {\n      let spawnerAmount = Game.randTable(spawnerAmounts, Math.random);\n      console.log(`Adding ${spawnerAmount} spawners`);\n      this.addSpawners(spawnerAmount, Math.random);\n    }\n  }\n  private addSpawners(numSpawners: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    if (tiles === null) {\n      console.log(`No tiles left to spawn spawners`);\n      return;\n    }\n    for (let i = 0; i < numSpawners; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      let spawnTable = this.level\n        .getEnemyParameters()\n        .enemyTables[this.depth].filter((t) => t !== 7);\n      Spawner.add(this, this.game, x, y, spawnTable);\n    }\n  }\n  //used for spawn commands, implement elsewhere later\n  /**\n   * Adds a new enemy to the room based on the provided enemy type string.\n   *\n   * @param enemyType - The string identifier for the enemy type.\n   */\n  addNewEnemy = (enemyType: EnemyType): void => {\n    const EnemyClass = EnemyTypeMap[enemyType];\n    if (!EnemyClass) {\n      console.error(`Enemy type \"${enemyType}\" is not recognized.`);\n      return;\n    }\n\n    const tiles = this.getEmptyTiles();\n    if (!tiles || tiles.length === 0) {\n      console.log(`No tiles left to spawn enemies.`);\n      return;\n    }\n\n    const { x, y } = this.getRandomEmptyPosition(tiles);\n    EnemyClass.add(this, this.game, x, y);\n  };\n\n  private addObstacles(numObstacles: number, rand: () => number) {\n    // add crates/barrels\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numObstacles; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n      switch (\n        Game.randTable(\n          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 5, 5, 5],\n          rand,\n        )\n      ) {\n        case 1:\n          Crate.add(this, this.game, x, y);\n          break;\n        case 2:\n          Barrel.add(this, this.game, x, y);\n          break;\n        case 3:\n          TombStone.add(this, this.game, x, y, 1);\n          break;\n        case 4:\n          TombStone.add(this, this.game, x, y, 0);\n          break;\n        case 5:\n          Pumpkin.add(this, this.game, x, y);\n          break;\n      }\n    }\n  }\n\n  private addPlants(numPlants: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numPlants; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n\n      let r = rand();\n      if (r <= 0.45) PottedPlant.add(this, this.game, x, y);\n      else if (r <= 0.65) Pot.add(this, this.game, x, y);\n      else if (r <= 0.75) Rock.add(this, this.game, x, y);\n      else if (r <= 0.97) Mushrooms.add(this, this.game, x, y);\n      else Chest.add(this, this.game, x, y);\n    }\n  }\n\n  private addResources(numResources: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numResources; i++) {\n      const { x, y } = this.getRandomEmptyPosition(tiles);\n\n      let r = rand();\n      if (r <= (10 - this.depth ** 3) / 10)\n        CoalResource.add(this, this.game, x, y);\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\n        GoldResource.add(this, this.game, x, y);\n      else EmeraldResource.add(this, this.game, x, y);\n    }\n  }\n\n  private addVendingMachine(rand: () => number) {\n    const { x, y } = this.getRandomEmptyPosition(this.getEmptyTiles());\n    let table =\n      this.depth > 0\n        ? [1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n        : [1, 1, 1];\n    let type = Game.randTable(table, rand);\n    switch (type) {\n      case 1:\n        VendingMachine.add(this, this.game, x, y, new Heart(this, x, y));\n        break;\n      case 2:\n        VendingMachine.add(this, this.game, x, y, new Lantern(this, x, y));\n        break;\n      case 3:\n        VendingMachine.add(this, this.game, x, y, new Armor(this, x, y));\n        break;\n      case 4:\n        VendingMachine.add(this, this.game, x, y, new DualDagger(this, x, y));\n        break;\n      case 5:\n        VendingMachine.add(this, this.game, x, y, new Spear(this, x, y));\n        break;\n      case 6:\n        VendingMachine.add(this, this.game, x, y, new Shotgun(this, x, y));\n        break;\n      case 7:\n        VendingMachine.add(this, this.game, x, y, new Warhammer(this, x, y));\n        break;\n      case 8:\n        VendingMachine.add(this, this.game, x, y, new Spellbook(this, x, y));\n        break;\n      case 9:\n        VendingMachine.add(this, this.game, x, y, new Torch(this, x, y));\n        break;\n    }\n  }\n\n  populateEmpty = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n  };\n\n  populateDungeon = (rand: () => number) => {\n    //this.addChests(10, rand);\n    let factor = Game.rand(1, 36, rand);\n\n    if (factor < 30) this.addWallBlocks(rand);\n    if (factor % 4 === 0) this.addChasms(rand);\n    this.addRandomTorches(\"medium\");\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 3], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.35 * rand());\n    let numPlants = Math.ceil(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) *\n        Math.min(this.depth * 0.1 + 0.1, 0.35), //this.depth * 0.01 is starting value\n    );\n    this.addEnemies(numEnemies, rand);\n\n    if (factor <= 6) this.addVendingMachine(rand);\n\n    const obstacles = this.checkDoorObstructions();\n    if (obstacles.length > 0) {\n      for (let obstacle of obstacles) {\n        console.log(`Removing obstacle at (${obstacle.x},${obstacle.y})`);\n        this.entities = this.entities.filter((e) => e !== obstacle);\n        obstacle = null;\n      }\n    }\n  };\n  populateBoss = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.2);\n    let numPlants = Math.floor(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) *\n        Math.min(this.depth * 0.05 + 0.2, 0.5),\n    );\n    this.addEnemies(numEnemies, rand);\n  };\n  populateBigDungeon = (rand: () => number) => {\n    if (Game.rand(1, 4, rand) === 1) this.addChasms(rand);\n    this.addRandomTorches(\"medium\");\n\n    if (Game.rand(1, 4, rand) === 1)\n      this.addPlants(\n        Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n        rand,\n      );\n    if (Game.rand(1, 3, rand) === 1)\n      this.addSpikeTraps(Game.randTable([3, 5, 7, 8], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles *\n        (this.depth * 0.5 + 0.5) *\n        Game.randTable([0.05, 0.05, 0.06, 0.07, 0.1], rand),\n    );\n    this.addEnemies(numEnemies, rand);\n    if (numEnemies > 0)\n      this.addObstacles(numEnemies / Game.rand(1, 2, rand), rand);\n    else this.addObstacles(Game.randTable([0, 0, 1, 1, 2, 3, 5], rand), rand);\n  };\n\n  populateSpawner = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    Spawner.add(\n      this,\n      this.game,\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n  };\n\n  populateKeyRoom = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.items.push(\n      new GoldenKey(\n        this,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2),\n      ),\n    );\n  };\n  populateFountain = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    let centerX = Math.floor(this.roomX + this.width / 2);\n    let centerY = Math.floor(this.roomY + this.height / 2);\n    for (let x = centerX - 1; x <= centerX + 1; x++) {\n      for (let y = centerY - 1; y <= centerY + 1; y++) {\n        this.roomArray[x][y] = new FountainTile(\n          this,\n          x,\n          y,\n          x - (centerX - 1),\n          y - (centerY - 1),\n        );\n      }\n    }\n\n    this.addPlants(Game.randTable([0, 0, 1, 2], rand), rand);\n  };\n  placeCoffin = (x: number, y: number) => {\n    this.roomArray[x][y] = new CoffinTile(this, x, y, 0);\n    this.roomArray[x][y + 1] = new CoffinTile(this, x, y + 1, 1);\n  };\n  populateCoffin = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2 - 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2),\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2) + 2,\n      Math.floor(this.roomY + this.height / 2),\n    );\n  };\n  populatePuzzle = (rand: () => number) => {\n    let d;\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      let y = this.roomY + Math.floor(this.height / 2);\n      if (x === this.roomX + Math.floor(this.width / 2)) {\n        d = new InsideLevelDoor(this, this.game, x, y + 1);\n        this.roomArray[x][y + 1] = d;\n      } else {\n        this.roomArray[x][y] = new Wall(this, x, y);\n      }\n    }\n\n    let x = Game.rand(this.roomX, this.roomX + this.width - 1, rand);\n    let y = Game.rand(\n      this.roomY + Math.floor(this.height / 2) + 3,\n      this.roomY + this.height - 2,\n      rand,\n    );\n\n    this.roomArray[x][y] = new Button(this, x, y, d);\n\n    let crateTiles = this.getEmptyTiles().filter(\n      (t) =>\n        t.x >= this.roomX + 1 &&\n        t.x <= this.roomX + this.width - 2 &&\n        t.y >= this.roomY + Math.floor(this.height / 2) + 3 &&\n        t.y <= this.roomY + this.height - 2,\n    );\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\n\n    for (let i = 0; i < numCrates; i++) {\n      let t = crateTiles.splice(\n        Game.rand(0, crateTiles.length - 1, rand),\n        1,\n      )[0];\n\n      this.entities.push(new Crate(this, this.game, t.x, t.y));\n    }\n    this.addPlants(\n      Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n      rand,\n    );\n  };\n  populateSpikeCorridor = (rand: () => number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        this.roomArray[x][y] = new SpikeTrap(this, x, y, Game.rand(0, 3, rand));\n      }\n    }\n\n    this.addRandomTorches(\"medium\");\n  };\n  populateTreasure = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    this.addChests(Game.randTable([4, 4, 5, 5, 5, 6, 8], rand), rand);\n    this.addPlants(Game.randTable([0, 1, 2, 4, 5, 6], rand), rand);\n  };\n  populateCave = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    this.addWallBlocks(rand);\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand),\n    );\n    this.addEnemies(numEnemies, rand);\n    this.addResources(\n      (numEmptyTiles - numEnemies) * Game.randTable([0.5, 0.6, 0.7, 0.8], rand),\n      rand,\n    );\n  };\n  populateUpLadder = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x][y] = new UpLadder(this, this.game, x, y);\n  };\n  populateDownLadder = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    this.roomArray[x][y] = new DownLadder(this, this.game, x, y);\n  };\n  populateRopeHole = (rand: () => number) => {\n    this.addRandomTorches(\"medium\");\n\n    const { x, y } = this.getRoomCenter();\n    let d = new DownLadder(this, this.game, x, y);\n    d.isRope = true;\n    this.roomArray[x][y] = d;\n  };\n  populateRopeCave = (rand: () => number) => {\n    const { x, y } = this.getRoomCenter();\n    let upLadder = new UpLadder(this, this.game, x, y);\n    upLadder.isRope = true;\n    this.roomArray[x][y] = upLadder;\n  };\n  populateShop = (rand: () => number) => {\n    this.addTorches(2, rand);\n\n    const { x, y } = this.getRoomCenter();\n    VendingMachine.add(this, this.game, x - 2, y - 1, new Shotgun(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y - 1, new Heart(this, 0, 0));\n    VendingMachine.add(this, this.game, x - 2, y + 2, new Armor(this, 0, 0));\n    VendingMachine.add(this, this.game, x + 2, y + 2, new Spear(this, 0, 0));\n\n    const obstacles = this.checkDoorObstructions();\n    if (obstacles.length > 0) {\n    }\n    for (let obstacle of obstacles) {\n      this.entities = this.entities.filter((e) => e !== obstacle);\n      obstacle = null;\n    }\n  };\n\n  populate = (rand: () => number) => {\n    this.name = \"\";\n    switch (this.type) {\n      case RoomType.START:\n        this.populateEmpty(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.BOSS:\n        this.populateBoss(rand);\n        this.name = \"BOSS\";\n        break;\n      case RoomType.DUNGEON:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGDUNGEON:\n        this.populateBigDungeon(rand);\n        break;\n      case RoomType.FOUNTAIN:\n        this.populateFountain(rand);\n        break;\n      case RoomType.COFFIN:\n        this.populateCoffin(rand);\n        break;\n      case RoomType.PUZZLE:\n        this.populatePuzzle(rand);\n        break;\n      case RoomType.SPIKECORRIDOR:\n        this.populateSpikeCorridor(rand);\n        break;\n      case RoomType.TREASURE:\n        this.populateTreasure(rand);\n        break;\n      case RoomType.KEYROOM:\n        this.populateKeyRoom(rand);\n        break;\n      case RoomType.GRASS:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGCAVE:\n        this.populateCave(rand);\n      case RoomType.CAVE:\n        this.populateCave(rand);\n        break;\n      case RoomType.UPLADDER:\n        this.populateUpLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.DOWNLADDER:\n        this.populateDownLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.ROPEHOLE:\n        this.populateRopeHole(rand);\n        break;\n      case RoomType.ROPECAVE:\n        this.populateRopeCave(rand);\n        break;\n      case RoomType.SHOP:\n        /* shop rates:\n         * 10 coal for an gold coin\n         * 1 gold for 10 coins\n         * 1 emerald for 100 coins\n         *\n         * shop items:\n         * 1 empty heart   4 ^ (maxHealth + maxHealth ^ 1.05 ^ maxHealth - 2.05) coins\n         * fill all hearts  1 coin\n         * better torch    5 ^ (torchLevel + 1.05 ^ torchLevel - 2.05) coins\n         * weapons\n         */\n\n        this.populateShop(rand);\n        break;\n      case RoomType.SPAWNER:\n        this.populateSpawner(rand);\n        break;\n    }\n    this.message = this.name;\n  };\n\n  addDoor = (x: number, y: number) => {\n    let d;\n    let t = DoorType.DOOR;\n    if (this.type === RoomType.BOSS) t = DoorType.GUARDEDDOOR;\n    if (this.type === RoomType.KEYROOM) t = DoorType.LOCKEDDOOR;\n    if (x === this.roomX) {\n      d = new Door(this, this.game, x, y, Direction.RIGHT, t);\n      this.roomArray[x + 1][y] = new SpawnFloor(this, x + 1, y);\n    } else if (x === this.roomX + this.width - 1) {\n      d = new Door(this, this.game, x, y, Direction.LEFT, t);\n      this.roomArray[x - 1][y] = new SpawnFloor(this, x - 1, y);\n    } else if (y === this.roomY) {\n      d = new Door(this, this.game, x, y, Direction.UP, t);\n      this.roomArray[x][y + 1] = new SpawnFloor(this, x, y + 1);\n    } else if (y === this.roomY + this.height - 1) {\n      d = new Door(this, this.game, x, y, Direction.DOWN, t);\n      this.roomArray[x][y - 1] = new SpawnFloor(this, x, y - 1);\n    }\n\n    this.doors.push(d);\n    if (this.roomArray[d.x] == undefined) {\n    }\n    this.roomArray[d.x][d.y] = d;\n\n    return d;\n  };\n\n  alertEnemiesOnEntry = () => {\n    for (const e of this.entities) {\n      if (e instanceof Enemy) e.lookForPlayer();\n    }\n  };\n\n  exitLevel = () => {\n    this.particles.splice(0, this.particles.length);\n  };\n\n  enterLevel = (player: Player) => {\n    player.moveSnap(this.getRoomCenter().x, this.getRoomCenter().y);\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.calculateWallInfo();\n    this.message = this.name;\n    player.map.saveMapData();\n    this.setReverb();\n  };\n\n  enterLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    if (door instanceof Door && door.doorDir === Direction.UP) {\n      //if top door\n      (door as Door).opened = true;\n      player.moveNoSmooth(door.x, door.y + 1);\n    } else if (door instanceof Door && door.doorDir === Direction.DOWN) {\n      //if bottom door\n      player.moveNoSmooth(door.x, door.y - 1);\n    } else if (\n      door instanceof Door &&\n      [Direction.RIGHT, Direction.LEFT].includes(door.doorDir)\n    ) {\n      // if side door\n      player.moveNoSmooth(door.x + side, door.y);\n    }\n\n    this.clearDeadStuff();\n    this.calculateWallInfo();\n    this.updateLighting();\n    this.entered = true;\n\n    this.particles = [];\n\n    this.alertEnemiesOnEntry();\n    this.message = this.name;\n    player.map.saveMapData();\n    this.setReverb();\n  };\n\n  enterLevelThroughLadder = (player: Player, ladder: any) => {\n    player.moveSnap(ladder.x, ladder.y + 1);\n\n    this.clearDeadStuff();\n    this.calculateWallInfo();\n    this.updateLighting();\n    this.entered = true;\n\n    this.message = this.name;\n    player.map.saveMapData();\n    this.setReverb();\n  };\n\n  getEmptyTiles = (): Tile[] => {\n    let returnVal: Tile[] = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (\n          !this.roomArray[x][y].isSolid() &&\n          !(this.roomArray[x][y] instanceof SpikeTrap) &&\n          !(this.roomArray[x][y] instanceof SpawnFloor)\n        ) {\n          returnVal.push(this.roomArray[x][y]);\n        }\n      }\n    }\n    for (const e of this.entities) {\n      returnVal = returnVal.filter((t) => !e.pointIn(t.x, t.y));\n    }\n    return returnVal;\n  };\n\n  getTile = (x: number, y: number) => {\n    if (this.roomArray[x]) return this.roomArray[x][y];\n    else return undefined;\n  };\n\n  fadeLighting = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const visDiff = Math.abs(this.softVis[x][y] - this.vis[x][y]);\n        if (visDiff >= 0.05) {\n          if (this.softVis[x][y] < this.vis[x][y])\n            this.softVis[x][y] += (visDiff / 10) * delta;\n          else if (this.softVis[x][y] > this.vis[x][y])\n            this.softVis[x][y] -= (visDiff / 10) * delta;\n        }\n\n        // if (this.softVis[x][y] < 0.01) this.softVis[x][y] = 0;\n      }\n    }\n  };\n\n  fadeRgb = (delta: number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const linearSoftCol = this.softCol[x][y];\n        const linearCol = this.col[x][y];\n        let diffR = Math.abs(linearCol[0] - linearSoftCol[0]);\n        if (diffR >= 16) {\n          if (linearSoftCol[0] < linearCol[0])\n            linearSoftCol[0] += (20 * delta) / 2;\n          else if (linearSoftCol[0] > linearCol[0])\n            linearSoftCol[0] -= (20 * delta) / 2;\n        }\n        let diffG = Math.abs(linearCol[1] - linearSoftCol[1]);\n        if (diffG >= 8) {\n          if (linearSoftCol[1] < linearCol[1])\n            linearSoftCol[1] += (20 * delta) / 2;\n          else if (linearSoftCol[1] > linearCol[1])\n            linearSoftCol[1] -= (20 * delta) / 2;\n        }\n        let diffB = Math.abs(linearCol[2] - linearSoftCol[2]);\n        if (diffB >= 8) {\n          if (linearSoftCol[2] < linearCol[2])\n            linearSoftCol[2] += (20 * delta) / 2;\n          else if (linearSoftCol[2] > linearCol[2])\n            linearSoftCol[2] -= (20 * delta) / 2;\n        }\n        this.softCol[x][y] = linearSoftCol;\n      }\n    }\n  };\n\n  updateLighting = () => {\n    // Start timing the initial setup\n    //console.time(\"updateLighting: Initial Setup\");\n\n    let oldVis = [];\n    let oldCol = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      oldVis[x] = [];\n      oldCol[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        oldVis[x][y] = this.vis[x][y];\n        oldCol[x][y] = this.col[x][y];\n\n        this.vis[x][y] = 1;\n        this.col[x][y] = [1, 1, 1];\n        this.renderBuffer[x][y] = [];\n      }\n    }\n    // End timing the initial setup\n    //console.timeEnd(\"updateLighting: Initial Setup\");\n\n    // Start timing the processing of light sources\n    //console.time(\"updateLighting: Process LightSources\");\n\n    for (const l of this.lightSources) {\n      if (l.shouldUpdate()) {\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          this.castTintAtAngle(i, l.x, l.y, l.r, l.c, l.b); // RGB color in sRGB\n        }\n      }\n    }\n    // End timing the processing of light sources\n    //console.timeEnd(\"updateLighting: Process LightSources\");\n\n    // Start timing the processing of player lighting\n    //console.time(\"updateLighting: Process Players\");\n    for (const p in this.game.players) {\n      let player = this.game.players[p];\n      if (this === this.game.rooms[player.levelID]) {\n        //console.log(`i: ${player.angle}`);\n        let viewAngle = 360;\n        let viewAngleEnd = player.angle + viewAngle / 2;\n        const offsetX =\n          player.angle === 0 ? 0.7 : player.angle === 180 ? -0.7 : 0;\n        const offsetY =\n          player.angle === 90 ? 0.7 : player.angle === 270 ? -0.7 : 0;\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          let lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\n\n          if (player.lightEquipped)\n            lightColor = LevelConstants.TORCH_LIGHT_COLOR;\n          this.castTintAtAngle(\n            i,\n            player.x + 0.5,\n            player.y + 0.5,\n            Math.min(\n              Math.max(\n                player.sightRadius - this.depth + 2,\n                Player.minSightRadius,\n              ),\n              10,\n            ),\n            lightColor, // RGB color in sRGB\n            5, // intensity\n          );\n        }\n      }\n    }\n    // End timing the processing of player lighting\n    //console.timeEnd(\"updateLighting: Process Players\");\n\n    // Start timing the blending of colors\n    //console.time(\"updateLighting: Blend Colors Array\");\n    const roomX = this.roomX;\n    const roomY = this.roomY;\n    const width = this.width;\n    const height = this.height;\n    const renderBuffer = this.renderBuffer;\n\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.col[x][y] = this.blendColorsArray(renderBuffer[x][y]);\n      }\n    }\n    // End timing the blending of colors\n    //console.timeEnd(\"updateLighting: Blend Colors Array\");\n\n    // Start timing the conversion to luminance\n    //console.time(\"updateLighting: Convert to Luminance\");\n    for (let x = roomX; x < roomX + width; x++) {\n      for (let y = roomY; y < roomY + height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n    // End timing the conversion to luminance\n    //console.timeEnd(\"updateLighting: Convert to Luminance\");\n  };\n  updateLightSources = (lightSource?: LightSource, remove?: boolean) => {\n    this.oldCol = [];\n    this.oldVis = [];\n    this.oldCol = this.col;\n    this.oldVis = this.vis;\n    if (lightSource) {\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n        if (!remove) {\n          this.castTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          ); // RGB color in sRGB\n        } else {\n          this.unCastTintAtAngle(\n            i,\n            lightSource.x,\n            lightSource.y,\n            lightSource.r,\n            lightSource.c,\n            lightSource.b,\n          );\n        }\n      }\n    }\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.col[x][y] = this.blendColorsArray(this.renderBuffer[x][y]);\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\n      }\n    }\n  };\n  revertLightSources = () => {\n    //console.log(\"reverting lighting\");\n    this.oldCol = [];\n    this.oldVis = [];\n    this.col = this.oldCol;\n    this.vis = this.oldVis;\n  };\n\n  castShadowsAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    oldVis: number[][],\n  ) => {\n    let dx = Math.cos((angle * Math.PI) / 180);\n    let dy = Math.sin((angle * Math.PI) / 180);\n    let onOpaqueSection = false;\n    for (let i = 0; i < radius + 1.5; i++) {\n      if (!this.isPositionInRoom(px, py)) return; // we're outside the level\n\n      let tile = this.roomArray[Math.floor(px)][Math.floor(py)];\n      if (tile.isOpaque()) {\n        if (i > 0) onOpaqueSection = true;\n      } else if (onOpaqueSection) {\n        return;\n      }\n\n      this.vis[Math.floor(px)][Math.floor(py)] = Math.min(\n        this.vis[Math.floor(px)][Math.floor(py)],\n        Math.min(i / radius, 1),\n      );\n\n      px += dx;\n      py += dy;\n    }\n  };\n\n  /**\n   * Casts or uncategorizes a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast or uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   * @param action - 'cast' to add tint, 'unCast' to remove tint.\n   */\n  private processTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n    action: \"cast\" | \"unCast\" = \"cast\",\n  ) => {\n    const dx = Math.cos((angle * Math.PI) / 180);\n    const dy = Math.sin((angle * Math.PI) / 180);\n\n    // Convert input color from sRGB to linear RGB\n    const linearColor: [number, number, number] = [\n      this.sRGBToLinear(color[0]),\n      this.sRGBToLinear(color[1]),\n      this.sRGBToLinear(color[2]),\n    ];\n\n    for (\n      let i = 0;\n      i <= Math.min(LevelConstants.LIGHTING_MAX_DISTANCE, radius);\n      i++\n    ) {\n      const currentX = Math.floor(px + dx * i);\n      const currentY = Math.floor(py + dy * i);\n\n      if (!this.isPositionInRoom(currentX, currentY)) return; // Outside the room\n\n      const tile = this.roomArray[currentX][currentY];\n      if (tile.isOpaque()) {\n        return; // Stop processing through opaque tiles\n      }\n\n      // Handle i=0 separately to ensure correct intensity\n      let intensity: number;\n      if (i === 0) {\n        intensity = brightness * 0.1;\n      } else {\n        intensity = brightness / Math.E ** i;\n      }\n      if (intensity < 0.005) intensity = 0;\n\n      if (intensity <= 0) continue;\n\n      if (!this.renderBuffer[currentX]) {\n        this.renderBuffer[currentX] = [];\n      }\n      if (!this.renderBuffer[currentX][currentY]) {\n        this.renderBuffer[currentX][currentY] = [];\n      }\n\n      const weightedLinearColor: [number, number, number, number] = [\n        linearColor[0],\n        linearColor[1],\n        linearColor[2],\n        intensity,\n      ];\n\n      if (action === \"cast\") {\n        this.renderBuffer[currentX][currentY].push(weightedLinearColor);\n      } else if (action === \"unCast\") {\n        this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\n          currentY\n        ].filter(\n          (colorEntry) =>\n            !(\n              Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\n              Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\n              Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\n              Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\n            ),\n        );\n      }\n    }\n  };\n\n  /**\n   * Casts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to cast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  castTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(angle, px, py, radius, color, brightness, \"cast\");\n  };\n\n  /**\n   * Uncasts a tint from a light source at a specific angle.\n   *\n   * @param angle - The angle in degrees at which to uncast the tint.\n   * @param px - The x-coordinate of the light source.\n   * @param py - The y-coordinate of the light source.\n   * @param radius - The radius of the light's influence.\n   * @param color - The RGB color tuple representing the tint.\n   * @param brightness - The brightness of the light source.\n   */\n  unCastTintAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number,\n    color: [number, number, number],\n    brightness: number,\n  ) => {\n    this.processTintAtAngle(angle, px, py, radius, color, brightness, \"unCast\");\n  };\n\n  private sRGBToLinear = (value: number): number => {\n    const normalized = value / 255;\n    if (normalized <= 0.04045) {\n      return normalized / 12.92;\n    } else {\n      return Math.pow((normalized + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  private linearToSRGB = (value: number): number => {\n    if (value <= 0.0031308) {\n      return Math.round(12.92 * value * 255);\n    } else {\n      return Math.round(\n        (1.055 * Math.pow(value, 1 / 2.2 /*gamma*/) - 0.055) * 255,\n      );\n    }\n  };\n\n  private clamp = (value: number, min: number = 0, max: number = 1): number => {\n    return Math.min(Math.max(value, min), max);\n  };\n\n  /**\n   * Blends an array of RGB colors into a single color without excessive darkness or clipping to white.\n   *\n   * @param colors - An array of RGB tuples to blend.\n   * @returns A single RGB tuple representing the blended color.\n   */\n  private blendColorsArray = (\n    colors: [red: number, green: number, blue: number, alpha: number][],\n  ): [red: number, green: number, blue: number] => {\n    if (colors.length === 0) return [0, 0, 0];\n\n    // Sum all color channels in linear RGB\n    const sum = colors.reduce(\n      (accumulator, color) => [\n        accumulator[0] + color[0] * color[3],\n        accumulator[1] + color[1] * color[3],\n        accumulator[2] + color[2] * color[3],\n      ],\n      [0, 0, 0],\n    );\n\n    // Apply scaling factor to manage overall brightness\n    const scalingFactor = 0.45 * 2.5; // Adjust as needed\n    const scaledSum = [\n      sum[0] * scalingFactor,\n      sum[1] * scalingFactor,\n      sum[2] * scalingFactor,\n    ];\n\n    // Clamp each channel to [0, 1] to prevent overflow\n    const clampedSum: [number, number, number] = [\n      this.clamp(scaledSum[0], 0, 1),\n      this.clamp(scaledSum[1], 0, 1),\n      this.clamp(scaledSum[2], 0, 1),\n    ];\n    // Convert back to sRGB\n    return [\n      this.linearToSRGB(clampedSum[0]),\n      this.linearToSRGB(clampedSum[1]),\n      this.linearToSRGB(clampedSum[2]),\n    ];\n  };\n\n  blur3x3 = (\n    array: Array<Array<number>>,\n    weights: Array<Array<number>>,\n  ): Array<Array<number>> => {\n    let blurredArray = [];\n    for (let x = 0; x < array.length; x++) {\n      blurredArray[x] = [];\n      for (let y = 0; y < array[0].length; y++) {\n        if (array[x][y] === 0) {\n          blurredArray[x][y] = 0;\n          continue;\n        }\n        let total = 0;\n        let totalWeights = 0;\n        for (let xx = -1; xx <= 1; xx++) {\n          for (let yy = -1; yy <= 1; yy++) {\n            if (\n              x + xx >= 0 &&\n              x + xx < array.length &&\n              y + yy >= 0 &&\n              y + yy < array[0].length\n            ) {\n              total += array[x + xx][y + yy] * weights[xx + 1][yy + 1];\n              totalWeights += weights[xx + 1][yy + 1];\n            }\n          }\n        }\n        blurredArray[x][y] = total / totalWeights;\n      }\n    }\n    return blurredArray;\n  };\n\n  rgbToLuminance = (color: [number, number, number]): number => {\n    //map to 1-0 range\n    return 1 - (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  };\n\n  catchUp = () => {\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\n  };\n\n  tickHitWarnings = () => {\n    for (const h of this.hitwarnings) {\n      if (h.parent && (h.parent.dead || h.parent.unconscious)) {\n        h.tick();\n      }\n    }\n  };\n\n  tick = (player: Player) => {\n    player.updateSlowMotion();\n    this.lastEnemyCount = this.entities.filter(\n      (e) => e instanceof Enemy,\n    ).length;\n    for (const h of this.hitwarnings) {\n      h.tick();\n    }\n    for (const p of this.projectiles) {\n      p.tick();\n    }\n\n    this.clearDeadStuff();\n\n    this.calculateWallInfo();\n    this.entities = this.entities.filter((e) => !e.dead);\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tick();\n      }\n    }\n\n    this.turn = TurnState.computerTurn;\n\n    //player.actionTab.setState(ActionState.WAIT);\n    //sets the action tab state to Ready\n    this.playerTurnTime = Date.now();\n    this.playerTicked = player;\n\n    // Update Beam Effects lighting\n\n    //console.log(\"updating lighting\");\n    this.updateLighting();\n\n    player.map.saveMapData();\n    this.clearDeadStuff();\n  };\n\n  update = () => {\n    if (this.turn == TurnState.computerTurn) {\n      if (\n        Date.now() - this.playerTurnTime >=\n        LevelConstants.COMPUTER_TURN_DELAY\n      ) {\n        this.computerTurn();\n      }\n    }\n  };\n\n  clearDeadStuff = () => {\n    this.entities = this.entities.filter((e) => !e.dead);\n    this.projectiles = this.projectiles.filter((p) => !p.dead);\n    this.hitwarnings = this.hitwarnings.filter((h) => !h.dead);\n    this.particles = this.particles.filter((p) => !p.dead);\n  };\n\n  computerTurn = () => {\n    // take computer turn\n    for (const e of this.entities) {\n      e.tick();\n    }\n    this.entities = this.entities.filter((e) => !e.dead);\n    for (const i of this.items) {\n      i.tick();\n    }\n\n    for (const h of this.hitwarnings) {\n      if (\n        !this.roomArray[h.x] ||\n        !this.roomArray[h.x][h.y] ||\n        this.roomArray[h.x][h.y].isSolid()\n      ) {\n        h.dead = true;\n      }\n      h.removeOverlapping();\n    }\n\n    for (const p of this.projectiles) {\n      if (this.roomArray[p.x][p.y].isSolid()) p.dead = true;\n      for (const i in this.game.players) {\n        if (\n          this.game.rooms[this.game.players[i].levelID] === this &&\n          p.x === this.game.players[i].x &&\n          p.y === this.game.players[i].y\n        ) {\n          p.hitPlayer(this.game.players[i]);\n        }\n      }\n      for (const e of this.entities) {\n        if (p.x === e.x && p.y === e.y) {\n          p.hitEnemy(e);\n        }\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tickEnd();\n      }\n    }\n    this.entities = this.entities.filter((e) => !e.dead); // enemies may be killed by spiketrap\n\n    this.clearDeadStuff();\n\n    this.playerTicked.finishTick();\n\n    this.checkForNoEnemies();\n    //console.log(this.entities.filter((e) => e instanceof Enemy).length);\n\n    this.turn = TurnState.playerTurn;\n  };\n\n  checkForNoEnemies = () => {\n    let enemies = this.entities.filter((e) => e instanceof Enemy);\n    if (enemies.length === 0 && this.lastEnemyCount > 0) {\n      // if (this.doors[0].type === DoorType.GUARDEDDOOR) {\n      this.doors.forEach((d) => {\n        if (d.type === DoorType.GUARDEDDOOR) {\n          d.unGuard();\n          this.game.pushMessage(\n            \"The foes have been slain and the door allows you passage.\",\n          );\n        }\n      });\n    }\n  };\n\n  draw = (delta: number) => {\n    HitWarning.updateFrame(delta);\n    this.fadeLighting(delta);\n    this.fadeRgb(delta);\n  };\n\n  drawColorLayer = () => {\n    Game.ctx.globalCompositeOperation = \"soft-light\";\n    Game.ctx.globalAlpha = 0.6;\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const [r, g, b] = this.softCol[x][y];\n        if (r === 0 && g === 0 && b === 0) continue; // Skip if no color\n        Game.ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${1 - this.vis[x][y]})`;\n        Game.ctx.fillRect(\n          x * GameConstants.TILESIZE,\n          y * GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n          GameConstants.TILESIZE,\n        );\n      }\n    }\n    // Set composite operation if needed\n    Game.ctx.globalCompositeOperation = \"source-over\";\n    Game.ctx.globalAlpha = 0.75;\n  };\n\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\n    let tiles = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1) this.roomArray[x][y].drawUnderPlayer(delta);\n        tiles.push(this.roomArray[x][y]);\n      }\n    }\n\n    let drawables = new Array<Drawable>();\n\n    drawables = drawables.concat(\n      tiles,\n      this.entities,\n      this.hitwarnings,\n      this.projectiles,\n      this.particles,\n      this.items,\n    );\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this) {\n        if (\n          !(\n            skipLocalPlayer &&\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\n          )\n        )\n          drawables.push(this.game.players[i]);\n      }\n    }\n    drawables.sort((a, b) => {\n      if (a instanceof Floor) {\n        return -1;\n      } else if (b instanceof Floor) {\n        return 1;\n      }\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\n        if (a instanceof Player) {\n          return 1;\n        } else if (b instanceof Player) {\n          return -1;\n        } else if (a instanceof Entity) {\n          return 1;\n        } else if (b instanceof Entity) {\n          return -1;\n        } else return 0;\n      } else {\n        return a.drawableY - b.drawableY;\n      }\n    });\n\n    for (const d of drawables) {\n      d.draw(delta);\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1) this.roomArray[x][y].drawAbovePlayer(delta);\n      }\n    }\n\n    for (const i of this.items) {\n      i.drawTopLayer(delta);\n    }\n  };\n\n  drawShade = (delta: number) => {\n    let bestSightRadius = 0;\n    for (const p in this.game.players) {\n      Game.ctx.globalCompositeOperation = \"soft-light\";\n      Game.ctx.globalAlpha = 0.75;\n      if (\n        this.game.rooms[this.game.players[p].levelID] === this &&\n        this.game.players[p].defaultSightRadius > bestSightRadius\n      ) {\n        bestSightRadius = this.game.players[p].defaultSightRadius;\n      }\n    }\n    let shadingAlpha = Math.max(0, Math.min(0.8, 2 / bestSightRadius));\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = 0.25;\n      Game.ctx.fillStyle = this.shadeColor;\n      Game.ctx.fillRect(\n        (this.roomX - LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.roomY - LevelConstants.SCREEN_H) * GameConstants.TILESIZE,\n        (this.width + 2 * LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.height + 2 * LevelConstants.SCREEN_H) * GameConstants.TILESIZE,\n      );\n      Game.ctx.globalAlpha = 1;\n      Game.ctx.globalCompositeOperation = \"source-over\";\n    }\n  };\n\n  drawOverShade = (delta: number) => {\n    for (const e of this.entities) {\n      e.drawTopLayer(delta); // health bars\n    }\n\n    for (const p of this.projectiles) {\n      p.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"overlay\";\n    for (const h of this.hitwarnings) {\n      h.drawTopLayer(delta);\n    }\n    //Game.ctx.globalCompositeOperation = \"source-over\";\n\n    for (const s of this.particles) {\n      s.drawTopLayer(delta);\n    }\n    // draw over dithered shading\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawAboveShading(delta);\n      }\n    }\n  };\n\n  // for stuff rendered on top of the player\n  drawTopLayer = (delta: number) => {\n    // gui stuff\n\n    // room name\n    let old = Game.ctx.font;\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      this.message,\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\n      5,\n    );\n    Game.ctx.font = old;\n  };\n\n  calculateWallInfo() {\n    this.wallInfo.clear();\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        const tile = this.getTile(x, y);\n        if (tile instanceof Wall || tile instanceof WallTorch) {\n          const isTopWall = y === this.roomY;\n          const isBottomWall = y === this.roomY + this.height - 1;\n          const isLeftWall = x === this.roomX;\n          const isRightWall = x === this.roomX + this.width - 1;\n          const isInnerWall =\n            !isTopWall && !isBottomWall && !isLeftWall && !isRightWall;\n          const isBelowDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y + 1)?.isDoor;\n          const isAboveDoorWall =\n            y < this.roomY + this.height - 1 && this.getTile(x, y - 1)?.isDoor;\n          const isDoorWall =\n            y < this.roomY + this.height && this.getTile(x, y + 1)?.isDoor;\n\n          let innerWallType = null;\n          if (isInnerWall) {\n            const hasWallAbove = this.getTile(x, y - 1) instanceof Wall;\n            const hasWallBelow = this.getTile(x, y + 1) instanceof Wall;\n\n            if (!hasWallAbove && hasWallBelow) {\n              innerWallType = \"topInner\";\n            } else if (hasWallAbove && !hasWallBelow) {\n              innerWallType = \"bottomInner\";\n            } else if (hasWallAbove && hasWallBelow) {\n              innerWallType = \"surroundedInner\";\n            } else {\n              innerWallType = \"isolatedInner\";\n            }\n          }\n\n          this.wallInfo.set(`${x},${y}`, {\n            isTopWall,\n            isBottomWall,\n            isLeftWall,\n            isRightWall,\n            isInnerWall,\n            isBelowDoorWall,\n            isDoorWall,\n            innerWallType,\n            isAboveDoorWall,\n            shouldDrawBottom:\n              isDoorWall ||\n              isBelowDoorWall ||\n              (isTopWall && !isLeftWall && !isRightWall) ||\n              isInnerWall,\n          });\n        }\n      }\n    }\n  }\n\n  // This pattern appears in multiple methods like addVendingMachine, addChests, addSpikes, etc.\n  private getRandomEmptyPosition(tiles: Tile[]): { x: number; y: number } {\n    if (tiles.length === 0) return null;\n    const tile = tiles.splice(\n      Game.rand(0, tiles.length - 1, Random.rand),\n      1,\n    )[0];\n    return { x: tile.x, y: tile.y };\n  }\n\n  // Used in populateUpLadder, populateDownLadder, populateRopeHole, populateRopeCave\n  private getRoomCenter(): { x: number; y: number } {\n    return {\n      x: Math.floor(this.roomX + this.width / 2),\n      y: Math.floor(this.roomY + this.height / 2),\n    };\n  }\n  // Many populate methods start with adding torches using the same pattern\n  private addRandomTorches(\n    intensity: \"none\" | \"low\" | \"medium\" | \"high\" = \"medium\",\n  ): void {\n    const torchPatterns = {\n      none: [0, 0, 0],\n      low: [0, 0, 0, 1, 1],\n      medium: [0, 0, 0, 1, 1, 2, 2, 3, 4],\n      high: [1, 1, 2, 2, 3, 4, 4],\n    };\n    const randTorches = Game.randTable(torchPatterns[intensity], Random.rand);\n    this.addTorches(randTorches, Random.rand);\n  }\n\n  // Used in populateDungeon, populateCave, etc. NOT IN USE\n  private populateWithEntities(config: {\n    enemyDensity: number;\n    obstacleDensity: number;\n    plantDensity: number;\n  }): void {\n    const numEmptyTiles = this.getEmptyTiles().length;\n    const numEnemies = Math.ceil(numEmptyTiles * config.enemyDensity);\n    const numObstacles = Math.ceil(numEmptyTiles * config.obstacleDensity);\n    const numPlants = Math.ceil(numEmptyTiles * config.plantDensity);\n\n    this.addEnemies(numEnemies, Random.rand);\n    this.addObstacles(numObstacles, Random.rand);\n    this.addPlants(numPlants, Random.rand);\n  }\n\n  // Used in multiple methods including castShadowsAtAngle\n  isPositionInRoom(x: number, y: number): boolean {\n    return !(\n      Math.floor(x) < this.roomX ||\n      Math.floor(x) >= this.roomX + this.width ||\n      Math.floor(y) < this.roomY ||\n      Math.floor(y) >= this.roomY + this.height\n    );\n  }\n\n  pathIsBlockedBy(tile: Tile, otherTile: Tile): Entity[] {\n    const entities = [];\n    if (tile.isSolid()) entities.push(tile);\n    if (otherTile.isSolid()) entities.push(otherTile);\n    return entities;\n  }\n\n  checkDoorObstructions = () => {\n    let obstacles = [];\n    for (const door of this.doors) {\n      for (const otherDoor of this.doors) {\n        if (door === otherDoor || door === null || otherDoor === null) break;\n        const pathObstacles = this.findPath(door, otherDoor);\n        if (pathObstacles.length > 0) {\n        }\n        obstacles.push(...pathObstacles);\n      }\n    }\n    return obstacles;\n  };\n\n  findPath = (startTile: Tile, targetTile: Tile): Array<Entity> => {\n    let disablePositions = Array<astar.Position>();\n    let obstacleCandidates = [];\n\n    for (const e of this.entities) {\n      if (e instanceof VendingMachine || e instanceof Rock) {\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n        obstacleCandidates.push(e);\n      }\n    }\n\n    /*\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n        if (\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\n        ) {\n          // Don't walk on active spike traps\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\n        }\n      }\n    }\n      */\n    // Create a grid of the room\n    let grid = [];\n    for (let x = 0; x < this.roomX + this.width; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.roomY + this.height; y++) {\n        if (this.roomArray[x] && this.roomArray[x][y])\n          grid[x][y] = this.roomArray[x][y];\n        else grid[x][y] = false;\n      }\n    }\n\n    // Find a path to the target player\n    let moves = astar.AStar.search(\n      grid,\n      startTile,\n      targetTile,\n      disablePositions,\n      false,\n      false,\n      false,\n    );\n    if (moves.length === 0) {\n      return obstacleCandidates;\n    } else {\n      return [];\n    }\n  };\n\n  // Could encapsulate the common drawing logic NOT IN USE\n  private drawLayer(\n    delta: number,\n    condition: (x: number, y: number) => boolean,\n    method: string,\n  ): void {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (condition(x, y)) {\n          this.roomArray[x][y][method](delta);\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds a new BeamEffect to the room.\n   *\n   * @param x1 - Starting tile X coordinate.\n   * @param y1 - Starting tile Y coordinate.\n   * @param x2 - Ending tile X coordinate.\n   * @param y2 - Ending tile Y coordinate.\n   */\n  public addBeamEffect(x1: number, y1: number, x2: number, y2: number): void {\n    const beam = new BeamEffect(x1, y1, x2, y2);\n    this.beamEffects.push(beam);\n  }\n}\n","import { Game } from \"./game\";\nimport { ReverbEngine } from \"./reverb\";\n\nexport class Sound {\n  static playerStoneFootsteps: Array<HTMLAudioElement>;\n  static enemyFootsteps: Array<HTMLAudioElement>;\n  static hitSounds: Array<HTMLAudioElement>;\n  static enemySpawnSound: HTMLAudioElement;\n  static chestSounds: Array<HTMLAudioElement>;\n  static coinPickupSounds: Array<HTMLAudioElement>;\n  static miningSounds: Array<HTMLAudioElement>;\n  static breakRockSound: HTMLAudioElement;\n  static hurtSounds: Array<HTMLAudioElement>;\n  static genericPickupSound: HTMLAudioElement;\n  static pushSounds: Array<HTMLAudioElement>;\n  static healSound: HTMLAudioElement;\n  static music: HTMLAudioElement;\n  static graveSound: HTMLAudioElement;\n  static ambientSound: HTMLAudioElement;\n  static goreSound: HTMLAudioElement;\n  static swingSounds: Array<HTMLAudioElement>;\n  static unlockSounds: Array<HTMLAudioElement>;\n  static doorOpenSounds: Array<HTMLAudioElement>;\n  static potSmashSounds: Array<HTMLAudioElement>;\n  static keyPickupSound: HTMLAudioElement;\n  static magicSound: HTMLAudioElement;\n  static wooshSound: HTMLAudioElement;\n  static initialized: boolean = false;\n  static loadSounds = () => {\n    if (Sound.initialized) return;\n    Sound.initialized = true;\n    Sound.playerStoneFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.playerStoneFootsteps.push(\n        new Audio(\"res/SFX/footsteps/stone/footstep\" + i + \".mp3\"),\n      ),\n    );\n    for (let f of Sound.playerStoneFootsteps) f.volume = 1.0;\n\n    Sound.enemyFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4, 5].forEach((i) =>\n      Sound.enemyFootsteps.push(\n        new Audio(\"res/SFX/footsteps/enemy/enemyfootstep\" + i + \".mp3\"),\n      ),\n    );\n    for (let f of Sound.enemyFootsteps) f.volume = 1.0;\n\n    Sound.swingSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.swingSounds.push(new Audio(\"res/SFX/attacks/swing\" + i + \".mp3\")),\n    );\n    for (let f of Sound.swingSounds) {\n      (f.volume = 0.5), f.load;\n      //f.play();\n    }\n\n    Sound.hitSounds = new Array<HTMLAudioElement>();\n    [1, 2].forEach((i) =>\n      Sound.hitSounds.push(new Audio(\"res/SFX/attacks/hurt\" + i + \".mp3\")),\n    );\n    for (let f of Sound.hitSounds) {\n      (f.volume = 0.5), f.load;\n      //f.play();\n    }\n    Sound.enemySpawnSound = new Audio(\"res/SFX/attacks/enemyspawn.mp3\");\n    Sound.enemySpawnSound.volume = 0.7;\n\n    Sound.chestSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.chestSounds.push(new Audio(\"res/SFX/chest/chest\" + i + \".mp3\")),\n    );\n    for (let f of Sound.chestSounds) f.volume = 0.5;\n\n    Sound.coinPickupSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.coinPickupSounds.push(\n        new Audio(\"res/SFX/items/coins\" + i + \".mp3\"),\n      ),\n    );\n    for (let f of Sound.coinPickupSounds) f.volume = 1.0;\n\n    Sound.miningSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.miningSounds.push(\n        new Audio(\"res/SFX/resources/Pickaxe\" + i + \".mp3\"),\n      ),\n    );\n    for (let f of Sound.miningSounds) f.volume = 0.3;\n\n    Sound.hurtSounds = new Array<HTMLAudioElement>();\n    [1].forEach((i) =>\n      Sound.hurtSounds.push(new Audio(\"res/SFX/attacks/hit.mp3\")),\n    );\n    for (let f of Sound.hurtSounds) f.volume = 0.3;\n\n    Sound.genericPickupSound = new Audio(\"res/SFX/items/pickup.mp3\");\n    Sound.genericPickupSound.volume = 1.0;\n\n    Sound.breakRockSound = new Audio(\"res/SFX/resources/rockbreak.mp3\");\n    Sound.breakRockSound.volume = 1.0;\n\n    Sound.pushSounds = new Array<HTMLAudioElement>();\n    [1, 2].forEach((i) =>\n      Sound.pushSounds.push(new Audio(\"res/SFX/pushing/push\" + i + \".mp3\")),\n    );\n    for (let f of Sound.pushSounds) f.volume = 1.0;\n\n    Sound.healSound = new Audio(\"res/SFX/items/powerup1.mp3\");\n    Sound.healSound.volume = 0.5;\n\n    Sound.music = new Audio(\"res/bewitched.mp3\");\n    Sound.graveSound = new Audio(\"res/SFX/attacks/skelespawn.mp3\");\n    Sound.ambientSound = new Audio(\"res/SFX/ambient/ambientDark2.mp3\");\n    Sound.ambientSound.volume = 1;\n\n    Sound.goreSound = new Audio(`res/SFX/misc Unused/gore2.mp3`);\n    Sound.goreSound.volume = 0.5;\n\n    Sound.unlockSounds = new Array<HTMLAudioElement>();\n    [1].forEach((i) =>\n      Sound.unlockSounds.push(new Audio(\"res/SFX/door/unlock\" + i + \".mp3\")),\n    );\n    for (let f of Sound.unlockSounds) f.volume = 0.5;\n\n    Sound.doorOpenSounds = new Array<HTMLAudioElement>();\n    [1, 2].forEach((i) =>\n      Sound.doorOpenSounds.push(new Audio(\"res/SFX/door/open\" + i + \".mp3\")),\n    );\n    for (let f of Sound.doorOpenSounds) f.volume = 0.5;\n\n    Sound.keyPickupSound = new Audio(\"res/SFX/items/keyPickup.mp3\");\n    Sound.keyPickupSound.volume = 1.0;\n\n    Sound.potSmashSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.potSmashSounds.push(\n        new Audio(\"res/SFX/objects/potSmash\" + i + \".mp3\"),\n      ),\n    );\n    for (let f of Sound.potSmashSounds) f.volume = 0.5;\n\n    Sound.magicSound = new Audio(\"res/SFX/attacks/magic2.mp3\");\n    Sound.magicSound.volume = 0.25;\n\n    Sound.wooshSound = new Audio(\"res/SFX/attacks/woosh1.mp3\");\n    Sound.wooshSound.volume = 0.2;\n  };\n\n  private static playSoundSafely(audio: HTMLAudioElement) {\n    audio.play().catch((err) => {\n      if (err.name === \"NotAllowedError\") {\n        console.warn(\"Audio playback requires user interaction first\");\n      } else {\n        console.error(\"Error playing sound:\", err);\n      }\n    });\n  }\n\n  static async playWithReverb(audio: HTMLAudioElement) {\n    await ReverbEngine.initialize();\n    ReverbEngine.applyReverb(audio);\n    this.playSoundSafely(audio);\n  }\n\n  static playerStoneFootstep = async () => {\n    let f = Game.randTable(Sound.playerStoneFootsteps, Math.random);\n    await this.playWithReverb(f);\n    f.currentTime = 0;\n    f.play();\n  };\n\n  static enemyFootstep = () => {\n    let f = Game.randTable(Sound.enemyFootsteps, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static hit = () => {\n    let f = Game.randTable(Sound.swingSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n\n    setTimeout(() => {\n      let f = Game.randTable(Sound.hitSounds, Math.random);\n      this.playWithReverb(f);\n      f.currentTime = 0;\n    }, 100);\n  };\n\n  static hurt = () => {\n    let f = Game.randTable(Sound.hurtSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static enemySpawn = () => {\n    this.playWithReverb(Sound.enemySpawnSound);\n    Sound.enemySpawnSound.currentTime = 0;\n  };\n\n  static chest = () => {\n    let f = Game.randTable(Sound.chestSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static potSmash = () => {\n    let f = Game.randTable(Sound.potSmashSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static pickupCoin = () => {\n    let f = Game.randTable(Sound.coinPickupSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static mine = () => {\n    let f = Game.randTable(Sound.miningSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static breakRock = () => {\n    setTimeout(() => {\n      this.playWithReverb(Sound.breakRockSound);\n    }, 100);\n    Sound.breakRockSound.currentTime = 0;\n  };\n\n  static heal = () => {\n    this.playWithReverb(Sound.healSound);\n    Sound.healSound.currentTime = 0;\n  };\n\n  static genericPickup = () => {\n    this.playWithReverb(Sound.genericPickupSound);\n    Sound.genericPickupSound.currentTime = 0;\n  };\n\n  static keyPickup = () => {\n    this.playWithReverb(Sound.keyPickupSound);\n    Sound.keyPickupSound.currentTime = 0;\n  };\n\n  static push = () => {\n    let f = Game.randTable(Sound.pushSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static skeleSpawn = () => {\n    this.playWithReverb(Sound.graveSound);\n    Sound.graveSound.currentTime = 0;\n    Sound.graveSound.volume = 0.3;\n  };\n\n  static unlock = () => {\n    let f = Game.randTable(Sound.unlockSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static playMusic = () => {\n    /*\n    Sound.music.addEventListener(\n      \"ended\",\n      () => {\n        Sound.music.currentTime = 0;\n        Sound.playSoundSafely(Sound.music);\n      },\n      false\n    );\n    Sound.playSoundSafely(Sound.music);\n    */\n  };\n\n  static doorOpen = () => {\n    let f = Game.randTable(Sound.doorOpenSounds, Math.random);\n    this.playWithReverb(f);\n    f.currentTime = 0;\n  };\n\n  static playAmbient = () => {\n    Sound.ambientSound.addEventListener(\n      \"ended\",\n      () => {\n        Sound.ambientSound.currentTime = 0;\n        this.playWithReverb(Sound.ambientSound);\n      },\n      true,\n    );\n    this.playWithReverb(Sound.ambientSound);\n  };\n\n  static playGore = () => {\n    this.playWithReverb(Sound.goreSound);\n    Sound.goreSound.currentTime = 0;\n  };\n\n  static playMagic = () => {\n    let f = Sound.magicSound;\n    let woosh = Sound.wooshSound;\n    this.playWithReverb(f);\n    this.playWithReverb(woosh);\n    f.currentTime = 0;\n    woosh.currentTime = 0;\n  };\n\n  static delayPlay = (method: () => void, delay: number) => {\n    setTimeout(method, delay);\n  };\n\n  static stopSoundWithReverb(audio: HTMLAudioElement) {\n    ReverbEngine.removeReverb(audio);\n    audio.pause();\n    audio.currentTime = 0;\n  }\n}\n","import { globalEventBus } from \"./eventBus\";\nimport { AppEvents, EventPayloads, EVENTS } from \"./events\";\n\ninterface Stats {\n  enemiesKilled: number;\n  damageDone: number;\n  damageTaken: number;\n  turnsPassed: number;\n  coinsCollected: number;\n  itemsCollected: number;\n  enemies: string[];\n}\n\nclass StatsTracker {\n  private stats: Stats = {\n    enemiesKilled: 0,\n    damageDone: 0,\n    damageTaken: 0,\n    turnsPassed: 0,\n    coinsCollected: 0,\n    itemsCollected: 0,\n    enemies: [],\n  };\n\n  constructor() {\n    this.initializeListeners();\n  }\n\n  private initializeListeners(): void {\n    globalEventBus.on(EVENTS.ENEMY_KILLED, this.handleEnemyKilled);\n    globalEventBus.on(EVENTS.DAMAGE_DONE, this.handleDamageDone);\n    globalEventBus.on(EVENTS.DAMAGE_TAKEN, this.handleDamageTaken);\n    globalEventBus.on(EVENTS.TURN_PASSED, this.handleTurnPassed);\n    globalEventBus.on(EVENTS.COIN_COLLECTED, this.handleCoinCollected);\n    globalEventBus.on(EVENTS.ITEM_COLLECTED, this.handleItemCollected);\n  }\n\n  private handleEnemyKilled = (\n    payload: EventPayloads[typeof EVENTS.ENEMY_KILLED],\n  ): void => {\n    this.stats.enemiesKilled += 1;\n    this.stats.enemies.push(payload.enemyId);\n    console.log(`Enemy killed: ${payload.enemyId}`);\n  };\n\n  private handleDamageDone = (\n    payload: EventPayloads[typeof EVENTS.DAMAGE_DONE],\n  ): void => {\n    this.stats.damageDone += payload.amount;\n    console.log(`Damage done: ${payload.amount}`);\n  };\n\n  private handleDamageTaken = (\n    payload: EventPayloads[typeof EVENTS.DAMAGE_TAKEN],\n  ): void => {\n    this.stats.damageTaken += payload.amount;\n    console.log(`Damage taken: ${payload.amount}`);\n  };\n\n  private handleTurnPassed = (): void => {\n    this.stats.turnsPassed += 1;\n    console.log(`Turn passed: ${this.stats.turnsPassed}`);\n  };\n\n  private handleCoinCollected = (\n    payload: EventPayloads[typeof EVENTS.COIN_COLLECTED],\n  ): void => {\n    this.stats.coinsCollected += payload.amount;\n    console.log(`Coins collected: ${payload.amount}`);\n  };\n\n  private handleItemCollected = (\n    payload: EventPayloads[typeof EVENTS.ITEM_COLLECTED],\n  ): void => {\n    this.stats.itemsCollected += 1;\n    console.log(`Item collected: ${payload.itemId}`);\n  };\n\n  public getStats(): Stats {\n    return this.stats;\n  }\n\n  public resetStats(): void {\n    this.stats = {\n      enemiesKilled: 0,\n      damageDone: 0,\n      damageTaken: 0,\n      turnsPassed: 0,\n      coinsCollected: 0,\n      itemsCollected: 0,\n      enemies: [],\n    };\n    console.log(\"Stats have been reset.\");\n  }\n}\n\nexport const statsTracker = new StatsTracker();\n","import { globalEventBus } from \"./eventBus\";\n\nexport class TextBox {\n  text: string;\n  cursor: number;\n  private enterCallback: () => void;\n  private escapeCallback: () => void;\n  private allowedCharacters: string = \"all\";\n  private element: HTMLElement;\n  private message: string = \"\";\n\n  constructor(element: HTMLElement) {\n    this.text = \"\";\n    this.cursor = 0;\n    this.enterCallback = () => {};\n    this.escapeCallback = () => {};\n    this.element = element;\n    this.element.addEventListener(\"touchstart\", this.handleTouchStart);\n  }\n\n  public setEnterCallback(callback: () => void): void {\n    this.enterCallback = callback;\n  }\n\n  public setEscapeCallback(callback: () => void): void {\n    this.escapeCallback = callback;\n  }\n\n  public clear(): void {\n    this.text = \"\";\n    this.cursor = 0;\n    this.message = \"\";\n    this.updateElement();\n  }\n\n  public handleKeyPress = (key: string): void => {\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/ \".split(\n      \"\",\n    );\n    if (key.length === 1) {\n      key = key.toLowerCase();\n      if (fontHas.includes(key)) {\n        if (\n          this.allowedCharacters === \"all\" ||\n          this.allowedCharacters.includes(key)\n        ) {\n          this.text =\n            this.text.substring(0, this.cursor) +\n            key +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor += 1;\n          this.updateElement();\n\n          this.message =\n            this.message.substring(0, this.cursor - 1) +\n            key +\n            this.message.substring(this.cursor - 1, this.message.length);\n        }\n      }\n      console.log(`Current message: \"${this.message}\"`);\n      return;\n    } else {\n      switch (key) {\n        case \"Backspace\":\n          if (this.cursor > 0) {\n            this.text =\n              this.text.substring(0, this.cursor - 1) +\n              this.text.substring(this.cursor, this.text.length);\n            this.cursor = Math.max(0, this.cursor - 1);\n            this.updateElement();\n\n            this.message =\n              this.message.substring(0, this.cursor) +\n              this.message.substring(this.cursor + 1, this.message.length);\n          }\n          break;\n        case \"Delete\":\n          if (this.cursor < this.text.length) {\n            this.text =\n              this.text.substring(0, this.cursor) +\n              this.text.substring(this.cursor + 1, this.text.length);\n            this.updateElement();\n\n            this.message =\n              this.message.substring(0, this.cursor) +\n              this.message.substring(this.cursor + 1, this.message.length);\n          }\n          break;\n        case \"ArrowLeft\":\n          this.cursor = Math.max(0, this.cursor - 1);\n          this.updateCursorPosition();\n          break;\n        case \"ArrowRight\":\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\n          this.updateCursorPosition();\n          break;\n        case \"Enter\":\n          this.sendMessage();\n          this.escapeCallback();\n          break;\n        case \"Escape\":\n          this.escapeCallback();\n          break;\n      }\n    }\n    console.log(`Current message: \"${this.message}\"`);\n  };\n\n  private handleTouchStart = (e: TouchEvent): void => {\n    this.focus();\n    e.preventDefault();\n  };\n\n  private focus(): void {\n    // Create a temporary input element to trigger the on-screen keyboard\n    const tempInput = document.createElement(\"input\");\n    tempInput.type = \"text\";\n    tempInput.style.position = \"absolute\";\n    tempInput.style.opacity = \"0\";\n    tempInput.style.zIndex = \"-1\"; // Ensure it doesn't interfere with the game UI\n    document.body.appendChild(tempInput);\n    tempInput.focus();\n    tempInput.addEventListener(\"blur\", () => {\n      document.body.removeChild(tempInput);\n    });\n  }\n\n  private sendMessage(): void {\n    let message = this.message;\n\n    this.enterCallback();\n\n    console.log(`Sending message: \"${message}\"`);\n    if (message.startsWith(\"/\")) {\n      message = message.substring(1);\n      globalEventBus.emit(\"ChatMessage\", message);\n      console.log(`Chat message emitted: \"${message}\"`);\n    }\n\n    this.clear();\n  }\n\n  private updateElement(): void {\n    this.element.textContent = this.text;\n    // Optionally, update cursor position in the UI\n  }\n\n  private updateCursorPosition(): void {\n    // Implement cursor position update in the UI if necessary\n  }\n}\n","import { Game } from \"../game\";\nimport { Floor } from \"./floor\";\n\nexport class Bones extends Floor {\n  draw = (delta: number) => {\n    Game.drawTile(\n      7,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\nimport { Entity } from \"../entity/entity\";\n\nexport class Button extends Tile {\n  // all are in grid units\n  w: number;\n  h: number;\n  pressed: boolean;\n  turnsSincePressed: number;\n  linkedDoor: InsideLevelDoor;\n\n  constructor(room: Room, x: number, y: number, linkedDoor: InsideLevelDoor) {\n    super(room, x, y);\n    this.w = 1;\n    this.h = 1;\n\n    this.pressed = false;\n    this.turnsSincePressed = 1;\n\n    this.linkedDoor = linkedDoor;\n  }\n\n  press = () => {\n    this.pressed = true;\n    this.linkedDoor.opened = true;\n  };\n\n  unpress = () => {\n    this.pressed = false;\n    this.linkedDoor.opened = false;\n  };\n\n  /*onCollide = (player: Player) => {\n    this.press();\n  };\n\n  onCollideEnemy = (enemy: Enemy) => {\n    this.press();\n  };*/\n\n  tickEnd = () => {\n    this.unpress();\n    for (const i in this.room.game.players) {\n      if (\n        this.room.game.players[i].x === this.x &&\n        this.room.game.players[i].y === this.y\n      )\n        this.press();\n    }\n    for (const e of this.room.entities) {\n      if (e.x === this.x && e.y === this.y) this.press();\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      0,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.pressed)\n      Game.drawTile(\n        18,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        17,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Chasm extends Tile {\n  tileX: number;\n  tileY: number;\n  topEdge: boolean;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    leftEdge: boolean,\n    rightEdge: boolean,\n    topEdge: boolean,\n    bottomEdge: boolean,\n  ) {\n    super(room, x, y);\n\n    this.tileX = this.skin === 1 ? 24 : 20;\n    this.tileY = 1;\n\n    if (leftEdge) this.tileX--;\n    else if (rightEdge) this.tileX++;\n    if (topEdge) this.tileY--;\n    else if (bottomEdge) this.tileY++;\n\n    this.topEdge = topEdge;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.topEdge)\n      Game.drawTile(\n        22,\n        0,\n        1,\n        2,\n        this.x,\n        this.y,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawTile(\n      this.tileX,\n      this.tileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class CoffinTile extends Tile {\n  subTileY: number; // each coffin is 1x2, this is the sub-tile coordinate\n\n  constructor(room: Room, x: number, y: number, subTileY: number) {\n    super(room, x, y);\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.subTileY === 0) {\n      Game.drawTile(\n        0,\n        5,\n        1,\n        1,\n        this.x - 1,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        1,\n        5,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        2,\n        5,\n        1,\n        1,\n        this.x + 1,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        0,\n        6,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        1,\n        6,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        2,\n        6,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    } else {\n      Game.drawTile(\n        0,\n        7,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        1,\n        7,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n      Game.drawTile(\n        2,\n        7,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    }\n  };\n}\n","import { Player } from \"../player\";\nimport { Direction, Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { EntityType } from \"../entity/entity\";\nimport { Key } from \"../item/key\";\nimport { Sound } from \"../sound\";\n\nexport enum DoorDir {\n  North = \"North\",\n  East = \"East\",\n  South = \"South\",\n  West = \"West\",\n}\n\nexport enum DoorType {\n  DOOR,\n  LOCKEDDOOR,\n  GUARDEDDOOR,\n}\n\nexport class Door extends Tile {\n  linkedDoor: Door;\n  game: Game;\n  opened: boolean;\n  doorDir: Direction;\n  guarded: boolean;\n  type: DoorType;\n  locked: boolean;\n  iconTileX: number;\n  iconXOffset: number;\n  iconYOffset: number;\n  unlocking: boolean;\n  iconAlpha: number;\n  frame: number;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    doorDir: Direction,\n    doorType: DoorType,\n  ) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n    this.doorDir = doorDir;\n    this.locked = false;\n    this.isDoor = true;\n    this.type = doorType;\n    this.iconTileX = 2;\n    this.iconXOffset = 0;\n    this.iconYOffset = 0;\n    this.unlocking = false;\n    this.iconAlpha = 1;\n    this.frame = 0;\n    switch (this.type) {\n      case DoorType.GUARDEDDOOR:\n        this.guard();\n        break;\n      case DoorType.LOCKEDDOOR:\n        this.lock();\n        break;\n      case DoorType.DOOR:\n        this.removeLock();\n        break;\n    }\n  }\n\n  guard = () => {\n    this.type = DoorType.GUARDEDDOOR;\n    this.locked = true;\n    this.iconTileX = 9;\n    this.iconXOffset = 1 / 32;\n  };\n\n  lock = () => {\n    this.type = DoorType.LOCKEDDOOR;\n    this.locked = true;\n    this.iconTileX = 10;\n    this.iconXOffset = 1 / 32;\n  };\n  removeLock = () => {\n    this.type = DoorType.DOOR;\n    this.locked = false;\n  };\n\n  canUnlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        this.game.pushMessage(\"You use the key to unlock the door.\");\n        return true;\n      } else\n        this.game.pushMessage(\"The door is locked tightly and won't budge.\");\n      return false;\n    }\n\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.room.checkForNoEnemies();\n      this.game.pushMessage(\n        \"There are still remaining foes guarding this door...\",\n      );\n      return false;\n    }\n  };\n  unlock = (player: Player) => {\n    if (this.type === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        // remove key\n        player.inventory.removeItem(k);\n        Sound.unlock();\n        this.removeLock();\n        this.unlocking = true;\n      }\n    }\n  };\n\n  unGuard = () => {\n    if (this.type === DoorType.GUARDEDDOOR) {\n      this.removeLock();\n      this.game.tutorialActive = false;\n    }\n  };\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  isSolid = (): boolean => {\n    if (this.locked) {\n      return true;\n    } else false;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    if (!this.opened) {\n      Sound.doorOpen();\n    }\n    this.opened = true;\n\n    this.linkedDoor.opened = true;\n    if (this.doorDir === Direction.UP || this.doorDir === Direction.DOWN) {\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\n    } else\n      this.game.changeLevelThroughDoor(\n        player,\n        this.linkedDoor,\n        this.linkedDoor.room.roomX - this.room.roomX > 0 ? 1 : -1,\n      );\n    this.linkedDoor.locked = false;\n    this.linkedDoor.type = DoorType.DOOR;\n  };\n\n  draw = (delta: number) => {\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (this.opened)\n        Game.drawTile(\n          6,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      else\n        Game.drawTile(\n          3,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n    }\n    if (this.doorDir !== Direction.UP)\n      //if not top door\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    //the following used to be in the drawaboveplayer function\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      if (!this.opened)\n        Game.drawTile(\n          13,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n      else\n        Game.drawTile(\n          14,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount(),\n        );\n    }\n  };\n\n  drawAbovePlayer = (delta: number) => {};\n\n  drawAboveShading = (delta: number) => {\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1;\n    Game.ctx.globalAlpha = this.iconAlpha;\n    let multiplier = 0.125;\n    if (this.unlocking == true) {\n      this.iconAlpha *= 0.92 * delta;\n      this.iconYOffset -= 0.035 * delta;\n      multiplier = 0;\n      if (this.iconAlpha <= 0.01) {\n        this.iconYOffset = 0;\n        this.unlocking = false;\n        this.iconTileX = 2;\n        this.iconXOffset = 0;\n        this.iconAlpha = 1;\n      }\n    }\n    if (this.doorDir === Direction.UP) {\n      //if top door\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      );\n    } else {\n      Game.drawFX(\n        this.iconTileX,\n        2,\n        1,\n        1,\n        this.x + this.iconXOffset,\n        this.y -\n          1.25 +\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\n          this.iconYOffset,\n        1,\n        1,\n      ); //if not top door\n    }\n    Game.ctx.globalAlpha = 1;\n  };\n}\n","import { Player } from \"../player\";\nimport { ChatMessage, Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { UpLadder } from \"./upLadder\";\nimport { EVENTS } from \"../events\";\nimport { EventEmitter } from \"../eventEmitter\";\nimport { globalEventBus } from \"../eventBus\";\n\nexport class DownLadder extends Tile {\n  linkedLevel: Room;\n  game: Game;\n  isRope = false;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.linkedLevel = null;\n  }\n\n  generate = async () => {\n    // called by Game during transition\n    if (!this.linkedLevel) {\n      await this.game.levelgen.generate(\n        this.game,\n        this.room.depth + (this.isRope ? 0 : 1),\n        this.isRope,\n        (linkedLevel: Room) => {\n          this.linkedLevel = linkedLevel;\n\n          for (\n            let x = this.linkedLevel.roomX;\n            x < this.linkedLevel.roomX + this.linkedLevel.width;\n            x++\n          ) {\n            for (\n              let y = this.linkedLevel.roomY;\n              y < this.linkedLevel.roomY + this.linkedLevel.height;\n              y++\n            ) {\n              let tile = this.linkedLevel.roomArray[x][y];\n              if (tile instanceof UpLadder && tile.isRope)\n                tile.linkedLevel = this.room;\n            }\n          }\n        },\n      );\n    }\n  };\n\n  onCollide = (player: Player) => {\n    let allPlayersHere = true;\n    for (const i in this.game.players) {\n      if (\n        this.game.rooms[this.game.players[i].levelID] !== this.room ||\n        this.game.players[i].x !== this.x ||\n        this.game.players[i].y !== this.y\n      ) {\n        allPlayersHere = false;\n      }\n    }\n    if (allPlayersHere) {\n      globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\n      this.generate().then(() => {\n        globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\n        for (const i in this.game.players) {\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\n        }\n      });\n    } else {\n      if (player === this.game.players[this.game.localPlayerID])\n        this.game.chat.push(new ChatMessage(\"all players must be present\"));\n    }\n  };\n\n  draw = (delta: number) => {\n    let xx = 4;\n    if (this.isRope) xx = 16;\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    Game.drawTile(\n      xx,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {};\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\n\nexport class Floor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class FountainTile extends Tile {\n  subTileX: number; // each fountain is 3x3, this is the sub-tile coordinate\n  subTileY: number;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    subTileX: number,\n    subTileY: number,\n  ) {\n    super(room, x, y);\n    this.subTileX = subTileX;\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    Game.drawTile(\n      this.subTileX,\n      2 + this.subTileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport class InsideLevelDoor extends Tile {\n  game: Game;\n  opened: boolean;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n  }\n\n  isSolid = (): boolean => {\n    return !this.opened;\n  };\n  canCrushEnemy = (): boolean => {\n    return !this.opened;\n  };\n  isOpaque = (): boolean => {\n    return !this.opened;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      0,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.opened)\n      Game.drawTile(\n        15,\n        1,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        3,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (!this.opened)\n      Game.drawTile(\n        13,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    else\n      Game.drawTile(\n        14,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\n\nexport class SpawnFloor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable(\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\n        Math.random,\n      );\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Spike extends Tile {\n  onCollide = (player: Player) => {\n    player.hurt(1, \"spike\");\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      11,\n      0,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\nimport { Entity } from \"../entity/entity\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class SpikeTrap extends Tile {\n  on: boolean;\n  tickCount: number;\n  frame: number;\n  t: number;\n\n  constructor(room: Room, x: number, y: number, tickCount?: number) {\n    super(room, x, y);\n    if (tickCount) this.tickCount = tickCount;\n    else this.tickCount = 0;\n    this.on = false;\n    this.frame = 0;\n    this.t = 0;\n  }\n\n  tick = () => {\n    this.tickCount++;\n    if (this.tickCount >= 4) this.tickCount = 0;\n    this.on = this.tickCount === 0;\n\n    if (this.on) {\n      for (const i in this.room.game.players) {\n        if (\n          this.room ===\n            this.room.game.rooms[this.room.game.players[i].levelID] &&\n          this.room.game.players[i].x === this.x &&\n          this.room.game.players[i].y === this.y\n        )\n          this.room.game.players[i].hurt(1, \"spike trap\");\n      }\n    }\n\n    if (this.tickCount === 3)\n      this.room.hitwarnings.push(\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y, false),\n      );\n  };\n\n  tickEnd = () => {\n    if (this.on) {\n      for (const e of this.room.entities) {\n        if (e.x === this.x && e.y === this.y) {\n          e.hurt(null, 1);\n        }\n      }\n    }\n  };\n\n  onCollideEnemy = (enemy: Entity) => {\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel))\n      enemy.hurt(null, 1);\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n\n    let rumbleOffsetX = 0;\n    this.t += delta;\n    if (!this.on && this.tickCount === 3) {\n      if (Math.floor(this.t) % 4 === 1) rumbleOffsetX = 0.0325;\n      if (Math.floor(this.t) % 4 === 3) rumbleOffsetX = -0.0325;\n    }\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\n    let f = 6 + frames[Math.floor(this.frame)];\n    if (\n      this.tickCount === 1 ||\n      (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)\n    ) {\n      f = 5;\n    }\n    Game.drawObj(\n      f,\n      0,\n      1,\n      2,\n      this.x + rumbleOffsetX,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (this.on && this.frame < frames.length - 1) {\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\n      else this.frame += 0.2 * delta;\n    }\n    if (!this.on) this.frame = 0;\n  };\n}\n","import { Room } from \"../room\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable\";\n\nexport enum SkinType {\n  DUNGEON = 0,\n  CAVE = 1,\n}\n\nexport abstract class Tile extends Drawable {\n  x: number;\n  y: number;\n  room: Room;\n  skin: SkinType;\n  isDoor: boolean;\n\n  constructor(room: Room, x: number, y: number) {\n    super();\n    this.skin = room.skin;\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.isDoor = false;\n  }\n\n  hasPlayer = (player: Player) => {\n    if (player.x === this.x && player.y === this.y) return true;\n    else return false;\n  };\n\n  shadeAmount = () => {\n    return this.room.softVis[this.x][this.y];\n  };\n\n  isSolid = (): boolean => {\n    return false;\n  };\n  canCrushEnemy = (): boolean => {\n    return false;\n  };\n  isOpaque = (): boolean => {\n    return false;\n  };\n  onCollide = (player: Player) => {};\n  onCollideEnemy = (enemy: Entity) => {};\n  tick = () => {};\n  tickEnd = () => {};\n\n  draw = (delta: number) => {};\n  drawUnderPlayer = (delta: number) => {};\n  drawAbovePlayer = (delta: number) => {};\n  drawAboveShading = (delta: number) => {};\n}\n","import { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\n\nexport class Trapdoor extends Tile {\n  game: Game;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      13,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  onCollide = (player: Player) => {\n    // TODO\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { DownLadder } from \"./downLadder\";\n\nexport class UpLadder extends Tile {\n  linkedLevel: Room;\n  game: Game;\n  isRope = false;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n  }\n\n  onCollide = (player: Player) => {\n    this.game.changeLevelThroughLadder(player, this);\n  };\n\n  draw = (delta: number) => {\n    let xx = 29;\n    let yy = 0;\n    if (this.isRope) {\n      xx = 16;\n      yy = 1;\n    }\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n    if (!this.isRope)\n      Game.drawTile(\n        xx,\n        yy,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n    Game.drawTile(\n      xx,\n      yy + 1,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.isRope)\n      Game.drawTile(\n        16,\n        1,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount(),\n      );\n  };\n}\n","import { Direction, Game } from \"../game\";\nimport { Room, WallDirection } from \"../room\";\nimport { Door, DoorDir } from \"./door\";\nimport { Tile } from \"./tile\";\nimport { WallInfo } from \"../room\";\nimport { Player } from \"../player\";\n\nexport class Wall extends Tile {\n  private tileYOffset: number;\n  wallDirections: Array<WallDirection>;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    wallDirections?: Array<WallDirection>\n  ) {\n    super(room, x, y);\n    this.isDoor = false;\n    this.tileYOffset = 6;\n    this.wallDirections = wallDirections || [];\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    const wallInfo = this.wallInfo();\n    if (!wallInfo) return true;\n    return (\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\n      wallInfo.isLeftWall ||\n      wallInfo.isRightWall\n    );\n  };\n\n  get direction() {\n    let directions = [];\n    if (this.room.roomArray[this.x - 1][this.y] == null)\n      directions.push(Direction.LEFT);\n    if (this.room.roomArray[this.x + 1][this.y] == null)\n      directions.push(Direction.RIGHT);\n    if (this.room.roomArray[this.x][this.y - 1] == null)\n      directions.push(Direction.DOWN);\n    if (this.room.roomArray[this.x][this.y + 1] == null)\n      directions.push(Direction.UP);\n    if (directions.length == 1) return directions[0];\n    if (\n      directions.includes(Direction.UP) &&\n      directions.includes(Direction.LEFT)\n    )\n      return Direction.UP_LEFT;\n    if (\n      directions.includes(Direction.UP) &&\n      directions.includes(Direction.RIGHT)\n    )\n      return Direction.UP_RIGHT;\n    if (\n      directions.includes(Direction.DOWN) &&\n      directions.includes(Direction.LEFT)\n    )\n      return Direction.DOWN_LEFT;\n    return Direction.DOWN_RIGHT;\n  }\n\n  wallInfo = () => {\n    return this.room.wallInfo.get(`${this.x},${this.y}`);\n  };\n\n  draw = (delta: number) => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return;\n\n    // Set tileYOffset based on inner wall type\n    this.tileYOffset =\n      wallInfo.innerWallType === \"bottomInner\" ||\n        wallInfo.innerWallType === \"surroundedInner\"\n        ? 0\n        : 6;\n\n    // Only draw the bottom part of the wall if it's not at the bottom edge of the room\n    if (\n      wallInfo.isDoorWall ||\n      wallInfo.isBelowDoorWall ||\n      (wallInfo.isTopWall && !wallInfo.isLeftWall && !wallInfo.isRightWall) ||\n      wallInfo.isInnerWall\n    )\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.room.softVis[this.x][this.y + 1]\n      );\n\n    Game.drawTile(\n      2,\n      this.skin + this.tileYOffset,\n      1,\n      1,\n      this.x,\n      this.y - 1,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n  drawAboveShading = (delta: number) => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return;\n    if (\n      wallInfo.isBottomWall ||\n      wallInfo.isBelowDoorWall ||\n      wallInfo.isAboveDoorWall\n    ) {\n      Game.drawTile(\n        2,\n        this.skin + this.tileYOffset,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.room.softVis[this.x][this.y + 1]\n      );\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\nimport { Room } from \"../room\";\nimport { LightSource } from \"../lightSource\";\nimport { LevelConstants } from \"../levelConstants\";\n\nexport class WallTorch extends Tile {\n  frame: number;\n  private tileYOffset: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.room.lightSources.push(\n      new LightSource(\n        this.x + 0.5,\n        this.y + 0.5,\n        5,\n        LevelConstants.TORCH_LIGHT_COLOR,\n        1.5,\n      ),\n    );\n    this.frame = Math.random() * 12;\n    this.tileYOffset = 6;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) return true;\n    return (\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\n      wallInfo.isLeftWall ||\n      wallInfo.isRightWall\n    );\n  };\n\n  draw = (delta: number) => {\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\n    if (!wallInfo) this.tileYOffset = 6;\n    this.frame += 0.3 * delta;\n    if (this.frame >= 12) this.frame = 0;\n\n    this.tileYOffset =\n      wallInfo.innerWallType === \"bottomInner\" ||\n      wallInfo.innerWallType === \"surroundedInner\"\n        ? 0\n        : 6;\n\n    Game.drawTile(\n      0,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n\n    Game.drawTile(\n      2,\n      this.skin + this.tileYOffset,\n      1,\n      1,\n      this.x,\n      this.y - 1,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount(),\n    );\n\n    Game.drawFX(Math.floor(this.frame), 32, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { globalEventBus } from \"./eventBus\";\nimport { Enemy } from \"./entity/enemy/enemy\";\nimport { Room, RoomType } from \"./room\";\nimport { Game } from \"./game\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Player } from \"./player\";\n\nexport class TutorialListener {\n  private seenEnemies: Set<typeof Enemy> = new Set();\n  private pendingNewEnemies: Set<typeof Enemy> = new Set();\n  private tutorialCreationTimeout: NodeJS.Timeout | null = null;\n  private game: Game;\n  private player: Player;\n  private room: Room;\n\n  constructor(game: Game) {\n    //console.log(\"Tutorial constructor called\");\n    this.setupEventListeners();\n    this.game = game;\n  }\n\n  private setupEventListeners(): void {\n    //console.log(\"Setting up event listeners\");\n    globalEventBus.on(\"EnemySeenPlayer\", this.handleEnemySeen.bind(this));\n  }\n\n  private handleEnemySeen(data: {\n    enemyType: typeof Enemy;\n    enemyName: string;\n  }): void {\n    if (!this.hasSeenEnemy(data.enemyType)) {\n      //this.game.pushMessage(`New enemy encountered: ${data.enemyName}`);\n      this.addSeenEnemy(data.enemyType);\n      this.pendingNewEnemies.add(data.enemyType);\n      this.scheduleTutorialCreation();\n    } else {\n    }\n  }\n\n  private scheduleTutorialCreation(): void {\n    if (this.tutorialCreationTimeout === null) {\n      this.tutorialCreationTimeout = setTimeout(() => {\n        this.createTutorialRoom(Array.from(this.pendingNewEnemies));\n        //this.game.pushMessage(\"Defeat the enemies guarding the exits.\");\n        this.pendingNewEnemies.clear();\n        this.tutorialCreationTimeout = null;\n      }, 100); // Wait 100ms to collect all new enemies\n    }\n  }\n\n  private createTutorialRoom(enemyTypes: Array<typeof Enemy>) {\n    /*\n    this.game.tutorialActive = true;\n    this.game.room.doors.forEach((door: Door) => {\n      door.guard();\n    });\n    */\n  }\n\n  // Method to check if an enemy has been seen before\n  hasSeenEnemy(enemyType: typeof Enemy): boolean {\n    //console.log(`Checking if enemy has been seen: ${enemyType}`);\n    return this.seenEnemies.has(enemyType);\n  }\n\n  // Method to manually add an enemy to the seen list (useful for testing or manual control)\n  addSeenEnemy(enemyType: typeof Enemy): void {\n    //console.log(`Adding enemy to seen list: ${enemyType}`);\n    this.seenEnemies.add(enemyType);\n  }\n\n  // Method to reset the seen enemies list (useful for testing or game resets)\n  resetSeenEnemies(): void {\n    //console.log(\"Resetting seen enemies list\");\n    this.seenEnemies.clear();\n  }\n\n  // Method to clean up event listeners when needed\n  cleanup(): void {\n    //console.log(\"Cleaning up event listeners\");\n    globalEventBus.off(\"EnemySeenPlayer\", this.handleEnemySeen.bind(this));\n  }\n}\n","export class Utils {\n  static distance = (\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n  ) => {\n    return Math.sqrt((endX - startX) ** 2 + (endY - startY) ** 2);\n  };\n\n  static calculateExponentialFalloff = (\n    distance: number,\n    falloffRate: number,\n  ): number => {\n    return Math.exp(-falloffRate * distance);\n  };\n\n  // Corrected HSV to HEX conversion\n  static hsvToHex = (h: number, s: number, v: number): string => {\n    let c = v * s;\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    let m = v - c;\n    let r = 0,\n      g = 0,\n      b = 0;\n\n    if (h >= 0 && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (h >= 60 && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (h >= 120 && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (h >= 180 && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (h >= 240 && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else {\n      r = c;\n      g = 0;\n      b = x;\n    }\n\n    // Convert to RGB values\n    const rFinal = Math.round((r + m) * 255);\n    const gFinal = Math.round((g + m) * 255);\n    const bFinal = Math.round((b + m) * 255);\n\n    // Convert RGB to HEX\n    const toHex = (val: number) => {\n      const hex = val.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    };\n\n    return `#${toHex(rFinal)}${toHex(gFinal)}${toHex(bFinal)}`;\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\n\nexport class Dagger extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 0;\n    this.name = \"Dagger\";\n  }\n\n  degrade = () => {};\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class DualDagger extends Weapon {\n  firstAttack: boolean;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 23;\n    this.tileY = 0;\n    this.firstAttack = true;\n    this.name = \"Dual Dagger\";\n  }\n\n  tickInInventory = () => {\n    this.firstAttack = true;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (e.destroyable && !e.pushable && e.pointIn(newX, newY)) {\n        e.hurt(this.wielder, 1);\n\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(\n        new SlashParticle(newX, newY)\n      );\n      this.game.rooms[this.wielder.levelID].entities = this.game.rooms[\n        this.wielder.levelID\n      ].entities.filter((e) => !e.dead);\n\n      if (!this.firstAttack) {\n        this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      }\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n\n      if (this.firstAttack) {\n        this.game.rooms[this.wielder.levelID].tickHitWarnings();\n        this.game.rooms[this.wielder.levelID].clearDeadStuff();\n        this.firstAttack = false;\n        this.wielder.slowMotionEnabled = true;\n      }\n      this.degrade();\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"Dual Daggers\\nOne extra attack per turn\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\n\nexport class Pickaxe extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 30;\n    this.tileY = 0;\n    this.canMine = true;\n  }\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class Shotgun extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 26;\n    this.tileY = 0;\n    this.name = \"Shotgun\";\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let newX3 = 3 * newX - 2 * this.wielder.x;\n    let newY3 = 3 * newY - 2 * this.wielder.y;\n    let range = 3;\n    if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\n    )\n      //if current position is inside new position OR is solid\n      return true;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX2, newY2) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\n    )\n      //if current position is inside new position 2 OR is solid\n      //set range as one\n      range = 1;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX3, newY3) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX3][newY3].isSolid()\n    )\n      //if current position is inside new position 3 OR is solid\n      //set range as two\n      range = 2;\n\n    let enemyHitCandidates = [];\n    let firstPushable = 4;\n    let firstNonPushable = 5;\n    let firstNonDestroyable = 5;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      //loop through enemies in this weapons wielders level\n      if (e.pushable) {\n        //case for pushables\n        if (e.pointIn(newX, newY)) return true;\n        //if pushable is in new position return true\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n          firstPushable = 2;\n          //if pushable is in position 2 set firstPushable var\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n          firstPushable = Math.min(firstPushable, 3);\n          //if pushable is in position 3 set firstPushable to min of firstPushable and 3\n        }\n      } else if (e.destroyable) {\n        //case for destroyables\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonPushable = 1;\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\n        }\n        //if enemy is in new position and range is enough push enemy to hit candidate array\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonPushable = Math.min(firstNonPushable, 2);\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n        }\n        //if enemy is in new position 2 and range is enough push enemy to hit candidate array\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonPushable = Math.min(firstNonPushable, 3);\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n        }\n        //if enemy is in new position 3 and range is enough push enemy to hit candidate array\n      } else {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonDestroyable = 1;\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 1\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 2\n\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 3\n      }\n    }\n    let targetX = newX3;\n    let targetY = newY3;\n    if (\n      firstNonDestroyable < firstNonPushable &&\n      firstNonDestroyable < firstPushable\n      //if a non destroyable comes before the first non pushable and before the first pushable\n    ) {\n      return true;\n      //return true and exit the function\n    }\n    if (firstNonPushable <= firstPushable) {\n      for (const c of enemyHitCandidates) {\n        let e = c.enemy;\n        let d = c.dist;\n        if (d === 3) e.hurt(this.wielder, 0.5);\n        else e.hurt(this.wielder, 1);\n      }\n      //finally bro\n      //for the array c of enemyHitCandidates if the enemy distance is 3 only do .5 damage\n      //if they're closer do the usual damage\n      //hits all candidates in enemyHitCandidates\n\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"black\"\n      );\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"#ffddff\"\n      );\n      let gp = new GenericParticle(\n        this.game.rooms[this.wielder.levelID],\n        0.5 * (newX + this.wielder.x) + 0.5,\n        0.5 * (newY + this.wielder.y),\n        0,\n        1,\n        0,\n        0,\n        0,\n        \"white\",\n        0\n      );\n      gp.expirationTimer = 10;\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n      this.degrade();\n\n      return false;\n    }\n    return true;\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { Enemy } from \"../entity/enemy/enemy\";\n\nexport class Spear extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 24;\n    this.tileY = 0;\n    this.name = \"Spear\";\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let flag = false;\n    let enemyHitCandidates = [];\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (e.destroyable) {\n        if (e.pointIn(newX, newY)) {\n          if (e.pushable) return true;\n          else {\n            e.hurt(this.wielder, 1);\n\n            flag = true;\n          }\n        }\n        if (\n          e.pointIn(newX2, newY2) &&\n          !this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\n        ) {\n          //only hit targest 2 tiles away if they are enemies\n          if (!e.pushable && e instanceof Enemy) enemyHitCandidates.push(e);\n        }\n      }\n    }\n    if (!flag && enemyHitCandidates.length > 0) {\n      for (const e of enemyHitCandidates) e.hurt(this.wielder, 1);\n      if (\n        this.wielder.game.room === this.wielder.game.rooms[this.wielder.levelID]\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(\n        new SlashParticle(newX, newY)\n      );\n      this.game.rooms[this.wielder.levelID].particles.push(\n        new SlashParticle(newX2, newY2)\n      );\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n      this.degrade();\n      return false;\n    }\n    if (flag) {\n      if (\n        this.wielder.game.room === this.wielder.game.rooms[this.wielder.levelID]\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(\n        new SlashParticle(newX, newY)\n      );\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n      this.degrade();\n    }\n    return !flag;\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\nimport { Player } from \"../player\";\nimport { Inventory } from \"../inventory\";\nimport { WizardFireball } from \"../projectile/wizardFireball\";\nimport { PlayerFireball } from \"../projectile/playerFireball\";\nimport { Lighting } from \"../lighting\";\nimport { Entity } from \"../entity/entity\";\nimport { Enemy } from \"../entity/enemy/enemy\";\nimport { Utils } from \"../utils\";\nimport { Direction } from \"../game\";\nexport class Spellbook extends Weapon {\n  targets: Entity[];\n  isTargeting: boolean;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.range = 4;\n    this.tileX = 25;\n    this.tileY = 0;\n    this.canMine = true;\n    this.name = \"Spellbook\";\n    this.isTargeting = false;\n  }\n\n  getTargets = () => {\n    this.targets = [];\n    let entities = this.game.rooms[this.wielder.levelID].entities;\n    this.targets = entities.filter(\n      (e) =>\n        !e.pushable &&\n        Utils.distance(this.wielder.x, this.wielder.y, e.x, e.y) <= this.range,\n    );\n    let enemies = this.targets.filter((e) => e instanceof Enemy);\n    console.log(enemies);\n    if (enemies.length > 0) return enemies;\n    else {\n      console.log(this.targets);\n      return this.targets;\n    }\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    this.getTargets();\n    let direction = this.wielder.direction;\n    let flag = false;\n    let targets = this.targets;\n    const isTargetInDirection = (e: Entity): boolean => {\n      switch (direction) {\n        case Direction.UP:\n          return e.y <= newY;\n        case Direction.RIGHT:\n          return e.x >= newX;\n        case Direction.DOWN:\n          return e.y >= newY;\n        case Direction.LEFT:\n          return e.x <= newX;\n        default:\n          return false;\n      }\n    };\n    if (targets.length > 0) {\n      this.isTargeting = true;\n    } else {\n      this.isTargeting = false;\n    }\n\n    targets = targets.filter(isTargetInDirection);\n\n    for (let e of targets) {\n      if (\n        !this.game.rooms[this.wielder.levelID].roomArray[e.x][e.y].isSolid()\n      ) {\n        e.hurt(this.wielder, 1);\n\n        this.game.rooms[this.wielder.levelID].projectiles.push(\n          new PlayerFireball(this.wielder, e.x, e.y),\n        );\n\n        flag = true;\n      }\n    }\n\n    if (flag) {\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n      Sound.playMagic();\n      this.degrade();\n      setTimeout(() => {\n        this.isTargeting = false;\n      }, 100);\n    }\n    return !flag;\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/object/crate\";\nimport { Barrel } from \"../entity/object/barrel\";\n\nexport class Warhammer extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 2;\n    this.damage = 2;\n    this.name = \"Warhammer\";\n  }\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Equippable } from \"../item/equippable\";\nimport { Player } from \"../player\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\n\nexport abstract class Weapon extends Equippable {\n  game: Game;\n  range: number;\n  canMine: boolean;\n  damage: number;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    if (level) this.game = level.game;\n\n    this.canMine = false;\n    this.range = 1;\n    this.damage = 1;\n  }\n\n  break = () => {\n    this.durability = 0;\n    this.wielder.inventory.weapon = null;\n    this.toggleEquip();\n    this.wielder.inventory.removeItem(this);\n    this.wielder = null;\n  };\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Weapon) return false;\n    return true;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (e.destroyable && !e.pushable && e.pointIn(newX, newY)) {\n        e.hurt(this.wielder, this.damage);\n\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.hitX = 0.5 * (this.wielder.x - newX);\n      this.wielder.hitY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(\n        new SlashParticle(newX, newY)\n      );\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\n      this.degrade();\n      console.log(this.durability);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return `${this.name}\\nDamage ${this.damage}`;\n  };\n\n  tick = () => {};\n\n  // returns true if nothing was hit, false if the player should move\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}
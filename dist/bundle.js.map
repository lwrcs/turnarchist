{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,cAAc;AAChB;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA,EAAE,cAAc;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;AC1DD;AACA;AACA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9KA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACjKA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc;AACdvD;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oDAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC3QA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,yDAAI;AACpC;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACjRA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,CAAC;;;;;;;;;;;ACRD,eAAe,mBAAO,CAAC,+DAAU;;AAEjC;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,uBAAuB,oBAAoB;AAC3C,qHAAiD;AACjD,oIAAyD;AACzD,mHAAmD;;;;;;;;;;;ACbnD,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,cAAc,mBAAO,CAAC,kDAAO;AAC7B,eAAe,mBAAO,CAAC,sEAAkB;AACzC,iBAAiB,mBAAO,CAAC,kDAAU;AACnC,gBAAgB,mBAAO,CAAC,gDAAS;;AAEjC;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvqBA,eAAe,mBAAO,CAAC,sEAAkB;AACzC,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,cAAc,mBAAO,CAAC,kDAAO;;AAE7B;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtHA,uBAAuB,mBAAO,CAAC,iFAAoB;AACnD,YAAY,mBAAO,CAAC,oFAAe;AACnC,cAAc,mBAAO,CAAC,wFAAiB;AACvC,kBAAkB,mBAAO,CAAC,gFAAa;;AAEvC,eAAe;AACf,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;AC5CA,gBAAgB,mBAAO,CAAC,4EAAW;AACnC,mBAAmB,mBAAO,CAAC,gFAAe;;AAE1C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvMA;;AAEA,uBAAuB,mBAAO,CAAC,iFAAoB;AACnD,gBAAgB,mBAAO,CAAC,4EAAW;AACnC,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,QAAQ,OAAO,EAAE,mBAAO,CAAC,4DAAS;AAClC,mBAAmB,mBAAO,CAAC,gFAAe;;AAE1C,cAAc,mBAAO,CAAC,kDAAO;;AAE7B;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,gBAAgB;AACnD;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB;AACnB,0BAA0B,0BAA0B;AACpD;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,2DAA2D;AAC3D,UAAU;AACV;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;;;;;;;;;;AC/UtB,kBAAkB,mBAAO,CAAC,sEAAc;AACxC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC,eAAe,mBAAO,CAAC,sEAAkB;AACzC,cAAc,mBAAO,CAAC,4CAAO;;AAE7B,cAAc,mBAAO,CAAC,kDAAO;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjNA,mBAAmB,mBAAO,CAAC,gFAAe;;AAE1C;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA,kBAAkB,mBAAO,CAAC,sEAAc;AACxC,eAAe,mBAAO,CAAC,sEAAkB;AACzC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC,cAAc,mBAAO,CAAC,4CAAO;AAC7B,QAAQ,OAAO,EAAE,mBAAO,CAAC,4DAAS;AAClC;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,gHAAyB;;AAErC,cAAc,mBAAO,CAAC,kDAAO;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5QA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;;;;;;;;;;ACPA;;AAEA,gBAAgB,mBAAO,CAAC,kDAAU;AAClC,mBAAmB,mBAAO,CAAC,+EAAc;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;;;;;;;;;;ACvCA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA,QAAQ,qCAAqC,EAAE,mBAAO,CAAC,iEAAW;;AAElE;;AAEA;AACA;AACA,kBAAkB,mBAAO,CAAC,uFAAoB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,aAAa,sBAAsB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;;;;;;;;;;;ACxDA,QAAQ,eAAe,EAAE,mBAAO,CAAC,iEAAW;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7CA,qBAAqB,mBAAO,CAAC,mFAAgB;AAC7C,qBAAqB,mBAAO,CAAC,mFAAgB;;AAE7C,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA,cAAc;AACd;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA,yGAAyG,IAAI,GAAG,IAAI,SAAS,IAAI;;AAEjI;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE;AACxE;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wEAAwE;AACxE,kFAAkF;AAClF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,IAAI;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,yBAAyB;AACrD,oBAAoB,mBAAO,CAAC,sEAAa;AACzC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,aAAa;AACb;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,eAAe,GAAG,kBAAkB,GAAG,gBAAgB;AACzE,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,iBAAiB,mBAAO,CAAC,gEAAU;AACnC,oBAAoB,mBAAO,CAAC,sEAAa;AACzC,cAAc,mBAAO,CAAC,kDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,wBAAwB;AACxB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Ra;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;;;;;ACtDjB,gEAA8B;AAC9B,8FAAkD;AAElD,2FAAgD;AAGhD,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,+CAAK;IACL,iDAAM;IACN,6CAAI;IACJ,yDAAU;IACV,6CAAI;AACN,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED;IAKE,mBAAY,SAAoB,EAAE,IAAU;QAA5C,iBAGC;QAED,SAAI,GAAG,cAAO,CAAC,CAAC;QAEhB,cAAS,GAAG,UAAC,MAAc;YACzB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC;QACF,aAAQ,GAAG,UAAC,KAAkB;YAC5B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC;QAEF,SAAI,GAAG,UAAC,KAAa;YACnB,IAAI,IAAI,GAAG,+BAAc,CAAC,QAAQ,GAAG,CAAC,CAAC;YACvC,I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mBAAO,CAAC,sEAAkB;AACtC,iBAAiB,mBAAO,CAAC,iEAAU;AACnC,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,eAAe,mBAAO,CAAC,uEAAkB;AACzC,aAAa,mBAAO,CAAC,yDAAM;AAC3B,gBAAgB,mBAAO,CAAC,8CAAQ;AAChC,cAAc,mBAAO,CAAC,kDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;AChXF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;;;;;;;;;;;ACTG;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,2BAA2B,mBAAO,CAAC,uEAAkB;AACrD,gBAAgB,mBAAO,CAAC,oEAAmB;AAC3C,aAAa,mBAAO,CAAC,yDAAM;AAC3B,cAAc,mBAAO,CAAC,kDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAmD;AACjF,aAAa;AACb;AACA;AACA,0BAA0B,8DAA8D;AACxaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAgD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;AC5cD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW;AACX,iBAAiB,mBAAO,CAAC,kDAAU;AACnC,cAAc,mBAAO,CAAC,kDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;;;;;;UCjEX;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://witch-game/./node_modules/backo2/index.js","webpack://witch-game/./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack://witch-game/./node_modules/component-emitter/index.js","webpack://witch-game/./node_modules/debug/node_modules/ms/index.js","webpack://witch-game/./node_modules/debug/src/browser.js","webpack://witch-game/./node_modules/debug/src/common.js","webpack://witch-game/./node_modules/engine.io-client/lib/globalThis.browser.js","webpack://witch-game/./node_modules/engine.io-client/lib/index.js","webpack://witch-game/./node_modules/engine.io-client/lib/socket.js","webpack://witch-game/./node_modules/engine.io-client/lib/transport.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/index.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/websocket.js","webpack://witch-game/./node_modules/engine.io-client/lib/util.js","webpack://witch-game/./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack://witch-game/./node_modules/engine.io-parser/lib/commons.js","webpack://witch-game/./node_modules/engine.io-parser/lib/decodePacket.browser.js","webpack://witch-game/./node_modules/engine.io-parser/lib/encodePacket.browser.js","webpack://witch-game/./node_modules/engine.io-parser/lib/index.js","webpack://witch-game/./node_modules/has-cors/index.js","webpack://witch-game/./node_modules/parseqs/index.js","webpack://witch-game/./node_modules/parseuri/index.js","webpack://witch-game/./node_modules/socket.io-parser/dist/binary.js","webpack://witch-game/./node_modules/socket.io-parser/dist/index.js","webpack://witch-game/./node_modules/socket.io-parser/dist/is-binary.js","webpack://witch-game/./src/actionTab.ts","webpack://witch-game/./src/astarclass.ts","webpack://witch-game/./src/drawable.ts","webpack://witch-game/./src/entity/armoredzombieEnemy.ts","webpack://witch-game/./src/entity/barrel.ts","webpack://witch-game/./src/entity/bigSkullEnemy.ts","webpack://witch-game/./src/entity/bishopEnemy.ts","webpack://witch-game/./src/entity/chargeEnemy.ts","webpack://witch-game/./src/entity/chest.ts","webpack://witch-game/./src/entity/coalResource.ts","webpack://witch-game/./src/entity/crate.ts","webpack://witch-game/./src/entity/emeraldResource.ts","webpack://witch-game/./src/entity/entity.ts","webpack://witch-game/./src/entity/frogEnemy.ts","webpack://witch-game/./src/entity/goldResource.ts","webpack://witch-game/./src/entity/knightEnemy.ts","webpack://witch-game/./src/entity/mushrooms.ts","webpack://witch-game/./src/entity/pot.ts","webpack://witch-game/./src/entity/pottedPlant.ts","webpack://witch-game/./src/entity/queenEnemy.ts","webpack://witch-game/./src/entity/resource.ts","webpack://witch-game/./src/entity/rockResource.ts","webpack://witch-game/./src/entity/skullEnemy.ts","webpack://witch-game/./src/entity/slimeEnemy.ts","webpack://witch-game/./src/entity/spawner.ts","webpack://witch-game/./src/entity/tombStone.ts","webpack://witch-game/./src/entity/vendingMachine.ts","webpack://witch-game/./src/entity/wizardEnemy.ts","webpack://witch-game/./src/entity/zombieEnemy.ts","webpack://witch-game/./src/game.ts","webpack://witch-game/./src/gameConstants.ts","webpack://witch-game/./src/gameState.ts","webpack://witch-game/./src/healthbar.ts","webpack://witch-game/./src/hitWarning.ts","webpack://witch-game/./src/input.ts","webpack://witch-game/./src/inventory.ts","webpack://witch-game/./src/item/armor.ts","webpack://witch-game/./src/item/backpack.ts","webpack://witch-game/./src/item/bluegem.ts","webpack://witch-game/./src/item/candle.ts","webpack://witch-game/./src/item/coal.ts","webpack://witch-game/./src/item/coin.ts","webpack://witch-game/./src/item/equippable.ts","webpack://witch-game/./src/item/gold.ts","webpack://witch-game/./src/item/goldenKey.ts","webpack://witch-game/./src/item/greengem.ts","webpack://witch-game/./src/item/heart.ts","webpack://witch-game/./src/item/item.ts","webpack://witch-game/./src/item/key.ts","webpack://witch-game/./src/item/lantern.ts","webpack://witch-game/./src/item/light.ts","webpack://witch-game/./src/item/redgem.ts","webpack://witch-game/./src/item/shrooms.ts","webpack://witch-game/./src/item/stone.ts","webpack://witch-game/./src/item/torch.ts","webpack://witch-game/./src/item/usable.ts","webpack://witch-game/./src/levelConstants.ts","webpack://witch-game/./src/levelGenerator.ts","webpack://witch-game/./src/lightSource.ts","webpack://witch-game/./src/map.ts","webpack://witch-game/./src/particle/deathParticle.ts","webpack://witch-game/./src/particle/genericParticle.ts","webpack://witch-game/./src/particle/particle.ts","webpack://witch-game/./src/particle/slashParticle.ts","webpack://witch-game/./src/particle/wizardTeleportParticle.ts","webpack://witch-game/./src/player.ts","webpack://witch-game/./src/postProcess.ts","webpack://witch-game/./src/projectile/enemySpawnAnimation.ts","webpack://witch-game/./src/projectile/playerFireball.ts","webpack://witch-game/./src/projectile/projectile.ts","webpack://witch-game/./src/projectile/wizardFireball.ts","webpack://witch-game/./src/random.ts","webpack://witch-game/./src/room.ts","webpack://witch-game/./src/serverAddress.ts","webpack://witch-game/./src/sound.ts","webpack://witch-game/./src/textbox.ts","webpack://witch-game/./src/tile/bones.ts","webpack://witch-game/./src/tile/button.ts","webpack://witch-game/./src/tile/chasm.ts","webpack://witch-game/./src/tile/coffinTile.ts","webpack://witch-game/./src/tile/door.ts","webpack://witch-game/./src/tile/downLadder.ts","webpack://witch-game/./src/tile/floor.ts","webpack://witch-game/./src/tile/fountainTile.ts","webpack://witch-game/./src/tile/insideLevelDoor.ts","webpack://witch-game/./src/tile/spawnfloor.ts","webpack://witch-game/./src/tile/spike.ts","webpack://witch-game/./src/tile/spiketrap.ts","webpack://witch-game/./src/tile/tile.ts","webpack://witch-game/./src/tile/trapdoor.ts","webpack://witch-game/./src/tile/upLadder.ts","webpack://witch-game/./src/tile/wall.ts","webpack://witch-game/./src/tile/wallTorch.ts","webpack://witch-game/./src/weapon/dagger.ts","webpack://witch-game/./src/weapon/dualdagger.ts","webpack://witch-game/./src/weapon/pickaxe.ts","webpack://witch-game/./src/weapon/shotgun.ts","webpack://witch-game/./src/weapon/spear.ts","webpack://witch-game/./src/weapon/spellbook.ts","webpack://witch-game/./src/weapon/weapon.ts","webpack://witch-game/./node_modules/yeast/index.js","webpack://witch-game/./node_modules/socket.io-client/build/index.js","webpack://witch-game/./node_modules/socket.io-client/build/manager.js","webpack://witch-game/./node_modules/socket.io-client/build/on.js","webpack://witch-game/./node_modules/socket.io-client/build/socket.js","webpack://witch-game/./node_modules/socket.io-client/build/url.js","webpack://witch-game/webpack/bootstrap","webpack://witch-game/webpack/before-startup","webpack://witch-game/webpack/startup","webpack://witch-game/webpack/after-startup"],"sourcesContent":["\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {}\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\n        \"beforeunload\",\n        () => {\n          if (this.transport) {\n            // silently close the transport\n            this.transport.removeAllListeners();\n            this.transport.close();\n          }\n        },\n        false\n      );\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      const self = this;\n      setTimeout(function() {\n        self.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n    const self = this;\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", function() {\n        self.onDrain();\n      })\n      .on(\"packet\", function(packet) {\n        self.onPacket(packet);\n      })\n      .on(\"error\", function(e) {\n        self.onError(e);\n      })\n      .on(\"close\", function() {\n        self.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n    const self = this;\n\n    Socket.priorWebsocketSuccess = false;\n\n    function onTransportOpen() {\n      if (self.onlyBinaryUpgrades) {\n        const upgradeLosesBinary =\n          !this.supportsBinary && self.transport.supportsBinary;\n        failed = failed || upgradeLosesBinary;\n      }\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", function(msg) {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          self.upgrading = true;\n          self.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', self.transport.name);\n          self.transport.pause(function() {\n            if (failed) return;\n            if (\"closed\" === self.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            self.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            self.emit(\"upgrade\", transport);\n            transport = null;\n            self.upgrading = false;\n            self.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          self.emit(\"upgradeError\", err);\n        }\n      });\n    }\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    function onerror(err) {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      self.emit(\"upgradeError\", error);\n    }\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    function cleanup() {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      self.removeListener(\"close\", onclose);\n      self.removeListener(\"upgrading\", onupgrade);\n    }\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const self = this;\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", function() {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    function close() {\n      self.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      self.transport.close();\n    }\n\n    function cleanupAndClose() {\n      self.removeListener(\"upgrade\", cleanupAndClose);\n      self.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    }\n\n    function waitForUpgrade() {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      self.once(\"upgrade\", cleanupAndClose);\n      self.once(\"upgradeError\", cleanupAndClose);\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n      const self = this;\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      self.writeBuffer = [];\n      self.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","const XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    const self = this;\n    callbacks.push(function(msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function(e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function() {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    const self = this;\n\n    this.readyState = \"pausing\";\n\n    function pause() {\n      debug(\"paused\");\n      self.readyState = \"paused\";\n      onPause();\n    }\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    const self = this;\n    debug(\"polling got data %s\", data);\n    const callback = function(packet, index, total) {\n      // if its the first message we consider the transport open\n      if (\"opening\" === self.readyState && packet.type === \"open\") {\n        self.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        self.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      self.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const self = this;\n\n    function close() {\n      debug(\"writing close packet\");\n      self.write([{ type: \"close\" }]);\n    }\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","const globalThis = require(\"../globalThis\");\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\"\n};\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    const self = this;\n\n    this.ws.onopen = function() {\n      self.onOpen();\n    };\n    this.ws.onclose = function() {\n      self.onClose();\n    };\n    this.ws.onmessage = function(ev) {\n      self.onData(ev.data);\n    };\n    this.ws.onerror = function(e) {\n      self.onError(\"websocket error\", e);\n    };\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    const self = this;\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    let total = packets.length;\n    let i = 0;\n    const l = total;\n    for (; i < l; i++) {\n      (function(packet) {\n        parser.encodePacket(packet, self.supportsBinary, function(data) {\n          // always create a new object (GH-437)\n          const opts = {};\n          if (!usingBrowserWebSocket) {\n            if (packet.options) {\n              opts.compress = packet.options.compress;\n            }\n\n            if (self.opts.perMessageDeflate) {\n              const len =\n                \"string\" === typeof data\n                  ? Buffer.byteLength(data)\n                  : data.length;\n              if (len < self.opts.perMessageDeflate.threshold) {\n                opts.compress = false;\n              }\n            }\n          }\n\n          // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n          try {\n            if (usingBrowserWebSocket) {\n              // TypeError is thrown when passing the second argument on Safari\n              self.ws.send(data);\n            } else {\n              self.ws.send(data, opts);\n            }\n          } catch (e) {\n            debug(\"websocket closed before onclose event\");\n          }\n\n          --total || done();\n        });\n      })(packets[i]);\n    }\n\n    function done() {\n      self.emit(\"flush\");\n\n      // fake drain\n      // defer to next tick to allow Socket to clear writeBuffer\n      setTimeout(function() {\n        self.writable = true;\n        self.emit(\"drain\");\n      }, 0);\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","import { Game } from \"./game\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Inventory } from \"./inventory\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Player } from \"./player\";\n\nexport enum ActionState {\n  READY,\n  ATTACK,\n  WAIT,\n  HALFATTACK,\n  MOVE\n}\n\nexport class ActionTab {\n  actionState: ActionState;\n  weapon: any;\n  game: Game;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.weapon = inventory.weapon;\n    this.game = game;\n  }\n\n  tick = () => {};\n\n  getWeapon = (player: Player) => {\n    this.weapon = player.inventory.weapon;\n  };\n  setState = (state: ActionState) => {\n    this.actionState = state;\n  };\n\n  draw = (delta: number) => {\n    let tabX = LevelConstants.SCREEN_W / 2;\n    let tabY = LevelConstants.SCREEN_H - 1;\n\n    let action = this.actionState;\n    const actionString: string = \"\" + ActionState[action]\n    let width = Game.measureText(actionString).width;\n    let actionX = 4 - width/2;\n    let actionY = -1;\n\n    Game.fillTextOutline(\n      actionString,\n      tabX * GameConstants.TILESIZE + actionX,\n      tabY * GameConstants.TILESIZE + actionY,\n      GameConstants.OUTLINE,\n      \"white\"\n    );\n  };\n}\n","import { EntityDirection } from \"./entity/entity\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { Wall } from \"./tile/wall\";\n\nexport namespace astar {\n  //================== start graph js\n  /* \n  graph.js http://github.com/bgrins/javascript-astar\n  MIT License\n  Creates a Graph class used in the astar search algorithm.\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \n      URL: http://eloquentjavascript.net/appendix2.html\n      License: http://creativecommons.org/licenses/by/3.0/\n  */\n\n  export interface Position {\n    x: number;\n    y: number;\n  }\n\n  export enum GraphNodeType {\n    WALL,\n    OPEN,\n  }\n\n  let getTileCost = tile => {\n    if (tile)\n      return (tile.isSolid() || tile.isDoor) ? 99999999 : 1;\n    else\n      return 99999999;\n  };\n\n  export class Graph {\n    nodes: GraphNode[][];\n    elements: number[][];\n\n    constructor(grid: number[][]) {\n      this.elements = grid;\n      var nodes: GraphNode[][] = [];\n      var row: number[],\n        rowLength: number,\n        len = grid.length;\n      for (var x = 0; x < len; ++x) {\n        row = grid[x];\n        rowLength = row.length;\n        nodes[x] = new Array(rowLength); // optimum array with size\n        for (var y = 0; y < rowLength; ++y) {\n          nodes[x][y] = new GraphNode(x, y, row[y]);\n        }\n      }\n      this.nodes = nodes;\n    }\n\n    toString(): string {\n      var graphString = \"\\n\";\n      var nodes = this.nodes;\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\n      for (var x = 0, len = nodes.length; x < len;) {\n        rowDebug = \"\";\n        row = nodes[x++];\n        for (y = 0, l = row.length; y < l;) {\n          rowDebug += row[y++].type + \" \";\n        }\n        graphString = graphString + rowDebug + \"\\n\";\n      }\n      return graphString;\n    }\n  }\n\n  export class GraphNode {\n    x: number;\n    y: number;\n    type: GraphNodeType;\n    data: any;\n    pos: Position;\n\n    constructor(x: number, y: number, type: GraphNodeType) {\n      this.data = {};\n      this.x = x;\n      this.y = y;\n      this.pos = { x: x, y: y };\n      this.type = type;\n    }\n\n    toString(): string {\n      return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    isWall() {\n      return this.type == GraphNodeType.WALL;\n    }\n  }\n\n  export class BinaryHeap {\n    content: any[];\n    scoreFunction: (node: any) => number;\n\n    constructor(scoreFunction: (node: any) => number) {\n      this.content = [];\n      this.scoreFunction = scoreFunction;\n    }\n\n    push(node: any) {\n      // Add the new node to the end of the array.\n      this.content.push(node);\n      // Allow it to sink down.\n      this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n      // Store the first node so we can return it later.\n      var result = this.content[0];\n      // Get the node at the end of the array.\n      var end = this.content.pop();\n      // If there are any elements left, put the end node at the\n      // start, and let it bubble up.\n      if (this.content.length > 0) {\n        this.content[0] = end;\n        this.bubbleUp(0);\n      }\n      return result;\n    }\n\n    remove(node: any) {\n      var i = this.content.indexOf(node);\n\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      if (i !== this.content.length - 1) {\n        this.content[i] = end;\n        if (this.scoreFunction(end) < this.scoreFunction(node)) this.sinkDown(i);\n        else this.bubbleUp(i);\n      }\n    }\n\n    size() {\n      return this.content.length;\n    }\n\n    rescoreElement(node: any) {\n      this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n: number) {\n      // Fetch the element that has to be sunk.\n      var element = this.content[n];\n      // When at 0, an element can not sink any further.\n      while (n > 0) {\n        // Compute the parent element's index, and fetch it.\n        var parentN = ((n + 1) >> 1) - 1,\n          parent = this.content[parentN];\n        // Swap the elements if the parent is greater.\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n          this.content[parentN] = element;\n          this.content[n] = parent;\n          // Update 'n' to continue at the new position.\n          n = parentN;\n        } else {\n          // Found a parent that is less, no need to sink any further.\n          break;\n        }\n      }\n    }\n\n    bubbleUp(n: number) {\n      // Look up the target element and its score.\n      var length = this.content.length,\n        element = this.content[n],\n        elemScore = this.scoreFunction(element);\n\n      while (true) {\n        // Compute the indices of the child elements.\n        var child2N = (n + 1) << 1,\n          child1N = child2N - 1;\n        // This is used to store the new position of the element,\n        // if any.\n        var swap = null;\n        // If the first child exists (is inside the array)...\n        if (child1N < length) {\n          // Look it up and compute its score.\n          var child1 = this.content[child1N],\n            child1Score = this.scoreFunction(child1);\n          // If the score is less than our element's, we need to swap.\n          if (child1Score < elemScore) swap = child1N;\n        }\n        // Do the same checks for the other child.\n        if (child2N < length) {\n          var child2 = this.content[child2N],\n            child2Score = this.scoreFunction(child2);\n          if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N;\n        }\n\n        // If the element needs to be moved, swap it, and continue.\n        if (swap !== null) {\n          this.content[n] = this.content[swap];\n          this.content[swap] = element;\n          n = swap;\n        } else {\n          // Otherwise, we are done.\n          break;\n        }\n      }\n    }\n  }\n  //end graph.js ==================\n\n  // javascript-astar\n  // http://github.com/bgrins/javascript-astar\n  // Freely distributable under the MIT License.\n  // Implements the astar search algorithm in javascript using a binary heap.\n  export interface AStarData {\n    f: number;\n    g: number;\n    h: number;\n    cost: number;\n    visited: boolean;\n    closed: boolean;\n    parent: AStarData;\n    pos: Position;\n    org: any;\n  }\n\n  export class AStar {\n    static NO_CHECK_START_POINT: boolean = false;\n    grid: AStarData[][];\n    constructor(grid: any[][], disablePoints?: Position[], enableCost?: boolean) {\n      this.grid = [];\n      for (var x = 0, xl = grid.length; x < xl; x++) {\n        this.grid[x] = [];\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\n          var cost = getTileCost(grid[x][y]);\n          this.grid[x][y] = {\n            org: grid[x][y],\n            f: 0,\n            g: 0,\n            h: 0,\n            cost: cost,\n            visited: false,\n            closed: false,\n            pos: {\n              x: x,\n              y: y,\n            },\n            parent: null,\n          };\n        }\n      }\n      if (disablePoints !== undefined) {\n        for (var i = 0; i < disablePoints.length; i++)\n          this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\n      }\n    }\n\n    heap(): BinaryHeap {\n      return new BinaryHeap(function (node: AStarData) {\n        return node.f;\n      });\n    }\n\n    _find(org: any) {\n      for (var x = 0; x < this.grid.length; x++)\n        for (var y = 0; y < this.grid[x].length; y++)\n          if (this.grid[x][y].org == org) return this.grid[x][y];\n    }\n\n    _search(start: any, end: any, diagonal?: boolean, diagonalsOnly?: boolean, turnCostsExtra?: boolean, turnDirection?: EntityDirection, heuristic?: Function, diagonalsOmni?: boolean) {\n      heuristic = heuristic || this.manhattan;\n      diagonal = !!diagonal;\n      diagonalsOnly = !!diagonalsOnly;\n      turnCostsExtra = !!turnCostsExtra;\n      diagonalsOmni = !!diagonalsOmni;\n\n      var openHeap = this.heap();\n\n      var _start: AStarData, _end: AStarData;\n      if (start.x !== undefined && start.y !== undefined) _start = this.grid[start.x][start.y];\n      else _start = this._find(start);\n\n      if (end.x !== undefined && end.y !== undefined) _end = this.grid[end.x][end.y];\n      else _end = this._find(end);\n\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\n\n      openHeap.push(_start);\n\n      while (openHeap.size() > 0) {\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n        var currentNode: AStarData = openHeap.pop();\n\n        // End case -- result has been found, return the traced path.\n        if (currentNode === _end) {\n          var curr = currentNode;\n          var ret = [];\n          while (curr.parent) {\n            ret.push(curr);\n            curr = curr.parent;\n          }\n          return ret.reverse();\n        }\n\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\n        currentNode.closed = true;\n\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\n        var neighbors = this.neighbors(currentNode, diagonal, diagonalsOnly, diagonalsOmni);\n\n        for (var i = 0, il = neighbors.length; i < il; i++) {\n          var neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.cost <= 0) {\n            // Not a valid node to process, skip to next neighbor.\n            continue;\n          }\n\n          // The g score is the shortest distance from start to current node.\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\n          var gScore = currentNode.g + neighbor.cost;\n          if (turnCostsExtra) {\n            var isTurn = false;\n            if (currentNode.parent)\n              isTurn = !((currentNode.parent.pos.x === currentNode.pos.x && currentNode.pos.x === neighbor.pos.x) || (currentNode.parent.pos.y === currentNode.pos.y && currentNode.pos.y === neighbor.pos.y));\n            else { // initial step\n              isTurn = true;\n              if (neighbor.pos.x - currentNode.pos.x === 0 && neighbor.pos.y - currentNode.pos.y === -1 && turnDirection === EntityDirection.UP) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === 0 && neighbor.pos.y - currentNode.pos.y === 1 && turnDirection === EntityDirection.DOWN) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === 1 && neighbor.pos.y - currentNode.pos.y === 0 && turnDirection === EntityDirection.RIGHT) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === -1 && neighbor.pos.y - currentNode.pos.y === 0 && turnDirection === EntityDirection.LEFT) isTurn = false;\n            }\n            if (isTurn) gScore++;\n          }\n          var beenVisited = neighbor.visited;\n\n          if (!beenVisited || gScore < neighbor.g) {\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n            neighbor.visited = true;\n            neighbor.parent = currentNode;\n            neighbor.h = neighbor.h || heuristic(neighbor.pos, _end.pos);\n            neighbor.g = gScore;\n            neighbor.f = neighbor.g + neighbor.h;\n\n            if (!beenVisited) {\n              // Pushing to heap will put it in proper place based on the 'f' value.\n              openHeap.push(neighbor);\n            } else {\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\n              openHeap.rescoreElement(neighbor);\n            }\n          }\n        }\n      }\n\n      // No result was found - empty array signifies failure to find path.\n      return [];\n    }\n\n    static search(\n      grid: any[][],\n      start: any,\n      end: any,\n      disablePoints?: Position[],\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: EntityDirection,\n      heuristic?: Function,\n      diagonalsOmni?: boolean\n    ) {\n      var astar = new AStar(grid, disablePoints);\n      return astar._search(start, end, diagonal, diagonalsOnly, turnCostsExtra, turnDirection, heuristic, diagonalsOmni);\n    }\n\n    manhattan(pos0: Position, pos1: Position): number {\n      // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    }\n\n    neighbors(node: AStarData, diagonals?: boolean, diagonalsOnly?: boolean, diagonalsOmni?: boolean): AStarData[] {\n      var grid = this.grid;\n      var ret = [];\n      var x = node.pos.x;\n      var y = node.pos.y;\n\n      if (!diagonalsOnly) {\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          ret.push(grid[x][y + 1]);\n        }\n      }\n\n      if (diagonals) {\n        // Southwest\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\n          ret.push(grid[x - 1][y - 1]);\n        }\n\n        // Southeast\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\n          ret.push(grid[x + 1][y - 1]);\n        }\n\n        // Northwest\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\n          ret.push(grid[x - 1][y + 1]);\n        }\n\n        // Northeast\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\n          ret.push(grid[x + 1][y + 1]);\n        }\n      }\n      function getRandomBoolean(): boolean {\n        return Math.random() < 0.5;\n    }\n      if (diagonalsOmni) {\n        const randomBool: boolean = getRandomBoolean();\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          // Instead of pushing West, choose between Southwest and Northwest\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]), console.log(\"Southwest\");\n            return;\n          } else {\n            ret.push(grid[x - 1][y + 1]), console.log(\"Northwest\");\n            return;\n          }\n        }\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          if (randomBool == true) {\n            ret.push(grid[x + 1][y - 1]), console.log(\"Southeast\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]), console.log(\"Northeast\");\n            return;\n          }\n        }\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]), console.log(\"Southwest\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y - 1]), console.log(\"Southeast\");\n            return;\n          }\n        }\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y + 1]), console.log(\"Northwest\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]), console.log(\"Northeast\");\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    \n\n      return ret;\n    }\n  }\n}\n","export class Drawable {\n  drawableY = 0;\n\n  draw = (delta: number) => { };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\n\nexport class ArmoredzombieEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.room, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      //this.facePlayer(playerHitBy); // \n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            /*this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));*/\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else\n                grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = EntityDirection.RIGHT;\n            else if (moveX < oldX) this.direction = EntityDirection.LEFT;\n            else if (moveY > oldY) this.direction = EntityDirection.DOWN;\n            else if (moveY < oldY) this.direction = EntityDirection.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.rooms[this.game.players[i].levelID] === this.room && this.game.players[i].x === moveX && this.game.players[i].y === moveY && (oldDir == this.direction)) {\n                  this.game.players[i].hurt(this.hit(), \"armored zombie\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n          }\n\n          if (this.direction == EntityDirection.LEFT) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EntityDirection.RIGHT) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EntityDirection.DOWN) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n          if (this.direction == EntityDirection.UP) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.direction == EntityDirection.LEFT) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                }\n                if (this.direction == EntityDirection.RIGHT) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                }\n                if (this.direction == EntityDirection.DOWN) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n                if (this.direction == EntityDirection.UP) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 27;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 17;\n        this.tileY = 8;\n      }\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./entity\";\n\nexport class Barrel extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 1;\n    this.tileX = 1;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.entityType = EntityType.PROP;\n  }\n\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#9badb7\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { GameConstants } from \"../gameConstants\";\nimport { DeathParticle } from \"../particle/deathParticle\";\n\nexport class BigSkullEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 21;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n\n    this.drops = [];\n    if (drop) this.drops.push(drop);\n    while (this.drops.length < 4) {\n      let dropProb = rand();\n      if (dropProb < 0.005) this.drops.push(new Spear(this.room, 0, 0));\n      else if (dropProb < 0.04) this.drops.push(new RedGem(this.room, 0, 0));\n      else if (dropProb < 0.075) this.drops.push(new RedGem(this.room, 0, 0));\n      else if (dropProb < 0.1) this.drops.push(new RedGem(this.room, 0, 0));\n      else this.drops.push(new Coin(this.room, 0, 0));\n    }\n  }\n\n  addHitWarnings = () => {\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y + 1));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x + 2, this.y));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x + 2, this.y + 1));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y - 1));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 2));\n    this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y + 2));\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.room, this.x + 1, this.y + 1, this.deathParticleColor);\n    }\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(this.room, this.x + 1, this.y + 1, this.deathParticleColor);\n    this.room.particles.push(new DeathParticle(this.x + 0.5, this.y + 0.5));\n\n    this.dropLoot();\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health == 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health++;\n          this.ticksSinceFirstHit = 0;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n              if (this.health >= 3) this.addHitWarnings();\n            }\n          }\n        }\n        else if (this.seenPlayer) {\n          if (this.room.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n            let moveX = this.x;\n            let moveY = this.y;\n            if (this.ticks % 2 === 0) { // horizontal preference\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n            } else { // vertical preference\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n            }\n\n            let hitPlayer = false;\n            if (this.health >= 3) {\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return player.x >= moveX && player.x < moveX + this.w && player.y >= moveY && player.y < moveY + this.h;\n              };\n              for (const i in this.game.players) {\n                if (this.game.rooms[this.game.players[i].levelID] === this.room && wouldHit(this.game.players[i], moveX, moveY)) {\n                  this.game.players[i].hurt(this.hit(), \"big skeleton\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n              else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n              else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n              else if (this.y < oldY) this.direction = EntityDirection.UP;\n            }\n\n            if (this.health < this.maxHealth) {\n              this.ticksSinceFirstHit++;\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n                this.health++;\n                this.ticksSinceFirstHit = 0;\n              }\n            }\n\n            if (this.health >= 3) this.addHitWarnings();\n          }\n\n          let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                  if (this.health >= 3) this.addHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 21;\n      this.tileY = 0;\n      if (this.health === 3) {\n        this.tileX = 21;\n        this.tileY = 4;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 0;\n          }\n        }\n      }\n      else if (this.health === 2) {\n        this.tileX = 21;\n        this.tileY = 8;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 4;\n          }\n        }\n      }\n      else if (this.health === 1) {\n        this.tileX = 21;\n        this.tileY = 12;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 8;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 20 ? Math.floor(this.frame) * 2 : 0),\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta, GameConstants.TILESIZE * 0.5, GameConstants.TILESIZE * -1);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta, GameConstants.TILESIZE * 0.5, GameConstants.TILESIZE * -1);\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(delta, this.health, this.maxHealth, this.x + 0.5, this.y, true);\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.room;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.room.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Candle } from \"../item/candle\";\n\nexport class BishopEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(\n    level: Room,\n    game: Game,\n    x: number,\n    y: number,\n    rand: () => number,\n    drop?: Item\n  ) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 23;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.room, 0, 0);\n      else if (dropProb < 0.04) this.drop = new GreenGem(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Entity): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor\n      );\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y - 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y + 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y - 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y + 1)\n            );\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n            /*disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY - 1} as astar.Position);*/\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false //diagonalsOmni\n          );\n          if (moves.length > 0) {\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), \"bishop\");\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              //if ()\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              /*if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n              else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n              else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n              else if (this.y < oldY) this.direction = EnemyDirection.UP;*/\n            }\n          }\n\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y - 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y + 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y - 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y + 1)\n          );\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y - 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y + 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y - 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y + 1)\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Coin } from \"../item/coin\";\nimport { Door } from \"../tile/door\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Random } from \"../random\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Item } from \"../item/item\";\n\nexport enum ChargeEnemyState {\n  IDLE,\n  ALERTED,\n  CHARGING,\n}\n\nexport class ChargeEnemy extends Entity {\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  ticks: number;\n  frame: number;\n  state: ChargeEnemyState;\n  trailFrame: number;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 13;\n    this.tileY = 8;\n    this.trailFrame = 0;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    this.state = ChargeEnemyState.IDLE;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.room, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n  hit = (): number => {\n    return 1;\n  };\n\n  canMoveOver = (x: number, y: number): boolean => {\n    for (const e of this.room.entities) {\n      if (e !== this && x === e.x && y === e.y) return false;\n    }\n    let t = this.room.roomArray[x][y];\n    return !(t.isSolid() || t instanceof Door);\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (this.state === ChargeEnemyState.IDLE) {\n        let blocked = false;\n        let dx = 0;\n        let dy = 0;\n        for (const i in this.game.players) {\n          if (this.x === this.game.players[i].x) {\n            if (this.y < this.game.players[i].y) dy = 1;\n            else dy = -1;\n            for (let yy = this.y; yy !== this.game.players[i].y; yy += dy) {\n              if (!this.canMoveOver(this.x, yy)) blocked = true;\n            }\n          } else if (this.y === this.game.players[i].y) {\n            if (this.x < this.game.players[i].x) dx = 1;\n            else dx = -1;\n            for (let xx = this.x; xx !== this.game.players[i].x; xx += dx) {\n              if (!this.canMoveOver(xx, this.y)) blocked = true;\n            }\n          }\n          if ((dx !== 0 || dy !== 0) && !blocked) {\n            this.state = ChargeEnemyState.ALERTED;\n            this.targetX = this.x;\n            this.targetY = this.y;\n            while (this.canMoveOver(this.targetX + dx, this.targetY + dy)) {\n              this.targetX += dx;\n              this.targetY += dy;\n              if (\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x - 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x + 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y - 1) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y + 1)\n              )\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.targetX, this.targetY)\n                );\n            }\n            this.visualTargetX = this.targetX + 0.5 * dx;\n            this.visualTargetY = this.targetY + 0.5 * dy;\n            if (dy === 1) this.visualTargetY += 0.65;\n            if (dx > 0) this.direction = EntityDirection.RIGHT;\n            else if (dx < 0) this.direction = EntityDirection.LEFT;\n            else if (dy < 0) this.direction = EntityDirection.UP;\n            else if (dy > 0) this.direction = EntityDirection.DOWN;\n            break;\n          }\n        }\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.state = ChargeEnemyState.CHARGING;\n        this.trailFrame = 0;\n\n        for (const i in this.game.players) {\n          if (\n            (this.y === this.game.players[i].y &&\n              ((this.x < this.game.players[i].x &&\n                this.game.players[i].x <= this.targetX) ||\n                (this.targetX <= this.game.players[i].x &&\n                  this.game.players[i].x < this.x))) ||\n            (this.x === this.game.players[i].x &&\n              ((this.y < this.game.players[i].y &&\n                this.game.players[i].y <= this.targetY) ||\n                (this.targetY <= this.game.players[i].y &&\n                  this.game.players[i].y < this.y)))\n          ) {\n            this.game.players[i].hurt(this.hit(), \"charge knight\");\n          }\n        }\n\n        this.startX = this.x;\n        this.startY = this.y;\n        this.drawX = this.targetX - this.x;\n        this.drawY = this.targetY - this.y;\n        this.x = this.targetX;\n        this.y = this.targetY;\n      } else if (this.state === ChargeEnemyState.CHARGING) {\n        this.state = ChargeEnemyState.IDLE;\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (\n        (this.state === ChargeEnemyState.CHARGING &&\n          Math.abs(this.drawX) > 0.1) ||\n        Math.abs(this.drawY) > 0.1\n      ) {\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"black\"\n        );\n        GenericParticle.spawnCluster(\n          this.room,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"white\"\n        );\n      }\n\n      if (this.state === ChargeEnemyState.CHARGING) {\n        this.trailFrame += 0.01 * delta;\n        let t = this.trailFrame;\n\n        if (t >= 0 && t <= 1) {\n          Game.ctx.strokeStyle = \"white\";\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 1 - t;\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n          Game.ctx.beginPath();\n          Game.ctx.moveTo(\n            (this.startX + 0.5) * GameConstants.TILESIZE,\n            (this.startY + 0.5) * GameConstants.TILESIZE\n          );\n          Game.ctx.lineCap = \"round\";\n          Game.ctx.lineTo(\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE\n          );\n          Game.ctx.stroke();\n          Game.ctx.globalAlpha = 1;\n        }\n      }\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      if (this.state === ChargeEnemyState.IDLE) {\n        this.drawSleepingZs(delta);\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true\n    );\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n\n    if (this.state === ChargeEnemyState.ALERTED) {\n      this.trailFrame += 0.4 * delta;\n\n      if (Math.floor(this.trailFrame) % 2 === 0) {\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\n        if (this.direction === EntityDirection.LEFT) startX -= 3;\n        else if (this.direction === EntityDirection.RIGHT) startX += 3;\n        else if (this.direction === EntityDirection.DOWN) startY += 2;\n        else if (this.direction === EntityDirection.UP) startY -= 8;\n\n        Game.ctx.strokeStyle = \"white\";\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n        Game.ctx.beginPath();\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\n        Game.ctx.lineCap = \"round\";\n        Game.ctx.lineTo(\n          Math.round((this.visualTargetX + 0.5) * GameConstants.TILESIZE),\n          Math.round((this.visualTargetY - 0.25) * GameConstants.TILESIZE)\n        );\n        Game.ctx.stroke();\n        Game.ctx.globalAlpha = 1;\n      }\n    }\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Room } from \"../room\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { Sound } from \"../sound\";\nimport { RedGem } from \"../item/redgem\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { GameState } from \"../gameState\";\nimport { EntityType } from \"./entity\";\n\nexport class Chest extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number) {\n    super(level, game, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.health = 1;\n    this.entityType = EntityType.CHEST;\n\n    let drop = Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4], rand);\n\n    switch (drop) {\n      case 1:\n        this.drop = new Heart(this.room, this.x, this.y);\n        break;\n      case 2:\n        this.drop = new GreenGem(this.room, this.x, this.y);\n        break;\n      case 3:\n        this.drop = new RedGem(this.room, this.x, this.y);\n        break;\n      case 4:\n        this.drop = new BlueGem(this.room, this.x, this.y);\n        break;\n      case 5:\n        this.drop = new Key(this.room, this.x, this.y);\n        break;\n      case 6:\n        this.drop = new Armor(this.room, this.x, this.y);\n        break;\n    }\n  }\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.chest();\n\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n\n    this.room.items.push(this.drop);\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Room } from \"../room\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coal } from \"../item/coal\";\nimport { Sound } from \"../sound\";\nimport { Inventory } from \"../inventory\";\nimport { Weapon } from \"../weapon/weapon\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { Player } from \"../player\";\nimport { ItemState, ItemType } from \"../gameState\";\n\nexport class CoalResource extends Resource {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;    \n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new Coal(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./entity\";\n\nexport class Crate extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.entityType = EntityType.PROP\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#d9a066\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Room } from \"../room\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound\";\nimport { GameState } from \"../gameState\";\n\nexport class EmeraldResource extends Resource {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 14;\n    this.tileY = 0;\n    this.health = 3;\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new GreenGem(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Bones } from \"../tile/bones\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { Floor } from \"../tile/floor\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { HealthBar } from \"../healthbar\";\nimport { Drawable } from \"../drawable\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport enum EntityDirection {\n  DOWN,\n  UP,\n  RIGHT,\n  LEFT,\n}\n\nexport enum EntityType {\n  ENEMY,\n  FRIENDLY,\n  RESOURCE,\n  PROP,\n  CHEST,\n}\n\nexport class Entity extends Drawable {\n  room: Room;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  direction: EntityDirection;\n  drawX: number;\n  drawY: number;\n  dead: boolean;\n  game: Game;\n  health: number;\n  maxHealth: number;\n  tileX: number;\n  tileY: number;\n  hasShadow: boolean;\n  skipNextTurns: number;\n  //TODO: change these to functions? for enemies that switch states\n  destroyable: boolean; // can the player destroy this enemy?\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\n  interactable: boolean; // can the player interact\n  deathParticleColor: string;\n  healthBar: HealthBar;\n  drop: Item;\n  sleepingZFrame = 0;\n  alertTicks: number;\n  exclamationFrame: number;\n  lastX: number;\n  lastY: number;\n  entityType: EntityType;\n\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super();\n\n    this.room = level;\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.game = game;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = true;\n    this.skipNextTurns = 0;\n    this.direction = EntityDirection.DOWN;\n    this.destroyable = true;\n    this.pushable = false;\n    this.chainPushable = true;\n    this.interactable = false;\n    this.deathParticleColor = \"#ff00ff\";\n    this.healthBar = new HealthBar();\n    this.alertTicks = 0;\n    this.exclamationFrame = 0;\n    this.lastX = x;\n    this.lastY = y;\n    this.entityType = EntityType.ENEMY;\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let entityCollide = (entity: Entity): boolean => {\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) return false;\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && entityCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 0;\n  };\n\n  hurtCallback = () => {};\n\n  isType = () => {};\n\n  playerKilledBy = (enemy: Entity) => {\n    return enemy;\n  };\n\n  pointIn = (x: number, y: number): boolean => {\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  interact = (player: Player) => {};\n\n  dropLoot = () => {\n    if (this.drop) {\n      this.drop.level = this.room;\n      if (!this.room.roomArray[this.x][this.y].isSolid()) {\n        this.drop.x = this.x;\n        this.drop.y = this.y;\n      } else if (this.room.roomArray[this.x][this.y].isSolid()) {\n        this.drop.x = this.lastX;\n        this.drop.y = this.lastY;\n      }\n      this.room.items.push(this.drop);\n      this.drop.onDrop();\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n\n    this.killNoBones();\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      this.deathParticleColor\n    );\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n\n  shadeAmount = () => {\n    return this.room.softVis[this.x][this.y];\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  nearestPlayer = (): [number, Player] | false => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return [closestDistance, closestPlayer];\n  };\n\n  playerDistance = (player: Player): number => {\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\n  };\n\n  facePlayer = (player: Player) => {\n    let dx = player.x - this.x;\n    let dy = player.y - this.y;\n    if (Math.abs(dx) === Math.abs(dy)) {\n      // just moved, already facing player\n    } else if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx > 0) this.direction = EntityDirection.RIGHT;\n      if (dx < 0) this.direction = EntityDirection.LEFT;\n    } else {\n      if (dy > 0) this.direction = EntityDirection.DOWN;\n      if (dy < 0) this.direction = EntityDirection.UP;\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  tick = () => {};\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y - this.drawY;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true\n    );\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.sleepingZFrame += delta;\n\n    let numZs = 2;\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\n    t -= Math.floor(t);\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\n    for (let off = numZs - 1; off >= 0; off--) {\n      let yoff = (t + off) * 7;\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\n\n      let xoff = 0;\n      if (off === 0) xoff = 1;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n\n      let width = Game.measureText(\"Z\").width;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\n      Game.fillTextOutline(\n        \"Z\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\n        GameConstants.OUTLINE,\n        \"white\"\n      );\n      Game.ctx.globalAlpha = 1;\n    }\n  };\n\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.exclamationFrame += delta;\n\n    let yoff: number | false = 0;\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\n    else yoff = yoffs[this.exclamationFrame];\n\n    let width = Game.measureText(\"!\").width;\n    Game.ctx.globalAlpha = 1;\n    if (yoff !== false) {\n      Game.fillTextOutline(\n        \"!\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\n        GameConstants.OUTLINE,\n        GameConstants.WARNING_RED\n      );\n    }\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { astar } from \"../astarclass\";\nimport { HitWarning } from \"../hitWarning\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Coin } from \"../item/coin\";\nimport { Player } from \"../player\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class FrogEnemy extends Entity {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n  frameLength: number;\n  startFrame: number;\n  animationSpeed: number;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 1;\n    this.tileY = 16;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.frameLength = 3;\n    this.startFrame = 0;\n    this.animationSpeed = 0.1;\n\n\n    if (drop) this.drop = drop;\n    else {\n      this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 0.5;\n  };\n\n  jump = () => {\n    if (this.lastX !== this.x || this.lastY !== this.y) {\n      this.frameLength = 9;\n      this.frame = 2;\n      this.animationSpeed = 0.3;\n    }\n  }\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    \n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 1 === 0) {\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            \n            /*disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n            disablePositions.push({ x: this.x + 1, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y - 1 } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x + 1, y: this.y - 1 } as astar.Position);*/\n\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), \"frog\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.jump();\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          } else {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 1;\n      this.tileY = 16;\n      this.frame += this.animationSpeed * delta;\n      if (this.frame >= this.frameLength) this.frame = 0, this.frameLength = 3, this.animationSpeed = 0.1;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 1 ? Math.floor(this.frame) : 0),\n        this.tileY /*+ this.direction * 2,*/,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Room } from \"../room\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Gold } from \"../item/gold\";\nimport { Sound } from \"../sound\";\n\nexport class GoldResource extends Resource {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n    this.health = 2;\n  }\n\n  hurtCallback = () => {\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    this.room.items.push(new Gold(this.room, this.x, this.y));\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { astar } from \"../astarclass\";\nimport { HitWarning } from \"../hitWarning\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Coin } from \"../item/coin\";\nimport { Player } from \"../player\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Item } from \"../item/item\";\n\nexport class KnightEnemy extends Entity {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  targetPlayer: Player;\n  aggro: boolean;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 9;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = rand();\n      if (dropProb < 0.025) this.drop = new DualDagger(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), \"burrow knight\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n          } else {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 8;\n      } else {\n        this.tileX = 4;\n        this.tileY = 0;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY + (this.tileX === 4 ? 0.1875 : 0),\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Shrooms } from \"../item/shrooms\";\nimport { EntityType } from \"./entity\";\n\nexport class Mushrooms extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 1;\n    this.tileX = 9;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.PROP\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ac3232\");\n\n    this.room.items.push(new Shrooms(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./entity\";\n\nexport class Pot extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 1;\n    this.tileX = 11;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.PROP\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ce736a\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Item } from \"../item/item\";\nimport { Coin } from \"../item/coin\";\nimport { EntityType } from \"./entity\";\n\nexport class PottedPlant extends Entity {\n  drop: Item;\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 2;\n    this.tileX = 3;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.PROP\n    if (drop) this.drop = drop;\n    \n    else {\n      let dropProb = rand();\n      if (dropProb < 0.025) this.drop = new Heart(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#5d9250\");\n  };\n\n  kill = () => {\n    this.dead = true;\n    this.killNoBones();\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ce736a\");\n  };\n  killNoBones = () => {\n    this.dead = true;\n    this.dropLoot();\n  };\n  \n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      if (this.health <= 1) \n        this.tileX = 2;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n\n  dropLoot = () => {\n    this.drop.level = this.room;\n    this.drop.x = this.x;\n    this.drop.y = this.y;\n    this.room.items.push(this.drop);\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Candle } from \"../item/candle\";\n\nexport class QueenEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(\n    level: Room,\n    game: Game,\n    x: number,\n    y: number,\n    rand: () => number,\n    drop?: Item\n  ) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 23;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.room, 0, 0);\n      else if (dropProb < 0.04) this.drop = new GreenGem(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Entity): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.room.entities) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.room,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor\n      );\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y - 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y + 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y - 1)\n            );\n            this.room.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y + 1)\n            );\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n            /*disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY - 1} as astar.Position);*/\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n            false, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false //diagonalsOmni\n          );\n          if (moves.length > 0) {\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit(), \"queen\");\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              //if ()\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              /*if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n              else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n              else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n              else if (this.y < oldY) this.direction = EnemyDirection.UP;*/\n            }\n          }\n\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y - 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y + 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y - 1)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y + 1)\n          );\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y - 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y + 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y - 1)\n                );\n                this.room.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y + 1)\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Room } from \"../room\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Player } from \"../player\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { Spellbook } from \"../weapon/spellbook\";\nimport { EntityType } from \"./entity\";\n\nexport class Resource extends Entity {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.chainPushable = false;\n    this.entityType = EntityType.RESOURCE;\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy.inventory.getWeapon().canMine === true) {\n      this.healthBar.hurt();\n      this.health -= damage;\n      if (this.health <= 0) this.kill();\n      else {\n        this.game.pushMessage(\"Your weapon fails to damage the rock.\");\n        this.hurtCallback();\n      }\n    } else return;\n  };\n\n  kill = () => {\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Player } from \"../player\";\nimport { Sound } from \"../sound\";\nimport { Stone } from \"../item/stone\";\nimport { Resource } from \"./resource\";\n\nexport class Rock extends Resource {\n  constructor(level: Room, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.room = level;\n    this.health = 2;\n    this.tileX = 8;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n\n    if (this.room === this.game.room) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.room === this.game.room) Sound.breakRock();\n\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#9badb7\");\n\n    this.room.items.push(new Stone(this.room, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { Candle } from \"../item/candle\";\n\nexport class SkullEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  readonly REGEN_TICKS = 5;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 5;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = rand();\n      if (dropProb < 0.005) this.drop = new Spear(this.room, 0, 0);\n      else if (dropProb < 0.04) this.drop = new RedGem(this.room, 0, 0);\n      else if (dropProb <0.2) this.drop = new Candle(this.room, 0, 0)\n\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    //set last positions\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health <= 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health = 2;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n              this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n              this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n              this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n              this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            }\n          }\n        }\n        else if (this.seenPlayer) {\n          if (this.room.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let moveX = moves[0].pos.x;\n              let moveY = moves[0].pos.y;\n\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.rooms[this.game.players[i].levelID] === this.room && this.game.players[i].x === moveX && this.game.players[i].y === moveY) {\n                  this.game.players[i].hurt(this.hit(), \"skeleton\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n\n          let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 5;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 3;\n        this.tileY = 0;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileX = 2;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { astar } from \"../astarclass\";\nimport { HitWarning } from \"../hitWarning\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Coin } from \"../item/coin\";\nimport { Player } from \"../player\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class SlimeEnemy extends Entity {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 4;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.room.entities) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                  grid[x][y] = this.room.roomArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit(), \"crab\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n          } else {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 4;\n      } else {\n        this.tileX = 8;\n        this.tileY = 4;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n  };\n\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { astar } from \"../astarclass\";\nimport { Heart } from \"../item/heart\";\nimport { Floor } from \"../tile/floor\";\nimport { Bones } from \"../tile/bones\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GreenGem } from \"../item/greengem\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { SkullEnemy } from \"./skullEnemy\";\nimport { EnemySpawnAnimation } from \"../projectile/enemySpawnAnimation\";\nimport { RedGem } from \"../item/redgem\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { KnightEnemy } from \"./knightEnemy\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport class Spawner extends Entity {\n  ticks: number;\n  seenPlayer: boolean;\n  enemySpawnType: number;\n  rand: () => number;\n\n  constructor(\n    level: Room,\n    game: Game,\n    x: number,\n    y: number,\n    rand: () => number\n  ) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 6;\n    this.tileY = 4;\n    this.seenPlayer = true;\n    this.enemySpawnType = Game.randTable([1, 2, 2, 2, 2, 3], rand);\n    this.deathParticleColor = \"#ffffff\";\n\n    this.rand = rand;\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.tileX = 6;\n      if (this.ticks % 8 === 0) {\n        const positions = this.room\n          .getEmptyTiles()\n          .filter(\n            (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1\n          );\n        if (positions.length > 0) {\n          this.tileX = 7;\n\n          const position = Game.randTable(positions, this.rand);\n\n          let spawned;\n          switch (this.enemySpawnType) {\n            case 1:\n              spawned = new KnightEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n                this.rand\n              );\n              break;\n            case 2:\n              spawned = new SkullEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n                this.rand\n              );\n              break;\n            case 3:\n              spawned = new WizardEnemy(\n                this.room,\n                this.game,\n                position.x,\n                position.y,\n                this.rand\n              );\n              break;\n          }\n          this.room.projectiles.push(\n            new EnemySpawnAnimation(this.room, spawned, position.x, position.y)\n          );\n          this.room.hitwarnings.push(\n            new HitWarning(this.game, position.x, position.y)\n          );\n        }\n      }\n      this.ticks++;\n    }\n  };\n\n  dropLoot = () => {\n    this.room.items.push(new BlueGem(this.room, this.x, this.y));\n  };\n}\n","import { Entity } from \"./entity\";\nimport { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./entity\";\nimport { SkullEnemy } from \"./skullEnemy\";\nimport { Random } from \"../random\";\nimport { EnemySpawnAnimation } from \"../projectile/enemySpawnAnimation\";\nimport { Player } from \"../player\";\nimport { Item } from \"../item/item\";\nimport { Spellbook } from \"../weapon/spellbook\";\nimport { Sound } from \"../sound\";\n\nexport class TombStone extends Entity {\n  skinType: number;\n  rand: () => number;\n\n  constructor(\n    level: Room,\n    game: Game,\n    x: number,\n    y: number,\n    skinType: number,\n    rand: () => number,\n    drop?: Item\n  ) {\n    super(level, game, x, y);\n    this.skinType = skinType;\n    this.room = level;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 11 + this.skinType;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.pushable = false;\n    this.entityType = EntityType.PROP;\n    this.destroyable = true;\n    this.skinType = skinType;\n    this.rand = rand;\n    this.chainPushable = false;\n\n    let dropProb = Random.rand();\n    if (dropProb < 0.05) this.drop = new Spellbook(this.room, 0, 0);\n  }\n\n  kill = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(\n      this.room,\n      this.x + 0.5,\n      this.y + 0.5,\n      \"#d9a066\"\n    );\n    this.dropLoot();\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health === 1) {\n      const positions = this.room\n        .getEmptyTiles()\n        .filter(\n          (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1\n        );\n      if (positions.length > 0) {\n        for (let position of positions) {\n          for (const i in this.game.players) {\n            const playerX = this.game.players[i].x;\n            const playerY = this.game.players[i].y;\n            if (\n              (playerX !== position.x && playerY === position.y) ||\n              (playerX === position.x && playerY !== position.y)\n            ) {\n              this.room.entities.push(\n                new SkullEnemy(\n                  this.room,\n                  this.game,\n                  position.x,\n                  position.y,\n                  Random.rand\n                )\n              );\n            }\n          }\n        }\n        Sound.skeleSpawn()\n      }\n      this.tileX += 2;\n      //draw half broken tombstone based on skintype after it takes one damage\n    }\n    if (this.health <= 0) this.kill(), Sound.breakRock();\n    else this.hurtCallback();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Entity } from \"./entity\";\nimport { Item } from \"../item/item\";\nimport { Key } from \"../item/key\";\nimport { Coin } from \"../item/coin\";\nimport { Coal } from \"../item/coal\";\nimport { GreenGem } from \"../item/greengem\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Shotgun } from \"../weapon/shotgun\";\nimport { Dagger } from \"../weapon/dagger\";\nimport { Armor } from \"../item/armor\";\nimport { Heart } from \"../item/heart\";\nimport { Spear } from \"../weapon/spear\";\nimport { Gold } from \"../item/gold\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Lantern } from \"../item/lantern\";\nimport { RedGem } from \"../item/redgem\";\nimport { EntityType } from \"./entity\";\n\n\nlet OPEN_TIME = 150;\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet FULL_OUTLINE = \"white\";\n\nexport class VendingMachine extends Entity {\n  playerOpened: Player;\n  open = false;\n  openTime = 0;\n  costItems: Array<Item>;\n  item: Item;\n  isInf = false;\n  quantity = 1;\n  buyAnimAmount = 0;\n  rand: () => number;\n\n  constructor(level: Room, game: Game, x: number, y: number, item: Item, rand: () => number) {\n    super(level, game, x, y);\n\n    this.rand = rand;\n\n    this.destroyable = false;\n    this.pushable = false;\n    this.chainPushable = false;\n    this.interactable = true;\n\n    this.costItems = [];\n    this.entityType = EntityType.FRIENDLY\n\n    this.item = item;\n    if (this.item instanceof Shotgun) {\n      let g = new BlueGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Heart) {\n      let c = new Coin(level, 0, 0);\n      c.stackCount = 10;\n      this.costItems = [c];\n      this.isInf = true;\n    } else if (this.item instanceof Spear) {\n      let g = new GreenGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Armor) {\n      let g = new Gold(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof DualDagger) {\n      let g = new RedGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Lantern) {\n      let g = new Coal(level, 0, 0);\n      g.stackCount = Game.randTable([25, 26, 27, 28], this.rand);\n      this.costItems = [g];\n    }\n  }\n\n  interact = (player: Player) => {\n    if (this.isInf || this.quantity > 0) {\n      if (this.open) this.playerOpened.openVendingMachine = null;\n      this.open = true;\n      this.playerOpened = player;\n      this.openTime = Date.now();\n      if (this.playerOpened.openVendingMachine && this.playerOpened.openVendingMachine !== this)\n        this.playerOpened.openVendingMachine.close();\n      this.playerOpened.openVendingMachine = this;\n    }\n  };\n\n  close = () => {\n    this.open = false;\n    this.playerOpened.openVendingMachine = null;\n  };\n\n  space = () => {\n    if (this.open) {\n      // check if player can pay\n      for (const i of this.costItems) {\n        if (!this.playerOpened.inventory.hasItemCount(i)) return;\n      }\n\n      for (const i of this.costItems) {\n        this.playerOpened.inventory.subtractItemCount(i);\n      }\n\n      let x, y;\n      do {\n        x = Game.rand(this.x - 1, this.x + 1, this.rand);\n        y = Game.rand(this.y - 1, this.y + 1, this.rand);\n      } while ((x === this.x && y === this.y) || this.room.roomArray[x][y].isSolid() || this.room.entities.some(e => e.x === x && e.y === y));\n\n      let newItem = new (this.item.constructor as { new(): Item })();\n      newItem = newItem.constructor(this.room, x, y);\n      this.room.items.push(newItem);\n\n      if (!this.isInf) {\n        this.quantity--;\n        if (this.quantity <= 0) this.close();\n      }\n\n      this.buyAnimAmount = 0.99;\n      if (this.playerOpened === this.game.players[this.game.localPlayerID]) this.game.shakeScreen(0, 4);\n    }\n  };\n\n  draw = (delta: number) => {\n    let tileX = 19;\n    if (!this.isInf && this.quantity === 0) tileX = 20;\n    Game.drawObj(\n      tileX,\n      0,\n      1,\n      2,\n      this.x,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    if (this.open && this.playerOpened === this.game.players[this.game.localPlayerID]) {\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3; // highlighted growth\n      let ob = 1; // outer border\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\n      let height = s + 2 * b + g - g;\n\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      for (let x = 0; x < this.costItems.length + 2; x++) {\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\n          Math.round(cy - 0.5 * height),\n          Math.round(s + 2 * b),\n          Math.round(s + 2 * b)\n        );\n        if (x !== this.costItems.length) {\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(cy - 0.5 * height + b),\n            Math.round(s),\n            Math.round(s)\n          );\n        }\n      }\n\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.costItems.length + 2; i++) {\n          let drawX = Math.round(\n            cx -\n            0.5 * width +\n            i * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n          );\n          let drawY = Math.round(\n            cy - 0.5 * height + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          if (i < this.costItems.length) {\n            let a = 1;\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i])) a = 0.15;\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\n          } else if (i === this.costItems.length) {\n            Game.drawFX(0, 1, 1, 1, drawXScaled, drawYScaled, 1, 1);\n          } else if (i === this.costItems.length + 1) {\n            this.item.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n      }\n      this.buyAnimAmount *= this.buyAnimAmount;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = this.buyAnimAmount;\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n}\n","import { Entity } from \"./entity\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { astar } from \"../astarclass\";\nimport { Heart } from \"../item/heart\";\nimport { Floor } from \"../tile/floor\";\nimport { Bones } from \"../tile/bones\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../particle/wizardTeleportParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { WizardFireball } from \"../projectile/wizardFireball\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Player } from \"../player\";\nimport { Coin } from \"../item/coin\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { Random } from \"../random\";\nimport { Item } from \"../item/item\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class WizardEnemy extends Entity {\n  ticks: number;\n  state: WizardState;\n  frame: number;\n  seenPlayer: boolean;\n  rand: () => number;\n  readonly ATTACK_RADIUS = 5;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.rand = rand;\n\n    if (drop) this.drop = drop;\n    else {\n      if (this.rand() < 0.02) this.drop = new BlueGem(this.room, this.x, this.y);\n      else this.drop = new Coin(this.room, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if ((this.x - this.game.players[i].x) ** 2 + (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = a => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.seenPlayer = true;\n            this.alertTicks = 1;\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            if (this.room.getTile(this.x - 1, this.y) && !this.room.roomArray[this.x - 1][this.y].isSolid()) {\n              this.room.projectiles.push(new WizardFireball(this, this.x - 1, this.y));\n              if (this.room.getTile(this.x - 2, this.y) && !this.room.roomArray[this.x - 2][this.y].isSolid()) {\n                this.room.projectiles.push(new WizardFireball(this, this.x - 2, this.y));\n              }\n            }\n            if (this.room.getTile(this.x + 1, this.y) && !this.room.roomArray[this.x + 1][this.y].isSolid()) {\n              this.room.projectiles.push(new WizardFireball(this, this.x + 1, this.y));\n              if (this.room.getTile(this.x + 2, this.y) && !this.room.roomArray[this.x + 2][this.y].isSolid()) {\n                this.room.projectiles.push(new WizardFireball(this, this.x + 2, this.y));\n              }\n            }\n            if (this.room.getTile(this.x, this.y - 1) && !this.room.roomArray[this.x][this.y - 1].isSolid()) {\n              this.room.projectiles.push(new WizardFireball(this, this.x, this.y - 1));\n              if (this.room.getTile(this.x, this.y - 2) && !this.room.roomArray[this.x][this.y - 2].isSolid()) {\n                this.room.projectiles.push(new WizardFireball(this, this.x, this.y - 2));\n              }\n            }\n            if (this.room.getTile(this.x, this.y + 1) && !this.room.roomArray[this.x][this.y + 1].isSolid()) {\n              this.room.projectiles.push(new WizardFireball(this, this.x, this.y + 1));\n              if (this.room.getTile(this.x, this.y + 2) && !this.room.roomArray[this.x][this.y + 2].isSolid()) {\n                this.room.projectiles.push(new WizardFireball(this, this.x, this.y + 2));\n              }\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\n            let optimalDist = Game.randTable([2, 2, 3, 3, 3, 3, 3], Random.rand);\n            // pick a random player to target\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) + Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n            this.tryMove(bestPos.x, bestPos.y);\n            this.drawX = this.x - oldX;\n            this.drawY = this.y - oldY;\n            this.frame = 0; // trigger teleport animation\n            this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\n            if (this.withinAttackingRangeOfPlayer()) {\n              this.state = WizardState.attack;\n            } else {\n              this.state = WizardState.idle;\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n        this.frame += 0.4 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.5 - this.drawY,\n          1,\n          2,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  kill = () => {\n    if (this.room.roomArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.room, this.x, this.y);\n      b.skin = this.room.roomArray[this.x][this.y].skin;\n      this.room.roomArray[this.x][this.y] = b;\n    }\n\n    this.dead = true;\n    this.room.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n\n}\n","import { Entity, EntityDirection } from \"./entity\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\n\nexport class ZombieEnemy extends Entity {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Room, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.room, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.room, 0, 0);\n      else this.drop = new Coin(this.room, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            /*this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));*/\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.room.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.room.entities) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\n                grid[x][y] = this.room.roomArray[x][y];\n              else\n                grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = EntityDirection.RIGHT;\n            else if (moveX < oldX) this.direction = EntityDirection.LEFT;\n            else if (moveY > oldY) this.direction = EntityDirection.DOWN;\n            else if (moveY < oldY) this.direction = EntityDirection.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.rooms[this.game.players[i].levelID] === this.room && this.game.players[i].x === moveX && this.game.players[i].y === moveY) {\n                  this.game.players[i].hurt(this.hit(), \"zombie\");\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EntityDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EntityDirection.LEFT;\n                else if (this.y > oldY) this.direction = EntityDirection.DOWN;\n                else if (this.y < oldY) this.direction = EntityDirection.UP;\n              }\n            }\n          }\n\n          if (this.direction == EntityDirection.LEFT) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EntityDirection.RIGHT) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EntityDirection.DOWN) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n          if (this.direction == EntityDirection.UP) {\n            this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.direction == EntityDirection.LEFT) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                }\n                if (this.direction == EntityDirection.RIGHT) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                }\n                if (this.direction == EntityDirection.DOWN) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n                if (this.direction == EntityDirection.UP) {\n                  this.room.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Room } from \"./room\";\nimport { Player } from \"./player\";\nimport { Door } from \"./tile/door\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { Input, InputEnum } from \"./input\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { io } from \"socket.io-client\";\nimport { ServerAddress } from \"./serverAddress\";\nimport { TextBox } from \"./textbox\";\nimport { createGameState, GameState, loadGameState } from \"./gameState\";\nimport { Random } from \"./random\";\nimport { DoorDir } from \"./tile/door\";\nimport { Level } from \"./level\";\n\nexport enum LevelState {\n  IN_LEVEL,\n  TRANSITIONING,\n  TRANSITIONING_LADDER,\n}\n\nexport class ChatMessage {\n  message: string;\n  timestamp: number;\n  constructor(message: string) {\n    this.message = message;\n    this.timestamp = Date.now();\n  }\n}\n\nlet getShadeCanvasKey = (\n  set: HTMLImageElement,\n  sx: number,\n  sy: number,\n  sw: number,\n  sh: number,\n  opacity: number\n): string => {\n  return set.src + \",\" + sx + \",\" + sy + \",\" + sw + \",\" + sh + \",\" + opacity;\n};\n\nexport enum MenuState {\n  LOADING,\n  LOGIN_USERNAME,\n  LOGIN_PASSWORD,\n  SELECT_WORLD,\n  IN_GAME,\n}\n\n// fps counter\nconst times = [];\nlet fps;\n\nexport class Game {\n  static ctx: CanvasRenderingContext2D;\n  static shade_canvases: Record<string, HTMLCanvasElement>;\n  prevLevel: Room; // for transitions\n  room: Room;\n  rooms: Array<Room>;\n  levelgen: LevelGenerator;\n  localPlayerID: string;\n  players: Record<string, Player>;\n  offlinePlayers: Record<string, Player>;\n  menuState: MenuState;\n  levelState: LevelState;\n  transitionStartTime: number;\n  transitionX: number;\n  transitionY: number;\n  upwardTransition: boolean;\n  sideTransition: boolean;\n  sideTransitionDirection: number;\n  transitioningLadder: any;\n  screenShakeX: number;\n  screenShakeY: number;\n  socket;\n  chat: Array<ChatMessage>;\n  chatOpen: boolean;\n  chatTextBox: TextBox;\n  previousFrameTimestamp: number;\n\n  input_history = [];\n\n  mostRecentInputReceived = true;\n\n  loginMessage: string = \"\";\n  username: string;\n  usernameTextBox: TextBox;\n  passwordTextBox: TextBox;\n  worldCodes: Array<string>;\n  selectedWorldCode: number;\n\n  static scale;\n  static tileset: HTMLImageElement;\n  static objset: HTMLImageElement;\n  static mobset: HTMLImageElement;\n  static itemset: HTMLImageElement;\n  static fxset: HTMLImageElement;\n  static fontsheet: HTMLImageElement;\n\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\n  static readonly letters = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\";\n  static readonly letter_widths = [\n    4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5,\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3,\n  ];\n  static readonly letter_height = 6;\n  static letter_positions = [];\n\n  // [min, max] inclusive\n  static rand = (min: number, max: number, rand): number => {\n    if (max < min) return min;\n    return Math.floor(rand() * (max - min + 1) + min);\n  };\n\n  static randTable = (table: any[], rand): any => {\n    return table[Game.rand(0, table.length - 1, rand)];\n  };\n\n  constructor() {\n    window.addEventListener(\"load\", () => {\n      this.socket = io(ServerAddress.address, { transports: [\"websocket\"] });\n      this.socket.on(\"new connect\", () => {\n        if (this.menuState !== MenuState.LOADING)\n          //what sets the menu state??\n          this.loginMessage = \"disconnected\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on(\"unrecognized session\", () => {\n        this.loginMessage = \"unrecognized session\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on(\"incorrect password\", () => {\n        this.passwordTextBox.clear();\n        this.loginMessage = \"incorrect password, try again\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on(\"login already active\", () => {\n        this.usernameTextBox.clear();\n        this.passwordTextBox.clear();\n        this.loginMessage = \"account currently logged in\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on(\"logged in\", () => {\n        this.socket.emit(\"get available worlds\");\n        this.menuState = MenuState.SELECT_WORLD;\n      });\n      this.socket.on(\"world codes\", (codes) => {\n        this.worldCodes = codes;\n        this.selectedWorldCode = 0;\n      });\n      this.socket.on(\n        \"welcome\",\n        (activeUsernames: Array<string>, state: GameState) => {\n          this.players = {};\n          this.offlinePlayers = {};\n          loadGameState(this, activeUsernames, state);\n          this.chatOpen = false;\n\n          this.screenShakeX = 0;\n          this.screenShakeY = 0;\n\n          this.menuState = MenuState.IN_GAME;\n          this.levelState = LevelState.IN_LEVEL;\n        }\n      );\n      this.socket.on(\"get state\", () => {\n        this.socket.emit(\"game state\", createGameState(this));\n      });\n      this.socket.on(\n        \"input\",\n        (tickPlayerID: string, input: InputEnum, randState: number) => {\n          if (Random.state !== randState) {\n            this.chat.push(new ChatMessage(\"RAND STATES OUT OF SYNC\"));\n            this.chat.push(new ChatMessage(\"Received \" + randState));\n            this.chat.push(new ChatMessage(\"Current \" + Random.state));\n          }\n\n          let decode_input = (input: InputEnum): string => {\n            if (input === InputEnum.I) return \"I\";\n            if (input === InputEnum.Q) return \"Q\";\n            if (input === InputEnum.LEFT) return \"LEFT\";\n            if (input === InputEnum.RIGHT) return \"RIGHT\";\n            if (input === InputEnum.UP) return \"UP\";\n            if (input === InputEnum.DOWN) return \"DOWN\";\n            if (input === InputEnum.SPACE) return \"SPACE\";\n          };\n\n          this.input_history.push(tickPlayerID + \", \" + decode_input(input));\n          // make sure player exists\n          if (\n            !(tickPlayerID in this.players) &&\n            !(tickPlayerID in this.offlinePlayers)\n          ) {\n            // new player\n            this.players[this.localPlayerID] = new Player(this, 0, 0, true);\n            this.players[this.localPlayerID].levelID =\n              this.levelgen.currentFloorFirstLevelID;\n            this.players[this.localPlayerID].x =\n              this.rooms[this.levelgen.currentFloorFirstLevelID].roomX +\n              Math.floor(\n                this.rooms[this.levelgen.currentFloorFirstLevelID].width / 2\n              );\n            this.players[this.localPlayerID].y =\n              this.rooms[this.levelgen.currentFloorFirstLevelID].roomY +\n              Math.floor(\n                this.rooms[this.levelgen.currentFloorFirstLevelID].height / 2\n              );\n          }\n          if (tickPlayerID in this.offlinePlayers) {\n            // old player rejoining\n            this.players[tickPlayerID] = this.offlinePlayers[tickPlayerID];\n            delete this.offlinePlayers[tickPlayerID];\n          }\n          // process input\n          switch (input) {\n            case InputEnum.I:\n              this.players[tickPlayerID].iListener();\n              break;\n            case InputEnum.Q:\n              this.players[tickPlayerID].qListener();\n              break;\n            case InputEnum.LEFT:\n              this.players[tickPlayerID].leftListener(false);\n              break;\n            case InputEnum.RIGHT:\n              this.players[tickPlayerID].rightListener(false);\n              break;\n            case InputEnum.UP:\n              this.players[tickPlayerID].upListener(false);\n              break;\n            case InputEnum.DOWN:\n              this.players[tickPlayerID].downListener(false);\n              break;\n            case InputEnum.SPACE:\n              this.players[tickPlayerID].spaceListener();\n              break;\n          }\n\n          if (tickPlayerID === this.localPlayerID) {\n            this.mostRecentInputReceived = true;\n          }\n        }\n      );\n      this.socket.on(\"chat message\", (message: string) => {\n        this.chat.push(new ChatMessage(message));\n      });\n      this.socket.on(\"player joined\", (connectedPlayerID: string) => {\n        if (connectedPlayerID in this.offlinePlayers) {\n          // old player reconnecting\n          this.players[connectedPlayerID] =\n            this.offlinePlayers[connectedPlayerID];\n          if (\n            this.players[connectedPlayerID].levelID <\n            this.levelgen.currentFloorFirstLevelID\n          ) {\n            this.players[connectedPlayerID].levelID =\n              this.levelgen.currentFloorFirstLevelID;\n            this.players[connectedPlayerID].x =\n              this.rooms[this.levelgen.currentFloorFirstLevelID].roomX +\n              Math.floor(\n                this.rooms[this.levelgen.currentFloorFirstLevelID].width / 2\n              );\n            this.players[connectedPlayerID].y =\n              this.rooms[this.levelgen.currentFloorFirstLevelID].roomY +\n              Math.floor(\n                this.rooms[this.levelgen.currentFloorFirstLevelID].height / 2\n              );\n          }\n          delete this.offlinePlayers[connectedPlayerID];\n        } else if (!(connectedPlayerID in this.players)) {\n          // new player connecting\n          this.players[connectedPlayerID] = new Player(this, 0, 0, false);\n          this.players[connectedPlayerID].levelID =\n            this.levelgen.currentFloorFirstLevelID;\n          this.players[connectedPlayerID].x =\n            this.rooms[this.levelgen.currentFloorFirstLevelID].roomX +\n            Math.floor(\n              this.rooms[this.levelgen.currentFloorFirstLevelID].width / 2\n            );\n          this.players[connectedPlayerID].y =\n            this.rooms[this.levelgen.currentFloorFirstLevelID].roomY +\n            Math.floor(\n              this.rooms[this.levelgen.currentFloorFirstLevelID].height / 2\n            );\n        }\n      });\n      this.socket.on(\"player left\", (disconnectPlayerID: string) => {\n        this.offlinePlayers[disconnectPlayerID] =\n          this.players[disconnectPlayerID];\n        delete this.players[disconnectPlayerID];\n      });\n\n      let canvas = document.getElementById(\"gameCanvas\");\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\n        alpha: false,\n      }) as CanvasRenderingContext2D;\n\n      this.chat = [];\n      this.chatTextBox = new TextBox();\n      this.chatTextBox.setEnterCallback(() => {\n        if (this.chatTextBox.text.length > 0) {\n          this.socket.emit(\"chat message\", this.chatTextBox.text);\n          // chat commands\n          if (this.chatTextBox.text === \"/logout\") {\n            this.socket.emit(\"game state\", createGameState(this));\n            this.socket.emit(\"logout\");\n            this.menuState = MenuState.LOGIN_USERNAME;\n            this.usernameTextBox.clear();\n            this.passwordTextBox.clear();\n            this.rooms = [];\n            this.players = {};\n            this.offlinePlayers = {};\n          } else if (this.chatTextBox.text === \"/leave\") {\n            this.socket.emit(\"game state\", createGameState(this));\n            this.socket.emit(\"leave world\");\n            this.socket.emit(\"get available worlds\");\n            this.menuState = MenuState.SELECT_WORLD;\n            this.rooms = [];\n            this.players = {};\n            this.offlinePlayers = {};\n          } else if (this.chatTextBox.text === \"/save\") {\n            this.socket.emit(\"game state\", createGameState(this));\n          } else if (this.chatTextBox.text === \"/r\") {\n            console.log(Random.state);\n          } else if (this.chatTextBox.text === \"/seed\") {\n            console.log(this.levelgen.seed);\n          } else if (this.chatTextBox.text === \"/i\") {\n            for (let i = 0; i < this.input_history.length; i++) {\n              console.log(i + \": \" + this.input_history[i]);\n            }\n          } else if (this.chatTextBox.text.substring(0, 8) === \"/invite \")\n            this.socket.emit(\"invite\", this.chatTextBox.text.substring(8));\n\n          this.chatTextBox.clear();\n        } else {\n          this.chatOpen = false;\n        }\n      });\n      this.chatTextBox.setEscapeCallback(() => {\n        this.chatOpen = false;\n      });\n      this.chatOpen = false;\n\n      this.usernameTextBox = new TextBox();\n      this.usernameTextBox.allowedCharacters =\n        \"abcdefghijklmnopqrstuvwxyz1234567890 ,.!?:'()[]%-\";\n      this.usernameTextBox.setEnterCallback(() => {\n        if (this.usernameTextBox.text.length < 1) {\n          this.loginMessage = \"username too short\";\n        } else {\n          this.loginMessage = \"\";\n          this.menuState = MenuState.LOGIN_PASSWORD;\n        }\n      });\n      this.passwordTextBox = new TextBox();\n      this.passwordTextBox.allowedCharacters =\n        \"abcdefghijklmnopqrstuvwxyz1234567890 ,.!?:'()[]%-\";\n      this.passwordTextBox.setEnterCallback(() => {\n        if (this.passwordTextBox.text.length < 8) {\n          this.loginMessage = \"password too short\";\n        } else {\n          this.localPlayerID = this.usernameTextBox.text;\n          this.socket.emit(\n            \"login\",\n            this.localPlayerID,\n            this.passwordTextBox.text\n          );\n        }\n      });\n      this.worldCodes = [];\n      this.selectedWorldCode = 0;\n\n      Game.shade_canvases = {};\n      Game.text_rendering_canvases = {};\n\n      Game.tileset = new Image();\n      Game.tileset.src = \"res/tileset.png\";\n      Game.objset = new Image();\n      Game.objset.src = \"res/objset.png\";\n      Game.mobset = new Image();\n      Game.mobset.src = \"res/mobset.png\";\n      Game.itemset = new Image();\n      Game.itemset.src = \"res/itemset.png\";\n      Game.fxset = new Image();\n      Game.fxset.src = \"res/fxset.png\";\n      Game.fontsheet = new Image();\n      Game.fontsheet.src = \"res/font.png\";\n\n      Game.scale = 1;\n\n      Sound.loadSounds();\n      Sound.playMusic(); // loops forever\n\n      document.addEventListener(\n        \"touchstart\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n      document.addEventListener(\n        \"touchend\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n      document.addEventListener(\n        \"touchmove\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n\n      document.addEventListener(\"touchstart\", Input.handleTouchStart, {\n        passive: false,\n      });\n      document.addEventListener(\"touchmove\", Input.handleTouchMove, {\n        passive: false,\n      });\n      document.addEventListener(\"touchend\", Input.handleTouchEnd, {\n        passive: false,\n      });\n\n      Input.keyDownListener = (key: string) => {\n        this.keyDownListener(key);\n      };\n\n      this.menuState = MenuState.LOADING;\n\n      window.requestAnimationFrame(this.run);\n      this.onResize();\n      window.addEventListener(\"resize\", this.onResize);\n    });\n  }\n\n  keyDownListener = (key: string) => {\n    if (this.menuState === MenuState.LOGIN_USERNAME) {\n      this.usernameTextBox.handleKeyPress(key);\n    } else if (this.menuState === MenuState.LOGIN_PASSWORD) {\n      this.passwordTextBox.handleKeyPress(key);\n    } else if (this.menuState === MenuState.SELECT_WORLD) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.selectedWorldCode = Math.max(0, this.selectedWorldCode - 1);\n          break;\n        case \"ArrowDown\":\n          this.selectedWorldCode = Math.min(\n            this.worldCodes.length + 1,\n            this.selectedWorldCode + 1\n          );\n          break;\n        case \"Enter\":\n          if (this.selectedWorldCode === 0)\n            this.socket.emit(\"get available worlds\");\n          else if (this.selectedWorldCode === 1)\n            this.socket.emit(\"join new world\");\n          else if (this.worldCodes[this.selectedWorldCode - 2])\n            this.socket.emit(\n              \"join world\",\n              this.worldCodes[this.selectedWorldCode - 2]\n            );\n          break;\n      }\n    } else if (this.menuState === MenuState.IN_GAME) {\n      if (!this.chatOpen) {\n        switch (key.toUpperCase()) {\n          case \"C\":\n            this.chatOpen = true;\n            break;\n          case \"/\":\n            this.chatOpen = true;\n            this.chatTextBox.clear();\n            this.chatTextBox.handleKeyPress(key);\n            break;\n          case \"A\":\n          case \"ARROWLEFT\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.LEFT);\n            break;\n          case \"D\":\n          case \"ARROWRIGHT\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.RIGHT);\n            break;\n          case \"W\":\n          case \"ARROWUP\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.UP);\n            break;\n          case \"S\":\n          case \"ARROWDOWN\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.DOWN);\n            break;\n          case \" \":\n            this.players[this.localPlayerID].inputHandler(InputEnum.SPACE);\n            break;\n          case \"I\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.I);\n            break;\n          case \"Q\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.Q);\n            break;\n        }\n      } else {\n        this.chatTextBox.handleKeyPress(key);\n      }\n    }\n  };\n\n  sendInput = (input: InputEnum) => {\n    if (this.mostRecentInputReceived) {\n      this.mostRecentInputReceived = false;\n      this.socket.emit(\"input\", this.localPlayerID, input, Random.state);\n    }\n  };\n\n  changeLevel = (player: Player, newLevel: Room) => {\n    player.levelID = this.rooms.indexOf(newLevel);\n    if (this.players[this.localPlayerID] === player) {\n      //this.level.exitLevel();\n      this.room = newLevel;\n    }\n    newLevel.enterLevel(player);\n  };\n\n  changeLevelThroughLadder = (player: Player, ladder: any) => {\n    player.levelID = this.rooms.indexOf(ladder.linkedLevel);\n\n    if (ladder instanceof DownLadder) {\n      player.map.saveOldMap();\n      player.map.saveMapData();\n      ladder.generate();\n      //let newLevel = new Level(1);\n    }\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING_LADDER;\n      this.transitionStartTime = Date.now();\n      this.transitioningLadder = ladder;\n    } else {\n      ladder.linkedLevel.enterLevel(player, ladder.linkedLevel); // since it's not a local player, don't wait for transition\n    }\n  };\n\n  changeLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    player.levelID = this.rooms.indexOf(door.room);\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING;\n      this.transitionStartTime = Date.now();\n\n      let oldX = this.players[this.localPlayerID].x;\n      let oldY = this.players[this.localPlayerID].y;\n\n      this.prevLevel = this.room;\n      //this.level.exitLevel();\n      this.room = door.room;\n      door.room.enterLevelThroughDoor(player, door, side);\n\n      this.transitionX =\n        (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\n      this.transitionY =\n        (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\n\n      this.upwardTransition = false;\n      this.sideTransition = false;\n      this.sideTransitionDirection = side;\n      if (\n        door instanceof Door &&\n        [DoorDir.East, DoorDir.West].includes(door.doorDir)\n      )\n        this.sideTransition = true;\n      else if (door instanceof Door && door.doorDir === DoorDir.South)\n        this.upwardTransition = true;\n    } else {\n      door.room.enterLevelThroughDoor(player, door, side);\n    }\n  };\n\n  run = (timestamp: number) => {\n    if (!this.previousFrameTimestamp)\n      this.previousFrameTimestamp = timestamp - 1000.0 / GameConstants.FPS;\n\n    // normalized so 1.0 = 60fps\n    let delta = ((timestamp - this.previousFrameTimestamp) * 60.0) / 1000.0;\n\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\n      times.shift();\n    }\n    times.push(timestamp);\n    fps = times.length;\n\n    this.update();\n    this.draw(delta);\n    window.requestAnimationFrame(this.run);\n\n    this.previousFrameTimestamp = timestamp;\n  };\n\n  update = () => {\n    Input.checkIsTapHold();\n\n    if (\n      Input.lastPressTime !== 0 &&\n      Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\n    ) {\n      Input.onKeydown({\n        repeat: false,\n        code: Input.lastPressKeyCode,\n      } as KeyboardEvent);\n    }\n\n    if (this.menuState === MenuState.IN_GAME) {\n      if (this.levelState === LevelState.TRANSITIONING) {\n        if (\n          Date.now() - this.transitionStartTime >=\n          LevelConstants.LEVEL_TRANSITION_TIME\n        ) {\n          this.levelState = LevelState.IN_LEVEL;\n        }\n      }\n      if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n        if (\n          Date.now() - this.transitionStartTime >=\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER\n        ) {\n          this.levelState = LevelState.IN_LEVEL;\n        }\n      }\n\n      for (const i in this.players) {\n        this.players[i].update();\n        this.rooms[this.players[i].levelID].update();\n\n        if (this.players[i].dead) {\n          for (const j in this.players) {\n            this.players[j].dead = true;\n          }\n        }\n      }\n    }\n  };\n\n  lerp = (a: number, b: number, t: number): number => {\n    return (1 - t) * a + t * b;\n  };\n\n  pushMessage = (message: string) => {\n    this.chat.push(new ChatMessage(message));\n\n  };\n  onResize = () => {\n    let maxWidthScale = Math.floor(\n      window.innerWidth / GameConstants.DEFAULTWIDTH\n    );\n    let maxHeightScale = Math.floor(\n      window.innerHeight / GameConstants.DEFAULTHEIGHT\n    );\n    Game.scale = Math.min(maxWidthScale, maxHeightScale);\n    if (Game.scale === 0) {\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\n    }\n    Game.scale = Math.min(maxWidthScale, maxHeightScale);\n\n    LevelConstants.SCREEN_W = Math.floor(\n      window.innerWidth / Game.scale / GameConstants.TILESIZE\n    );\n    LevelConstants.SCREEN_H = Math.floor(\n      window.innerHeight / Game.scale / GameConstants.TILESIZE\n    );\n    GameConstants.WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n    GameConstants.HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\n    Game.ctx.canvas.setAttribute(\n      \"style\",\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${\n        GameConstants.HEIGHT * Game.scale\n      }px;\n    display: block;\n    margin: 0 auto;\n  \n    image-rendering: optimizeSpeed; /* Older versions of FF          */\n    image-rendering: -moz-crisp-edges; /* FF 6.0+                       */\n    image-rendering: -webkit-optimize-contrast; /* Safari                        */\n    image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\n    image-rendering: pixelated; /* Awesome future-browsers       */\n  \n    -ms-interpolation-mode: nearest-neighbor;`\n    );\n    //Game.ctx.canvas.width = window.innerWidth;\n    //Game.ctx.canvas.height = window.innerHeight;\n  };\n\n  shakeScreen = (shakeX: number, shakeY: number) => {\n    this.screenShakeX = shakeX;\n    this.screenShakeY = shakeY;\n  };\n\n  static measureText = (text: string): { width: number; height: number } => {\n    let w = 0;\n    for (const letter of text.toLowerCase()) {\n      if (letter === \" \") w += 4;\n      else\n        for (let i = 0; i < Game.letters.length; i++) {\n          if (Game.letters[i] === letter) {\n            w += Game.letter_widths[i] + 1;\n          }\n        }\n    }\n    return { width: w, height: Game.letter_height };\n  };\n\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\n    x = Math.round(x);\n    y = Math.round(y);\n\n    if (Game.letter_positions.length === 0) {\n      // calculate letter positions\n      for (let i = 0; i < Game.letter_widths.length; i++) {\n        if (i === 0) Game.letter_positions[0] = 0;\n        else\n          Game.letter_positions[i] =\n            Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\n      }\n    } else {\n      let dimensions = Game.measureText(text);\n      if (dimensions.width > 0) {\n        let key = text + Game.ctx.fillStyle;\n\n        if (!Game.text_rendering_canvases[key]) {\n          Game.text_rendering_canvases[key] = document.createElement(\"canvas\");\n          Game.text_rendering_canvases[key].width = dimensions.width;\n          Game.text_rendering_canvases[key].height = dimensions.height;\n          let bx = Game.text_rendering_canvases[key].getContext(\"2d\");\n\n          let letter_x = 0;\n          for (const letter of text.toLowerCase()) {\n            if (letter === \" \") letter_x += 4;\n            else\n              for (let i = 0; i < Game.letters.length; i++) {\n                if (Game.letters[i] === letter) {\n                  bx.drawImage(\n                    Game.fontsheet,\n                    Game.letter_positions[i] + 1,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height,\n                    letter_x,\n                    0,\n                    Game.letter_widths[i],\n                    Game.letter_height\n                  );\n                  letter_x += Game.letter_widths[i] + 1;\n                }\n              }\n          }\n          bx.fillStyle = Game.ctx.fillStyle;\n          bx.globalCompositeOperation = \"source-in\";\n          bx.fillRect(\n            0,\n            0,\n            Game.text_rendering_canvases[key].width,\n            Game.text_rendering_canvases[key].height\n          );\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        } else {\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        }\n      }\n    }\n  };\n\n  static fillTextOutline = (\n    text: string,\n    x: number,\n    y: number,\n    outlineColor: string,\n    fillColor: string\n  ) => {\n    Game.ctx.fillStyle = outlineColor;\n    for (let xx = -1; xx <= 1; xx++) {\n      for (let yy = -1; yy <= 1; yy++) {\n        Game.fillText(text, x + xx, y + yy);\n      }\n    }\n    Game.ctx.fillStyle = fillColor;\n    Game.fillText(text, x, y);\n  };\n\n  draw = (delta: number) => {\n    Game.ctx.globalAlpha = 1;\n    Game.ctx.fillStyle = \"black\";\n    if (this.menuState === MenuState.IN_GAME)\n      Game.ctx.fillStyle = this.room.shadeColor;\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (this.menuState === MenuState.LOADING) {\n      Game.ctx.fillStyle = \"white\";\n      let loadingString = \"loading...\";\n      Game.fillText(\n        loadingString,\n        GameConstants.WIDTH * 0.5 - Game.measureText(loadingString).width * 0.5,\n        GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5\n      );\n    } else if (this.menuState === MenuState.LOGIN_USERNAME) {\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(\n        this.loginMessage,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(this.loginMessage).width * 0.5,\n        GameConstants.HEIGHT * 0.5 - Game.letter_height * 3\n      );\n\n      let prompt = \"username: \";\n      let usernameString = prompt + this.usernameTextBox.text;\n      Game.fillText(\n        usernameString,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(usernameString).width * 0.5,\n        GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5\n      );\n\n      let cursorX = Game.measureText(\n        usernameString.substring(0, prompt.length + this.usernameTextBox.cursor)\n      ).width;\n      Game.ctx.fillRect(\n        Math.round(\n          GameConstants.WIDTH * 0.5 -\n            Game.measureText(usernameString).width * 0.5 +\n            cursorX\n        ),\n        Math.round(GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5),\n        1,\n        Game.letter_height\n      );\n\n      prompt = \"password: \";\n      let passwordString = prompt;\n      for (const i of this.passwordTextBox.text) passwordString += \"-\";\n      Game.fillText(\n        passwordString,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(passwordString).width * 0.5,\n        GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5\n      );\n    } else if (this.menuState === MenuState.LOGIN_PASSWORD) {\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(\n        this.loginMessage,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(this.loginMessage).width * 0.5,\n        GameConstants.HEIGHT * 0.5 - Game.letter_height * 3\n      );\n\n      let prompt = \"username: \";\n      let usernameString = prompt + this.usernameTextBox.text;\n      Game.fillText(\n        usernameString,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(usernameString).width * 0.5,\n        GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5\n      );\n\n      prompt = \"password: \";\n      let passwordString = prompt;\n      for (const i of this.passwordTextBox.text) passwordString += \"-\";\n      Game.fillText(\n        passwordString,\n        GameConstants.WIDTH * 0.5 -\n          Game.measureText(passwordString).width * 0.5,\n        GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5\n      );\n      let cursorX = Game.measureText(\n        passwordString.substring(0, prompt.length + this.passwordTextBox.cursor)\n      ).width;\n      Game.ctx.fillRect(\n        Math.round(\n          GameConstants.WIDTH * 0.5 -\n            Game.measureText(passwordString).width * 0.5 +\n            cursorX\n        ),\n        Math.round(GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5),\n        1,\n        Game.letter_height\n      );\n    } else if (this.menuState === MenuState.SELECT_WORLD) {\n      let c = [\"refresh\", \"new world\"];\n      c = c.concat(this.worldCodes);\n      c[this.selectedWorldCode] = \"[ \" + c[this.selectedWorldCode] + \" ]\";\n      for (let i = 0; i < c.length; i++) {\n        let ind = i - this.selectedWorldCode;\n        let spacing = Game.letter_height + 2;\n        Game.ctx.fillStyle = \"grey\";\n        if (ind === 0) Game.ctx.fillStyle = \"white\";\n        Game.fillText(\n          c[i],\n          GameConstants.WIDTH * 0.5 - Game.measureText(c[i]).width * 0.5,\n          GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5 + ind * spacing\n        );\n      }\n    } else if (this.menuState === MenuState.IN_GAME) {\n      if (this.levelState === LevelState.TRANSITIONING) {\n        let levelOffsetX = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) /\n              LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            -this.transitionX\n          )\n        );\n        let levelOffsetY = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) /\n              LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            -this.transitionY\n          )\n        );\n        let playerOffsetX = levelOffsetX - this.transitionX;\n        let playerOffsetY = levelOffsetY - this.transitionY;\n\n        let playerCX =\n          (this.players[this.localPlayerID].x -\n            this.players[this.localPlayerID].drawX +\n            0.5) *\n          GameConstants.TILESIZE;\n        let playerCY =\n          (this.players[this.localPlayerID].y -\n            this.players[this.localPlayerID].drawY +\n            0.5) *\n          GameConstants.TILESIZE;\n\n        Game.ctx.translate(\n          -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n          -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        let extraTileLerp = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) /\n              LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            GameConstants.TILESIZE\n          )\n        );\n\n        let newLevelOffsetX = playerOffsetX;\n        let newLevelOffsetY = playerOffsetY;\n\n        if (this.sideTransition) {\n          if (this.sideTransitionDirection > 0) {\n            levelOffsetX += extraTileLerp;\n            newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\n          } else {\n            levelOffsetX -= extraTileLerp;\n            newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\n          }\n        } else if (this.upwardTransition) {\n          levelOffsetY -= extraTileLerp;\n          newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\n        } else {\n          levelOffsetY += extraTileLerp;\n          newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\n        }\n\n        let ditherFrame = Math.floor(\n          (7 * (Date.now() - this.transitionStartTime)) /\n            LevelConstants.LEVEL_TRANSITION_TIME\n        );\n\n        Game.ctx.translate(levelOffsetX, levelOffsetY);\n        this.prevLevel.draw(delta);\n        this.prevLevel.drawEntities(delta);\n        for (\n          let x = this.prevLevel.roomX - 1;\n          x <= this.prevLevel.roomX + this.prevLevel.width;\n          x++\n        ) {\n          for (\n            let y = this.prevLevel.roomY - 1;\n            y <= this.prevLevel.roomY + this.prevLevel.height;\n            y++\n          ) {\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n        Game.ctx.translate(-levelOffsetX, -levelOffsetY);\n\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n        this.room.draw(delta);\n        this.room.drawEntities(delta, true);\n        for (\n          let x = this.room.roomX - 1;\n          x <= this.room.roomX + this.room.width;\n          x++\n        ) {\n          for (\n            let y = this.room.roomY - 1;\n            y <= this.room.roomY + this.room.height;\n            y++\n          ) {\n            Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n        Game.ctx.translate(playerOffsetX, playerOffsetY);\n        this.players[this.localPlayerID].draw(delta);\n        Game.ctx.translate(-playerOffsetX, -playerOffsetY);\n\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n        this.room.drawShade(delta);\n        this.room.drawOverShade(delta);\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n        Game.ctx.translate(\n          Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n          Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n        let playerCX =\n          (this.players[this.localPlayerID].x -\n            this.players[this.localPlayerID].drawX +\n            0.5) *\n          GameConstants.TILESIZE;\n        let playerCY =\n          (this.players[this.localPlayerID].y -\n            this.players[this.localPlayerID].drawY +\n            0.5) *\n          GameConstants.TILESIZE;\n\n        Game.ctx.translate(\n          -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n          -Math.round(playerCY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        let deadFrames = 6;\n        let ditherFrame = Math.floor(\n          ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\n            LevelConstants.LEVEL_TRANSITION_TIME_LADDER\n        );\n\n        if (ditherFrame < 7) {\n          this.room.draw(delta);\n          this.room.drawEntities(delta);\n          this.room.drawShade(delta);\n          this.room.drawOverShade(delta);\n\n          for (\n            let x = this.room.roomX - 1;\n            x <= this.room.roomX + this.room.width;\n            x++\n          ) {\n            for (\n              let y = this.room.roomY - 1;\n              y <= this.room.roomY + this.room.height;\n              y++\n            ) {\n              Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        } else if (ditherFrame >= 7 + deadFrames) {\n          if (this.transitioningLadder) {\n            this.prevLevel = this.room;\n            this.room.exitLevel();\n            this.room = this.transitioningLadder.linkedLevel;\n\n            this.room.enterLevel(this.players[this.localPlayerID]);\n            this.transitioningLadder = null;\n          }\n\n          this.room.draw(delta);\n          this.room.drawEntities(delta);\n          this.room.drawShade(delta);\n          this.room.drawOverShade(delta);\n          for (\n            let x = this.room.roomX - 1;\n            x <= this.room.roomX + this.room.width;\n            x++\n          ) {\n            for (\n              let y = this.room.roomY - 1;\n              y <= this.room.roomY + this.room.height;\n              y++\n            ) {\n              Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        }\n        Game.ctx.translate(\n          Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n          Math.round(playerCY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      } else {\n        this.screenShakeX *= -0.8;\n        this.screenShakeY *= -0.8;\n\n        let playerDrawX = this.players[this.localPlayerID].drawX;\n        let playerDrawY = this.players[this.localPlayerID].drawY;\n\n        let cameraX = Math.round(\n          (this.players[this.localPlayerID].x - playerDrawX + 0.5) *\n            GameConstants.TILESIZE -\n            0.5 * GameConstants.WIDTH -\n            this.screenShakeX\n        );\n        let cameraY = Math.round(\n          (this.players[this.localPlayerID].y - playerDrawY + 0.5) *\n            GameConstants.TILESIZE -\n            0.5 * GameConstants.HEIGHT -\n            this.screenShakeY\n        );\n\n        Game.ctx.translate(-cameraX, -cameraY);\n        this.room.draw(delta);\n        this.room.drawEntities(delta);\n        this.room.drawShade(delta);\n        this.room.drawOverShade(delta);\n        this.players[this.localPlayerID].drawTopLayer(delta);\n        Game.ctx.translate(cameraX, cameraY);\n\n        this.room.drawTopLayer(delta);\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      }\n      // draw chat\n      let CHAT_X = 10;\n      let CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 14;\n      let CHAT_OPACITY = 0.5;\n      if (this.chatOpen) {\n        Game.ctx.fillStyle = \"black\";\n        if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\n        Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n        Game.ctx.globalAlpha = 1;\n        Game.ctx.fillStyle = \"white\";\n        Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\n        let cursorX = Game.measureText(\n          this.chatTextBox.text.substring(0, this.chatTextBox.cursor)\n        ).width;\n        Game.ctx.fillRect(\n          CHAT_X + cursorX,\n          CHAT_BOTTOM_Y,\n          1,\n          Game.letter_height\n        );\n      }\n      for (let i = 0; i < this.chat.length; i++) {\n        Game.ctx.fillStyle = \"white\";\n        if (this.chat[i][0] === \"/\") Game.ctx.fillStyle = GameConstants.GREEN;\n        let y =\n          CHAT_BOTTOM_Y - (this.chat.length - 1 - i) * (Game.letter_height + 1);\n        if (this.chatOpen) y -= Game.letter_height + 1;\n\n        let age = Date.now() - this.chat[i].timestamp;\n        if (this.chatOpen) {\n          Game.ctx.globalAlpha = 1;\n        } else {\n          if (age <= GameConstants.CHAT_APPEAR_TIME) {\n            if (GameConstants.ALPHA_ENABLED)\n              Game.ctx.globalAlpha = CHAT_OPACITY;\n          } else if (\n            age <=\n            GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME\n          ) {\n            if (GameConstants.ALPHA_ENABLED)\n              Game.ctx.globalAlpha =\n                CHAT_OPACITY *\n                (1 -\n                  (age - GameConstants.CHAT_APPEAR_TIME) /\n                    GameConstants.CHAT_FADE_TIME);\n          } else {\n            Game.ctx.globalAlpha = 0;\n          }\n        }\n        Game.fillText(this.chat[i].message, CHAT_X, y);\n      }\n    }\n\n    // game version\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      GameConstants.VERSION,\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\n      1\n    );\n    Game.ctx.globalAlpha = 1;\n\n    // fps\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(fps + \"fps\", 1, 1);\n    Game.ctx.globalAlpha = 1;\n  };\n\n  static drawHelper = (\n    set: HTMLImageElement,\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    // snap to nearest shading increment\n    shadeOpacity =\n      Math.round(shadeOpacity * GameConstants.SHADE_LEVELS) /\n      GameConstants.SHADE_LEVELS;\n    let key = getShadeCanvasKey(set, sX, sY, sW, sH, shadeOpacity);\n    if (!Game.shade_canvases[key]) {\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\n\n      shCtx.clearRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height\n      );\n\n      shCtx.globalCompositeOperation = \"source-over\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE)\n      );\n\n      shCtx.globalAlpha = shadeOpacity;\n      shCtx.fillStyle = shadeColor;\n      shCtx.fillRect(\n        0,\n        0,\n        Game.shade_canvases[key].width,\n        Game.shade_canvases[key].height\n      );\n      shCtx.globalAlpha = 1.0;\n\n      shCtx.globalCompositeOperation = \"destination-in\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE)\n      );\n    }\n    Game.ctx.drawImage(\n      Game.shade_canvases[key],\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE)\n    );\n  };\n\n  static drawTile = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(\n      Game.tileset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity\n    );\n\n    /*Game.ctx.drawImage(\n      Game.tileset,\n      Math.round(sX * GameConstants.TILESIZE),\n      Math.round(sY * GameConstants.TILESIZE),\n      Math.round(sW * GameConstants.TILESIZE),\n      Math.round(sH * GameConstants.TILESIZE),\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE)\n    );\n\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = shadeOpacity;\n      Game.ctx.fillStyle = shadeColor;\n      Game.ctx.fillRect(\n        Math.round(dX * GameConstants.TILESIZE),\n        Math.round(dY * GameConstants.TILESIZE),\n        Math.round(dW * GameConstants.TILESIZE),\n        Math.round(dH * GameConstants.TILESIZE)\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }*/\n  };\n\n  static drawObj = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(\n      Game.objset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity\n    );\n  };\n\n  static drawMob = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(\n      Game.mobset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity\n    );\n  };\n\n  static drawItem = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(\n      Game.itemset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity\n    );\n  };\n\n  static drawFX = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(\n      Game.fxset,\n      sX,\n      sY,\n      sW,\n      sH,\n      dX,\n      dY,\n      dW,\n      dH,\n      shadeColor,\n      shadeOpacity\n    );\n  };\n}\n\nlet game = new Game();\n","import { LevelConstants } from \"./levelConstants\";\n\nexport class GameConstants {\n  static readonly VERSION = \"v0.6.3\";\n\n  static readonly FPS = 120;\n  static readonly ALPHA_ENABLED = true;\n  static readonly SHADE_LEVELS = 10;\n\n  static readonly TILESIZE = 16;\n  static readonly SCALE = 1;\n\n  static readonly SWIPE_THRESH = 50 ** 2; // (size of swipe threshold circle)^2\n\n  static readonly KEY_REPEAT_TIME = 300; // millseconds\n\n  static readonly CHAT_APPEAR_TIME = 10000;\n  static readonly CHAT_FADE_TIME = 1000;\n\n  static readonly DEFAULTWIDTH = 12 * GameConstants.TILESIZE;\n  static readonly DEFAULTHEIGHT = 12 * GameConstants.TILESIZE;\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n  static scrolling = true;\n\n  static readonly SCRIPT_FONT_SIZE = 16;\n  static readonly FONT_SIZE = 7;\n  static readonly BIG_FONT_SIZE = 15;\n\n  static readonly RED = \"#ac3232\";\n  static readonly WARNING_RED = \"#ff0000\";\n  static readonly GREEN = \"#6abe30\";\n  static readonly ARMOR_GREY = \"#9badb7\";\n  static readonly OUTLINE = \"#222034\";\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\n  static readonly MISS_COLOR = \"#639bff\";\n}\n","import { Barrel } from \"./entity/barrel\";\nimport { BigSkullEnemy } from \"./entity/bigSkullEnemy\";\nimport { ChargeEnemy, ChargeEnemyState } from \"./entity/chargeEnemy\";\nimport { Chest } from \"./entity/chest\";\nimport { CoalResource } from \"./entity/coalResource\";\nimport { Crate } from \"./entity/crate\";\nimport { EmeraldResource } from \"./entity/emeraldResource\";\nimport { Entity, EntityDirection } from \"./entity/entity\";\nimport { GoldResource } from \"./entity/goldResource\";\nimport { KnightEnemy } from \"./entity/knightEnemy\";\nimport { PottedPlant } from \"./entity/pottedPlant\";\nimport { Pot } from \"./entity/pot\";\nimport { SkullEnemy } from \"./entity/skullEnemy\";\nimport { SlimeEnemy } from \"./entity/slimeEnemy\";\nimport { Spawner } from \"./entity/spawner\";\nimport { VendingMachine } from \"./entity/vendingMachine\";\nimport { WizardEnemy, WizardState } from \"./entity/wizardEnemy\";\nimport { ZombieEnemy } from \"./entity/zombieEnemy\";\nimport { Game } from \"./game\";\nimport { HitWarning } from \"./hitWarning\";\nimport { Inventory } from \"./inventory\";\nimport { Armor } from \"./item/armor\";\nimport { BlueGem } from \"./item/bluegem\";\nimport { Candle } from \"./item/candle\";\nimport { Coal } from \"./item/coal\";\nimport { Coin } from \"./item/coin\";\nimport { Equippable } from \"./item/equippable\";\nimport { Gold } from \"./item/gold\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Heart } from \"./item/heart\";\nimport { Item } from \"./item/item\";\nimport { Key } from \"./item/key\";\nimport { Lantern } from \"./item/lantern\";\nimport { RedGem } from \"./item/redgem\";\nimport { Torch } from \"./item/torch\";\nimport { Room } from \"./room\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { Player, PlayerDirection } from \"./player\";\nimport { EnemySpawnAnimation } from \"./projectile/enemySpawnAnimation\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { WizardFireball } from \"./projectile/wizardFireball\";\nimport { Random } from \"./random\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Spear } from \"./weapon/spear\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Backpack } from \"./item/backpack\";\n\nexport class HitWarningState {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(hw: HitWarning) {\n    this.x = hw.x;\n    this.y = hw.y;\n    this.dead = hw.dead;\n  }\n}\n\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\n  let hw = new HitWarning(game, hws.x, hws.y);\n  hw.dead = hws.dead;\n  return hw;\n}\n\nexport enum ProjectileType {\n  SPAWN,\n  WIZARD\n}\n\nexport class ProjectileState {\n  type: ProjectileType;\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  enemySpawn: EnemyState;\n  wizardState: number;\n  wizardParentID: number;\n\n  constructor(projectile: Projectile, game: Game) {\n    this.x = projectile.x;\n    this.y = projectile.y;\n    this.dead = projectile.dead;\n    if (projectile instanceof EnemySpawnAnimation) {\n      this.type = ProjectileType.SPAWN;\n      this.levelID = game.rooms.indexOf(projectile.room);\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\n    }\n    if (projectile instanceof WizardFireball) {\n      this.type = ProjectileType.WIZARD;\n      this.wizardState = projectile.state;\n      this.levelID = game.rooms.indexOf(projectile.parent.room);\n      this.wizardParentID = projectile.parent.room.entities.indexOf(projectile.parent);\n    }\n  }\n}\n\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\n  if (ps.type === ProjectileType.SPAWN) {\n    let level = game.rooms[ps.levelID];\n    let enemy = loadEnemy(ps.enemySpawn, game);\n    let p = new EnemySpawnAnimation(level, enemy, ps.x, ps.y);\n    p.dead = ps.dead;\n    return p;\n  }\n  if (ps.type === ProjectileType.WIZARD) {\n    let wizard = (game.rooms[ps.levelID].entities[ps.wizardParentID] as WizardEnemy);\n    let p = new WizardFireball(wizard, ps.x, ps.y);\n    p.state = ps.wizardState;\n    return p;\n  }\n}\n\nexport enum EnemyType {\n  BARREL,\n  BIGSKULL,\n  CHARGE,\n  CHEST,\n  COAL,\n  CRATE,\n  EMERALD,\n  GOLD,\n  KNIGHT,\n  PLANT,\n  SKULL,\n  SLIME,\n  SPAWNER,\n  VENDINGMACHINE,\n  WIZARD,\n  ZOMBIE\n}\n\nexport class EnemyState {\n  type: EnemyType;\n  levelID: number;\n  x: number;\n  y: number;\n  health: number;\n  direction: EntityDirection;\n  dead: boolean;\n  skipNextTurns: number;\n  hasDrop: boolean;\n  drop: ItemState;\n  alertTicks: number;\n  ticks: number;\n  seenPlayer: boolean;\n  targetPlayerID: string;\n  // skeleton\n  ticksSinceFirstHit: number;\n  // big skeleton\n  drops: Array<ItemState>;\n  // charge enemy\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  chargeEnemyState: ChargeEnemyState;\n  // spawner\n  enemySpawnType: number;\n  // vending machine\n  isPlayerOpened: boolean;\n  playerOpenedID: string;\n  open: boolean;\n  costItems: Array<ItemState>;\n  item: ItemState;\n  isInf: boolean;\n  quantity: number;\n  // wizard\n  wizardState: WizardState;\n\n  constructor(enemy: Entity, game: Game) {\n    this.levelID = game.rooms.indexOf(enemy.room);\n    this.x = enemy.x;\n    this.y = enemy.y;\n    this.health = enemy.health;\n    this.direction = enemy.direction;\n    this.dead = enemy.dead;\n    this.skipNextTurns = enemy.skipNextTurns;\n    this.hasDrop = false;\n    if (enemy.drop) {\n      this.hasDrop = true;\n      this.drop = new ItemState(enemy.drop, game);\n    }\n    this.alertTicks = enemy.alertTicks;\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\n    if (enemy instanceof BigSkullEnemy) {\n      this.type = EnemyType.BIGSKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n      this.drops = [];\n      for (const d of enemy.drops) this.drops.push(new ItemState(d, game));\n    }\n    if (enemy instanceof ChargeEnemy) {\n      this.type = EnemyType.CHARGE;\n      this.ticks = enemy.ticks;\n      this.chargeEnemyState = enemy.state;\n      this.startX = enemy.startX;\n      this.startY = enemy.startY;\n      this.targetX = enemy.targetX;\n      this.targetY = enemy.targetY;\n      this.visualTargetX = enemy.visualTargetX;\n      this.visualTargetY = enemy.visualTargetY;\n    }\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\n    if (enemy instanceof KnightEnemy) {\n      this.type = EnemyType.KNIGHT;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\n    if (enemy instanceof Pot) this.type = EnemyType.PLANT;\n    if (enemy instanceof SkullEnemy) {\n      this.type = EnemyType.SKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof SlimeEnemy) {\n      this.type = EnemyType.SLIME;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof Spawner) {\n      this.type = EnemyType.SPAWNER;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      this.enemySpawnType = enemy.enemySpawnType;\n    }\n    if (enemy instanceof VendingMachine) {\n      this.type = EnemyType.VENDINGMACHINE;\n      this.isPlayerOpened = false;\n      if (enemy.playerOpened) {\n        this.isPlayerOpened = true;\n        this.playerOpenedID = Object.keys(game.players).find(key => game.players[key] === enemy.playerOpened);\n        if (!this.playerOpenedID) this.playerOpenedID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.playerOpened);\n      }\n      this.open = enemy.open;\n      this.costItems = [];\n      for (const item of enemy.costItems) this.costItems.push(new ItemState(item, game));\n      this.item = new ItemState(enemy.item, game);\n      this.isInf = enemy.isInf;\n      this.quantity = enemy.quantity;\n    }\n    if (enemy instanceof WizardEnemy) {\n      this.type = EnemyType.WIZARD;\n      this.ticks = enemy.ticks;\n      this.wizardState = enemy.state;\n      this.seenPlayer = enemy.seenPlayer;\n    }\n    if (enemy instanceof ZombieEnemy) {\n      this.type = EnemyType.ZOMBIE;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n  }\n}\n\nlet loadEnemy = (es: EnemyState, game: Game): Entity => {\n  let enemy;\n  let level = game.rooms[es.levelID];\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(level, game, es.x, es.y);\n  if (es.type === EnemyType.BIGSKULL) {\n    enemy = new BigSkullEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n    enemy.drops = [];\n    for (const d of es.drops) enemy.drops.push(loadItem(d, game));\n  }\n  if (es.type === EnemyType.CHARGE) {\n    enemy = new ChargeEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.chargeEnemyState;\n    enemy.startX = es.startX;\n    enemy.startY = es.startY;\n    enemy.targetX = es.targetX;\n    enemy.targetY = es.targetY;\n    enemy.visualTargetX = es.visualTargetX;\n    enemy.visualTargetY = es.visualTargetY;\n  }\n  if (es.type === EnemyType.CHEST) enemy = new Chest(level, game, es.x, es.y, Random.rand);\n  if (es.type === EnemyType.COAL) enemy = new CoalResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.CRATE) enemy = new Crate(level, game, es.x, es.y);\n  if (es.type === EnemyType.EMERALD) enemy = new EmeraldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.GOLD) enemy = new GoldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.KNIGHT) {\n    enemy = new KnightEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.PLANT) enemy = new PottedPlant(level, game, es.x, es.y, Random.rand);\n  if (es.type === EnemyType.PLANT) enemy = new Pot(level, game, es.x, es.y);\n  if (es.type === EnemyType.SKULL) {\n    enemy = new SkullEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SLIME) {\n    enemy = new SlimeEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SPAWNER) {\n    enemy = new Spawner(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    enemy.enemySpawnType = es.enemySpawnType;\n  }\n  if (es.type === EnemyType.VENDINGMACHINE) {\n    let item = loadItem(es.item, game);\n    enemy = new VendingMachine(level, game, es.x, es.y, item, Random.rand);\n    if (es.isPlayerOpened) {\n      enemy.playerOpened = game.players[es.playerOpenedID];\n      if (!enemy.playerOpened) enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\n    }\n    enemy.open = es.open;\n    enemy.costItems = [];\n    for (const item of es.costItems) enemy.costItems.push(loadItem(item, game));\n    enemy.isInf = es.isInf;\n    enemy.quantity = es.quantity;\n  }\n  if (es.type === EnemyType.WIZARD) {\n    enemy = new WizardEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.state = es.wizardState;\n    enemy.seenPlayer = es.seenPlayer;\n  }\n  if (es.type === EnemyType.ZOMBIE) {\n    enemy = new ZombieEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n\n  enemy.x = es.x;\n  enemy.y = es.y;\n  enemy.health = es.health;\n  enemy.direction = es.direction;\n  enemy.dead = es.dead;\n  enemy.skipNextTurns = es.skipNextTurns;\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\n  enemy.alertTicks = es.alertTicks;\n\n  return enemy;\n}\n\nexport class LevelState {\n  levelID: number;\n  entered: boolean;\n  enemies: Array<EnemyState>;\n  items: Array<ItemState>;\n  projectiles: Array<ProjectileState>;\n  hitwarnings: Array<HitWarningState>;\n\n  constructor(level: Room, game: Game) {\n    this.levelID = game.rooms.indexOf(level);\n    this.entered = level.entered;\n    this.enemies = [];\n    this.items = [];\n    this.projectiles = [];\n    this.hitwarnings = [];\n    for (const enemy of level.entities) this.enemies.push(new EnemyState(enemy, game));\n    for (const item of level.items) this.items.push(new ItemState(item, game));\n    for (const projectile of level.projectiles) this.projectiles.push(new ProjectileState(projectile, game));\n    for (const hw of level.hitwarnings) this.hitwarnings.push(new HitWarningState(hw));\n  }\n}\n\nlet loadLevel = (level: Room, levelState: LevelState, game: Game) => {\n  level.entered = levelState.entered;\n  level.entities = [];\n  level.items = [];\n  level.projectiles = [];\n  level.hitwarnings = [];\n  for (const enemy of levelState.enemies) level.entities.push(loadEnemy(enemy, game));\n  for (const item of levelState.items) level.items.push(loadItem(item, game));\n  for (const projectile of levelState.projectiles) level.projectiles.push(loadProjectile(projectile, game));\n  for (const hw of levelState.hitwarnings) level.hitwarnings.push(loadHitWarning(hw, game));\n}\n\nexport enum ItemType {\n  ARMOR,\n  BLUEGEM,\n  CANDLE,\n  COAL,\n  COIN,\n  GOLD,\n  GOLDENKEY,\n  GREENGEM,\n  HEART,\n  KEY,\n  LANTERN,\n  REDGEM,\n  TORCH,\n  DAGGER,\n  DUALDAGGER,\n  SHOTGUN,\n  SPEAR,\n  PICKAXE,\n  BACKPACK\n}\n\nexport class ItemState {\n  type: ItemType;\n  x: number;\n  y: number;\n  levelID: number;\n  stackCount: number;\n  pickedUp: boolean;\n  equipped: boolean;\n\n  constructor(item: Item, game: Game) {\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\n    if (item instanceof Coal) this.type = ItemType.COAL;\n    if (item instanceof Coin) this.type = ItemType.COIN;\n    if (item instanceof Gold) this.type = ItemType.GOLD;\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\n    if (item instanceof Heart) this.type = ItemType.HEART;\n    if (item instanceof Key) this.type = ItemType.KEY;\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\n    if (item instanceof Torch) this.type = ItemType.TORCH;\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\n\n    this.equipped = item instanceof Equippable && item.equipped;\n    this.x = item.x;\n    this.y = item.y;\n    this.levelID = game.rooms.indexOf(item.level);\n    if (this.levelID === -1) this.levelID = 0;\n    this.stackCount = item.stackCount;\n    this.pickedUp = item.pickedUp;\n  }\n}\n\nlet loadItem = (i: ItemState, game: Game, player?: Player): Item => {\n  let level = game.rooms[i.levelID];\n  let item;\n  if (i.type === ItemType.ARMOR) item = new Armor(level, i.x, i.y);\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(level, i.x, i.y);\n  if (i.type === ItemType.CANDLE) item = new Candle(level, i.x, i.y);\n  if (i.type === ItemType.COAL) item = new Coal(level, i.x, i.y);\n  if (i.type === ItemType.COIN) item = new Coin(level, i.x, i.y);\n  if (i.type === ItemType.GOLD) item = new Gold(level, i.x, i.y);\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(level, i.x, i.y);\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(level, i.x, i.y);\n  if (i.type === ItemType.HEART) item = new Heart(level, i.x, i.y);\n  if (i.type === ItemType.KEY) item = new Key(level, i.x, i.y);\n  if (i.type === ItemType.LANTERN) item = new Lantern(level, i.x, i.y);\n  if (i.type === ItemType.REDGEM) item = new RedGem(level, i.x, i.y);\n  if (i.type === ItemType.TORCH) item = new Torch(level, i.x, i.y);\n  if (i.type === ItemType.DAGGER) { item = new Dagger(level, i.x, i.y); }\n  if (i.type === ItemType.DUALDAGGER) { item = new DualDagger(level, i.x, i.y); }\n  if (i.type === ItemType.SHOTGUN) { item = new Shotgun(level, i.x, i.y); }\n  if (i.type === ItemType.SPEAR) { item = new Spear(level, i.x, i.y); }\n  if (i.type === ItemType.PICKAXE) { item = new Pickaxe(level, i.x, i.y); }\n  if (i.type === ItemType.BACKPACK) { item = new Backpack(level, i.x, i.y); }\n  if (i.equipped) item.equipped = true;\n  if (item instanceof Equippable) item.setWielder(player);\n  item.stackCount = i.stackCount;\n  item.pickedUp = i.pickedUp;\n  return item;\n}\n\nexport class InventoryState {\n  isOpen: boolean;\n  cols: number;\n  rows: number;\n  selX: number;\n  selY: number;\n  equipAnimAmount: Array<number>;\n  isWeaponEquipped: boolean;\n  weaponI: number;\n  coins: number;\n  items: Array<ItemState>;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.isOpen = inventory.isOpen;\n    this.cols = inventory.cols;\n    this.rows = inventory.rows;\n    this.equipAnimAmount = inventory.equipAnimAmount.map(x => x);\n    this.isWeaponEquipped = false;\n    if (inventory.weapon) {\n      this.isWeaponEquipped = true;\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\n    }\n    this.coins = inventory.coins;\n    this.selX = inventory.selX;\n    this.selY = inventory.selY;\n    this.items = Array<ItemState>();\n    for (const item of inventory.items) {\n      this.items.push(new ItemState(item, game));\n    }\n  }\n}\n\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\n  inventory.clear();\n  inventory.isOpen = i.isOpen;\n  inventory.cols = i.cols;\n  inventory.rows = i.rows;\n  inventory.selX = i.selX;\n  inventory.selY = i.selY;\n  inventory.equipAnimAmount = i.equipAnimAmount.map(x => x);\n  inventory.coins = i.coins;\n  for (const item of i.items) inventory.items.push(loadItem(item, game, inventory.player));\n\n  if (i.isWeaponEquipped) inventory.weapon = (inventory.items[i.weaponI] as Weapon);\n}\n\nexport class PlayerState {\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  direction: PlayerDirection;\n  health: number;\n  maxHealth: number;\n  lastTickHealth: number;\n  inventory: InventoryState;\n  hasOpenVendingMachine: boolean;\n  openVendingMachineLevelID: number;\n  openVendingMachineID: number;\n  sightRadius: number;\n\n  constructor(player: Player, game: Game) {\n    this.x = player.x;\n    this.y = player.y;\n    this.dead = player.dead;\n    this.levelID = player.levelID;\n    this.direction = player.direction;\n    this.health = player.health;\n    this.maxHealth = player.maxHealth;\n    this.lastTickHealth = player.lastTickHealth;\n    this.inventory = new InventoryState(player.inventory, game);\n    this.hasOpenVendingMachine = false;\n    if (player.openVendingMachine) {\n      this.hasOpenVendingMachine = true;\n      this.openVendingMachineLevelID = game.rooms.indexOf(player.openVendingMachine.room);\n      this.openVendingMachineID = player.openVendingMachine.room.entities.indexOf(player.openVendingMachine);\n    }\n    this.sightRadius = player.sightRadius\n  }\n}\n\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\n  player.dead = p.dead;\n\n  player.levelID = p.levelID;\n  if (player.levelID < game.levelgen.currentFloorFirstLevelID) { // catch up to the current level\n    player.levelID = game.levelgen.currentFloorFirstLevelID;\n    player.x = game.rooms[player.levelID].roomX + Math.floor(game.rooms[player.levelID].width / 2);\n    player.y = game.rooms[player.levelID].roomY + Math.floor(game.rooms[player.levelID].height / 2);\n  }\n  player.direction = p.direction;\n  player.health = p.health;\n  player.maxHealth = p.maxHealth;\n  player.lastTickHealth = p.lastTickHealth;\n  loadInventory(player.inventory, p.inventory, game);\n  if (p.hasOpenVendingMachine) {\n    player.openVendingMachine = (game.rooms[p.openVendingMachineLevelID].entities[p.openVendingMachineID] as VendingMachine);\n  }\n  player.sightRadius = p.sightRadius;\n\n  return player;\n}\n\nexport class GameState {\n  seed: number;\n  randomState: number;\n  depth: number;\n  players: Record<string, PlayerState>;\n  offlinePlayers: Record<string, PlayerState>;\n  levels: Array<LevelState>;\n\n  constructor() {\n    this.seed = 0;\n    this.randomState = 0;\n    this.depth = 0;\n    this.players = {};\n    this.offlinePlayers = {};\n    this.levels = [];\n  }\n}\n\nexport const createGameState = (game: Game): GameState => {\n  let gs = new GameState();\n  gs.seed = game.levelgen.seed; // random state for generating levels\n  gs.randomState = Random.state; // current random state\n  gs.depth = game.levelgen.depthReached;\n  for (const i in game.players)\n    gs.players[i] = new PlayerState(game.players[i], game);\n  for (const i in game.offlinePlayers) {\n    gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\n  }\n  for (let level of game.rooms) {\n    level.catchUp();\n    gs.levels.push(new LevelState(level, game));\n  }\n  return gs;\n}\n\nexport const loadGameState = (game: Game, activeUsernames: Array<string>, gameState: GameState) => {\n  game.rooms = Array<Room>();\n  game.levelgen = new LevelGenerator();\n  game.levelgen.setSeed(gameState.seed);\n  if ((gameState as any).init_state) gameState.depth = 0;\n  game.levelgen.generateFirstNFloors(game, gameState.depth);\n\n  if (!(gameState as any).init_state) {\n    if (gameState.players) {\n      for (const i in gameState.players) {\n        if (activeUsernames.includes(i)) game.players[i] = loadPlayer(i, gameState.players[i], game);\n        else game.offlinePlayers[i] = loadPlayer(i, gameState.players[i], game);\n      }\n    }\n    if (gameState.offlinePlayers) {\n      for (const i in gameState.offlinePlayers) {\n        if (i === game.localPlayerID)\n          game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n        else if (activeUsernames.includes(i))\n          game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n        else\n          game.offlinePlayers[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n      }\n    }\n    for (let levelState of gameState.levels) {\n      for (let i = 0; i < game.rooms.length; i++) {\n        if (i === levelState.levelID) {\n          loadLevel(game.rooms[i], levelState, game);\n        }\n      }\n    }\n    if (!(game.localPlayerID in gameState.players) && !(game.localPlayerID in gameState.offlinePlayers)) { // we're not in the gamestate, create a new player\n      game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n      game.players[game.localPlayerID].levelID = game.levelgen.currentFloorFirstLevelID;\n      game.players[game.localPlayerID].x = game.rooms[game.levelgen.currentFloorFirstLevelID].roomX + Math.floor(game.rooms[game.levelgen.currentFloorFirstLevelID].width / 2);\n      game.players[game.localPlayerID].y = game.rooms[game.levelgen.currentFloorFirstLevelID].roomY + Math.floor(game.rooms[game.levelgen.currentFloorFirstLevelID].height / 2);\n      game.room = game.rooms[game.levelgen.currentFloorFirstLevelID];\n      game.room.enterLevel(game.players[game.localPlayerID]);\n    }\n    else {\n      game.room = game.rooms[game.players[game.localPlayerID].levelID];\n    }\n  }\n  else { // stub game state, start a new world\n    game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n    game.room = game.rooms[game.players[game.localPlayerID].levelID];\n    game.room.enterLevel(game.players[game.localPlayerID]);\n  }\n  Random.setState(gameState.randomState);\n  game.room.updateLighting();\n\n  game.chat = [];\n}","import { Game } from \"./game\";\nimport { LevelConstants } from \"./levelConstants\";\n\nexport class HealthBar {\n  hurtTimer: number;\n\n  constructor() {\n    this.hurtTimer = 0;\n  }\n\n  hurt = () => {\n    this.hurtTimer = Date.now();\n  };\n\n  draw = (delta: number, hearts: number, maxHearts: number, x: number, y: number, flashing: boolean) => {\n    let t = Date.now() - this.hurtTimer;\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\n      let fullHearts = Math.floor(hearts);\n\n      let halfHearts = Math.ceil(hearts - fullHearts);\n\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\n\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\n      //   (which isn't really parameterizable)\n      let drawWidth = Math.round(\n        Math.min(9, Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t))\n      );\n      let drawHeight =\n        Math.round(\n          Math.min(0.5, Math.min(0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.003 * t)) * 16\n        ) / 16.0;\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\n      let xxStart = 0.5 + -width / 2;\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\n        let tileX = 0;\n        if (!flashing) tileX = 1.5;\n        else if (i < fullHearts) tileX = 0;\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\n        else tileX = 1;\n        let xx = (drawWidth * i) / 16.0 + xxStart;\n        Game.drawFX(tileX, 8, 0.5, 0.5, x + xx, y - 1 - drawHeight / 2, 0.5, drawHeight);\n        xx += 9.0 / 16.0;\n\n        let j = maxHearts - i - 1;\n        if (j !== i) {\n          let tileX = 0;\n          if (!flashing) tileX = 1.5;\n          else if (j < fullHearts) tileX = 0;\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\n          else tileX = 1;\n          let xx = (drawWidth * j) / 16.0 + xxStart;\n          Game.drawFX(tileX, 8, 0.5, 0.5, x + xx, y - 1 - drawHeight / 2, 0.5, drawHeight);\n          xx += 9.0 / 16.0;\n        }\n      }\n    }\n  };\n}\n","import { Game } from \"./game\";\nimport { Drawable } from \"./drawable\";\nimport { Room } from \"./room\";\n\nexport class HitWarning extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  static frame = 0;\n  game: Game;\n\n  constructor(game: Game, x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.game = game;\n  }\n\n  tick = () => {\n    this.dead = true;\n  };\n\n  static updateFrame = (delta: number) => {\n    HitWarning.frame += 0.125 * delta;\n    if (HitWarning.frame >= 4) HitWarning.frame = 0;\n  };\n\n  draw = (delta: number) => {\n    if (\n      (this.x === this.game.players[this.game.localPlayerID].x && Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1) ||\n      (this.y === this.game.players[this.game.localPlayerID].y && Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1)\n    )\n      Game.drawFX(18 + Math.floor(HitWarning.frame), 6, 1, 1, this.x, this.y, 1, 1);\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n    if (\n      (this.x === this.game.players[this.game.localPlayerID].x && Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1) ||\n      (this.y === this.game.players[this.game.localPlayerID].y && Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1)\n    )\n      Game.drawFX(18 + Math.floor(HitWarning.frame), 5, 1, 1, this.x, this.y, 1, 1);\n  };\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Game } from \"./game\";\n\nexport enum InputEnum {\n  I,\n  M,\n  M_UP,\n  Q,\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SPACE\n}\n\nexport const Input = {\n  _pressed: {},\n\n  isTapHold: false,\n  tapStartTime: null,\n  IS_TAP_HOLD_THRESH: 300,\n  keyDownListener: function (key: string) { },\n  iListener: function () { },\n  mListener: function () { },\n  mUpListener: function () { },\n  qListener: function () { },\n  leftListener: function () { },\n  rightListener: function () { },\n  upListener: function () { },\n  downListener: function () { },\n  aListener: function () { Input.leftListener(); },\n  dListener: function () { Input.rightListener(); },\n  wListener: function () { Input.upListener(); },\n  sListener: function () { Input.downListener(); },\n  spaceListener: function () { },\n  leftSwipeListener: function () { },\n  rightSwipeListener: function () { },\n  upSwipeListener: function () { },\n  downSwipeListener: function () { },\n  tapListener: function () { },\n\n  mouseLeftClickListeners: [],\n\n  mouseLeftClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\n      Input.mouseLeftClickListeners[i](x, y);\n  },\n\n  mouseX: 0,\n  mouseY: 0,\n\n  lastPressTime: 0,\n  lastPressKeyCode: \"\",\n\n  SPACE: \"Space\",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  W: \"KeyW\",\n  A: \"KeyA\",\n  S: \"KeyS\",\n  D: \"KeyD\",\n  M: \"KeyM\",\n  N: \"KeyN\",\n  I: \"KeyI\",\n  Q: \"KeyQ\",\n\n  isDown: function (keyCode: string) {\n    return this._pressed[keyCode];\n  },\n\n  onKeydown: (event: KeyboardEvent) => {\n    if (event.key) Input.keyDownListener(event.key);\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\") event.preventDefault();\n    if (event.repeat) return; // ignore repeat keypresses\n    Input.lastPressTime = Date.now();\n    Input.lastPressKeyCode = event.code;\n    Input._pressed[event.code] = true;\n    switch (event.code) {\n      case Input.LEFT:\n        Input.leftListener();\n        break;\n      case Input.A:\n        Input.aListener();\n        break;\n      case Input.RIGHT:\n        Input.rightListener();\n        break;\n      case Input.D:\n        Input.dListener();\n        break;\n      case Input.UP:\n        Input.upListener();\n        break;\n      case Input.W:\n        Input.wListener();\n        break;\n      case Input.DOWN:\n        Input.downListener();\n        break;\n      case Input.S:\n        Input.sListener();\n        break;\n      case Input.SPACE:\n        Input.spaceListener();\n        break;\n      case Input.M:\n        Input.mListener();\n        break;\n      case Input.I:\n        Input.iListener();\n        break;\n      case Input.Q:\n        Input.qListener();\n        break;\n    }\n  },\n\n  onKeyup: function (event: KeyboardEvent) {\n    delete this._pressed[event.code];\n    if (event.code === this.lastPressKeyCode) {\n      this.lastPressTime = 0;\n      this.lastPressKeyCode = 0;\n    }\n    if (event.code === Input.M) Input.mUpListener();\n  },\n\n  mouseClickListener: function (event: MouseEvent) {\n    if (event.button === 0) {\n      let rect = window.document.getElementById(\"gameCanvas\").getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      Input.mouseLeftClickListener(Math.floor(x / Game.scale), Math.floor(y / Game.scale));\n    }\n  },\n\n  updateMousePos: function (event: MouseEvent) {\n    let rect = window.document.getElementById(\"gameCanvas\").getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    Input.mouseX = Math.floor(x / Game.scale);\n    Input.mouseY = Math.floor(y / Game.scale);\n  },\n\n  getTouches: function (evt) {\n    return (\n      evt.touches || evt.originalEvent.touches // browser API\n    ); // jQuery\n  },\n\n  xDown: null,\n  yDown: null,\n  currentX: 0,\n  currentY: 0,\n  swiped: false,\n\n  handleTouchStart: function (evt) {\n    evt.preventDefault();\n\n    const firstTouch = Input.getTouches(evt)[0];\n    Input.xDown = firstTouch.clientX;\n    Input.yDown = firstTouch.clientY;\n    Input.currentX = firstTouch.clientX;\n    Input.currentY = firstTouch.clientY;\n\n    Input.tapStartTime = Date.now();\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.swiped = false;\n  },\n\n  handleTouchMove: function (evt) {\n    evt.preventDefault();\n\n    Input.currentX = evt.touches[0].clientX;\n    Input.currentY = evt.touches[0].clientY;\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    if (Input.swiped) return;\n\n    var xDiff = Input.xDown - Input.currentX;\n    var yDiff = Input.yDown - Input.currentY;\n\n    // we have not swiped yet\n    // check if we've swiped\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        /*most significant*/\n        if (xDiff > 0) {\n          Input.leftSwipeListener();\n        } else {\n          Input.rightSwipeListener();\n        }\n        Input.swiped = true;\n      } else {\n        if (yDiff > 0) {\n          Input.upSwipeListener();\n        } else {\n          Input.downSwipeListener();\n        }\n        Input.swiped = true;\n      }\n    }\n  },\n\n  handleTouchEnd: function (evt) {\n    evt.preventDefault();\n\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\n    Input.isTapHold = false;\n    Input.tapStartTime = null;\n\n    // we've already swiped, don't count the click\n    if (Input.swiped) return;\n    Input.mouseClickListener({\n      button: 0,\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.updateMousePos({\n      clientX: 0,\n      clientY: 0,\n    } as MouseEvent);\n  },\n\n  checkIsTapHold: function () {\n    if (Input.tapStartTime !== null && Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH)\n      Input.isTapHold = true;\n  },\n};\nwindow.addEventListener(\n  \"keyup\",\n  function (event) {\n    Input.onKeyup(event);\n  },\n  false\n);\nwindow.addEventListener(\n  \"keydown\",\n  function (event) {\n    Input.onKeydown(event);\n  },\n  false\n);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"click\", event => Input.mouseClickListener(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mousemove\", event => Input.updateMousePos(event));\n","import { Item } from \"./item/item\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Game } from \"./game\";\nimport { Key } from \"./item/key\";\nimport { Input } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Equippable } from \"./item/equippable\";\nimport { Armor } from \"./item/armor\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { Coin } from \"./item/coin\";\nimport { Gold } from \"./item/gold\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Coal } from \"./item/coal\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { Room } from \"./room\";\nimport { Usable } from \"./item/usable\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Candle } from \"./item/candle\";\nimport { Torch } from \"./item/torch\";\nimport { Lantern } from \"./item/lantern\";\nimport { Player } from \"./player\";\nimport { Spear } from \"./weapon/spear\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Backpack } from \"./item/backpack\";\nimport { Slingshot } from \"./weapon/slingshot\";\nimport { Heart } from \"./item/heart\";\n\nlet OPEN_TIME = 100; // milliseconds\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet EQUIP_COLOR = \"#85a8e6\";\nlet FULL_OUTLINE = \"white\";\n\nexport class Inventory {\n  player: Player;\n  items: Array<Item>;\n  rows = 2;\n  cols = 5;\n  selX = 0;\n  selY = 0;\n  game: Game;\n  isOpen: boolean;\n  openTime: number;\n  coins: number;\n  equipAnimAmount: Array<number>;\n  weapon: Weapon;\n  expansion: number = 0;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.player = player;\n    this.items = new Array<Item>();\n    this.equipAnimAmount = [];\n    for (let i = 0; i < this.rows * this.cols; i++) {\n      this.equipAnimAmount[i] = 0;\n    }\n    //Input.mouseLeftClickListeners.push(this.mouseLeftClickListener);\n    this.coins = 0;\n    this.openTime = Date.now();\n    this.weapon = null;\n    this.expansion = 0;\n\n    let a = (i: Item) => {\n      if (i instanceof Equippable) {\n        i.setWielder(this.player);\n      }\n      if (i instanceof Weapon) {\n        i.toggleEquip();\n        this.weapon = i;\n        //this.player.weapon = this.weapon;\n      }\n\n      this.addItem(i);\n    };\n    const startingInv = [Dagger, Key, Backpack];\n    startingInv.forEach((item) => {\n      a(new item({ game: this.game } as Room, 0, 0));\n    });\n  }\n\n  clear = () => {\n    this.items = [];\n    for (let i = 0; i < (this.rows + this.expansion) * this.cols; i++)\n      this.equipAnimAmount[i] = 0;\n  };\n\n  open = () => {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) this.openTime = Date.now();\n  };\n\n  close = () => {\n    this.isOpen = false;\n  };\n\n  left = () => {\n    this.selX--;\n    if (this.selX < 0) this.selX = 0;\n  };\n  right = () => {\n    this.selX++;\n    if (this.selX > this.cols - 1) this.selX = this.cols - 1;\n  };\n  up = () => {\n    this.selY--;\n    if (this.selY < 0) this.selY = 0;\n  };\n  down = () => {\n    this.selY++;\n    if (this.selY > this.rows + this.expansion - 1)\n      this.selY = this.rows + this.expansion - 1;\n  };\n  space = () => {\n    let i = this.selX + this.selY * this.cols;\n\n    if (this.items[i] instanceof Usable) {\n      (this.items[i] as Usable).onUse(this.player);\n      //this.items.splice(i, 0);\n    } else if (this.items[i] instanceof Equippable) {\n      //dont equip on the same tick as using an item\n      let e = this.items[i] as Equippable;\n      e.toggleEquip();\n      if (e instanceof Weapon) {\n        if (e.equipped) this.weapon = e;\n        else this.weapon = null;\n      }\n      if (e.equipped) {\n        for (const i of this.items) {\n          if (i instanceof Equippable && i !== e && !e.coEquippable(i)) {\n            i.equipped = false; // prevent user from equipping two not coEquippable items\n          }\n        }\n      }\n    }\n  };\n\n  drop = () => {\n    let i = this.selX + this.selY * this.cols;\n    if (i < this.items.length) {\n      if (this.items[i] instanceof Equippable)\n        (this.items[i] as Equippable).equipped = false;\n      this.items[i].level = this.game.rooms[this.player.levelID];\n      this.items[i].x = this.player.x;\n      this.items[i].y = this.player.y;\n      this.items[i].pickedUp = false;\n      this.equipAnimAmount[i] = 0;\n      this.game.rooms[this.player.levelID].items.push(this.items[i]);\n      this.items.splice(i, 1);\n    }\n  };\n\n  hasItem = (itemType: any): Item => {\n    // itemType is class of Item we're looking for\n    for (const i of this.items) {\n      if (i instanceof itemType) return i;\n    }\n    return null;\n  };\n\n  hasItemCount = (item: Item) => {\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\n    for (const i of this.items) {\n      if (i.constructor === item.constructor && i.stackCount >= item.stackCount)\n        return true;\n    }\n    return false;\n  };\n\n  subtractItemCount = (item: Item) => {\n    if (item instanceof Coin) {\n      this.subtractCoins(item.stackCount);\n      return;\n    }\n    for (const i of this.items) {\n      if (i.constructor === item.constructor) {\n        i.stackCount -= item.stackCount;\n        if (i.stackCount <= 0) this.items.splice(this.items.indexOf(i), 1);\n      }\n    }\n  };\n\n  coinCount = (): number => {\n    return this.coins;\n  };\n\n  subtractCoins = (n: number) => {\n    this.coins -= n;\n    if (this.coins < 0) this.coins = 0;\n  };\n\n  addCoins = (n: number) => {\n    this.coins += n;\n  };\n\n  isFull = (): boolean => {\n    return this.items.length >= (this.rows + this.expansion) * this.cols;\n  };\n\n  addItem = (item: Item): boolean => {\n    if (item instanceof Coin) {\n      this.coins += item.stack;\n      return true;\n    }\n    if (item instanceof Equippable) {\n      item.setWielder(this.player);\n    }\n    if (item.stackable) {\n      for (let i of this.items) {\n        if (i.constructor === item.constructor) {\n          // we already have an item of the same type\n          i.stackCount += item.stackCount;\n          return true;\n        }\n      }\n    }\n    if (!this.isFull()) {\n      // item is either not stackable, or it's stackable but we don't have one yet\n      this.items.push(item);\n      return true;\n    }\n    return false;\n  };\n\n  removeItem = (item: Item) => {\n    let i = this.items.indexOf(item);\n    if (i !== -1) {\n      this.items.splice(i, 1);\n    }\n  };\n\n  getArmor = (): Armor => {\n    for (const i of this.items) {\n      if (i instanceof Armor && i.equipped) return i;\n    }\n    return null;\n  };\n\n  hasWeapon = () => {\n    return this.weapon !== null;\n  };\n\n  getWeapon = () => {\n    return this.weapon;\n  };\n\n  tick = () => {\n    for (const i of this.items) {\n      i.tickInInventory();\n    }\n  };\n\n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\n    // returns y value for next line\n    let words = text.split(\" \");\n    let line = \"\";\n\n    while (words.length > 0) {\n      if (Game.measureText(line + words[0]).width > maxWidth) {\n        Game.fillText(line, x, y);\n        line = \"\";\n        y += 8;\n      } else {\n        if (line !== \"\") line += \" \";\n        line += words[0];\n        words.splice(0, 1);\n      }\n    }\n    if (line !== \" \") {\n      Game.fillText(line, x, y);\n      y += 8;\n    }\n    return y;\n  };\n\n  drawCoins = (delta: number) => {\n    let coinX = LevelConstants.SCREEN_W - 1;\n    let coinY = LevelConstants.SCREEN_H - 1;\n\n    Game.drawItem(19, 0, 1, 2, coinX, coinY - 1, 1, 2);\n\n    let countText = \"\" + this.coins;\n    let width = Game.measureText(countText).width;\n    let countX = 4 - width;\n    let countY = -1;\n\n    Game.fillTextOutline(\n      countText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\"\n    );\n\n    let turnCountText = this.player.turnCount.toString();\n    Game.fillTextOutline(\n      turnCountText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY - 15,\n      GameConstants.OUTLINE,\n      \"white\"\n    );\n  };\n\n  pointInside = (x: number, y: number): boolean => {\n    let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n    let b = 2; // border\n    let g = -2; // gap\n    let hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    let ob = 1; // outer border\n    let width = this.cols * (s + 2 * b + g) - g;\n    let height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n\n    return (\n      x >= Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob &&\n      x <=\n        Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) -\n          ob +\n          Math.round(width + 2 * ob) &&\n      y >= Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob &&\n      y <=\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) -\n          ob +\n          Math.round(height + 2 * ob)\n    );\n  };\n\n  draw = (delta: number) => {\n    this.drawCoins(delta);\n\n    if (this.isOpen) {\n      for (let i = 0; i < this.equipAnimAmount.length; i++) {\n        if (this.items[i] instanceof Equippable) {\n          if ((this.items[i] as Equippable).equipped) {\n            this.equipAnimAmount[i] += 0.2 * (1 - this.equipAnimAmount[i]);\n          } else {\n            this.equipAnimAmount[i] += 0.2 * (0 - this.equipAnimAmount[i]);\n          }\n        } else {\n          this.equipAnimAmount[i] = 0;\n        }\n      }\n\n      Game.ctx.fillStyle = \"rgb(0, 0, 0, 0.8)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n      let ob = 1; // outer border\n      let width = this.cols * (s + 2 * b + g) - g;\n      let height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob,\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      Game.ctx.fillRect(\n        Math.round(\n          0.5 * GameConstants.WIDTH - 0.5 * width + this.selX * (s + 2 * b + g)\n        ) -\n          hg -\n          ob,\n        Math.round(\n          0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            this.selY * (s + 2 * b + g)\n        ) -\n          hg -\n          ob,\n        Math.round(s + 2 * b + 2 * hg) + 2 * ob,\n        Math.round(s + 2 * b + 2 * hg) + 2 * ob\n      );\n\n      for (let x = 0; x < this.cols; x++) {\n        for (let y = 0; y < this.rows + this.expansion; y++) {\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(\n            Math.round(\n              0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g)\n            ),\n            Math.round(\n              0.5 * GameConstants.HEIGHT - 0.5 * height + y * (s + 2 * b + g)\n            ),\n            Math.round(s + 2 * b),\n            Math.round(s + 2 * b)\n          );\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(\n              0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g) + b\n            ),\n            Math.round(\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                y * (s + 2 * b + g) +\n                b\n            ),\n            Math.round(s),\n            Math.round(s)\n          );\n          let i = x + y * this.cols;\n          Game.ctx.fillStyle = EQUIP_COLOR;\n          let yOff = s * (1 - this.equipAnimAmount[i]);\n          Game.ctx.fillRect(\n            Math.round(\n              0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g) + b\n            ),\n            Math.round(\n              0.5 * GameConstants.HEIGHT -\n                0.5 * height +\n                y * (s + 2 * b + g) +\n                b +\n                yOff\n            ),\n            Math.round(s),\n            Math.round(s - yOff)\n          );\n        }\n      }\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.items.length; i++) {\n          let x = i % this.cols;\n          let y = Math.floor(i / this.cols);\n\n          let drawX = Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              x * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE\n          );\n          let drawY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              y * (s + 2 * b + g) +\n              b +\n              Math.floor(0.5 * s) -\n              0.5 * GameConstants.TILESIZE\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          this.items[i].drawIcon(delta, drawXScaled, drawYScaled);\n\n          //if (this.items[i] instanceof Equippable && (this.items[i] as Equippable).equipped) {\n          //  Game.drawItem(0, 4, 2, 2, x - 0.5, y - 0.5, 2, 2);\n          //}\n        }\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g)\n          ) - hg,\n          Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g)\n          ) - hg,\n          Math.round(s + 2 * b + 2 * hg),\n          Math.round(s + 2 * b + 2 * hg)\n        );\n        Game.ctx.fillStyle = FILL_COLOR;\n        Game.ctx.fillRect(\n          Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) +\n              b -\n              hg\n          ),\n          Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) +\n              b -\n              hg\n          ),\n          Math.round(s + 2 * hg),\n          Math.round(s + 2 * hg)\n        );\n        let i = this.selX + this.selY * this.cols;\n        Game.ctx.fillStyle = EQUIP_COLOR;\n        let yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[i]);\n        Game.ctx.fillRect(\n          Math.round(\n            0.5 * GameConstants.WIDTH -\n              0.5 * width +\n              this.selX * (s + 2 * b + g) +\n              b -\n              hg\n          ),\n          Math.round(\n            0.5 * GameConstants.HEIGHT -\n              0.5 * height +\n              this.selY * (s + 2 * b + g) +\n              b -\n              hg +\n              yOff\n          ),\n          Math.round(s + 2 * hg),\n          Math.round(s + 2 * hg - yOff)\n        );\n\n        let drawX = Math.round(\n          0.5 * GameConstants.WIDTH -\n            0.5 * width +\n            this.selX * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n        );\n        let drawY = Math.round(\n          0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            this.selY * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n        );\n\n        let drawXScaled = drawX / GameConstants.TILESIZE;\n        let drawYScaled = drawY / GameConstants.TILESIZE;\n\n        if (i < this.items.length)\n          this.items[i].drawIcon(delta, drawXScaled, drawYScaled);\n      }\n\n      let i = this.selX + this.selY * this.cols;\n\n      if (i < this.items.length) {\n        Game.ctx.fillStyle = \"white\";\n\n        let topPhrase = \"\";\n        if (this.items[i] instanceof Equippable) {\n          let e = this.items[i] as Equippable;\n          topPhrase = \"[SPACE] to equip\";\n          if (e.equipped) topPhrase = \"[SPACE] to unequip\";\n        }\n        if (this.items[i] instanceof Usable) {\n          topPhrase = \"[SPACE] to use\";\n        }\n\n        Game.ctx.fillStyle = \"white\";\n        let w = Game.measureText(topPhrase).width;\n        Game.fillText(topPhrase, 0.5 * (GameConstants.WIDTH - w), 5);\n\n        let lines = this.items[i].getDescription().split(\"\\n\");\n        let nextY = Math.round(\n          0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            (this.rows + this.expansion) * (s + 2 * b + g) +\n            b +\n            5\n        );\n        for (let j = 0; j < lines.length; j++) {\n          nextY = this.textWrap(lines[j], 5, nextY, GameConstants.WIDTH - 10);\n        }\n      }\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Equippable } from \"./equippable\";\n\nexport class Armor extends Equippable {\n  health: number;\n  rechargeTurnCounter: number;\n  readonly RECHARGE_TURNS = 15;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.health = 1;\n    this.rechargeTurnCounter = -1;\n    this.tileX = 5;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Armor) return false;\n    return true;\n  };\n\n  getDescription = (): string => {\n    return (\n      \"ENCHANTED ARMOR\\nA magic suit of armor. Absorbs one hit and regenerates after \" +\n      this.RECHARGE_TURNS +\n      \" turns.\"\n    );\n  };\n\n  tickInInventory = () => {\n    if (this.rechargeTurnCounter > 0) {\n      this.rechargeTurnCounter--;\n      if (this.rechargeTurnCounter === 0) {\n        this.rechargeTurnCounter = -1;\n        this.health = 1;\n      }\n    }\n  };\n\n  hurt = (damage: number) => {\n    if (this.health <= 0) return;\n    this.health -= damage;\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\n  };\n\n  drawGUI = (delta: number, playerHealth: number) => {\n    if (this.rechargeTurnCounter === -1)\n      Game.drawFX(5, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n    else {\n      let rechargeProportion = 1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\n\n      if (rechargeProportion < 0.5)\n        Game.drawFX(7, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n      else Game.drawFX(8, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\nimport { Usable } from \"./usable\";\nimport { Inventory } from \"../inventory\";\n\nexport class Backpack extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n   \n\n      \n    player.inventory.expansion += 1;\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n  getDescription = () => {\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class BlueGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"ZIRCON\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Torch } from \"./torch\";\nimport { Lantern } from \"./lantern\";\nimport { Inventory } from \"../inventory\";\nimport { Player } from \"../player\";\nimport { Light } from \"./light\";\n\nexport class Candle extends Light {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 100; //how many turns before it burns out\n    this.tileX = 27;\n    this.tileY = 0;\n  }\n\n  tickInInventory = () => {\n    if (this.fuel <= 0) {\n      this.wielder.game.pushMessage(\"Your candle burns out.\");\n      this.wielder.inventory.removeItem(this);\n    } else if (this.ignite()) {\n      this.fuel--;\n      this.wielder.sightRadius = Math.min(this.fuel / 5 + 2, 4);\n    }\n    console.log(`fuel: ${this.fuel}`);\n  };\n\n  coEquippable = (other: Light): boolean => {\n    return !(\n      other instanceof Candle ||\n      other instanceof Torch ||\n      other instanceof Lantern\n    );\n  };\n  \n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.ignite()) {\n      this.wielder.sightRadius = Math.min(this.fuel / 5 + 2, 4);\n    }\n    //if (!this.equipped) this.wielder.sightRadius = this.wielder.defaultSightRadius\n  };\n\n  getDescription = () => {\n    const percentage = (this.fuel / 50) * 100;\n    return `Candle: ${percentage}%`;\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Usable } from \"./usable\";\nimport { Lantern } from \"./lantern\";\n\nexport class Coal extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 17;\n    this.tileY = 0;\n    this.stackable = true;\n  }\n  onUse = (player: Player) => {\n    let l = player.inventory.hasItem(Lantern);\n    if (l instanceof Lantern) {\n      if (l.fuel <= l.fuelCap - 50) {\n        l.addFuel(50);\n        player.game.pushMessage(\"You add some fuel to your lantern.\");\n        this.stackCount -= 1;\n        if (this.stackCount <= 0) {\n          player.inventory.removeItem(this);\n        }\n      }\n    }\n  };\n\n  getDescription = (): string => {\n    return \"COAL\\nA lump of coal.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Sound } from \"../sound\";\n\nexport class Coin extends Item {\n  stack: number;\n  //checked: boolean;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 19;\n    this.tileY = 0;\n    this.stack = 1;\n    this.stackable = true;\n  }\n  onDrop = () => {\n    const coinList = []; //array to store coin objects\n    for (const item of this.level.items) {\n      if (item instanceof Coin) coinList.push(item);\n    }\n      for (const otherCoin of coinList) {\n        if (\n          this !== otherCoin &&\n          this.x === otherCoin.x &&\n          this.y === otherCoin.y\n        ) {\n          this.stack += otherCoin.stack;\n          this.level.items = this.level.items.filter((x) => x !== otherCoin);\n        }\n        if (this.stack === 2) this.tileX = 20;\n        else if (this.stack >= 3) this.tileX = 21;\n      }\n  };\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.pickupCoin();\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\n\nexport class Equippable extends Item {\n  wielder: Player;\n  equipped: boolean;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.equipped = false;\n  }\n\n  setWielder = (wielder: Player) => {\n    this.wielder = wielder;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    return true;\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n  };\n\n  drawEquipped = (delta: number, x: number, y: number) => {\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Gold extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 18;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD\\nA nugget of gold.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room\";\n\nexport class GoldenKey extends Equippable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD KEY\\nA heavy gold key.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GreenGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 11;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"PERIDOT\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\nimport { Usable } from \"./usable\";\n\nexport class Heart extends Usable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 8;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\n      Sound.heal();\n    player.inventory.removeItem(this);\n\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  getDescription = () => {\n    return \"HEALTH POTION\\nRestores 1 heart\";\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { Drawable } from \"../drawable\";\n\n// Item class extends Drawable class and represents an item in the game\nexport class Item extends Drawable {\n  // Item properties\n  x: number; // x-coordinate of the item\n  y: number; // y-coordinate of the item\n  w: number; // width of the item\n  h: number; // height of the item\n  offsetY: number; // offset of the item on the y-axis\n  tileX: number; // x-coordinate of the tile where the item is located\n  tileY: number; // y-coordinate of the tile where the item is located\n  frame: number; // frame number for animation\n  level: Room; // level where the item is located\n  stackable: boolean; // whether the item is stackable or not\n  stackCount: number; // number of items in the stack\n  pickedUp: boolean; // whether the item has been picked up or not\n  alpha: number; // alpha value for transparency\n  scaleFactor: number; // scale factor for size adjustment\n\n  // Constructor for the Item class\n  constructor(level: Room, x: number, y: number) {\n    super();\n\n    // Initialize properties\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.w = 1;\n    this.h = 2;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.frame = 0;\n    this.stackable = false;\n    this.stackCount = 1;\n    this.pickedUp = false;\n    this.alpha = 1;\n    this.scaleFactor = 0.2;\n    this.offsetY = -0.25;\n  }\n\n  // Empty tick function to be overridden by subclasses\n  tick = () => {};\n  // Empty tick function for inventory behavior to be overridden by subclasses\n  tickInInventory = () => {};\n\n  // Function to get description of the item, to be overridden by subclasses\n  getDescription = (): string => {\n    return \"\";\n  };\n\n  // Function to play sound when item is picked up\n  pickupSound = () => {\n    if (this.level === this.level.game.room) Sound.genericPickup();\n  };\n\n  // Empty function to be called when item is dropped, to be overridden by subclasses\n  onDrop = () => {}\n\n  // Function to be called when item is picked up\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) this.pickupSound();\n    }\n  };\n\n  // Function to get the amount of shade at the item's location\n  shadeAmount = () => {\n    return this.level.softVis[this.x][this.y];\n  };\n\n  // Function to draw the item\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n  // Function to draw the top layer of the item\n  drawTopLayer = (delta: number) => {\n    if (this.pickedUp) {\n      this.y -= 0.125;\n      this.alpha -= 0.03;\n      if (this.y < -1)\n        this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\n\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x,\n        this.y - 1,\n        this.w,\n        this.h\n      );\n\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n  // Function to draw the item's icon\n  drawIcon = (delta: number, x: number, y: number, opacity = 1) => {\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n    Game.ctx.globalAlpha = 1;\n\n    let countText = this.stackCount <= 1 ? \"\" : \"\" + this.stackCount;\n    let width = Game.measureText(countText).width;\n    let countX = 16 - width;\n    let countY = 10;\n\n    Game.fillTextOutline(\n      countText,\n      x * GameConstants.TILESIZE + countX,\n      y * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\"\n    );\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Room } from \"../room\";\n\nexport class Key extends Equippable {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 1;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"KEY\\nAn iron key.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Torch } from \"./torch\";\nimport { Coal } from \"./coal\";\nimport { Light } from \"./light\";\n\nexport class Lantern extends Light {\n  fuelCap: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n    this.fuel = 0;\n    this.tileX = 29;\n    this.tileY = 0;\n    this.fuelCap = 250;\n  }\n  addFuel = (amount: number) => {\n    this.fuel += amount;\n  };\n  \n  coEquippable = (other: Light): boolean => {\n    return !(\n      other instanceof Candle ||\n      other instanceof Torch ||\n      other instanceof Lantern\n    );\n  };\n\n  tickInInventory = () => {\n    if (this.fuel === 0 && this.equipped) {\n      this.equipped = false;\n      this.wielder.game.pushMessage(\"Your lantern runs out of fuel.\");\n    }\n    if (this.ignite()) {\n      this.fuel -= 1;\n      this.wielder.sightRadius = Math.min(this.fuel / 4 + 3, 7);\n      console.log(\"sight radius:\" + this.wielder.sightRadius);\n    }\n    console.log(\"fuel:\" + this.fuel);\n  };\n\n  toggleEquip = () => {\n    if (this.fuel > 0) {\n      this.equipped = !this.equipped;\n      if (this.ignite()) {\n        this.wielder.sightRadius = Math.min(this.fuel / 4 + 3, 7);\n      } //else this.wielder.sightRadius = 3;\n    } else\n      this.wielder.game.pushMessage(\n        \"I'll need some fuel before I can use this\"\n      );\n    //Math.max(this.wielder.defaultSightRadius, this.fuel / 25)}\n  };\n\n  getDescription = () => {\n    const percentage = Math.round((this.fuel / this.fuelCap) * 100);\n    return `LANTERN - Fuel: ${percentage}%, Capacity: ${this.fuelCap / 50}`;\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Lantern } from \"./lantern\";\nimport { Torch } from \"./torch\";\n\nexport class Light extends Equippable {\n    fuel: number;\n  fuelCap: number;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n    this.fuel = 0;\n    this.fuelCap = 250;\n  }\n\n  ignite = () => {\n    if (this.fuel > 0 && this.equipped) {\n      return true;\n    } else return false;\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.equipped) {\n      this.wielder.sightRadius = 12;\n    } else this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  getDescription = () => {\n    return \"TORCH\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class RedGem extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GARNET\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Shrooms extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"SHROOMS\\nI don't think I should eat these...\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Stone extends Item {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 15;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"STONE\\nSome fragments of stone.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Lantern } from \"./lantern\";\nimport { Light } from \"./light\";\n\nexport class Torch extends Light {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n  }\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.equipped) {\n      this.wielder.sightRadius = 12;\n    } else this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  coEquippable = (other: Light): boolean => {\n    return !(\n      other instanceof Candle ||\n      other instanceof Torch ||\n      other instanceof Lantern\n    );\n  };\n  \n  getDescription = () => {\n    return \"TORCH\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Room } from \"../room\";\n\nexport class Usable extends Item {\n  user: Player;\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n  }\n  onUse = (player: Player) => {};\n\n}\n","import { GameConstants } from \"./gameConstants\";\n\nexport class LevelConstants {\n  static SCREEN_W = 1;\n  static SCREEN_H = 1;\n\n  static readonly COMPUTER_TURN_DELAY = 300; // milliseconds\n  static readonly TURN_TIME = 1000; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\n  static readonly ROOM_COUNT = 15;\n\n  static readonly HEALTH_BAR_FADEIN = 100;\n  static readonly HEALTH_BAR_FADEOUT = 100;\n  static readonly HEALTH_BAR_TOTALTIME = 2500;\n\n  static readonly SHADED_TILE_CUTOFF = 1;\n  static SMOOTH_LIGHTING = false; //doesn't work\n  static readonly MIN_VISIBILITY = 2.0; // visibility level of places you've already seen\n  static readonly LIGHTING_ANGLE_STEP = 5; // how many degrees between each ray\n\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\n}\n","import { Game } from \"./game\";\nimport { Room, RoomType } from \"./room\";\nimport { Door } from \"./tile/door\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Random } from \"./random\";\nimport { DownLadder } from \"./tile/downLadder\";\n//Goal: CRACK THE LEVEL GENERATOR\nclass PartitionConnection {\n  x: number;\n  y: number;\n  other: Partition;\n\n  constructor(x: number, y: number, other: Partition) {\n    this.x = x;\n    this.y = y;\n    this.other = other;\n  }\n}\n\nclass Partition {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  type: RoomType;\n  connections: Array<PartitionConnection>;\n  distance: number;\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.type = RoomType.DUNGEON;\n    this.connections = [];\n    this.distance = 1000;\n  }\n\n  split = () => {\n    // This function generates a random number around the center (0.5) within a certain width (0.6).\n    // It uses the Random.rand() function to generate a random number between 0 and 1, subtracts 0.5 to center it around 0,\n    // multiplies it by the width to scale it, and then adds the center (0.5) to shift it back to being between 0 and 1.\n    let rand_mid = () => {\n      let center = 0.5;\n      let width = 0.6;\n      return (Random.rand() - 0.5) * width + center;\n    };\n\n    \n    let sizeRange = () => {\n      let sizes = [\n        { size: 1, probability: 0.2 },\n        { size: 3, probability: 0.6 },\n        { size: 10, probability: 0.2 }\n      ];\n      let rand = Random.rand();\n      let sum = 0;\n      for (let size of sizes) {\n        sum += size.probability;\n        if (rand <= sum) return size.size;\n      }\n      return sizes[sizes.length - 1].size;\n    };\n    let MIN_SIZE = 3\n\n    if (this.w > this.h) {\n      //if the partitions width is greater than its height\n      let w1 = Math.floor(rand_mid() * this.w);\n      //choose a random tile within the width of the tiles\n      let w2 = this.w - w1 - 1;\n      //The remaining border - 1\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\n      //if either of these are less than the min size: return an array with this Partition\n      return [\n        new Partition(this.x, this.y, w1, this.h),\n        new Partition(this.x + w1 + 1, this.y, w2, this.h),\n      ];\n      //return an array with two new partitions\n    } else {\n      let h1 = Math.floor(rand_mid() * this.h);\n      let h2 = this.h - h1 - 1;\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\n      return [\n        new Partition(this.x, this.y, this.w, h1),\n        new Partition(this.x, this.y + h1 + 1, this.w, h2),\n      ];\n      //identical code for case where height > width\n    }\n  };\n\n  point_in = (x: number, y: number): boolean => {\n    //given the input argument x,y coordinates output boolean\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n    \n    //only return true if both input x and input y are within the partitions x and y\n  };\n\n  point_next_to = (x: number, y: number): boolean => {\n    return (\n      (x >= this.x - 1 &&\n        x < this.x + this.w + 1 &&\n        y >= this.y &&\n        y < this.y + this.h) ||\n      (x >= this.x &&\n        x < this.x + this.w &&\n        y >= this.y - 1 &&\n        y < this.y + this.h + 1)\n    );\n    //return true if the input x and y are next to any point of the partition\n  };\n\n  area = (): number => {\n    return this.w * this.h;\n    //return the damn area\n  };\n\n  overlaps = (other: Partition): boolean => {\n    return (\n      other.x < this.x + this.w + 1 &&\n      other.x + other.w > this.x - 1 &&\n      other.y < this.y + this.h + 1 &&\n      other.y + other.h > this.y - 1\n    );\n    //takes another partition instance as argument\n    //returns true if any points of each overlap\n  };\n\n  get_branch_point = (): { x: number; y: number } => {\n    let points = [];\n    for (let x = this.x; x < this.x + this.w; x++) {\n      //count up from the partitions x to it's width\n      points.push({ x: x, y: this.y - 1 /*one row above partition*/ });\n      points.push({ x: x, y: this.y + this.h /*one row below partition*/ });\n    }// pushes the points above and below the partition\n    for (let y = this.y; y < this.y + this.h; y++) {\n      points.push({ x: this.x - 1, y: y });\n      points.push({ x: this.x + this.w, y: y });\n    }//pushes points to left an right of the partition\n    points = points.filter(\n      (p) =>\n        !this.connections.some(\n          (c) => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1\n          \n        )\n        //if the sum of the distance between the input x and y values and the partitions x and y values is > 1\n        //delete those from the points array\n    );\n    points.sort(() => 0.5 - Random.rand());\n    return points[0];//return first or last object of x y points in array points\n  };\n}//end of Partition class\n\nlet split_partitions = (\n  partitions: Array<Partition>,\n  prob: number\n): Array<Partition> => {\n  for (let partition of partitions) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter((p) => p !== partition); // remove partition\n      partitions = partitions.concat(partition.split()); // add splits\n    }\n  }\n  return partitions;\n  //takes input partitions array, randomly removes partitions and adds splits, output modified partitions array\n};\n\nlet remove_wall_rooms = (\n  partitions: Array<Partition>,\n  w: number,\n  h: number\n): Array<Partition> => {\n  for (const partition of partitions) {\n    if (\n      partition.x === 0 ||\n      partition.y === 0 ||\n      partition.x + partition.w === w ||\n      partition.y + partition.h === h\n      //delete any partition where the x or y is zero\n    ) {\n      partitions = partitions.filter((p) => p != partition);\n    }\n  }\n  return partitions;\n  //return partitions array with no wall rooms\n};\n\nlet populate_grid = (\n  partitions: Array<Partition>,\n  grid: Array<Array<Partition | false>>,\n  w: number,\n  h: number\n): Array<Array<Partition | false>> => {\n  for (let x = 0; x < w; x++) {//loop through the horizontal tiles\n    grid[x] = []; //empty array at x index\n    for (let y = 0; y < h; y++) {\n      grid[x][y] = false;\n      for (const partition of partitions) {\n        if (partition.point_in(x, y)) grid[x][y] = partition;\n      }\n    }\n  }\n  return grid;\n  //input grid array, partitions array and width and height\n  //output grid array that indicates which cells are in which partition\n};\n\nlet generate_dungeon_candidate = (\n  map_w: number,\n  map_h: number\n): Array<Partition> => {\n  let partitions = [new Partition(0, 0, map_w, map_h)];\n  let grid = [];\n  //add a new partition and define grid as empty array\n\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.75);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 1);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.25);\n  //split partitions 3 times with different probabilities\n  partitions = remove_wall_rooms(partitions, map_w, map_h);\n  grid = populate_grid(partitions, grid, map_w, map_h);\n//remove wall rooms and populate dat grid\n  partitions.sort((a, b) => a.area() - b.area());\n//sort the partitions list by ... area? I think?\n  let spawn = partitions[0];\n  //spawn is the first Partition instance\n  spawn.type = RoomType.START;\n  //set the roomtype for the partition accordingly\n  partitions[partitions.length - 1].type = RoomType.BOSS;\n  //set the largest room as boss room?\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  let found_boss = false;\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && !found_boss) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 2000;\n\n    while (doors_found < num_doors && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          if (p.type === RoomType.BOSS) found_boss = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partitions) {\n    if (partition.connections.length === 0)\n      partitions = partitions.filter((p) => p !== partition);\n  }\n  grid = populate_grid(partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partitions.length === 0) {\n    return []; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partitions.length);\n    let room = partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p)\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // add stair room\n  if (!partitions.some((p) => p.type === RoomType.BOSS)) return [];\n  let boss = partitions.find((p) => p.type === RoomType.BOSS);\n  let found_stair = false;\n  const max_stair_tries = 100;\n  for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\n    let stair = new Partition(\n      Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand),\n      boss.y - 4,\n      3,\n      3\n    );\n    stair.type = RoomType.DOWNLADDER;\n    if (!partitions.some((p) => p.overlaps(stair))) {\n      found_stair = true;\n      partitions.push(stair);\n      stair.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + 3, boss)\n      );\n      boss.connections.push(\n        new PartitionConnection(stair.x + 1, stair.y + 3, stair)\n      );\n      break;\n    }\n  }\n  if (!found_stair) return [];\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  // add special rooms\n  let added_rope_hole = false;\n  for (const p of partitions) {\n    if (p.type === RoomType.DUNGEON) {\n      if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0.1) {\n        p.type = RoomType.TREASURE;\n      } else if (\n        !added_rope_hole &&\n        p.distance > 3 &&\n        p.area() <= 20 &&\n        Random.rand() < 0.5\n      ) {\n        p.type = RoomType.ROPEHOLE;\n        added_rope_hole = true;\n      }\n    }\n  }\n\n  return partitions;\n};\n\nlet generate_dungeon = (map_w: number, map_h: number): Array<Partition> => {\n  let passes_checks = false;\n  let partitions;\n\n  let tries = 0;\n\n  while (!passes_checks) {\n    partitions = generate_dungeon_candidate(map_w, map_h);\n\n    passes_checks = true;\n    if (partitions.length < 6) passes_checks = false;\n    if (!partitions.some((p) => p.type === RoomType.BOSS))\n      passes_checks = false;\n    else if (partitions.find((p) => p.type === RoomType.BOSS).distance < 3)\n      passes_checks = false;\n\n    tries++;\n    if (tries > 100) break;\n  }\n\n  return partitions;\n};\n\nlet generate_cave_candidate = (\n  map_w: number,\n  map_h: number,\n  num_rooms: number\n): Array<Partition> => {\n  let partitions = [new Partition(0, 0, map_w, map_h)];\n  let grid = [];\n\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.75);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 1);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.5);\n  grid = populate_grid(partitions, grid, map_w, map_h);\n\n  partitions.sort((a, b) => a.area() - b.area());\n\n  let spawn = partitions[0];\n  spawn.type = RoomType.ROPECAVE;\n  for (let i = 1; i < partitions.length; i++)\n    partitions[i].type = RoomType.CAVE;\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && connected.length < num_rooms) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 100;\n\n    while (\n      doors_found < num_doors &&\n      tries < max_tries &&\n      connected.length < num_rooms\n    ) {\n      let point = room.get_branch_point();\n      for (const p of partitions) {\n        if (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          p.point_next_to(point.x, point.y)\n        ) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partitions) {\n    if (partition.connections.length === 0)\n      partitions = partitions.filter((p) => p !== partition);\n  }\n  grid = populate_grid(partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partitions.length === 0) {\n    return []; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partitions.length);\n    let room = partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partitions.filter(\n      (p) => !room.connections.some((c) => c.other === p)\n    );\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1) frontier.push(other);\n    }\n  }\n\n  return partitions;\n};\n\nlet generate_cave = (mapWidth: number, mapHeight: number): Array<Partition> => {\n  let partitions: Array<Partition>;\n  const numberOfRooms = 100;\n\n  do {\n    partitions = generate_cave_candidate(mapWidth, mapHeight, numberOfRooms);\n  } while (partitions.length < numberOfRooms);\n\n  return partitions;\n};\n\nexport class LevelGenerator {\n  game: Game;\n  seed: number;\n  depthReached = 0;\n  currentFloorFirstLevelID = 0;\n\n  getLevels = (\n    partitions: Array<Partition>,\n    depth: number,\n    mapGroup: number\n  ): Array<Room> => {\n    let levels: Array<Room> = [];\n\n    for (let i = 0; i < partitions.length; i++) {\n      let level = new Room(\n        this.game,\n        partitions[i].x - 1,\n        partitions[i].y - 1,\n        partitions[i].w + 2,\n        partitions[i].h + 2,\n        partitions[i].type,\n        depth,\n        mapGroup,\n        Random.rand\n      );\n      levels.push(level);\n    }\n\n    let doors_added: Array<Door> = [];\n\n    partitions.forEach((partition, index) => {\n      partition.connections.forEach(connection => {\n        let door = levels[index].addDoor(connection.x, connection.y);\n        let existingDoor = doors_added.find(existing => existing.x === door.x && existing.y === door.y);\n        if (existingDoor) {\n          existingDoor.link(door);\n          door.link(existingDoor);\n        }\n        doors_added.push(door);\n      });\n    });\n\n    for (let level of levels) {\n      level.populate(Random.rand);\n    }\n\n    return levels;\n  };\n\n  setSeed = (seed: number) => {\n    this.seed = seed;\n  };\n\n  generate = (game: Game, depth: number, cave = false): Room => {\n    // Assert that the depth is correct\n    console.assert(\n      cave || this.depthReached === 0 || depth === this.depthReached + 1\n    );\n    this.depthReached = depth;\n\n    // Set the random state based on the seed and depth\n    Random.setState(this.seed + depth);\n\n    this.game = game;\n\n    // Determine the map group\n    let mapGroup = this.game.rooms.length > 0 ? this.game.rooms[this.game.rooms.length - 1].mapGroup + 1 : 0;\n\n    // Generate partitions based on whether it's a cave or a dungeon\n    let partitions = cave ? generate_cave(20, 20) : generate_dungeon(35, 35);\n\n    // Get the levels based on the partitions\n    let levels = this.getLevels(partitions, depth, mapGroup);\n\n    // Update the current floor first level ID if it's not a cave\n    if (!cave) this.currentFloorFirstLevelID = this.game.rooms.length;\n\n    // Add the new levels to the game rooms\n    this.game.rooms = [...this.game.rooms, ...levels];\n\n    // Generate the rope hole if it exists\n    for (let room of levels) {\n      if (room.type === RoomType.ROPEHOLE) {\n        for (let x = room.roomX; x < room.roomX + room.width; x++) {\n          for (let y = room.roomY; y < room.roomY + room.height; y++) {\n            let tile = room.roomArray[x][y];\n            if (tile instanceof DownLadder && tile.isRope) {\n              tile.generate();\n              return cave ? levels.find((l) => l.type === RoomType.ROPECAVE) : levels.find((l) => l.type === RoomType.START);\n            }\n          }\n        }\n      }\n    }\n\n    // Return the start room or the rope cave room\n    return cave ? levels.find((l) => l.type === RoomType.ROPECAVE) : levels.find((l) => l.type === RoomType.START);\n  };\n\n  generateFirstNFloors = (game, numFloors) => {\n    this.generate(game, 0, false);\n    for (let i = 0; i < numFloors; i++) {\n      let foundRoom = this.game.rooms\n        .slice()\n        .reverse()\n        .find((room) => room.type === RoomType.DOWNLADDER);\n\n      if (foundRoom) {\n        for (let x = foundRoom.roomX; x < foundRoom.roomX + foundRoom.width; x++) {\n          for (let y = foundRoom.roomY; y < foundRoom.roomY + foundRoom.height; y++) {\n            let tile = foundRoom.roomArray[x][y];\n            if (tile instanceof DownLadder) {\n              tile.generate();\n              break;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n","export class LightSource {\n  x: number;\n  y: number;\n  r: number;\n\n  constructor(x: number, y: number, r: number) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n  }\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Room, RoomType } from \"./room\";\nimport { Entity, EntityType } from \"./entity/entity\";\nimport { Wall } from \"./tile/wall\";\nimport { Player } from \"./player\";\n\nexport class Map {\n  game: Game;\n  mapData: any[] = [];\n  oldMapData: any[] = [];\n  depth: number;\n  scale: number;\n\n  constructor(game: Game, player: Player) {\n    this.game = game;\n    this.scale = 2\n    //this.depth = player.game.level.depth\n  }\n\n  saveMapData = () => {\n    this.mapData = [];\n    for (const level of this.game.rooms) {\n      if (this.game.room.mapGroup === level.mapGroup && level.entered) {\n        this.mapData.push({\n          room: level,\n          walls: level.walls,\n          doors: level.doors,\n          entities: level.entities,\n          items: level.items,\n          players: this.game.players,\n        });\n      }\n    }\n  };\n\n  saveOldMap = () => {\n    this.oldMapData = [...this.mapData];\n  }\n\n  renderMap = () => {\n    this.setInitialCanvasSettings(1);\n    this.translateCanvas(0);\n    for (const data of this.mapData) {\n      this.drawRoom(data);\n    }\n    for (const data of this.oldMapData) {\n      this.drawRoom(data);\n    }\n    this.resetCanvasTransform();\n  };\n\n  draw = (delta: number) => {\n    this.saveMapData();\n    this.renderMap();\n  };\n\n  setInitialCanvasSettings = (alpha: number) => {\n    Game.ctx.globalAlpha = alpha;\n    Game.ctx.globalCompositeOperation = \"source-over\";\n  };\n\n  translateCanvas = (offset: number) => {\n    Game.ctx.translate(\n      0.75 * GameConstants.WIDTH -\n        this.game.room.roomX -\n        Math.floor(0.5 * this.game.room.width) +\n        20,\n      0.25 * GameConstants.HEIGHT -\n        this.game.room.roomY -\n        Math.floor(0.5 * this.game.room.height) - offset\n    );\n  };\n\n  drawRoom = (data) => {\n    this.drawRoomOutline(data.room);\n    this.drawRoomWalls(data.walls);\n    this.drawRoomDoors(data.doors);\n    this.drawRoomEntities(data.entities);\n    this.drawRoomItems(data.items);\n    this.drawRoomPlayers(data.players);\n  };\n\n  drawRoomOutline = (level) => {\n    const s = this.scale\n    Game.ctx.fillStyle = \"#5A5A5A\";\n    Game.ctx.fillRect(\n      level.roomX * s + 0,\n      level.roomY * s + 0,\n      level.width * s - 0,\n      level.height * s - 0\n    );\n    if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\n    if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\n    Game.ctx.fillStyle = \"black\";\n    Game.ctx.fillRect(\n      level.roomX * s + 1,\n      level.roomY * s + 1,\n      level.width * s - 2,\n      level.height * s - 2\n    );\n  };\n\n  drawRoomWalls = (walls) => {\n    const s = this.scale;\n    for (const wall of walls) {\n      Game.ctx.fillStyle = \"#404040\";\n      Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  drawRoomDoors = (doors) => {\n    const s = this.scale;\n    for (const door of doors) {\n      if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\n      if (door.opened === true)\n        (Game.ctx.fillStyle = \"black\"),\n          Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  drawRoomPlayers = (players) => {\n    const s = this.scale;\n    for (const i in players) {\n      Game.ctx.fillStyle = \"white\";\n      if (\n        this.game.rooms[players[i].levelID].mapGroup ===\n        this.game.room.mapGroup\n      ) {\n        Game.ctx.fillRect(\n          players[i].x * s,\n          players[i].y * s,\n          1 * s,\n          1 * s\n        );\n      }\n    }\n  };\n\n  drawRoomEntities = (entities) => {\n    const s = this.scale;\n    for (const enemy of entities) {\n      this.setEntityColor(enemy);\n      Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\n    }\n  };\n\n  setEntityColor = (enemy) => {\n    if (enemy.entityType === EntityType.ENEMY) {\n      Game.ctx.fillStyle = \"yellow\";\n    }\n    if (enemy.entityType === EntityType.PROP) {\n      Game.ctx.fillStyle = \"#847e87\";\n    }\n    if (enemy.entityType === EntityType.RESOURCE) {\n      Game.ctx.fillStyle = \"#5a595b\";\n    }\n    if (enemy.entityType === EntityType.FRIENDLY) {\n      Game.ctx.fillStyle = \"cyan\";\n    }\n  };\n\n  drawRoomItems = (items) => {\n    const s = this.scale;\n    for (const item of items) {\n      let x = item.x;\n      let y = item.y;\n      Game.ctx.fillStyle = \"#ac3232\";\n      if (!item.pickedUp) {\n        Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\n      }\n    }\n  };\n\n  resetCanvasTransform = () => {\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class DeathParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 1.5;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    let yOffset = Math.max(0, ((this.frame - 3) * 3) / GameConstants.TILESIZE);\n    let f = Math.round(this.frame);\n    if (f == 2 || f == 4 || f == 6) Game.drawMob(2, 0, 1, 2, this.x, this.y - yOffset, 1, 2);\n    else Game.drawFX(Math.round(this.frame), 4, 1, 2, this.x, this.y - yOffset, 1, 2);\n\n    this.frame += 0.3 * delta;\n    if (this.frame > 10) this.dead = true;\n  };\n}\n","import { Room } from \"../room\";\nimport { Particle } from \"./particle\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GenericParticle extends Particle {\n  level: Room;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n\n  static shotgun = (\n    level: Room,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    color: string\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          color,\n          0,\n          10000000,\n          tx + Math.random() - 0.5,\n          ty + Math.random() - 0.5,\n          0\n        )\n      );\n    }\n  };\n\n  static spawnCluster = (level: Room, cx: number, cy: number, color: string) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025,\n          cy + Math.random() * 0.05 - 0.025,\n          Math.random() * 0.5,\n          0.0625 * (i + 8),\n          0.025 * (Math.random() * 2 - 1),\n          0.025 * (Math.random() * 2 - 1),\n          0.2 * (Math.random() - 1),\n          color,\n          0\n        )\n      );\n    }\n  };\n\n  constructor(\n    level: Room,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    color: string,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number\n  ) {\n    super();\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.color = color;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 1000000;\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\n    let halfS = 0.5 * scaledS;\n    let oldFillStyle = Game.ctx.fillStyle;\n    Game.ctx.fillStyle = this.color;\n\n    Game.ctx.beginPath();\n    Game.ctx.arc(\n      Math.round(this.x * scale),\n      Math.round((this.y - this.z) * scale),\n      Math.round(halfS * scale),\n      0,\n      2 * Math.PI,\n      false\n    );\n    Game.ctx.fill();\n\n    Game.ctx.fillStyle = oldFillStyle;\n  };\n\n  draw = (delta: number) => {\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\n    else this.x += this.dx;\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\n    else this.y += this.dy;\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\n    else this.z += this.dz;\n\n    this.dx *= 0.97;\n    this.dy *= 0.97;\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    // apply gravity\n    this.dz -= 0.01;\n\n    if (this.alpha < 0.2) this.alpha -= 0.007;\n    else this.alpha -= 0.02;\n    if (this.alpha <= 0.1) this.dead = true;\n\n    this.expirationTimer--;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Drawable } from \"../drawable\";\n\nexport class Particle extends Drawable {\n  dead: boolean;\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class SlashParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 0.25;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    Game.drawFX(Math.round(this.frame), 13, 1, 1, this.x, this.y, 1, 1);\n\n    this.frame += 0.5 * delta;\n    if (this.frame > 9) this.dead = true;\n  };\n}\n","import { Particle } from \"./particle\";\nimport { Game } from \"../game\";\n\nexport class WizardTeleportParticle extends Particle {\n  x: number;\n  y: number;\n  z: number;\n  dz: number;\n  frame: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.frame = 0;\n    this.z = 0;\n    this.dz = 0.1;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\n    this.z += this.dz;\n    this.dz *= 0.9;\n    this.frame += 0.25 * delta;\n    if (this.frame > 6) this.dead = true;\n  };\n}\n","import { Input, InputEnum } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Game, LevelState } from \"./game\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { Inventory } from \"./inventory\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Map } from \"./map\";\nimport { SlashParticle } from \"./particle/slashParticle\";\nimport { HealthBar } from \"./healthbar\";\nimport { VendingMachine } from \"./entity/vendingMachine\";\nimport { Drawable } from \"./drawable\";\nimport { Random } from \"./random\";\nimport { GenericParticle } from \"./particle/genericParticle\";\nimport { ActionState, ActionTab } from \"./actionTab\";\nimport { HitWarning } from \"./hitWarning\";\nimport { Entity } from \"./entity/entity\";\nimport { ZombieEnemy } from \"./entity/zombieEnemy\";\nimport { Item } from \"./item/item\";\nimport { PostProcessor } from \"./postProcess\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Room } from \"./room\";\n\nexport enum PlayerDirection {\n  DOWN = 0,\n  UP = 1,\n  RIGHT = 2,\n  LEFT = 3,\n}\n\nexport class Player extends Drawable {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  drawX: number;\n  drawY: number;\n  frame: number;\n  direction: PlayerDirection;\n  game: Game;\n  levelID: number; // which room we're in (level[levelID])\n  flashing: boolean;\n  flashingFrame: number;\n  health: number;\n  maxHealth: number;\n  healthBar: HealthBar;\n  dead: boolean;\n  lastTickHealth: number;\n  inventory: Inventory;\n  sightRadius: number;\n  defaultSightRadius: number;\n  guiHeartFrame: number;\n  map: Map;\n  openVendingMachine: VendingMachine;\n  isLocalPlayer: boolean;\n  mapToggled: boolean;\n  actionTab: ActionTab;\n  lastHitBy: string;\n  turnCount: number;\n\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\n    super();\n\n    this.game = game;\n\n    this.levelID = 0;\n\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.drawX = 0;\n    this.drawY = 0;\n\n    this.frame = 0;\n\n    this.direction = PlayerDirection.UP;\n\n    this.isLocalPlayer = isLocalPlayer;\n    if (isLocalPlayer) {\n      Input.leftSwipeListener = () => this.inputHandler(InputEnum.LEFT);\n      Input.rightSwipeListener = () => this.inputHandler(InputEnum.RIGHT);\n      Input.upSwipeListener = () => this.inputHandler(InputEnum.UP);\n      Input.downSwipeListener = () => this.inputHandler(InputEnum.DOWN);\n      Input.tapListener = () => {\n        if (this.inventory.isOpen) {\n          if (this.inventory.pointInside(Input.mouseX, Input.mouseY)) {\n            this.inputHandler(InputEnum.SPACE);\n          } else {\n            this.inputHandler(InputEnum.I);\n          }\n        } else this.inputHandler(InputEnum.I);\n      };\n    }\n    this.mapToggled = true;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.healthBar = new HealthBar();\n    this.dead = false;\n    this.flashing = false;\n    this.flashingFrame = 0;\n    this.lastTickHealth = this.health;\n    this.guiHeartFrame = 0;\n\n    this.inventory = new Inventory(game, this);\n\n    this.defaultSightRadius = 6;\n    this.sightRadius = this.defaultSightRadius;\n\n    this.map = new Map(this.game, this);\n    this.actionTab = new ActionTab(this.inventory, this.game);\n    this.turnCount = 0\n  }\n\n  inputHandler = (input: InputEnum) => {\n    switch (input) {\n      case InputEnum.LEFT:\n      case InputEnum.RIGHT:\n      case InputEnum.UP:\n      case InputEnum.DOWN:\n        if (!this.ignoreDirectionInput()) this.game.sendInput(input);\n        break;\n      case InputEnum.I:\n      case InputEnum.Q:\n      case InputEnum.SPACE:\n        this.game.sendInput(input);\n        break;\n    }\n  };\n\n  tapListener = () => {\n    this.inventory.open();\n  };\n  iListener = () => {\n    this.inventory.open();\n  };\n  qListener = () => {\n    if (this.inventory.isOpen) {\n      this.inventory.drop();\n    }\n  };\n  ignoreDirectionInput = (): boolean => {\n    return (\n      !this.inventory.isOpen &&\n      (this.dead || this.game.levelState !== LevelState.IN_LEVEL)\n    );\n  };\n  leftListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.left();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.left();\n      return true;\n    }\n\n    return false;\n  };\n  rightListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.right();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.right();\n      return true;\n    }\n\n    return false;\n  };\n  upListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.up();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.up();\n      return true;\n    }\n\n    return false;\n  };\n  downListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.down();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.down();\n      return true;\n    }\n\n    return false;\n  };\n  spaceListener = () => {\n    if (this.inventory.isOpen) {\n      this.inventory.space();\n      return;\n    }\n    if (this.openVendingMachine) {\n      this.openVendingMachine.space();\n    }\n  };\n  left = () => {\n    this.tryMove(this.x - 1, this.y);\n    this.direction = PlayerDirection.LEFT;\n  };\n  right = () => {\n    this.tryMove(this.x + 1, this.y);\n    this.direction = PlayerDirection.RIGHT;\n  };\n  up = () => {\n    this.tryMove(this.x, this.y - 1);\n    this.direction = PlayerDirection.UP;\n  };\n  down = () => {\n    this.tryMove(this.x, this.y + 1);\n    this.direction = PlayerDirection.DOWN;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tryCollide = (other: any, newX: number, newY: number) => {\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\n    return true;\n  };\n\n  tryMove = (x: number, y: number) => {\n    let newMove = { x: x, y: y };\n    // TODO don't move if hit by enemy\n    this.game.rooms[this.levelID].catchUp();\n\n    if (this.dead) return;\n\n    for (let i = 0; i < 2; i++)\n      if (\n        this.inventory.hasWeapon() &&\n        !this.inventory.getWeapon().weaponMove(x, y)\n      ) {\n        //for (let h of this.game.levels[this.levelID].hitwarnings) {\n        //if (newMove instanceof HitWarning)\n        return;\n        //}\n      }\n\n    for (let e of this.game.rooms[this.levelID].entities) {\n      if (this.tryCollide(e, x, y)) {\n        if (e.pushable) {\n          // pushing a crate or barrel\n          let dx = x - this.x;\n          let dy = y - this.y;\n          let nextX = x + dx;\n          let nextY = y + dy;\n          let foundEnd = false; // end of the train of whatever we're pushing\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\n          let pushedEnemies = [];\n          while (true) {\n            foundEnd = true;\n            for (const f of this.game.rooms[this.levelID].entities) {\n              if (f.pointIn(nextX, nextY)) {\n                if (!f.chainPushable) {\n                  enemyEnd = true;\n                  foundEnd = true;\n                  break;\n                }\n                foundEnd = false;\n                pushedEnemies.push(f);\n                break;\n              }\n            }\n            if (foundEnd) break;\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\n          }\n          /* if no enemies and there is a wall, no move\n          otherwise, push everything, killing last enemy if there is a wall */\n          // here, (nextX, nextY) is the position immediately after the end of the train\n          if (\n            pushedEnemies.length === 0 &&\n            (this.game.rooms[this.levelID].roomArray[nextX][\n              nextY\n            ].canCrushEnemy() ||\n              enemyEnd)\n          ) {\n            if (e.destroyable) {\n              e.kill();\n              if (this.game.rooms[this.levelID] === this.game.room)\n                Sound.hit();\n              this.drawX = 0.5 * (this.x - e.x);\n              this.drawY = 0.5 * (this.y - e.y);\n              this.game.rooms[this.levelID].particles.push(\n                new SlashParticle(e.x, e.y)\n              );\n              this.game.rooms[this.levelID].tick(this);\n              this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              return;\n            }\n          } else {\n            if (this.game.rooms[this.levelID] === this.game.room)\n              Sound.push();\n            // here pushedEnemies may still be []\n            for (const f of pushedEnemies) {\n              f.x += dx;\n              f.y += dy;\n              f.drawX = dx;\n              f.drawY = dy;\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\n            }\n            if (\n              this.game.rooms[this.levelID].roomArray[nextX][\n                nextY\n              ].canCrushEnemy() ||\n              enemyEnd\n            ) {\n              pushedEnemies[pushedEnemies.length - 1].killNoBones();\n              if (this.game.rooms[this.levelID] === this.game.room)\n                Sound.hit();\n            }\n            e.x += dx;\n            e.y += dy;\n            e.drawX = dx;\n            e.drawY = dy;\n            this.move(x, y);\n            this.game.rooms[this.levelID].tick(this);\n            return;\n          }\n        } else {\n          // if we're trying to hit an enemy, check if it's destroyable\n          if (!e.dead) {\n            if (e.interactable) e.interact(this);\n            this.actionTab.actionState = ActionState.ATTACK;\n            //sets the action tab state to Attack\n            return;\n          }\n        }\n      }\n    }\n    let other = this.game.rooms[this.levelID].roomArray[x][y];\n    if (!other.isSolid()) {\n      this.move(x, y);\n      other.onCollide(this);\n      if (\n        !(\n          other instanceof Door ||\n          other instanceof Trapdoor\n        )\n      )\n        this.game.rooms[this.levelID].tick(this);\n    } else {\n      if (other instanceof Door) {\n        this.drawX = (this.x - x) * 0.5;\n        this.drawY = (this.y - y) * 0.5;\n        if (other.canUnlock(this)) other.unlock(this);\n      }\n    }\n  };\n\n  hurt = (damage: number, enemy: string) => {\n    if (this.game.rooms[this.levelID] === this.game.room) Sound.hurt();\n\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      this.inventory.getArmor().hurt(damage);\n    } else {\n      this.lastHitBy = enemy;\n      console.log(\"Last Hit by: \", enemy);\n      this.healthBar.hurt();\n      this.flashing = true;\n      this.health -= damage;\n      if (this.health <= 0) {\n        this.health = 0;\n        this.dead = true;\n      }\n    }\n  };\n\n  dashMove = (x: number, y: number) => {\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.rooms[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n\n    this.game.rooms[this.levelID].updateLighting();\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  move = (x: number, y: number) => {\n    this.actionTab.setState(ActionState.MOVE);\n    if (this.game.rooms[this.levelID] === this.game.room)\n      Sound.playerStoneFootstep();\n\n    if (this.openVendingMachine) this.openVendingMachine.close();\n\n    this.drawX = x - this.x;\n    this.drawY = y - this.y;\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.rooms[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n\n    this.game.rooms[this.levelID].updateLighting();\n  };\n\n  moveNoSmooth = (x: number, y: number) => {\n    // doesn't touch smoothing\n    this.x = x;\n    this.y = y;\n  };\n\n  moveSnap = (x: number, y: number) => {\n    // no smoothing\n    this.x = x;\n    this.y = y;\n    this.drawX = 0;\n    this.drawY = 0;\n  };\n\n  update = () => {};\n\n  finishTick = () => {\n    this.turnCount +=1;\n    this.inventory.tick();\n\n    this.flashing = false;\n\n    let totalHealthDiff = this.health - this.lastTickHealth;\n    this.lastTickHealth = this.health; // update last tick health\n    if (totalHealthDiff < 0) {\n      this.flashing = true;\n    }\n    this.actionTab.actionState = ActionState.READY;\n    //Sets the action tab state to Wait (during enemy turn)\n  };\n\n  drawPlayerSprite = (delta: number) => {\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    Game.drawMob(\n      1 + Math.floor(this.frame),\n      8 + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - 1.5 - this.drawY,\n      1,\n      2\n    );\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      // TODO draw armor\n    }\n  };\n\n  draw = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\n    if (!this.dead) {\n      Game.drawMob(0, 0, 1, 1, this.x - this.drawX, this.y - this.drawY, 1, 1);\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\n        this.drawPlayerSprite(delta);\n      }\n    }\n  };\n\n  heartbeat = () => {\n    this.guiHeartFrame = 1;\n  };\n\n  tapHoldHandler = () => {\n    this.mapToggled = !this.mapToggled;\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x - this.drawX,\n      this.y - this.drawY,\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0\n    );\n  };\n\n  drawGUI = (delta: number) => {\n    if (!this.dead) {\n      this.inventory.draw(delta);\n      this.actionTab.draw(delta);\n\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\n      if (this.guiHeartFrame > 5) {\n        this.guiHeartFrame = 0;\n      }\n      for (let i = 0; i < this.maxHealth; i++) {\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\n        if (i >= Math.floor(this.health)) {\n          if (i == Math.floor(this.health) && (this.health * 2) % 2 == 1) {\n            // draw half heart\n\n            Game.drawFX(4, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          } else {\n            Game.drawFX(3, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          }\n        } else\n          Game.drawFX(frame, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n      }\n      if (this.inventory.getArmor())\n        this.inventory.getArmor().drawGUI(delta, this.maxHealth);\n    } else {\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n      let gameOverString = \"Game Over\";\n      if (this.lastHitBy !== \"enemy\") {\n        gameOverString = `You were slain by ${this.lastHitBy}.`;\n      }\n\n      Game.fillText(\n        gameOverString,\n        GameConstants.WIDTH / 2 - Game.measureText(gameOverString).width / 2,\n        GameConstants.HEIGHT / 2 - Game.letter_height + 2\n      );\n    }\n    PostProcessor.draw(delta)\n    if (this.mapToggled === true) this.map.draw(delta);\n  };\n\n  updateDrawXY = (delta: number) => {\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\n\nexport class PostProcessor {\n  static draw = (delta: number) => {\n    Game.ctx.globalAlpha = 0.2;\n    Game.ctx.fillStyle = \"#006A6E\"\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n    Game.ctx.globalCompositeOperation = \"screen\";\n  };\n}","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Room } from \"../room\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class EnemySpawnAnimation extends Projectile {\n  readonly ANIM_COUNT = 3;\n\n  room: Room;\n  enemy: Entity;\n  frame: number;\n\n  constructor(room: Room, enemy: Entity, x: number, y: number) {\n    super(x, y);\n    this.room = room;\n    this.enemy = enemy;\n    this.frame = 0;\n  }\n\n  tick = () => {\n    if (this.room === this.room.game.room) Sound.enemySpawn();\n\n    let hitPlayer = false;\n    for (const i in this.room.game.players) {\n      if (this.room.game.players[i].x === this.x && this.room.game.players[i].y === this.y) {\n        this.room.game.players[i].hurt(0.5, \"reaper\");\n        hitPlayer = true;\n      }\n    }\n    if (!hitPlayer) {\n      this.dead = true;\n      this.enemy.skipNextTurns = 1;\n      this.room.entities.push(this.enemy);\n      GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n      GenericParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n    } else {\n      this.room.hitwarnings.push(new HitWarning(this.room.game, this.x, this.y));\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    this.frame += 0.25 * delta;\n    if (this.frame >= 8) this.frame = 0;\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\n      let offsetX = 0;\n      Game.drawFX(\n        Math.floor(this.frame),\n        26,\n        1,\n        2,\n        this.x + Math.round(offsetX) / 16.0,\n        this.y - 1.5,\n        1,\n        2\n      );\n    }\n    if (Math.floor(this.frame * 4) % 2 == 0)\n      this.room.particles.push(\n        new GenericParticle(\n          this.room,\n          this.x + 0.5 + Math.random() * 0.05 - 0.025,\n          this.y + Math.random() * 0.05 - 0.025,\n          0.25,\n          Math.random() * 0.5,\n          0.025 * (Math.random() * 1 - 0.5),\n          0.025 * (Math.random() * 1 - 0.5),\n          0.2 * (Math.random() - 1),\n          \"#ffffff\",\n          0\n        )\n      );\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class PlayerFireball extends Projectile {\n  state: number;\n  frame: number;\n  delay: number;\n\n  constructor(x: number, y: number) {\n    super(x, y);\n    this.state = 0;\n    this.frame = 6;\n  }\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    this.frame += 0.25 * delta;\n\n    if (this.frame > 17) this.dead = true;\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable\";\n\nexport class Projectile extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n\n    this.drawableY = y;\n  }\n\n  hitPlayer = (player: Player) => { };\n  hitEnemy = (enemy: Entity) => { };\n\n  tick = () => { };\n  draw = (delta: number) => { };\n  drawTopLayer = (delta: number) => { };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../entity/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class WizardFireball extends Projectile {\n  state: number;\n  frame: number;\n  parent: WizardEnemy;\n  delay: number;\n\n  constructor(parent: WizardEnemy, x: number, y: number) {\n    super(x, y);\n    this.parent = parent;\n    this.state = 0;\n    this.frame = 0;\n  }\n\n  tick = () => {\n    if (this.parent.dead) this.dead = true;\n    this.state++;\n    if (this.state === 1) {\n      this.parent.room.hitwarnings.push(new HitWarning(this.parent.game, this.x, this.y));\n    }\n    if (this.state === 2) {\n      this.frame = 0;\n      this.delay = Game.rand(0, 10, Math.random);\n    }\n  };\n\n  hitPlayer = (player: Player) => {\n    if (this.state === 2 && !this.dead) {\n      player.hurt(1, \"wizard\");\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    if (this.state === 0) {\n      this.frame += 0.25 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      Game.drawFX(22 + Math.floor(this.frame), 7, 1, 1, this.x, this.y, 1, 1);\n    } else if (this.state === 1) {\n      this.frame += 0.25 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      Game.drawFX(18 + Math.floor(this.frame), 7, 1, 1, this.x, this.y, 1, 1);\n    } else {\n      if (this.delay > 0) {\n        this.delay--;\n        return;\n      }\n      this.frame += 0.3 * delta;\n      if (this.frame > 17) this.dead = true;\n      Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n    }\n  };\n}\n","export class Random {\n  static state: number;\n\n  static setState = (state: number) => {\n    Random.state = state;\n  }\n\n  static rand = () => {\n    Random.state ^= (Random.state << 21);\n    Random.state ^= (Random.state >>> 35);\n    Random.state ^= (Random.state << 4);\n    return (Random.state >>> 0) / 4294967296;\n  }\n}\n\n// copy and paste into browser console\n// let state;\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }","import { Wall } from \"./tile/wall\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Floor } from \"./tile/floor\";\nimport { Game, LevelState } from \"./game\";\nimport { Door, DoorType } from \"./tile/door\";\nimport { Tile, SkinType } from \"./tile/tile\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { KnightEnemy } from \"./entity/knightEnemy\";\nimport { Entity } from \"./entity/entity\";\nimport { Chest } from \"./entity/chest\";\nimport { Item } from \"./item/item\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { SpawnFloor } from \"./tile/spawnfloor\";\n//import { GoldenDoor } from \"./tile/goldenDoor\";\nimport { Spike } from \"./tile/spike\";\nimport { GameConstants } from \"./gameConstants\";\nimport { WizardEnemy } from \"./entity/wizardEnemy\";\nimport { SkullEnemy } from \"./entity/skullEnemy\";\nimport { Barrel } from \"./entity/barrel\";\nimport { Crate } from \"./entity/crate\";\nimport { Input } from \"./input\";\nimport { Armor } from \"./item/armor\";\nimport { Particle } from \"./particle/particle\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { FountainTile } from \"./tile/fountainTile\";\nimport { CoffinTile } from \"./tile/coffinTile\";\nimport { PottedPlant } from \"./entity/pottedPlant\";\nimport { InsideLevelDoor } from \"./tile/insideLevelDoor\";\nimport { Button } from \"./tile/button\";\nimport { HitWarning } from \"./hitWarning\";\nimport { UpLadder } from \"./tile/upLadder\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { CoalResource } from \"./entity/coalResource\";\nimport { GoldResource } from \"./entity/goldResource\";\nimport { EmeraldResource } from \"./entity/emeraldResource\";\nimport { Chasm } from \"./tile/chasm\";\nimport { Spawner } from \"./entity/spawner\";\nimport { VendingMachine } from \"./entity/vendingMachine\";\nimport { WallTorch } from \"./tile/wallTorch\";\nimport { LightSource } from \"./lightSource\";\nimport { ChargeEnemy } from \"./entity/chargeEnemy\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Heart } from \"./item/heart\";\nimport { Spear } from \"./weapon/spear\";\nimport { Drawable } from \"./drawable\";\nimport { Player } from \"./player\";\nimport { SlimeEnemy } from \"./entity/slimeEnemy\";\nimport { ZombieEnemy } from \"./entity/zombieEnemy\";\nimport { BigSkullEnemy } from \"./entity/bigSkullEnemy\";\nimport { Random } from \"./random\";\nimport { Lantern } from \"./item/lantern\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Pot } from \"./entity/pot\";\nimport { BishopEnemy } from \"./entity/bishopEnemy\";\nimport { Rook } from \"./entity/rook\";\nimport { Rock } from \"./entity/rockResource\";\nimport { Mushrooms } from \"./entity/mushrooms\";\nimport { TurningEnemy } from \"./entity/turningEnemy\";\nimport { ArmoredzombieEnemy } from \"./entity/armoredzombieEnemy\";\nimport { Backpack } from \"./item/backpack\";\nimport { DoorDir } from \"./tile/door\";\nimport { ActionState, ActionTab } from \"./actionTab\";\nimport { TombStone } from \"./entity/tombStone\";\nimport { Pumpkin } from \"./entity/pumpkin\";\nimport { QueenEnemy } from \"./entity/queenEnemy\";\nimport { FrogEnemy } from \"./entity/frogEnemy\";\n\nexport enum RoomType {\n  START,\n  DUNGEON,\n  BOSS,\n  BIGDUNGEON,\n  TREASURE,\n  FOUNTAIN,\n  COFFIN,\n  GRASS,\n  PUZZLE,\n  KEYROOM,\n  CHESSBOARD,\n  MAZE,\n  CORRIDOR,\n  SPIKECORRIDOR,\n  UPLADDER,\n  DOWNLADDER,\n  SHOP,\n  BIGCAVE,\n  CAVE,\n  SPAWNER,\n  ROPEHOLE,\n  ROPECAVE,\n}\n\nexport enum TurnState {\n  playerTurn,\n  computerTurn,\n}\n\nexport class Room {\n  x: number;\n  y: number;\n  roomArray: Tile[][];\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\n  entities: Array<Entity>;\n  items: Array<Item>;\n  doors: Array<any>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\n  projectiles: Array<Projectile>;\n  particles: Array<Particle>;\n  hitwarnings: Array<HitWarning>;\n  game: Game;\n  roomX: number;\n  roomY: number;\n  width: number;\n  height: number;\n  type: RoomType;\n  depth: number;\n  mapGroup: number;\n  name: string;\n  message: string;\n  turn: TurnState;\n  playerTurnTime: number;\n  playerTicked: Player;\n  skin: SkinType;\n  entered: boolean; // has the player entered this level\n  lightSources: Array<LightSource>;\n  shadeColor = \"black\";\n  walls: Array<Wall>;\n  actionTab: ActionTab;\n\n  private pointInside(\n    x: number,\n    y: number,\n    rX: number,\n    rY: number,\n    rW: number,\n    rH: number\n  ): boolean {\n    if (x < rX || x >= rX + rW) return false;\n    if (y < rY || y >= rY + rH) return false;\n    return true;\n  }\n\n  tileInside = (tileX: number, tileY: number): boolean => {\n    return this.pointInside(\n      tileX,\n      tileY,\n      this.roomX,\n      this.roomY,\n      this.width,\n      this.height\n    );\n  };\n\n  private buildEmptyRoom() {\n    // fill in wall and floor\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (\n          this.pointInside(\n            x,\n            y,\n            this.roomX + 1,\n            this.roomY + 1,\n            this.width - 2,\n            this.height - 2\n          )\n        ) {\n          this.roomArray[x][y] = new Floor(this, x, y);\n        } else {\n          this.roomArray[x][y] = new Wall(this, x, y);\n          this.walls.push;\n        }\n      }\n    }\n  }\n\n  private addWallBlocks(rand: () => number) {\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\n    if (this.width > 8 && rand() > 0.5) numBlocks *= 4;\n    for (let i = 0; i < numBlocks; i++) {\n      let blockW = Math.min(\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\n        this.width - 4\n      );\n      let blockH = Math.min(blockW + Game.rand(-2, 2, rand), this.height - 4);\n\n      let x = Game.rand(\n        this.roomX + 2,\n        this.roomX + this.width - blockW - 2,\n        rand\n      );\n      let y = Game.rand(\n        this.roomY + 2,\n        this.roomY + this.height - blockH - 2,\n        rand\n      );\n\n      for (let xx = x; xx < x + blockW; xx++) {\n        for (let yy = y; yy < y + blockH; yy++) {\n          let w = new Wall(this, xx, yy);\n          this.roomArray[xx][yy] = w;\n          this.walls.push(w);\n        }\n      }\n    }\n  }\n\n  private addFingers(rand: () => number) {}\n\n  private addTorches(numTorches: number, rand: () => number) {\n    let walls = [];\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\n        if (\n          this.roomArray[xx][yy] instanceof Wall &&\n          !(this.roomArray[xx][yy + 1] instanceof Wall)\n        ) {\n          walls.push(this.roomArray[xx][yy]);\n        }\n      }\n    }\n    for (let i = 0; i < numTorches; i++) {\n      let t, x, y;\n      if (walls.length == 0) return;\n      t = walls.splice(Game.rand(0, walls.length - 1, rand), 1)[0];\n      x = t.x;\n      y = t.y;\n      this.roomArray[x][y] = new WallTorch(this, x, y);\n    }\n  }\n\n  private addChasms(rand: () => number) {\n    // add chasms\n    let w = Game.rand(2, 4, rand);\n    let h = Game.rand(2, 4, rand);\n    let xmin = this.roomX + 2;\n    let xmax = this.roomX + this.width - w - 2;\n    let ymin = this.roomY + 2;\n    let ymax = this.roomY + this.height - h - 2;\n    if (xmax < xmin || ymax < ymin) return;\n    let x = Game.rand(xmin, xmax, rand);\n    let y = Game.rand(ymin, ymax, rand);\n\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\n        // add a floor border\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\n          if (!(this.roomArray[xx][yy] instanceof SpawnFloor))\n            this.roomArray[xx][yy] = new Floor(this, xx, yy);\n        } else\n          this.roomArray[xx][yy] = new Chasm(\n            this,\n            xx,\n            yy,\n            xx === x,\n            xx === x + w - 1,\n            yy === y,\n            yy === y + h - 1\n          );\n      }\n    }\n  }\n\n  private addChests(numChests: number, rand: () => number) {\n    // add chests\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numChests; i++) {\n      let t, x, y;\n      if (tiles.length == 0) return;\n      t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      x = t.x;\n      y = t.y;\n      this.entities.push(new Chest(this, this.game, x, y, rand));\n    }\n  }\n\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      this.roomArray[x][y] = new SpikeTrap(this, x, y);\n    }\n  }\n\n  private addSpikes(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      this.roomArray[x][y] = new Spike(this, x, y);\n    }\n  }\n\n  // Function to add enemies to the room\n  private addEnemies(numEnemies: number, rand: () => number) {\n    // Get all empty tiles in the room\n    let tiles = this.getEmptyTiles();\n    // Loop through the number of enemies to be added\n    for (let i = 0; i < numEnemies; i++) {\n      // Randomly select a tile and remove it from the list\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      // If there are no more tiles, return\n      if (tiles.length == 0) return;\n      // Get the x and y coordinates of the selected tile\n      let x = t.x;\n      let y = t.y;\n      // Define the enemy tables for each depth level\n      let tables = {\n        0: [12],\n        1: [1, 1, 3, 3, 3, 2, 2],\n        2: [1, 1, 2, 2, 3, 3, 4],\n        3: [1, 1, 1, 2, 3, 3, 3, 4, 4, 5],\n        4: [1, 2, 3, 4, 5, 6, 7],\n        5: [1, 2, 3, 4, 5, 6, 7, 8],\n        6: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        7: [1, 2, 3, 4, 5, 6, 7],\n      };\n      // Define the maximum depth level\n      let max_depth_table = 7;\n      // Get the current depth level, capped at the maximum\n      let d = Math.min(this.depth, max_depth_table);\n      // If there is a table for the current depth level\n      if (tables[d] && tables[d].length > 0) {\n        // Function to add an enemy to the room\n        let addEnemy = (enemy: Entity): boolean => {\n          // Check if the enemy overlaps with any other enemies\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              if (\n                !this.getEmptyTiles().some(\n                  (tt) => tt.x === x + xx && tt.y === y + yy\n                )\n              ) {\n                // If it does, increment the enemy count and return false\n                numEnemies++;\n                return false;\n              }\n            }\n          }\n          // If it doesn't, add the enemy to the room and return true\n          this.entities.push(enemy);\n          return true;\n        };\n\n        // Randomly select an enemy type from the table\n        let type = Game.randTable(tables[d], rand);\n        // Add the selected enemy type to the room\n        switch (type) {\n          case 1:\n            addEnemy(new SlimeEnemy(this, this.game, x, y, rand));\n            break;\n          case 2:\n            addEnemy(new KnightEnemy(this, this.game, x, y, rand));\n            break;\n          case 3:\n            addEnemy(new ZombieEnemy(this, this.game, x, y, rand));\n            break;\n          case 4:\n            addEnemy(new SkullEnemy(this, this.game, x, y, rand));\n            break;\n          case 5:\n            addEnemy(new WizardEnemy(this, this.game, x, y, rand));\n            break;\n          case 6:\n            addEnemy(new ChargeEnemy(this, this.game, x, y));\n            break;\n          case 7:\n            addEnemy(new Spawner(this, this.game, x, y, rand));\n            break;\n          case 8:\n            addEnemy(new BishopEnemy(this, this.game, x, y, rand));\n            break;\n          case 9:\n            addEnemy(new ArmoredzombieEnemy(this, this.game, x, y, rand));\n            break;\n          case 10:\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y, rand))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.roomArray[x + xx][y + yy] = new Floor(\n                    this,\n                    x + xx,\n                    y + yy\n                  ); // remove any walls\n                }\n              }\n            }\n            break;\n            case 11:\n              addEnemy(new QueenEnemy(this, this.game, x, y, rand));\n            break;\n            case 12:\n              addEnemy(new FrogEnemy(this, this.game, x, y, rand));\n            break;\n        }\n      }\n    }\n  }\n\n  private addObstacles(numObstacles: number, rand: () => number) {\n    // add crates/barrels\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numObstacles; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n      switch (Game.randTable([1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4], rand)) {\n        case 1:\n          this.entities.push(new Crate(this, this.game, x, y));\n          break;\n        case 2:\n          this.entities.push(new Barrel(this, this.game, x, y));\n          break;\n        case 3:\n          this.entities.push(new TombStone(this, this.game, x, y, 1, rand));\n          break;\n        case 4:\n          this.entities.push(new TombStone(this, this.game, x, y, 0, rand));\n          break;\n        //case 5:\n        //this.enemies.push(new TombStone(this, this.game, x, y));\n        //break;\n      }\n    }\n  }\n\n  private addPlants(numPlants: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numPlants; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      let r = rand();\n      if (r <= 0.45)\n        this.entities.push(new PottedPlant(this, this.game, x, y, Random.rand));\n      else if (r <= 0.65) this.entities.push(new Pot(this, this.game, x, y));\n      else if (r <= 0.75) this.entities.push(new Rock(this, this.game, x, y));\n      else if (r <= 0.97)\n        this.entities.push(new Mushrooms(this, this.game, x, y));\n      else this.entities.push(new Chest(this, this.game, x, y, rand));\n    }\n  }\n\n  private addResources(numResources: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numResources; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      let r = rand();\n      if (r <= (10 - this.depth ** 3) / 10)\n        this.entities.push(new CoalResource(this, this.game, x, y));\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\n        this.entities.push(new GoldResource(this, this.game, x, y));\n      else this.entities.push(new EmeraldResource(this, this.game, x, y));\n    }\n  }\n\n  private addVendingMachine(rand: () => number) {\n    let t = this.getEmptyTiles().sort(() => 0.5 - Random.rand())[0];\n    let x = t.x;\n    let y = t.y;\n    let type = Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6], rand);\n    switch (type) {\n      case 1:\n        this.entities.push(\n          new VendingMachine(this, this.game, x, y, new Heart(this, 0, 0), rand)\n        );\n        break;\n      case 2:\n        this.entities.push(\n          new VendingMachine(\n            this,\n            this.game,\n            x,\n            y,\n            new Lantern(this, 0, 0),\n            rand\n          )\n        );\n        break;\n      case 3:\n        this.entities.push(\n          new VendingMachine(this, this.game, x, y, new Armor(this, 0, 0), rand)\n        );\n        break;\n      case 4:\n        this.entities.push(\n          new VendingMachine(\n            this,\n            this.game,\n            x,\n            y,\n            new DualDagger(this, 0, 0),\n            rand\n          )\n        );\n        break;\n      case 5:\n        this.entities.push(\n          new VendingMachine(this, this.game, x, y, new Spear(this, 0, 0), rand)\n        );\n        break;\n      case 6:\n        this.entities.push(\n          new VendingMachine(\n            this,\n            this.game,\n            x,\n            y,\n            new Shotgun(this, 0, 0),\n            rand\n          )\n        );\n        break;\n    }\n  }\n\n  populateEmpty = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n  };\n\n  populateDungeon = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    if (factor < 30) this.addWallBlocks(rand);\n    if (factor < 26) this.addFingers(rand);\n    if (factor % 4 === 0) this.addChasms(rand);\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.35 * rand());\n    let numPlants = Math.ceil(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) *\n        Math.min(this.depth * 0.1 + 0.1, 0.35) //this.depth * 0.01 is starting value\n    );\n    this.addEnemies(numEnemies, rand);\n\n    if (factor <= 6) this.addVendingMachine(rand);\n  };\n  populateBoss = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.2);\n    let numPlants = Math.floor(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) *\n        Math.min(this.depth * 0.05 + 0.2, 0.5)\n    );\n    this.addEnemies(numEnemies, rand);\n  };\n  populateBigDungeon = (rand: () => number) => {\n    if (Game.rand(1, 4, rand) === 1) this.addChasms(rand);\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    if (Game.rand(1, 4, rand) === 1)\n      this.addPlants(\n        Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n        rand\n      );\n    if (Game.rand(1, 3, rand) === 1)\n      this.addSpikeTraps(Game.randTable([3, 5, 7, 8], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles *\n        (this.depth * 0.5 + 0.5) *\n        Game.randTable([0.05, 0.05, 0.06, 0.07, 0.1], rand)\n    );\n    this.addEnemies(numEnemies, rand);\n    if (numEnemies > 0)\n      this.addObstacles(numEnemies / Game.rand(1, 2, rand), rand);\n    else this.addObstacles(Game.randTable([0, 0, 1, 1, 2, 3, 5], rand), rand);\n  };\n  populateSpawner = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.entities.push(\n      new Spawner(\n        this,\n        this.game,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2),\n        rand\n      )\n    );\n  };\n  populateKeyRoom = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.items.push(\n      new GoldenKey(\n        this,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2)\n      )\n    );\n  };\n  populateFountain = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    let centerX = Math.floor(this.roomX + this.width / 2);\n    let centerY = Math.floor(this.roomY + this.height / 2);\n    for (let x = centerX - 1; x <= centerX + 1; x++) {\n      for (let y = centerY - 1; y <= centerY + 1; y++) {\n        this.roomArray[x][y] = new FountainTile(\n          this,\n          x,\n          y,\n          x - (centerX - 1),\n          y - (centerY - 1)\n        );\n      }\n    }\n\n    this.addPlants(Game.randTable([0, 0, 1, 2], rand), rand);\n  };\n  placeCoffin = (x: number, y: number) => {\n    this.roomArray[x][y] = new CoffinTile(this, x, y, 0);\n    this.roomArray[x][y + 1] = new CoffinTile(this, x, y + 1, 1);\n  };\n  populateCoffin = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2 - 2),\n      Math.floor(this.roomY + this.height / 2)\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2)\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2) + 2,\n      Math.floor(this.roomY + this.height / 2)\n    );\n  };\n  populatePuzzle = (rand: () => number) => {\n    let d;\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      let y = this.roomY + Math.floor(this.height / 2);\n      if (x === this.roomX + Math.floor(this.width / 2)) {\n        d = new InsideLevelDoor(this, this.game, x, y + 1);\n        this.roomArray[x][y + 1] = d;\n      } else {\n        this.roomArray[x][y] = new Wall(this, x, y);\n      }\n    }\n\n    let x = Game.rand(this.roomX, this.roomX + this.width - 1, rand);\n    let y = Game.rand(\n      this.roomY + Math.floor(this.height / 2) + 3,\n      this.roomY + this.height - 2,\n      rand\n    );\n\n    this.roomArray[x][y] = new Button(this, x, y, d);\n\n    let crateTiles = this.getEmptyTiles().filter(\n      (t) =>\n        t.x >= this.roomX + 1 &&\n        t.x <= this.roomX + this.width - 2 &&\n        t.y >= this.roomY + Math.floor(this.height / 2) + 3 &&\n        t.y <= this.roomY + this.height - 2\n    );\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\n\n    for (let i = 0; i < numCrates; i++) {\n      let t = crateTiles.splice(\n        Game.rand(0, crateTiles.length - 1, rand),\n        1\n      )[0];\n\n      this.entities.push(new Crate(this, this.game, t.x, t.y));\n    }\n    this.addPlants(\n      Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand),\n      rand\n    );\n  };\n  populateSpikeCorridor = (rand: () => number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        this.roomArray[x][y] = new SpikeTrap(\n          this,\n          x,\n          y,\n          Game.rand(0, 3, rand)\n        );\n      }\n    }\n\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n  };\n  populateTreasure = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.addChests(Game.randTable([4, 4, 5, 5, 5, 6, 8], rand), rand);\n    this.addPlants(Game.randTable([0, 1, 2, 4, 5, 6], rand), rand);\n  };\n  populateChessboard = (rand: () => number) => {};\n  populateCave = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    this.addWallBlocks(rand);\n\n    if (factor > 15)\n      this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand)\n    );\n    this.addEnemies(numEnemies, rand);\n    this.addResources(\n      (numEmptyTiles - numEnemies) * Game.randTable([0.5, 0.6, 0.7, 0.8], rand),\n      rand\n    );\n  };\n  populateUpLadder = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n  };\n  populateDownLadder = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    this.roomArray[cX][cY] = new DownLadder(this, this.game, cX, cY);\n  };\n  populateRopeHole = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    let d = new DownLadder(this, this.game, cX, cY);\n    d.isRope = true;\n    this.roomArray[cX][cY] = d;\n  };\n  populateRopeCave = (rand: () => number) => {\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    let upLadder = new UpLadder(this, this.game, cX, cY);\n    upLadder.isRope = true;\n    this.roomArray[cX][cY] = upLadder;\n  };\n  populateShop = (rand: () => number) => {\n    this.addTorches(2, rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    this.entities.push(\n      new VendingMachine(\n        this,\n        this.game,\n        cX - 2,\n        cY - 1,\n        new Shotgun(this, 0, 0),\n        rand\n      )\n    );\n    this.entities.push(\n      new VendingMachine(\n        this,\n        this.game,\n        cX + 2,\n        cY - 1,\n        new Heart(this, 0, 0),\n        rand\n      )\n    );\n    this.entities.push(\n      new VendingMachine(\n        this,\n        this.game,\n        cX - 2,\n        cY + 2,\n        new Armor(this, 0, 0),\n        rand\n      )\n    );\n    this.entities.push(\n      new VendingMachine(\n        this,\n        this.game,\n        cX + 2,\n        cY + 2,\n        new Spear(this, 0, 0),\n        rand\n      )\n    );\n  };\n\n  populate = (rand: () => number) => {\n    this.name = \"\";\n    switch (this.type) {\n      case RoomType.START:\n        this.populateEmpty(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.BOSS:\n        this.populateBoss(rand);\n        this.name = \"BOSS\";\n        break;\n      case RoomType.DUNGEON:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGDUNGEON:\n        this.populateBigDungeon(rand);\n        break;\n      case RoomType.FOUNTAIN:\n        this.populateFountain(rand);\n        break;\n      case RoomType.COFFIN:\n        this.populateCoffin(rand);\n        break;\n      case RoomType.PUZZLE:\n        this.populatePuzzle(rand);\n        break;\n      case RoomType.SPIKECORRIDOR:\n        this.populateSpikeCorridor(rand);\n        break;\n      case RoomType.TREASURE:\n        this.populateTreasure(rand);\n        break;\n      case RoomType.CHESSBOARD: // TODO\n        this.populateChessboard(rand);\n        break;\n      case RoomType.KEYROOM:\n        this.populateKeyRoom(rand);\n        break;\n      case RoomType.GRASS:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGCAVE:\n        this.populateCave(rand);\n      case RoomType.CAVE:\n        this.populateCave(rand);\n        break;\n      case RoomType.UPLADDER:\n        this.populateUpLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.DOWNLADDER:\n        this.populateDownLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.ROPEHOLE:\n        this.populateRopeHole(rand);\n        break;\n      case RoomType.ROPECAVE:\n        this.populateRopeCave(rand);\n        break;\n      case RoomType.SHOP:\n        /* shop rates:\n         * 10 coal for an gold coin\n         * 1 gold for 10 coins\n         * 1 emerald for 100 coins\n         *\n         * shop items:\n         * 1 empty heart   4 ^ (maxHealth + maxHealth ^ 1.05 ^ maxHealth - 2.05) coins\n         * fill all hearts  1 coin\n         * better torch    5 ^ (torchLevel + 1.05 ^ torchLevel - 2.05) coins\n         * weapons\n         */\n\n        this.populateShop(rand);\n        break;\n      case RoomType.SPAWNER:\n        this.populateSpawner(rand);\n        break;\n    }\n    this.message = this.name;\n  };\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    type: RoomType,\n    depth: number,\n    mapGroup: number,\n    rand = Random.rand\n  ) {\n    this.game = game;\n    this.roomX = x; //Math.floor(- this.width / 2);\n    this.roomY = y; //Math.floor(- this.height / 2);\n    this.width = w;\n    this.height = h;\n    this.type = type;\n    this.depth = depth;\n    this.mapGroup = mapGroup;\n\n    this.entered = false;\n    this.turn = TurnState.playerTurn;\n    this.playerTurnTime = Date.now();\n\n    this.items = Array<Item>();\n    this.projectiles = Array<Projectile>();\n    this.hitwarnings = Array<HitWarning>();\n    this.particles = Array<Particle>();\n    this.doors = Array<Door>();\n    this.entities = Array<Entity>();\n    this.lightSources = Array<LightSource>();\n    this.walls = Array<Wall>();\n\n    this.roomArray = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.roomArray[x] = [];\n    }\n    this.vis = [];\n    this.softVis = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.vis[x] = [];\n      this.softVis[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = 1;\n        this.softVis[x][y] = 1;\n      }\n    }\n\n    this.skin = SkinType.DUNGEON;\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE)\n      this.skin = SkinType.CAVE;\n    this.buildEmptyRoom();\n  }\n\n  addDoor = (x: number, y: number) => {\n    let d;\n    let t = DoorType.DOOR;\n    if (this.type === RoomType.BOSS) t = DoorType.GUARDEDDOOR;\n    if (this.type === RoomType.KEYROOM) t = DoorType.LOCKEDDOOR;\n    if (x === this.roomX) {\n      d = new Door(this, this.game, x, y, 1, t);\n      this.roomArray[x + 1][y] = new SpawnFloor(this, x + 1, y);\n    } else if (x === this.roomX + this.width - 1) {\n      d = new Door(this, this.game, x, y, 3, t);\n      this.roomArray[x - 1][y] = new SpawnFloor(this, x - 1, y);\n    } else if (y === this.roomY) {\n      d = new Door(this, this.game, x, y, 0, t);\n      this.roomArray[x][y + 1] = new SpawnFloor(this, x, y + 1);\n    } else if (y === this.roomY + this.height - 1) {\n      d = new Door(this, this.game, x, y, 2, t);\n      this.roomArray[x][y - 1] = new SpawnFloor(this, x, y - 1);\n    }\n\n    this.doors.push(d);\n    if (this.roomArray[d.x] == undefined) {\n      console.log(\n        \"UNDEFINED at \" +\n          d.x +\n          \" levelArray.length was \" +\n          this.roomArray.length\n      );\n      console.log(\"location \" + location);\n      console.log(this.roomX, this.roomY);\n      console.log(this.width, this.height);\n    }\n    this.roomArray[d.x][d.y] = d;\n\n    return d;\n  };\n\n  exitLevel = () => {\n    this.particles.splice(0, this.particles.length);\n  };\n\n  enterLevel = (player: Player) => {\n    player.moveSnap(\n      this.roomX + Math.floor(this.width / 2),\n      this.roomY + Math.floor(this.height / 2)\n    );\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  enterLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    if (door instanceof Door && door.doorDir === DoorDir.North) {\n      //if top door\n      (door as Door).opened = true;\n      player.moveNoSmooth(door.x, door.y + 1);\n    } else if (door instanceof Door && door.doorDir === DoorDir.South) {\n      //if bottom door\n      player.moveNoSmooth(door.x, door.y - 1);\n    } else if (\n      door instanceof Door &&\n      [DoorDir.East, DoorDir.West].includes(door.doorDir)\n    ) {\n      // if side door\n      player.moveNoSmooth(door.x + side, door.y);\n    }\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  enterLevelThroughLadder = (player: Player, ladder: any) => {\n    player.moveSnap(ladder.x, ladder.y + 1);\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  getEmptyTiles = (): Tile[] => {\n    let returnVal: Tile[] = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (\n          !this.roomArray[x][y].isSolid() &&\n          !(this.roomArray[x][y] instanceof SpikeTrap) &&\n          !(this.roomArray[x][y] instanceof SpawnFloor)\n        ) {\n          returnVal.push(this.roomArray[x][y]);\n        }\n      }\n    }\n    for (const e of this.entities) {\n      returnVal = returnVal.filter((t) => !e.pointIn(t.x, t.y));\n    }\n    return returnVal;\n  };\n\n  getTile = (x: number, y: number) => {\n    if (this.roomArray[x]) return this.roomArray[x][y];\n    else return undefined;\n  };\n\n  fadeLighting = () => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (Math.abs(this.softVis[x][y] - this.vis[x][y]) >= 0.02) {\n          if (this.softVis[x][y] < this.vis[x][y]) this.softVis[x][y] += 0.02;\n          else if (this.softVis[x][y] > this.vis[x][y])\n            this.softVis[x][y] -= 0.02;\n        }\n        //if (this.softVis[x][y] < 0.05) this.softVis[x][y] = 0;\n      }\n    }\n  };\n\n  updateLighting = () => {\n    let oldVis = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      oldVis[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        oldVis[x][y] = this.vis[x][y];\n        this.vis[x][y] = 1;\n        //if (this.visibilityArray[x][y] > LevelConstants.MIN_VISIBILITY)\n        //  this.visibilityArray[x][y] = 0;\n      }\n    }\n    for (const p in this.game.players) {\n      if (this === this.game.rooms[this.game.players[p].levelID]) {\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          this.castShadowsAtAngle(\n            i,\n            this.game.players[p].x + 0.5,\n            this.game.players[p].y + 0.5,\n            this.game.players[p].sightRadius - this.depth\n          );\n        }\n      }\n    }\n    for (const l of this.lightSources) {\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n        this.castShadowsAtAngle(i, l.x, l.y, l.r);\n      }\n    }\n    if (LevelConstants.SMOOTH_LIGHTING)\n      this.vis = this.blur3x3(this.vis, [\n        [1, 2, 1],\n        [2, 8, 2],\n        [1, 2, 1],\n      ]);\n\n    /*for (let x = 0; x < this.visibilityArray.length; x++) {\n      for (let y = 0; y < this.visibilityArray[0].length; y++) {\n        if (this.visibilityArray[x][y] < oldVisibilityArray[x][y]) {\n          this.visibilityArray[x][y] = Math.min(\n            oldVisibilityArray[x][y],\n            LevelConstants.MIN_VISIBILITY\n          );\n        }\n      }\n    }*/\n\n  };\n\n  castShadowsAtAngle = (\n    angle: number,\n    px: number,\n    py: number,\n    radius: number\n  ) => {\n    let dx = Math.cos((angle * Math.PI) / 180);\n    let dy = Math.sin((angle * Math.PI) / 180);\n    let onOpaqueSection = false;\n    for (let i = 0; i < radius; i++) {\n      if (\n        Math.floor(px) < this.roomX ||\n        Math.floor(px) >= this.roomX + this.width ||\n        Math.floor(py) < this.roomY ||\n        Math.floor(py) >= this.roomY + this.height\n      )\n        return; // we're outside the level\n\n      let tile = this.roomArray[Math.floor(px)][Math.floor(py)];\n      if (tile.isOpaque()) {\n        if (i > 0) onOpaqueSection = true;\n      } else if (onOpaqueSection) {\n        return;\n      }\n\n      this.vis[Math.floor(px)][Math.floor(py)] = Math.min(\n        this.vis[Math.floor(px)][Math.floor(py)],\n        Math.min(i / radius, 1)\n      );\n\n      px += dx;\n      py += dy;\n    }\n  };\n\n  blur3x3 = (\n    array: Array<Array<number>>,\n    weights: Array<Array<number>>\n  ): Array<Array<number>> => {\n    let blurredArray = [];\n    for (let x = 0; x < array.length; x++) {\n      blurredArray[x] = [];\n      for (let y = 0; y < array[0].length; y++) {\n        if (array[x][y] === 0) {\n          blurredArray[x][y] = 0;\n          continue;\n        }\n        let total = 0;\n        let totalWeights = 0;\n        for (let xx = -1; xx <= 1; xx++) {\n          for (let yy = -1; yy <= 1; yy++) {\n            if (\n              x + xx >= 0 &&\n              x + xx < array.length &&\n              y + yy >= 0 &&\n              y + yy < array[0].length\n            ) {\n              total += array[x + xx][y + yy] * weights[xx + 1][yy + 1];\n              totalWeights += weights[xx + 1][yy + 1];\n            }\n          }\n        }\n        blurredArray[x][y] = total / totalWeights;\n      }\n    }\n    return blurredArray;\n  };\n\n  catchUp = () => {\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\n  };\n\n  tick = (player: Player) => {\n    this.entities = this.entities.filter((e) => !e.dead);\n    this.updateLighting();\n    \n\n    for (const h of this.hitwarnings) {\n      h.tick();\n    }\n\n    for (const p of this.projectiles) {\n      p.tick();\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tick();\n      }\n    }\n\n    this.turn = TurnState.computerTurn;\n    player.actionTab.setState(ActionState.WAIT);\n    //sets the action tab state to Ready\n    this.playerTurnTime = Date.now();\n    this.playerTicked = player;\n  };\n\n  update = () => {\n    if (this.turn == TurnState.computerTurn) {\n      if (\n        Date.now() - this.playerTurnTime >=\n        LevelConstants.COMPUTER_TURN_DELAY\n      ) {\n        this.computerTurn();\n      }\n    }\n  };\n\n  clearDeadStuff = () => {\n    this.entities = this.entities.filter((e) => !e.dead);\n    this.projectiles = this.projectiles.filter((p) => !p.dead);\n    this.hitwarnings = this.hitwarnings.filter((h) => !h.dead);\n    this.particles = this.particles.filter((p) => !p.dead);\n  };\n\n  computerTurn = () => {\n    // take computer turn\n    for (const e of this.entities) {\n      e.tick();\n    }\n    this.entities = this.entities.filter((e) => !e.dead);\n    for (const i of this.items) {\n      i.tick();\n    }\n\n    for (const h of this.hitwarnings) {\n      if (\n        !this.roomArray[h.x] ||\n        !this.roomArray[h.x][h.y] ||\n        this.roomArray[h.x][h.y].isSolid()\n      )\n        h.dead = true;\n    }\n\n    for (const p of this.projectiles) {\n      if (this.roomArray[p.x][p.y].isSolid()) p.dead = true;\n      for (const i in this.game.players) {\n        if (\n          this.game.rooms[this.game.players[i].levelID] === this &&\n          p.x === this.game.players[i].x &&\n          p.y === this.game.players[i].y\n        ) {\n          p.hitPlayer(this.game.players[i]);\n        }\n      }\n      for (const e of this.entities) {\n        if (p.x === e.x && p.y === e.y) {\n          p.hitEnemy(e);\n        }\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].tickEnd();\n      }\n    }\n    this.entities = this.entities.filter((e) => !e.dead); // enemies may be killed by spiketrap\n\n    this.clearDeadStuff();\n\n    this.playerTicked.finishTick();\n    this.turn = TurnState.playerTurn;\n  };\n\n  draw = (delta: number) => {\n    HitWarning.updateFrame(delta);\n\n    this.fadeLighting();\n  };\n\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\n    let tiles = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1)\n          this.roomArray[x][y].drawUnderPlayer(delta);\n        tiles.push(this.roomArray[x][y]);\n      }\n    }\n\n    let drawables = new Array<Drawable>();\n\n    drawables = drawables.concat(\n      tiles,\n      this.entities,\n      this.hitwarnings,\n      this.projectiles,\n      this.particles,\n      this.items\n    );\n    for (const i in this.game.players) {\n      if (this.game.rooms[this.game.players[i].levelID] === this) {\n        if (\n          !(\n            skipLocalPlayer &&\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\n          )\n        )\n          drawables.push(this.game.players[i]);\n      }\n    }\n    drawables.sort((a, b) => {\n      if (a instanceof Floor) {\n        return -1;\n      } else if (b instanceof Floor) {\n        return 1;\n      }\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\n        if (a instanceof Player) {\n          return 1;\n        } else if (b instanceof Player) {\n          return -1;\n        } else if (a instanceof Entity) {\n          return 1;\n        } else if (b instanceof Entity) {\n          return -1;\n        } else return 0;\n      } else {\n        return a.drawableY - b.drawableY;\n      }\n    });\n\n    for (const d of drawables) {\n      d.draw(delta);\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1)\n          this.roomArray[x][y].drawAbovePlayer(delta);\n      }\n    }\n\n    for (const i of this.items) {\n      i.drawTopLayer(delta);\n    }\n  };\n\n  drawShade = (delta: number) => {\n    let bestSightRadius = 0;\n    for (const p in this.game.players) {\n      if (\n        this.game.rooms[this.game.players[p].levelID] === this &&\n        this.game.players[p].sightRadius > bestSightRadius\n      ) {\n        bestSightRadius = this.game.players[p].sightRadius;\n      }\n    }\n    let shadingAlpha = Math.max(\n      0,\n      Math.min(0.8, (2 * this.depth) / bestSightRadius)\n    );\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = shadingAlpha;\n      //Game.ctx.globalCompositeOperation = \"lighten\"\n      //Game.ctx.globalCompositeOperation = \"overlay\"\n      //Game.ctx.fillStyle = \"#400a0e\";\n      Game.ctx.fillStyle = this.shadeColor;\n      Game.ctx.fillRect(\n        (this.roomX - LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.roomY - LevelConstants.SCREEN_H) * GameConstants.TILESIZE,\n        (this.width + 2 * LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.height + 2 * LevelConstants.SCREEN_H) * GameConstants.TILESIZE\n      );\n      Game.ctx.globalAlpha = 1.0;\n      Game.ctx.globalCompositeOperation = \"source-over\";\n    }\n  };\n\n  drawOverShade = (delta: number) => {\n    for (const e of this.entities) {\n      e.drawTopLayer(delta); // health bars\n    }\n\n    for (const p of this.projectiles) {\n      p.drawTopLayer(delta);\n    }\n\n    for (const h of this.hitwarnings) {\n      h.drawTopLayer(delta);\n    }\n\n    // draw over dithered shading\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.roomArray[x][y].drawAboveShading(delta);\n      }\n    }\n  };\n\n  // for stuff rendered on top of the player\n  drawTopLayer = (delta: number) => {\n    // gui stuff\n\n    // room name\n    let old = Game.ctx.font;\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      this.message,\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\n      5\n    );\n    Game.ctx.font = old;\n  };\n}\n","export const ServerAddress = {\n  address: \"witch-roguelike-server.azurewebsites.net\"\n  //address: \"ws://localhost:9000\"\n}","import { Game } from \"./game\";\n\nexport class Sound {\n  static playerStoneFootsteps: Array<HTMLAudioElement>;\n  static enemyFootsteps: Array<HTMLAudioElement>;\n  static hitSounds: Array<HTMLAudioElement>;\n  static enemySpawnSound: HTMLAudioElement;\n  static chestSounds: Array<HTMLAudioElement>;\n  static coinPickupSounds: Array<HTMLAudioElement>;\n  static miningSounds: Array<HTMLAudioElement>;\n  static breakRockSound: HTMLAudioElement;\n  static hurtSounds: Array<HTMLAudioElement>;\n  static genericPickupSound: HTMLAudioElement;\n  static pushSounds: Array<HTMLAudioElement>;\n  static healSound: HTMLAudioElement;\n  static music: HTMLAudioElement;\n  static graveSound: HTMLAudioElement;\n\n  static loadSounds = () => {\n    Sound.playerStoneFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.playerStoneFootsteps.push(\n        new Audio(\"res/SFX/footsteps/stone/footstep\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.playerStoneFootsteps) f.volume = 1.0;\n\n    Sound.enemyFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4, 5].forEach((i) =>\n      Sound.enemyFootsteps.push(\n        new Audio(\"res/SFX/footsteps/enemy/enemyfootstep\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.enemyFootsteps) f.volume = 1.0;\n\n    Sound.hitSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.hitSounds.push(new Audio(\"res/SFX/attacks/swing\" + i + \".wav\"))\n    );\n    for (let f of Sound.hitSounds) {\n      (f.volume = 0), f.load;\n      //f.play();\n    }\n    Sound.enemySpawnSound = new Audio(\"res/SFX/attacks/enemyspawn.wav\");\n    Sound.enemySpawnSound.volume = 0.7;\n\n    Sound.chestSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.chestSounds.push(new Audio(\"res/SFX/chest/chest\" + i + \".wav\"))\n    );\n    for (let f of Sound.chestSounds) f.volume = 0.5;\n\n    Sound.coinPickupSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.coinPickupSounds.push(new Audio(\"res/SFX/items/coins\" + i + \".wav\"))\n    );\n    for (let f of Sound.coinPickupSounds) f.volume = 1.0;\n\n    Sound.miningSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.miningSounds.push(\n        new Audio(\"res/SFX/resources/Pickaxe\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.miningSounds) f.volume = 0.3;\n\n    Sound.hurtSounds = new Array<HTMLAudioElement>();\n    [1].forEach((i) =>\n      Sound.hurtSounds.push(new Audio(\"res/SFX/attacks/hit.wav\"))\n    );\n    for (let f of Sound.hurtSounds) f.volume = 0.3;\n\n    Sound.genericPickupSound = new Audio(\"res/SFX/items/pickup.wav\");\n    Sound.genericPickupSound.volume = 1.0;\n\n    Sound.breakRockSound = new Audio(\"res/SFX/resources/rockbreak.wav\");\n    Sound.breakRockSound.volume = 1.0;\n\n    Sound.pushSounds = new Array<HTMLAudioElement>();\n    [1, 2].forEach((i) =>\n      Sound.pushSounds.push(new Audio(\"res/SFX/pushing/push\" + i + \".wav\"))\n    );\n    for (let f of Sound.pushSounds) f.volume = 1.0;\n\n    Sound.healSound = new Audio(\"res/SFX/items/powerup1.wav\");\n    Sound.healSound.volume = 0.5;\n\n    Sound.music = new Audio(\"res/bewitched.mp3\");\n    Sound.graveSound = new Audio(\"res/SFX/attacks/skelespawn.wav\")\n  };\n\n  static playerStoneFootstep = () => {\n    let f = Game.randTable(Sound.playerStoneFootsteps, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static enemyFootstep = () => {\n    let f = Game.randTable(Sound.enemyFootsteps, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static hit = () => {\n    let f = Game.randTable(Sound.hitSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n    f = Game.randTable(Sound.hurtSounds, Math.random);\n    f.volume = 0.5;\n    f.play();\n    f.currentTime = 0;\n    f.volume = 1.0;\n  };\n\n  static hurt = () => {\n    let f = Game.randTable(Sound.hurtSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static enemySpawn = () => {\n    Sound.enemySpawnSound.play();\n    Sound.enemySpawnSound.currentTime = 0;\n  };\n\n  static chest = () => {\n    let f = Game.randTable(Sound.chestSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static pickupCoin = () => {\n    let f = Game.randTable(Sound.coinPickupSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static mine = () => {\n    let f = Game.randTable(Sound.miningSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static breakRock = () => {\n    Sound.breakRockSound.play();\n    Sound.breakRockSound.currentTime = 0;\n  };\n\n  static heal = () => {\n    Sound.healSound.play();\n    Sound.healSound.currentTime = 0;\n  };\n\n  static genericPickup = () => {\n    Sound.genericPickupSound.play();\n    Sound.genericPickupSound.currentTime = 0;\n  };\n\n  static push = () => {\n    let f = Game.randTable(Sound.pushSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static skeleSpawn = () => {\n    Sound.graveSound.play();\n    Sound.graveSound.currentTime = 0;\n  };\n\n  static playMusic = () => {\n    Sound.music.addEventListener(\n      \"ended\",\n      () => {\n        Sound.music.currentTime = 0;\n        Sound.music.play();\n      },\n      false\n    );\n    //Sound.music.play();\n  };\n}\n","export class TextBox {\n  text: string;\n  cursor: number;\n  enterCallback;\n  escapeCallback;\n  allowedCharacters = \"all\";\n\n  constructor() {\n    this.text = \"\";\n    this.cursor = 0;\n    this.enterCallback = () => {};\n    this.escapeCallback = () => {};\n  }\n\n  setEnterCallback = (callback) => {\n    this.enterCallback = callback;\n  };\n\n  setEscapeCallback = (callback) => {\n    this.escapeCallback = callback;\n  };\n\n  clear = () => {\n    this.text = \"\";\n    this.cursor = 0;\n  };\n\n  handleKeyPress = (key: string) => {\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\".split(\n      \"\"\n    );\n    if (key.length === 1) {\n      key = key.toLowerCase();\n      if (fontHas.includes(key)) {\n        if (\n          this.allowedCharacters === \"all\" ||\n          this.allowedCharacters.includes(key)\n        ) {\n          this.text =\n            this.text.substring(0, this.cursor) +\n            key +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor += 1;\n        }\n      }\n      return\n    } else {\n      switch (key) {\n        case \"Backspace\":\n          this.text =\n            this.text.substring(0, this.cursor - 1) +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor = Math.max(0, this.cursor - 1);\n          break;\n        case \"Delete\":\n          this.text =\n            this.text.substring(0, this.cursor) +\n            this.text.substring(this.cursor + 1, this.text.length);\n          break;\n        case \"ArrowLeft\":\n          this.cursor = Math.max(0, this.cursor - 1);\n          break;\n        case \"ArrowRight\":\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\n          break;\n        case \"Enter\":\n          this.enterCallback();\n          break;\n        case \"Escape\":\n          this.escapeCallback();\n          break;\n      }\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Floor } from \"./floor\";\n\nexport class Bones extends Floor {\n  draw = (delta: number) => {\n    Game.drawTile(\n      7,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\nimport { Entity } from \"../entity/entity\";\n\nexport class Button extends Tile {\n  // all are in grid units\n  w: number;\n  h: number;\n  pressed: boolean;\n  turnsSincePressed: number;\n  linkedDoor: InsideLevelDoor;\n\n  constructor(room: Room, x: number, y: number, linkedDoor: InsideLevelDoor) {\n    super(room, x, y);\n    this.w = 1;\n    this.h = 1;\n\n    this.pressed = false;\n    this.turnsSincePressed = 1;\n\n    this.linkedDoor = linkedDoor;\n  }\n\n  press = () => {\n    this.pressed = true;\n    this.linkedDoor.opened = true;\n  };\n\n  unpress = () => {\n    this.pressed = false;\n    this.linkedDoor.opened = false;\n  };\n\n  /*onCollide = (player: Player) => {\n    this.press();\n  };\n\n  onCollideEnemy = (enemy: Enemy) => {\n    this.press();\n  };*/\n\n  tickEnd = () => {\n    this.unpress();\n    for (const i in this.room.game.players) {\n      if (this.room.game.players[i].x === this.x && this.room.game.players[i].y === this.y) this.press();\n    }\n    for (const e of this.room.entities) {\n      if (e.x === this.x && e.y === this.y) this.press();\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(1, 0, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n    if (this.pressed)\n      Game.drawTile(\n        18,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    else\n      Game.drawTile(\n        17,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Chasm extends Tile {\n  tileX: number;\n  tileY: number;\n  topEdge: boolean;\n\n  constructor(\n    room: Room,\n    x: number,\n    y: number,\n    leftEdge: boolean,\n    rightEdge: boolean,\n    topEdge: boolean,\n    bottomEdge: boolean\n  ) {\n    super(room, x, y);\n\n    this.tileX = this.skin === 1 ? 24 : 20;\n    this.tileY = 1;\n\n    if (leftEdge) this.tileX--;\n    else if (rightEdge) this.tileX++;\n    if (topEdge) this.tileY--;\n    else if (bottomEdge) this.tileY++;\n\n    this.topEdge = topEdge;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.topEdge)\n      Game.drawTile(22, 0, 1, 2, this.x, this.y, 1, 2, this.room.shadeColor, this.shadeAmount());\n    Game.drawTile(\n      this.tileX,\n      this.tileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class CoffinTile extends Tile {\n  subTileY: number; // each coffin is 1x2, this is the sub-tile coordinate\n\n  constructor(room: Room, x: number, y: number, subTileY: number) {\n    super(room, x, y);\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.subTileY === 0) {\n      Game.drawTile(\n        0,\n        5,\n        1,\n        1,\n        this.x - 1,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        1,\n        5,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        2,\n        5,\n        1,\n        1,\n        this.x + 1,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        0,\n        6,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(1, 6, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n      Game.drawTile(\n        2,\n        6,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    } else {\n      Game.drawTile(\n        0,\n        7,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(1, 7, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n      Game.drawTile(\n        2,\n        7,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { EntityType } from \"../entity/entity\";\nimport { Key } from \"../item/key\";\n\nexport enum DoorDir {\n  North,\n  East,\n  South,\n  West,\n}\n\nexport enum DoorType {\n  DOOR,\n  LOCKEDDOOR,\n  GUARDEDDOOR,\n}\n\nexport class Door extends Tile {\n  linkedDoor: Door;\n  game: Game;\n  opened: boolean;\n  doorDir: DoorDir;\n  guarded: boolean;\n  DoorType: DoorType;\n  locked: boolean;\n\n  constructor(\n    room: Room,\n    game: Game,\n    x: number,\n    y: number,\n    dir: number,\n    doorType: DoorType\n  ) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n    this.doorDir = dir;\n    this.DoorType = doorType;\n    this.locked = false;\n\n    if (this.DoorType === DoorType.GUARDEDDOOR) {\n      this.locked = true;\n    }\n    if (this.DoorType === DoorType.LOCKEDDOOR) {\n      this.locked = true;\n    }\n  }\n  canUnlock = (player: Player) => {\n    if (this.DoorType === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        this.game.pushMessage(\"You use the key to unlock the door.\");\n        return true;\n      } else\n        this.game.pushMessage(\"The door is locked tightly and won't budge.\");\n      return false;\n    }\n\n    if (this.DoorType === DoorType.GUARDEDDOOR) {\n      const inRoom = this.game.room.entities.filter(\n        (enemy) => enemy.entityType === EntityType.ENEMY\n      );\n      if (inRoom.length === 0) {\n        this.game.pushMessage(\n          \"The foes have been slain and the door allows you passage.\"\n        );\n        return true;\n      } else\n        this.game.pushMessage(\n          \"There are still remaining foes guarding this door...\"\n        );\n\n      return false;\n    }\n  };\n  unlock = (player: Player) => {\n    if (this.DoorType === DoorType.LOCKEDDOOR) {\n      let k = player.inventory.hasItem(Key);\n      if (k !== null) {\n        // remove key\n        player.inventory.removeItem(k);\n        this.locked = false;\n        this.DoorType = DoorType.DOOR;\n      }\n    }\n    if (this.DoorType === DoorType.GUARDEDDOOR) {\n      this.locked = false;\n      this.room.doors.forEach((door) => {\n        door.DoorType = DoorType.DOOR;\n        door.locked = false;\n      });\n    } else {\n    }\n  };\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  isSolid = (): boolean => {\n    console.log(this.DoorType);\n    if (this.locked) {\n      return true;\n    } else false;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    this.opened = true;\n    this.linkedDoor.opened = true;\n    if (this.doorDir === DoorDir.North || this.doorDir === DoorDir.South) {\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\n    } else\n      this.game.changeLevelThroughDoor(\n        player,\n        this.linkedDoor,\n        this.linkedDoor.room.roomX - this.room.roomX > 0 ? 1 : -1\n      );\n    this.linkedDoor.locked = false;\n    this.linkedDoor.DoorType = DoorType.DOOR;\n  };\n\n  draw = (delta: number) => {\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      if (this.opened)\n        Game.drawTile(\n          6,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      else\n        Game.drawTile(\n          3,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n    }\n    if (this.doorDir !== DoorDir.North)\n      //if not top door\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      if (!this.opened)\n        Game.drawTile(\n          13,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n      else\n        Game.drawTile(\n          14,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.room.shadeColor,\n          this.shadeAmount()\n        );\n    }\n    if (this.doorDir !== DoorDir.North) {\n    }\n  };\n\n  drawAboveShading = (delta: number) => {\n    let icon = 2;\n    let xOffset = 0;\n    if (this.DoorType === DoorType.GUARDEDDOOR) (icon = 9), (xOffset = 1 / 32);\n    if (this.DoorType === DoorType.LOCKEDDOOR) (icon = 10), (xOffset = 1 / 32);\n\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      Game.drawFX(\n        icon,\n        2,\n        1,\n        1,\n        this.x + xOffset,\n        this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()),\n        1,\n        1\n      );\n    } else {\n      Game.drawFX(\n        icon,\n        2,\n        1,\n        1,\n        this.x + xOffset,\n        this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()),\n        1,\n        1\n      ); //if not top door\n    }\n  };\n}\n","import { Player } from \"../player\";\nimport { ChatMessage, Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { UpLadder } from \"./upLadder\";\n\nexport class DownLadder extends Tile {\n  linkedLevel: Room;\n  game: Game;\n  isRope = false;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.linkedLevel = null;\n  }\n\n  generate = () => {\n\n    // called by Game during transition\n    if (!this.linkedLevel) {\n      this.linkedLevel = this.game.levelgen.generate(\n        this.game,\n        this.room.depth + (this.isRope ? 0 : 1),\n        this.isRope\n      );\n      for (let x = this.linkedLevel.roomX; x < this.linkedLevel.roomX + this.linkedLevel.width; x++) {\n        for (let y = this.linkedLevel.roomY; y < this.linkedLevel.roomY + this.linkedLevel.height; y++) {\n          let tile = this.linkedLevel.roomArray[x][y];\n          if (tile instanceof UpLadder && tile.isRope)\n            tile.linkedLevel = this.room;\n        }\n      }\n    }\n  };\n\n  onCollide = (player: Player) => {\n    if (this.isRope) this.game.changeLevelThroughLadder(player, this);\n    else {\n      let allPlayersHere = true;\n      for (const i in this.game.players) {\n        if (this.game.rooms[this.game.players[i].levelID] !== this.room || this.game.players[i].x !== this.x || this.game.players[i].y !== this.y) {\n          allPlayersHere = false;\n        }\n      }\n      if (allPlayersHere) {\n        this.generate();\n        for (const i in this.game.players) {\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\n        }\n      } else {\n        if (player === this.game.players[this.game.localPlayerID]) this.game.chat.push(new ChatMessage('all players must be present'));\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    let xx = 4;\n    if (this.isRope) xx = 16;\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n    Game.drawTile(\n      xx,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => { };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\n\nexport class Floor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class FountainTile extends Tile {\n  subTileX: number; // each fountain is 3x3, this is the sub-tile coordinate\n  subTileY: number;\n\n  constructor(room: Room, x: number, y: number, subTileX: number, subTileY: number) {\n    super(room, x, y);\n    this.subTileX = subTileX;\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n    Game.drawTile(\n      this.subTileX,\n      2 + this.subTileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport class InsideLevelDoor extends Tile {\n  game: Game;\n  opened: boolean;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.opened = false;\n  }\n\n  isSolid = (): boolean => {\n    return !this.opened;\n  };\n  canCrushEnemy = (): boolean => {\n    return !this.opened;\n  };\n  isOpaque = (): boolean => {\n    return !this.opened;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(1, 0, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n    if (this.opened)\n      Game.drawTile(15, 1, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n    else\n      Game.drawTile(\n        3,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (!this.opened)\n      Game.drawTile(\n        13,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    else\n      Game.drawTile(\n        14,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Room } from \"../room\";\n\nexport class SpawnFloor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Spike extends Tile {\n  onCollide = (player: Player) => {\n    player.hurt(1, \"spike\");\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(11, 0, 1, 1, this.x, this.y, 1, 1, this.room.shadeColor, this.shadeAmount());\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\nimport { Entity } from \"../entity/entity\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class SpikeTrap extends Tile {\n  on: boolean;\n  tickCount: number;\n  frame: number;\n  t: number;\n\n  constructor(room: Room, x: number, y: number, tickCount?: number) {\n    super(room, x, y);\n    if (tickCount) this.tickCount = tickCount;\n    else this.tickCount = 0;\n    this.on = false;\n    this.frame = 0;\n    this.t = 0;\n  }\n\n  tick = () => {\n    this.tickCount++;\n    if (this.tickCount >= 4) this.tickCount = 0;\n    this.on = this.tickCount === 0;\n\n    if (this.on) {\n      for (const i in this.room.game.players) {\n        if (this.room === this.room.game.rooms[this.room.game.players[i].levelID] && this.room.game.players[i].x === this.x && this.room.game.players[i].y === this.y)\n          this.room.game.players[i].hurt(1, \"spike trap\");\n      }\n    }\n\n    if (this.tickCount === 3)\n      this.room.hitwarnings.push(new HitWarning(this.room.game, this.x, this.y));\n  };\n\n  tickEnd = () => {\n    if (this.on) {\n      for (const e of this.room.entities) {\n        if (e.x === this.x && e.y === this.y) {\n          e.hurt(null, 1);\n        }\n      }\n    }\n  };\n\n  onCollideEnemy = (enemy: Entity) => {\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel)) enemy.hurt(null, 1);\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n\n    let rumbleOffsetX = 0;\n    this.t++;\n    if (!this.on && this.tickCount === 3) {\n      if (this.t % 4 === 1) rumbleOffsetX = 0.0325;\n      if (this.t % 4 === 3) rumbleOffsetX = -0.0325;\n    }\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\n    let f = 6 + frames[Math.floor(this.frame)];\n    if (this.tickCount === 1 || (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)) {\n      f = 5;\n    }\n    Game.drawObj(\n      f,\n      0,\n      1,\n      2,\n      this.x + rumbleOffsetX,\n      this.y - 1,\n      1,\n      2,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n    if (this.on && this.frame < frames.length - 1) {\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\n      else this.frame += 0.2 * delta;\n    }\n    if (!this.on) this.frame = 0;\n  };\n}\n","import { Room } from \"../room\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Entity } from \"../entity/entity\";\nimport { Drawable } from \"../drawable\";\n\nexport enum SkinType {\n  DUNGEON = 0,\n  CAVE = 1,\n}\n\nexport class Tile extends Drawable {\n  x: number;\n  y: number;\n  room: Room;\n  skin: SkinType;\n  isDoor: boolean;\n\n  constructor(room: Room, x: number, y: number) {\n    super();\n    this.skin = room.skin;\n    this.room = room;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.isDoor = false;\n  }\n  hasPlayer = (player: Player) => {\n    if (player.x === this.x && player.y === this.y) return true;\n    else return false;\n  };\n\n  shadeAmount = () => {\n    return this.room.softVis[this.x][this.y];\n  };\n\n  isSolid = (): boolean => {\n    return false;\n  };\n  canCrushEnemy = (): boolean => {\n    return false;\n  };\n  isOpaque = (): boolean => {\n    return false;\n  };\n  onCollide = (player: Player) => {};\n  onCollideEnemy = (enemy: Entity) => {};\n  tick = () => {};\n  tickEnd = () => {};\n\n  draw = (delta: number) => {};\n  drawUnderPlayer = (delta: number) => {};\n  drawAbovePlayer = (delta: number) => {};\n  drawAboveShading = (delta: number) => {};\n}\n","import { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { Player } from \"../player\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\n\nexport class Trapdoor extends Tile {\n  game: Game;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      13,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  onCollide = (player: Player) => {\n    // TODO\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { DownLadder } from \"./downLadder\";\n\nexport class UpLadder extends Tile {\n  linkedLevel: Room;\n  game: Game;\n  isRope = false;\n\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n  }\n\n  onCollide = (player: Player) => {\n    this.game.changeLevelThroughLadder(player, this);\n  };\n\n  draw = (delta: number) => {\n    let xx = 29;\n    let yy = 0;\n    if (this.isRope) {\n      xx = 16;\n      yy = 1;\n    }\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n    if (!this.isRope)\n      Game.drawTile(\n        xx,\n        yy,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n    Game.drawTile(\n      xx,\n      yy + 1,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.isRope)\n      Game.drawTile(\n        16,\n        1,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.room.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Wall extends Tile {\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.y < this.room.roomY + this.room.height - 1)\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.room.shadeColor,\n        this.room.softVis[this.x][this.y + 1]\n      );\n\n    Game.drawTile(\n      2,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y - 0.5,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\nimport { Room } from \"../room\";\nimport { LightSource } from \"../lightSource\";\n\nexport class WallTorch extends Tile {\n  frame: number;\n\n  constructor(room: Room, x: number, y: number) {\n    super(room, x, y);\n    this.room.lightSources.push(new LightSource(this.x + 0.5, this.y + 0.5, 3));\n    this.frame = Math.random() * 12;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    this.frame += 0.3 * delta;\n    if (this.frame >= 12) this.frame = 0;\n\n    Game.drawTile(\n      0,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n\n    Game.drawTile(\n      2,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y - 0.5,\n      1,\n      1,\n      this.room.shadeColor,\n      this.shadeAmount()\n    );\n\n    Game.drawFX(Math.floor(this.frame), 32, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\n\nexport class Dagger extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"DAGGER\\nDamage 1\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\n\nexport class DualDagger extends Weapon {\n  firstAttack: boolean;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 23;\n    this.tileY = 0;\n    this.firstAttack = true;\n  }\n\n  tickInInventory = () => {\n    this.firstAttack = true;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      if (this.firstAttack) this.game.rooms[this.wielder.levelID].entities = this.game.rooms[this.wielder.levelID].entities.filter(e => !e.dead);\n      else this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n\n      if (this.firstAttack) this.firstAttack = false;\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"DUAL DAGGERS\\nOne extra attack per turn\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\n\nexport class Pickaxe extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 30;\n    this.tileY = 0;\n    this.canMine = true\n  }\n\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.rooms[this.wielder.levelID] === this.wielder.game.room) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"PICKAXE\\nDamage 1, used for mining\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class Shotgun extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 26;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let newX3 = 3 * newX - 2 * this.wielder.x;\n    let newY3 = 3 * newY - 2 * this.wielder.y;\n    let range = 3;\n    if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\n    )\n      //if current position is inside new position OR is solid\n      return true;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX2, newY2) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\n    )\n      //if current position is inside new position 2 OR is solid\n      //set range as one\n      range = 1;\n    else if (\n      !this.game.rooms[this.wielder.levelID].tileInside(newX3, newY3) ||\n      this.game.rooms[this.wielder.levelID].roomArray[newX3][newY3].isSolid()\n    )\n      //if current position is inside new position 3 OR is solid\n      //set range as two\n      range = 2;\n\n    let enemyHitCandidates = [];\n    let firstPushable = 4;\n    let firstNonPushable = 5;\n    let firstNonDestroyable = 5;\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      //loop through enemies in this weapons wielders level\n      if (e.pushable) {\n        //case for pushables\n        if (e.pointIn(newX, newY)) return true;\n        //if pushable is in new position return true\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n          firstPushable = 2;\n          //if pushable is in position 2 set firstPushable var\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n          firstPushable = Math.min(firstPushable, 3);\n          //if pushable is in position 3 set firstPushable to min of firstPushable and 3\n        }\n      } else if (e.destroyable) {\n        //case for destroyables\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonPushable = 1;\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\n        }\n        //if enemy is in new position and range is enough push enemy to hit candidate array\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonPushable = Math.min(firstNonPushable, 2);\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n        }\n        //if enemy is in new position 2 and range is enough push enemy to hit candidate array\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonPushable = Math.min(firstNonPushable, 3);\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n        }\n        //if enemy is in new position 3 and range is enough push enemy to hit candidate array\n      } else {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonDestroyable = 1;\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 1\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 2\n\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\n        }\n        //if enemy is in new position and range is enough set first non destroyable to 3\n      }\n    }\n    let targetX = newX3;\n    let targetY = newY3;\n    if (\n      firstNonDestroyable < firstNonPushable &&\n      firstNonDestroyable < firstPushable\n      //if a non destroyable comes before the first non pushable and before the first pushable\n    ) {\n      return true;\n      //return true and exit the function\n    }\n    if (firstNonPushable <= firstPushable) {\n      for (const c of enemyHitCandidates) {\n        let e = c.enemy;\n        let d = c.dist;\n        if (d === 3) e.hurt(this.wielder, 0.5);\n        else e.hurt(this.wielder, 1);\n      }\n      //finally bro\n      //for the array c of enemyHitCandidates if the enemy distance is 3 only do .5 damage\n      //if they're closer do the usual damage\n      //hits all candidates in enemyHitCandidates\n\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] ===\n        this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"black\"\n      );\n      GenericParticle.shotgun(\n        this.game.rooms[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"#ffddff\"\n      );\n      let gp = new GenericParticle(\n        this.game.rooms[this.wielder.levelID],\n        0.5 * (newX + this.wielder.x) + 0.5,\n        0.5 * (newY + this.wielder.y),\n        0,\n        1,\n        0,\n        0,\n        0,\n        \"white\",\n        0\n      );\n      gp.expirationTimer = 10;\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n\n      return false;\n    }\n    return true;\n  };\n\n  getDescription = (): string => {\n    return \"SHOTGUN\\nRange 3, penetration\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\n\nexport class Spear extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 24;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let flag = false;\n    let enemyHitCandidates = [];\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (e.destroyable) {\n        if (e.pointIn(newX, newY)) {\n          if (e.pushable) return true;\n          else {\n            e.hurt(this.wielder, 1);\n            flag = true;\n          }\n        }\n        if (e.pointIn(newX2, newY2) && !this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()) {\n          if (!e.pushable) enemyHitCandidates.push(e);\n        }\n      }\n    }\n    if (!flag && enemyHitCandidates.length > 0) {\n      for (const e of enemyHitCandidates) e.hurt(this.wielder, 1);\n      if (this.wielder.game.room === this.wielder.game.rooms[this.wielder.levelID]) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n      return false;\n    }\n    if (flag) {\n      if (this.wielder.game.room === this.wielder.game.rooms[this.wielder.levelID]) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.rooms[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"SPEAR\\nRange 2\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Room } from \"../room\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../entity/crate\";\nimport { Barrel } from \"../entity/barrel\";\nimport { Player } from \"../player\";\nimport { Inventory } from \"../inventory\";\nimport { WizardFireball } from \"../projectile/wizardFireball\";\nimport { PlayerFireball } from \"../projectile/playerFireball\";\n\nexport class Spellbook extends Weapon {\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 25;\n    this.tileY = 0;\n    this.canMine = true;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    let difX = newX - this.x;\n    let difY = newY - this.y;\n\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\n      if (\n        (e.destroyable || e.pushable) &&\n        e.pointIn(newX, newY) &&\n        !this.game.rooms[this.wielder.levelID].roomArray[e.x][e.y].isSolid()\n      ) {\n        e.hurt(this.wielder, 1);\n        this.game.rooms[this.wielder.levelID].particles.push(\n          new PlayerFireball(e.x, e.y)\n        );\n        flag = true;\n      }\n    }\n\n    if (flag) {\n      if (\n        this.wielder.game.rooms[this.wielder.levelID] ===\n        this.wielder.game.room\n      )\n        Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"SPELLBOOK\\nc̵͈̮͍̫̄a̴̲͛͂̌ŗ̴̩͈̞̠͉̤̗̎̓͐͗̐̃̈́̏̊͝ê̴̥̙̰̱̮̙̩͇̝͎̋̏͐̉̑f̴̧͎͚̟͈̻̰̫̫͎̑̔̂͛̓͂̅ú̶̢͖̣͙͔̺̋̉̾̀̿̑̍̕l̵̮͚̊́͐̌̎͘\";\n  };\n}\n","import { Room } from \"../room\";\nimport { Game } from \"../game\";\nimport { Equippable } from \"../item/equippable\";\nimport { Player } from \"../player\";\n\nexport class Weapon extends Equippable {\n  game: Game;\n  canMine: boolean;\n\n  constructor(level: Room, x: number, y: number) {\n    super(level, x, y);\n\n    if (level) this.game = level.game;\n\n    this.canMine = false;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Weapon) return false;\n    return true;\n  };\n\n  tick = () => { };\n\n  // returns true if nothing was hit, false if the player should move\n  weaponMove = (newX: number, newY: number): boolean => {\n    return true;\n  };\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = exports.io = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path);\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst socket_1 = require(\"./socket\");\nconst Emitter = require(\"component-emitter\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends Emitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            super.emit(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        super.emit(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        super.emit(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        super.emit(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        super.emit(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            super.emit(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                super.emit(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        super.emit(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        super.emit(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst on_1 = require(\"./on\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, \"open\", this.onopen.bind(this)),\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_1.on(io, \"error\", this.onerror.bind(this)),\n            on_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @param ev - event name\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            super.emit(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        super.emit(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    super.emit(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                super.emit(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        super.emit(\"connect\");\n        this.emitBuffered();\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}
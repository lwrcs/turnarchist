{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://witch-game/./node_modules/backo2/index.js","webpack://witch-game/./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack://witch-game/./node_modules/component-emitter/index.js","webpack://witch-game/./node_modules/debug/node_modules/ms/index.js","webpack://witch-game/./node_modules/debug/src/browser.js","webpack://witch-game/./node_modules/debug/src/common.js","webpack://witch-game/./node_modules/engine.io-client/lib/globalThis.browser.js","webpack://witch-game/./node_modules/engine.io-client/lib/index.js","webpack://witch-game/./node_modules/engine.io-client/lib/socket.js","webpack://witch-game/./node_modules/engine.io-client/lib/transport.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/index.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/polling.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","webpack://witch-game/./node_modules/engine.io-client/lib/transports/websocket.js","webpack://witch-game/./node_modules/engine.io-client/lib/util.js","webpack://witch-game/./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack://witch-game/./node_modules/engine.io-parser/lib/commons.js","webpack://witch-game/./node_modules/engine.io-parser/lib/decodePacket.browser.js","webpack://witch-game/./node_modules/engine.io-parser/lib/encodePacket.browser.js","webpack://witch-game/./node_modules/engine.io-parser/lib/index.js","webpack://witch-game/./node_modules/has-cors/index.js","webpack://witch-game/./node_modules/parseqs/index.js","webpack://witch-game/./node_modules/parseuri/index.js","webpack://witch-game/./node_modules/socket.io-parser/dist/binary.js","webpack://witch-game/./node_modules/socket.io-parser/dist/index.js","webpack://witch-game/./node_modules/socket.io-parser/dist/is-binary.js","webpack://witch-game/./src/actionTab.ts","webpack://witch-game/./src/astarclass.ts","webpack://witch-game/./src/drawable.ts","webpack://witch-game/./src/enemy/armoredzombieEnemy.ts","webpack://witch-game/./src/enemy/barrel.ts","webpack://witch-game/./src/enemy/bigSkullEnemy.ts","webpack://witch-game/./src/enemy/bishopEnemy.ts","webpack://witch-game/./src/enemy/chargeEnemy.ts","webpack://witch-game/./src/enemy/chest.ts","webpack://witch-game/./src/enemy/coalResource.ts","webpack://witch-game/./src/enemy/crate.ts","webpack://witch-game/./src/enemy/emeraldResource.ts","webpack://witch-game/./src/enemy/enemy.ts","webpack://witch-game/./src/enemy/goldResource.ts","webpack://witch-game/./src/enemy/knightEnemy.ts","webpack://witch-game/./src/enemy/mushrooms.ts","webpack://witch-game/./src/enemy/pot.ts","webpack://witch-game/./src/enemy/pottedPlant.ts","webpack://witch-game/./src/enemy/resource.ts","webpack://witch-game/./src/enemy/rockResource.ts","webpack://witch-game/./src/enemy/rook.ts","webpack://witch-game/./src/enemy/skullEnemy.ts","webpack://witch-game/./src/enemy/slimeEnemy.ts","webpack://witch-game/./src/enemy/spawner.ts","webpack://witch-game/./src/enemy/vendingMachine.ts","webpack://witch-game/./src/enemy/wizardEnemy.ts","webpack://witch-game/./src/enemy/zombieEnemy.ts","webpack://witch-game/./src/game.ts","webpack://witch-game/./src/gameConstants.ts","webpack://witch-game/./src/gameState.ts","webpack://witch-game/./src/healthbar.ts","webpack://witch-game/./src/hitWarning.ts","webpack://witch-game/./src/input.ts","webpack://witch-game/./src/inventory.ts","webpack://witch-game/./src/item/armor.ts","webpack://witch-game/./src/item/backpack.ts","webpack://witch-game/./src/item/bluegem.ts","webpack://witch-game/./src/item/candle.ts","webpack://witch-game/./src/item/coal.ts","webpack://witch-game/./src/item/coin.ts","webpack://witch-game/./src/item/equippable.ts","webpack://witch-game/./src/item/gold.ts","webpack://witch-game/./src/item/goldenKey.ts","webpack://witch-game/./src/item/greengem.ts","webpack://witch-game/./src/item/heart.ts","webpack://witch-game/./src/item/item.ts","webpack://witch-game/./src/item/key.ts","webpack://witch-game/./src/item/lantern.ts","webpack://witch-game/./src/item/redgem.ts","webpack://witch-game/./src/item/shrooms.ts","webpack://witch-game/./src/item/stone.ts","webpack://witch-game/./src/item/torch.ts","webpack://witch-game/./src/item/usable.ts","webpack://witch-game/./src/level.ts","webpack://witch-game/./src/levelConstants.ts","webpack://witch-game/./src/levelGenerator.ts","webpack://witch-game/./src/lightSource.ts","webpack://witch-game/./src/map.ts","webpack://witch-game/./src/particle/deathParticle.ts","webpack://witch-game/./src/particle/genericParticle.ts","webpack://witch-game/./src/particle/particle.ts","webpack://witch-game/./src/particle/slashParticle.ts","webpack://witch-game/./src/particle/wizardTeleportParticle.ts","webpack://witch-game/./src/player.ts","webpack://witch-game/./src/projectile/enemySpawnAnimation.ts","webpack://witch-game/./src/projectile/projectile.ts","webpack://witch-game/./src/projectile/wizardFireball.ts","webpack://witch-game/./src/random.ts","webpack://witch-game/./src/serverAddress.ts","webpack://witch-game/./src/sound.ts","webpack://witch-game/./src/textbox.ts","webpack://witch-game/./src/tile/bones.ts","webpack://witch-game/./src/tile/bottomDoor.ts","webpack://witch-game/./src/tile/button.ts","webpack://witch-game/./src/tile/chasm.ts","webpack://witch-game/./src/tile/coffinTile.ts","webpack://witch-game/./src/tile/door.ts","webpack://witch-game/./src/tile/downLadder.ts","webpack://witch-game/./src/tile/floor.ts","webpack://witch-game/./src/tile/fountainTile.ts","webpack://witch-game/./src/tile/insideLevelDoor.ts","webpack://witch-game/./src/tile/lockedDoor.ts","webpack://witch-game/./src/tile/sidedoor.ts","webpack://witch-game/./src/tile/spawnfloor.ts","webpack://witch-game/./src/tile/spike.ts","webpack://witch-game/./src/tile/spiketrap.ts","webpack://witch-game/./src/tile/tile.ts","webpack://witch-game/./src/tile/trapdoor.ts","webpack://witch-game/./src/tile/upLadder.ts","webpack://witch-game/./src/tile/wall.ts","webpack://witch-game/./src/tile/wallTorch.ts","webpack://witch-game/./src/weapon/dagger.ts","webpack://witch-game/./src/weapon/dualdagger.ts","webpack://witch-game/./src/weapon/pickaxe.ts","webpack://witch-game/./src/weapon/shotgun.ts","webpack://witch-game/./src/weapon/slingshot.ts","webpack://witch-game/./src/weapon/spear.ts","webpack://witch-game/./src/weapon/weapon.ts","webpack://witch-game/./node_modules/yeast/index.js","webpack://witch-game/./node_modules/socket.io-client/build/index.js","webpack://witch-game/./node_modules/socket.io-client/build/manager.js","webpack://witch-game/./node_modules/socket.io-client/build/on.js","webpack://witch-game/./node_modules/socket.io-client/build/socket.js","webpack://witch-game/./node_modules/socket.io-client/build/url.js","webpack://witch-game/webpack/bootstrap","webpack://witch-game/webpack/startup"],"sourcesContent":["\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {}\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\n        \"beforeunload\",\n        () => {\n          if (this.transport) {\n            // silently close the transport\n            this.transport.removeAllListeners();\n            this.transport.close();\n          }\n        },\n        false\n      );\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      const self = this;\n      setTimeout(function() {\n        self.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n    const self = this;\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", function() {\n        self.onDrain();\n      })\n      .on(\"packet\", function(packet) {\n        self.onPacket(packet);\n      })\n      .on(\"error\", function(e) {\n        self.onError(e);\n      })\n      .on(\"close\", function() {\n        self.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n    const self = this;\n\n    Socket.priorWebsocketSuccess = false;\n\n    function onTransportOpen() {\n      if (self.onlyBinaryUpgrades) {\n        const upgradeLosesBinary =\n          !this.supportsBinary && self.transport.supportsBinary;\n        failed = failed || upgradeLosesBinary;\n      }\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", function(msg) {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          self.upgrading = true;\n          self.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', self.transport.name);\n          self.transport.pause(function() {\n            if (failed) return;\n            if (\"closed\" === self.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            self.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            self.emit(\"upgrade\", transport);\n            transport = null;\n            self.upgrading = false;\n            self.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          self.emit(\"upgradeError\", err);\n        }\n      });\n    }\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    function onerror(err) {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      self.emit(\"upgradeError\", error);\n    }\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    function cleanup() {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      self.removeListener(\"close\", onclose);\n      self.removeListener(\"upgrading\", onupgrade);\n    }\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const self = this;\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", function() {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    function close() {\n      self.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      self.transport.close();\n    }\n\n    function cleanupAndClose() {\n      self.removeListener(\"upgrade\", cleanupAndClose);\n      self.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    }\n\n    function waitForUpgrade() {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      self.once(\"upgrade\", cleanupAndClose);\n      self.once(\"upgradeError\", cleanupAndClose);\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n      const self = this;\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      self.writeBuffer = [];\n      self.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","const XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    const self = this;\n    callbacks.push(function(msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function(e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function() {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    const self = this;\n\n    this.readyState = \"pausing\";\n\n    function pause() {\n      debug(\"paused\");\n      self.readyState = \"paused\";\n      onPause();\n    }\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    const self = this;\n    debug(\"polling got data %s\", data);\n    const callback = function(packet, index, total) {\n      // if its the first message we consider the transport open\n      if (\"opening\" === self.readyState && packet.type === \"open\") {\n        self.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        self.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      self.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const self = this;\n\n    function close() {\n      debug(\"writing close packet\");\n      self.write([{ type: \"close\" }]);\n    }\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","const globalThis = require(\"../globalThis\");\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\"\n};\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    const self = this;\n\n    this.ws.onopen = function() {\n      self.onOpen();\n    };\n    this.ws.onclose = function() {\n      self.onClose();\n    };\n    this.ws.onmessage = function(ev) {\n      self.onData(ev.data);\n    };\n    this.ws.onerror = function(e) {\n      self.onError(\"websocket error\", e);\n    };\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    const self = this;\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    let total = packets.length;\n    let i = 0;\n    const l = total;\n    for (; i < l; i++) {\n      (function(packet) {\n        parser.encodePacket(packet, self.supportsBinary, function(data) {\n          // always create a new object (GH-437)\n          const opts = {};\n          if (!usingBrowserWebSocket) {\n            if (packet.options) {\n              opts.compress = packet.options.compress;\n            }\n\n            if (self.opts.perMessageDeflate) {\n              const len =\n                \"string\" === typeof data\n                  ? Buffer.byteLength(data)\n                  : data.length;\n              if (len < self.opts.perMessageDeflate.threshold) {\n                opts.compress = false;\n              }\n            }\n          }\n\n          // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n          try {\n            if (usingBrowserWebSocket) {\n              // TypeError is thrown when passing the second argument on Safari\n              self.ws.send(data);\n            } else {\n              self.ws.send(data, opts);\n            }\n          } catch (e) {\n            debug(\"websocket closed before onclose event\");\n          }\n\n          --total || done();\n        });\n      })(packets[i]);\n    }\n\n    function done() {\n      self.emit(\"flush\");\n\n      // fake drain\n      // defer to next tick to allow Socket to clear writeBuffer\n      setTimeout(function() {\n        self.writable = true;\n        self.emit(\"drain\");\n      }, 0);\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","import { Game } from \"./game\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Inventory } from \"./inventory\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Player } from \"./player\";\n\nexport enum ActionState {\n  Ready,\n  Attack,\n  Wait,\n  halfAttack,\n}\n\nexport class ActionTab {\n  actionState: ActionState;\n  weapon: any;\n  game: Game;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.weapon = inventory.weapon;\n    this.game = game;\n  }\n\n  tick = () => {};\n  \n  draw = (player: Player, inventory: Inventory) => {\n    //need block of code to draw outline\n    //location on screen etc\n    const w = inventory.weapon;\n    let action = player.actionTab.actionState\n\n    //play ready animation\n    switch (action) {\n      case ActionState.Ready: {\n        Game.ctx.fillStyle = \"green\";\n        Game.ctx.fillRect(1, 1, 4, 4);\n      }\n      case ActionState.Attack: {\n        //if (w == ) {\n          Game.ctx.fillStyle = \"red\";\n          Game.ctx.fillRect(1, 1, 4, 4);\n         //first slash\n        //if (w == this.weapon.dualdagger); /* same attack anim for now...\n        //first slash of slash animation\n      }\n      case ActionState.halfAttack: {\n        Game.ctx.fillStyle = \"orange\";\n        Game.ctx.fillRect(1, 1, 4, 4);\n        //if (w == this.weapon.dualdagger);\n        //render second of two slash animations\n      }\n      case ActionState.Wait: {\n        Game.ctx.fillStyle = \"blue\";\n        Game.ctx.fillRect(1, 1, 4, 4);\n        //render waiting animation}\n      }\n    }\n  };\n}\n","import { EnemyDirection } from \"./enemy/enemy\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { Wall } from \"./tile/wall\";\n\nexport namespace astar {\n  //================== start graph js\n  /* \n  graph.js http://github.com/bgrins/javascript-astar\n  MIT License\n  Creates a Graph class used in the astar search algorithm.\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \n      URL: http://eloquentjavascript.net/appendix2.html\n      License: http://creativecommons.org/licenses/by/3.0/\n  */\n\n  export interface Position {\n    x: number;\n    y: number;\n  }\n\n  export enum GraphNodeType {\n    WALL,\n    OPEN,\n  }\n\n  let getTileCost = tile => {\n    if (tile)\n      return (tile.isSolid() || tile.isDoor) ? 99999999 : 1;\n    else\n      return 99999999;\n  };\n\n  export class Graph {\n    nodes: GraphNode[][];\n    elements: number[][];\n\n    constructor(grid: number[][]) {\n      this.elements = grid;\n      var nodes: GraphNode[][] = [];\n      var row: number[],\n        rowLength: number,\n        len = grid.length;\n      for (var x = 0; x < len; ++x) {\n        row = grid[x];\n        rowLength = row.length;\n        nodes[x] = new Array(rowLength); // optimum array with size\n        for (var y = 0; y < rowLength; ++y) {\n          nodes[x][y] = new GraphNode(x, y, row[y]);\n        }\n      }\n      this.nodes = nodes;\n    }\n\n    toString(): string {\n      var graphString = \"\\n\";\n      var nodes = this.nodes;\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\n      for (var x = 0, len = nodes.length; x < len;) {\n        rowDebug = \"\";\n        row = nodes[x++];\n        for (y = 0, l = row.length; y < l;) {\n          rowDebug += row[y++].type + \" \";\n        }\n        graphString = graphString + rowDebug + \"\\n\";\n      }\n      return graphString;\n    }\n  }\n\n  export class GraphNode {\n    x: number;\n    y: number;\n    type: GraphNodeType;\n    data: any;\n    pos: Position;\n\n    constructor(x: number, y: number, type: GraphNodeType) {\n      this.data = {};\n      this.x = x;\n      this.y = y;\n      this.pos = { x: x, y: y };\n      this.type = type;\n    }\n\n    toString(): string {\n      return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    isWall() {\n      return this.type == GraphNodeType.WALL;\n    }\n  }\n\n  export class BinaryHeap {\n    content: any[];\n    scoreFunction: (node: any) => number;\n\n    constructor(scoreFunction: (node: any) => number) {\n      this.content = [];\n      this.scoreFunction = scoreFunction;\n    }\n\n    push(node: any) {\n      // Add the new node to the end of the array.\n      this.content.push(node);\n      // Allow it to sink down.\n      this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n      // Store the first node so we can return it later.\n      var result = this.content[0];\n      // Get the node at the end of the array.\n      var end = this.content.pop();\n      // If there are any elements left, put the end node at the\n      // start, and let it bubble up.\n      if (this.content.length > 0) {\n        this.content[0] = end;\n        this.bubbleUp(0);\n      }\n      return result;\n    }\n\n    remove(node: any) {\n      var i = this.content.indexOf(node);\n\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      if (i !== this.content.length - 1) {\n        this.content[i] = end;\n        if (this.scoreFunction(end) < this.scoreFunction(node)) this.sinkDown(i);\n        else this.bubbleUp(i);\n      }\n    }\n\n    size() {\n      return this.content.length;\n    }\n\n    rescoreElement(node: any) {\n      this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n: number) {\n      // Fetch the element that has to be sunk.\n      var element = this.content[n];\n      // When at 0, an element can not sink any further.\n      while (n > 0) {\n        // Compute the parent element's index, and fetch it.\n        var parentN = ((n + 1) >> 1) - 1,\n          parent = this.content[parentN];\n        // Swap the elements if the parent is greater.\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n          this.content[parentN] = element;\n          this.content[n] = parent;\n          // Update 'n' to continue at the new position.\n          n = parentN;\n        } else {\n          // Found a parent that is less, no need to sink any further.\n          break;\n        }\n      }\n    }\n\n    bubbleUp(n: number) {\n      // Look up the target element and its score.\n      var length = this.content.length,\n        element = this.content[n],\n        elemScore = this.scoreFunction(element);\n\n      while (true) {\n        // Compute the indices of the child elements.\n        var child2N = (n + 1) << 1,\n          child1N = child2N - 1;\n        // This is used to store the new position of the element,\n        // if any.\n        var swap = null;\n        // If the first child exists (is inside the array)...\n        if (child1N < length) {\n          // Look it up and compute its score.\n          var child1 = this.content[child1N],\n            child1Score = this.scoreFunction(child1);\n          // If the score is less than our element's, we need to swap.\n          if (child1Score < elemScore) swap = child1N;\n        }\n        // Do the same checks for the other child.\n        if (child2N < length) {\n          var child2 = this.content[child2N],\n            child2Score = this.scoreFunction(child2);\n          if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N;\n        }\n\n        // If the element needs to be moved, swap it, and continue.\n        if (swap !== null) {\n          this.content[n] = this.content[swap];\n          this.content[swap] = element;\n          n = swap;\n        } else {\n          // Otherwise, we are done.\n          break;\n        }\n      }\n    }\n  }\n  //end graph.js ==================\n\n  // javascript-astar\n  // http://github.com/bgrins/javascript-astar\n  // Freely distributable under the MIT License.\n  // Implements the astar search algorithm in javascript using a binary heap.\n  export interface AStarData {\n    f: number;\n    g: number;\n    h: number;\n    cost: number;\n    visited: boolean;\n    closed: boolean;\n    parent: AStarData;\n    pos: Position;\n    org: any;\n  }\n\n  export class AStar {\n    static NO_CHECK_START_POINT: boolean = false;\n    grid: AStarData[][];\n    constructor(grid: any[][], disablePoints?: Position[], enableCost?: boolean) {\n      this.grid = [];\n      for (var x = 0, xl = grid.length; x < xl; x++) {\n        this.grid[x] = [];\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\n          var cost = getTileCost(grid[x][y]);\n          this.grid[x][y] = {\n            org: grid[x][y],\n            f: 0,\n            g: 0,\n            h: 0,\n            cost: cost,\n            visited: false,\n            closed: false,\n            pos: {\n              x: x,\n              y: y,\n            },\n            parent: null,\n          };\n        }\n      }\n      if (disablePoints !== undefined) {\n        for (var i = 0; i < disablePoints.length; i++)\n          this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\n      }\n    }\n\n    heap(): BinaryHeap {\n      return new BinaryHeap(function (node: AStarData) {\n        return node.f;\n      });\n    }\n\n    _find(org: any) {\n      for (var x = 0; x < this.grid.length; x++)\n        for (var y = 0; y < this.grid[x].length; y++)\n          if (this.grid[x][y].org == org) return this.grid[x][y];\n    }\n\n    _search(start: any, end: any, diagonal?: boolean, diagonalsOnly?: boolean, turnCostsExtra?: boolean, turnDirection?: EnemyDirection, heuristic?: Function, diagonalsOmni?: boolean) {\n      heuristic = heuristic || this.manhattan;\n      diagonal = !!diagonal;\n      diagonalsOnly = !!diagonalsOnly;\n      turnCostsExtra = !!turnCostsExtra;\n      diagonalsOmni = !!diagonalsOmni;\n\n      var openHeap = this.heap();\n\n      var _start: AStarData, _end: AStarData;\n      if (start.x !== undefined && start.y !== undefined) _start = this.grid[start.x][start.y];\n      else _start = this._find(start);\n\n      if (end.x !== undefined && end.y !== undefined) _end = this.grid[end.x][end.y];\n      else _end = this._find(end);\n\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\n\n      openHeap.push(_start);\n\n      while (openHeap.size() > 0) {\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n        var currentNode: AStarData = openHeap.pop();\n\n        // End case -- result has been found, return the traced path.\n        if (currentNode === _end) {\n          var curr = currentNode;\n          var ret = [];\n          while (curr.parent) {\n            ret.push(curr);\n            curr = curr.parent;\n          }\n          return ret.reverse();\n        }\n\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\n        currentNode.closed = true;\n\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\n        var neighbors = this.neighbors(currentNode, diagonal, diagonalsOnly, diagonalsOmni);\n\n        for (var i = 0, il = neighbors.length; i < il; i++) {\n          var neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.cost <= 0) {\n            // Not a valid node to process, skip to next neighbor.\n            continue;\n          }\n\n          // The g score is the shortest distance from start to current node.\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\n          var gScore = currentNode.g + neighbor.cost;\n          if (turnCostsExtra) {\n            var isTurn = false;\n            if (currentNode.parent)\n              isTurn = !((currentNode.parent.pos.x === currentNode.pos.x && currentNode.pos.x === neighbor.pos.x) || (currentNode.parent.pos.y === currentNode.pos.y && currentNode.pos.y === neighbor.pos.y));\n            else { // initial step\n              isTurn = true;\n              if (neighbor.pos.x - currentNode.pos.x === 0 && neighbor.pos.y - currentNode.pos.y === -1 && turnDirection === EnemyDirection.UP) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === 0 && neighbor.pos.y - currentNode.pos.y === 1 && turnDirection === EnemyDirection.DOWN) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === 1 && neighbor.pos.y - currentNode.pos.y === 0 && turnDirection === EnemyDirection.RIGHT) isTurn = false;\n              if (neighbor.pos.x - currentNode.pos.x === -1 && neighbor.pos.y - currentNode.pos.y === 0 && turnDirection === EnemyDirection.LEFT) isTurn = false;\n            }\n            if (isTurn) gScore++;\n          }\n          var beenVisited = neighbor.visited;\n\n          if (!beenVisited || gScore < neighbor.g) {\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n            neighbor.visited = true;\n            neighbor.parent = currentNode;\n            neighbor.h = neighbor.h || heuristic(neighbor.pos, _end.pos);\n            neighbor.g = gScore;\n            neighbor.f = neighbor.g + neighbor.h;\n\n            if (!beenVisited) {\n              // Pushing to heap will put it in proper place based on the 'f' value.\n              openHeap.push(neighbor);\n            } else {\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\n              openHeap.rescoreElement(neighbor);\n            }\n          }\n        }\n      }\n\n      // No result was found - empty array signifies failure to find path.\n      return [];\n    }\n\n    static search(\n      grid: any[][],\n      start: any,\n      end: any,\n      disablePoints?: Position[],\n      diagonal?: boolean,\n      diagonalsOnly?: boolean,\n      turnCostsExtra?: boolean,\n      turnDirection?: EnemyDirection,\n      heuristic?: Function,\n      diagonalsOmni?: boolean\n    ) {\n      var astar = new AStar(grid, disablePoints);\n      return astar._search(start, end, diagonal, diagonalsOnly, turnCostsExtra, turnDirection, heuristic, diagonalsOmni);\n    }\n\n    manhattan(pos0: Position, pos1: Position): number {\n      // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    }\n\n    neighbors(node: AStarData, diagonals?: boolean, diagonalsOnly?: boolean, diagonalsOmni?: boolean): AStarData[] {\n      var grid = this.grid;\n      var ret = [];\n      var x = node.pos.x;\n      var y = node.pos.y;\n\n      if (!diagonalsOnly) {\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          ret.push(grid[x][y + 1]);\n        }\n      }\n\n      if (diagonals) {\n        // Southwest\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\n          ret.push(grid[x - 1][y - 1]);\n        }\n\n        // Southeast\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\n          ret.push(grid[x + 1][y - 1]);\n        }\n\n        // Northwest\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\n          ret.push(grid[x - 1][y + 1]);\n        }\n\n        // Northeast\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\n          ret.push(grid[x + 1][y + 1]);\n        }\n      }\n      function getRandomBoolean(): boolean {\n        return Math.random() < 0.5;\n    }\n      if (diagonalsOmni) {\n        const randomBool: boolean = getRandomBoolean();\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n          // Instead of pushing West, choose between Southwest and Northwest\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]), console.log(\"Southwest\");\n            return;\n          } else {\n            ret.push(grid[x - 1][y + 1]), console.log(\"Northwest\");\n            return;\n          }\n        }\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n          if (randomBool == true) {\n            ret.push(grid[x + 1][y - 1]), console.log(\"Southeast\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]), console.log(\"Northeast\");\n            return;\n          }\n        }\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y - 1]), console.log(\"Southwest\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y - 1]), console.log(\"Southeast\");\n            return;\n          }\n        }\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n          if (randomBool == true) {\n            ret.push(grid[x - 1][y + 1]), console.log(\"Northwest\");\n            return;\n          } else {\n            ret.push(grid[x + 1][y + 1]), console.log(\"Northeast\");\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    \n\n      return ret;\n    }\n  }\n}\n","export class Drawable {\n  drawableY = 0;\n\n  draw = (delta: number) => { };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\n\nexport class ArmoredzombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.level, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      //this.facePlayer(playerHitBy); // \n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            /*this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));*/\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.level.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.level.enemies) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                (this.level.levelArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n              if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                grid[x][y] = this.level.levelArray[x][y];\n              else\n                grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = EnemyDirection.RIGHT;\n            else if (moveX < oldX) this.direction = EnemyDirection.LEFT;\n            else if (moveY > oldY) this.direction = EnemyDirection.DOWN;\n            else if (moveY < oldY) this.direction = EnemyDirection.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.levels[this.game.players[i].levelID] === this.level && this.game.players[i].x === moveX && this.game.players[i].y === moveY && (oldDir == this.direction)) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n                else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n                else if (this.y < oldY) this.direction = EnemyDirection.UP;\n              }\n            }\n          }\n\n          if (this.direction == EnemyDirection.LEFT) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.RIGHT) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.DOWN) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.UP) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.direction == EnemyDirection.LEFT) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                }\n                if (this.direction == EnemyDirection.RIGHT) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                }\n                if (this.direction == EnemyDirection.DOWN) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n                if (this.direction == EnemyDirection.UP) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 27;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 17;\n        this.tileY = 8;\n      }\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./enemy\";\n\nexport class Barrel extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 1;\n    this.tileX = 1;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.entityType = EntityType.Prop;\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#9badb7\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { GameConstants } from \"../gameConstants\";\nimport { DeathParticle } from \"../particle/deathParticle\";\n\nexport class BigSkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  aggro: boolean;\n  readonly REGEN_TICKS = 5;\n  drops: Array<Item>;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.w = 2;\n    this.h = 2;\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 21;\n    this.tileY = 0;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.chainPushable = false;\n\n    this.drops = [];\n    if (drop) this.drops.push(drop);\n    while (this.drops.length < 4) {\n      let dropProb = rand();\n      if (dropProb < 0.005) this.drops.push(new Spear(this.level, 0, 0));\n      else if (dropProb < 0.04) this.drops.push(new RedGem(this.level, 0, 0));\n      else if (dropProb < 0.075) this.drops.push(new RedGem(this.level, 0, 0));\n      else if (dropProb < 0.1) this.drops.push(new RedGem(this.level, 0, 0));\n      else this.drops.push(new Coin(this.level, 0, 0));\n    }\n  }\n\n  addHitWarnings = () => {\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y + 1));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x + 2, this.y));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x + 2, this.y + 1));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y - 1));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 2));\n    this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y + 2));\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.level, this.x + 1, this.y + 1, this.deathParticleColor);\n    }\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(this.level, this.x + 1, this.y + 1, this.deathParticleColor);\n    this.level.particles.push(new DeathParticle(this.x + 0.5, this.y + 0.5));\n\n    this.dropLoot();\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health == 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health++;\n          this.ticksSinceFirstHit = 0;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n              if (this.health >= 3) this.addHitWarnings();\n            }\n          }\n        }\n        else if (this.seenPlayer) {\n          if (this.level.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n            let moveX = this.x;\n            let moveY = this.y;\n            if (this.ticks % 2 === 0) { // horizontal preference\n              if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n              else if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n            } else { // vertical preference\n              if (this.targetPlayer.y >= this.y + this.h) moveY++;\n              else if (this.targetPlayer.y < this.y) moveY--;\n              else if (this.targetPlayer.x >= this.x + this.w) moveX++;\n              else if (this.targetPlayer.x < this.x) moveX--;\n            }\n\n            let hitPlayer = false;\n            if (this.health >= 3) {\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\n                return player.x >= moveX && player.x < moveX + this.w && player.y >= moveY && player.y < moveY + this.h;\n              };\n              for (const i in this.game.players) {\n                if (this.game.levels[this.game.players[i].levelID] === this.level && wouldHit(this.game.players[i], moveX, moveY)) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n            }\n            if (!hitPlayer) {\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n              else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n              else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n              else if (this.y < oldY) this.direction = EnemyDirection.UP;\n            }\n\n            if (this.health < this.maxHealth) {\n              this.ticksSinceFirstHit++;\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n                this.health++;\n                this.ticksSinceFirstHit = 0;\n              }\n            }\n\n            if (this.health >= 3) this.addHitWarnings();\n          }\n\n          let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                  if (this.health >= 3) this.addHitWarnings();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 21;\n      this.tileY = 0;\n      if (this.health === 3) {\n        this.tileX = 21;\n        this.tileY = 4;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 0;\n          }\n        }\n      }\n      else if (this.health === 2) {\n        this.tileX = 21;\n        this.tileY = 8;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 4;\n          }\n        }\n      }\n      else if (this.health === 1) {\n        this.tileX = 21;\n        this.tileY = 12;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileY = 8;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          18,\n          0,\n          2,\n          2,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          2,\n          2,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 20 ? Math.floor(this.frame) * 2 : 0),\n        this.tileY,\n        2,\n        4,\n        this.x - this.drawX,\n        this.y - 2.5 - this.drawY,\n        2,\n        4,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta, GameConstants.TILESIZE * 0.5, GameConstants.TILESIZE * -1);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta, GameConstants.TILESIZE * 0.5, GameConstants.TILESIZE * -1);\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(delta, this.health, this.maxHealth, this.x + 0.5, this.y, true);\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n\n  dropLoot = () => {\n    let dropOffsets = [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ];\n    for (let i = 0; i < this.drops.length; i++) {\n      this.drops[i].level = this.level;\n      this.drops[i].x = this.x + dropOffsets[i].x;\n      this.drops[i].y = this.y + dropOffsets[i].y;\n      this.level.items.push(this.drops[i]);\n    }\n  };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Candle } from \"../item/candle\";\n\nexport class BishopEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(\n    level: Level,\n    game: Game,\n    x: number,\n    y: number,\n    rand: () => number,\n    drop?: Item\n  ) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 23;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.005) this.drop = new Candle(this.level, 0, 0);\n      else if (dropProb < 0.04) this.drop = new GreenGem(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Enemy): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.level.enemies) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.level.levelArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.level.levelArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(\n        this.level,\n        this.x + 0.5,\n        this.y + 0.5,\n        this.deathParticleColor\n      );\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID])\n              this.alertTicks = 1;\n            this.level.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y - 1)\n            );\n            this.level.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y + 1)\n            );\n            this.level.hitwarnings.push(\n              new HitWarning(this.game, this.x + 1, this.y - 1)\n            );\n            this.level.hitwarnings.push(\n              new HitWarning(this.game, this.x - 1, this.y + 1)\n            );\n          }\n        }\n      } else if (this.seenPlayer) {\n        if (this.level.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.level.enemies) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n            /*disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n          disablePositions.push({ x: oldX, y: oldY - 1} as astar.Position);*/\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                (this.level.levelArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n          let grid = [];\n          for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n              if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                grid[x][y] = this.level.levelArray[x][y];\n              else grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            true, //diagonals\n            true, //diagonalsOnly\n            undefined,\n            undefined,\n            undefined,\n            false //diagonalsOmni\n          );\n          if (moves.length > 0) {\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n\n            let hitPlayer = false;\n            for (const i in this.game.players) {\n              if (\n                this.game.levels[this.game.players[i].levelID] === this.level &&\n                this.game.players[i].x === moveX &&\n                this.game.players[i].y === moveY\n              ) {\n                this.game.players[i].hurt(this.hit());\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                if (\n                  this.game.players[i] ===\n                  this.game.players[this.game.localPlayerID]\n                )\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              }\n            }\n            if (!hitPlayer) {\n              //if ()\n              this.tryMove(moveX, moveY);\n              this.drawX = this.x - oldX;\n              this.drawY = this.y - oldY;\n              /*if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n              else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n              else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n              else if (this.y < oldY) this.direction = EnemyDirection.UP;*/\n            }\n          }\n\n          this.level.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y - 1)\n          );\n          this.level.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y + 1)\n          );\n          this.level.hitwarnings.push(\n            new HitWarning(this.game, this.x + 1, this.y - 1)\n          );\n          this.level.hitwarnings.push(\n            new HitWarning(this.game, this.x - 1, this.y + 1)\n          );\n        }\n\n        let targetPlayerOffline =\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\n          -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (\n              distance <= 4 &&\n              (targetPlayerOffline ||\n                distance < this.playerDistance(this.targetPlayer))\n            ) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID])\n                  this.alertTicks = 1;\n                this.level.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y - 1)\n                );\n                this.level.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y + 1)\n                );\n                this.level.hitwarnings.push(\n                  new HitWarning(this.game, this.x + 1, this.y - 1)\n                );\n                this.level.hitwarnings.push(\n                  new HitWarning(this.game, this.x - 1, this.y + 1)\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { HitWarning } from \"../hitWarning\";\nimport { Coin } from \"../item/coin\";\nimport { Door } from \"../tile/door\";\nimport { BottomDoor } from \"../tile/bottomDoor\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SideDoor } from \"../tile/sidedoor\";\nimport { Random } from \"../random\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Item } from \"../item/item\";\n\nexport enum ChargeEnemyState {\n  IDLE,\n  ALERTED,\n  CHARGING,\n}\n\nexport class ChargeEnemy extends Enemy {\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  ticks: number;\n  frame: number;\n  state: ChargeEnemyState;\n  trailFrame: number;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 13;\n    this.tileY = 8;\n    this.trailFrame = 0;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    this.state = ChargeEnemyState.IDLE;\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.level, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n  hit = (): number => {\n    return 1;\n  };\n\n  canMoveOver = (x: number, y: number): boolean => {\n    for (const e of this.level.enemies) {\n      if (e !== this && x === e.x && y === e.y) return false;\n    }\n    let t = this.level.levelArray[x][y];\n    return !(t.isSolid() || t instanceof Door);\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (this.state === ChargeEnemyState.IDLE) {\n        let blocked = false;\n        let dx = 0;\n        let dy = 0;\n        for (const i in this.game.players) {\n          if (this.x === this.game.players[i].x) {\n            if (this.y < this.game.players[i].y) dy = 1;\n            else dy = -1;\n            for (let yy = this.y; yy !== this.game.players[i].y; yy += dy) {\n              if (!this.canMoveOver(this.x, yy)) blocked = true;\n            }\n          } else if (this.y === this.game.players[i].y) {\n            if (this.x < this.game.players[i].x) dx = 1;\n            else dx = -1;\n            for (let xx = this.x; xx !== this.game.players[i].x; xx += dx) {\n              if (!this.canMoveOver(xx, this.y)) blocked = true;\n            }\n          }\n          if ((dx !== 0 || dy !== 0) && !blocked) {\n            this.state = ChargeEnemyState.ALERTED;\n            this.targetX = this.x;\n            this.targetY = this.y;\n            while (this.canMoveOver(this.targetX + dx, this.targetY + dy)) {\n              this.targetX += dx;\n              this.targetY += dy;\n              if (\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x - 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x + 1 &&\n                  this.targetY === this.game.players[i].y) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y - 1) ||\n                (this.targetX === this.game.players[i].x &&\n                  this.targetY === this.game.players[i].y + 1)\n              )\n                this.level.hitwarnings.push(\n                  new HitWarning(this.game, this.targetX, this.targetY)\n                );\n            }\n            this.visualTargetX = this.targetX + 0.5 * dx;\n            this.visualTargetY = this.targetY + 0.5 * dy;\n            if (dy === 1) this.visualTargetY += 0.65;\n            if (dx > 0) this.direction = EnemyDirection.RIGHT;\n            else if (dx < 0) this.direction = EnemyDirection.LEFT;\n            else if (dy < 0) this.direction = EnemyDirection.UP;\n            else if (dy > 0) this.direction = EnemyDirection.DOWN;\n            break;\n          }\n        }\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.state = ChargeEnemyState.CHARGING;\n        this.trailFrame = 0;\n\n        for (const i in this.game.players) {\n          if (\n            (this.y === this.game.players[i].y &&\n              ((this.x < this.game.players[i].x &&\n                this.game.players[i].x <= this.targetX) ||\n                (this.targetX <= this.game.players[i].x &&\n                  this.game.players[i].x < this.x))) ||\n            (this.x === this.game.players[i].x &&\n              ((this.y < this.game.players[i].y &&\n                this.game.players[i].y <= this.targetY) ||\n                (this.targetY <= this.game.players[i].y &&\n                  this.game.players[i].y < this.y)))\n          ) {\n            this.game.players[i].hurt(this.hit());\n          }\n        }\n\n        this.startX = this.x;\n        this.startY = this.y;\n        this.drawX = this.targetX - this.x;\n        this.drawY = this.targetY - this.y;\n        this.x = this.targetX;\n        this.y = this.targetY;\n      } else if (this.state === ChargeEnemyState.CHARGING) {\n        this.state = ChargeEnemyState.IDLE;\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (\n        (this.state === ChargeEnemyState.CHARGING &&\n          Math.abs(this.drawX) > 0.1) ||\n        Math.abs(this.drawY) > 0.1\n      ) {\n        GenericParticle.spawnCluster(\n          this.level,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"black\"\n        );\n        GenericParticle.spawnCluster(\n          this.level,\n          this.x - this.drawX + 0.5,\n          this.y - this.drawY + 0.5,\n          \"white\"\n        );\n      }\n\n      if (this.state === ChargeEnemyState.CHARGING) {\n        this.trailFrame += 0.01 * delta;\n        let t = this.trailFrame;\n\n        if (t >= 0 && t <= 1) {\n          Game.ctx.strokeStyle = \"white\";\n          if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 1 - t;\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n          Game.ctx.beginPath();\n          Game.ctx.moveTo(\n            (this.startX + 0.5) * GameConstants.TILESIZE,\n            (this.startY + 0.5) * GameConstants.TILESIZE\n          );\n          Game.ctx.lineCap = \"round\";\n          Game.ctx.lineTo(\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE\n          );\n          Game.ctx.stroke();\n          Game.ctx.globalAlpha = 1;\n        }\n      }\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      if (this.state === ChargeEnemyState.IDLE) {\n        this.drawSleepingZs(delta);\n      } else if (this.state === ChargeEnemyState.ALERTED) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true\n    );\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n\n    if (this.state === ChargeEnemyState.ALERTED) {\n      this.trailFrame += 0.4 * delta;\n\n      if (Math.floor(this.trailFrame) % 2 === 0) {\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\n        if (this.direction === EnemyDirection.LEFT) startX -= 3;\n        else if (this.direction === EnemyDirection.RIGHT) startX += 3;\n        else if (this.direction === EnemyDirection.DOWN) startY += 2;\n        else if (this.direction === EnemyDirection.UP) startY -= 8;\n\n        Game.ctx.strokeStyle = \"white\";\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\n        Game.ctx.beginPath();\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\n        Game.ctx.lineCap = \"round\";\n        Game.ctx.lineTo(\n          Math.round((this.visualTargetX + 0.5) * GameConstants.TILESIZE),\n          Math.round((this.visualTargetY - 0.25) * GameConstants.TILESIZE)\n        );\n        Game.ctx.stroke();\n        Game.ctx.globalAlpha = 1;\n      }\n    }\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Level } from \"../level\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { Sound } from \"../sound\";\nimport { RedGem } from \"../item/redgem\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { GameState } from \"../gameState\";\nimport { EntityType } from \"./enemy\";\n\nexport class Chest extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number) {\n    super(level, game, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.health = 1;\n    this.entityType = EntityType.Chest;\n\n    let drop = Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4], rand);\n\n    switch (drop) {\n      case 1:\n        this.drop = new Heart(this.level, this.x, this.y);\n        break;\n      case 2:\n        this.drop = new GreenGem(this.level, this.x, this.y);\n        break;\n      case 3:\n        this.drop = new RedGem(this.level, this.x, this.y);\n        break;\n      case 4:\n        this.drop = new BlueGem(this.level, this.x, this.y);\n        break;\n      case 5:\n        this.drop = new Key(this.level, this.x, this.y);\n        break;\n      case 6:\n        this.drop = new Armor(this.level, this.x, this.y);\n        break;\n    }\n  }\n\n  kill = () => {\n    if (this.level === this.game.level) Sound.chest();\n\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n\n    this.level.items.push(this.drop);\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Level } from \"../level\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coal } from \"../item/coal\";\nimport { Sound } from \"../sound\";\nimport { Inventory } from \"../inventory\";\nimport { Weapon } from \"../weapon/weapon\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { Player } from \"../player\";\nimport { ItemState, ItemType } from \"../gameState\";\n\nexport class CoalResource extends Resource {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;    \n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n\n    if (this.level === this.game.level) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.level === this.game.level) Sound.breakRock();\n\n    this.dead = true;\n\n    this.level.items.push(new Coal(this.level, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./enemy\";\n\nexport class Crate extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.pushable = true;\n    this.entityType = EntityType.Prop\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#d9a066\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Level } from \"../level\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound\";\nimport { GameState } from \"../gameState\";\n\nexport class EmeraldResource extends Resource {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 14;\n    this.tileY = 0;\n    this.health = 3;\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n\n    if (this.level === this.game.level) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.level === this.game.level) Sound.breakRock();\n\n    this.dead = true;\n\n    this.level.items.push(new GreenGem(this.level, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Bones } from \"../tile/bones\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { Floor } from \"../tile/floor\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { HealthBar } from \"../healthbar\";\nimport { Drawable } from \"../drawable\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport enum EnemyDirection {\n  DOWN = 0,\n  UP = 1,\n  RIGHT = 2,\n  LEFT = 3,\n}\n\nexport enum EntityType {\n  Enemy,\n  Friendly,\n  Resource,\n  Prop,\n  Chest,\n}\n\nexport class Enemy extends Drawable {\n  level: Level;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  direction: EnemyDirection;\n  drawX: number;\n  drawY: number;\n  dead: boolean;\n  game: Game;\n  health: number;\n  maxHealth: number;\n  tileX: number;\n  tileY: number;\n  hasShadow: boolean;\n  skipNextTurns: number;\n  //TODO: change these to functions? for enemies that switch states\n  destroyable: boolean; // can the player destroy this enemy?\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\n  interactable: boolean; // can the player interact\n  deathParticleColor: string;\n  healthBar: HealthBar;\n  drop: Item;\n  sleepingZFrame = 0;\n  alertTicks: number;\n  exclamationFrame: number;\n  lastX: number;\n  lastY: number;\n  entityType: EntityType;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super();\n\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.game = game;\n    this.drawX = 0;\n    this.drawY = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.hasShadow = true;\n    this.skipNextTurns = 0;\n    this.direction = EnemyDirection.DOWN;\n    this.destroyable = true;\n    this.pushable = false;\n    this.chainPushable = true;\n    this.interactable = false;\n    this.deathParticleColor = \"#ff00ff\";\n    this.healthBar = new HealthBar();\n    this.alertTicks = 0;\n    this.exclamationFrame = 0;\n    this.lastX = x;\n    this.lastY = y;\n    this.entityType = EntityType.Enemy;\n  }\n\n  tryMove = (x: number, y: number) => {\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\n      return (\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\n      );\n    };\n    let enemyCollide = (enemy: Enemy): boolean => {\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\n      return true;\n    };\n    for (const e of this.level.enemies) {\n      if (e !== this && enemyCollide(e)) {\n        return;\n      }\n    }\n    for (const i in this.game.players) {\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\n        return;\n      }\n    }\n    let tiles = [];\n    for (let xx = 0; xx < this.w; xx++) {\n      for (let yy = 0; yy < this.h; yy++) {\n        if (!this.level.levelArray[x + xx][y + yy].isSolid()) {\n          tiles.push(this.level.levelArray[x + xx][y + yy]);\n        } else {\n          return;\n        }\n      }\n    }\n    for (let tile of tiles) {\n      tile.onCollideEnemy(this);\n    }\n    this.x = x;\n    this.y = y;\n  };\n\n  hit = (): number => {\n    return 0;\n  };\n\n  hurtCallback = () => {};\n\n  pointIn = (x: number, y: number): boolean => {\n    return (\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\n    );\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  interact = (player: Player) => {};\n\n  dropLoot = () => {\n    this.drop.level = this.level;\n    if (!this.level.levelArray[this.x][this.y].isSolid()) {\n      this.drop.x = this.x;\n      this.drop.y = this.y;\n    } else if (this.level.levelArray[this.x][this.y].isSolid()) {\n      this.drop.x = this.lastX;\n      this.drop.y = this.lastY;\n    }\n    this.level.items.push(this.drop);\n    this.drop.onDrop();\n  };\n\n  kill = () => {\n    if (this.level.levelArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.level, this.x, this.y);\n      b.skin = this.level.levelArray[this.x][this.y].skin;\n      this.level.levelArray[this.x][this.y] = b;\n    }\n\n    this.killNoBones();\n  };\n\n  killNoBones = () => {\n    this.dead = true;\n    GenericParticle.spawnCluster(\n      this.level,\n      this.x + 0.5,\n      this.y + 0.5,\n      this.deathParticleColor\n    );\n    this.level.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n\n  shadeAmount = () => {\n    return this.level.softVis[this.x][this.y];\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  nearestPlayer = (): [number, Player] | false => {\n    const maxDistance = 138291380921; // pulled this straight outta my ass\n    let closestDistance = maxDistance;\n    let closestPlayer = null;\n    for (const i in this.game.players) {\n      if (this.game.levels[this.game.players[i].levelID] === this.level) {\n        let distance = this.playerDistance(this.game.players[i]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestPlayer = this.game.players[i];\n        }\n      }\n    }\n\n    if (closestDistance === maxDistance) return false;\n    else return [closestDistance, closestPlayer];\n  };\n\n  playerDistance = (player: Player): number => {\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\n  };\n\n  facePlayer = (player: Player) => {\n    let dx = player.x - this.x;\n    let dy = player.y - this.y;\n    if (Math.abs(dx) === Math.abs(dy)) {\n      // just moved, already facing player\n    } else if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx > 0) this.direction = EnemyDirection.RIGHT;\n      if (dx < 0) this.direction = EnemyDirection.LEFT;\n    } else {\n      if (dy > 0) this.direction = EnemyDirection.DOWN;\n      if (dy < 0) this.direction = EnemyDirection.UP;\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  tick = () => {};\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y - this.drawY;\n\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x,\n      this.y,\n      true\n    );\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.sleepingZFrame += delta;\n\n    let numZs = 2;\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\n    t -= Math.floor(t);\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\n    for (let off = numZs - 1; off >= 0; off--) {\n      let yoff = (t + off) * 7;\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\n\n      let xoff = 0;\n      if (off === 0) xoff = 1;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n      if (t >= 0.33 && t < 0.66) xoff = off;\n\n      let width = Game.measureText(\"Z\").width;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\n      Game.fillTextOutline(\n        \"Z\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\n        GameConstants.OUTLINE,\n        \"white\"\n      );\n      Game.ctx.globalAlpha = 1;\n    }\n  };\n\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\n    this.exclamationFrame += delta;\n\n    let yoff: number | false = 0;\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\n    else yoff = yoffs[this.exclamationFrame];\n\n    let width = Game.measureText(\"!\").width;\n    Game.ctx.globalAlpha = 1;\n    if (yoff !== false) {\n      Game.fillTextOutline(\n        \"!\",\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\n        GameConstants.OUTLINE,\n        GameConstants.WARNING_RED\n      );\n    }\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Level } from \"../level\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Resource } from \"./resource\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Gold } from \"../item/gold\";\nimport { Sound } from \"../sound\";\n\nexport class GoldResource extends Resource {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n    this.health = 2;\n  }\n\n  hurtCallback = () => {\n    if (this.level === this.game.level) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.level === this.game.level) Sound.breakRock();\n\n    this.dead = true;\n\n    this.level.items.push(new Gold(this.level, this.x, this.y));\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#fbf236\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { astar } from \"../astarclass\";\nimport { HitWarning } from \"../hitWarning\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Coin } from \"../item/coin\";\nimport { Player } from \"../player\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Item } from \"../item/item\";\n\nexport class KnightEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  targetPlayer: Player;\n  aggro: boolean;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 9;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n    this.lastX = this.x;\n    this.lastY = this.y;\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = rand();\n      if (dropProb < 0.025) this.drop = new DualDagger(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.level.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.level.enemies) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                  (this.level.levelArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n                if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                  grid[x][y] = this.level.levelArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.levels[this.game.players[i].levelID] === this.level &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n                else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n                else if (this.y < oldY) this.direction = EnemyDirection.UP;\n              }\n            }\n          } else {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 8;\n      } else {\n        this.tileX = 4;\n        this.tileY = 0;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY + (this.tileX === 4 ? 0.1875 : 0),\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Shrooms } from \"../item/shrooms\";\nimport { EntityType } from \"./enemy\";\n\nexport class Mushrooms extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 1;\n    this.tileX = 9;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.Prop\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ac3232\");\n\n    this.level.items.push(new Shrooms(this.level, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { EntityType } from \"./enemy\";\n\nexport class Pot extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 1;\n    this.tileX = 11;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.Prop\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ce736a\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Item } from \"../item/item\";\nimport { Coin } from \"../item/coin\";\nimport { EntityType } from \"./enemy\";\n\nexport class PottedPlant extends Enemy {\n  drop: Item;\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 2;\n    this.tileX = 3;\n    this.tileY = 0;\n    this.hasShadow = false;\n    this.chainPushable = false;\n    this.entityType = EntityType.Prop\n    if (drop) this.drop = drop;\n    \n    else {\n      let dropProb = rand();\n      if (dropProb < 0.025) this.drop = new Heart(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#5d9250\");\n  };\n\n  kill = () => {\n    this.dead = true;\n    this.killNoBones();\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ce736a\");\n  };\n  killNoBones = () => {\n    this.dead = true;\n    this.dropLoot();\n  };\n  \n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      if (this.health <= 1) \n        this.tileX = 2;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n\n  dropLoot = () => {\n    this.drop.level = this.level;\n    this.drop.x = this.x;\n    this.drop.y = this.y;\n    this.level.items.push(this.drop);\n  };\n}\n","import { Item } from \"../item/item\";\nimport { Game } from \"../game\";\nimport { Key } from \"../item/key\";\nimport { Level } from \"../level\";\nimport { Heart } from \"../item/heart\";\nimport { Armor } from \"../item/armor\";\nimport { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Player } from \"../player\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\nimport { Spellbook } from \"../weapon/spellbook\";\nimport { EntityType } from \"./enemy\";\n\nexport class Resource extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n    this.health = 1;\n    this.chainPushable = false;\n    this.entityType = EntityType.Resource\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (\n      (playerHitBy.inventory.getWeapon().canMine = false)\n    )\n      return;\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  kill = () => {\n    this.dead = true;\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Player } from \"../player\";\nimport { Sound } from \"../sound\";\nimport { Stone } from \"../item/stone\";\nimport { Resource } from \"./resource\";\n\nexport class Rock extends Resource {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 2;\n    this.tileX = 8;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.chainPushable = false;\n  }\n\n  hurtCallback = () => {\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n\n    if (this.level === this.game.level) Sound.mine();\n  };\n\n  kill = () => {\n    if (this.level === this.game.level) Sound.breakRock();\n\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#9badb7\");\n\n    this.level.items.push(new Stone(this.level, this.x, this.y));\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      this.drawX += -0.5 * this.drawX;\n      this.drawY += -0.5 * this.drawY;\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Heart } from \"../item/heart\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class Rook extends Enemy {\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, game, x, y);\n    this.level = level;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 14;\n    this.tileY = 2;\n    this.hasShadow = false;\n    this.pushable = true;\n  }\n\n  kill = () => {\n    this.dead = true;\n\n    GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#d9a066\");\n  };\n  killNoBones = () => {\n    this.kill();\n  };\n\n  draw = (delta: number) => {\n    // not inherited because it doesn't have the 0.5 offset\n    if (!this.dead) {\n      Game.drawObj(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { DeathParticle } from \"../particle/deathParticle\";\n\nexport class SkullEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  ticksSinceFirstHit: number;\n  flashingFrame: number;\n  targetPlayer: Player;\n  readonly REGEN_TICKS = 5;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 2;\n    this.maxHealth = 2;\n    this.tileX = 5;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.ticksSinceFirstHit = 0;\n    this.flashingFrame = 0;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = rand();\n      if (dropProb < 0.005) this.drop = new Spear(this.level, 0, 0);\n      else if (dropProb < 0.04) this.drop = new RedGem(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.ticksSinceFirstHit = 0;\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (this.health <= 1) {\n        this.ticksSinceFirstHit++;\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\n          this.health = 2;\n        }\n      } else {\n        this.ticks++;\n        if (!this.seenPlayer) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4) {\n              this.targetPlayer = player;\n              this.facePlayer(player);\n              this.seenPlayer = true;\n              if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n              this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n              this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n              this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n              this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            }\n          }\n        }\n        else if (this.seenPlayer) {\n          if (this.level.playerTicked === this.targetPlayer) {\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\n            let oldX = this.x;\n            let oldY = this.y;\n\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.level.enemies) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                  (this.level.levelArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n                if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                  grid[x][y] = this.level.levelArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let moveX = moves[0].pos.x;\n              let moveY = moves[0].pos.y;\n\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.levels[this.game.players[i].levelID] === this.level && this.game.players[i].x === moveX && this.game.players[i].y === moveY) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n                else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n                else if (this.y < oldY) this.direction = EnemyDirection.UP;\n              }\n            }\n\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n\n          let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n          if (!this.aggro || targetPlayerOffline) {\n            let p = this.nearestPlayer();\n            if (p !== false) {\n              let [distance, player] = p;\n              if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n                if (player !== this.targetPlayer) {\n                  this.targetPlayer = player;\n                  this.facePlayer(player);\n                  if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.tileX = 5;\n      this.tileY = 8;\n      if (this.health <= 1) {\n        this.tileX = 3;\n        this.tileY = 0;\n        if (this.ticksSinceFirstHit >= 3) {\n          this.flashingFrame += 0.1 * delta;\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\n            this.tileX = 2;\n          }\n        }\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { astar } from \"../astarclass\";\nimport { HitWarning } from \"../hitWarning\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Coin } from \"../item/coin\";\nimport { Player } from \"../player\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Item } from \"../item/item\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class SlimeEnemy extends Enemy {\n  ticks: number;\n  frame: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 8;\n    this.tileY = 4;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.healthBar.hurt();\n\n    this.health -= damage;\n    if (this.health <= 0) this.kill();\n    else this.hurtCallback();\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        const result = this.nearestPlayer();\n        if (result !== false) {\n          let [distance, p] = result;\n          if (distance < 4) {\n            this.seenPlayer = true;\n            this.targetPlayer = p;\n            this.facePlayer(p);\n            if (p === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.level.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          this.ticks++;\n          if (this.ticks % 2 === 1) {\n            let oldX = this.x;\n            let oldY = this.y;\n            let disablePositions = Array<astar.Position>();\n            for (const e of this.level.enemies) {\n              if (e !== this) {\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n              }\n            }\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n                if (\n                  this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                  (this.level.levelArray[xx][yy] as SpikeTrap).on\n                ) {\n                  // don't walk on active spiketraps\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\n                }\n              }\n            }\n            let grid = [];\n            for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n              grid[x] = [];\n              for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n                if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                  grid[x][y] = this.level.levelArray[x][y];\n                else\n                  grid[x][y] = false;\n              }\n            }\n            let moves = astar.AStar.search(\n              grid,\n              this,\n              this.targetPlayer,\n              disablePositions\n            );\n            if (moves.length > 0) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (\n                  this.game.levels[this.game.players[i].levelID] === this.level &&\n                  this.game.players[i].x === moves[0].pos.x &&\n                  this.game.players[i].y === moves[0].pos.y\n                ) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                  hitPlayer = true;\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n                else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n                else if (this.y < oldY) this.direction = EnemyDirection.UP;\n              }\n            }\n          } else {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.ticks % 2 === 0) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.ticks % 2 === 0) {\n        this.tileX = 9;\n        this.tileY = 4;\n      } else {\n        this.tileX = 8;\n        this.tileY = 4;\n      }\n\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX,\n        this.tileY + this.direction,\n        1,\n        1,\n        this.x - this.drawX,\n        this.y - this.drawY,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\n    }\n  };\n\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { astar } from \"../astarclass\";\nimport { Heart } from \"../item/heart\";\nimport { Floor } from \"../tile/floor\";\nimport { Bones } from \"../tile/bones\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GreenGem } from \"../item/greengem\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { SkullEnemy } from \"./skullEnemy\";\nimport { EnemySpawnAnimation } from \"../projectile/enemySpawnAnimation\";\nimport { RedGem } from \"../item/redgem\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { KnightEnemy } from \"./knightEnemy\";\nimport { WizardEnemy } from \"./wizardEnemy\";\n\nexport class Spawner extends Enemy {\n  ticks: number;\n  seenPlayer: boolean;\n  enemySpawnType: number;\n  rand: () => number;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.health = 4;\n    this.maxHealth = 4;\n    this.tileX = 6;\n    this.tileY = 4;\n    this.seenPlayer = true;\n    this.enemySpawnType = Game.randTable([1, 2, 2, 2, 2, 3], rand);\n    this.deathParticleColor = \"#ffffff\";\n\n    this.rand = rand;\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.tileX = 6;\n      if (this.ticks % 8 === 0) {\n        const positions = this.level.getEmptyTiles().filter(t => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1);\n        if (positions.length > 0) {\n          this.tileX = 7;\n\n          const position = Game.randTable(positions, this.rand);\n\n          let spawned;\n          switch (this.enemySpawnType) {\n            case 1:\n              spawned = new KnightEnemy(this.level, this.game, position.x, position.y, this.rand);\n              break;\n            case 2:\n              spawned = new SkullEnemy(this.level, this.game, position.x, position.y, this.rand);\n              break;\n            case 3:\n              spawned = new WizardEnemy(this.level, this.game, position.x, position.y, this.rand);\n              break;\n          }\n          this.level.projectiles.push(\n            new EnemySpawnAnimation(this.level, spawned, position.x, position.y)\n          );\n          this.level.hitwarnings.push(new HitWarning(this.game, position.x, position.y));\n        }\n      }\n      this.ticks++;\n    }\n  };\n\n  dropLoot = () => {\n    this.level.items.push(new BlueGem(this.level, this.x, this.y));\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Enemy } from \"./enemy\";\nimport { Item } from \"../item/item\";\nimport { Key } from \"../item/key\";\nimport { Coin } from \"../item/coin\";\nimport { Coal } from \"../item/coal\";\nimport { GreenGem } from \"../item/greengem\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Shotgun } from \"../weapon/shotgun\";\nimport { Dagger } from \"../weapon/dagger\";\nimport { Armor } from \"../item/armor\";\nimport { Heart } from \"../item/heart\";\nimport { Spear } from \"../weapon/spear\";\nimport { Gold } from \"../item/gold\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { Lantern } from \"../item/lantern\";\nimport { RedGem } from \"../item/redgem\";\nimport { EntityType } from \"./enemy\";\n\n\nlet OPEN_TIME = 150;\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet FULL_OUTLINE = \"white\";\n\nexport class VendingMachine extends Enemy {\n  playerOpened: Player;\n  open = false;\n  openTime = 0;\n  costItems: Array<Item>;\n  item: Item;\n  isInf = false;\n  quantity = 1;\n  buyAnimAmount = 0;\n  rand: () => number;\n\n  constructor(level: Level, game: Game, x: number, y: number, item: Item, rand: () => number) {\n    super(level, game, x, y);\n\n    this.rand = rand;\n\n    this.destroyable = false;\n    this.pushable = false;\n    this.chainPushable = false;\n    this.interactable = true;\n\n    this.costItems = [];\n    this.entityType = EntityType.Friendly\n\n    this.item = item;\n    if (this.item instanceof Shotgun) {\n      let g = new BlueGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Heart) {\n      let c = new Coin(level, 0, 0);\n      c.stackCount = 10;\n      this.costItems = [c];\n      this.isInf = true;\n    } else if (this.item instanceof Spear) {\n      let g = new GreenGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Armor) {\n      let g = new Gold(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof DualDagger) {\n      let g = new RedGem(level, 0, 0);\n      g.stackCount = Game.randTable([5, 5, 6, 7], this.rand);\n      this.costItems = [g];\n    } else if (this.item instanceof Lantern) {\n      let g = new Coal(level, 0, 0);\n      g.stackCount = Game.randTable([25, 26, 27, 28], this.rand);\n      this.costItems = [g];\n    }\n  }\n\n  interact = (player: Player) => {\n    if (this.isInf || this.quantity > 0) {\n      if (this.open) this.playerOpened.openVendingMachine = null;\n      this.open = true;\n      this.playerOpened = player;\n      this.openTime = Date.now();\n      if (this.playerOpened.openVendingMachine && this.playerOpened.openVendingMachine !== this)\n        this.playerOpened.openVendingMachine.close();\n      this.playerOpened.openVendingMachine = this;\n    }\n  };\n\n  close = () => {\n    this.open = false;\n    this.playerOpened.openVendingMachine = null;\n  };\n\n  space = () => {\n    if (this.open) {\n      // check if player can pay\n      for (const i of this.costItems) {\n        if (!this.playerOpened.inventory.hasItemCount(i)) return;\n      }\n\n      for (const i of this.costItems) {\n        this.playerOpened.inventory.subtractItemCount(i);\n      }\n\n      let x, y;\n      do {\n        x = Game.rand(this.x - 1, this.x + 1, this.rand);\n        y = Game.rand(this.y - 1, this.y + 1, this.rand);\n      } while ((x === this.x && y === this.y) || this.level.levelArray[x][y].isSolid() || this.level.enemies.some(e => e.x === x && e.y === y));\n\n      let newItem = new (this.item.constructor as { new(): Item })();\n      newItem = newItem.constructor(this.level, x, y);\n      this.level.items.push(newItem);\n\n      if (!this.isInf) {\n        this.quantity--;\n        if (this.quantity <= 0) this.close();\n      }\n\n      this.buyAnimAmount = 0.99;\n      if (this.playerOpened === this.game.players[this.game.localPlayerID]) this.game.shakeScreen(0, 4);\n    }\n  };\n\n  draw = (delta: number) => {\n    let tileX = 19;\n    if (!this.isInf && this.quantity === 0) tileX = 20;\n    Game.drawObj(\n      tileX,\n      0,\n      1,\n      2,\n      this.x,\n      this.y - 1,\n      1,\n      2,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n\n    if (this.open && this.playerOpened === this.game.players[this.game.localPlayerID]) {\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3; // highlighted growth\n      let ob = 1; // outer border\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\n      let height = s + 2 * b + g - g;\n\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      for (let x = 0; x < this.costItems.length + 2; x++) {\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\n          Math.round(cy - 0.5 * height),\n          Math.round(s + 2 * b),\n          Math.round(s + 2 * b)\n        );\n        if (x !== this.costItems.length) {\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(cy - 0.5 * height + b),\n            Math.round(s),\n            Math.round(s)\n          );\n        }\n      }\n\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.costItems.length + 2; i++) {\n          let drawX = Math.round(\n            cx -\n            0.5 * width +\n            i * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n          );\n          let drawY = Math.round(\n            cy - 0.5 * height + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          if (i < this.costItems.length) {\n            let a = 1;\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i])) a = 0.15;\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\n          } else if (i === this.costItems.length) {\n            Game.drawFX(0, 1, 1, 1, drawXScaled, drawYScaled, 1, 1);\n          } else if (i === this.costItems.length + 1) {\n            this.item.drawIcon(delta, drawXScaled, drawYScaled);\n          }\n        }\n      }\n      this.buyAnimAmount *= this.buyAnimAmount;\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = this.buyAnimAmount;\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(cx - 0.5 * width) - ob,\n        Math.round(cy - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n}\n","import { Enemy } from \"./enemy\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { astar } from \"../astarclass\";\nimport { Heart } from \"../item/heart\";\nimport { Floor } from \"../tile/floor\";\nimport { Bones } from \"../tile/bones\";\nimport { DeathParticle } from \"../particle/deathParticle\";\nimport { WizardTeleportParticle } from \"../particle/wizardTeleportParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { WizardFireball } from \"../projectile/wizardFireball\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Player } from \"../player\";\nimport { Coin } from \"../item/coin\";\nimport { BlueGem } from \"../item/bluegem\";\nimport { Random } from \"../random\";\nimport { Item } from \"../item/item\";\n\nexport enum WizardState {\n  idle,\n  attack,\n  justAttacked,\n  teleport,\n}\n\nexport class WizardEnemy extends Enemy {\n  ticks: number;\n  state: WizardState;\n  frame: number;\n  seenPlayer: boolean;\n  rand: () => number;\n  readonly ATTACK_RADIUS = 5;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.health = 1;\n    this.tileX = 6;\n    this.tileY = 0;\n    this.frame = 0;\n    this.state = WizardState.attack;\n    this.seenPlayer = false;\n    this.alertTicks = 0;\n    this.deathParticleColor = \"#ffffff\";\n    this.rand = rand;\n\n    if (drop) this.drop = drop;\n    else {\n      if (this.rand() < 0.02) this.drop = new BlueGem(this.level, this.x, this.y);\n      else this.drop = new Coin(this.level, this.x, this.y);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  withinAttackingRangeOfPlayer = (): boolean => {\n    let withinRange = false;\n    for (const i in this.game.players) {\n      if ((this.x - this.game.players[i].x) ** 2 + (this.y - this.game.players[i].y) ** 2 <=\n        this.ATTACK_RADIUS ** 2) {\n        withinRange = true;\n      }\n    }\n    return withinRange;\n  };\n\n  shuffle = a => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Random.rand() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.seenPlayer = true;\n            this.alertTicks = 1;\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\n        switch (this.state) {\n          case WizardState.attack:\n            if (this.level.getTile(this.x - 1, this.y) && !this.level.levelArray[this.x - 1][this.y].isSolid()) {\n              this.level.projectiles.push(new WizardFireball(this, this.x - 1, this.y));\n              if (this.level.getTile(this.x - 2, this.y) && !this.level.levelArray[this.x - 2][this.y].isSolid()) {\n                this.level.projectiles.push(new WizardFireball(this, this.x - 2, this.y));\n              }\n            }\n            if (this.level.getTile(this.x + 1, this.y) && !this.level.levelArray[this.x + 1][this.y].isSolid()) {\n              this.level.projectiles.push(new WizardFireball(this, this.x + 1, this.y));\n              if (this.level.getTile(this.x + 2, this.y) && !this.level.levelArray[this.x + 2][this.y].isSolid()) {\n                this.level.projectiles.push(new WizardFireball(this, this.x + 2, this.y));\n              }\n            }\n            if (this.level.getTile(this.x, this.y - 1) && !this.level.levelArray[this.x][this.y - 1].isSolid()) {\n              this.level.projectiles.push(new WizardFireball(this, this.x, this.y - 1));\n              if (this.level.getTile(this.x, this.y - 2) && !this.level.levelArray[this.x][this.y - 2].isSolid()) {\n                this.level.projectiles.push(new WizardFireball(this, this.x, this.y - 2));\n              }\n            }\n            if (this.level.getTile(this.x, this.y + 1) && !this.level.levelArray[this.x][this.y + 1].isSolid()) {\n              this.level.projectiles.push(new WizardFireball(this, this.x, this.y + 1));\n              if (this.level.getTile(this.x, this.y + 2) && !this.level.levelArray[this.x][this.y + 2].isSolid()) {\n                this.level.projectiles.push(new WizardFireball(this, this.x, this.y + 2));\n              }\n            }\n            this.state = WizardState.justAttacked;\n            break;\n          case WizardState.justAttacked:\n            this.state = WizardState.idle;\n            break;\n          case WizardState.teleport:\n            let oldX = this.x;\n            let oldY = this.y;\n            let min = 100000;\n            let bestPos;\n            let emptyTiles = this.shuffle(this.level.getEmptyTiles());\n            let optimalDist = Game.randTable([2, 2, 3, 3, 3, 3, 3], Random.rand);\n            // pick a random player to target\n            let player_ids = [];\n            for (const i in this.game.players) player_ids.push(i);\n            let target_player_id = Game.randTable(player_ids, Random.rand);\n            for (let t of emptyTiles) {\n              let newPos = t;\n              let dist =\n                Math.abs(newPos.x - this.game.players[target_player_id].x) + Math.abs(newPos.y - this.game.players[target_player_id].y);\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\n                min = dist;\n                bestPos = newPos;\n              }\n            }\n            this.tryMove(bestPos.x, bestPos.y);\n            this.drawX = this.x - oldX;\n            this.drawY = this.y - oldY;\n            this.frame = 0; // trigger teleport animation\n            this.level.particles.push(new WizardTeleportParticle(oldX, oldY));\n            if (this.withinAttackingRangeOfPlayer()) {\n              this.state = WizardState.attack;\n            } else {\n              this.state = WizardState.idle;\n            }\n            break;\n          case WizardState.idle:\n            this.state = WizardState.teleport;\n            break;\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      if (this.state === WizardState.attack) this.tileX = 7;\n      else this.tileX = 6;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      if (this.frame >= 0) {\n        Game.drawMob(\n          Math.floor(this.frame) + 6,\n          2,\n          1,\n          2,\n          this.x,\n          this.y - 1.5,\n          1,\n          2,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n        this.frame += 0.4 * delta;\n        if (this.frame > 11) this.frame = -1;\n      } else {\n        Game.drawMob(\n          this.tileX,\n          this.tileY,\n          1,\n          2,\n          this.x - this.drawX,\n          this.y - 1.5 - this.drawY,\n          1,\n          2,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      }\n      if (!this.seenPlayer) {\n        this.drawSleepingZs(delta);\n      }\n      if (this.alertTicks > 0) {\n        this.drawExclamation(delta);\n      }\n    }\n  };\n\n  kill = () => {\n    if (this.level.levelArray[this.x][this.y] instanceof Floor) {\n      let b = new Bones(this.level, this.x, this.y);\n      b.skin = this.level.levelArray[this.x][this.y].skin;\n      this.level.levelArray[this.x][this.y] = b;\n    }\n\n    this.dead = true;\n    this.level.particles.push(new DeathParticle(this.x, this.y));\n\n    this.dropLoot();\n  };\n\n}\n","import { Enemy, EnemyDirection } from \"./enemy\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Coin } from \"../item/coin\";\nimport { RedGem } from \"../item/redgem\";\nimport { Item } from \"../item/item\";\nimport { Spear } from \"../weapon/spear\";\nimport { DualDagger } from \"../weapon/dualdagger\";\nimport { GreenGem } from \"../item/greengem\";\nimport { Random } from \"../random\";\nimport { astar } from \"../astarclass\";\nimport { SpikeTrap } from \"../tile/spiketrap\";\nimport { Pickaxe } from \"../weapon/pickaxe\";\n\nexport class ZombieEnemy extends Enemy {\n  frame: number;\n  ticks: number;\n  seenPlayer: boolean;\n  aggro: boolean;\n  targetPlayer: Player;\n  drop: Item;\n\n  constructor(level: Level, game: Game, x: number, y: number, rand: () => number, drop?: Item) {\n    super(level, game, x, y);\n    this.ticks = 0;\n    this.frame = 0;\n    this.health = 1;\n    this.maxHealth = 1;\n    this.tileX = 17;\n    this.tileY = 8;\n    this.seenPlayer = false;\n    this.aggro = false;\n    this.deathParticleColor = \"#ffffff\";\n\n    if (drop) this.drop = drop;\n    else {\n      let dropProb = Random.rand();\n      if (dropProb < 0.025) this.drop = new Pickaxe(this.level, 0, 0);\n      else if (dropProb < 0.02) this.drop = new GreenGem(this.level, 0, 0);\n      else this.drop = new Coin(this.level, 0, 0);\n    }\n  }\n\n  hit = (): number => {\n    return 1;\n  };\n\n  hurt = (playerHitBy: Player, damage: number) => {\n    if (playerHitBy) {\n      this.aggro = true;\n      this.targetPlayer = playerHitBy;\n      this.facePlayer(playerHitBy);\n      if (playerHitBy === this.game.players[this.game.localPlayerID]) this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\n    }\n    this.health -= damage;\n    this.healthBar.hurt();\n    if (this.health <= 0) {\n      this.kill();\n    } else {\n      GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, this.deathParticleColor);\n    }\n  };\n\n  tick = () => {\n    this.lastX = this.x;\n    this.lastY = this.y;\n    if (!this.dead) {\n      if (this.skipNextTurns > 0) {\n        this.skipNextTurns--;\n        return;\n      }\n      this.ticks++;\n      if (!this.seenPlayer) {\n        let p = this.nearestPlayer();\n        if (p !== false) {\n          let [distance, player] = p;\n          if (distance <= 4) {\n            this.targetPlayer = player;\n            this.facePlayer(player);\n            this.seenPlayer = true;\n            if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n            /*this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));*/\n          }\n        }\n      }\n      else if (this.seenPlayer) {\n        if (this.level.playerTicked === this.targetPlayer) {\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\n          let oldX = this.x;\n          let oldY = this.y;\n\n          let disablePositions = Array<astar.Position>();\n          for (const e of this.level.enemies) {\n            if (e !== this) {\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\n            }\n          }\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\n              if (\n                this.level.levelArray[xx][yy] instanceof SpikeTrap &&\n                (this.level.levelArray[xx][yy] as SpikeTrap).on\n              ) {\n                // don't walk on active spiketraps\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\n              }\n            }\n          }\n\n          let grid = [];\n          for (let x = 0; x < this.level.roomX + this.level.width; x++) {\n            grid[x] = [];\n            for (let y = 0; y < this.level.roomY + this.level.height; y++) {\n              if (this.level.levelArray[x] && this.level.levelArray[x][y])\n                grid[x][y] = this.level.levelArray[x][y];\n              else\n                grid[x][y] = false;\n            }\n          }\n          let moves = astar.AStar.search(\n            grid,\n            this,\n            this.targetPlayer,\n            disablePositions,\n            false,\n            false,\n            true,\n            this.direction\n          );\n          if (moves.length > 0) {\n            let moveX = moves[0].pos.x;\n            let moveY = moves[0].pos.y;\n            let oldDir = this.direction;\n            let player = this.targetPlayer;\n            this.facePlayer(player);\n            if (moveX > oldX) this.direction = EnemyDirection.RIGHT;\n            else if (moveX < oldX) this.direction = EnemyDirection.LEFT;\n            else if (moveY > oldY) this.direction = EnemyDirection.DOWN;\n            else if (moveY < oldY) this.direction = EnemyDirection.UP;\n            if (oldDir == this.direction) {\n              let hitPlayer = false;\n              for (const i in this.game.players) {\n                if (this.game.levels[this.game.players[i].levelID] === this.level && this.game.players[i].x === moveX && this.game.players[i].y === moveY) {\n                  this.game.players[i].hurt(this.hit());\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\n                  if (this.game.players[i] === this.game.players[this.game.localPlayerID])\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n                }\n              }\n              if (!hitPlayer) {\n                this.tryMove(moveX, moveY);\n                this.drawX = this.x - oldX;\n                this.drawY = this.y - oldY;\n                if (this.x > oldX) this.direction = EnemyDirection.RIGHT;\n                else if (this.x < oldX) this.direction = EnemyDirection.LEFT;\n                else if (this.y > oldY) this.direction = EnemyDirection.DOWN;\n                else if (this.y < oldY) this.direction = EnemyDirection.UP;\n              }\n            }\n          }\n\n          if (this.direction == EnemyDirection.LEFT) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.RIGHT) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n            disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\n            disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.DOWN) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n          if (this.direction == EnemyDirection.UP) {\n            this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n            disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\n            disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\n          }\n        }\n\n        let targetPlayerOffline = Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !== -1;\n        if (!this.aggro || targetPlayerOffline) {\n          let p = this.nearestPlayer();\n          if (p !== false) {\n            let [distance, player] = p;\n            if (distance <= 4 && (targetPlayerOffline || distance < this.playerDistance(this.targetPlayer))) {\n              if (player !== this.targetPlayer) {\n                this.targetPlayer = player;\n                this.facePlayer(player);\n                if (player === this.game.players[this.game.localPlayerID]) this.alertTicks = 1;\n                if (this.direction == EnemyDirection.LEFT) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x - 1, this.y));\n                }\n                if (this.direction == EnemyDirection.RIGHT) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x + 1, this.y));\n                }\n                if (this.direction == EnemyDirection.DOWN) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y + 1));\n                }\n                if (this.direction == EnemyDirection.UP) {\n                  this.level.hitwarnings.push(new HitWarning(this.game, this.x, this.y - 1));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    if (!this.dead) {\n      this.frame += 0.1 * delta;\n      if (this.frame >= 4) this.frame = 0;\n\n      if (this.hasShadow)\n        Game.drawMob(\n          0,\n          0,\n          1,\n          1,\n          this.x - this.drawX,\n          this.y - this.drawY,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      Game.drawMob(\n        this.tileX + Math.floor(this.frame),\n        this.tileY + this.direction * 2,\n        1,\n        2,\n        this.x - this.drawX,\n        this.y - 1.5 - this.drawY,\n        1,\n        2,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n    if (!this.seenPlayer) {\n      this.drawSleepingZs(delta);\n    }\n    if (this.alertTicks > 0) {\n      this.drawExclamation(delta);\n    }\n  };\n\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Level } from \"./level\";\nimport { Player } from \"./player\";\nimport { Door } from \"./tile/door\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { BottomDoor } from \"./tile/bottomDoor\";\nimport { Input, InputEnum } from \"./input\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { SideDoor } from \"./tile/sidedoor\";\nimport { io } from \"socket.io-client\";\nimport { ServerAddress } from \"./serverAddress\";\nimport { TextBox } from \"./textbox\";\nimport { createGameState, GameState, loadGameState } from \"./gameState\";\nimport { Random } from \"./random\";\nimport { DoorDir } from \"./tile/door\";\n\nexport enum LevelState {\n  IN_LEVEL,\n  TRANSITIONING,\n  TRANSITIONING_LADDER,\n}\n\nexport class ChatMessage {\n  message: string;\n  timestamp: number;\n  constructor(message: string) {\n    this.message = message;\n    this.timestamp = Date.now();\n  }\n}\n\nlet getShadeCanvasKey = (set: HTMLImageElement, sx: number, sy: number, sw: number, sh: number, opacity: number): string => {\n  return set.src + \",\" + sx + \",\" + sy + \",\" + sw + \",\" + sh + \",\" + opacity;\n}\n\nexport enum MenuState {\n  LOADING,\n  LOGIN_USERNAME,\n  LOGIN_PASSWORD,\n  SELECT_WORLD,\n  IN_GAME\n}\n\n// fps counter\nconst times = [];\nlet fps;\n\nexport class Game {\n  static ctx: CanvasRenderingContext2D;\n  static shade_canvases: Record<string, HTMLCanvasElement>;\n  prevLevel: Level; // for transitions\n  level: Level;\n  levels: Array<Level>;\n  levelgen: LevelGenerator;\n  localPlayerID: string;\n  players: Record<string, Player>;\n  offlinePlayers: Record<string, Player>;\n  menuState: MenuState;\n  levelState: LevelState;\n  transitionStartTime: number;\n  transitionX: number;\n  transitionY: number;\n  upwardTransition: boolean;\n  sideTransition: boolean;\n  sideTransitionDirection: number;\n  transitioningLadder: any;\n  screenShakeX: number;\n  screenShakeY: number;\n  socket;\n  chat: Array<ChatMessage>;\n  chatOpen: boolean;\n  chatTextBox: TextBox;\n  previousFrameTimestamp: number;\n\n  input_history = [];\n\n  mostRecentInputReceived = true;\n\n  loginMessage: string = \"\";\n  username: string;\n  usernameTextBox: TextBox;\n  passwordTextBox: TextBox;\n  worldCodes: Array<string>;\n  selectedWorldCode: number;\n\n  static scale;\n  static tileset: HTMLImageElement;\n  static objset: HTMLImageElement;\n  static mobset: HTMLImageElement;\n  static itemset: HTMLImageElement;\n  static fxset: HTMLImageElement;\n  static fontsheet: HTMLImageElement;\n\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\n  static readonly letters = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\";\n  static readonly letter_widths = [4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3];\n  static readonly letter_height = 6;\n  static letter_positions = [];\n\n  // [min, max] inclusive\n  static rand = (min: number, max: number, rand): number => {\n    if (max < min) return min;\n    return Math.floor(rand() * (max - min + 1) + min);\n  };\n\n  static randTable = (table: any[], rand): any => {\n    return table[Game.rand(0, table.length - 1, rand)];\n  };\n\n  constructor() {\n    window.addEventListener(\"load\", () => {\n      this.socket = io(ServerAddress.address, { 'transports': ['websocket'] });\n      this.socket.on('new connect', () => {\n        if (this.menuState !== MenuState.LOADING)\n          this.loginMessage = \"disconnected\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on('unrecognized session', () => {\n        this.loginMessage = \"unrecognized session\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on('incorrect password', () => {\n        this.passwordTextBox.clear();\n        this.loginMessage = \"incorrect password, try again\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on('login already active', () => {\n        this.usernameTextBox.clear();\n        this.passwordTextBox.clear();\n        this.loginMessage = \"account currently logged in\";\n        this.menuState = MenuState.LOGIN_USERNAME;\n      });\n      this.socket.on('logged in', () => {\n        this.socket.emit('get available worlds');\n        this.menuState = MenuState.SELECT_WORLD;\n      });\n      this.socket.on('world codes', codes => {\n        this.worldCodes = codes;\n        this.selectedWorldCode = 0;\n      });\n      this.socket.on('welcome', (activeUsernames: Array<string>, state: GameState) => {\n        this.players = {};\n        this.offlinePlayers = {};\n        loadGameState(this, activeUsernames, state);\n        this.chatOpen = false;\n\n        this.screenShakeX = 0;\n        this.screenShakeY = 0;\n\n        this.menuState = MenuState.IN_GAME;\n        this.levelState = LevelState.IN_LEVEL;\n      });\n      this.socket.on('get state', () => {\n        this.socket.emit('game state', createGameState(this));\n      });\n      this.socket.on('input', (tickPlayerID: string, input: InputEnum, randState: number) => {\n        if (Random.state !== randState) {\n          this.chat.push(new ChatMessage('RAND STATES OUT OF SYNC'));\n          this.chat.push(new ChatMessage('Received ' + randState));\n          this.chat.push(new ChatMessage('Current ' + Random.state));\n        }\n\n        let decode_input = (input: InputEnum): string => {\n          if (input === InputEnum.I) return \"I\";\n          if (input === InputEnum.Q) return \"Q\";\n          if (input === InputEnum.LEFT) return \"LEFT\";\n          if (input === InputEnum.RIGHT) return \"RIGHT\";\n          if (input === InputEnum.UP) return \"UP\";\n          if (input === InputEnum.DOWN) return \"DOWN\";\n          if (input === InputEnum.SPACE) return \"SPACE\";\n        }\n\n        this.input_history.push(tickPlayerID + ', ' + decode_input(input));\n        // make sure player exists\n        if (!(tickPlayerID in this.players) && !(tickPlayerID in this.offlinePlayers)) { // new player\n          this.players[this.localPlayerID] = new Player(this, 0, 0, true);\n          this.players[this.localPlayerID].levelID = this.levelgen.currentFloorFirstLevelID;\n          this.players[this.localPlayerID].x = this.levels[this.levelgen.currentFloorFirstLevelID].roomX + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].width / 2);\n          this.players[this.localPlayerID].y = this.levels[this.levelgen.currentFloorFirstLevelID].roomY + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].height / 2);\n        }\n        if (tickPlayerID in this.offlinePlayers) { // old player rejoining\n          this.players[tickPlayerID] = this.offlinePlayers[tickPlayerID];\n          delete this.offlinePlayers[tickPlayerID];\n        }\n        // process input\n        switch (input) {\n          case InputEnum.I:\n            this.players[tickPlayerID].iListener();\n            break;\n          case InputEnum.Q:\n            this.players[tickPlayerID].qListener();\n            break;\n          case InputEnum.LEFT:\n            this.players[tickPlayerID].leftListener(false);\n            break;\n          case InputEnum.RIGHT:\n            this.players[tickPlayerID].rightListener(false);\n            break;\n          case InputEnum.UP:\n            this.players[tickPlayerID].upListener(false);\n            break;\n          case InputEnum.DOWN:\n            this.players[tickPlayerID].downListener(false);\n            break;\n          case InputEnum.SPACE:\n            this.players[tickPlayerID].spaceListener();\n            break;\n        }\n\n        if (tickPlayerID === this.localPlayerID) {\n          this.mostRecentInputReceived = true;\n        }\n      });\n      this.socket.on('chat message', (message: string) => {\n        this.chat.push(new ChatMessage(message));\n      });\n      this.socket.on('player joined', (connectedPlayerID: string) => {\n        if (connectedPlayerID in this.offlinePlayers) { // old player reconnecting\n          this.players[connectedPlayerID] = this.offlinePlayers[connectedPlayerID];\n          if (this.players[connectedPlayerID].levelID < this.levelgen.currentFloorFirstLevelID) {\n            this.players[connectedPlayerID].levelID = this.levelgen.currentFloorFirstLevelID;\n            this.players[connectedPlayerID].x = this.levels[this.levelgen.currentFloorFirstLevelID].roomX + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].width / 2);\n            this.players[connectedPlayerID].y = this.levels[this.levelgen.currentFloorFirstLevelID].roomY + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].height / 2);\n          }\n          delete this.offlinePlayers[connectedPlayerID];\n        }\n        else if (!(connectedPlayerID in this.players)) { // new player connecting\n          this.players[connectedPlayerID] = new Player(this, 0, 0, false);\n          this.players[connectedPlayerID].levelID = this.levelgen.currentFloorFirstLevelID;\n          this.players[connectedPlayerID].x = this.levels[this.levelgen.currentFloorFirstLevelID].roomX + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].width / 2);\n          this.players[connectedPlayerID].y = this.levels[this.levelgen.currentFloorFirstLevelID].roomY + Math.floor(this.levels[this.levelgen.currentFloorFirstLevelID].height / 2);\n        }\n      });\n      this.socket.on('player left', (disconnectPlayerID: string) => {\n        this.offlinePlayers[disconnectPlayerID] = this.players[disconnectPlayerID];\n        delete this.players[disconnectPlayerID];\n      });\n\n      let canvas = document.getElementById(\"gameCanvas\");\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\n        alpha: false,\n      }) as CanvasRenderingContext2D;\n\n      this.chat = [];\n      this.chatTextBox = new TextBox();\n      this.chatTextBox.setEnterCallback(() => {\n        if (this.chatTextBox.text.length > 0) {\n          this.socket.emit('chat message', this.chatTextBox.text);\n          // chat commands\n          if (this.chatTextBox.text === \"/logout\") {\n            this.socket.emit('game state', createGameState(this));\n            this.socket.emit('logout');\n            this.menuState = MenuState.LOGIN_USERNAME;\n            this.usernameTextBox.clear();\n            this.passwordTextBox.clear();\n            this.levels = [];\n            this.players = {};\n            this.offlinePlayers = {};\n          }\n          else if (this.chatTextBox.text === \"/leave\") {\n            this.socket.emit('game state', createGameState(this));\n            this.socket.emit('leave world');\n            this.socket.emit('get available worlds');\n            this.menuState = MenuState.SELECT_WORLD;\n            this.levels = [];\n            this.players = {};\n            this.offlinePlayers = {};\n          }\n          else if (this.chatTextBox.text === \"/save\") {\n            this.socket.emit('game state', createGameState(this));\n          }\n          else if (this.chatTextBox.text === \"/r\") {\n            console.log(Random.state);\n          }\n          else if (this.chatTextBox.text === \"/seed\") {\n            console.log(this.levelgen.seed);\n          }\n          else if (this.chatTextBox.text === \"/i\") {\n            for (let i = 0; i < this.input_history.length; i++) {\n              console.log(i + ': ' + this.input_history[i]);\n            }\n          }\n          else if (this.chatTextBox.text.substring(0, 8) === \"/invite \")\n            this.socket.emit('invite', this.chatTextBox.text.substring(8));\n\n          this.chatTextBox.clear();\n        }\n        else {\n          this.chatOpen = false;\n        }\n      });\n      this.chatTextBox.setEscapeCallback(() => {\n        this.chatOpen = false;\n      });\n      this.chatOpen = false;\n\n      this.usernameTextBox = new TextBox();\n      this.usernameTextBox.allowedCharacters = \"abcdefghijklmnopqrstuvwxyz1234567890 ,.!?:'()[]%-\";\n      this.usernameTextBox.setEnterCallback(() => {\n        if (this.usernameTextBox.text.length < 1) {\n          this.loginMessage = \"username too short\";\n        } else {\n          this.loginMessage = \"\";\n          this.menuState = MenuState.LOGIN_PASSWORD;\n        }\n      });\n      this.passwordTextBox = new TextBox();\n      this.passwordTextBox.allowedCharacters = \"abcdefghijklmnopqrstuvwxyz1234567890 ,.!?:'()[]%-\";\n      this.passwordTextBox.setEnterCallback(() => {\n        if (this.passwordTextBox.text.length < 8) {\n          this.loginMessage = \"password too short\";\n        } else {\n          this.localPlayerID = this.usernameTextBox.text;\n          this.socket.emit('login', this.localPlayerID, this.passwordTextBox.text);\n        }\n      });\n      this.worldCodes = [];\n      this.selectedWorldCode = 0;\n\n      Game.shade_canvases = {};\n      Game.text_rendering_canvases = {};\n\n      Game.tileset = new Image();\n      Game.tileset.src = \"res/tileset.png\";\n      Game.objset = new Image();\n      Game.objset.src = \"res/objset.png\";\n      Game.mobset = new Image();\n      Game.mobset.src = \"res/mobset.png\";\n      Game.itemset = new Image();\n      Game.itemset.src = \"res/itemset.png\";\n      Game.fxset = new Image();\n      Game.fxset.src = \"res/fxset.png\";\n      Game.fontsheet = new Image();\n      Game.fontsheet.src = \"res/font.png\";\n\n      Game.scale = 1;\n\n      Sound.loadSounds();\n      Sound.playMusic(); // loops forever\n\n      document.addEventListener(\n        \"touchstart\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n      document.addEventListener(\n        \"touchend\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n      document.addEventListener(\n        \"touchmove\",\n        function (e) {\n          if (e.target == canvas) {\n            e.preventDefault();\n          }\n        },\n        false\n      );\n\n      document.addEventListener(\"touchstart\", Input.handleTouchStart, { passive: false });\n      document.addEventListener(\"touchmove\", Input.handleTouchMove, { passive: false });\n      document.addEventListener(\"touchend\", Input.handleTouchEnd, { passive: false });\n\n      Input.keyDownListener = (key: string) => {\n        this.keyDownListener(key);\n      }\n\n      this.menuState = MenuState.LOADING;\n\n      window.requestAnimationFrame(this.run);\n      this.onResize();\n      window.addEventListener(\"resize\", this.onResize);\n    });\n  }\n\n  keyDownListener = (key: string) => {\n    if (this.menuState === MenuState.LOGIN_USERNAME) {\n      this.usernameTextBox.handleKeyPress(key);\n    }\n    else if (this.menuState === MenuState.LOGIN_PASSWORD) {\n      this.passwordTextBox.handleKeyPress(key);\n    }\n    else if (this.menuState === MenuState.SELECT_WORLD) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.selectedWorldCode = Math.max(0, this.selectedWorldCode - 1);\n          break;\n        case \"ArrowDown\":\n          this.selectedWorldCode = Math.min(this.worldCodes.length + 1, this.selectedWorldCode + 1);\n          break;\n        case \"Enter\":\n          if (this.selectedWorldCode === 0)\n            this.socket.emit('get available worlds')\n          else if (this.selectedWorldCode === 1)\n            this.socket.emit('join new world');\n          else if (this.worldCodes[this.selectedWorldCode - 2])\n            this.socket.emit('join world', this.worldCodes[this.selectedWorldCode - 2]);\n          break;\n      }\n    }\n    else if (this.menuState === MenuState.IN_GAME) {\n      if (!this.chatOpen) {\n        switch (key.toUpperCase()) {\n          case \"C\":\n            this.chatOpen = true;\n            break;\n          case \"/\":\n            this.chatOpen = true;\n            this.chatTextBox.clear();\n            this.chatTextBox.handleKeyPress(key);\n            break;\n          case \"A\":\n          case \"ARROWLEFT\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.LEFT);\n            break;\n          case \"D\":\n          case \"ARROWRIGHT\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.RIGHT);\n            break;\n          case \"W\":\n          case \"ARROWUP\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.UP);\n            break;\n          case \"S\":\n          case \"ARROWDOWN\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.DOWN);\n            break;\n          case \" \":\n            this.players[this.localPlayerID].inputHandler(InputEnum.SPACE);\n            break;\n          case \"I\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.I);\n            break;\n          case \"Q\":\n            this.players[this.localPlayerID].inputHandler(InputEnum.Q);\n            break;\n        }\n      }\n      else {\n        this.chatTextBox.handleKeyPress(key);\n      }\n    }\n  };\n\n  sendInput = (input: InputEnum) => {\n    if (this.mostRecentInputReceived) {\n      this.mostRecentInputReceived = false;\n      this.socket.emit('input', this.localPlayerID, input, Random.state);\n    }\n  }\n\n  changeLevel = (player: Player, newLevel: Level) => {\n    player.levelID = this.levels.indexOf(newLevel);\n    if (this.players[this.localPlayerID] === player) {\n      //this.level.exitLevel();\n      this.level = newLevel;\n    }\n    newLevel.enterLevel(player);\n  };\n\n  changeLevelThroughLadder = (player: Player, ladder: any) => {\n    player.levelID = this.levels.indexOf(ladder.linkedLevel);\n\n    if (ladder instanceof DownLadder) ladder.generate();\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING_LADDER;\n      this.transitionStartTime = Date.now();\n      this.transitioningLadder = ladder;\n    } else {\n      ladder.linkedLevel.enterLevel(player, ladder.linkedLevel); // since it's not a local player, don't wait for transition\n    }\n  };\n\n  changeLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    player.levelID = this.levels.indexOf(door.level);\n\n    if (this.players[this.localPlayerID] === player) {\n      this.levelState = LevelState.TRANSITIONING;\n      this.transitionStartTime = Date.now();\n\n      let oldX = this.players[this.localPlayerID].x;\n      let oldY = this.players[this.localPlayerID].y;\n\n      this.prevLevel = this.level;\n      //this.level.exitLevel();\n      this.level = door.level;\n      door.level.enterLevelThroughDoor(player, door, side);\n\n      this.transitionX = (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\n      this.transitionY = (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\n\n      this.upwardTransition = false;\n      this.sideTransition = false;\n      this.sideTransitionDirection = side;\n      if (door instanceof Door && ([DoorDir.East , DoorDir.West].includes(door.doorDir))) this.sideTransition = true;\n      else if (door instanceof Door && door.doorDir === DoorDir.South) this.upwardTransition = true;\n    } else {\n      door.level.enterLevelThroughDoor(player, door, side);\n    }\n  };\n\n  run = (timestamp: number) => {\n    if (!this.previousFrameTimestamp) this.previousFrameTimestamp = timestamp - 1000.0 / GameConstants.FPS;\n\n    // normalized so 1.0 = 60fps\n    let delta = (timestamp - this.previousFrameTimestamp) * 60.0 / 1000.0;\n\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\n      times.shift();\n    }\n    times.push(timestamp);\n    fps = times.length;\n\n    this.update();\n    this.draw(delta);\n    window.requestAnimationFrame(this.run);\n\n    this.previousFrameTimestamp = timestamp;\n  };\n\n  update = () => {\n    Input.checkIsTapHold();\n\n    if (\n      Input.lastPressTime !== 0 &&\n      Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\n    ) {\n      Input.onKeydown({ repeat: false, code: Input.lastPressKeyCode } as KeyboardEvent);\n    }\n\n    if (this.menuState === MenuState.IN_GAME) {\n      if (this.levelState === LevelState.TRANSITIONING) {\n        if (Date.now() - this.transitionStartTime >= LevelConstants.LEVEL_TRANSITION_TIME) {\n          this.levelState = LevelState.IN_LEVEL;\n        }\n      }\n      if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n        if (Date.now() - this.transitionStartTime >= LevelConstants.LEVEL_TRANSITION_TIME_LADDER) {\n          this.levelState = LevelState.IN_LEVEL;\n        }\n      }\n\n      for (const i in this.players) {\n        this.players[i].update();\n        this.levels[this.players[i].levelID].update();\n\n        if (this.players[i].dead) {\n          for (const j in this.players) {\n            this.players[j].dead = true;\n          }\n        }\n      }\n    }\n  };\n\n  lerp = (a: number, b: number, t: number): number => {\n    return (1 - t) * a + t * b;\n  };\n\n  onResize = () => {\n    let maxWidthScale = Math.floor(window.innerWidth / GameConstants.DEFAULTWIDTH);\n    let maxHeightScale = Math.floor(window.innerHeight / GameConstants.DEFAULTHEIGHT);\n    Game.scale = Math.min(maxWidthScale, maxHeightScale);\n    if (Game.scale === 0) {\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\n    }\n    Game.scale = Math.min(maxWidthScale, maxHeightScale);\n\n    LevelConstants.SCREEN_W = Math.floor(window.innerWidth / Game.scale / GameConstants.TILESIZE);\n    LevelConstants.SCREEN_H = Math.floor(window.innerHeight / Game.scale / GameConstants.TILESIZE);\n    GameConstants.WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n    GameConstants.HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\n    Game.ctx.canvas.setAttribute(\n      \"style\",\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${GameConstants.HEIGHT * Game.scale}px;\n    display: block;\n    margin: 0 auto;\n  \n    image-rendering: optimizeSpeed; /* Older versions of FF          */\n    image-rendering: -moz-crisp-edges; /* FF 6.0+                       */\n    image-rendering: -webkit-optimize-contrast; /* Safari                        */\n    image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\n    image-rendering: pixelated; /* Awesome future-browsers       */\n  \n    -ms-interpolation-mode: nearest-neighbor;`\n    );\n    //Game.ctx.canvas.width = window.innerWidth;\n    //Game.ctx.canvas.height = window.innerHeight;\n  };\n\n  shakeScreen = (shakeX: number, shakeY: number) => {\n    this.screenShakeX = shakeX;\n    this.screenShakeY = shakeY;\n  };\n\n  static measureText = (text: string): { width: number, height: number } => {\n    let w = 0;\n    for (const letter of text.toLowerCase()) {\n      if (letter === ' ') w += 4;\n      else for (let i = 0; i < Game.letters.length; i++) {\n        if (Game.letters[i] === letter) {\n          w += Game.letter_widths[i] + 1;\n        }\n      }\n    }\n    return { width: w, height: Game.letter_height };\n  }\n\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\n    x = Math.round(x);\n    y = Math.round(y);\n\n    if (Game.letter_positions.length === 0) {\n      // calculate letter positions\n      for (let i = 0; i < Game.letter_widths.length; i++) {\n        if (i === 0) Game.letter_positions[0] = 0;\n        else Game.letter_positions[i] = Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\n      }\n    } else {\n      let dimensions = Game.measureText(text);\n      if (dimensions.width > 0) {\n        let key = text + Game.ctx.fillStyle;\n\n        if (!Game.text_rendering_canvases[key]) {\n          Game.text_rendering_canvases[key] = document.createElement('canvas');\n          Game.text_rendering_canvases[key].width = dimensions.width;\n          Game.text_rendering_canvases[key].height = dimensions.height;\n          let bx = Game.text_rendering_canvases[key].getContext('2d');\n\n          let letter_x = 0;\n          for (const letter of text.toLowerCase()) {\n            if (letter === ' ') letter_x += 4;\n            else for (let i = 0; i < Game.letters.length; i++) {\n              if (Game.letters[i] === letter) {\n                bx.drawImage(Game.fontsheet, Game.letter_positions[i] + 1, 0, Game.letter_widths[i], Game.letter_height, letter_x, 0, Game.letter_widths[i], Game.letter_height);\n                letter_x += Game.letter_widths[i] + 1;\n              }\n            }\n          }\n          bx.fillStyle = Game.ctx.fillStyle;\n          bx.globalCompositeOperation = \"source-in\";\n          bx.fillRect(0, 0, Game.text_rendering_canvases[key].width, Game.text_rendering_canvases[key].height);\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        } else {\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\n        }\n      }\n    }\n  };\n\n  static fillTextOutline = (text: string, x: number, y: number, outlineColor: string, fillColor: string) => {\n    Game.ctx.fillStyle = outlineColor;\n    for (let xx = -1; xx <= 1; xx++) {\n      for (let yy = -1; yy <= 1; yy++) {\n        Game.fillText(text, x + xx, y + yy);\n      }\n    }\n    Game.ctx.fillStyle = fillColor;\n    Game.fillText(text, x, y);\n  }\n\n  draw = (delta: number) => {\n    Game.ctx.globalAlpha = 1;\n    Game.ctx.fillStyle = \"black\";\n    if (this.menuState === MenuState.IN_GAME) Game.ctx.fillStyle = this.level.shadeColor;\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (this.menuState === MenuState.LOADING) {\n      Game.ctx.fillStyle = \"white\";\n      let loadingString = \"loading...\";\n      Game.fillText(loadingString, GameConstants.WIDTH * 0.5 - Game.measureText(loadingString).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5);\n    }\n    else if (this.menuState === MenuState.LOGIN_USERNAME) {\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(this.loginMessage, GameConstants.WIDTH * 0.5 - Game.measureText(this.loginMessage).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 3);\n\n      let prompt = \"username: \";\n      let usernameString = prompt + this.usernameTextBox.text;\n      Game.fillText(usernameString, GameConstants.WIDTH * 0.5 - Game.measureText(usernameString).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5);\n\n      let cursorX = Game.measureText(usernameString.substring(0, prompt.length + this.usernameTextBox.cursor)).width;\n      Game.ctx.fillRect(\n        Math.round(GameConstants.WIDTH * 0.5 - Game.measureText(usernameString).width * 0.5 + cursorX),\n        Math.round(GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5),\n        1,\n        Game.letter_height);\n\n      prompt = \"password: \";\n      let passwordString = prompt;\n      for (const i of this.passwordTextBox.text) passwordString += \"-\";\n      Game.fillText(passwordString, GameConstants.WIDTH * 0.5 - Game.measureText(passwordString).width * 0.5, GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5);\n    }\n    else if (this.menuState === MenuState.LOGIN_PASSWORD) {\n      Game.ctx.fillStyle = \"white\";\n      Game.fillText(this.loginMessage, GameConstants.WIDTH * 0.5 - Game.measureText(this.loginMessage).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 3);\n\n      let prompt = \"username: \";\n      let usernameString = prompt + this.usernameTextBox.text;\n      Game.fillText(usernameString, GameConstants.WIDTH * 0.5 - Game.measureText(usernameString).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5);\n\n      prompt = \"password: \";\n      let passwordString = prompt;\n      for (const i of this.passwordTextBox.text) passwordString += \"-\";\n      Game.fillText(passwordString, GameConstants.WIDTH * 0.5 - Game.measureText(passwordString).width * 0.5, GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5);\n      let cursorX = Game.measureText(passwordString.substring(0, prompt.length + this.passwordTextBox.cursor)).width;\n      Game.ctx.fillRect(\n        Math.round(GameConstants.WIDTH * 0.5 - Game.measureText(passwordString).width * 0.5 + cursorX),\n        Math.round(GameConstants.HEIGHT * 0.5 + Game.letter_height * 0.5),\n        1,\n        Game.letter_height\n      );\n    }\n    else if (this.menuState === MenuState.SELECT_WORLD) {\n      let c = [\"refresh\", \"new world\"];\n      c = c.concat(this.worldCodes);\n      c[this.selectedWorldCode] = '[ ' + c[this.selectedWorldCode] + ' ]';\n      for (let i = 0; i < c.length; i++) {\n        let ind = (i - this.selectedWorldCode);\n        let spacing = (Game.letter_height + 2);\n        Game.ctx.fillStyle = \"grey\";\n        if (ind === 0) Game.ctx.fillStyle = \"white\";\n        Game.fillText(c[i], GameConstants.WIDTH * 0.5 - Game.measureText(c[i]).width * 0.5, GameConstants.HEIGHT * 0.5 - Game.letter_height * 0.5 + ind * spacing);\n      }\n    }\n    else if (this.menuState === MenuState.IN_GAME) {\n      if (this.levelState === LevelState.TRANSITIONING) {\n        let levelOffsetX = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) / LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            -this.transitionX\n          )\n        );\n        let levelOffsetY = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) / LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            -this.transitionY\n          )\n        );\n        let playerOffsetX = levelOffsetX - this.transitionX;\n        let playerOffsetY = levelOffsetY - this.transitionY;\n\n        let playerCX = (this.players[this.localPlayerID].x - this.players[this.localPlayerID].drawX + 0.5) * GameConstants.TILESIZE;\n        let playerCY = (this.players[this.localPlayerID].y - this.players[this.localPlayerID].drawY + 0.5) * GameConstants.TILESIZE;\n\n        Game.ctx.translate(\n          -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n          -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        let extraTileLerp = Math.floor(\n          this.lerp(\n            (Date.now() - this.transitionStartTime) / LevelConstants.LEVEL_TRANSITION_TIME,\n            0,\n            GameConstants.TILESIZE\n          )\n        );\n\n        let newLevelOffsetX = playerOffsetX;\n        let newLevelOffsetY = playerOffsetY;\n\n        if (this.sideTransition) {\n          if (this.sideTransitionDirection > 0) {\n            levelOffsetX += extraTileLerp;\n            newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\n          } else {\n            levelOffsetX -= extraTileLerp;\n            newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\n          }\n        } else if (this.upwardTransition) {\n          levelOffsetY -= extraTileLerp;\n          newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\n        } else {\n          levelOffsetY += extraTileLerp;\n          newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\n        }\n\n        let ditherFrame = Math.floor(\n          (7 * (Date.now() - this.transitionStartTime)) / LevelConstants.LEVEL_TRANSITION_TIME\n        );\n\n        Game.ctx.translate(levelOffsetX, levelOffsetY);\n        this.prevLevel.draw(delta);\n        this.prevLevel.drawEntities(delta);\n        for (\n          let x = this.prevLevel.roomX - 1;\n          x <= this.prevLevel.roomX + this.prevLevel.width;\n          x++\n        ) {\n          for (\n            let y = this.prevLevel.roomY - 1;\n            y <= this.prevLevel.roomY + this.prevLevel.height;\n            y++\n          ) {\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n        Game.ctx.translate(-levelOffsetX, -levelOffsetY);\n\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n        this.level.draw(delta);\n        this.level.drawEntities(delta, true);\n        for (let x = this.level.roomX - 1; x <= this.level.roomX + this.level.width; x++) {\n          for (let y = this.level.roomY - 1; y <= this.level.roomY + this.level.height; y++) {\n            Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\n          }\n        }\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n        Game.ctx.translate(playerOffsetX, playerOffsetY);\n        this.players[this.localPlayerID].draw(delta);\n        Game.ctx.translate(-playerOffsetX, -playerOffsetY);\n\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\n        this.level.drawShade(delta);\n        this.level.drawOverShade(delta);\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\n\n        Game.ctx.translate(\n          Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\n          Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\n        let playerCX = (this.players[this.localPlayerID].x - this.players[this.localPlayerID].drawX + 0.5) * GameConstants.TILESIZE;\n        let playerCY = (this.players[this.localPlayerID].y - this.players[this.localPlayerID].drawY + 0.5) * GameConstants.TILESIZE;\n\n        Game.ctx.translate(\n          -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n          -Math.round(playerCY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        let deadFrames = 6;\n        let ditherFrame = Math.floor(\n          ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER\n        );\n\n        if (ditherFrame < 7) {\n          this.level.draw(delta);\n          this.level.drawEntities(delta);\n          this.level.drawShade(delta);\n          this.level.drawOverShade(delta);\n\n          for (let x = this.level.roomX - 1; x <= this.level.roomX + this.level.width; x++) {\n            for (let y = this.level.roomY - 1; y <= this.level.roomY + this.level.height; y++) {\n              Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        } else if (ditherFrame >= 7 + deadFrames) {\n          if (this.transitioningLadder) {\n            this.prevLevel = this.level;\n            this.level.exitLevel();\n            this.level = this.transitioningLadder.linkedLevel;\n\n            this.level.enterLevel(this.players[this.localPlayerID]);\n            this.transitioningLadder = null;\n          }\n\n          this.level.draw(delta);\n          this.level.drawEntities(delta);\n          this.level.drawShade(delta);\n          this.level.drawOverShade(delta);\n          for (let x = this.level.roomX - 1; x <= this.level.roomX + this.level.width; x++) {\n            for (let y = this.level.roomY - 1; y <= this.level.roomY + this.level.height; y++) {\n              Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\n            }\n          }\n        }\n        Game.ctx.translate(\n          Math.round(playerCX - 0.5 * GameConstants.WIDTH),\n          Math.round(playerCY - 0.5 * GameConstants.HEIGHT)\n        );\n\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      } else {\n        this.screenShakeX *= -0.8;\n        this.screenShakeY *= -0.8;\n\n        let playerDrawX = this.players[this.localPlayerID].drawX;\n        let playerDrawY = this.players[this.localPlayerID].drawY;\n\n        let cameraX = Math.round(\n          (this.players[this.localPlayerID].x - playerDrawX + 0.5) * GameConstants.TILESIZE -\n          0.5 * GameConstants.WIDTH -\n          this.screenShakeX\n        );\n        let cameraY = Math.round(\n          (this.players[this.localPlayerID].y - playerDrawY + 0.5) * GameConstants.TILESIZE -\n          0.5 * GameConstants.HEIGHT -\n          this.screenShakeY\n        );\n\n        Game.ctx.translate(-cameraX, -cameraY);\n        this.level.draw(delta);\n        this.level.drawEntities(delta);\n        this.level.drawShade(delta);\n        this.level.drawOverShade(delta);\n        this.players[this.localPlayerID].drawTopLayer(delta);\n        Game.ctx.translate(cameraX, cameraY);\n\n        this.level.drawTopLayer(delta);\n        this.players[this.localPlayerID].drawGUI(delta);\n        for (const i in this.players) this.players[i].updateDrawXY(delta);\n      }\n\n      // draw chat\n      let CHAT_X = 10;\n      let CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 14\n      let CHAT_OPACITY = 0.5;\n      if (this.chatOpen) {\n        Game.ctx.fillStyle = \"black\";\n        if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\n        Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n        Game.ctx.globalAlpha = 1;\n        Game.ctx.fillStyle = \"white\";\n        Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\n        let cursorX = Game.measureText(this.chatTextBox.text.substring(0, this.chatTextBox.cursor)).width;\n        Game.ctx.fillRect(CHAT_X + cursorX, CHAT_BOTTOM_Y, 1, Game.letter_height);\n      }\n      for (let i = 0; i < this.chat.length; i++) {\n        Game.ctx.fillStyle = \"white\";\n        if (this.chat[i][0] === \"/\") Game.ctx.fillStyle = GameConstants.GREEN;\n        let y = CHAT_BOTTOM_Y - (this.chat.length - 1 - i) * (Game.letter_height + 1);\n        if (this.chatOpen) y -= Game.letter_height + 1;\n\n        let age = Date.now() - this.chat[i].timestamp;\n        if (this.chatOpen) {\n          Game.ctx.globalAlpha = 1;\n        }\n        else {\n          if (age <= GameConstants.CHAT_APPEAR_TIME) {\n            if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = CHAT_OPACITY;\n          } else if (age <= GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME) {\n            if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = CHAT_OPACITY * (1 - ((age - GameConstants.CHAT_APPEAR_TIME) / GameConstants.CHAT_FADE_TIME));\n          } else {\n            Game.ctx.globalAlpha = 0;\n          }\n        }\n        Game.fillText(this.chat[i].message, CHAT_X, y);\n      }\n    }\n\n    // game version\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      GameConstants.VERSION,\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\n      1\n    );\n    Game.ctx.globalAlpha = 1;\n\n    // fps\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      fps + \"fps\",\n      1,\n      1\n    );\n    Game.ctx.globalAlpha = 1;\n  };\n\n  static drawHelper = (\n    set: HTMLImageElement,\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    // snap to nearest shading increment\n    shadeOpacity = Math.round(shadeOpacity * GameConstants.SHADE_LEVELS) / GameConstants.SHADE_LEVELS;\n    let key = getShadeCanvasKey(set, sX, sY, sW, sH, shadeOpacity);\n    if (!Game.shade_canvases[key]) {\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\n\n      shCtx.clearRect(0, 0, Game.shade_canvases[key].width, Game.shade_canvases[key].height);\n\n      shCtx.globalCompositeOperation = \"source-over\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE)\n      );\n\n      shCtx.globalAlpha = shadeOpacity;\n      shCtx.fillStyle = shadeColor;\n      shCtx.fillRect(0, 0, Game.shade_canvases[key].width, Game.shade_canvases[key].height);\n      shCtx.globalAlpha = 1.0;\n\n      shCtx.globalCompositeOperation = \"destination-in\";\n      shCtx.drawImage(\n        set,\n        Math.round(sX * GameConstants.TILESIZE),\n        Math.round(sY * GameConstants.TILESIZE),\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE),\n        0,\n        0,\n        Math.round(sW * GameConstants.TILESIZE),\n        Math.round(sH * GameConstants.TILESIZE)\n      );\n    }\n    Game.ctx.drawImage(\n      Game.shade_canvases[key],\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE)\n    );\n  };\n\n  static drawTile = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(Game.tileset, sX, sY, sW, sH, dX, dY, dW, dH, shadeColor, shadeOpacity);\n\n    /*Game.ctx.drawImage(\n      Game.tileset,\n      Math.round(sX * GameConstants.TILESIZE),\n      Math.round(sY * GameConstants.TILESIZE),\n      Math.round(sW * GameConstants.TILESIZE),\n      Math.round(sH * GameConstants.TILESIZE),\n      Math.round(dX * GameConstants.TILESIZE),\n      Math.round(dY * GameConstants.TILESIZE),\n      Math.round(dW * GameConstants.TILESIZE),\n      Math.round(dH * GameConstants.TILESIZE)\n    );\n\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = shadeOpacity;\n      Game.ctx.fillStyle = shadeColor;\n      Game.ctx.fillRect(\n        Math.round(dX * GameConstants.TILESIZE),\n        Math.round(dY * GameConstants.TILESIZE),\n        Math.round(dW * GameConstants.TILESIZE),\n        Math.round(dH * GameConstants.TILESIZE)\n      );\n      Game.ctx.globalAlpha = 1.0;\n    }*/\n  };\n\n  static drawObj = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(Game.objset, sX, sY, sW, sH, dX, dY, dW, dH, shadeColor, shadeOpacity);\n  };\n\n  static drawMob = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(Game.mobset, sX, sY, sW, sH, dX, dY, dW, dH, shadeColor, shadeOpacity);\n  };\n\n  static drawItem = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(Game.itemset, sX, sY, sW, sH, dX, dY, dW, dH, shadeColor, shadeOpacity);\n  };\n\n  static drawFX = (\n    sX: number,\n    sY: number,\n    sW: number,\n    sH: number,\n    dX: number,\n    dY: number,\n    dW: number,\n    dH: number,\n    shadeColor = \"black\",\n    shadeOpacity = 0\n  ) => {\n    Game.drawHelper(Game.fxset, sX, sY, sW, sH, dX, dY, dW, dH, shadeColor, shadeOpacity);\n  };\n}\n\nlet game = new Game();\n","import { LevelConstants } from \"./levelConstants\";\n\nexport class GameConstants {\n  static readonly VERSION = \"v0.6.3\";\n\n  static readonly FPS = 120;\n  static readonly ALPHA_ENABLED = true;\n  static readonly SHADE_LEVELS = 10;\n\n  static readonly TILESIZE = 16;\n  static readonly SCALE = 1;\n\n  static readonly SWIPE_THRESH = 50 ** 2; // (size of swipe threshold circle)^2\n\n  static readonly KEY_REPEAT_TIME = 300; // millseconds\n\n  static readonly CHAT_APPEAR_TIME = 10000;\n  static readonly CHAT_FADE_TIME = 1000;\n\n  static readonly DEFAULTWIDTH = 12 * GameConstants.TILESIZE;\n  static readonly DEFAULTHEIGHT = 12 * GameConstants.TILESIZE;\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\n  static scrolling = true;\n\n  static readonly SCRIPT_FONT_SIZE = 16;\n  static readonly FONT_SIZE = 7;\n  static readonly BIG_FONT_SIZE = 15;\n\n  static readonly RED = \"#ac3232\";\n  static readonly WARNING_RED = \"#ff0000\";\n  static readonly GREEN = \"#6abe30\";\n  static readonly ARMOR_GREY = \"#9badb7\";\n  static readonly OUTLINE = \"#222034\";\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\n  static readonly MISS_COLOR = \"#639bff\";\n}\n","import { Barrel } from \"./enemy/barrel\";\nimport { BigSkullEnemy } from \"./enemy/bigSkullEnemy\";\nimport { ChargeEnemy, ChargeEnemyState } from \"./enemy/chargeEnemy\";\nimport { Chest } from \"./enemy/chest\";\nimport { CoalResource } from \"./enemy/coalResource\";\nimport { Crate } from \"./enemy/crate\";\nimport { EmeraldResource } from \"./enemy/emeraldResource\";\nimport { Enemy, EnemyDirection } from \"./enemy/enemy\";\nimport { GoldResource } from \"./enemy/goldResource\";\nimport { KnightEnemy } from \"./enemy/knightEnemy\";\nimport { PottedPlant } from \"./enemy/pottedPlant\";\nimport { Pot } from \"./enemy/pot\";\nimport { SkullEnemy } from \"./enemy/skullEnemy\";\nimport { SlimeEnemy } from \"./enemy/slimeEnemy\";\nimport { Spawner } from \"./enemy/spawner\";\nimport { VendingMachine } from \"./enemy/vendingMachine\";\nimport { WizardEnemy, WizardState } from \"./enemy/wizardEnemy\";\nimport { ZombieEnemy } from \"./enemy/zombieEnemy\";\nimport { Game } from \"./game\";\nimport { HitWarning } from \"./hitWarning\";\nimport { Inventory } from \"./inventory\";\nimport { Armor } from \"./item/armor\";\nimport { BlueGem } from \"./item/bluegem\";\nimport { Candle } from \"./item/candle\";\nimport { Coal } from \"./item/coal\";\nimport { Coin } from \"./item/coin\";\nimport { Equippable } from \"./item/equippable\";\nimport { Gold } from \"./item/gold\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Heart } from \"./item/heart\";\nimport { Item } from \"./item/item\";\nimport { Key } from \"./item/key\";\nimport { Lantern } from \"./item/lantern\";\nimport { RedGem } from \"./item/redgem\";\nimport { Torch } from \"./item/torch\";\nimport { Level } from \"./level\";\nimport { LevelGenerator } from \"./levelGenerator\";\nimport { Player, PlayerDirection } from \"./player\";\nimport { EnemySpawnAnimation } from \"./projectile/enemySpawnAnimation\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { WizardFireball } from \"./projectile/wizardFireball\";\nimport { Random } from \"./random\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Spear } from \"./weapon/spear\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Backpack } from \"./item/backpack\";\n\nexport class HitWarningState {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(hw: HitWarning) {\n    this.x = hw.x;\n    this.y = hw.y;\n    this.dead = hw.dead;\n  }\n}\n\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\n  let hw = new HitWarning(game, hws.x, hws.y);\n  hw.dead = hws.dead;\n  return hw;\n}\n\nexport enum ProjectileType {\n  SPAWN,\n  WIZARD\n}\n\nexport class ProjectileState {\n  type: ProjectileType;\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  enemySpawn: EnemyState;\n  wizardState: number;\n  wizardParentID: number;\n\n  constructor(projectile: Projectile, game: Game) {\n    this.x = projectile.x;\n    this.y = projectile.y;\n    this.dead = projectile.dead;\n    if (projectile instanceof EnemySpawnAnimation) {\n      this.type = ProjectileType.SPAWN;\n      this.levelID = game.levels.indexOf(projectile.level);\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\n    }\n    if (projectile instanceof WizardFireball) {\n      this.type = ProjectileType.WIZARD;\n      this.wizardState = projectile.state;\n      this.levelID = game.levels.indexOf(projectile.parent.level);\n      this.wizardParentID = projectile.parent.level.enemies.indexOf(projectile.parent);\n    }\n  }\n}\n\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\n  if (ps.type === ProjectileType.SPAWN) {\n    let level = game.levels[ps.levelID];\n    let enemy = loadEnemy(ps.enemySpawn, game);\n    let p = new EnemySpawnAnimation(level, enemy, ps.x, ps.y);\n    p.dead = ps.dead;\n    return p;\n  }\n  if (ps.type === ProjectileType.WIZARD) {\n    let wizard = (game.levels[ps.levelID].enemies[ps.wizardParentID] as WizardEnemy);\n    let p = new WizardFireball(wizard, ps.x, ps.y);\n    p.state = ps.wizardState;\n    return p;\n  }\n}\n\nexport enum EnemyType {\n  BARREL,\n  BIGSKULL,\n  CHARGE,\n  CHEST,\n  COAL,\n  CRATE,\n  EMERALD,\n  GOLD,\n  KNIGHT,\n  PLANT,\n  SKULL,\n  SLIME,\n  SPAWNER,\n  VENDINGMACHINE,\n  WIZARD,\n  ZOMBIE\n}\n\nexport class EnemyState {\n  type: EnemyType;\n  levelID: number;\n  x: number;\n  y: number;\n  health: number;\n  direction: EnemyDirection;\n  dead: boolean;\n  skipNextTurns: number;\n  hasDrop: boolean;\n  drop: ItemState;\n  alertTicks: number;\n  ticks: number;\n  seenPlayer: boolean;\n  targetPlayerID: string;\n  // skeleton\n  ticksSinceFirstHit: number;\n  // big skeleton\n  drops: Array<ItemState>;\n  // charge enemy\n  startX: number;\n  startY: number;\n  targetX: number;\n  targetY: number;\n  visualTargetX: number;\n  visualTargetY: number;\n  chargeEnemyState: ChargeEnemyState;\n  // spawner\n  enemySpawnType: number;\n  // vending machine\n  isPlayerOpened: boolean;\n  playerOpenedID: string;\n  open: boolean;\n  costItems: Array<ItemState>;\n  item: ItemState;\n  isInf: boolean;\n  quantity: number;\n  // wizard\n  wizardState: WizardState;\n\n  constructor(enemy: Enemy, game: Game) {\n    this.levelID = game.levels.indexOf(enemy.level);\n    this.x = enemy.x;\n    this.y = enemy.y;\n    this.health = enemy.health;\n    this.direction = enemy.direction;\n    this.dead = enemy.dead;\n    this.skipNextTurns = enemy.skipNextTurns;\n    this.hasDrop = false;\n    if (enemy.drop) {\n      this.hasDrop = true;\n      this.drop = new ItemState(enemy.drop, game);\n    }\n    this.alertTicks = enemy.alertTicks;\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\n    if (enemy instanceof BigSkullEnemy) {\n      this.type = EnemyType.BIGSKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n      this.drops = [];\n      for (const d of enemy.drops) this.drops.push(new ItemState(d, game));\n    }\n    if (enemy instanceof ChargeEnemy) {\n      this.type = EnemyType.CHARGE;\n      this.ticks = enemy.ticks;\n      this.chargeEnemyState = enemy.state;\n      this.startX = enemy.startX;\n      this.startY = enemy.startY;\n      this.targetX = enemy.targetX;\n      this.targetY = enemy.targetY;\n      this.visualTargetX = enemy.visualTargetX;\n      this.visualTargetY = enemy.visualTargetY;\n    }\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\n    if (enemy instanceof KnightEnemy) {\n      this.type = EnemyType.KNIGHT;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\n    if (enemy instanceof Pot) this.type = EnemyType.PLANT;\n    if (enemy instanceof SkullEnemy) {\n      this.type = EnemyType.SKULL;\n      this.ticks = enemy.ticks;\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof SlimeEnemy) {\n      this.type = EnemyType.SLIME;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n    if (enemy instanceof Spawner) {\n      this.type = EnemyType.SPAWNER;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      this.enemySpawnType = enemy.enemySpawnType;\n    }\n    if (enemy instanceof VendingMachine) {\n      this.type = EnemyType.VENDINGMACHINE;\n      this.isPlayerOpened = false;\n      if (enemy.playerOpened) {\n        this.isPlayerOpened = true;\n        this.playerOpenedID = Object.keys(game.players).find(key => game.players[key] === enemy.playerOpened);\n        if (!this.playerOpenedID) this.playerOpenedID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.playerOpened);\n      }\n      this.open = enemy.open;\n      this.costItems = [];\n      for (const item of enemy.costItems) this.costItems.push(new ItemState(item, game));\n      this.item = new ItemState(enemy.item, game);\n      this.isInf = enemy.isInf;\n      this.quantity = enemy.quantity;\n    }\n    if (enemy instanceof WizardEnemy) {\n      this.type = EnemyType.WIZARD;\n      this.ticks = enemy.ticks;\n      this.wizardState = enemy.state;\n      this.seenPlayer = enemy.seenPlayer;\n    }\n    if (enemy instanceof ZombieEnemy) {\n      this.type = EnemyType.ZOMBIE;\n      this.ticks = enemy.ticks;\n      this.seenPlayer = enemy.seenPlayer;\n      if (enemy.seenPlayer) {\n        this.targetPlayerID = Object.keys(game.players).find(key => game.players[key] === enemy.targetPlayer);\n        if (!this.targetPlayerID) this.targetPlayerID = Object.keys(game.offlinePlayers).find(key => game.offlinePlayers[key] === enemy.targetPlayer);\n      }\n    }\n  }\n}\n\nlet loadEnemy = (es: EnemyState, game: Game): Enemy => {\n  let enemy;\n  let level = game.levels[es.levelID];\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(level, game, es.x, es.y);\n  if (es.type === EnemyType.BIGSKULL) {\n    enemy = new BigSkullEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n    enemy.drops = [];\n    for (const d of es.drops) enemy.drops.push(loadItem(d, game));\n  }\n  if (es.type === EnemyType.CHARGE) {\n    enemy = new ChargeEnemy(level, game, es.x, es.y);\n    enemy.ticks = es.ticks;\n    enemy.state = es.chargeEnemyState;\n    enemy.startX = es.startX;\n    enemy.startY = es.startY;\n    enemy.targetX = es.targetX;\n    enemy.targetY = es.targetY;\n    enemy.visualTargetX = es.visualTargetX;\n    enemy.visualTargetY = es.visualTargetY;\n  }\n  if (es.type === EnemyType.CHEST) enemy = new Chest(level, game, es.x, es.y, Random.rand);\n  if (es.type === EnemyType.COAL) enemy = new CoalResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.CRATE) enemy = new Crate(level, game, es.x, es.y);\n  if (es.type === EnemyType.EMERALD) enemy = new EmeraldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.GOLD) enemy = new GoldResource(level, game, es.x, es.y);\n  if (es.type === EnemyType.KNIGHT) {\n    enemy = new KnightEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.PLANT) enemy = new PottedPlant(level, game, es.x, es.y, Random.rand);\n  if (es.type === EnemyType.PLANT) enemy = new Pot(level, game, es.x, es.y);\n  if (es.type === EnemyType.SKULL) {\n    enemy = new SkullEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SLIME) {\n    enemy = new SlimeEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n  if (es.type === EnemyType.SPAWNER) {\n    enemy = new Spawner(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    enemy.enemySpawnType = es.enemySpawnType;\n  }\n  if (es.type === EnemyType.VENDINGMACHINE) {\n    let item = loadItem(es.item, game);\n    enemy = new VendingMachine(level, game, es.x, es.y, item, Random.rand);\n    if (es.isPlayerOpened) {\n      enemy.playerOpened = game.players[es.playerOpenedID];\n      if (!enemy.playerOpened) enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\n    }\n    enemy.open = es.open;\n    enemy.costItems = [];\n    for (const item of es.costItems) enemy.costItems.push(loadItem(item, game));\n    enemy.isInf = es.isInf;\n    enemy.quantity = es.quantity;\n  }\n  if (es.type === EnemyType.WIZARD) {\n    enemy = new WizardEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.state = es.wizardState;\n    enemy.seenPlayer = es.seenPlayer;\n  }\n  if (es.type === EnemyType.ZOMBIE) {\n    enemy = new ZombieEnemy(level, game, es.x, es.y, Random.rand);\n    enemy.ticks = es.ticks;\n    enemy.seenPlayer = es.seenPlayer;\n    if (es.seenPlayer) {\n      enemy.targetPlayer = game.players[es.targetPlayerID];\n      if (!enemy.targetPlayer) enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\n    }\n  }\n\n  enemy.x = es.x;\n  enemy.y = es.y;\n  enemy.health = es.health;\n  enemy.direction = es.direction;\n  enemy.dead = es.dead;\n  enemy.skipNextTurns = es.skipNextTurns;\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\n  enemy.alertTicks = es.alertTicks;\n\n  return enemy;\n}\n\nexport class LevelState {\n  levelID: number;\n  entered: boolean;\n  enemies: Array<EnemyState>;\n  items: Array<ItemState>;\n  projectiles: Array<ProjectileState>;\n  hitwarnings: Array<HitWarningState>;\n\n  constructor(level: Level, game: Game) {\n    this.levelID = game.levels.indexOf(level);\n    this.entered = level.entered;\n    this.enemies = [];\n    this.items = [];\n    this.projectiles = [];\n    this.hitwarnings = [];\n    for (const enemy of level.enemies) this.enemies.push(new EnemyState(enemy, game));\n    for (const item of level.items) this.items.push(new ItemState(item, game));\n    for (const projectile of level.projectiles) this.projectiles.push(new ProjectileState(projectile, game));\n    for (const hw of level.hitwarnings) this.hitwarnings.push(new HitWarningState(hw));\n  }\n}\n\nlet loadLevel = (level: Level, levelState: LevelState, game: Game) => {\n  level.entered = levelState.entered;\n  level.enemies = [];\n  level.items = [];\n  level.projectiles = [];\n  level.hitwarnings = [];\n  for (const enemy of levelState.enemies) level.enemies.push(loadEnemy(enemy, game));\n  for (const item of levelState.items) level.items.push(loadItem(item, game));\n  for (const projectile of levelState.projectiles) level.projectiles.push(loadProjectile(projectile, game));\n  for (const hw of levelState.hitwarnings) level.hitwarnings.push(loadHitWarning(hw, game));\n}\n\nexport enum ItemType {\n  ARMOR,\n  BLUEGEM,\n  CANDLE,\n  COAL,\n  COIN,\n  GOLD,\n  GOLDENKEY,\n  GREENGEM,\n  HEART,\n  KEY,\n  LANTERN,\n  REDGEM,\n  TORCH,\n  DAGGER,\n  DUALDAGGER,\n  SHOTGUN,\n  SPEAR,\n  PICKAXE,\n  BACKPACK\n}\n\nexport class ItemState {\n  type: ItemType;\n  x: number;\n  y: number;\n  levelID: number;\n  stackCount: number;\n  pickedUp: boolean;\n  equipped: boolean;\n\n  constructor(item: Item, game: Game) {\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\n    if (item instanceof Coal) this.type = ItemType.COAL;\n    if (item instanceof Coin) this.type = ItemType.COIN;\n    if (item instanceof Gold) this.type = ItemType.GOLD;\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\n    if (item instanceof Heart) this.type = ItemType.HEART;\n    if (item instanceof Key) this.type = ItemType.KEY;\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\n    if (item instanceof Torch) this.type = ItemType.TORCH;\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\n\n    this.equipped = item instanceof Equippable && item.equipped;\n    this.x = item.x;\n    this.y = item.y;\n    this.levelID = game.levels.indexOf(item.level);\n    if (this.levelID === -1) this.levelID = 0;\n    this.stackCount = item.stackCount;\n    this.pickedUp = item.pickedUp;\n  }\n}\n\nlet loadItem = (i: ItemState, game: Game, player?: Player): Item => {\n  let level = game.levels[i.levelID];\n  let item;\n  if (i.type === ItemType.ARMOR) item = new Armor(level, i.x, i.y);\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(level, i.x, i.y);\n  if (i.type === ItemType.CANDLE) item = new Candle(level, i.x, i.y);\n  if (i.type === ItemType.COAL) item = new Coal(level, i.x, i.y);\n  if (i.type === ItemType.COIN) item = new Coin(level, i.x, i.y);\n  if (i.type === ItemType.GOLD) item = new Gold(level, i.x, i.y);\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(level, i.x, i.y);\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(level, i.x, i.y);\n  if (i.type === ItemType.HEART) item = new Heart(level, i.x, i.y);\n  if (i.type === ItemType.KEY) item = new Key(level, i.x, i.y);\n  if (i.type === ItemType.LANTERN) item = new Lantern(level, i.x, i.y);\n  if (i.type === ItemType.REDGEM) item = new RedGem(level, i.x, i.y);\n  if (i.type === ItemType.TORCH) item = new Torch(level, i.x, i.y);\n  if (i.type === ItemType.DAGGER) { item = new Dagger(level, i.x, i.y); }\n  if (i.type === ItemType.DUALDAGGER) { item = new DualDagger(level, i.x, i.y); }\n  if (i.type === ItemType.SHOTGUN) { item = new Shotgun(level, i.x, i.y); }\n  if (i.type === ItemType.SPEAR) { item = new Spear(level, i.x, i.y); }\n  if (i.type === ItemType.PICKAXE) { item = new Pickaxe(level, i.x, i.y); }\n  if (i.type === ItemType.BACKPACK) { item = new Backpack(level, i.x, i.y); }\n  if (i.equipped) item.equipped = true;\n  if (item instanceof Equippable) item.setWielder(player);\n  item.stackCount = i.stackCount;\n  item.pickedUp = i.pickedUp;\n  return item;\n}\n\nexport class InventoryState {\n  isOpen: boolean;\n  cols: number;\n  rows: number;\n  selX: number;\n  selY: number;\n  equipAnimAmount: Array<number>;\n  isWeaponEquipped: boolean;\n  weaponI: number;\n  coins: number;\n  items: Array<ItemState>;\n\n  constructor(inventory: Inventory, game: Game) {\n    this.isOpen = inventory.isOpen;\n    this.cols = inventory.cols;\n    this.rows = inventory.rows;\n    this.equipAnimAmount = inventory.equipAnimAmount.map(x => x);\n    this.isWeaponEquipped = false;\n    if (inventory.weapon) {\n      this.isWeaponEquipped = true;\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\n    }\n    this.coins = inventory.coins;\n    this.selX = inventory.selX;\n    this.selY = inventory.selY;\n    this.items = Array<ItemState>();\n    for (const item of inventory.items) {\n      this.items.push(new ItemState(item, game));\n    }\n  }\n}\n\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\n  inventory.clear();\n  inventory.isOpen = i.isOpen;\n  inventory.cols = i.cols;\n  inventory.rows = i.rows;\n  inventory.selX = i.selX;\n  inventory.selY = i.selY;\n  inventory.equipAnimAmount = i.equipAnimAmount.map(x => x);\n  inventory.coins = i.coins;\n  for (const item of i.items) inventory.items.push(loadItem(item, game, inventory.player));\n\n  if (i.isWeaponEquipped) inventory.weapon = (inventory.items[i.weaponI] as Weapon);\n}\n\nexport class PlayerState {\n  x: number;\n  y: number;\n  dead: boolean;\n  levelID: number;\n  direction: PlayerDirection;\n  health: number;\n  maxHealth: number;\n  lastTickHealth: number;\n  inventory: InventoryState;\n  hasOpenVendingMachine: boolean;\n  openVendingMachineLevelID: number;\n  openVendingMachineID: number;\n  sightRadius: number;\n\n  constructor(player: Player, game: Game) {\n    this.x = player.x;\n    this.y = player.y;\n    this.dead = player.dead;\n    this.levelID = player.levelID;\n    this.direction = player.direction;\n    this.health = player.health;\n    this.maxHealth = player.maxHealth;\n    this.lastTickHealth = player.lastTickHealth;\n    this.inventory = new InventoryState(player.inventory, game);\n    this.hasOpenVendingMachine = false;\n    if (player.openVendingMachine) {\n      this.hasOpenVendingMachine = true;\n      this.openVendingMachineLevelID = game.levels.indexOf(player.openVendingMachine.level);\n      this.openVendingMachineID = player.openVendingMachine.level.enemies.indexOf(player.openVendingMachine);\n    }\n    this.sightRadius = player.sightRadius\n  }\n}\n\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\n  player.dead = p.dead;\n\n  player.levelID = p.levelID;\n  if (player.levelID < game.levelgen.currentFloorFirstLevelID) { // catch up to the current level\n    player.levelID = game.levelgen.currentFloorFirstLevelID;\n    player.x = game.levels[player.levelID].roomX + Math.floor(game.levels[player.levelID].width / 2);\n    player.y = game.levels[player.levelID].roomY + Math.floor(game.levels[player.levelID].height / 2);\n  }\n  player.direction = p.direction;\n  player.health = p.health;\n  player.maxHealth = p.maxHealth;\n  player.lastTickHealth = p.lastTickHealth;\n  loadInventory(player.inventory, p.inventory, game);\n  if (p.hasOpenVendingMachine) {\n    player.openVendingMachine = (game.levels[p.openVendingMachineLevelID].enemies[p.openVendingMachineID] as VendingMachine);\n  }\n  player.sightRadius = p.sightRadius;\n\n  return player;\n}\n\nexport class GameState {\n  seed: number;\n  randomState: number;\n  depth: number;\n  players: Record<string, PlayerState>;\n  offlinePlayers: Record<string, PlayerState>;\n  levels: Array<LevelState>;\n\n  constructor() {\n    this.seed = 0;\n    this.randomState = 0;\n    this.depth = 0;\n    this.players = {};\n    this.offlinePlayers = {};\n    this.levels = [];\n  }\n}\n\nexport const createGameState = (game: Game): GameState => {\n  let gs = new GameState();\n  gs.seed = game.levelgen.seed; // random state for generating levels\n  gs.randomState = Random.state; // current random state\n  gs.depth = game.levelgen.depthReached;\n  for (const i in game.players)\n    gs.players[i] = new PlayerState(game.players[i], game);\n  for (const i in game.offlinePlayers) {\n    gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\n  }\n  for (let level of game.levels) {\n    level.catchUp();\n    gs.levels.push(new LevelState(level, game));\n  }\n  return gs;\n}\n\nexport const loadGameState = (game: Game, activeUsernames: Array<string>, gameState: GameState) => {\n  game.levels = Array<Level>();\n  game.levelgen = new LevelGenerator();\n  game.levelgen.setSeed(gameState.seed);\n  if ((gameState as any).init_state) gameState.depth = 0;\n  game.levelgen.generateFirstNFloors(game, gameState.depth);\n\n  if (!(gameState as any).init_state) {\n    if (gameState.players) {\n      for (const i in gameState.players) {\n        if (activeUsernames.includes(i)) game.players[i] = loadPlayer(i, gameState.players[i], game);\n        else game.offlinePlayers[i] = loadPlayer(i, gameState.players[i], game);\n      }\n    }\n    if (gameState.offlinePlayers) {\n      for (const i in gameState.offlinePlayers) {\n        if (i === game.localPlayerID)\n          game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n        else if (activeUsernames.includes(i))\n          game.players[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n        else\n          game.offlinePlayers[i] = loadPlayer(i, gameState.offlinePlayers[i], game);\n      }\n    }\n    for (let levelState of gameState.levels) {\n      for (let i = 0; i < game.levels.length; i++) {\n        if (i === levelState.levelID) {\n          loadLevel(game.levels[i], levelState, game);\n        }\n      }\n    }\n    if (!(game.localPlayerID in gameState.players) && !(game.localPlayerID in gameState.offlinePlayers)) { // we're not in the gamestate, create a new player\n      game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n      game.players[game.localPlayerID].levelID = game.levelgen.currentFloorFirstLevelID;\n      game.players[game.localPlayerID].x = game.levels[game.levelgen.currentFloorFirstLevelID].roomX + Math.floor(game.levels[game.levelgen.currentFloorFirstLevelID].width / 2);\n      game.players[game.localPlayerID].y = game.levels[game.levelgen.currentFloorFirstLevelID].roomY + Math.floor(game.levels[game.levelgen.currentFloorFirstLevelID].height / 2);\n      game.level = game.levels[game.levelgen.currentFloorFirstLevelID];\n      game.level.enterLevel(game.players[game.localPlayerID]);\n    }\n    else {\n      game.level = game.levels[game.players[game.localPlayerID].levelID];\n    }\n  }\n  else { // stub game state, start a new world\n    game.players[game.localPlayerID] = new Player(game, 0, 0, true);\n    game.level = game.levels[game.players[game.localPlayerID].levelID];\n    game.level.enterLevel(game.players[game.localPlayerID]);\n  }\n  Random.setState(gameState.randomState);\n  game.level.updateLighting();\n\n  game.chat = [];\n}","import { Game } from \"./game\";\nimport { LevelConstants } from \"./levelConstants\";\n\nexport class HealthBar {\n  hurtTimer: number;\n\n  constructor() {\n    this.hurtTimer = 0;\n  }\n\n  hurt = () => {\n    this.hurtTimer = Date.now();\n  };\n\n  draw = (delta: number, hearts: number, maxHearts: number, x: number, y: number, flashing: boolean) => {\n    let t = Date.now() - this.hurtTimer;\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\n      let fullHearts = Math.floor(hearts);\n\n      let halfHearts = Math.ceil(hearts - fullHearts);\n\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\n\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\n      //   (which isn't really parameterizable)\n      let drawWidth = Math.round(\n        Math.min(9, Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t))\n      );\n      let drawHeight =\n        Math.round(\n          Math.min(0.5, Math.min(0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.003 * t)) * 16\n        ) / 16.0;\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\n      let xxStart = 0.5 + -width / 2;\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\n        let tileX = 0;\n        if (!flashing) tileX = 1.5;\n        else if (i < fullHearts) tileX = 0;\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\n        else tileX = 1;\n        let xx = (drawWidth * i) / 16.0 + xxStart;\n        Game.drawFX(tileX, 8, 0.5, 0.5, x + xx, y - 1 - drawHeight / 2, 0.5, drawHeight);\n        xx += 9.0 / 16.0;\n\n        let j = maxHearts - i - 1;\n        if (j !== i) {\n          let tileX = 0;\n          if (!flashing) tileX = 1.5;\n          else if (j < fullHearts) tileX = 0;\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\n          else tileX = 1;\n          let xx = (drawWidth * j) / 16.0 + xxStart;\n          Game.drawFX(tileX, 8, 0.5, 0.5, x + xx, y - 1 - drawHeight / 2, 0.5, drawHeight);\n          xx += 9.0 / 16.0;\n        }\n      }\n    }\n  };\n}\n","import { Game } from \"./game\";\nimport { Drawable } from \"./drawable\";\nimport { Level } from \"./level\";\n\nexport class HitWarning extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n  static frame = 0;\n  game: Game;\n\n  constructor(game: Game, x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.game = game;\n  }\n\n  tick = () => {\n    this.dead = true;\n  };\n\n  static updateFrame = (delta: number) => {\n    HitWarning.frame += 0.125 * delta;\n    if (HitWarning.frame >= 4) HitWarning.frame = 0;\n  };\n\n  draw = (delta: number) => {\n    if (\n      (this.x === this.game.players[this.game.localPlayerID].x && Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1) ||\n      (this.y === this.game.players[this.game.localPlayerID].y && Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1)\n    )\n      Game.drawFX(18 + Math.floor(HitWarning.frame), 6, 1, 1, this.x, this.y, 1, 1);\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.drawableY = this.y;\n    if (\n      (this.x === this.game.players[this.game.localPlayerID].x && Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1) ||\n      (this.y === this.game.players[this.game.localPlayerID].y && Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1)\n    )\n      Game.drawFX(18 + Math.floor(HitWarning.frame), 5, 1, 1, this.x, this.y, 1, 1);\n  };\n}\n","import { GameConstants } from \"./gameConstants\";\nimport { Game } from \"./game\";\n\nexport enum InputEnum {\n  I,\n  M,\n  M_UP,\n  Q,\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SPACE\n}\n\nexport const Input = {\n  _pressed: {},\n\n  isTapHold: false,\n  tapStartTime: null,\n  IS_TAP_HOLD_THRESH: 300,\n  keyDownListener: function (key: string) { },\n  iListener: function () { },\n  mListener: function () { },\n  mUpListener: function () { },\n  qListener: function () { },\n  leftListener: function () { },\n  rightListener: function () { },\n  upListener: function () { },\n  downListener: function () { },\n  aListener: function () { Input.leftListener(); },\n  dListener: function () { Input.rightListener(); },\n  wListener: function () { Input.upListener(); },\n  sListener: function () { Input.downListener(); },\n  spaceListener: function () { },\n  leftSwipeListener: function () { },\n  rightSwipeListener: function () { },\n  upSwipeListener: function () { },\n  downSwipeListener: function () { },\n  tapListener: function () { },\n\n  mouseLeftClickListeners: [],\n\n  mouseLeftClickListener: function (x: number, y: number) {\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\n      Input.mouseLeftClickListeners[i](x, y);\n  },\n\n  mouseX: 0,\n  mouseY: 0,\n\n  lastPressTime: 0,\n  lastPressKeyCode: \"\",\n\n  SPACE: \"Space\",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  W: \"KeyW\",\n  A: \"KeyA\",\n  S: \"KeyS\",\n  D: \"KeyD\",\n  M: \"KeyM\",\n  N: \"KeyN\",\n  I: \"KeyI\",\n  Q: \"KeyQ\",\n\n  isDown: function (keyCode: string) {\n    return this._pressed[keyCode];\n  },\n\n  onKeydown: (event: KeyboardEvent) => {\n    if (event.key) Input.keyDownListener(event.key);\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\") event.preventDefault();\n    if (event.repeat) return; // ignore repeat keypresses\n    Input.lastPressTime = Date.now();\n    Input.lastPressKeyCode = event.code;\n    Input._pressed[event.code] = true;\n    switch (event.code) {\n      case Input.LEFT:\n        Input.leftListener();\n        break;\n      case Input.A:\n        Input.aListener();\n        break;\n      case Input.RIGHT:\n        Input.rightListener();\n        break;\n      case Input.D:\n        Input.dListener();\n        break;\n      case Input.UP:\n        Input.upListener();\n        break;\n      case Input.W:\n        Input.wListener();\n        break;\n      case Input.DOWN:\n        Input.downListener();\n        break;\n      case Input.S:\n        Input.sListener();\n        break;\n      case Input.SPACE:\n        Input.spaceListener();\n        break;\n      case Input.M:\n        Input.mListener();\n        break;\n      case Input.I:\n        Input.iListener();\n        break;\n      case Input.Q:\n        Input.qListener();\n        break;\n    }\n  },\n\n  onKeyup: function (event: KeyboardEvent) {\n    delete this._pressed[event.code];\n    if (event.code === this.lastPressKeyCode) {\n      this.lastPressTime = 0;\n      this.lastPressKeyCode = 0;\n    }\n    if (event.code === Input.M) Input.mUpListener();\n  },\n\n  mouseClickListener: function (event: MouseEvent) {\n    if (event.button === 0) {\n      let rect = window.document.getElementById(\"gameCanvas\").getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      Input.mouseLeftClickListener(Math.floor(x / Game.scale), Math.floor(y / Game.scale));\n    }\n  },\n\n  updateMousePos: function (event: MouseEvent) {\n    let rect = window.document.getElementById(\"gameCanvas\").getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    Input.mouseX = Math.floor(x / Game.scale);\n    Input.mouseY = Math.floor(y / Game.scale);\n  },\n\n  getTouches: function (evt) {\n    return (\n      evt.touches || evt.originalEvent.touches // browser API\n    ); // jQuery\n  },\n\n  xDown: null,\n  yDown: null,\n  currentX: 0,\n  currentY: 0,\n  swiped: false,\n\n  handleTouchStart: function (evt) {\n    evt.preventDefault();\n\n    const firstTouch = Input.getTouches(evt)[0];\n    Input.xDown = firstTouch.clientX;\n    Input.yDown = firstTouch.clientY;\n    Input.currentX = firstTouch.clientX;\n    Input.currentY = firstTouch.clientY;\n\n    Input.tapStartTime = Date.now();\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.swiped = false;\n  },\n\n  handleTouchMove: function (evt) {\n    evt.preventDefault();\n\n    Input.currentX = evt.touches[0].clientX;\n    Input.currentY = evt.touches[0].clientY;\n\n    Input.updateMousePos({\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    if (Input.swiped) return;\n\n    var xDiff = Input.xDown - Input.currentX;\n    var yDiff = Input.yDown - Input.currentY;\n\n    // we have not swiped yet\n    // check if we've swiped\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        /*most significant*/\n        if (xDiff > 0) {\n          Input.leftSwipeListener();\n        } else {\n          Input.rightSwipeListener();\n        }\n        Input.swiped = true;\n      } else {\n        if (yDiff > 0) {\n          Input.upSwipeListener();\n        } else {\n          Input.downSwipeListener();\n        }\n        Input.swiped = true;\n      }\n    }\n  },\n\n  handleTouchEnd: function (evt) {\n    evt.preventDefault();\n\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\n    Input.isTapHold = false;\n    Input.tapStartTime = null;\n\n    // we've already swiped, don't count the click\n    if (Input.swiped) return;\n    Input.mouseClickListener({\n      button: 0,\n      clientX: Input.currentX,\n      clientY: Input.currentY,\n    } as MouseEvent);\n\n    Input.updateMousePos({\n      clientX: 0,\n      clientY: 0,\n    } as MouseEvent);\n  },\n\n  checkIsTapHold: function () {\n    if (Input.tapStartTime !== null && Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH)\n      Input.isTapHold = true;\n  },\n};\nwindow.addEventListener(\n  \"keyup\",\n  function (event) {\n    Input.onKeyup(event);\n  },\n  false\n);\nwindow.addEventListener(\n  \"keydown\",\n  function (event) {\n    Input.onKeydown(event);\n  },\n  false\n);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"click\", event => Input.mouseClickListener(event), false);\nwindow.document\n  .getElementById(\"gameCanvas\")\n  .addEventListener(\"mousemove\", event => Input.updateMousePos(event));\n","import { Item } from \"./item/item\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Game } from \"./game\";\nimport { Key } from \"./item/key\";\nimport { Input } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Equippable } from \"./item/equippable\";\nimport { Armor } from \"./item/armor\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { Coin } from \"./item/coin\";\nimport { Gold } from \"./item/gold\";\nimport { GreenGem } from \"./item/greengem\";\nimport { Coal } from \"./item/coal\";\nimport { Weapon } from \"./weapon/weapon\";\nimport { Dagger } from \"./weapon/dagger\";\nimport { Level } from \"./level\";\nimport { Usable } from \"./item/usable\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Candle } from \"./item/candle\";\nimport { Torch } from \"./item/torch\";\nimport { Lantern } from \"./item/lantern\";\nimport { Player } from \"./player\";\nimport { Spear } from \"./weapon/spear\";\nimport { Pickaxe } from \"./weapon/pickaxe\";\nimport { Spellbook } from \"./weapon/spellbook\";\nimport { Backpack } from \"./item/backpack\";\nimport { Slingshot } from \"./weapon/slingshot\";\n\nlet OPEN_TIME = 100; // milliseconds\nlet FILL_COLOR = \"#5a595b\";\nlet OUTLINE_COLOR = \"#292c36\";\nlet EQUIP_COLOR = \"#85a8e6\";\nlet FULL_OUTLINE = \"white\";\n\nexport class Inventory {\n  player: Player;\n  items: Array<Item>;\n  rows = 2;\n  cols = 5;\n  selX = 0;\n  selY = 0;\n  game: Game;\n  isOpen: boolean;\n  openTime: number;\n  coins: number;\n  equipAnimAmount: Array<number>;\n  weapon: Weapon;\n  expansion: number = 0;\n\n  constructor(game: Game, player: Player) {\n    \n    this.game = game;\n    this.player = player;\n    this.items = new Array<Item>();\n    this.equipAnimAmount = [];\n    for (let i = 0; i < this.rows * this.cols; i++) {\n      this.equipAnimAmount[i] = 0;\n    }\n    //Input.mouseLeftClickListeners.push(this.mouseLeftClickListener);\n    this.coins = 0;\n    this.openTime = Date.now();\n    this.weapon = null;\n    this.expansion = 0;\n\n    let a = (i: Item) => {\n      if (i instanceof Equippable) {\n        i.setWielder(this.player);\n      }\n      if (i instanceof Weapon) {\n        i.toggleEquip();\n        this.weapon = i;\n      }\n\n      this.addItem(i);\n    };\n\n    a(new Slingshot({ game: this.game } as Level, 0, 0));\n    a(new Lantern({ game: this.game } as Level, 0, 0));\n    //a(new Spellbook({ game: this.game } as Level, 0, 0));\n    //a(new Slingshot({ game: this.game } as Level, 0, 0));\n    a(new Backpack({ game: this.game } as Level, 0, 0));\n    //a(new Shotgun({ game: this.game } as Level, 0, 0));\n    a(new Armor({ game: this.game } as Level, 0, 0));\n\n\n  }\n\n  clear = () => {\n    this.items = [];\n    for (let i = 0; i < (this.rows + this.expansion) * this.cols; i++) this.equipAnimAmount[i] = 0;\n  }\n\n  open = () => {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) this.openTime = Date.now();\n  };\n\n  close = () => {\n    this.isOpen = false;\n  };\n\n  left = () => {\n    this.selX--;\n    if (this.selX < 0) this.selX = 0;\n  };\n  right = () => {\n    this.selX++;\n    if (this.selX > this.cols - 1) this.selX = this.cols - 1;\n  };\n  up = () => {\n    this.selY--;\n    if (this.selY < 0) this.selY = 0;\n  };\n  down = () => {\n    this.selY++;\n    if (this.selY > (this.rows + this.expansion) - 1) this.selY = (this.rows + this.expansion) - 1;\n  };\n  space = () => {\n    let i = this.selX + this.selY * this.cols;\n\n    if (this.items[i] instanceof Usable) {\n      (this.items[i] as Usable).onUse(this.player);\n      this.items.splice(i, 1);\n    }\n\n    if (this.items[i] instanceof Equippable) {\n      let e = this.items[i] as Equippable;\n      e.toggleEquip();\n      if (e instanceof Weapon) {\n        if (e.equipped) this.weapon = e;\n        else this.weapon = null;\n      }\n      if (e.equipped) {\n        for (const i of this.items) {\n          if (i instanceof Equippable && i !== e && !e.coEquippable(i)) {\n            i.equipped = false; // prevent user from equipping two not coEquippable items\n          }\n        }\n      }\n    }\n  };\n\n  drop = () => {\n    let i = this.selX + this.selY * this.cols;\n    if (i < this.items.length) {\n      if (this.items[i] instanceof Equippable) (this.items[i] as Equippable).equipped = false;\n      this.items[i].level = this.game.levels[this.player.levelID];\n      this.items[i].x = this.player.x;\n      this.items[i].y = this.player.y;\n      this.items[i].pickedUp = false;\n      this.equipAnimAmount[i] = 0;\n      this.game.levels[this.player.levelID].items.push(this.items[i]);\n      this.items.splice(i, 1);\n    }\n  };\n\n  hasItem = (itemType: any): Item => {\n    // itemType is class of Item we're looking for\n    for (const i of this.items) {\n      if (i instanceof itemType) return i;\n    }\n    return null;\n  };\n\n  hasItemCount = (item: Item) => {\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\n    for (const i of this.items) {\n      if (i.constructor === item.constructor && i.stackCount >= item.stackCount) return true;\n    }\n    return false;\n  };\n\n  subtractItemCount = (item: Item) => {\n    if (item instanceof Coin) {\n      this.subtractCoins(item.stackCount);\n      return;\n    }\n    for (const i of this.items) {\n      if (i.constructor === item.constructor) {\n        i.stackCount -= item.stackCount;\n        if (i.stackCount <= 0) this.items.splice(this.items.indexOf(i), 1);\n      }\n    }\n  };\n\n  coinCount = (): number => {\n    return this.coins;\n  };\n\n  subtractCoins = (n: number) => {\n    this.coins -= n;\n    if (this.coins < 0) this.coins = 0;\n  };\n\n  addCoins = (n: number) => {\n    this.coins += n;\n  };\n\n  isFull = (): boolean => {\n    return this.items.length >= (this.rows + this.expansion) * this.cols;\n  };\n\n  addItem = (item: Item): boolean => {\n    if (item instanceof Coin) {\n      this.coins += item.stack;\n      return true;\n    }\n    if (item instanceof Equippable) {\n      item.setWielder(this.player);\n    }\n    if (item.stackable) {\n      for (let i of this.items) {\n        if (i.constructor === item.constructor) {\n          // we already have an item of the same type\n          i.stackCount += item.stackCount;\n          return true;\n        }\n      }\n    }\n    if (!this.isFull()) {\n      // item is either not stackable, or it's stackable but we don't have one yet\n      this.items.push(item);\n      return true;\n    }\n    return false;\n  };\n\n  removeItem = (item: Item) => {\n    let i = this.items.indexOf(item);\n    if (i !== -1) {\n      this.items.splice(i, 0);\n    }\n  };\n\n  getArmor = (): Armor => {\n    for (const i of this.items) {\n      if (i instanceof Armor && i.equipped) return i;\n    }\n    return null;\n  };\n\n  hasWeapon = () => {\n    return this.weapon !== null;\n  };\n\n  getWeapon = () => {\n    return this.weapon;\n  };\n\n  tick = () => {\n    for (const i of this.items) {\n      i.tickInInventory();\n    }\n  };\n  \n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\n    // returns y value for next line\n    let words = text.split(\" \");\n    let line = \"\";\n\n    while (words.length > 0) {\n      if (Game.measureText(line + words[0]).width > maxWidth) {\n        Game.fillText(line, x, y);\n        line = \"\";\n        y += 8;\n      } else {\n        if (line !== \"\") line += \" \";\n        line += words[0];\n        words.splice(0, 1);\n      }\n    }\n    if (line !== \" \") {\n      Game.fillText(line, x, y);\n      y += 8;\n    }\n    return y;\n  };\n\n  drawCoins = (delta: number) => {\n    let coinX = LevelConstants.SCREEN_W - 1;\n    let coinY = LevelConstants.SCREEN_H - 1;\n\n    Game.drawItem(19, 0, 1, 2, coinX, coinY - 1, 1, 2);\n\n    let countText = \"\" + this.coins;\n    let width = Game.measureText(countText).width;\n    let countX = 4 - width;\n    let countY = -1;\n\n    Game.fillTextOutline(\n      countText,\n      coinX * GameConstants.TILESIZE + countX,\n      coinY * GameConstants.TILESIZE + countY, GameConstants.OUTLINE, \"white\"\n    );\n  };\n\n  pointInside = (x: number, y: number): boolean => {\n    let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n    let b = 2; // border\n    let g = -2; // gap\n    let hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n    let ob = 1; // outer border\n    let width = this.cols * (s + 2 * b + g) - g;\n    let height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n\n    return (x >= Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob &&\n      x <= Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob + Math.round(width + 2 * ob) &&\n      y >= Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob &&\n      y <= Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob + Math.round(height + 2 * ob));\n  }\n\n  draw = (delta: number) => {\n    this.drawCoins(delta);\n\n    if (this.isOpen) {\n      for (let i = 0; i < this.equipAnimAmount.length; i++) {\n        if (this.items[i] instanceof Equippable) {\n          if ((this.items[i] as Equippable).equipped) {\n            this.equipAnimAmount[i] += 0.2 * (1 - this.equipAnimAmount[i]);\n          } else {\n            this.equipAnimAmount[i] += 0.2 * (0 - this.equipAnimAmount[i]);\n          }\n        } else {\n          this.equipAnimAmount[i] = 0;\n        }\n      }\n\n      Game.ctx.fillStyle = \"rgb(0, 0, 0, 0.8)\";\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n      Game.ctx.globalAlpha = 1;\n\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\n      let b = 2; // border\n      let g = -2; // gap\n      let hg = 3 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\n      let ob = 1; // outer border\n      let width = this.cols * (s + 2 * b + g) - g;\n      let height = (this.rows + this.expansion) * (s + 2 * b + g) - g;\n\n      Game.ctx.fillStyle = FULL_OUTLINE;\n      Game.ctx.fillRect(\n        Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob,\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob,\n        Math.round(width + 2 * ob),\n        Math.round(height + 2 * ob)\n      );\n      Game.ctx.fillRect(\n        Math.round(0.5 * GameConstants.WIDTH - 0.5 * width + this.selX * (s + 2 * b + g)) - hg - ob,\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height + this.selY * (s + 2 * b + g)) -\n        hg -\n        ob,\n        Math.round(s + 2 * b + 2 * hg) + 2 * ob,\n        Math.round(s + 2 * b + 2 * hg) + 2 * ob\n      );\n\n      for (let x = 0; x < this.cols; x++) {\n        for (let y = 0; y < (this.rows + this.expansion); y++) {\n          Game.ctx.fillStyle = OUTLINE_COLOR;\n          Game.ctx.fillRect(\n            Math.round(0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g)),\n            Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height + y * (s + 2 * b + g)),\n            Math.round(s + 2 * b),\n            Math.round(s + 2 * b)\n          );\n          Game.ctx.fillStyle = FILL_COLOR;\n          Game.ctx.fillRect(\n            Math.round(0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height + y * (s + 2 * b + g) + b),\n            Math.round(s),\n            Math.round(s)\n          );\n          let i = x + y * this.cols;\n          Game.ctx.fillStyle = EQUIP_COLOR;\n          let yOff = s * (1 - this.equipAnimAmount[i]);\n          Game.ctx.fillRect(\n            Math.round(0.5 * GameConstants.WIDTH - 0.5 * width + x * (s + 2 * b + g) + b),\n            Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height + y * (s + 2 * b + g) + b + yOff),\n            Math.round(s),\n            Math.round(s - yOff)\n          );\n        }\n      }\n      if (Date.now() - this.openTime >= OPEN_TIME) {\n        for (let i = 0; i < this.items.length; i++) {\n          let x = i % this.cols;\n          let y = Math.floor(i / this.cols);\n\n          let drawX = Math.round(\n            0.5 * GameConstants.WIDTH -\n            0.5 * width +\n            x * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n          );\n          let drawY = Math.round(\n            0.5 * GameConstants.HEIGHT -\n            0.5 * height +\n            y * (s + 2 * b + g) +\n            b +\n            Math.floor(0.5 * s) -\n            0.5 * GameConstants.TILESIZE\n          );\n\n          let drawXScaled = drawX / GameConstants.TILESIZE;\n          let drawYScaled = drawY / GameConstants.TILESIZE;\n\n          this.items[i].drawIcon(delta, drawXScaled, drawYScaled);\n\n          //if (this.items[i] instanceof Equippable && (this.items[i] as Equippable).equipped) {\n          //  Game.drawItem(0, 4, 2, 2, x - 0.5, y - 0.5, 2, 2);\n          //}\n        }\n        Game.ctx.fillStyle = OUTLINE_COLOR;\n        Game.ctx.fillRect(\n          Math.round(0.5 * GameConstants.WIDTH - 0.5 * width + this.selX * (s + 2 * b + g)) - hg,\n          Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height + this.selY * (s + 2 * b + g)) - hg,\n          Math.round(s + 2 * b + 2 * hg),\n          Math.round(s + 2 * b + 2 * hg)\n        );\n        Game.ctx.fillStyle = FILL_COLOR;\n        Game.ctx.fillRect(\n          Math.round(\n            0.5 * GameConstants.WIDTH - 0.5 * width + this.selX * (s + 2 * b + g) + b - hg\n          ),\n          Math.round(\n            0.5 * GameConstants.HEIGHT - 0.5 * height + this.selY * (s + 2 * b + g) + b - hg\n          ),\n          Math.round(s + 2 * hg),\n          Math.round(s + 2 * hg)\n        );\n        let i = this.selX + this.selY * this.cols;\n        Game.ctx.fillStyle = EQUIP_COLOR;\n        let yOff = (s + 2 * hg) * (1 - this.equipAnimAmount[i]);\n        Game.ctx.fillRect(\n          Math.round(\n            0.5 * GameConstants.WIDTH - 0.5 * width + this.selX * (s + 2 * b + g) + b - hg\n          ),\n          Math.round(\n            0.5 * GameConstants.HEIGHT - 0.5 * height + this.selY * (s + 2 * b + g) + b - hg + yOff\n          ),\n          Math.round(s + 2 * hg),\n          Math.round(s + 2 * hg - yOff)\n        );\n\n        let drawX = Math.round(\n          0.5 * GameConstants.WIDTH -\n          0.5 * width +\n          this.selX * (s + 2 * b + g) +\n          b +\n          Math.floor(0.5 * s) -\n          0.5 * GameConstants.TILESIZE\n        );\n        let drawY = Math.round(\n          0.5 * GameConstants.HEIGHT -\n          0.5 * height +\n          this.selY * (s + 2 * b + g) +\n          b +\n          Math.floor(0.5 * s) -\n          0.5 * GameConstants.TILESIZE\n        );\n\n        let drawXScaled = drawX / GameConstants.TILESIZE;\n        let drawYScaled = drawY / GameConstants.TILESIZE;\n\n        if (i < this.items.length) this.items[i].drawIcon(delta, drawXScaled, drawYScaled);\n      }\n\n      let i = this.selX + this.selY * this.cols;\n\n      if (i < this.items.length) {\n        Game.ctx.fillStyle = \"white\";\n\n        let topPhrase = \"\";\n        if (this.items[i] instanceof Equippable) {\n          let e = this.items[i] as Equippable;\n          topPhrase = \"[SPACE] to equip\";\n          if (e.equipped) topPhrase = \"[SPACE] to unequip\";\n        }\n        if (this.items[i] instanceof Usable) {\n          topPhrase = \"[SPACE] to use\";\n        }\n\n        Game.ctx.fillStyle = \"white\";\n        let w = Game.measureText(topPhrase).width;\n        Game.fillText(topPhrase, 0.5 * (GameConstants.WIDTH - w), 5);\n\n        let lines = this.items[i].getDescription().split(\"\\n\");\n        let nextY = Math.round(\n          0.5 * GameConstants.HEIGHT - 0.5 * height + (this.rows + this.expansion) * (s + 2 * b + g) + b + 5\n        );\n        for (let j = 0; j < lines.length; j++) {\n          nextY = this.textWrap(lines[j], 5, nextY, GameConstants.WIDTH - 10);\n        }\n      }\n    }\n  };\n\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Equippable } from \"./equippable\";\n\nexport class Armor extends Equippable {\n  health: number;\n  rechargeTurnCounter: number;\n  readonly RECHARGE_TURNS = 15;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.health = 1;\n    this.rechargeTurnCounter = -1;\n    this.tileX = 5;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Armor) return false;\n    return true;\n  };\n\n  getDescription = (): string => {\n    return (\n      \"ENCHANTED ARMOR\\nA magic suit of armor. Absorbs one hit and regenerates after \" +\n      this.RECHARGE_TURNS +\n      \" turns.\"\n    );\n  };\n\n  tickInInventory = () => {\n    if (this.rechargeTurnCounter > 0) {\n      this.rechargeTurnCounter--;\n      if (this.rechargeTurnCounter === 0) {\n        this.rechargeTurnCounter = -1;\n        this.health = 1;\n      }\n    }\n  };\n\n  hurt = (damage: number) => {\n    if (this.health <= 0) return;\n    this.health -= damage;\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\n  };\n\n  drawGUI = (delta: number, playerHealth: number) => {\n    if (this.rechargeTurnCounter === -1)\n      Game.drawFX(5, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n    else {\n      let rechargeProportion = 1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\n\n      if (rechargeProportion < 0.5)\n        Game.drawFX(7, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n      else Game.drawFX(8, 2, 1, 1, playerHealth, LevelConstants.SCREEN_H - 1, 1, 1);\n    }\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Level } from \"../level\";\nimport { Usable } from \"./usable\";\nimport { Inventory } from \"../inventory\";\n\nexport class Backpack extends Usable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 4;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    if (this.level.game.levels[player.levelID] === this.level.game.level)\n      Sound.heal();\n    let b = player.inventory.hasItem(Backpack);\n    if (b !== null) {\n      // remove backpack\n      player.inventory.removeItem(b);\n    }\n    player.inventory.expansion += 1;\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n  getDescription = () => {\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class BlueGem extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 13;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"ZIRCON\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Equippable } from \"./equippable\";\nimport { Torch } from \"./torch\";\nimport { Lantern } from \"./lantern\";\n\nexport class Candle extends Equippable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 27;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    return !(other instanceof Candle || other instanceof Torch || other instanceof Lantern);\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.equipped) {\n      this.wielder.sightRadius = 9;\n    } else this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  getDescription = () => {\n    return \"CANDLE\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Coal extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 17;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"COAL\\nA lump of coal.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Sound } from \"../sound\";\n\nexport class Coin extends Item {\n  stack: number;\n  //checked: boolean;\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 19;\n    this.tileY = 0;\n    this.stack = 1;\n    this.stackable = true;\n  }\n  onDrop = () => {\n    const coinList = []; //array to store coin objects\n    for (const item of this.level.items) {\n      if (item instanceof Coin) coinList.push(item);\n    }\n    console.log(coinList);\n      for (const otherCoin of coinList) {\n        if (\n          this !== otherCoin &&\n          this.x === otherCoin.x &&\n          this.y === otherCoin.y\n        ) {\n          this.stack += otherCoin.stack;\n          this.level.items = this.level.items.filter((x) => x !== otherCoin);\n        }\n        if (this.stack === 2) this.tileX = 20;\n        else if (this.stack >= 3) this.tileX = 21;\n      }\n  };\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n  pickupSound = () => {\n    if (this.level === this.level.game.level) Sound.pickupCoin();\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\n\nexport class Equippable extends Item {\n  wielder: Player;\n  equipped: boolean;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.equipped = false;\n  }\n\n  setWielder = (wielder: Player) => {\n    this.wielder = wielder;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    return true;\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n  };\n\n  drawEquipped = (delta: number, x: number, y: number) => {\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Gold extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 18;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD\\nA nugget of gold.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Level } from \"../level\";\n\nexport class GoldenKey extends Equippable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"GOLD KEY\\nA heavy gold key.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GreenGem extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 11;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"PERIDOT\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Level } from \"../level\";\nimport { Usable } from \"./usable\";\n\nexport class Heart extends Usable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.tileX = 8;\n    this.tileY = 0;\n    this.offsetY = 0;\n  }\n\n  onUse = (player: Player) => {\n    player.health = Math.min(player.maxHealth, player.health + 1);\n    if (this.level.game.levels[player.levelID] === this.level.game.level)\n      Sound.heal();\n    this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n  };\n\n  getDescription = () => {\n    return \"HEALTH POTION\\nRestores 1 heart\";\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { Drawable } from \"../drawable\";\n\nexport class Item extends Drawable {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  offsetY: number;\n  tileX: number;\n  tileY: number;\n  frame: number;\n  level: Level;\n  stackable: boolean;\n  stackCount: number;\n  pickedUp: boolean;\n  alpha: number;\n  scaleFactor: number;\n\n  constructor(level: Level, x: number, y: number) {\n    super();\n\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.w = 1;\n    this.h = 2;\n    this.tileX = 0;\n    this.tileY = 0;\n    this.frame = 0;\n    this.stackable = false;\n    this.stackCount = 1;\n    this.pickedUp = false;\n    this.alpha = 1;\n    this.scaleFactor = 0.2;\n    this.offsetY = -0.25;\n  }\n\n  tick = () => {};\n  tickInInventory = () => {}; // different tick behavior for when we have the item in our inventory\n\n  getDescription = (): string => {\n    return \"\";\n  };\n\n  pickupSound = () => {\n    if (this.level === this.level.game.level) Sound.genericPickup();\n  };\n\n  onDrop = () => {}\n\n  onPickup = (player: Player) => {\n    if (!this.pickedUp) {\n      this.pickedUp = player.inventory.addItem(this);\n      if (this.pickedUp) this.pickupSound();\n    }\n  };\n\n  shadeAmount = () => {\n    return this.level.softVis[this.x][this.y];\n  };\n\n  draw = (delta: number) => {\n    if (!this.pickedUp) {\n      this.drawableY = this.y;\n\n      if (this.scaleFactor < 1) this.scaleFactor += 0.04;\n      else this.scaleFactor = 1;\n\n      Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\n      this.frame += (delta * (Math.PI * 2)) / 60;\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x + this.w * (this.scaleFactor * -0.5 + 0.5),\n        this.y +\n          Math.sin(this.frame) * 0.07 -\n          1 +\n          this.offsetY +\n          this.h * (this.scaleFactor * -0.5 + 0.5),\n        this.w * this.scaleFactor,\n        this.h * this.scaleFactor,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n  drawTopLayer = (delta: number) => {\n    if (this.pickedUp) {\n      this.y -= 0.125;\n      this.alpha -= 0.03;\n      if (this.y < -1)\n        this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\n\n      if (GameConstants.ALPHA_ENABLED)\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\n\n      Game.drawItem(\n        this.tileX,\n        this.tileY,\n        1,\n        2,\n        this.x,\n        this.y - 1,\n        this.w,\n        this.h\n      );\n\n      Game.ctx.globalAlpha = 1.0;\n    }\n  };\n  drawIcon = (delta: number, x: number, y: number, opacity = 1) => {\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\n    Game.ctx.globalAlpha = 1;\n\n    let countText = this.stackCount <= 1 ? \"\" : \"\" + this.stackCount;\n    let width = Game.measureText(countText).width;\n    let countX = 16 - width;\n    let countY = 10;\n\n    Game.fillTextOutline(\n      countText,\n      x * GameConstants.TILESIZE + countX,\n      y * GameConstants.TILESIZE + countY,\n      GameConstants.OUTLINE,\n      \"white\"\n    );\n  };\n}\n","import { Item } from \"./item\";\nimport { Equippable } from \"./equippable\";\nimport { Level } from \"../level\";\n\nexport class Key extends Equippable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 1;\n    this.tileY = 0;\n  }\n\n  getDescription = (): string => {\n    return \"KEY\\nAn iron key.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Torch } from \"./torch\";\n\nexport class Lantern extends Equippable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 29;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    return !(other instanceof Candle || other instanceof Torch || other instanceof Lantern);\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.equipped) {\n      this.wielder.sightRadius = 20;\n    } else this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  getDescription = () => {\n    return \"LANTERN\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class RedGem extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 12;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"GARNET\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Shrooms extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 6;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"SHROOMS\\nI don't think I should eat these...\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { TextParticle } from \"../particle/textParticle\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class Stone extends Item {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 15;\n    this.tileY = 0;\n\n    this.stackable = true;\n  }\n\n  getDescription = (): string => {\n    return \"STONE\\nSome fragments of stone.\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Equippable } from \"./equippable\";\nimport { Candle } from \"./candle\";\nimport { Lantern } from \"./lantern\";\n\nexport class Torch extends Equippable {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 28;\n    this.tileY = 0;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    return !(other instanceof Candle || other instanceof Torch || other instanceof Lantern);\n  };\n\n  toggleEquip = () => {\n    this.equipped = !this.equipped;\n    if (this.equipped) {\n      this.wielder.sightRadius = 12;\n    } else this.wielder.sightRadius = this.wielder.defaultSightRadius;\n  };\n\n  getDescription = () => {\n    return \"TORCH\";\n  };\n}\n","import { Item } from \"./item\";\nimport { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Sound } from \"../sound\";\nimport { Level } from \"../level\";\n\nexport class Usable extends Item {\n  onUse = (player: Player) => {\n  };\n}\n","import { Wall } from \"./tile/wall\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Floor } from \"./tile/floor\";\nimport { Game, LevelState } from \"./game\";\nimport { Door } from \"./tile/door\";\nimport { BottomDoor } from \"./tile/bottomDoor\";\nimport { Tile, SkinType } from \"./tile/tile\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { KnightEnemy } from \"./enemy/knightEnemy\";\nimport { Enemy } from \"./enemy/enemy\";\nimport { Chest } from \"./enemy/chest\";\nimport { Item } from \"./item/item\";\nimport { GoldenKey } from \"./item/goldenKey\";\nimport { SpawnFloor } from \"./tile/spawnfloor\";\nimport { LockedDoor } from \"./tile/lockedDoor\";\nimport { GoldenDoor } from \"./tile/goldenDoor\";\nimport { Spike } from \"./tile/spike\";\nimport { GameConstants } from \"./gameConstants\";\nimport { WizardEnemy } from \"./enemy/wizardEnemy\";\nimport { SkullEnemy } from \"./enemy/skullEnemy\";\nimport { Barrel } from \"./enemy/barrel\";\nimport { Crate } from \"./enemy/crate\";\nimport { Input } from \"./input\";\nimport { Armor } from \"./item/armor\";\nimport { Particle } from \"./particle/particle\";\nimport { Projectile } from \"./projectile/projectile\";\nimport { SpikeTrap } from \"./tile/spiketrap\";\nimport { FountainTile } from \"./tile/fountainTile\";\nimport { CoffinTile } from \"./tile/coffinTile\";\nimport { PottedPlant } from \"./enemy/pottedPlant\";\nimport { InsideLevelDoor } from \"./tile/insideLevelDoor\";\nimport { Button } from \"./tile/button\";\nimport { HitWarning } from \"./hitWarning\";\nimport { UpLadder } from \"./tile/upLadder\";\nimport { DownLadder } from \"./tile/downLadder\";\nimport { CoalResource } from \"./enemy/coalResource\";\nimport { GoldResource } from \"./enemy/goldResource\";\nimport { EmeraldResource } from \"./enemy/emeraldResource\";\nimport { Chasm } from \"./tile/chasm\";\nimport { Spawner } from \"./enemy/spawner\";\nimport { VendingMachine } from \"./enemy/vendingMachine\";\nimport { WallTorch } from \"./tile/wallTorch\";\nimport { LightSource } from \"./lightSource\";\nimport { ChargeEnemy } from \"./enemy/chargeEnemy\";\nimport { Shotgun } from \"./weapon/shotgun\";\nimport { Heart } from \"./item/heart\";\nimport { Spear } from \"./weapon/spear\";\nimport { SideDoor } from \"./tile/sidedoor\";\nimport { Drawable } from \"./drawable\";\nimport { Player } from \"./player\";\nimport { SlimeEnemy } from \"./enemy/slimeEnemy\";\nimport { ZombieEnemy } from \"./enemy/zombieEnemy\";\nimport { BigSkullEnemy } from \"./enemy/bigSkullEnemy\";\nimport { Random } from \"./random\";\nimport { Lantern } from \"./item/lantern\";\nimport { DualDagger } from \"./weapon/dualdagger\";\nimport { Pot } from \"./enemy/pot\";\nimport { BishopEnemy } from \"./enemy/bishopEnemy\";\nimport { Rook } from \"./enemy/rook\";\nimport { Rock } from \"./enemy/rockResource\";\nimport { Mushrooms } from \"./enemy/mushrooms\";\nimport { TurningEnemy } from \"./enemy/turningEnemy\";\nimport { ArmoredzombieEnemy } from \"./enemy/armoredzombieEnemy\";\nimport { Backpack } from \"./item/backpack\";\nimport { DoorDir } from \"./tile/door\";\nimport { ActionState, ActionTab } from \"./actionTab\";\n\nexport enum RoomType {\n  START,\n  DUNGEON,\n  BOSS,\n  BIGDUNGEON,\n  TREASURE,\n  FOUNTAIN,\n  COFFIN,\n  GRASS,\n  PUZZLE,\n  KEYROOM,\n  CHESSBOARD,\n  MAZE,\n  CORRIDOR,\n  SPIKECORRIDOR,\n  UPLADDER,\n  DOWNLADDER,\n  SHOP,\n  BIGCAVE,\n  CAVE,\n  SPAWNER,\n  ROPEHOLE,\n  ROPECAVE,\n}\n\nexport enum TurnState {\n  playerTurn,\n  computerTurn,\n}\n\nexport class Level {\n  x: number;\n  y: number;\n  levelArray: Tile[][];\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\n  enemies: Array<Enemy>;\n  items: Array<Item>;\n  doors: Array<any>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\n  projectiles: Array<Projectile>;\n  particles: Array<Particle>;\n  hitwarnings: Array<HitWarning>;\n  game: Game;\n  roomX: number;\n  roomY: number;\n  width: number;\n  height: number;\n  type: RoomType;\n  depth: number;\n  mapGroup: number;\n  name: string;\n  message: string;\n  turn: TurnState;\n  playerTurnTime: number;\n  playerTicked: Player;\n  skin: SkinType;\n  entered: boolean; // has the player entered this level\n  lightSources: Array<LightSource>;\n  shadeColor = \"black\";\n  walls: Array<Wall>;\n  actionTab: ActionTab\n\n  private pointInside(\n    x: number,\n    y: number,\n    rX: number,\n    rY: number,\n    rW: number,\n    rH: number\n  ): boolean {\n    if (x < rX || x >= rX + rW) return false;\n    if (y < rY || y >= rY + rH) return false;\n    return true;\n  }\n\n  tileInside = (tileX: number, tileY: number): boolean => {\n    return this.pointInside(tileX, tileY, this.roomX, this.roomY, this.width, this.height);\n  };\n\n  private buildEmptyRoom() {\n    // fill in wall and floor\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.pointInside(x, y, this.roomX + 1, this.roomY + 1, this.width - 2, this.height - 2)) {\n          this.levelArray[x][y] = new Floor(this, x, y);\n        }\n        else {\n          this.levelArray[x][y] = new Wall(this, x, y);\n          this.walls.push\n        }\n      }\n    }\n  }\n\n  private addWallBlocks(rand: () => number) {\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\n    if (this.width > 8 && rand() > 0.5)\n      numBlocks *= 4;\n    for (let i = 0; i < numBlocks; i++) {\n      let blockW = Math.min(\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\n        this.width - 4\n      );\n      let blockH = Math.min(blockW + Game.rand(-2, 2, rand), this.height - 4);\n\n      let x = Game.rand(this.roomX + 2, this.roomX + this.width - blockW - 2, rand);\n      let y = Game.rand(this.roomY + 2, this.roomY + this.height - blockH - 2, rand);\n\n      for (let xx = x; xx < x + blockW; xx++) {\n        for (let yy = y; yy < y + blockH; yy++) {\n          let w = new Wall(this, xx, yy);\n          this.levelArray[xx][yy] = w;\n          this.walls.push(w);\n        }\n      }\n    }\n  }\n\n  private addFingers(rand: () => number) {\n\n  }\n\n  private addTorches(numTorches: number, rand: () => number) {\n    let walls = [];\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\n        if (this.levelArray[xx][yy] instanceof Wall && !(this.levelArray[xx][yy + 1] instanceof Wall)) {\n          walls.push(this.levelArray[xx][yy]);\n        }\n      }\n    }\n    for (let i = 0; i < numTorches; i++) {\n      let t, x, y;\n      if (walls.length == 0) return;\n      t = walls.splice(Game.rand(0, walls.length - 1, rand), 1)[0];\n      x = t.x;\n      y = t.y;\n      this.levelArray[x][y] = new WallTorch(this, x, y);\n    }\n  }\n\n  private addChasms(rand: () => number) {\n    // add chasms\n    let w = Game.rand(2, 4, rand);\n    let h = Game.rand(2, 4, rand);\n    let xmin = this.roomX + 2;\n    let xmax = this.roomX + this.width - w - 2;\n    let ymin = this.roomY + 2;\n    let ymax = this.roomY + this.height - h - 2;\n    if (xmax < xmin || ymax < ymin) return;\n    let x = Game.rand(xmin, xmax, rand);\n    let y = Game.rand(ymin, ymax, rand);\n\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\n        // add a floor border\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\n          if (!(this.levelArray[xx][yy] instanceof SpawnFloor)) this.levelArray[xx][yy] = new Floor(this, xx, yy);\n        }\n        else\n          this.levelArray[xx][yy] = new Chasm(\n            this,\n            xx,\n            yy,\n            xx === x,\n            xx === x + w - 1,\n            yy === y,\n            yy === y + h - 1\n          );\n      }\n    }\n  }\n\n  private addChests(numChests: number, rand: () => number) {\n    // add chests\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numChests; i++) {\n      let t, x, y;\n      if (tiles.length == 0) return;\n      t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      x = t.x;\n      y = t.y;\n      this.enemies.push(new Chest(this, this.game, x, y, rand));\n    }\n  }\n\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      this.levelArray[x][y] = new SpikeTrap(this, x, y);\n    }\n  }\n\n  private addSpikes(numSpikes: number, rand: () => number) {\n    // add spikes\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numSpikes; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      this.levelArray[x][y] = new Spike(this, x, y);\n    }\n  }\n\n  private addEnemies(numEnemies: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numEnemies; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n      let tables = {\n        0: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        1: [1, 1, 3, 3, 3, 2, 2],\n        2: [1, 1, 2, 2, 3, 3, 4],\n        3: [1, 1, 1, 2, 3, 3, 3, 4, 4, 5],\n        4: [1, 2, 3, 4, 5, 6, 7],\n        5: [1, 2, 3, 4, 5, 6, 7, 8],\n        6: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        7: [1, 2, 3, 4, 5, 6, 7]\n      };\n      let max_depth_table = 7;\n      let d = Math.min(this.depth, max_depth_table);\n      if (tables[d] && tables[d].length > 0) {\n        let addEnemy = (enemy: Enemy): boolean => { // adds an enemy if it doesn't overlap any other enemies\n          for (let xx = 0; xx < enemy.w; xx++) {\n            for (let yy = 0; yy < enemy.h; yy++) {\n              if (!this.getEmptyTiles().some(tt => tt.x === x + xx && tt.y === y + yy)) {\n                numEnemies++; // extra loop iteration since we're throwing out this point\n                return false; // throw out point if it overlaps an enemy\n              }\n            }\n          }\n          this.enemies.push(enemy);\n          return true;\n        };\n\n        let type = Game.randTable(tables[d], rand);\n        switch (type) {\n          case 1:\n            addEnemy(new SlimeEnemy(this, this.game, x, y, rand));\n            break;\n          case 2:\n            addEnemy(new KnightEnemy(this, this.game, x, y, rand));\n            break;\n          case 3:\n            addEnemy(new ZombieEnemy(this, this.game, x, y, rand));\n            break;\n          case 4:\n            addEnemy(new SkullEnemy(this, this.game, x, y, rand));\n            break;\n          case 5:\n            addEnemy(new WizardEnemy(this, this.game, x, y, rand));\n            break;\n          case 6:\n            addEnemy(new ChargeEnemy(this, this.game, x, y));\n            break;\n          case 7:\n            addEnemy(new Spawner(this, this.game, x, y, rand));\n            break;\n          case 8:\n            addEnemy(new BishopEnemy(this, this.game, x, y, rand));\n            break;\n          case 9:\n            addEnemy(new ArmoredzombieEnemy(this, this.game, x, y, rand));\n            break;\n          case 10:\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y, rand))) {\n              // clear out some space\n              for (let xx = 0; xx < 2; xx++) {\n                for (let yy = 0; yy < 2; yy++) {\n                  this.levelArray[x + xx][y + yy] = new Floor(this, x + xx, y + yy); // remove any walls\n                }\n              }\n            }\n            break;\n        }\n      }\n    }\n  }\n\n  private addObstacles(numObstacles: number, rand: () => number) {\n    // add crates/barrels\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numObstacles; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n      switch (Game.randTable([1, 1, 1, 1, 2, 2, 2,], rand)) {\n        case 1:\n          this.enemies.push(new Crate(this, this.game, x, y));\n          break;\n        case 2:\n          this.enemies.push(new Barrel(this, this.game, x, y));\n          break;\n        case 3:\n          this.enemies.push(new Rook(this, this.game, x, y));\n          break;\n      }\n    }\n  }\n\n  private addPlants(numPlants: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numPlants; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      let r = rand();\n      if (r <= 0.45)\n        this.enemies.push(new PottedPlant(this, this.game, x, y, Random.rand));\n      else if (r <= 0.65)\n        this.enemies.push(new Pot(this, this.game, x, y));\n      else if (r <= 0.75)\n        this.enemies.push(new Rock(this, this.game, x, y));\n      else if (r <= 0.97)\n        this.enemies.push(new Mushrooms(this, this.game, x, y));\n      else this.enemies.push(new Chest(this, this.game, x, y, rand));\n    }\n  }\n\n\n  private addResources(numResources: number, rand: () => number) {\n    let tiles = this.getEmptyTiles();\n    for (let i = 0; i < numResources; i++) {\n      let t = tiles.splice(Game.rand(0, tiles.length - 1, rand), 1)[0];\n      if (tiles.length == 0) return;\n      let x = t.x;\n      let y = t.y;\n\n      let r = rand();\n      if (r <= (10 - this.depth ** 3) / 10)\n        this.enemies.push(new CoalResource(this, this.game, x, y));\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\n        this.enemies.push(new GoldResource(this, this.game, x, y));\n      else this.enemies.push(new EmeraldResource(this, this.game, x, y));\n    }\n  }\n\n  private addVendingMachine(rand: () => number) {\n    let t = this.getEmptyTiles().sort(() => 0.5 - Random.rand())[0];\n    let x = t.x;\n    let y = t.y;\n    let type = Game.randTable([1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6], rand);\n    switch (type) {\n      case 1:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new Heart(this, 0, 0), rand));\n        break;\n      case 2:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new Lantern(this, 0, 0), rand));\n        break;\n      case 3:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new Armor(this, 0, 0), rand));\n        break;\n      case 4:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new DualDagger(this, 0, 0), rand));\n        break;\n      case 5:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new Spear(this, 0, 0), rand));\n        break;\n      case 6:\n        this.enemies.push(new VendingMachine(this, this.game, x, y, new Shotgun(this, 0, 0), rand));\n        break;\n    }\n  }\n\n  populateEmpty = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n  };\n\n  populateDungeon = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    if (factor < 30) this.addWallBlocks(rand);\n    if (factor < 26) this.addFingers(rand);\n    if (factor % 4 === 0) this.addChasms(rand);\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    if (factor > 15) this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.35 * rand());\n    let numPlants = Math.ceil(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) * Math.min(this.depth * 0.1 + 0.1, 0.35) //this.depth * 0.01 is starting value \n    );\n    this.addEnemies(numEnemies, rand);\n\n    if (factor <= 6) this.addVendingMachine(rand);\n  };\n  populateBoss = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numTotalObstacles = Math.floor(numEmptyTiles * 0.2);\n    let numPlants = Math.floor(numTotalObstacles * rand());\n    let numObstacles = numTotalObstacles - numPlants;\n    this.addPlants(numPlants, rand);\n    this.addObstacles(numObstacles, rand);\n    let numEnemies = Math.ceil(\n      (numEmptyTiles - numTotalObstacles) * Math.min(this.depth * 0.05 + 0.2, 0.5)\n    );\n    this.addEnemies(numEnemies, rand);\n  };\n  populateBigDungeon = (rand: () => number) => {\n    if (Game.rand(1, 4, rand) === 1) this.addChasms(rand);\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    if (Game.rand(1, 4, rand) === 1) this.addPlants(Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n    if (Game.rand(1, 3, rand) === 1) this.addSpikeTraps(Game.randTable([3, 5, 7, 8], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * (this.depth * 0.5 + 0.5) * Game.randTable([0.05, 0.05, 0.06, 0.07, 0.1], rand)\n    );\n    this.addEnemies(numEnemies, rand);\n    if (numEnemies > 0) this.addObstacles(numEnemies / Game.rand(1, 2, rand), rand);\n    else this.addObstacles(Game.randTable([0, 0, 1, 1, 2, 3, 5], rand), rand);\n  };\n  populateSpawner = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.enemies.push(\n      new Spawner(\n        this,\n        this.game,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2),\n        rand\n      )\n    );\n  };\n  populateKeyRoom = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.items.push(\n      new GoldenKey(\n        this,\n        Math.floor(this.roomX + this.width / 2),\n        Math.floor(this.roomY + this.height / 2)\n      )\n    );\n  };\n  populateFountain = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    let centerX = Math.floor(this.roomX + this.width / 2);\n    let centerY = Math.floor(this.roomY + this.height / 2);\n    for (let x = centerX - 1; x <= centerX + 1; x++) {\n      for (let y = centerY - 1; y <= centerY + 1; y++) {\n        this.levelArray[x][y] = new FountainTile(this, x, y, x - (centerX - 1), y - (centerY - 1));\n      }\n    }\n\n    this.addPlants(Game.randTable([0, 0, 1, 2], rand), rand);\n  };\n  placeCoffin = (x: number, y: number) => {\n    this.levelArray[x][y] = new CoffinTile(this, x, y, 0);\n    this.levelArray[x][y + 1] = new CoffinTile(this, x, y + 1, 1);\n  };\n  populateCoffin = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2 - 2),\n      Math.floor(this.roomY + this.height / 2)\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2),\n      Math.floor(this.roomY + this.height / 2)\n    );\n    this.placeCoffin(\n      Math.floor(this.roomX + this.width / 2) + 2,\n      Math.floor(this.roomY + this.height / 2)\n    );\n  };\n  populatePuzzle = (rand: () => number) => {\n    let d;\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      let y = this.roomY + Math.floor(this.height / 2);\n      if (x === this.roomX + Math.floor(this.width / 2)) {\n        d = new InsideLevelDoor(this, this.game, x, y + 1);\n        this.levelArray[x][y + 1] = d;\n      } else {\n        this.levelArray[x][y] = new Wall(this, x, y);\n      }\n    }\n\n    let x = Game.rand(this.roomX, this.roomX + this.width - 1, rand);\n    let y = Game.rand(this.roomY + Math.floor(this.height / 2) + 3, this.roomY + this.height - 2, rand);\n\n    this.levelArray[x][y] = new Button(this, x, y, d);\n\n    let crateTiles = this.getEmptyTiles().filter(\n      t =>\n        t.x >= this.roomX + 1 &&\n        t.x <= this.roomX + this.width - 2 &&\n        t.y >= this.roomY + Math.floor(this.height / 2) + 3 &&\n        t.y <= this.roomY + this.height - 2\n    );\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\n\n    for (let i = 0; i < numCrates; i++) {\n      let t = crateTiles.splice(Game.rand(0, crateTiles.length - 1, rand), 1)[0];\n\n      this.enemies.push(new Crate(this, this.game, t.x, t.y));\n    }\n    this.addPlants(Game.randTable([0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n  };\n  populateSpikeCorridor = (rand: () => number) => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        this.levelArray[x][y] = new SpikeTrap(this, x, y, Game.rand(0, 3, rand));\n      }\n    }\n\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2, 3, 4], rand), rand);\n  };\n  populateTreasure = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 1, 1, 2, 2, 3, 4], rand), rand);\n\n    this.addChests(Game.randTable([4, 4, 5, 5, 5, 6, 8], rand), rand);\n    this.addPlants(Game.randTable([0, 1, 2, 4, 5, 6], rand), rand);\n  };\n  populateChessboard = (rand: () => number) => {\n  };\n  populateCave = (rand: () => number) => {\n    let factor = Game.rand(1, 36, rand);\n\n    this.addWallBlocks(rand);\n\n    if (factor > 15) this.addSpikeTraps(Game.randTable([0, 0, 0, 1, 1, 2, 5], rand), rand);\n    let numEmptyTiles = this.getEmptyTiles().length;\n    let numEnemies = Math.ceil(\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand)\n    );\n    this.addEnemies(numEnemies, rand);\n    this.addResources((numEmptyTiles - numEnemies) * Game.randTable([0.5, 0.6, 0.7, 0.8], rand), rand);\n  };\n  populateUpLadder = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n  };\n  populateDownLadder = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    this.levelArray[cX][cY] = new DownLadder(this, this.game, cX, cY);\n  };\n  populateRopeHole = (rand: () => number) => {\n    this.addTorches(Game.randTable([0, 0, 0, 1, 1, 2, 2], rand), rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    let d = new DownLadder(this, this.game, cX, cY);\n    d.isRope = true;\n    this.levelArray[cX][cY] = d;\n  };\n  populateRopeCave = (rand: () => number) => {\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    let upLadder = new UpLadder(this, this.game, cX, cY);\n    upLadder.isRope = true;\n    this.levelArray[cX][cY] = upLadder;\n  };\n  populateShop = (rand: () => number) => {\n    this.addTorches(2, rand);\n\n    let cX = Math.floor(this.roomX + this.width / 2);\n    let cY = Math.floor(this.roomY + this.height / 2);\n    this.enemies.push(new VendingMachine(this, this.game, cX - 2, cY - 1, new Shotgun(this, 0, 0), rand));\n    this.enemies.push(new VendingMachine(this, this.game, cX + 2, cY - 1, new Heart(this, 0, 0), rand));\n    this.enemies.push(new VendingMachine(this, this.game, cX - 2, cY + 2, new Armor(this, 0, 0), rand));\n    this.enemies.push(new VendingMachine(this, this.game, cX + 2, cY + 2, new Spear(this, 0, 0), rand));\n  };\n\n  populate = (rand: () => number) => {\n    this.name = \"\";\n    switch (this.type) {\n      case RoomType.START:\n        this.populateEmpty(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.BOSS:\n        this.populateBoss(rand);\n        this.name = \"BOSS\";\n        break;\n      case RoomType.DUNGEON:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGDUNGEON:\n        this.populateBigDungeon(rand);\n        break;\n      case RoomType.FOUNTAIN:\n        this.populateFountain(rand);\n        break;\n      case RoomType.COFFIN:\n        this.populateCoffin(rand);\n        break;\n      case RoomType.PUZZLE:\n        this.populatePuzzle(rand);\n        break;\n      case RoomType.SPIKECORRIDOR:\n        this.populateSpikeCorridor(rand);\n        break;\n      case RoomType.TREASURE:\n        this.populateTreasure(rand);\n        break;\n      case RoomType.CHESSBOARD: // TODO\n        this.populateChessboard(rand);\n        break;\n      case RoomType.KEYROOM:\n        this.populateKeyRoom(rand);\n        break;\n      case RoomType.GRASS:\n        this.populateDungeon(rand);\n        break;\n      case RoomType.BIGCAVE:\n        this.populateCave(rand);\n      case RoomType.CAVE:\n        this.populateCave(rand);\n        break;\n      case RoomType.UPLADDER:\n        this.populateUpLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.DOWNLADDER:\n        this.populateDownLadder(rand);\n        this.name = \"FLOOR \" + -this.depth;\n        break;\n      case RoomType.ROPEHOLE:\n        this.populateRopeHole(rand);\n        break;\n      case RoomType.ROPECAVE:\n        this.populateRopeCave(rand);\n        break;\n      case RoomType.SHOP:\n        /* shop rates:\n         * 10 coal for an gold coin\n         * 1 gold for 10 coins\n         * 1 emerald for 100 coins\n         *\n         * shop items:\n         * 1 empty heart   4 ^ (maxHealth + maxHealth ^ 1.05 ^ maxHealth - 2.05) coins\n         * fill all hearts  1 coin\n         * better torch    5 ^ (torchLevel + 1.05 ^ torchLevel - 2.05) coins\n         * weapons\n         */\n\n        this.populateShop(rand);\n        break;\n      case RoomType.SPAWNER:\n        this.populateSpawner(rand);\n        break;\n    }\n    this.message = this.name;\n  }\n\n  constructor(\n    game: Game,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    type: RoomType,\n    depth: number,\n    mapGroup: number,\n    rand = Random.rand,\n  ) {\n    this.game = game;\n    this.roomX = x; //Math.floor(- this.width / 2);\n    this.roomY = y; //Math.floor(- this.height / 2);\n    this.width = w;\n    this.height = h;\n    this.type = type;\n    this.depth = depth;\n    this.mapGroup = mapGroup;\n\n    this.entered = false;\n    this.turn = TurnState.playerTurn;\n    this.playerTurnTime = Date.now();\n\n    this.items = Array<Item>();\n    this.projectiles = Array<Projectile>();\n    this.hitwarnings = Array<HitWarning>();\n    this.particles = Array<Particle>();\n    this.doors = Array<Door>();\n    this.enemies = Array<Enemy>();\n    this.lightSources = Array<LightSource>();\n    this.walls = Array<Wall>();\n\n    this.levelArray = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.levelArray[x] = [];\n    }\n    this.vis = [];\n    this.softVis = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      this.vis[x] = [];\n      this.softVis[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.vis[x][y] = 1;\n        this.softVis[x][y] = 1;\n      }\n    }\n\n    this.skin = SkinType.DUNGEON;\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE) this.skin = SkinType.CAVE;\n    this.buildEmptyRoom();\n  }\n\n  addDoor = (x: number, y: number) => {\n    let d;\n    if (x === this.roomX) {\n      d = new Door(this, this.game, x, y, 1);\n      this.levelArray[x + 1][y] = new SpawnFloor(this, x + 1, y);\n    }\n    else if (x === this.roomX + this.width - 1) {\n      d = new Door(this, this.game, x, y, 3);\n      this.levelArray[x - 1][y] = new SpawnFloor(this, x - 1, y);\n    }\n    else if (y === this.roomY) {\n      d = new Door(this, this.game, x, y, 0);\n      this.levelArray[x][y + 1] = new SpawnFloor(this, x, y + 1);\n    }\n    else if (y === this.roomY + this.height - 1) {\n      d = new Door(this, this.game, x, y, 2);\n      this.levelArray[x][y - 1] = new SpawnFloor(this, x, y - 1);\n    }\n\n    this.doors.push(d);\n    if (this.levelArray[d.x] == undefined) {\n      console.log('UNDEFINED at ' + d.x + ' levelArray.length was ' + this.levelArray.length);\n      console.log('location ' + location);\n      console.log(this.roomX, this.roomY);\n      console.log(this.width, this.height);\n    }\n    this.levelArray[d.x][d.y] = d;\n\n    return d;\n  };\n\n  exitLevel = () => {\n    this.particles.splice(0, this.particles.length);\n  };\n\n  enterLevel = (player: Player) => {\n    player.moveSnap(\n      this.roomX + Math.floor(this.width / 2),\n      this.roomY + Math.floor(this.height / 2)\n    );\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  enterLevelThroughDoor = (player: Player, door: any, side?: number) => {\n    if (door instanceof Door && door.doorDir === DoorDir.North) {//if top door\n      (door as Door).opened = true;\n      player.moveNoSmooth(door.x, door.y + 1);\n    } else if (door instanceof Door && door.doorDir === DoorDir.South) {//if bottom door\n      player.moveNoSmooth(door.x, door.y - 1);\n    } else if (door instanceof Door && ([DoorDir.East , DoorDir.West].includes(door.doorDir))) {// if side door\n      player.moveNoSmooth(door.x + side, door.y);\n    }\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  enterLevelThroughLadder = (player: Player, ladder: any) => {\n    player.moveSnap(ladder.x, ladder.y + 1);\n\n    this.clearDeadStuff();\n    this.updateLighting();\n    this.entered = true;\n    this.message = this.name;\n  };\n\n  getEmptyTiles = (): Tile[] => {\n    let returnVal: Tile[] = [];\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\n        if (!this.levelArray[x][y].isSolid() && !(this.levelArray[x][y] instanceof SpikeTrap) && !(this.levelArray[x][y] instanceof SpawnFloor)) {\n          returnVal.push(this.levelArray[x][y]);\n        }\n      }\n    }\n    for (const e of this.enemies) {\n      returnVal = returnVal.filter(t => !e.pointIn(t.x, t.y));\n    }\n    return returnVal;\n  };\n\n  getTile = (x: number, y: number) => {\n    if (this.levelArray[x]) return this.levelArray[x][y];\n    else return undefined;\n  };\n\n  fadeLighting = () => {\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (Math.abs(this.softVis[x][y] - this.vis[x][y]) >= 0.02) {\n          if (this.softVis[x][y] < this.vis[x][y]) this.softVis[x][y] += 0.02;\n          else if (this.softVis[x][y] > this.vis[x][y]) this.softVis[x][y] -= 0.02;\n        }\n        //if (this.softVis[x][y] < 0.05) this.softVis[x][y] = 0;\n      }\n    }\n  };\n\n  updateLighting = () => {\n    let oldVis = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      oldVis[x] = [];\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        oldVis[x][y] = this.vis[x][y];\n        this.vis[x][y] = 1;\n        //if (this.visibilityArray[x][y] > LevelConstants.MIN_VISIBILITY)\n        //  this.visibilityArray[x][y] = 0;\n      }\n    }\n    for (const p in this.game.players) {\n      if (this === this.game.levels[this.game.players[p].levelID]) {\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n          this.castShadowsAtAngle(\n            i,\n            this.game.players[p].x + 0.5,\n            this.game.players[p].y + 0.5,\n            this.game.players[p].sightRadius - this.depth\n          );\n        }\n      }\n    }\n    for (const l of this.lightSources) {\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\n        this.castShadowsAtAngle(i, l.x, l.y, l.r);\n      }\n    }\n    if (LevelConstants.SMOOTH_LIGHTING)\n      this.vis = this.blur3x3(this.vis, [[1, 2, 1], [2, 8, 2], [1, 2, 1]]);\n\n    /*for (let x = 0; x < this.visibilityArray.length; x++) {\n      for (let y = 0; y < this.visibilityArray[0].length; y++) {\n        if (this.visibilityArray[x][y] < oldVisibilityArray[x][y]) {\n          this.visibilityArray[x][y] = Math.min(\n            oldVisibilityArray[x][y],\n            LevelConstants.MIN_VISIBILITY\n          );\n        }\n      }\n    }*/\n  };\n\n  castShadowsAtAngle = (angle: number, px: number, py: number, radius: number) => {\n    let dx = Math.cos((angle * Math.PI) / 180);\n    let dy = Math.sin((angle * Math.PI) / 180);\n    let onOpaqueSection = false;\n    for (let i = 0; i < radius; i++) {\n      if (\n        Math.floor(px) < this.roomX ||\n        Math.floor(px) >= this.roomX + this.width ||\n        Math.floor(py) < this.roomY ||\n        Math.floor(py) >= this.roomY + this.height\n      )\n        return; // we're outside the level\n\n      let tile = this.levelArray[Math.floor(px)][Math.floor(py)];\n      if (tile.isOpaque()) {\n        if (i > 0) onOpaqueSection = true;\n      } else if (onOpaqueSection) {\n        return;\n      }\n\n      this.vis[Math.floor(px)][Math.floor(py)] = Math.min(\n        this.vis[Math.floor(px)][Math.floor(py)],\n        Math.min(i / radius, 1)\n      );\n\n      px += dx;\n      py += dy;\n    }\n  };\n\n  blur3x3 = (array: Array<Array<number>>, weights: Array<Array<number>>): Array<Array<number>> => {\n    let blurredArray = [];\n    for (let x = 0; x < array.length; x++) {\n      blurredArray[x] = [];\n      for (let y = 0; y < array[0].length; y++) {\n        if (array[x][y] === 0) {\n          blurredArray[x][y] = 0;\n          continue;\n        }\n        let total = 0;\n        let totalWeights = 0;\n        for (let xx = -1; xx <= 1; xx++) {\n          for (let yy = -1; yy <= 1; yy++) {\n            if (x + xx >= 0 && x + xx < array.length && y + yy >= 0 && y + yy < array[0].length) {\n              total += array[x + xx][y + yy] * weights[xx + 1][yy + 1];\n              totalWeights += weights[xx + 1][yy + 1];\n            }\n          }\n        }\n        blurredArray[x][y] = total / totalWeights;\n      }\n    }\n    return blurredArray;\n  };\n\n  catchUp = () => {\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\n  };\n\n  tick = (player: Player) => {\n    this.enemies = this.enemies.filter(e => !e.dead);\n    this.updateLighting();\n\n    for (const h of this.hitwarnings) {\n      h.tick();\n    }\n\n    for (const p of this.projectiles) {\n      p.tick();\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.levelArray[x][y].tick();\n      }\n    }\n\n    this.turn = TurnState.computerTurn;\n    player.actionTab.actionState = ActionState.Ready;\n    //sets the action tab state to Ready\n    this.playerTurnTime = Date.now();\n    this.playerTicked = player;\n  };\n\n  update = () => {\n    if (this.turn == TurnState.computerTurn) {\n      if (Date.now() - this.playerTurnTime >= LevelConstants.COMPUTER_TURN_DELAY) {\n        this.computerTurn();\n      }\n    }\n  };\n\n  clearDeadStuff = () => {\n    this.enemies = this.enemies.filter(e => !e.dead);\n    this.projectiles = this.projectiles.filter(p => !p.dead);\n    this.hitwarnings = this.hitwarnings.filter(h => !h.dead);\n    this.particles = this.particles.filter(p => !p.dead);\n  };\n\n  computerTurn = () => {\n    // take computer turn\n    for (const e of this.enemies) {\n      e.tick();\n    }\n    this.enemies = this.enemies.filter(e => !e.dead);\n    for (const i of this.items) {\n      i.tick();\n    }\n\n    for (const h of this.hitwarnings) {\n      if (!this.levelArray[h.x] || !this.levelArray[h.x][h.y] || this.levelArray[h.x][h.y].isSolid()) h.dead = true;\n    }\n\n    for (const p of this.projectiles) {\n      if (this.levelArray[p.x][p.y].isSolid()) p.dead = true;\n      for (const i in this.game.players) {\n        if (this.game.levels[this.game.players[i].levelID] === this && p.x === this.game.players[i].x && p.y === this.game.players[i].y) {\n          p.hitPlayer(this.game.players[i]);\n        }\n      }\n      for (const e of this.enemies) {\n        if (p.x === e.x && p.y === e.y) {\n          p.hitEnemy(e);\n        }\n      }\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.levelArray[x][y].tickEnd();\n      }\n    }\n    this.enemies = this.enemies.filter(e => !e.dead); // enemies may be killed by spiketrap\n\n    this.clearDeadStuff();\n\n    this.playerTicked.finishTick();\n    this.turn = TurnState.playerTurn;\n\n  };\n\n  draw = (delta: number) => {\n    HitWarning.updateFrame(delta);\n\n    this.fadeLighting();\n  };\n\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\n    let tiles = [];\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1) this.levelArray[x][y].drawUnderPlayer(delta);\n        tiles.push(this.levelArray[x][y]);\n      }\n    }\n\n    let drawables = new Array<Drawable>();\n\n    drawables = drawables.concat(tiles, this.enemies, this.hitwarnings, this.projectiles, this.particles, this.items);\n    for (const i in this.game.players) {\n      if (this.game.levels[this.game.players[i].levelID] === this) {\n        if (!(skipLocalPlayer && this.game.players[i] === this.game.players[this.game.localPlayerID]))\n          drawables.push(this.game.players[i]);\n      }\n    }\n    drawables.sort((a, b) => {\n      if (a instanceof Floor) {\n        return -1;\n      } else if (b instanceof Floor) {\n        return 1;\n      }\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\n        if (a instanceof Player) {\n          return 1;\n        } else if (b instanceof Player) {\n          return -1;\n        } else if (a instanceof Enemy) {\n          return 1;\n        } else if (b instanceof Enemy) {\n          return -1;\n        } else return 0;\n      } else {\n        return a.drawableY - b.drawableY;\n      }\n    });\n\n    for (const d of drawables) {\n      d.draw(delta);\n    }\n\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        if (this.softVis[x][y] < 1) this.levelArray[x][y].drawAbovePlayer(delta);\n      }\n    }\n\n    for (const i of this.items) {\n      i.drawTopLayer(delta);\n    }\n  };\n\n  drawShade = (delta: number) => {\n    let bestSightRadius = 0;\n    for (const p in this.game.players) {\n      if (this.game.levels[this.game.players[p].levelID] === this && this.game.players[p].sightRadius > bestSightRadius) {\n        bestSightRadius = this.game.players[p].sightRadius;\n      }\n    }\n    let shadingAlpha = Math.max(0, Math.min(0.8, (2 * this.depth) / bestSightRadius));\n    if (GameConstants.ALPHA_ENABLED) {\n      Game.ctx.globalAlpha = shadingAlpha;\n      //Game.ctx.fillStyle = \"#400a0e\";\n      Game.ctx.fillStyle = this.shadeColor;\n      Game.ctx.fillRect(\n        (this.roomX - LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.roomY - LevelConstants.SCREEN_H) * GameConstants.TILESIZE,\n        (this.width + 2 * LevelConstants.SCREEN_W) * GameConstants.TILESIZE,\n        (this.height + 2 * LevelConstants.SCREEN_H) * GameConstants.TILESIZE\n      );\n      Game.ctx.globalAlpha = 1.0;\n      Game.ctx.globalCompositeOperation = \"source-over\";\n    }\n  };\n\n  drawOverShade = (delta: number) => {\n    for (const e of this.enemies) {\n      e.drawTopLayer(delta); // health bars\n    }\n\n    for (const p of this.projectiles) {\n      p.drawTopLayer(delta);\n    }\n\n    for (const h of this.hitwarnings) {\n      h.drawTopLayer(delta);\n    }\n\n    // draw over dithered shading\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\n        this.levelArray[x][y].drawAboveShading(delta);\n      }\n    }\n  };\n\n  // for stuff rendered on top of the player\n  drawTopLayer = (delta: number) => {\n    // gui stuff\n\n    // room name\n    let old = Game.ctx.font;\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n    Game.fillText(\n      this.message,\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\n      5\n    );\n    Game.ctx.font = old;\n  };\n}\n","import { GameConstants } from \"./gameConstants\";\n\nexport class LevelConstants {\n  static SCREEN_W = 1;\n  static SCREEN_H = 1;\n\n  static readonly COMPUTER_TURN_DELAY = 300; // milliseconds\n  static readonly TURN_TIME = 1000; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\n  static readonly ROOM_COUNT = 15;\n\n  static readonly HEALTH_BAR_FADEIN = 100;\n  static readonly HEALTH_BAR_FADEOUT = 100;\n  static readonly HEALTH_BAR_TOTALTIME = 2500;\n\n  static readonly SHADED_TILE_CUTOFF = 1;\n  static SMOOTH_LIGHTING = false; //doesn't work\n  static readonly MIN_VISIBILITY = 2.0; // visibility level of places you've already seen\n  static readonly LIGHTING_ANGLE_STEP = 5; // how many degrees between each ray\n\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\n}\n","import { Game } from \"./game\";\nimport { Level, RoomType } from \"./level\";\nimport { Door } from \"./tile/door\";\nimport { BottomDoor } from \"./tile/bottomDoor\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Random } from \"./random\"\nimport { DownLadder } from \"./tile/downLadder\";\nimport { SideDoor } from \"./tile/sidedoor\";\n\nclass PartitionConnection {\n  x: number;\n  y: number;\n  other: Partition;\n\n  constructor(x: number, y: number, other: Partition) {\n    this.x = x;\n    this.y = y;\n    this.other = other;\n  }\n}\n\nclass Partition {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  type: RoomType;\n  connections: Array<PartitionConnection>;\n  distance: number;\n\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.type = RoomType.DUNGEON;\n    this.connections = [];\n    this.distance = 1000;\n  }\n\n  split = () => {\n    let rand_mid = () => {\n      let center = 0.5;\n      let width = 0.6;\n      return (Random.rand() - 0.5) * width + center;\n    }\n\n    let MIN_SIZE = 3;\n\n    if (this.w > this.h) {\n      let w1 = Math.floor(rand_mid() * this.w);\n      let w2 = this.w - w1 - 1;\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\n      return [new Partition(this.x, this.y, w1, this.h), new Partition(this.x + w1 + 1, this.y, w2, this.h)];\n    } else {\n      let h1 = Math.floor(rand_mid() * this.h);\n      let h2 = this.h - h1 - 1;\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\n      return [new Partition(this.x, this.y, this.w, h1), new Partition(this.x, this.y + h1 + 1, this.w, h2)];\n    }\n  }\n\n  point_in = (x: number, y: number): boolean => {\n    return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n  }\n\n  point_next_to = (x: number, y: number): boolean => {\n    return (x >= this.x - 1 && x < this.x + this.w + 1 && y >= this.y && y < this.y + this.h) ||\n      (x >= this.x && x < this.x + this.w && y >= this.y - 1 && y < this.y + this.h + 1);\n  }\n\n  area = (): number => {\n    return this.w * this.h;\n  }\n\n  overlaps = (other: Partition): boolean => {\n    return other.x < this.x + this.w + 1 && other.x + other.w > this.x - 1 && other.y < this.y + this.h + 1 && other.y + other.h > this.y - 1;\n  }\n\n  get_branch_point = (): { x: number, y: number } => {\n    let points = [];\n    for (let x = this.x; x < this.x + this.w; x++) {\n      points.push({ x: x, y: this.y - 1 });\n      points.push({ x: x, y: this.y + this.h });\n    }\n    for (let y = this.y; y < this.y + this.h; y++) {\n      points.push({ x: this.x - 1, y: y });\n      points.push({ x: this.x + this.w, y: y });\n    }\n    points = points.filter(p => !this.connections.some(c => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1));\n    points.sort(() => 0.5 - Random.rand());\n    return points[0];\n  }\n}\n\nlet split_partitions = (partitions: Array<Partition>, prob: number): Array<Partition> => {\n  for (let partition of partitions) {\n    if (Random.rand() < prob) {\n      partitions = partitions.filter(p => p !== partition); // remove partition\n      partitions = partitions.concat(partition.split()); // add splits\n    }\n  }\n  return partitions;\n};\n\nlet remove_wall_rooms = (partitions: Array<Partition>, w: number, h: number): Array<Partition> => {\n  for (const partition of partitions) {\n    if (partition.x === 0 || partition.y === 0 || partition.x + partition.w === w || partition.y + partition.h === h) {\n      partitions = partitions.filter(p => p != partition);\n    }\n  }\n  return partitions;\n}\n\nlet populate_grid = (partitions: Array<Partition>, grid: Array<Array<Partition | false>>, w: number, h: number): Array<Array<Partition | false>> => {\n  for (let x = 0; x < w; x++) {\n    grid[x] = [];\n    for (let y = 0; y < h; y++) {\n      grid[x][y] = false;\n      for (const partition of partitions) {\n        if (partition.point_in(x, y)) grid[x][y] = partition;\n      }\n    }\n  }\n  return grid;\n}\n\nlet generate_dungeon_candidate = (map_w: number, map_h: number): Array<Partition> => {\n  let partitions = [new Partition(0, 0, map_w, map_h)];\n  let grid = [];\n\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.75);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 1);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.5);\n  partitions = remove_wall_rooms(partitions, map_w, map_h);\n  grid = populate_grid(partitions, grid, map_w, map_h);\n\n  partitions.sort((a, b) => a.area() - b.area());\n\n  let spawn = partitions[0];\n  spawn.type = RoomType.START;\n  partitions[partitions.length - 1].type = RoomType.BOSS;\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  let found_boss = false;\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && !found_boss) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 100;\n\n    while (doors_found < num_doors && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of partitions) {\n        if (p !== room && connected.indexOf(p) === -1 && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          if (p.type === RoomType.BOSS) found_boss = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partitions) {\n    if (partition.connections.length === 0) partitions = partitions.filter(p => p !== partition);\n  }\n  grid = populate_grid(partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partitions.length === 0) {\n    return []; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partitions.length);\n    let room = partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partitions.filter(p => !room.connections.some(c => c.other === p));\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // add stair room\n  if (!partitions.some(p => p.type === RoomType.BOSS)) return [];\n  let boss = partitions.find(p => p.type === RoomType.BOSS);\n  let found_stair = false;\n  const max_stair_tries = 100;\n  for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\n    let stair = new Partition(Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand), boss.y - 4, 3, 3);\n    stair.type = RoomType.DOWNLADDER;\n    if (!partitions.some(p => p.overlaps(stair))) {\n      found_stair = true;\n      partitions.push(stair);\n      stair.connections.push(new PartitionConnection(stair.x + 1, stair.y + 3, boss));\n      boss.connections.push(new PartitionConnection(stair.x + 1, stair.y + 3, stair));\n      break;\n    }\n  }\n  if (!found_stair) return [];\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1)\n        frontier.push(other);\n    }\n  }\n\n  // add special rooms\n  let added_rope_hole = false;\n  for (const p of partitions) {\n    if (p.type === RoomType.DUNGEON) {\n      if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0.1) {\n        p.type = RoomType.TREASURE;\n      }\n      else if (!added_rope_hole && p.distance > 3 && p.area() <= 20 && Random.rand() < 0.5) {\n        p.type = RoomType.ROPEHOLE;\n        added_rope_hole = true;\n      }\n    }\n  }\n\n  return partitions;\n}\n\nlet generate_dungeon = (map_w: number, map_h: number): Array<Partition> => {\n  let passes_checks = false;\n  let partitions;\n\n  let tries = 0;\n\n  while (!passes_checks) {\n    partitions = generate_dungeon_candidate(map_w, map_h);\n\n    passes_checks = true;\n    if (partitions.length < 6) passes_checks = false;\n    if (!partitions.some(p => p.type === RoomType.BOSS)) passes_checks = false;\n    else if (partitions.find(p => p.type === RoomType.BOSS).distance < 3) passes_checks = false;\n\n    tries++;\n    if (tries > 100) break;\n  }\n\n  return partitions;\n}\n\nlet generate_cave_candidate = (map_w: number, map_h: number, num_rooms: number): Array<Partition> => {\n  let partitions = [new Partition(0, 0, map_w, map_h)];\n  let grid = [];\n\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.75);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 1);\n  for (let i = 0; i < 3; i++) partitions = split_partitions(partitions, 0.5);\n  grid = populate_grid(partitions, grid, map_w, map_h);\n\n  partitions.sort((a, b) => a.area() - b.area());\n\n  let spawn = partitions[0];\n  spawn.type = RoomType.ROPECAVE;\n  for (let i = 1; i < partitions.length; i++) partitions[i].type = RoomType.CAVE;\n\n  let connected = [spawn];\n  let frontier = [spawn];\n\n  // connect rooms until we find the boss\n  while (frontier.length > 0 && connected.length < num_rooms) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n\n    let doors_found = 0;\n    const num_doors = Math.floor(Random.rand() * 2 + 1);\n\n    let tries = 0;\n    const max_tries = 100;\n\n    while (doors_found < num_doors && tries < max_tries && connected.length < num_rooms) {\n      let point = room.get_branch_point();\n      for (const p of partitions) {\n        if (p !== room && connected.indexOf(p) === -1 && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          frontier.push(p);\n          connected.push(p);\n          doors_found++;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // remove rooms we haven't connected to yet\n  for (const partition of partitions) {\n    if (partition.connections.length === 0) partitions = partitions.filter(p => p !== partition);\n  }\n  grid = populate_grid(partitions, grid, map_w, map_h); // recalculate with removed rooms\n\n  // make sure we haven't removed all the rooms\n  if (partitions.length === 0) {\n    return []; // for now just return an empty list so we can retry\n  }\n\n  // make some loops\n  let num_loop_doors = Math.floor(Random.rand() * 4 + 4);\n  for (let i = 0; i < num_loop_doors; i++) {\n    let roomIndex = Math.floor(Random.rand() * partitions.length);\n    let room = partitions[roomIndex];\n\n    let found_door = false;\n\n    let tries = 0;\n    const max_tries = 100;\n\n    let not_already_connected = partitions.filter(p => !room.connections.some(c => c.other === p));\n\n    while (!found_door && tries < max_tries) {\n      let point = room.get_branch_point();\n      for (const p of not_already_connected) {\n        if (p !== room && p.point_next_to(point.x, point.y)) {\n          room.connections.push(new PartitionConnection(point.x, point.y, p));\n          p.connections.push(new PartitionConnection(point.x, point.y, room));\n          found_door = true;\n          break;\n        }\n      }\n      tries++;\n    }\n  }\n\n  // calculate room distances\n  frontier = [spawn];\n  let seen = [];\n  spawn.distance = 0;\n  while (frontier.length > 0) {\n    let room = frontier[0];\n    frontier.splice(0, 1);\n    seen.push(room);\n\n    for (let c of room.connections) {\n      let other = c.other;\n      other.distance = Math.min(other.distance, room.distance + 1);\n\n      if (seen.indexOf(other) === -1)\n        frontier.push(other);\n    }\n  }\n\n  return partitions;\n}\n\nlet generate_cave = (map_w: number, map_h: number): Array<Partition> => {\n  let passes_checks = false;\n  let partitions;\n\n  while (!passes_checks) {\n    const NUM_ROOMS = 5;\n    partitions = generate_cave_candidate(map_w, map_h, NUM_ROOMS);\n\n    passes_checks = true;\n    if (partitions.length < NUM_ROOMS) passes_checks = false;\n  }\n\n  return partitions;\n}\n\nexport class LevelGenerator {\n  game: Game;\n  seed: number;\n  depthReached = 0;\n  currentFloorFirstLevelID = 0;\n\n  getLevels = (partitions: Array<Partition>, depth: number, mapGroup: number): Array<Level> => {\n    let levels: Array<Level> = [];\n\n    for (let i = 0; i < partitions.length; i++) {\n      let level = new Level(this.game, partitions[i].x - 1, partitions[i].y - 1, partitions[i].w + 2, partitions[i].h + 2, partitions[i].type, depth, mapGroup, Random.rand);\n      levels.push(level);\n    }\n\n    let doors_added: Array<Door> = [];\n\n    for (let i = 0; i < partitions.length; i++) {\n      for (const connection of partitions[i].connections) {\n        let d = levels[i].addDoor(connection.x, connection.y);\n        let existing_door = doors_added.find(e => e.x === d.x && e.y === d.y);\n        if (existing_door) {\n          existing_door.link(d);\n          d.link(existing_door);\n        }\n        doors_added.push(d);\n      }\n    }\n\n    for (let level of levels) {\n      level.populate(Random.rand);\n    }\n\n    return levels;\n  }\n\n  setSeed = (seed: number) => {\n    this.seed = seed;\n  };\n\n  generate = (game: Game, depth: number, cave = false): Level => {\n    console.assert(cave || this.depthReached === 0 || depth === this.depthReached + 1);\n    this.depthReached = depth;\n\n    Random.setState(this.seed + depth);\n\n    this.game = game;\n\n    let mapGroup = 0;\n    if (this.game.levels.length > 0)\n      mapGroup = this.game.levels[this.game.levels.length - 1].mapGroup + 1;\n\n    let partitions;\n    if (cave)\n      partitions = generate_cave(20, 20);\n    else\n      partitions = generate_dungeon(35, 35);\n    let levels = this.getLevels(partitions, depth, mapGroup);\n\n    let numExistingLevels = this.game.levels.length;\n    if (!cave) this.currentFloorFirstLevelID = numExistingLevels;\n    this.game.levels = this.game.levels.concat(levels);\n\n    for (let i = numExistingLevels; i < numExistingLevels + levels.length; i++) {\n      let found = false;\n      if (this.game.levels[i].type === RoomType.ROPEHOLE) {\n        for (let x = this.game.levels[i].roomX; x < this.game.levels[i].roomX + this.game.levels[i].width; x++) {\n          for (let y = this.game.levels[i].roomY; y < this.game.levels[i].roomY + this.game.levels[i].height; y++) {\n            let tile = this.game.levels[i].levelArray[x][y];\n            if (tile instanceof DownLadder && tile.isRope) {\n              tile.generate();\n              found = true;\n            }\n          }\n        }\n      }\n      if (found) break;\n    }\n\n    if (cave)\n      return levels.find(l => l.type === RoomType.ROPECAVE);\n    else\n      return levels.find(l => l.type === RoomType.START);\n  };\n\n  generateFirstNFloors = (game, numFloors) => {\n    this.generate(game, 0, false);\n    for (let i = 0; i < numFloors; i++) {\n      let found = false;\n      for (let j = this.game.levels.length - 1; j >= 0; j--) {\n\n        if (this.game.levels[j].type === RoomType.DOWNLADDER) {\n          for (let x = this.game.levels[j].roomX; x < this.game.levels[j].roomX + this.game.levels[j].width; x++) {\n            for (let y = this.game.levels[j].roomY; y < this.game.levels[j].roomY + this.game.levels[j].height; y++) {\n              let tile = this.game.levels[j].levelArray[x][y];\n              if (tile instanceof DownLadder) {\n                tile.generate();\n                found = true;\n              }\n            }\n          }\n        }\n\n        if (found) break;\n      }\n    }\n  }\n}\n","export class LightSource {\n  x: number;\n  y: number;\n  r: number;\n\n  constructor(x: number, y: number, r: number) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n  }\n}\n","import { Game } from \"./game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { RoomType } from \"./level\";\nimport { EntityType } from \"./enemy/enemy\";\nimport { Wall } from \"./tile/wall\";\n\nexport class Map {\n  game: Game;\n\n  constructor(game: Game) {\n    this.game = game;\n  }\n\n  draw = (delta: number) => {\n    const s = 2;\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0;\n    Game.ctx.fillStyle = \"white\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    Game.ctx.translate(\n      0.75 * GameConstants.WIDTH -\n        this.game.level.roomX -\n        Math.floor(0.5 * this.game.level.width) +\n        20,\n      0.25 * GameConstants.HEIGHT -\n        this.game.level.roomY -\n        Math.floor(0.5 * this.game.level.height)\n    );\n\n    Game.ctx.globalAlpha = 1;\n    for (const level of this.game.levels) {\n      if (this.game.level.mapGroup === level.mapGroup && level.entered) {\n        Game.ctx.fillStyle = \"#5A5A5A\";\n        Game.ctx.fillRect(\n          level.roomX * s + 0,\n          level.roomY * s + 0,\n          level.width * s - 0,\n          level.height * s - 0\n        );\n        if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\n        if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\n        Game.ctx.fillStyle = \"black\";\n        Game.ctx.fillRect(\n          level.roomX * s + 1,\n          level.roomY * s + 1,\n          level.width * s - 2,\n          level.height * s - 2\n        );\n        for (const wall of level.walls) {\n          Game.ctx.fillStyle = \"#404040\";\n          Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\n        }\n        for (const door of level.doors) {\n          if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\n          if (door.opened === true)\n            (Game.ctx.fillStyle = \"black\"),\n              Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\n        }\n        for (const enemy of level.enemies) {\n          if (enemy.entityType === EntityType.Enemy) {\n            Game.ctx.fillStyle = \"yellow\";\n          }\n          if (enemy.entityType === EntityType.Prop) {\n            Game.ctx.fillStyle = \"#847e87\";\n          }\n          if (enemy.entityType === EntityType.Resource) {\n            Game.ctx.fillStyle = \"#5a595b\";\n          }\n          if (enemy.entityType === EntityType.Friendly) {\n            Game.ctx.fillStyle = \"cyan\";\n          }\n\n          Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\n        }\n        for (const item of level.items) {\n          let x = item.x;\n          let y = item.y;\n          Game.ctx.fillStyle = \"#ac3232\";\n          if (!item.pickedUp) {\n            Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\n          }\n        }\n      }\n    }\n    for (const i in this.game.players) {\n      Game.ctx.fillStyle = \"white\";\n      if (\n        this.game.levels[this.game.players[i].levelID].mapGroup ===\n        this.game.level.mapGroup\n      ) {\n        Game.ctx.fillRect(\n          this.game.players[i].x * s,\n          this.game.players[i].y * s,\n          1 * s,\n          1 * s\n        );\n      }\n    }\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  };\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class DeathParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 1.5;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    let yOffset = Math.max(0, ((this.frame - 3) * 3) / GameConstants.TILESIZE);\n    let f = Math.round(this.frame);\n    if (f == 2 || f == 4 || f == 6) Game.drawMob(2, 0, 1, 2, this.x, this.y - yOffset, 1, 2);\n    else Game.drawFX(Math.round(this.frame), 4, 1, 2, this.x, this.y - yOffset, 1, 2);\n\n    this.frame += 0.3 * delta;\n    if (this.frame > 10) this.dead = true;\n  };\n}\n","import { Level } from \"../level\";\nimport { Particle } from \"./particle\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\n\nexport class GenericParticle extends Particle {\n  level: Level;\n  x: number;\n  y: number;\n  z: number;\n  s: number;\n  dx: number;\n  dy: number;\n  targetX: number;\n  targetY: number;\n  targetZ: number;\n  dz: number;\n  color: string;\n  alpha: number;\n  delay: number;\n  expirationTimer: number;\n\n  static shotgun = (\n    level: Level,\n    cx: number,\n    cy: number,\n    tx: number,\n    ty: number,\n    color: string\n  ) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx,\n          cy,\n          0,\n          Math.random() * 0.5 + 0.3,\n          0,\n          0,\n          0,\n          color,\n          0,\n          10000000,\n          tx + Math.random() - 0.5,\n          ty + Math.random() - 0.5,\n          0\n        )\n      );\n    }\n  };\n\n  static spawnCluster = (level: Level, cx: number, cy: number, color: string) => {\n    for (let i = 0; i < 4; i++) {\n      level.particles.push(\n        new GenericParticle(\n          level,\n          cx + Math.random() * 0.05 - 0.025,\n          cy + Math.random() * 0.05 - 0.025,\n          Math.random() * 0.5,\n          0.0625 * (i + 8),\n          0.025 * (Math.random() * 2 - 1),\n          0.025 * (Math.random() * 2 - 1),\n          0.2 * (Math.random() - 1),\n          color,\n          0\n        )\n      );\n    }\n  };\n\n  constructor(\n    level: Level,\n    x: number,\n    y: number,\n    z: number,\n    s: number,\n    dx: number,\n    dy: number,\n    dz: number,\n    color: string,\n    delay?: number,\n    expirationTimer?: number,\n    targetX?: number,\n    targetY?: number,\n    targetZ?: number\n  ) {\n    super();\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.s = s;\n    this.dx = dx;\n    this.dy = dy;\n    this.dz = dz;\n    this.color = color;\n    this.alpha = 1.0;\n    if (delay !== undefined) this.delay = delay;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.targetZ = targetZ;\n    this.expirationTimer = 1000000;\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\n  }\n\n  render = () => {\n    let scale = GameConstants.TILESIZE;\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\n    let halfS = 0.5 * scaledS;\n    let oldFillStyle = Game.ctx.fillStyle;\n    Game.ctx.fillStyle = this.color;\n\n    Game.ctx.beginPath();\n    Game.ctx.arc(\n      Math.round(this.x * scale),\n      Math.round((this.y - this.z) * scale),\n      Math.round(halfS * scale),\n      0,\n      2 * Math.PI,\n      false\n    );\n    Game.ctx.fill();\n\n    Game.ctx.fillStyle = oldFillStyle;\n  };\n\n  draw = (delta: number) => {\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\n    else this.x += this.dx;\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\n    else this.y += this.dy;\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\n    else this.z += this.dz;\n\n    this.dx *= 0.97;\n    this.dy *= 0.97;\n    if (this.z <= 0) {\n      this.z = 0;\n      this.dz *= -0.8;\n    }\n\n    // apply gravity\n    this.dz -= 0.01;\n\n    if (this.alpha < 0.2) this.alpha -= 0.007;\n    else this.alpha -= 0.02;\n    if (this.alpha <= 0.1) this.dead = true;\n\n    this.expirationTimer--;\n    if (this.expirationTimer <= 0) this.dead = true;\n\n    if (this.dead) return;\n\n    this.drawableY = this.y;\n\n    this.render();\n  };\n}\n","import { Drawable } from \"../drawable\";\n\nexport class Particle extends Drawable {\n  dead: boolean;\n}\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Particle } from \"./particle\";\n\nexport class SlashParticle extends Particle {\n  x: number;\n  y: number;\n  frame: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y - 0.25;\n    this.dead = false;\n    this.frame = 0;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    Game.drawFX(Math.round(this.frame), 13, 1, 1, this.x, this.y, 1, 1);\n\n    this.frame += 0.5 * delta;\n    if (this.frame > 9) this.dead = true;\n  };\n}\n","import { Particle } from \"./particle\";\nimport { Game } from \"../game\";\n\nexport class WizardTeleportParticle extends Particle {\n  x: number;\n  y: number;\n  z: number;\n  dz: number;\n  frame: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n    this.frame = 0;\n    this.z = 0;\n    this.dz = 0.1;\n  }\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\n    this.z += this.dz;\n    this.dz *= 0.9;\n    this.frame += 0.25 * delta;\n    if (this.frame > 6) this.dead = true;\n  };\n}\n","import { Input, InputEnum } from \"./input\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Game, LevelState } from \"./game\";\nimport { Door } from \"./tile/door\";\nimport { BottomDoor } from \"./tile/bottomDoor\";\nimport { Trapdoor } from \"./tile/trapdoor\";\nimport { Inventory } from \"./inventory\";\nimport { LockedDoor } from \"./tile/lockedDoor\";\nimport { Sound } from \"./sound\";\nimport { LevelConstants } from \"./levelConstants\";\nimport { Map } from \"./map\";\nimport { SlashParticle } from \"./particle/slashParticle\";\nimport { HealthBar } from \"./healthbar\";\nimport { VendingMachine } from \"./enemy/vendingMachine\";\nimport { SideDoor } from \"./tile/sidedoor\";\nimport { Drawable } from \"./drawable\";\nimport { Random } from \"./random\";\nimport { GenericParticle } from \"./particle/genericParticle\";\nimport { ActionState, ActionTab } from \"./actionTab\";\nimport { HitWarning } from \"./hitWarning\";\n\nexport enum PlayerDirection {\n  DOWN = 0,\n  UP = 1,\n  RIGHT = 2,\n  LEFT = 3,\n}\n\nexport class Player extends Drawable {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  drawX: number;\n  drawY: number;\n  frame: number;\n  direction: PlayerDirection;\n  game: Game;\n  levelID: number; // which room we're in (level[levelID])\n  flashing: boolean;\n  flashingFrame: number;\n  health: number;\n  maxHealth: number;\n  healthBar: HealthBar;\n  dead: boolean;\n  lastTickHealth: number;\n  inventory: Inventory;\n  missProb: number;\n  sightRadius: number;\n  defaultSightRadius: number;\n  guiHeartFrame: number;\n  map: Map;\n  openVendingMachine: VendingMachine;\n  isLocalPlayer: boolean;\n  mapToggled: boolean;\n  actionTab: ActionTab;\n\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\n    super();\n\n    this.game = game;\n\n    this.levelID = 0;\n\n    this.x = x;\n    this.y = y;\n    this.w = 1;\n    this.h = 1;\n    this.drawX = 0;\n    this.drawY = 0;\n\n    this.frame = 0;\n\n    this.direction = PlayerDirection.UP;\n\n    this.isLocalPlayer = isLocalPlayer;\n    if (isLocalPlayer) {\n      Input.leftSwipeListener = () => this.inputHandler(InputEnum.LEFT);\n      Input.rightSwipeListener = () => this.inputHandler(InputEnum.RIGHT);\n      Input.upSwipeListener = () => this.inputHandler(InputEnum.UP);\n      Input.downSwipeListener = () => this.inputHandler(InputEnum.DOWN);\n      Input.tapListener = () => {\n        if (this.inventory.isOpen) {\n          if (this.inventory.pointInside(Input.mouseX, Input.mouseY)) {\n            this.inputHandler(InputEnum.SPACE);\n          } else {\n            this.inputHandler(InputEnum.I);\n          }\n        } else this.inputHandler(InputEnum.I);\n      };\n    }\n    this.mapToggled = true;\n    this.health = 10;\n    this.maxHealth = 10;\n    this.healthBar = new HealthBar();\n    this.dead = false;\n    this.flashing = false;\n    this.flashingFrame = 0;\n    this.lastTickHealth = this.health;\n    this.guiHeartFrame = 0;\n\n    this.inventory = new Inventory(game, this);\n\n    this.missProb = 0.1;\n\n    this.defaultSightRadius = 6;\n    this.sightRadius = this.defaultSightRadius;\n\n    this.map = new Map(this.game);\n    this.actionTab = new ActionTab(this.inventory, this.game);\n  }\n\n  inputHandler = (input: InputEnum) => {\n    switch (input) {\n      case InputEnum.LEFT:\n      case InputEnum.RIGHT:\n      case InputEnum.UP:\n      case InputEnum.DOWN:\n        if (!this.ignoreDirectionInput()) this.game.sendInput(input);\n        break;\n      case InputEnum.I:\n      case InputEnum.Q:\n      case InputEnum.SPACE:\n        this.game.sendInput(input);\n        break;\n    }\n  };\n\n  tapListener = () => {\n    this.inventory.open();\n  };\n  iListener = () => {\n    this.inventory.open();\n  };\n  qListener = () => {\n    if (this.inventory.isOpen) {\n      this.inventory.drop();\n    }\n  };\n  ignoreDirectionInput = (): boolean => {\n    return (\n      !this.inventory.isOpen &&\n      (this.dead || this.game.levelState !== LevelState.IN_LEVEL)\n    );\n  };\n  leftListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.left();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.left();\n      return true;\n    }\n\n    return false;\n  };\n  rightListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.right();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.right();\n      return true;\n    }\n\n    return false;\n  };\n  upListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.up();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.up();\n      return true;\n    }\n\n    return false;\n  };\n  downListener = (isLocal: boolean): boolean => {\n    if (this.inventory.isOpen) {\n      this.inventory.down();\n      return true;\n    }\n    if (\n      !this.dead &&\n      (!isLocal || this.game.levelState === LevelState.IN_LEVEL)\n    ) {\n      this.down();\n      return true;\n    }\n\n    return false;\n  };\n  spaceListener = () => {\n    if (this.inventory.isOpen) {\n      this.inventory.space();\n      return;\n    }\n    if (this.openVendingMachine) {\n      this.openVendingMachine.space();\n    }\n  };\n  left = () => {\n    this.tryMove(this.x - 1, this.y);\n    this.direction = PlayerDirection.LEFT;\n  };\n  right = () => {\n    this.tryMove(this.x + 1, this.y);\n    this.direction = PlayerDirection.RIGHT;\n  };\n  up = () => {\n    this.tryMove(this.x, this.y - 1);\n    this.direction = PlayerDirection.UP;\n  };\n  down = () => {\n    this.tryMove(this.x, this.y + 1);\n    this.direction = PlayerDirection.DOWN;\n  };\n\n  hit = (): number => {\n    return 1;\n  };\n\n  tryCollide = (other: any, newX: number, newY: number) => {\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\n    return true;\n  };\n\n  tryMove = (x: number, y: number) => {\n    let newMove = { x: x, y: y };\n    // TODO don't move if hit by enemy\n    this.game.levels[this.levelID].catchUp();\n\n    if (this.dead) return;\n\n    for (let i = 0; i < 2; i++)\n      if (\n        this.inventory.hasWeapon() &&\n        !this.inventory.getWeapon().weaponMove(x, y)\n      ) {\n        //for (let h of this.game.levels[this.levelID].hitwarnings) {\n          //if (newMove instanceof HitWarning) \n          return;\n        //}\n      }\n\n    for (let e of this.game.levels[this.levelID].enemies) {\n      if (this.tryCollide(e, x, y)) {\n        if (e.pushable) {\n          // pushing a crate or barrel\n          let dx = x - this.x;\n          let dy = y - this.y;\n          let nextX = x + dx;\n          let nextY = y + dy;\n          let foundEnd = false; // end of the train of whatever we're pushing\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\n          let pushedEnemies = [];\n          while (true) {\n            foundEnd = true;\n            for (const f of this.game.levels[this.levelID].enemies) {\n              if (f.pointIn(nextX, nextY)) {\n                if (!f.chainPushable) {\n                  enemyEnd = true;\n                  foundEnd = true;\n                  break;\n                }\n                foundEnd = false;\n                pushedEnemies.push(f);\n                break;\n              }\n            }\n            if (foundEnd) break;\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\n          }\n          /* if no enemies and there is a wall, no move\n          otherwise, push everything, killing last enemy if there is a wall */\n          // here, (nextX, nextY) is the position immediately after the end of the train\n          if (\n            pushedEnemies.length === 0 &&\n            (this.game.levels[this.levelID].levelArray[nextX][\n              nextY\n            ].canCrushEnemy() ||\n              enemyEnd)\n          ) {\n            if (e.destroyable) {\n              e.kill();\n              if (this.game.levels[this.levelID] === this.game.level)\n                Sound.hit();\n              this.drawX = 0.5 * (this.x - e.x);\n              this.drawY = 0.5 * (this.y - e.y);\n              this.game.levels[this.levelID].particles.push(\n                new SlashParticle(e.x, e.y)\n              );\n              this.game.levels[this.levelID].tick(this);\n              this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\n              return;\n            }\n          } else {\n            if (this.game.levels[this.levelID] === this.game.level)\n              Sound.push();\n            // here pushedEnemies may still be []\n            for (const f of pushedEnemies) {\n              f.x += dx;\n              f.y += dy;\n              f.drawX = dx;\n              f.drawY = dy;\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\n            }\n            if (\n              this.game.levels[this.levelID].levelArray[nextX][\n                nextY\n              ].canCrushEnemy() ||\n              enemyEnd\n            ) {\n              pushedEnemies[pushedEnemies.length - 1].killNoBones();\n              if (this.game.levels[this.levelID] === this.game.level)\n                Sound.hit();\n            }\n            e.x += dx;\n            e.y += dy;\n            e.drawX = dx;\n            e.drawY = dy;\n            this.move(x, y);\n            this.game.levels[this.levelID].tick(this);\n            return;\n          }\n        } else {\n          // if we're trying to hit an enemy, check if it's destroyable\n          if (!e.dead) {\n            if (e.interactable) e.interact(this);\n            this.actionTab.actionState = ActionState.Attack;\n            //sets the action tab state to Attack\n            return;\n          }\n        }\n      }\n    }\n    let other = this.game.levels[this.levelID].levelArray[x][y];\n    if (!other.isSolid()) {\n      this.move(x, y);\n      other.onCollide(this);\n      if (\n        !(\n          other instanceof Door ||\n          other instanceof BottomDoor ||\n          other instanceof Trapdoor ||\n          other instanceof SideDoor\n        )\n      )\n        this.game.levels[this.levelID].tick(this);\n    } else {\n      if (other instanceof LockedDoor) {\n        this.drawX = (this.x - x) * 0.5;\n        this.drawY = (this.y - y) * 0.5;\n        other.unlock(this);\n      }\n    }\n  };\n\n  hurt = (damage: number) => {\n    if (this.game.levels[this.levelID] === this.game.level) Sound.hurt();\n\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      this.inventory.getArmor().hurt(damage);\n    } else {\n      this.healthBar.hurt();\n      this.flashing = true;\n      this.health -= damage;\n      if (this.health <= 0) {\n        this.health = 0;\n        this.dead = true;\n      }\n    }\n  };\n\n  dashMove = (x: number, y: number) => {\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.levels[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n\n    this.game.levels[this.levelID].updateLighting();\n  };\n\n  doneMoving = (): boolean => {\n    let EPSILON = 0.01;\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\n  };\n\n  move = (x: number, y: number) => {\n    if (this.game.levels[this.levelID] === this.game.level)\n      Sound.playerStoneFootstep();\n\n    if (this.openVendingMachine) this.openVendingMachine.close();\n\n    this.drawX = x - this.x;\n    this.drawY = y - this.y;\n    this.x = x;\n    this.y = y;\n\n    for (let i of this.game.levels[this.levelID].items) {\n      if (i.x === x && i.y === y) {\n        i.onPickup(this);\n      }\n    }\n\n    this.game.levels[this.levelID].updateLighting();\n  };\n\n  moveNoSmooth = (x: number, y: number) => {\n    // doesn't touch smoothing\n    this.x = x;\n    this.y = y;\n  };\n\n  moveSnap = (x: number, y: number) => {\n    // no smoothing\n    this.x = x;\n    this.y = y;\n    this.drawX = 0;\n    this.drawY = 0;\n  };\n\n  update = () => {};\n\n  finishTick = () => {\n    this.inventory.tick();\n\n    this.flashing = false;\n\n    let totalHealthDiff = this.health - this.lastTickHealth;\n    this.lastTickHealth = this.health; // update last tick health\n    if (totalHealthDiff < 0) {\n      this.flashing = true;\n    }\n    this.actionTab.actionState = ActionState.Wait;\n    //Sets the action tab state to Wait (during enemy turn)\n  };\n\n  drawPlayerSprite = (delta: number) => {\n    this.frame += 0.1 * delta;\n    if (this.frame >= 4) this.frame = 0;\n    Game.drawMob(\n      1 + Math.floor(this.frame),\n      8 + this.direction * 2,\n      1,\n      2,\n      this.x - this.drawX,\n      this.y - 1.5 - this.drawY,\n      1,\n      2\n    );\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\n      // TODO draw armor\n    }\n  };\n\n  draw = (delta: number) => {\n    this.drawableY = this.y;\n\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\n    if (!this.dead) {\n      Game.drawMob(0, 0, 1, 1, this.x - this.drawX, this.y - this.drawY, 1, 1);\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\n        this.drawPlayerSprite(delta);\n      }\n    }\n  };\n\n  heartbeat = () => {\n    this.guiHeartFrame = 1;\n  };\n\n  tapHoldHandler = () => {\n    this.mapToggled = !this.mapToggled;\n  };\n\n  drawTopLayer = (delta: number) => {\n    this.healthBar.draw(\n      delta,\n      this.health,\n      this.maxHealth,\n      this.x - this.drawX,\n      this.y - this.drawY,\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0\n    );\n  };\n\n  drawGUI = (delta: number) => {\n    if (!this.dead) {\n      this.inventory.draw(delta);\n\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\n      if (this.guiHeartFrame > 5) {\n        this.guiHeartFrame = 0;\n      }\n      for (let i = 0; i < this.maxHealth; i++) {\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\n        if (i >= Math.floor(this.health)) {\n          if (i == Math.floor(this.health) && (this.health * 2) % 2 == 1) {\n            // draw half heart\n\n            Game.drawFX(4, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          } else {\n            Game.drawFX(3, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n          }\n        } else\n          Game.drawFX(frame, 2, 1, 1, i, LevelConstants.SCREEN_H - 1, 1, 1);\n      }\n      if (this.inventory.getArmor())\n        this.inventory.getArmor().drawGUI(delta, this.maxHealth);\n    } else {\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\n      let gameOverString = \"Game Over\";\n      Game.fillText(\n        gameOverString,\n        GameConstants.WIDTH / 2 - Game.measureText(gameOverString).width / 2,\n        GameConstants.HEIGHT / 2 - Game.letter_height + 2\n      );\n    }\n    /*if ((Input.isDown(Input.M) || Input.isTapHold) && !this.game.chatOpen) {\n      this.tapHoldHandler();\n    }*/\n    if (this.mapToggled === true) this.map.draw(delta);\n    //this.actionTab.draw(this, this.inventory);\n    //render the action tab\n  };\n\n  updateDrawXY = (delta: number) => {\n    this.drawX += -0.5 * this.drawX;\n    this.drawY += -0.5 * this.drawY;\n  };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../enemy/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { Enemy } from \"../enemy/enemy\";\nimport { Level } from \"../level\";\nimport { GenericParticle } from \"../particle/genericParticle\";\nimport { Sound } from \"../sound\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class EnemySpawnAnimation extends Projectile {\n  readonly ANIM_COUNT = 3;\n\n  level: Level;\n  enemy: Enemy;\n  frame: number;\n\n  constructor(level: Level, enemy: Enemy, x: number, y: number) {\n    super(x, y);\n    this.level = level;\n    this.enemy = enemy;\n    this.frame = 0;\n  }\n\n  tick = () => {\n    if (this.level === this.level.game.level) Sound.enemySpawn();\n\n    let hitPlayer = false;\n    for (const i in this.level.game.players) {\n      if (this.level.game.players[i].x === this.x && this.level.game.players[i].y === this.y) {\n        this.level.game.players[i].hurt(0.5);\n        hitPlayer = true;\n      }\n    }\n    if (!hitPlayer) {\n      this.dead = true;\n      this.enemy.skipNextTurns = 1;\n      this.level.enemies.push(this.enemy);\n      GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n      GenericParticle.spawnCluster(this.level, this.x + 0.5, this.y + 0.5, \"#ffffff\");\n    } else {\n      this.level.hitwarnings.push(new HitWarning(this.level.game, this.x, this.y));\n    }\n  };\n\n  drawTopLayer = (delta: number) => {\n    if (this.dead) return;\n\n    this.frame += 0.25 * delta;\n    if (this.frame >= 8) this.frame = 0;\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\n      let offsetX = 0;\n      Game.drawFX(\n        Math.floor(this.frame),\n        26,\n        1,\n        2,\n        this.x + Math.round(offsetX) / 16.0,\n        this.y - 1.5,\n        1,\n        2\n      );\n    }\n    if (Math.floor(this.frame * 4) % 2 == 0)\n      this.level.particles.push(\n        new GenericParticle(\n          this.level,\n          this.x + 0.5 + Math.random() * 0.05 - 0.025,\n          this.y + Math.random() * 0.05 - 0.025,\n          0.25,\n          Math.random() * 0.5,\n          0.025 * (Math.random() * 1 - 0.5),\n          0.025 * (Math.random() * 1 - 0.5),\n          0.2 * (Math.random() - 1),\n          \"#ffffff\",\n          0\n        )\n      );\n  };\n}\n","import { Player } from \"../player\";\nimport { Enemy } from \"../enemy/enemy\";\nimport { Drawable } from \"../drawable\";\n\nexport class Projectile extends Drawable {\n  x: number;\n  y: number;\n  dead: boolean;\n\n  constructor(x: number, y: number) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.dead = false;\n\n    this.drawableY = y;\n  }\n\n  hitPlayer = (player: Player) => { };\n  hitEnemy = (enemy: Enemy) => { };\n\n  tick = () => { };\n  draw = (delta: number) => { };\n  drawTopLayer = (delta: number) => { };\n}\n","import { Projectile } from \"./projectile\";\nimport { Game } from \"../game\";\nimport { WizardEnemy } from \"../enemy/wizardEnemy\";\nimport { Player } from \"../player\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class WizardFireball extends Projectile {\n  state: number;\n  frame: number;\n  parent: WizardEnemy;\n  delay: number;\n\n  constructor(parent: WizardEnemy, x: number, y: number) {\n    super(x, y);\n    this.parent = parent;\n    this.state = 0;\n    this.frame = 0;\n  }\n\n  tick = () => {\n    if (this.parent.dead) this.dead = true;\n    this.state++;\n    if (this.state === 1) {\n      this.parent.level.hitwarnings.push(new HitWarning(this.parent.game, this.x, this.y));\n    }\n    if (this.state === 2) {\n      this.frame = 0;\n      this.delay = Game.rand(0, 10, Math.random);\n    }\n  };\n\n  hitPlayer = (player: Player) => {\n    if (this.state === 2 && !this.dead) {\n      player.hurt(1);\n    }\n  };\n\n  draw = (delta: number) => {\n    if (this.dead) return;\n\n    if (this.state === 0) {\n      this.frame += 0.25 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      Game.drawFX(22 + Math.floor(this.frame), 7, 1, 1, this.x, this.y, 1, 1);\n    } else if (this.state === 1) {\n      this.frame += 0.25 * delta;\n      if (this.frame >= 4) this.frame = 0;\n      Game.drawFX(18 + Math.floor(this.frame), 7, 1, 1, this.x, this.y, 1, 1);\n    } else {\n      if (this.delay > 0) {\n        this.delay--;\n        return;\n      }\n      this.frame += 0.3 * delta;\n      if (this.frame > 17) this.dead = true;\n      Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\n    }\n  };\n}\n","export class Random {\n  static state: number;\n\n  static setState = (state: number) => {\n    Random.state = state;\n  }\n\n  static rand = () => {\n    Random.state ^= (Random.state << 21);\n    Random.state ^= (Random.state >>> 35);\n    Random.state ^= (Random.state << 4);\n    return (Random.state >>> 0) / 4294967296;\n  }\n}\n\n// copy and paste into browser console\n// let state;\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }","export const ServerAddress = {\n  address: \"witch-roguelike-server.azurewebsites.net\"\n  //address: \"ws://localhost:9000\"\n}","import { Game } from \"./game\";\n\nexport class Sound {\n  static playerStoneFootsteps: Array<HTMLAudioElement>;\n  static enemyFootsteps: Array<HTMLAudioElement>;\n  static hitSounds: Array<HTMLAudioElement>;\n  static enemySpawnSound: HTMLAudioElement;\n  static chestSounds: Array<HTMLAudioElement>;\n  static coinPickupSounds: Array<HTMLAudioElement>;\n  static miningSounds: Array<HTMLAudioElement>;\n  static breakRockSound: HTMLAudioElement;\n  static hurtSounds: Array<HTMLAudioElement>;\n  static genericPickupSound: HTMLAudioElement;\n  static pushSounds: Array<HTMLAudioElement>;\n  static healSound: HTMLAudioElement;\n  static music: HTMLAudioElement;\n\n  static loadSounds = () => {\n    Sound.playerStoneFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.playerStoneFootsteps.push(\n        new Audio(\"res/SFX/footsteps/stone/footstep\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.playerStoneFootsteps) f.volume = 1.0;\n\n    Sound.enemyFootsteps = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4, 5].forEach((i) =>\n      Sound.enemyFootsteps.push(\n        new Audio(\"res/SFX/footsteps/enemy/enemyfootstep\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.enemyFootsteps) f.volume = 1.0;\n\n    Sound.hitSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.hitSounds.push(new Audio(\"res/SFX/attacks/swing\" + i + \".wav\"))\n    );\n    for (let f of Sound.hitSounds) {\n      (f.volume = 0), f.load;\n      //f.play();\n    }\n    Sound.enemySpawnSound = new Audio(\"res/SFX/attacks/enemyspawn.wav\");\n    Sound.enemySpawnSound.volume = 0.7;\n\n    Sound.chestSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3].forEach((i) =>\n      Sound.chestSounds.push(new Audio(\"res/SFX/chest/chest\" + i + \".wav\"))\n    );\n    for (let f of Sound.chestSounds) f.volume = 0.7;\n\n    Sound.coinPickupSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.coinPickupSounds.push(new Audio(\"res/SFX/items/coins\" + i + \".wav\"))\n    );\n    for (let f of Sound.coinPickupSounds) f.volume = 1.0;\n\n    Sound.miningSounds = new Array<HTMLAudioElement>();\n    [1, 2, 3, 4].forEach((i) =>\n      Sound.miningSounds.push(\n        new Audio(\"res/SFX/resources/Pickaxe\" + i + \".wav\")\n      )\n    );\n    for (let f of Sound.miningSounds) f.volume = 0.7;\n\n    Sound.hurtSounds = new Array<HTMLAudioElement>();\n    [1].forEach((i) =>\n      Sound.hurtSounds.push(new Audio(\"res/SFX/attacks/hit.wav\"))\n    );\n    for (let f of Sound.hurtSounds) f.volume = 0.7;\n\n    Sound.genericPickupSound = new Audio(\"res/SFX/items/pickup.wav\");\n    Sound.genericPickupSound.volume = 1.0;\n\n    Sound.breakRockSound = new Audio(\"res/SFX/resources/rockbreak.wav\");\n    Sound.breakRockSound.volume = 1.0;\n\n    Sound.pushSounds = new Array<HTMLAudioElement>();\n    [1, 2].forEach((i) =>\n      Sound.pushSounds.push(new Audio(\"res/SFX/pushing/push\" + i + \".wav\"))\n    );\n    for (let f of Sound.pushSounds) f.volume = 1.0;\n\n    Sound.healSound = new Audio(\"res/SFX/items/powerup1.wav\");\n    Sound.healSound.volume = 0.5;\n\n    Sound.music = new Audio(\"res/bewitched.mp3\");\n  };\n\n  static playerStoneFootstep = () => {\n    let f = Game.randTable(Sound.playerStoneFootsteps, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static enemyFootstep = () => {\n    let f = Game.randTable(Sound.enemyFootsteps, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static hit = () => {\n    let f = Game.randTable(Sound.hitSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n    f = Game.randTable(Sound.hurtSounds, Math.random);\n    f.volume = 0.5;\n    f.play();\n    f.currentTime = 0;\n    f.volume = 1.0;\n  };\n\n  static hurt = () => {\n    let f = Game.randTable(Sound.hurtSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static enemySpawn = () => {\n    Sound.enemySpawnSound.play();\n    Sound.enemySpawnSound.currentTime = 0;\n  };\n\n  static chest = () => {\n    let f = Game.randTable(Sound.chestSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static pickupCoin = () => {\n    let f = Game.randTable(Sound.coinPickupSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static mine = () => {\n    let f = Game.randTable(Sound.miningSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static breakRock = () => {\n    Sound.breakRockSound.play();\n    Sound.breakRockSound.currentTime = 0;\n  };\n\n  static heal = () => {\n    Sound.healSound.play();\n    Sound.healSound.currentTime = 0;\n  };\n\n  static genericPickup = () => {\n    Sound.genericPickupSound.play();\n    Sound.genericPickupSound.currentTime = 0;\n  };\n\n  static push = () => {\n    let f = Game.randTable(Sound.pushSounds, Math.random);\n    f.play();\n    f.currentTime = 0;\n  };\n\n  static playMusic = () => {\n    Sound.music.addEventListener(\n      \"ended\",\n      () => {\n        Sound.music.currentTime = 0;\n        Sound.music.play();\n      },\n      false\n    );\n    //Sound.music.play();\n  };\n}\n","export class TextBox {\n  text: string;\n  cursor: number;\n  enterCallback;\n  escapeCallback;\n  allowedCharacters = \"all\";\n\n  constructor() {\n    this.text = \"\";\n    this.cursor = 0;\n    this.enterCallback = () => {};\n    this.escapeCallback = () => {};\n  }\n\n  setEnterCallback = (callback) => {\n    this.enterCallback = callback;\n  };\n\n  setEscapeCallback = (callback) => {\n    this.escapeCallback = callback;\n  };\n\n  clear = () => {\n    this.text = \"\";\n    this.cursor = 0;\n  };\n\n  handleKeyPress = (key: string) => {\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/\".split(\n      \"\"\n    );\n    if (key.length === 1) {\n      key = key.toLowerCase();\n      if (fontHas.includes(key)) {\n        if (\n          this.allowedCharacters === \"all\" ||\n          this.allowedCharacters.includes(key)\n        ) {\n          this.text =\n            this.text.substring(0, this.cursor) +\n            key +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor += 1;\n        }\n      }\n      return\n    } else {\n      switch (key) {\n        case \"Backspace\":\n          this.text =\n            this.text.substring(0, this.cursor - 1) +\n            this.text.substring(this.cursor, this.text.length);\n          this.cursor = Math.max(0, this.cursor - 1);\n          break;\n        case \"Delete\":\n          this.text =\n            this.text.substring(0, this.cursor) +\n            this.text.substring(this.cursor + 1, this.text.length);\n          break;\n        case \"ArrowLeft\":\n          this.cursor = Math.max(0, this.cursor - 1);\n          break;\n        case \"ArrowRight\":\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\n          break;\n        case \"Enter\":\n          this.enterCallback();\n          break;\n        case \"Escape\":\n          this.escapeCallback();\n          break;\n      }\n    }\n  };\n}\n","import { Game } from \"../game\";\nimport { Floor } from \"./floor\";\n\nexport class Bones extends Floor {\n  draw = (delta: number) => {\n    Game.drawTile(\n      7,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Door } from \"./door\";\nimport { Player } from \"../player\";\nimport { GameConstants } from \"../gameConstants\";\nimport { Tile } from \"./tile\";\n\nexport class BottomDoor extends Tile {\n  linkedDoor: Door;\n  game: Game;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n    this.isDoor = true;\n  }\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    this.game.changeLevelThroughDoor(player, this.linkedDoor);\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    /*Game.drawTile(\n      14,\n      0,\n      1,\n      1,\n      this.x,\n      this.y - 1,\n      1,\n      1,\n      \"black\",\n      this.level.softVis[this.x][this.y - 1]\n    ); */\n  };\n\n  drawAboveShading = (delta: number) => {\n    Game.drawFX(2, 2, 1, 1, this.x, this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()), 1, 1);\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\nimport { Enemy } from \"../enemy/enemy\";\n\nexport class Button extends Tile {\n  // all are in grid units\n  w: number;\n  h: number;\n  pressed: boolean;\n  turnsSincePressed: number;\n  linkedDoor: InsideLevelDoor;\n\n  constructor(level: Level, x: number, y: number, linkedDoor: InsideLevelDoor) {\n    super(level, x, y);\n    this.w = 1;\n    this.h = 1;\n\n    this.pressed = false;\n    this.turnsSincePressed = 1;\n\n    this.linkedDoor = linkedDoor;\n  }\n\n  press = () => {\n    this.pressed = true;\n    this.linkedDoor.opened = true;\n  };\n\n  unpress = () => {\n    this.pressed = false;\n    this.linkedDoor.opened = false;\n  };\n\n  /*onCollide = (player: Player) => {\n    this.press();\n  };\n\n  onCollideEnemy = (enemy: Enemy) => {\n    this.press();\n  };*/\n\n  tickEnd = () => {\n    this.unpress();\n    for (const i in this.level.game.players) {\n      if (this.level.game.players[i].x === this.x && this.level.game.players[i].y === this.y) this.press();\n    }\n    for (const e of this.level.enemies) {\n      if (e.x === this.x && e.y === this.y) this.press();\n    }\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(1, 0, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n    if (this.pressed)\n      Game.drawTile(\n        18,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    else\n      Game.drawTile(\n        17,\n        0,\n        1,\n        1,\n        this.x,\n        this.y,\n        this.w,\n        this.h,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Chasm extends Tile {\n  tileX: number;\n  tileY: number;\n  topEdge: boolean;\n\n  constructor(\n    level: Level,\n    x: number,\n    y: number,\n    leftEdge: boolean,\n    rightEdge: boolean,\n    topEdge: boolean,\n    bottomEdge: boolean\n  ) {\n    super(level, x, y);\n\n    this.tileX = this.skin === 1 ? 24 : 20;\n    this.tileY = 1;\n\n    if (leftEdge) this.tileX--;\n    else if (rightEdge) this.tileX++;\n    if (topEdge) this.tileY--;\n    else if (bottomEdge) this.tileY++;\n\n    this.topEdge = topEdge;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.topEdge)\n      Game.drawTile(22, 0, 1, 2, this.x, this.y, 1, 2, this.level.shadeColor, this.shadeAmount());\n    Game.drawTile(\n      this.tileX,\n      this.tileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class CoffinTile extends Tile {\n  subTileY: number; // each coffin is 1x2, this is the sub-tile coordinate\n\n  constructor(level: Level, x: number, y: number, subTileY: number) {\n    super(level, x, y);\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.subTileY === 0) {\n      Game.drawTile(\n        0,\n        5,\n        1,\n        1,\n        this.x - 1,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        1,\n        5,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        2,\n        5,\n        1,\n        1,\n        this.x + 1,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(\n        0,\n        6,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(1, 6, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n      Game.drawTile(\n        2,\n        6,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    } else {\n      Game.drawTile(\n        0,\n        7,\n        1,\n        1,\n        this.x - 1,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n      Game.drawTile(1, 7, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n      Game.drawTile(\n        2,\n        7,\n        1,\n        1,\n        this.x + 1,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    }\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { BottomDoor } from \"./bottomDoor\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport enum DoorDir {\n  North,\n  East,\n  South,\n  West,\n}\n\nexport class Door extends Tile {\n  linkedDoor: Door;\n  game: Game;\n  opened: boolean;\n  doorDir: DoorDir;\n  locked: boolean;\n\n  constructor(level: Level, game: Game, x: number, y: number, dir: number) {\n    super(level, x, y);\n    this.game = game;\n    this.opened = false;\n    this.locked = false;\n    this.doorDir = dir\n  }\n\n  link = (other: Door) => {\n    this.linkedDoor = other;\n  };\n\n  isLocked = (): boolean => {\n    return this.locked;\n  };\n\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    this.opened = true;\n    this.linkedDoor.opened = true;\n    if (this.doorDir === DoorDir.North || this.doorDir === DoorDir.South) {\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\n    } else\n      this.game.changeLevelThroughDoor(\n        player,\n        this.linkedDoor,\n        this.linkedDoor.level.roomX - this.level.roomX > 0 ? 1 : -1\n      );\n  };\n\n  draw = (delta: number) => {\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      if (this.opened)\n        Game.drawTile(\n          6,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      else\n        Game.drawTile(\n          3,\n          this.skin,\n          1,\n          1,\n          this.x,\n          this.y,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n    }\n    if (this.doorDir !== DoorDir.North)\n      //if not top door\n      Game.drawTile(\n        1,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      if (!this.opened)\n        Game.drawTile(\n          13,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n      else\n        Game.drawTile(\n          14,\n          0,\n          1,\n          1,\n          this.x,\n          this.y - 1,\n          1,\n          1,\n          this.level.shadeColor,\n          this.shadeAmount()\n        );\n    }\n    if (this.doorDir !== DoorDir.North) {\n    }\n  };\n\n  drawAboveShading = (delta: number) => {\n    if (this.doorDir === DoorDir.North) {\n      //if top door\n      Game.drawFX(\n        2,\n        2,\n        1,\n        1,\n        this.x,\n        this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()),\n        1,\n        1\n      );\n    } else {\n      Game.drawFX(\n        2,\n        2,\n        1,\n        1,\n        this.x,\n        this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()),\n        1,\n        1\n      ); //if not top door\n    }\n  };\n}\n","import { Player } from \"../player\";\nimport { ChatMessage, Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { BottomDoor } from \"./bottomDoor\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { UpLadder } from \"./upLadder\";\n\nexport class DownLadder extends Tile {\n  linkedLevel: Level;\n  game: Game;\n  isRope = false;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n    this.linkedLevel = null;\n  }\n\n  generate = () => {\n    // called by Game during transition\n    if (!this.linkedLevel) {\n      this.linkedLevel = this.game.levelgen.generate(\n        this.game,\n        this.level.depth + (this.isRope ? 0 : 1),\n        this.isRope\n      );\n      for (let x = this.linkedLevel.roomX; x < this.linkedLevel.roomX + this.linkedLevel.width; x++) {\n        for (let y = this.linkedLevel.roomY; y < this.linkedLevel.roomY + this.linkedLevel.height; y++) {\n          let tile = this.linkedLevel.levelArray[x][y];\n          if (tile instanceof UpLadder && tile.isRope)\n            tile.linkedLevel = this.level;\n        }\n      }\n    }\n  };\n\n  onCollide = (player: Player) => {\n    if (this.isRope) this.game.changeLevelThroughLadder(player, this);\n    else {\n      let allPlayersHere = true;\n      for (const i in this.game.players) {\n        if (this.game.levels[this.game.players[i].levelID] !== this.level || this.game.players[i].x !== this.x || this.game.players[i].y !== this.y) {\n          allPlayersHere = false;\n        }\n      }\n      if (allPlayersHere) {\n        this.generate();\n        for (const i in this.game.players) {\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\n        }\n      } else {\n        if (player === this.game.players[this.game.localPlayerID]) this.game.chat.push(new ChatMessage('all players must be present'));\n      }\n    }\n  };\n\n  draw = (delta: number) => {\n    let xx = 4;\n    if (this.isRope) xx = 16;\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n    Game.drawTile(\n      xx,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => { };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Level } from \"../level\";\n\nexport class Floor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class FountainTile extends Tile {\n  subTileX: number; // each fountain is 3x3, this is the sub-tile coordinate\n  subTileY: number;\n\n  constructor(level: Level, x: number, y: number, subTileX: number, subTileY: number) {\n    super(level, x, y);\n    this.subTileX = subTileX;\n    this.subTileY = subTileY;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n    Game.drawTile(\n      this.subTileX,\n      2 + this.subTileY,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { BottomDoor } from \"./bottomDoor\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport class InsideLevelDoor extends Tile {\n  game: Game;\n  opened: boolean;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n    this.opened = false;\n  }\n\n  isSolid = (): boolean => {\n    return !this.opened;\n  };\n  canCrushEnemy = (): boolean => {\n    return !this.opened;\n  };\n  isOpaque = (): boolean => {\n    return !this.opened;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(1, 0, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n    if (this.opened)\n      Game.drawTile(15, 1, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n    else\n      Game.drawTile(\n        3,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (!this.opened)\n      Game.drawTile(\n        13,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    else\n      Game.drawTile(\n        14,\n        0,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Player } from \"../player\";\nimport { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Door } from \"./door\";\nimport { Key } from \"../item/key\";\nimport { Tile } from \"./tile\";\n\nexport class LockedDoor extends Tile {\n  unlockedDoor: Door;\n\n  unlock = (player: Player) => {\n    let k = player.inventory.hasItem(Key);\n    if (k !== null) {\n      // remove key\n      player.inventory.removeItem(k);\n      this.level.levelArray[this.x][this.y] = this.unlockedDoor; // replace this door in level\n      this.level.doors.push(this.unlockedDoor); // add it to the door list so it can get rendered on the map\n    }\n  };\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      17,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { BottomDoor } from \"./bottomDoor\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\n\nexport class SideDoor extends Tile {\n  linkedDoor: SideDoor;\n  game: Game;\n  opened: boolean;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n    this.opened = false;\n  }\n\n  link = (other: SideDoor) => {\n    this.linkedDoor = other;\n  };\n\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n\n  onCollide = (player: Player) => {\n    this.opened = true;\n    this.game.changeLevelThroughDoor(\n      player,\n      this.linkedDoor,\n      this.linkedDoor.level.roomX - this.level.roomX > 0 ? 1 : -1\n    );\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => { };\n\n  drawAboveShading = (delta: number) => {\n    Game.drawFX(2, 2, 1, 1, this.x, this.y - 1.25 + 0.125 * Math.sin(0.006 * Date.now()), 1, 1);\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile, SkinType } from \"./tile\";\nimport { Level } from \"../level\";\n\nexport class SpawnFloor extends Tile {\n  // all are in grid units\n  variation: number;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.variation = 1;\n    if (this.skin == SkinType.DUNGEON)\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n    if (this.skin == SkinType.CAVE)\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Math.random);\n      this.variation = Game.randTable([1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12], Math.random);\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      this.variation,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Spike extends Tile {\n  onCollide = (player: Player) => {\n    player.hurt(1);\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(11, 0, 1, 1, this.x, this.y, 1, 1, this.level.shadeColor, this.shadeAmount());\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\nimport { Enemy } from \"../enemy/enemy\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\nimport { HitWarning } from \"../hitWarning\";\n\nexport class SpikeTrap extends Tile {\n  on: boolean;\n  tickCount: number;\n  frame: number;\n  t: number;\n\n  constructor(level: Level, x: number, y: number, tickCount?: number) {\n    super(level, x, y);\n    if (tickCount) this.tickCount = tickCount;\n    else this.tickCount = 0;\n    this.on = false;\n    this.frame = 0;\n    this.t = 0;\n  }\n\n  tick = () => {\n    this.tickCount++;\n    if (this.tickCount >= 4) this.tickCount = 0;\n    this.on = this.tickCount === 0;\n\n    if (this.on) {\n      for (const i in this.level.game.players) {\n        if (this.level === this.level.game.levels[this.level.game.players[i].levelID] && this.level.game.players[i].x === this.x && this.level.game.players[i].y === this.y)\n          this.level.game.players[i].hurt(1);\n      }\n    }\n\n    if (this.tickCount === 3)\n      this.level.hitwarnings.push(new HitWarning(this.level.game, this.x, this.y));\n  };\n\n  tickEnd = () => {\n    if (this.on) {\n      for (const e of this.level.enemies) {\n        if (e.x === this.x && e.y === this.y) {\n          e.hurt(null, 1);\n        }\n      }\n    }\n  };\n\n  onCollideEnemy = (enemy: Enemy) => {\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel)) enemy.hurt(null, 1);\n  };\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n\n    let rumbleOffsetX = 0;\n    this.t++;\n    if (!this.on && this.tickCount === 3) {\n      if (this.t % 4 === 1) rumbleOffsetX = 0.0325;\n      if (this.t % 4 === 3) rumbleOffsetX = -0.0325;\n    }\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\n    let f = 6 + frames[Math.floor(this.frame)];\n    if (this.tickCount === 1 || (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)) {\n      f = 5;\n    }\n    Game.drawObj(\n      f,\n      0,\n      1,\n      2,\n      this.x + rumbleOffsetX,\n      this.y - 1,\n      1,\n      2,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n    if (this.on && this.frame < frames.length - 1) {\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\n      else this.frame += 0.2 * delta;\n    }\n    if (!this.on) this.frame = 0;\n  };\n}\n","import { Level } from \"../level\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Player } from \"../player\";\nimport { Enemy } from \"../enemy/enemy\";\nimport { Drawable } from \"../drawable\";\n\nexport enum SkinType {\n  DUNGEON = 0,\n  CAVE = 1,\n}\n\nexport class Tile extends Drawable {\n  x: number;\n  y: number;\n  level: Level;\n  skin: SkinType;\n  isDoor: boolean;\n\n  constructor(level: Level, x: number, y: number) {\n    super();\n    this.skin = level.skin;\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.drawableY = y;\n    this.isDoor = false;\n  }\n\n  shadeAmount = () => {\n    return this.level.softVis[this.x][this.y];\n  };\n\n  isSolid = (): boolean => {\n    return false;\n  };\n  canCrushEnemy = (): boolean => {\n    return false;\n  };\n  isOpaque = (): boolean => {\n    return false;\n  };\n  onCollide = (player: Player) => { };\n  onCollideEnemy = (enemy: Enemy) => { };\n  tick = () => { };\n  tickEnd = () => { };\n\n  draw = (delta: number) => { };\n  drawUnderPlayer = (delta: number) => { };\n  drawAbovePlayer = (delta: number) => { };\n  drawAboveShading = (delta: number) => { };\n}\n","import { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { Player } from \"../player\";\nimport { LevelConstants } from \"../levelConstants\";\nimport { Tile } from \"./tile\";\n\nexport class Trapdoor extends Tile {\n  game: Game;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n  }\n\n  draw = (delta: number) => {\n    Game.drawTile(\n      13,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  onCollide = (player: Player) => {\n    // TODO\n  };\n}\n","import { Player } from \"../player\";\nimport { Game } from \"../game\";\nimport { Level } from \"../level\";\nimport { BottomDoor } from \"./bottomDoor\";\nimport { GameConstants } from \"../gameConstants\";\nimport { SkinType, Tile } from \"./tile\";\nimport { DownLadder } from \"./downLadder\";\n\nexport class UpLadder extends Tile {\n  linkedLevel: Level;\n  game: Game;\n  isRope = false;\n\n  constructor(level: Level, game: Game, x: number, y: number) {\n    super(level, x, y);\n    this.game = game;\n  }\n\n  onCollide = (player: Player) => {\n    this.game.changeLevelThroughLadder(player, this);\n  };\n\n  draw = (delta: number) => {\n    let xx = 29;\n    let yy = 0;\n    if (this.isRope) {\n      xx = 16;\n      yy = 1;\n    }\n\n    Game.drawTile(\n      1,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n    if (!this.isRope)\n      Game.drawTile(\n        xx,\n        yy,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n    Game.drawTile(\n      xx,\n      yy + 1,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n\n  drawAbovePlayer = (delta: number) => {\n    if (this.isRope)\n      Game.drawTile(\n        16,\n        1,\n        1,\n        1,\n        this.x,\n        this.y - 1,\n        1,\n        1,\n        this.level.shadeColor,\n        this.shadeAmount()\n      );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\n\nexport class Wall extends Tile {\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    if (this.y < this.level.roomY + this.level.height - 1)\n      Game.drawTile(\n        0,\n        this.skin,\n        1,\n        1,\n        this.x,\n        this.y,\n        1,\n        1,\n        this.level.shadeColor,\n        this.level.softVis[this.x][this.y + 1]\n      );\n\n    Game.drawTile(\n      2,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y - 0.5,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n  };\n}\n","import { Game } from \"../game\";\nimport { Tile } from \"./tile\";\nimport { Level } from \"../level\";\nimport { LightSource } from \"../lightSource\";\n\nexport class WallTorch extends Tile {\n  frame: number;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n    this.level.lightSources.push(new LightSource(this.x + 0.5, this.y + 0.5, 3));\n    this.frame = Math.random() * 12;\n  }\n\n  isSolid = (): boolean => {\n    return true;\n  };\n  canCrushEnemy = (): boolean => {\n    return true;\n  };\n  isOpaque = (): boolean => {\n    return true;\n  };\n\n  draw = (delta: number) => {\n    this.frame += 0.3 * delta;\n    if (this.frame >= 12) this.frame = 0;\n\n    Game.drawTile(\n      0,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n\n    Game.drawTile(\n      2,\n      this.skin,\n      1,\n      1,\n      this.x,\n      this.y - 0.5,\n      1,\n      1,\n      this.level.shadeColor,\n      this.shadeAmount()\n    );\n\n    Game.drawFX(Math.floor(this.frame), 32, 1, 2, this.x, this.y - 1, 1, 2);\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\n\nexport class Dagger extends Weapon {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 22;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.levels[this.wielder.levelID] === this.wielder.game.level) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"DAGGER\\nDamage 1\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\n\nexport class DualDagger extends Weapon {\n  firstAttack: boolean;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 23;\n    this.tileY = 0;\n    this.firstAttack = true;\n  }\n\n  tickInInventory = () => {\n    this.firstAttack = true;\n  };\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.levels[this.wielder.levelID] === this.wielder.game.level) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      if (this.firstAttack) this.game.levels[this.wielder.levelID].enemies = this.game.levels[this.wielder.levelID].enemies.filter(e => !e.dead);\n      else this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n\n      if (this.firstAttack) this.firstAttack = false;\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"DUAL DAGGERS\\nOne extra attack per turn\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\n\nexport class Pickaxe extends Weapon {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 30;\n    this.tileY = 0;\n    this.canMine = true\n  }\n\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let flag = false;\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      if (\n        e.destroyable &&\n        !e.pushable &&\n        e.pointIn(newX, newY)\n      ) {\n        e.hurt(this.wielder, 1);\n        flag = true;\n      }\n    }\n    if (flag) {\n      if (this.wielder.game.levels[this.wielder.levelID] === this.wielder.game.level) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"PICKAXE\\nDamage 1, used for mining\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class Shotgun extends Weapon {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 26;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let newX3 = 3 * newX - 2 * this.wielder.x;\n    let newY3 = 3 * newY - 2 * this.wielder.y;\n    let range = 3;\n    if (\n      !this.game.levels[this.wielder.levelID].tileInside(newX, newY) ||\n      this.game.levels[this.wielder.levelID].levelArray[newX][newY].isSolid()\n    )\n      return true;\n    else if (\n      !this.game.levels[this.wielder.levelID].tileInside(newX2, newY2) ||\n      this.game.levels[this.wielder.levelID].levelArray[newX2][newY2].isSolid()\n    )\n      range = 1;\n    else if (\n      !this.game.levels[this.wielder.levelID].tileInside(newX3, newY3) ||\n      this.game.levels[this.wielder.levelID].levelArray[newX3][newY3].isSolid()\n    )\n      range = 2;\n\n    let enemyHitCandidates = [];\n    let firstPushable = 4;\n    let firstNonPushable = 5;\n    let firstNonDestroyable = 5;\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      if (e.pushable) {\n        if (e.pointIn(newX, newY)) return true;\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n          firstPushable = 2;\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n          firstPushable = Math.min(firstPushable, 3);\n        }\n      } else if (e.destroyable) {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonPushable = 1;\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\n        }\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonPushable = Math.min(firstNonPushable, 2);\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonPushable = Math.min(firstNonPushable, 3);\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\n        }\n      } else {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonDestroyable = 1;\n        }\n        if (e.pointIn(newX2, newY2) && range >= 2) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\n        }\n        if (e.pointIn(newX3, newY3) && range >= 3) {\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\n        }\n      }\n    }\n    let targetX = newX3;\n    let targetY = newY3;\n    if (\n      firstNonDestroyable < firstNonPushable &&\n      firstNonDestroyable < firstPushable\n    ) {\n      return true;\n    }\n    if (firstNonPushable <= firstPushable) {\n      for (const c of enemyHitCandidates) {\n        let e = c.enemy;\n        let d = c.dist;\n        if (d === 3) e.hurt(this.wielder, 0.5);\n        else e.hurt(this.wielder, 1);\n      }\n\n      if (\n        this.wielder.game.levels[this.wielder.levelID] ===\n        this.wielder.game.level\n      )\n        Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      GenericParticle.shotgun(\n        this.game.levels[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"black\"\n      );\n      GenericParticle.shotgun(\n        this.game.levels[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"#ffddff\"\n      );\n      let gp = new GenericParticle(\n        this.game.levels[this.wielder.levelID],\n        0.5 * (newX + this.wielder.x) + 0.5,\n        0.5 * (newY + this.wielder.y),\n        0,\n        1,\n        0,\n        0,\n        0,\n        \"white\",\n        0\n      );\n      gp.expirationTimer = 10;\n      this.game.levels[this.wielder.levelID].particles.push(gp);\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n\n      return false;\n    }\n    return true;\n  };\n\n  getDescription = (): string => {\n    return \"SHOTGUN\\nRange 3, penetration\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\nimport { GenericParticle } from \"../particle/genericParticle\";\n\nexport class Slingshot extends Weapon {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 26;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    console.log(`Current Position: (${this.wielder.x},${this.wielder.y})`);\n    let nextX = [newX];\n    let nextY = [newY];\n    //define arrays for coords beginning with function arguments\n    let range: number = 1;\n    let l = 0;\n    for (\n      let i = 0;\n      i < 15;\n      i++ //loop through range\n    ) {\n      if (newX === this.wielder.x) {\n        nextX.push(newX), nextY.push(nextY[l] + (newY - this.wielder.y));\n      }\n      if (newY === this.wielder.y) {\n        nextX.push(nextX[l] + (newX - this.wielder.x)), nextY.push(newY);\n      }\n      //console.log(`Iteration ${i}: nextX = ${nextX}, nextY = ${nextY}`);\n      // push nex coordinates to array of possible moves\n      l++;\n    }\n    if (\n      !this.game.levels[this.wielder.levelID].tileInside(newX, newY) ||\n      this.game.levels[this.wielder.levelID].levelArray[newX][newY].isSolid()\n    ) {\n      //if current position is inside new position OR is solid\n      return true;\n    }\n    let c = 1;\n    for (let i = 0; i < 15; i++) {\n      if (\n        !this.game.levels[this.wielder.levelID].tileInside(\n          nextX[c],\n          nextY[c]\n        ) ||\n        this.game.levels[this.wielder.levelID].levelArray[nextX[c]][\n          nextY[c]\n        ].isSolid()\n      ) {\n        range = c;\n        //exit the function if wall is detected\n      }\n      c++;\n      //increase the range each loop until\n    }\n    //console.log(`range = ${range}`)\n    //range = 15;\n    let enemyHitCandidates = [];\n    let firstPushable = range + 1;\n    let firstNonPushable = range + 2;\n    let firstNonDestroyable = range + 2;\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      //loop through enemies in this weapons wielders level\n      if (e.pushable) {\n        let p = 2;\n\n        //case for pushables\n        if (e.pointIn(newX, newY)) return true;\n        //if pushable is in new position return true\n        for (let i = 0; i < 15; i++) {\n          if (e.pointIn(nextX[p - 1], nextY[p - 1]) && range >= p) {\n            //enemyHitCandidates.push({ enemy: e, dist: p });\n            firstPushable = Math.min(firstPushable, p);\n          }\n          p++; //run that shit back\n        }\n      } else if (e.destroyable) {\n        //case for destroyables\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonPushable = 1;\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\n        }\n        let d = 2;\n        for (let i = 0; i < 15; i++) {\n          if (e.pointIn(nextX[d - 1], nextY[d - 1]) && range >= d) {\n            firstNonPushable = Math.min(firstNonPushable, d);\n            enemyHitCandidates.push({ enemy: e, dist: d });\n          }\n          d++;\n        }\n      } else {\n        if (e.pointIn(newX, newY) && range >= 1) {\n          firstNonDestroyable = 1;\n        }\n        let n = 2;\n        for (let i = 0; i < 15; i++) {\n          if (e.pointIn(nextX[n - 1], nextY[n - 1]) && range >= n) {\n            firstNonDestroyable = Math.min(firstNonDestroyable, n);\n          }\n          n++;\n\n          //if enemy is in new position and range is enough set first non destroyable to 3\n        }\n      }\n    }\n    //enemyHitCandidates.splice(1, enemyHitCandidates.length - 1);\n\n    console.log(\"first pushable \" + firstPushable);\n    console.log(\"first nonpushable \" + firstNonPushable);\n    console.log(\"first nondestroyable \" + firstNonDestroyable);\n    console.log(\"hitCandidates \", enemyHitCandidates);\n    let targetX = newX; //nextX[range];\n    let targetY = newY; //nextY[range];\n\n    if (\n      firstNonDestroyable < firstNonPushable &&\n      firstNonDestroyable < firstPushable\n      //if a non destroyable comes before the first non pushable and before the first pushable\n    ) {\n      return true;\n      //return true and exit the function\n    }\n    if (firstNonPushable <= firstPushable) {\n      if (enemyHitCandidates.length > 0) {\n        const closestEnemy = enemyHitCandidates.reduce(\n          (minEnemy, currentEnemy) => {\n            if (currentEnemy.dist < minEnemy.dist) {\n              return currentEnemy;\n            } else return minEnemy;\n          }\n        );\n        console.log(`closestEnemy = ${closestEnemy}`)\n        closestEnemy.enemy.hurt(this.wielder, 3);\n      }\n      //for (const c of enemyHitCandidates) {\n      //let e = c.enemy;\n      //let d = c.dist;\n      //if (d === 1) e.hurt(this.wielder, 0.5);\n\n      //}\n      //finally bro\n      //for the array c of enemyHitCandidates if the enemy distance is 3 only do .5 damage\n      //if they're closer do the usual damage\n      //hits all candidates in enemyHitCandidates\n\n      if (\n        this.wielder.game.levels[this.wielder.levelID] ===\n        this.wielder.game.level\n      )\n        Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      GenericParticle.shotgun(\n        this.game.levels[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"black\"\n      );\n      GenericParticle.shotgun(\n        this.game.levels[this.wielder.levelID],\n        this.wielder.x + 0.5,\n        this.wielder.y,\n        targetX + 0.5,\n        targetY,\n        \"#ffddff\"\n      );\n      let gp = new GenericParticle(\n        this.game.levels[this.wielder.levelID],\n        0.5 * (newX + this.wielder.x) + 0.5,\n        0.5 * (newY + this.wielder.y),\n        0,\n        1,\n        0,\n        0,\n        0,\n        \"white\",\n        0\n      );\n      gp.expirationTimer = 10;\n      this.game.levels[this.wielder.levelID].particles.push(gp);\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n\n      return false;\n    }\n    return true;\n  };\n  getDescription = (): string => {\n    return \"SLINGSHOT\\nRange 15\";\n  };\n}\n","import { Game } from \"../game\";\nimport { Weapon } from \"./weapon\";\nimport { Level } from \"../level\";\nimport { Sound } from \"../sound\";\nimport { SlashParticle } from \"../particle/slashParticle\";\nimport { Crate } from \"../enemy/crate\";\nimport { Barrel } from \"../enemy/barrel\";\n\nexport class Spear extends Weapon {\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    this.tileX = 24;\n    this.tileY = 0;\n  }\n\n  weaponMove = (newX: number, newY: number): boolean => {\n    let newX2 = 2 * newX - this.wielder.x;\n    let newY2 = 2 * newY - this.wielder.y;\n    let flag = false;\n    let enemyHitCandidates = [];\n    for (let e of this.game.levels[this.wielder.levelID].enemies) {\n      if (e.destroyable) {\n        if (e.pointIn(newX, newY)) {\n          if (e.pushable) return true;\n          else {\n            e.hurt(this.wielder, 1);\n            flag = true;\n          }\n        }\n        if (e.pointIn(newX2, newY2) && !this.game.levels[this.wielder.levelID].levelArray[newX][newY].isSolid()) {\n          if (!e.pushable) enemyHitCandidates.push(e);\n        }\n      }\n    }\n    if (!flag && enemyHitCandidates.length > 0) {\n      for (const e of enemyHitCandidates) e.hurt(this.wielder, 1);\n      if (this.wielder.game.level === this.wielder.game.levels[this.wielder.levelID]) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n      return false;\n    }\n    if (flag) {\n      if (this.wielder.game.level === this.wielder.game.levels[this.wielder.levelID]) Sound.hit();\n      this.wielder.drawX = 0.5 * (this.wielder.x - newX);\n      this.wielder.drawY = 0.5 * (this.wielder.y - newY);\n      this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\n      this.game.levels[this.wielder.levelID].tick(this.wielder);\n      if (this.wielder === this.game.players[this.game.localPlayerID])\n        this.game.shakeScreen(10 * this.wielder.drawX, 10 * this.wielder.drawY);\n    }\n    return !flag;\n  };\n\n  getDescription = (): string => {\n    return \"SPEAR\\nRange 2\";\n  };\n}\n","import { Level } from \"../level\";\nimport { Game } from \"../game\";\nimport { Equippable } from \"../item/equippable\";\nimport { Player } from \"../player\";\n\nexport class Weapon extends Equippable {\n  game: Game;\n  canMine: boolean;\n\n  constructor(level: Level, x: number, y: number) {\n    super(level, x, y);\n\n    if (level) this.game = level.game;\n\n    this.canMine = false;\n  }\n\n  coEquippable = (other: Equippable): boolean => {\n    if (other instanceof Weapon) return false;\n    return true;\n  };\n\n  tick = () => { };\n\n  // returns true if nothing was hit, false if the player should move\n  weaponMove = (newX: number, newY: number): boolean => {\n    return true;\n  };\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = exports.io = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path);\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst socket_1 = require(\"./socket\");\nconst Emitter = require(\"component-emitter\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends Emitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            super.emit(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        super.emit(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        super.emit(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        super.emit(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        super.emit(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            super.emit(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                super.emit(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        super.emit(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        super.emit(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst on_1 = require(\"./on\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, \"open\", this.onopen.bind(this)),\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_1.on(io, \"error\", this.onerror.bind(this)),\n            on_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @param ev - event name\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            super.emit(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        super.emit(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    super.emit(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                super.emit(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        super.emit(\"connect\");\n        this.emitBuffered();\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(2967);\n"],"names":["Backoff","opts","this","ms","min","max","factor","jitter","attempts","module","exports","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","chars","encode","arraybuffer","i","bytes","Uint8Array","len","length","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ArrayBuffer","indexOf","Emitter","obj","key","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","listeners","hasListeners","s","m","h","d","plural","msAbs","n","name","isPlural","round","val","options","type","str","String","match","exec","parseFloat","toLowerCase","parse","isFinite","long","abs","fmtShort","Error","JSON","stringify","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","replace","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","j","v","message","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","Date","prev","coerce","unshift","format","formatter","call","selectColor","extend","Object","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","toString","default","stack","disable","names","map","skips","join","enable","split","test","keys","forEach","hash","charCodeAt","Function","Socket","uri","protocol","Transport","transports","parser","parseuri","parseqs","constructor","super","hostname","host","secure","port","query","location","readyState","writeBuffer","prevBufferLen","assign","path","agent","withCredentials","upgrade","jsonp","timestampParam","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","close","open","createTransport","o","hasOwnProperty","clone","EIO","sid","socket","priorWebsocketSuccess","setTimeout","e","shift","setTransport","onDrain","packet","onPacket","onError","onClose","probe","failed","onTransportOpen","onlyBinaryUpgrades","upgradeLosesBinary","supportsBinary","send","data","msg","upgrading","pause","cleanup","flush","err","freezeTransport","onerror","onTransportClose","onclose","onupgrade","to","onOpen","l","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","clearTimeout","writable","write","undefined","compress","cleanupAndClose","waitForUpgrade","reason","desc","pingIntervalTimer","filteredUpgrades","description","doOpen","doClose","packets","onData","decodePacket","binaryType","XMLHttpRequest","XHR","JSONP","websocket","polling","xhr","xd","xs","isSSL","xdomain","xscheme","forceJSONP","Polling","globalThis","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","doPoll","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","doWrite","area","iframeId","className","position","top","left","target","method","setAttribute","complete","initIframe","html","action","value","submit","attachEvent","onreadystatechange","onload","pick","empty","hasXHR2","responseType","Request","create","extraHeaders","setDisableHeaderCheck","setRequestHeader","requestTimeout","timeout","hasXDR","onLoad","responseText","status","requestsCount","requests","onSuccess","fromError","abort","XDomainRequest","enablesXDR","unloadHandler","forceBase64","request","req","pollXhr","yeast","poll","onPause","total","decodePayload","encodePayload","schema","timestampRequests","b64","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","product","WS","check","protocols","headers","ws","addEventListeners","onopen","onmessage","ev","encodePacket","Buffer","byteLength","attr","reduce","acc","k","hasCORS","concat","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","base64decoder","decodeBase64Packet","decoded","mapBinary","Blob","encodedPacket","charAt","withNativeBlob","withNativeArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","content","result","readAsDataURL","isView","buffer","SEPARATOR","fromCharCode","encodedPackets","count","encodedPayload","decodedPacket","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","re","parts","b","source","authority","ipv6uri","pathNames","substr","queryKey","$0","$2","reconstructPacket","deconstructPacket","is_binary_1","_deconstructPacket","buffers","isBinary","placeholder","_placeholder","num","isArray","newData","_reconstructPacket","packetData","pack","attachments","Decoder","Encoder","PacketType","binary_1","EVENT","ACK","hasBinary","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","add","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","withNativeFile","File","toJSON","ActionState","ActionTab","inventory","game","tick","draw","player","weapon","actionTab","actionState","Ready","Game","ctx","fillStyle","fillRect","Attack","halfAttack","Wait","GraphNodeType","grid","elements","row","rowLength","nodes","x","y","GraphNode","rowDebug","graphString","Graph","pos","isWall","WALL","scoreFunction","node","sinkDown","pop","end","bubbleUp","remove","size","rescoreElement","element","parentN","parent","elemScore","child2N","child1N","swap","child1","child1Score","child2","BinaryHeap","disablePoints","enableCost","xl","yl","cost","tile","isSolid","isDoor","org","f","g","visited","closed","heap","_find","_search","diagonal","diagonalsOnly","turnCostsExtra","turnDirection","heuristic","diagonalsOmni","manhattan","_start","_end","openHeap","AStar","NO_CHECK_START_POINT","currentNode","ret","reverse","neighbors","il","neighbor","gScore","isTurn","EnemyDirection","UP","DOWN","RIGHT","LEFT","beenVisited","search","pos0","pos1","diagonals","randomBool","astar","Drawable","drawableY","delta","level","drop","hit","hurt","playerHitBy","damage","aggro","targetPlayer","players","localPlayerID","alertTicks","health","healthBar","kill","GenericParticle","spawnCluster","deathParticleColor","lastX","lastY","dead","skipNextTurns","ticks","seenPlayer","playerTicked","oldX","oldY","disablePositions","enemies","xx","yy","levelArray","SpikeTrap","roomX","width","roomY","height","moves","direction","moveX","moveY","oldDir","facePlayer","levels","levelID","drawX","drawY","shakeScreen","tryMove","hitwarnings","HitWarning","targetPlayerOffline","values","offlinePlayers","nearestPlayer","distance","playerDistance","tileX","tileY","frame","hasShadow","drawMob","shadeColor","shadeAmount","drawSleepingZs","drawExclamation","maxHealth","dropProb","Random","Pickaxe","GreenGem","Coin","Enemy","ArmoredzombieEnemy","killNoBones","drawObj","drawTopLayer","pushable","entityType","EntityType","Prop","Barrel","REGEN_TICKS","addHitWarnings","ticksSinceFirstHit","particles","DeathParticle","dropLoot","w","wouldHit","flashingFrame","GameConstants","TILESIZE","dropOffsets","drops","items","chainPushable","Spear","RedGem","BigSkullEnemy","enemy","someX","someY","tiles","onCollideEnemy","Candle","BishopEnemy","ChargeEnemyState","canMoveOver","t","Door","state","IDLE","blocked","dx","dy","ALERTED","targetX","targetY","visualTargetX","visualTargetY","CHARGING","trailFrame","startX","startY","strokeStyle","ALPHA_ENABLED","globalAlpha","lineWidth","beginPath","moveTo","lineCap","lineTo","stroke","ChargeEnemy","Sound","chest","Chest","randTable","Heart","BlueGem","Key","Armor","hurtCallback","mine","breakRock","Coal","Resource","CoalResource","Crate","EmeraldResource","sleepingZFrame","pointIn","interact","onDrop","Floor","Bones","skin","softVis","doneMoving","maxDistance","closestDistance","closestPlayer","offsetX","offsetY","numZs","yoff","alpha","xoff","measureText","fillTextOutline","OUTLINE","exclamationFrame","yoffs","WARNING_RED","destroyable","interactable","HealthBar","Gold","GoldResource","hitPlayer","DualDagger","KnightEnemy","Shrooms","Mushrooms","Pot","PottedPlant","getWeapon","canMine","Stone","Rock","Rook","SkullEnemy","SlimeEnemy","positions","getEmptyTiles","filter","spawned","enemySpawnType","WizardEnemy","projectiles","EnemySpawnAnimation","Spawner","FULL_OUTLINE","item","openTime","isInf","quantity","buyAnimAmount","playerOpened","openVendingMachine","now","space","costItems","hasItemCount","subtractItemCount","some","newItem","cx","cy","drawXScaled","drawYScaled","a","drawIcon","drawFX","Friendly","Shotgun","stackCount","Lantern","VendingMachine","WizardState","ATTACK_RADIUS","withinAttackingRangeOfPlayer","withinRange","shuffle","attack","getTile","WizardFireball","justAttacked","idle","teleport","bestPos","emptyTiles","optimalDist","player_ids","target_player_id","newPos","dist","WizardTeleportParticle","ZombieEnemy","LevelState","MenuState","timestamp","ChatMessage","fps","times","input_history","mostRecentInputReceived","loginMessage","keyDownListener","menuState","LOGIN_USERNAME","usernameTextBox","handleKeyPress","LOGIN_PASSWORD","passwordTextBox","SELECT_WORLD","selectedWorldCode","worldCodes","IN_GAME","chatOpen","chatTextBox","toUpperCase","clear","inputHandler","InputEnum","SPACE","I","Q","sendInput","input","changeLevel","newLevel","enterLevel","changeLevelThroughLadder","ladder","linkedLevel","DownLadder","generate","levelState","TRANSITIONING_LADDER","transitionStartTime","transitioningLadder","changeLevelThroughDoor","door","side","TRANSITIONING","prevLevel","enterLevelThroughDoor","transitionX","transitionY","upwardTransition","sideTransition","sideTransitionDirection","DoorDir","East","West","includes","doorDir","South","run","previousFrameTimestamp","FPS","update","requestAnimationFrame","Input","checkIsTapHold","lastPressTime","KEY_REPEAT_TIME","onKeydown","repeat","lastPressKeyCode","LevelConstants","LEVEL_TRANSITION_TIME","IN_LEVEL","LEVEL_TRANSITION_TIME_LADDER","lerp","onResize","maxWidthScale","innerWidth","DEFAULTWIDTH","maxHeightScale","innerHeight","DEFAULTHEIGHT","scale","SCREEN_W","SCREEN_H","WIDTH","HEIGHT","canvas","shakeX","shakeY","screenShakeX","screenShakeY","LOADING","loadingString","fillText","letter_height","usernameString","text","cursorX","cursor","passwordString","ind","spacing","levelOffsetX","levelOffsetY","playerOffsetX","playerOffsetY","playerCX","playerCY","translate","extraTileLerp","newLevelOffsetX","newLevelOffsetY","ditherFrame","drawEntities","drawShade","drawOverShade","drawGUI","updateDrawXY","exitLevel","playerDrawX","playerDrawY","cameraX","cameraY","CHAT_BOTTOM_Y","chat","GREEN","age","CHAT_APPEAR_TIME","CHAT_FADE_TIME","LEVEL_TEXT_COLOR","VERSION","io","ServerAddress","address","codes","activeUsernames","loadGameState","createGameState","tickPlayerID","randState","decode_input","Player","levelgen","currentFloorFirstLevelID","iListener","qListener","leftListener","rightListener","upListener","downListener","spaceListener","connectedPlayerID","disconnectPlayerID","getElementById","getContext","TextBox","setEnterCallback","seed","setEscapeCallback","allowedCharacters","shade_canvases","text_rendering_canvases","tileset","Image","objset","mobset","itemset","fxset","fontsheet","loadSounds","playMusic","preventDefault","handleTouchStart","passive","handleTouchMove","handleTouchEnd","letters","letter_widths","letter_positions","letter","maxWidth","dimensions","drawImage","bx","letter_x","globalCompositeOperation","outlineColor","fillColor","drawHelper","sX","sY","sW","sH","dX","dY","dW","dH","shadeOpacity","sx","sy","sw","sh","opacity","getShadeCanvasKey","SHADE_LEVELS","shCtx","clearRect","drawTile","drawItem","SCALE","SWIPE_THRESH","scrolling","SCRIPT_FONT_SIZE","FONT_SIZE","BIG_FONT_SIZE","RED","ARMOR_GREY","HIT_ENEMY_TEXT_COLOR","HEALTH_BUFF_COLOR","MISS_COLOR","hw","HitWarningState","ProjectileType","loadHitWarning","hws","projectile","SPAWN","enemySpawn","EnemyState","WIZARD","wizardState","wizardParentID","ProjectileState","EnemyType","loadProjectile","ps","loadEnemy","wizard","hasDrop","ItemState","BARREL","BIGSKULL","targetPlayerID","find","CHARGE","chargeEnemyState","CHEST","COAL","CRATE","EMERALD","GOLD","KNIGHT","PLANT","SKULL","SLIME","SPAWNER","VENDINGMACHINE","isPlayerOpened","playerOpenedID","ZOMBIE","es","loadItem","entered","ItemType","loadLevel","ARMOR","BLUEGEM","CANDLE","COIN","GoldenKey","GOLDENKEY","GREENGEM","HEART","KEY","LANTERN","REDGEM","Torch","TORCH","Dagger","DAGGER","DUALDAGGER","SHOTGUN","SPEAR","PICKAXE","Backpack","BACKPACK","equipped","Equippable","pickedUp","setWielder","isOpen","cols","rows","equipAnimAmount","isWeaponEquipped","weaponI","coins","selX","selY","InventoryState","lastTickHealth","hasOpenVendingMachine","openVendingMachineLevelID","openVendingMachineID","sightRadius","PlayerState","loadPlayer","loadInventory","randomState","depth","GameState","gs","depthReached","catchUp","gameState","LevelGenerator","setSeed","init_state","generateFirstNFloors","setState","updateLighting","hurtTimer","hearts","maxHearts","flashing","HEALTH_BAR_TOTALTIME","fullHearts","halfHearts","ceil","drawWidth","drawHeight","xxStart","updateFrame","_pressed","isTapHold","tapStartTime","IS_TAP_HOLD_THRESH","mListener","mUpListener","aListener","dListener","wListener","sListener","leftSwipeListener","rightSwipeListener","upSwipeListener","downSwipeListener","tapListener","mouseLeftClickListeners","mouseLeftClickListener","mouseX","mouseY","W","A","S","D","M","N","isDown","keyCode","cancelable","onKeyup","mouseClickListener","button","rect","getBoundingClientRect","clientX","clientY","updateMousePos","getTouches","evt","touches","originalEvent","xDown","yDown","currentX","currentY","swiped","firstTouch","xDiff","yDiff","FILL_COLOR","OUTLINE_COLOR","EQUIP_COLOR","Inventory","expansion","right","up","down","Usable","onUse","toggleEquip","Weapon","coEquippable","hasItem","itemType","coinCount","subtractCoins","addCoins","isFull","addItem","stackable","getArmor","hasWeapon","tickInInventory","textWrap","words","line","drawCoins","coinX","coinY","countText","countX","pointInside","sin","hg","yOff","topPhrase","lines","getDescription","nextY","Slingshot","RECHARGE_TURNS","other","rechargeTurnCounter","playerHealth","heal","Item","wielder","defaultSightRadius","coinList","otherCoin","scaleFactor","PI","pickupSound","pickupCoin","drawEquipped","genericPickup","onPickup","RoomType","TurnState","mapGroup","tileInside","populateEmpty","addTorches","populateDungeon","addWallBlocks","addFingers","addChasms","addSpikeTraps","numEmptyTiles","numTotalObstacles","numPlants","numObstacles","addPlants","addObstacles","numEnemies","addEnemies","addVendingMachine","populateBoss","populateBigDungeon","populateSpawner","populateKeyRoom","populateFountain","centerX","centerY","FountainTile","placeCoffin","CoffinTile","populateCoffin","populatePuzzle","InsideLevelDoor","Wall","Button","crateTiles","numCrates","populateSpikeCorridor","populateTreasure","addChests","populateChessboard","populateCave","addResources","populateUpLadder","populateDownLadder","cX","cY","populateRopeHole","isRope","populateRopeCave","upLadder","UpLadder","populateShop","populate","START","BOSS","DUNGEON","BIGDUNGEON","FOUNTAIN","COFFIN","PUZZLE","SPIKECORRIDOR","TREASURE","CHESSBOARD","KEYROOM","GRASS","BIGCAVE","CAVE","UPLADDER","DOWNLADDER","ROPEHOLE","ROPECAVE","SHOP","addDoor","SpawnFloor","doors","moveSnap","clearDeadStuff","North","opened","moveNoSmooth","enterLevelThroughLadder","returnVal","fadeLighting","vis","oldVis","LIGHTING_ANGLE_STEP","castShadowsAtAngle","lightSources","SMOOTH_LIGHTING","blur3x3","angle","px","py","radius","cos","onOpaqueSection","isOpaque","array","weights","blurredArray","totalWeights","turn","computerTurn","playerTurnTime","COMPUTER_TURN_DELAY","hitEnemy","tickEnd","finishTick","playerTurn","skipLocalPlayer","drawUnderPlayer","drawables","sort","drawAbovePlayer","bestSightRadius","shadingAlpha","drawAboveShading","old","font","walls","SkinType","buildEmptyRoom","rX","rY","rW","rH","numBlocks","blockW","blockH","numTorches","WallTorch","xmin","xmax","ymin","ymax","Chasm","numChests","numSpikes","addSpikes","Spike","tables","addEnemy","tt","numResources","Level","TURN_TIME","ROOM_COUNT","HEALTH_BAR_FADEIN","HEALTH_BAR_FADEOUT","SHADED_TILE_CUTOFF","MIN_VISIBILITY","rand_mid","w1","w2","Partition","h1","h2","point_in","point_next_to","overlaps","get_branch_point","points","connections","split_partitions","partitions","prob","partition","populate_grid","generate_dungeon_candidate","map_w","map_h","remove_wall_rooms","spawn","connected","frontier","found_boss","room","doors_found","num_doors","tries","point","PartitionConnection","num_loop_doors","roomIndex","found_door","not_already_connected","boss","found_stair","stair_tries","stair","seen","added_rope_hole","generate_cave_candidate","num_rooms","getLevels","doors_added","connection","existing_door","link","cave","assert","passes_checks","generate_cave","generate_dungeon","numExistingLevels","found","numFloors","LightSource","Map","wall","setTransform","yOffset","Particle","z","dz","delay","expirationTimer","targetZ","render","halfS","oldFillStyle","arc","fill","shotgun","tx","ty","SlashParticle","PlayerDirection","isLocalPlayer","ignoreDirectionInput","isLocal","tryCollide","newX","newY","weaponMove","nextX","foundEnd","enemyEnd","pushedEnemies","canCrushEnemy","move","LockedDoor","unlock","onCollide","BottomDoor","Trapdoor","SideDoor","dashMove","playerStoneFootstep","totalHealthDiff","drawPlayerSprite","heartbeat","guiHeartFrame","tapHoldHandler","mapToggled","gameOverString","missProb","ANIM_COUNT","Projectile","playerStoneFootsteps","Audio","volume","enemyFootsteps","hitSounds","enemySpawnSound","chestSounds","coinPickupSounds","miningSounds","hurtSounds","genericPickupSound","breakRockSound","pushSounds","healSound","music","play","currentTime","enemyFootstep","enterCallback","escapeCallback","fontHas","linkedDoor","Tile","press","pressed","unpress","turnsSincePressed","leftEdge","rightEdge","topEdge","bottomEdge","subTileY","dir","isLocked","locked","allPlayersHere","variation","subTileX","unlockedDoor","tickCount","rumbleOffsetX","frames","flag","firstAttack","newX2","newY2","newX3","newY3","range","enemyHitCandidates","firstPushable","firstNonPushable","firstNonDestroyable","gp","closestEnemy","minEnemy","currentEnemy","alphabet","encoded","Manager","url_1","manager_1","socket_1","lookup","cache","managers","parsed","url","sameNamespace","forceNew","multiplex","socket_io_parser_1","connect","manager_2","eio","on_1","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_readyState","_parser","encoder","decoder","_autoConnect","autoConnect","_reconnection","_reconnectionAttempts","_a","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","engine","skipReconnect","openSubDestroy","errorSub","timer","onping","bind","ondata","ondecoded","_destroy","active","_close","_packet","subDestroy","disconnect","onreconnect","attempt","RESERVED_EVENTS","freeze","connect_error","disconnecting","newListener","receiveBuffer","sendBuffer","ids","acks","flags","disconnected","auth","subEvents","onpacket","isTransportWritable","volatile","onconnect","onevent","onack","ondisconnect","ack","emitEvent","_anyListeners","listener","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","loc","href","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}
{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAA;AACa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,UAAU;AACjB,OAAO,gBAAgB;AACvB,OAAO,uBAAuB;;AAE9B;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA,OAAO,SAAS;;AAEhB;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA,2BAA2B,oBAAoB,IAAI;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wFAAwF,qBAAM;AAC9F,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,4BAA4B;AAC5B;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kCAAkC;AAClC,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA,gCAAgC,WAAW,IAAI;AAC/C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG,GAAG,WAAW;AACjB;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,eAAe;;AAEzC;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG,WAAW,cAAc;AAC5B,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,CAAC;;AAED;AACA,oDAAoD,YAAY;;AAEhE;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;;AAEA,2BAA2B;AAC3B;AACA;;AAEA,qDAAqD;AACrD;AACA,iDAAiD,kCAAkC;AACnF;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,eAAe;AAC5B,aAAa,sBAAsB;AACnC,YAAY;AACZ;AACA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD,MAAM;AAC1D,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,KAAK;AAC/B;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC;AACvC,KAAK;;AAEL;AACA,0DAA0D,wBAAwB;AAClF;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uEAAuE,WAAW;;AAElF;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,SAAS;AAC1C,MAAM;AACN,6BAA6B;AAC7B,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,kCAAkC;;AAElC,QAAQ,qEAAqE;;AAE7E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,wCAAwC;;AAExC;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;AACH;;AAEA;AACA,SAAS,QAAQ;;AAEjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,WAAW,QAAQ;;AAEnB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;;AAEA,OAAO,YAAY;;AAEnB,0BAA0B,kBAAkB;AAC5C;AACA,CAAC;;AAED;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,oCAAoC;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,KAAK;AACpD,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,MAAM;AAC/C,MAAM;AACN;AACA;AACA,8CAA8C,MAAM;AACpD;AACA,CAAC;;AAED,sCAAsC,OAAO;;AAE7C;;AAEA;AACA;AACA;;AAEA,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA,oBAAoB,YAAY;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,mDAAmD,GAAG;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,yCAAyC,IAAI;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK,6BAA6B,gBAAgB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,SAAS;AACtB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA,WAAW,yCAAyC;;AAEpD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,yBAAyB;AACzB,KAAK;AACL;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,UAAU,IAAI;AACd;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,iBAAiB;;AAEzE;AACA,2CAA2C,iBAAiB;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;;AC/vHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA,wBAAwB,cAAc;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA,uCAAuC,MAAM;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,kDAAkD;AAClD,iDAAiD;AACjD,iDAAiD;AACjD,kDAAkD;AAClD,gDAAgD;AAChD,kDAAkD;AAClD,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,oEAAoE;AACpE,oEAAoE;AACpE,mDAAmD;AACnD,qDAAqD,wCAAwC;AAC7F;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,4CAA4C,kBAAkB;AAC9D,4CAA4C,kBAAkB;AAC9D,oCAAoC,cAAc;AAClD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,eAAe;AAC/B,gBAAgB,SAAS;AACzB,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,4BAA4B,GAAG,eAAe;AAC1E;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,UAAU;AAC1B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,oDAAoD;AACpE;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,mCAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AAAA,kGAAC;AACN;;AAEA;AACA,MAAM,IAA8B;AACpC,IAAI,cAAc;AAClB,IAAI,YAAY;AAChB;;AAEA;AACA,aAAa,qBAAM;AACnB,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,qBAAM;AACV,IAAI,2CAA2C;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe;AACrD,gCAAgC,YAAY;AAC5C,gDAAgD,oBAAoB;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/qGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C,wCAAwC;AACxC,wDAAwD;AACxD,+BAA+B;AAC/B,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C,GAAG;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,IAAI;AAChC;;AAEA,wCAAwC;AACxC;;AAEA,sBAAsB;AACtB;;AAEA,8BAA8B,uCAAuC;AACrE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD,IAAI,WAAW,IAAI;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,sBAAsB,SAAS;AAC/B;AACA,kCAAkC;AAClC;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA,qGAAqG;AACrG;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,4BAA4B,IAAI;AAChC;;AAEA;AACA,wBAAwB,SAAS,EAAE,cAAc,EAAE;AACnD;AACA;;AAEA,gCAAgC,EAAE,WAAW,EAAE;AAC/C,iBAAiB;AACjB;AACA;AACA,wBAAwB,qBAAqB,IAAI,cAAc;AAC/D;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA,eAAe;AACf,0BAA0B,EAAE;AAC5B;AACA,wBAAwB,EAAE;AAC1B,6CAA6C,oEAAoE;;AAEjH;AACA;AACA;;AAEA;AACA,eAAe;AACf,wBAAwB,EAAE,iBAAiB;AAC3C;;AAEA;AACA,2BAA2B,EAAE,UAAU;AACvC;;AAEA;AACA,8FAA8F,IAAI,8CAA8C;AAChJ,iEAAiE,IAAI,QAAQ;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA,gCAAgC,IAAI;AACpC;;AAEA;AACA,gCAAgC,EAAE,gBAAgB,EAAE,GAAG,aAAa,IAAI;AACxE;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,sBAAsB,WAAW,EAAE,WAAW,EAAE,qDAAqD,IAAI;AACzG;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,IAAI,IAAI;;AAE7B;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA,+DAA+D,iDAAiD;;AAEhH;AACA,sBAAsB;AACtB;;AAEA;AACA,sBAAsB;AACtB,yBAAyB,GAAG;AAC5B;AACA;AACA;AACA,eAAe,0BAA0B,IAAI;AAC7C;;AAEA;AACA,eAAe;AACf,eAAe;AACf;;AAEA;AACA,eAAe,UAAU;AACzB,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe,aAAa,IAAI;AAChC;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,kEAAkE;AACjF;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,+CAA+C,WAAW,IAAI,IAAI;AAClE,wDAAwD,WAAW;AACnE;AACA,sBAAsB;AACtB;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ,IAAI;AAClC;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,IAAI,cAAc;AAC1C,2CAA2C,gDAAgD;AAC3F,8BAA8B;AAC9B;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B;AACA;;AAEA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,6BAA6B;AAC7B;AACA;;AAEA;AACA,yBAAyB,IAAI,6BAA6B;AAC1D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iIAAiI;AACjI;AACA,sBAAsB;AACtB;AACA,0CAA0C;AAC1C;AACA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,sCAAsC,2GAA2G;AACjJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,uBAAuB,UAAU,IAAI;AACrC;AACA;AACA,+BAA+B,IAAI,mCAAmC,IAAI;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS,eAAe,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,wDAAwD;AACxD,cAAc;AACd,wDAAwD;AACxD;AACA;AACA;AACA,UAAU;AACV,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAa;AACzB;AACA;AACA,QAAQ,gBAAgB;AACxB,MAAM;AACN;AACA,YAAY,UAAa,kBAAkB,wBAAU;AACrD,YAAY,mCAAO;AACnB;AACA,aAAa;AAAA,kGAAC;AACd,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC39CD,gGAA0B;AAE1B,yEAA+C;AAElC,iBAAS,GAAG,eAAK,CAAC,MAAM,CAAC;IACpC,OAAO,EAAE,gCAAoB,GAAE;CAChC,CAAC,CAAC;AAMI,MAAM,eAAe,GAAG,KAAK,EAAE,SAAoB,EAAE,EAAE;IAC5D,MAAM,QAAQ,GAAG,MAAM,iBAAS,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;IAChE,OAAO,QAAQ,CAAC,IAAI,CAAC;AACvB,CAAC,CAAC;AAHW,uBAAe,mBAG1B;AAEK,MAAM,mBAAmB,GAAG,KAAK,EAAE,SAAoB,EAAE,EAAE;IAChE,IAAI;QACF,OAAO,MAAM,2BAAe,EAAC,SAAS,CAAC,CAAC;KACzC;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;KAC7C;AACH,CAAC,CAAC;AANW,2BAAmB,uBAM9B;AAEK,MAAM,cAAc,GAAG,KAAK,IAAI,EAAE;IACvC,MAAM,QAAQ,GAAG,MAAM,iBAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACpD,OAAO,QAAQ,CAAC,IAAI,CAAC;AACvB,CAAC,CAAC;AAHW,sBAAc,kBAGzB;;;;;;;;;;;;;;;AC5BF,gDAAgD;AAChD,mDAAmD;AACnD,iEAAiE;AAC1D,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,MAAM,aAAa,GACjB,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,WAAW;QACxC,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,WAAW;QACxC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC9C,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,OAAO,CAAC;IAEvC,IAAI,aAAa,EAAE;QACjB,OAAO,8BAA8B,CAAC;KACvC;SAAM;QACL,OAAO,yCAAyC,CAAC;KAClD;AACH,CAAC,CAAC;AAZW,4BAAoB,wBAY/B;;;;;;;;;;;;;;;ACfF,IAAY,OAUX;AAVD,WAAY,OAAO;IACjB,2CAAW;IACX,qCAAQ;IACR,yCAAU;IACV,yCAAU;IACV,2CAAW;IACX,mDAAe;IACf,mDAAe;IACf,yCAAU;IACV,iDAAc;AAChB,CAAC,EAVW,OAAO,GAAP,eAAO,KAAP,eAAO,QAUlB;AAEM,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAU,EAAE;IACzD,QAAQ,OAAO,EAAE;QACf,KAAK,OAAO,CAAC,OAAO;YAClB,OAAO,SAAS,CAAC;QACnB,KAAK,OAAO,CAAC,IAAI;YACf,OAAO,MAAM,CAAC;QAChB,KAAK,OAAO,CAAC,MAAM;YACjB,OAAO,QAAQ,CAAC;QAClB,KAAK,OAAO,CAAC,MAAM;YACjB,OAAO,QAAQ,CAAC;QAClB,KAAK,OAAO,CAAC,OAAO;YAClB,OAAO,SAAS,CAAC;QACnB,KAAK,OAAO,CAAC,WAAW;YACtB,OAAO,aAAa,CAAC;QACvB,KAAK,OAAO,CAAC,WAAW;YACtB,OAAO,aAAa,CAAC;QACvB,KAAK,OAAO,CAAC,MAAM;YACjB,OAAO,QAAQ,CAAC;QAClB,KAAK,OAAO,CAAC,UAAU;YACrB,OAAO,YAAY,CAAC;KACvB;AACH,CAAC,CAAC;AArBW,sBAAc,kBAqBzB;;;;;;;;;;;;;;;ACjCF,MAAa,QAAQ;IAArB;QACE,cAAS,GAAG,CAAC,CAAC;QACd,+DAA+D;QAC/D,0BAAqB,GAAY,KAAK,CAAC;QAEvC,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAE7B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAW,SAAS,CAAC;QAC/B,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAW,CAAC,CAAC;QAC3B,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;gBACjD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE;oBAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;iBAChE;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;iBACvC;aACF;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;CAAA;AAvBD,4BAuBC;;;;;;;;;;;;;;;ACvBD,mEAA+B;AAE/B,6GAAyD;AAEzD,MAAa,SAAS;IAIpB;QAIA,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9B,CAAC,CAAC;QAEF,SAAI,GAAG,CACL,KAAa,EACb,MAAc,EACd,SAAiB,EACjB,CAAS,EACT,CAAS,EACT,QAAiB,EACjB,EAAE;YACF,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CACd,+BAAc,CAAC,oBAAoB,EACnC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CACzC,CAAC;YACF,IAAI,CAAC,IAAI,+BAAc,CAAC,oBAAoB,EAAE;gBAC5C,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAEpC,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;gBAEhD,IAAI,WAAW,GAAG,SAAS,GAAG,UAAU,GAAG,UAAU,CAAC;gBAEtD,2FAA2F;gBAC3F,yCAAyC;gBACzC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CACxB,IAAI,CAAC,GAAG,CACN,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,+BAAc,CAAC,oBAAoB,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CACrE,CACF,CAAC;gBACF,IAAI,UAAU,GACZ,IAAI,CAAC,KAAK,CACR,IAAI,CAAC,GAAG,CACN,GAAG,EACH,IAAI,CAAC,GAAG,CACN,KAAK,GAAG,CAAC,+BAAc,CAAC,oBAAoB,GAAG,CAAC,CAAC,EACjD,KAAK,GAAG,CAAC,CACV,CACF,GAAG,EAAE,CACP,GAAG,IAAI,CAAC;gBACX,IAAI,KAAK,GAAG,CAAC,SAAS,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;gBACrD,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnD,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,CAAC,QAAQ;wBAAE,KAAK,GAAG,GAAG,CAAC;yBACtB,IAAI,CAAC,GAAG,UAAU;wBAAE,KAAK,GAAG,CAAC,CAAC;yBAC9B,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU;wBAAE,KAAK,GAAG,GAAG,CAAC;;wBAC7C,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,CAAC;oBAC1C,WAAI,CAAC,MAAM,CACT,KAAK,EACL,CAAC,EACD,GAAG,EACH,GAAG,EACH,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,EACtB,GAAG,EACH,UAAU,CACX,CAAC;oBACF,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC;oBAEjB,IAAI,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,KAAK,CAAC,EAAE;wBACX,IAAI,KAAK,GAAG,CAAC,CAAC;wBACd,IAAI,CAAC,QAAQ;4BAAE,KAAK,GAAG,GAAG,CAAC;6BACtB,IAAI,CAAC,GAAG,UAAU;4BAAE,KAAK,GAAG,CAAC,CAAC;6BAC9B,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU;4BAAE,KAAK,GAAG,GAAG,CAAC;;4BAC7C,KAAK,GAAG,CAAC,CAAC;wBACf,IAAI,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,CAAC;wBAC1C,WAAI,CAAC,MAAM,CACT,KAAK,EACL,CAAC,EACD,GAAG,EACH,GAAG,EACH,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,EACtB,GAAG,EACH,UAAU,CACX,CAAC;wBACF,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC;qBAClB;iBACF;aACF;QACH,CAAC,CAAC;QAvFA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;CAuFF;AA7FD,8BA6FC;;;;;;;;;;;;;;;ACjGD,mEAA+B;AAC/B,uFAAsC;AAGtC,sFAAyC;AAEzC,IAAY,mBAUX;AAVD,WAAY,mBAAmB;IAC7B,+DAAK;IACL,uEAAS;IACT,6DAAI;IACJ,uEAAS;IACT,+DAAK;IACL,uEAAS;IACT,6DAAI;IACJ,uEAAS;IACT,iEAAM;AACR,CAAC,EAVW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAU9B;AAED,MAAa,UAAW,SAAQ,mBAAQ;IAqBtC,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,EAAW,EACX,EAAW,EACX,OAAiB,EACjB,UAAmB,KAAK,EACxB,SAAwB,IAAI;QAE5B,KAAK,EAAE,CAAC;QAzBV,WAAM,GAAkB,IAAI,CAAC;QACrB,gBAAW,GAA+B,IAAI,CAAC;QAC/C,mBAAc,GAAoC,IAAI,CAAC;QASvD,UAAK,GAAW,CAAC,CAAC;QAElB,mBAAc,GAAG,KAAK,CAAC;QA8B/B,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,cAAc;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC;QAOF,sBAAiB,GAAG,GAAG,EAAE;YACvB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC5C,IACE,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACnB,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACnB,MAAM,CAAC,QAAQ,KAAK,KAAK,EACzB;oBACA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,MAAM;iBACP;aACF;YACD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACvC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;oBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,MAAM;iBACP;aACF;QACH,CAAC,CAAC;QAmDF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;gBAC/C,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;gBAC/C,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,IACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACpE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACpE;gBACA,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;gBAClC,IACE,IAAI,CAAC,OAAO;oBACZ,aAAK,CAAC,QAAQ,CACZ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAC5C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAC7C,IAAI,CAAC,EACN;oBACA,8CAA8C;oBAE9C,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EACzC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAC5C,CAAC,EACD,CAAC,CACF,CAAC;iBACH;gBACD,IAAI,KAAK,EAAE;AAAA,EAaV;gBACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAE5B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,mBAAmB,CAAC,KAAK,EAAE;gBACtE,uBAAuB;gBACvB,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EACzC,IAAI,CAAC,KAAK,GAAG,CAAC,EACd,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAC5C,CAAC,EACD,CAAC,CACF,CAAC;aACH;YACD,IACE,aAAK,CAAC,QAAQ,CACZ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAC5C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAC7C,IAAI,CAAC,EACN;gBACA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACjB,iDAAiD;oBACjD,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EACjC,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EACzB,CAAC,EACD,CAAC,CACF,CAAC;iBACH;aACF;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAjMA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IA+BD,aAAa;QACX,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;YAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;YAE5B,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,MAAM,CAAC;aAC/C;iBAAM,IAAI,EAAE,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,WAAW;oBACd,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC;aAClE;iBAAM,IAAI,EAAE,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,WAAW;oBACd,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC;aAChE;iBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW;oBACd,EAAE,GAAG,CAAC;wBACJ,CAAC,CAAC,mBAAmB,CAAC,SAAS;wBAC/B,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,WAAW;oBACd,EAAE,GAAG,CAAC;wBACJ,CAAC,CAAC,mBAAmB,CAAC,SAAS;wBAC/B,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC;aACrC;YAED,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAChC,MAAM,OAAO,GAAG;gBACd,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;gBAC7C,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;gBAC9C,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;gBAC5C,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;gBAC7C,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;gBACpD,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;gBACnD,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;gBACrD,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;gBACpD,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE;aACjD,CAAC;YAEF,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;;AA7HH,gCAkOC;AA9NQ,gBAAK,GAAG,CAAC,CAAC;AAkDV,sBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;IACrC,UAAU,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC;IAClC,IAAI,UAAU,CAAC,KAAK,IAAI,CAAC;QAAE,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;AAClD,CAAC,CAAC;;;;;;;;;;;;;;;AC3EJ,mEAA+B;AAC/B,wGAAsD;AAEtD,MAAa,MAAM;IAMjB;;;;;OAKG;IACH,MAAM,CAAC,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,QAAgB,CAAC,EAAE,SAAiB,CAAC;QACrE,MAAM,QAAQ,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACxC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;QAC3B,IAAI,KAAK,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;YAC3B,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SACrD;aAAM;YACL,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAC3D;QACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;CACF;AAvBD,wBAuBC;;;;;;;;;;;;;;;AC1BD,+EAAkC;AAWlC,+FAAgD;AAChD,yFAA4C;AAC5C,2HAAwD;AACxD,yFAA2C;AAE3C,MAAa,eAAgB,SAAQ,eAAM;IACzC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAM1B,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,0BAAO,CAAC,MAAM,CAAC,CAAC,CAAC,0BAAO,CAAC,IAAI,CAAC;YACtE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;gBACvB,WAAW,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,0BAAO,CAAC,MAAM,CAAC,CAAC,CAAC,0BAAO,CAAC,IAAI,CAAC;aACnE;YACD,IAAI,OAAO,GAAG,IAAI,uBAAU,CAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,EACJ,WAAW,EACX,mBAAQ,CAAC,IAAI,CACd,CAAC;YAEF,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBAExC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aAC1D;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;QAChD,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAE7B,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QA9BnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CA4BF;AAlCD,0CAkCC;;;;;;;;;;;;;;;AClDD,sEAA6C;AAI7C,wGAAiD;AACjD,+FAAiD;AACjD,mHAA6D;AAC7D,kFAAgC;AAChC,qFAA0C;AAE1C,MAAa,iBAAkB,SAAQ,aAAK;IAa1C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QANjB,gBAAW,GAAG,CAAC,CAAC;QA4BzB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,CACL,WAAmB,EACnB,MAAc,EACd,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAElC,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,YAAY,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,IAAI,YAAY,CAAC;YAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE,aAAK,CAAC,SAAS,EAAE,CAAC;YAEzC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;aAC1E;iBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;aAC1E;;gBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAE7B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;;gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEb,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,EAAE;wBAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;wBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;qBAC1B;oBACD,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEb,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,EACd,SAAS,EACT,SAAS,CACV,CAAC;wBACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAExB,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;wBAED,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;wBAChC,IAAI,CAAC,aAAa,IAAI,GAAG,GAAG,KAAK,CAAC;wBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;4BAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;qBACF;iBACF;gBAED,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK;oBACR,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK;wBACjD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;wBACxB,CAAC,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA9SA,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO;QAExB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;;AAlCH,8CA8TC;AApTQ,4BAAU,GAAW,CAAC,CAAC;AACvB,uBAAK,GAAW,CAAC,CAAC;AAClB,uBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACtB3B,yCAAyC;AACzC,sEAA6C;AAK7C,kFAAgC;AAChC,wGAAiD;AACjD,+FAAiD;AAEjD,MAAa,kBAAmB,SAAQ,aAAK;IAW3C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAmB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,kCAAkC;oCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBAED,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;wBACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BACxB,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BACrD,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,MAAM,IAAI,IAAI,CAAC,SAAS,EACxB;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;wBAED,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAhOA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA7BH,gDA8OC;AAvOQ,6BAAU,GAAW,CAAC,CAAC;AACvB,wBAAK,GAAW,EAAE,CAAC;AACnB,wBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACnB3B,sEAA6C;AAE7C,wGAAiD;AACjD,+FAAiD;AAGjD,2GAAyD;AACzD,kFAAgC;AAChC,yFAA4C;AAC5C,0GAAuD;AAEvD,MAAa,WAAY,SAAQ,aAAK;IAapC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAgC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YAE9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,sEAAsE;YACtE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;iBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;gBAChB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3E,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;gBAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACjE,CAAC,CAAC;QAEF,yCAAyC;QACjC,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACxE,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,OAAO,EAAE;gBAAE,OAAO,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,qBAAS,IAAK,CAAe,CAAC,EAAE;gBAAE,OAAO,KAAK,CAAC;YAChE,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAAE,OAAO,KAAK,CAAC;aACxD;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAC7B,MAAc,EACd,MAAc,EAOb,EAAE;YACH,MAAM,UAAU,GAAG;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACrC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;aACtC,CAAC;YACF,MAAM,UAAU,GAAG,EAMjB,CAAC;YACH,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC9D,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEM,2BAAsB,GAAG,CAC/B,MAAc,EACd,MAAc,EAOb,EAAE;YACH,MAAM,UAAU,GAAG;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACrC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;aACtC,CAAC;YACF,MAAM,UAAU,GAAG,EAMjB,CAAC;YACH,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC1B,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC5B,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC5B,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChC,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,IACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAC3B;oBACA,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAC1B,UAME,EACF,OAAe,EACf,OAAe,EACf,WAAoB,EACpB,UAAkB,EAClB,UAAkB,EAClB,EAAE;YACF,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACvB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;gBACnE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;gBACnE,IAAI,EAAE,KAAK,EAAE;oBAAE,OAAO,EAAE,GAAG,EAAE,CAAC;gBAC9B,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;wBAAE,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;qBAAM;oBACL,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;wBAAE,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;gBACD,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzE,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzE,IAAI,QAAQ,KAAK,QAAQ;oBAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC;gBACtD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAC7B,MAAc,EACd,MAAc,EACmB,EAAE;YACnC,MAAM,UAAU,GAAG;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;aAClB,CAAC;YACF,MAAM,UAAU,GAAoC,EAAE,CAAC;YAEvD,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC/B,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvC;aACF;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEM,6BAAwB,GAAG,CACjC,UAA2C,EAC3C,OAAe,EACf,OAAe,EACf,WAAoB,EACpB,UAAkB,EAClB,UAAkB,EAClB,EAAE;YACF,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7D,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACvB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBAC7D,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBAC7D,IAAI,EAAE,KAAK,EAAE;oBAAE,OAAO,EAAE,GAAG,EAAE,CAAC;gBAE9B,2CAA2C;gBAC3C,MAAM,KAAK,GACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAChE,MAAM,KAAK,GACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAEhE,IAAI,WAAW,EAAE;oBACf,IAAI,KAAK,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAI,KAAK,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;gBAED,kCAAkC;gBAClC,MAAM,QAAQ,GAAG,CACf,CAAC,CAAC,CAAC,GAAG,OAAO;oBACX,CAAC,CAAC,UAAU,GAAG,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;wBACb,CAAC,CAAC,UAAU,GAAG,CAAC;wBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;4BACb,CAAC,CAAC,UAAU,GAAG,CAAC;4BAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;gCACb,CAAC,CAAC,UAAU,GAAG,CAAC;gCAChB,CAAC,CAAC,CAAC,CACZ;oBACC,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC,CAAC;gBACN,MAAM,QAAQ,GAAG,CACf,CAAC,CAAC,CAAC,GAAG,OAAO;oBACX,CAAC,CAAC,UAAU,GAAG,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;wBACb,CAAC,CAAC,UAAU,GAAG,CAAC;wBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;4BACb,CAAC,CAAC,UAAU,GAAG,CAAC;4BAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;gCACb,CAAC,CAAC,UAAU,GAAG,CAAC;gCAChB,CAAC,CAAC,CAAC,CACZ;oBACC,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC,CAAC;gBACN,IAAI,QAAQ,KAAK,QAAQ;oBAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC;gBAEtD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;QAEM,mBAAc,GAAG,CACvB,KAAa,EACb,KAAa,EACb,IAAY,EACZ,IAAY,EACN,EAAE;YACR,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YACjE,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oBAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;oBAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;oBACA,8DAA8D;oBAC9D,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE;wBAClC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wBACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4BAEnE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3D;oBACD,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;qBAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qBACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qBACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;aACvD;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,CAAC,MAAM;gCACT,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC;oCAC5B,CAAC,CAAC,IAAI,CAAC,YAAY;oCACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;yCACnD,OAAO,CAAC;4BAEjB,4EAA4E;4BAC5E,IAAI,cAAc,GAAG;gCACnB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gCACtB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;6BACvB,CAAC;4BAEF,kCAAkC;4BAClC,MAAM,cAAc,GAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gCACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BAEzC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,cAAc,KAAK,CAAC,EAAE;gCAC7D,uDAAuD;gCACvD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gCAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gCAC1C,iCAAiC;gCACjC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;oCACxB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wCAAE,EAAE,GAAG,CAAC,CAAC;;wCACpC,EAAE,GAAG,CAAC,CAAC;iCACb;gCACD,IACE,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oCAC/B,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAC/B;oCACA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oCACtD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oCACtD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;wCAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;wCACzC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EACpD;wCACA,cAAc,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;qCACjD;iCACF;6BACF;iCAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;gCAC5C,cAAc,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAS,CAAC;6BAChE;4BAED,4BAA4B;4BAC5B,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3C,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;4BAEjE,+EAA+E;4BAC/E,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;4BACpB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;4BACpB,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,KAAK,EACL,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCACpB,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC5B,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC5B,IAAI,UAAU,EAAE;oCACd,MAAM,cAAc,GAClB,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCACzD,MAAM,WAAW,GAAG,WAAW;wCAC7B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;wCAC3B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCAC9B,IAAI,cAAc,IAAI,WAAW;wCAAE,IAAI,GAAG,UAAU,CAAC;iCACtD;qCAAM,IAAI,UAAU,EAAE;oCACrB,MAAM,cAAc,GAClB,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCACzD,MAAM,WAAW,GAAG,WAAW;wCAC7B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;wCAC3B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCAC9B,IAAI,cAAc,IAAI,WAAW;wCAAE,IAAI,GAAG,UAAU,CAAC;iCACtD;gCACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gCACpB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gCACpB,MAAM,kBAAkB,GACtB,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gCACpD,IAAI,kBAAkB,KAAK,CAAC,IAAI,kBAAkB,KAAK,CAAC,EAAE;oCACxD,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;oCAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;oCAC3B,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC/C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC/C,MAAM,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;oCAC5B,MAAM,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;oCAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;wCAC/B,MAAM,GAAG,IAAI,CAAC;wCACd,MAAM,GAAG,IAAI,CAAC;qCACf;iCACF;6BACF;4BAED,0DAA0D;4BAC1D,IAAI,cAAc,IAAI,CAAC,EAAE;gCACvB,qEAAqE;gCACrE,MAAM,SAAS,GACb,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gCACpD,IAAI,SAAS,IAAI,CAAC,EAAE;oCAClB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iCACjD;qCAAM;oCACL,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCACzD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wCACzB,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACjC,UAAU,EACV,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;wCACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qCACvD;yCAAM;wCACL,uDAAuD;wCACvD,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CACjD,IAAI,EACJ,IAAI,CACL,CAAC;wCACF,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;4CAChC,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;4CACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;yCACjD;qCACF;iCACF;6BACF;iCAAM;gCACL,gFAAgF;gCAChF,MAAM,SAAS,GACb,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gCACpD,IAAI,SAAS,IAAI,CAAC,EAAE;oCAClB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iCACjD;qCAAM;oCACL,yEAAyE;oCACzE,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC5D,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACjC,WAAW,EACX,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;wCACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qCACvD;yCAAM;wCACL,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wCAC1D,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;4CAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACjC,WAAW,EACX,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;4CACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;yCACvD;6CAAM;4CACL,4DAA4D;4CAC5D,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CACjD,IAAI,EACJ,IAAI,CACL,CAAC;4CACF,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gDAChC,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;gDACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;6CACjD;yCACF;qCACF;iCACF;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB;;;;;;;;;;;gCAWI,CAAC;gCACH,IAAI,CAAC,eAAe,EAAE,CAAC;6BACxB;yBACF;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB;;;;;;;;;;4CAUI,CAAC;4CACH,IAAI,CAAC,eAAe,EAAE,CAAC;yCACxB;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC;YACxB,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE3C,MAAM,eAAe,GAAG,CACtB,YAAqB,EACrB,KAAa,EACD,EAAE;gBACd,MAAM,WAAW,GAAG,YAAY;oBAC9B,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;qBACP;oBACH,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACR,CAAC;gBACN,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CACtE,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC;YAEF,IAAI,OAAO,GAAe,EAAE,CAAC;YAC7B,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;oBACZ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;iBACb,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,UAAU;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;gBACnE,IAAI,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAClE;YAED,MAAM,kBAAkB,GAAG,OAAO;iBAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClB,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;aACvE,CAAC,CAAC;iBACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC1E,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAE9D,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBAClC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;oBAC7C,MAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,IAAI,CAAC,IAAI,EACT,OAAO,EACP,OAAO,EACP,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,EACJ,KAAK,EACL,IAAI,CACL,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACvC,oCAAoC;iBACrC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,QAAQ,IAAI,CAAC,SAAS,EAAE;oBACtB,KAAK,gBAAS,CAAC,EAAE;wBACf,kBAAkB;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,kBAAkB;wBAClB,iBAAiB;wBACjB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,iBAAiB;wBACjB,MAAM;iBACT;gBACD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACxD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CACnE,CAAC;gBACF,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,wBAAwB;gBACxB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EAAE,oBAAoB;gBAChC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,GAAG,EAClC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBAEF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC/D;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAxuBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,SAAS;QACX,OAAO;cACG,IAAI,CAAC,MAAM;;2BAEE,CAAC;IAC1B,CAAC;;AA5CH,kCAwvBC;AAjvBQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,CAAC,CAAC;AAClB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACpB3B,sEAA6C;AAE7C,wGAAiD;AACjD,0GAA4E;AAC5E,+FAAiD;AACjD,gFAAuC;AAGvC,kFAAgC;AAChC,yFAA4C;AAC5C,kGAAmD;AAEnD,2GAAyD;AAEzD,MAAa,YAAa,SAAQ,aAAK;IAmBrC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAkC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE;oCAChC,sEAAsE;oCACtE,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wCACtC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4CACtC,gBAAgB,CAAC,IAAI,CAAC;gDACpB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;gDACX,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;6CACM,CAAC,CAAC;yCACtB;qCACF;iCACF;6BACF;4BAED,0EAA0E;4BAC1E,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gCACrD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oCACrD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;wCACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;wCAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,cAAc,GAAG;gCACnB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gCACtB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;6BACvB,CAAC;4BAEF,4BAA4B;4BAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC/B,MAAM,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;4BACvD,MAAM,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;4BAEvD,MAAM,eAAe,GAAG,SAAS,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;4BACrE,MAAM,cAAc,GAAG,SAAS,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACtD,MAAM,eAAe,GAAG,SAAS,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;4BACrE,MAAM,eAAe,GAAG,SAAS,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BAEvD,kEAAkE;4BAClE,IAAI,iBAAiB,GAAG,KAAK,CAAC;4BAC9B,IAAI,aAAa,GAAG,KAAK,CAAC;4BAE1B,MAAM,WAAW,GAAG,CAClB,EAAU,EACV,EAAU,EACV,CAAS,EACT,CAAS,EACA,EAAE;gCACX,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;wCAC7B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;wCACnB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;wCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;4CAC1D,OAAO,KAAK,CAAC;wCACf,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;wCACzC,IACE,IAAI,CAAC,OAAO,EAAE;4CACd,IAAI,CAAC,MAAM;4CACX,IAAI,YAAY,uBAAU;4CAE1B,OAAO,KAAK,CAAC;wCACf,yBAAyB;wCACzB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4CAClC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE;gDAChC,IACE,CAAC,CACC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;oDACb,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;oDACtB,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;oDACb,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CACvB,EACD;oDACA,OAAO,KAAK,CAAC;iDACd;6CACF;yCACF;qCACF;iCACF;gCACD,OAAO,IAAI,CAAC;4BACd,CAAC,CAAC;4BAEF,IAAI,eAAe,EAAE;gCACnB,iBAAiB,GAAG,IAAI,CAAC;gCACzB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gCAClB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCAClB,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;oCACvC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oCACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;wCAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wCACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qCACzB;oCACD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;oCACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oCACtB,aAAa,GAAG,IAAI,CAAC;oCACrB,OAAO;iCACR;6BACF;iCAAM,IAAI,cAAc,EAAE;gCACzB,iBAAiB,GAAG,IAAI,CAAC;gCACzB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCACvB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCAClB,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;oCACvC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oCACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;wCAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wCACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qCACzB;oCACD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;oCACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oCACtB,aAAa,GAAG,IAAI,CAAC;oCACrB,OAAO;iCACR;6BACF;iCAAM,IAAI,eAAe,EAAE;gCAC1B,iBAAiB,GAAG,IAAI,CAAC;gCACzB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCAClB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gCAClB,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;oCACvC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oCACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;wCAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wCACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qCACzB;oCACD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;oCACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oCACtB,aAAa,GAAG,IAAI,CAAC;oCACrB,OAAO;iCACR;6BACF;iCAAM,IAAI,eAAe,EAAE;gCAC1B,iBAAiB,GAAG,IAAI,CAAC;gCACzB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCAClB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gCACvB,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;oCACvC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oCACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;wCAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wCACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qCACzB;oCACD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;oCACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oCACtB,aAAa,GAAG,IAAI,CAAC;oCACrB,OAAO;iCACR;6BACF;4BACD,sFAAsF;4BACtF,IAAI,iBAAiB,IAAI,CAAC,aAAa,EAAE;gCACvC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gCACtB,OAAO;6BACR;4BACD,qDAAqD;4BACrD,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,KAAK,EACL,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,mBAAmB;4BAEvC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gCACZ,MAAM,QAAQ,GAAG,CACf,MAAc,EACd,KAAa,EACb,KAAa,EACb,EAAE;oCACF,OAAO,CACL,MAAM,CAAC,CAAC,IAAI,KAAK;wCACjB,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;wCACzB,MAAM,CAAC,CAAC,IAAI,KAAK;wCACjB,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAC1B,CAAC;gCACJ,CAAC,CAAC;gCAEF,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC7D,SAAS;oCACX,IACE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAC9D;wCACA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC7D,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC7D,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCACxD,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wCACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wCAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wCAE3B,IAAI,IAAI,CAAC,OAAO,EAAE;4CAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4CACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;yCACzB;wCACD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;6CAChD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6CACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6CACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;qCACxD;iCACF;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;4BAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4BACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;yBAC3B;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;qCAC3B;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,sEAAsE;YACtE,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,EAAE;oBACV,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,KAAK;oBACR,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;gBACtE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;oBAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;iBACvB;gBACD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;aAChE;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBAC5B,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC;YACxB,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE3C,MAAM,eAAe,GAAG,CACtB,YAAqB,EACrB,KAAa,EACD,EAAE;gBACd,MAAM,WAAW,GAAG,YAAY;oBAC9B,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;qBACP;oBACH,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACR,CAAC;gBACN,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CACtE,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC;YAEF,IAAI,OAAO,GAAe,EAAE,CAAC;YAC7B,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;oBACZ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;iBACb,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,UAAU;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;gBACnE,IAAI,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAClE;YAED,MAAM,kBAAkB,GAAG,OAAO;iBAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClB,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;aACvE,CAAC,CAAC;iBACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC1E,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAE9D,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBAClC,MAAM,SAAS,GAAG;oBAChB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;oBACxB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;oBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;oBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;iBACjC,CAAC;gBACF,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;oBAChC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC/B,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC/B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;wBAC7C,MAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,IAAI,CAAC,IAAI,EACT,OAAO,EACP,OAAO,EACP,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,EACV,IAAI,EACJ,KAAK,EACL,IAAI,CACL,CAAC;wBAEF,MAAM,GAAG,GAAG,UAAU,CAAC,aAAa,EAAE,CAAC;wBACvC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;wBACzC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;wBAEzC,IAAI,OAAO,GAA0B,EAAE,CAAC;wBACxC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;4BACxB,qDAAqD;4BACrD,OAAO,GAAG;gCACR,gCAAmB,CAAC,KAAK;gCACzB,gCAAmB,CAAC,IAAI;gCACxB,gCAAmB,CAAC,SAAS;6BAC9B,CAAC;yBACH;6BAAM,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;4BAC/B,6CAA6C;4BAC7C,OAAO,GAAG;gCACR,gCAAmB,CAAC,KAAK;gCACzB,gCAAmB,CAAC,IAAI;gCACxB,gCAAmB,CAAC,SAAS;6BAC9B,CAAC;yBACH;6BAAM,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;4BAC/B,+CAA+C;4BAC/C,OAAO,GAAG;gCACR,gCAAmB,CAAC,KAAK;gCACzB,gCAAmB,CAAC,IAAI;gCACxB,gCAAmB,CAAC,SAAS;6BAC9B,CAAC;yBACH;6BAAM;4BACL,4CAA4C;4BAC5C,OAAO,GAAG;gCACR,gCAAmB,CAAC,KAAK;gCACzB,gCAAmB,CAAC,IAAI;gCACxB,gCAAmB,CAAC,SAAS;6BAC9B,CAAC;yBACH;wBAED,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;4BACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBACxC;wBAED,oCAAoC;qBACrC;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC1C,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;iBACrB;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;gBACD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACnC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;oBACtB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;iBAC3B;gBACD,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK;oBACR,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM;wBAClD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;wBACxB,CAAC,CAAC,CAAC,CAAC;wBACJ,CAAC,EACL,IAAI,CAAC,KAAK,CAAC,yBAAyB,EACpC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,EAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC1D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC3D;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA3jBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,6BAA6B;QAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;;AApDH,oCAilBC;AAlkBQ,uBAAU,GAAW,CAAC,CAAC;AACvB,kBAAK,GAAW,EAAE,CAAC;AACnB,kBAAK,GAAW,EAAE,CAAC;;;;;;;;;;;;;;;AC/B5B,sEAA6C;AAK7C,gFAAuC;AACvC,wGAAoD;AAEpD,iGAAgD;AAChD,2GAAyD;AAEzD,kFAAgC;AAChC,4FAA8C;AAC9C,wGAAiD;AACjD,+FAAiD;AAEjD,MAAa,cAAe,SAAQ,aAAK;IAcvC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAPjB,gBAAW,GAAG,CAAC,CAAC;QA0CzB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACjB,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,EAAE;wBAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;qBAC7B;iBACF;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;wBACpB,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IAAI,QAAQ,IAAI,CAAC,EAAE;gCACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gCACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gCACvB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gCACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;6BAC3B;yBACF;qBACF;yBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;wBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;4BAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;4BACnD,IAAI,CAAC,KAAK,EAAE,CAAC;4BAEb,wDAAwD;4BACxD,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;gCACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gCACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAC1B,OAAO;6BACR;4BAED,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAEpB,6DAA6D;4BAC7D,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wCAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4CAC/B,gBAAgB,CAAC,IAAI,CAAC;gDACpB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;gDACX,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;6CACM,CAAC,CAAC;yCACtB;qCACF;iCACF;6BACF;4BACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gCACrD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oCACrD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;wCACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;wCAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,aAAa;4BACb,IAAI,IAAI,GAAG,EAAW,CAAC;4BACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BAED,qCAAqC;4BACrC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;4BAEF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC7B,IAAI,KAAK,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;qCAC9C,IAAI,KAAK,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qCAClD,IAAI,KAAK,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qCAClD,IAAI,KAAK,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;gCACrD,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oCACpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;wCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,EAC3D;4CACA,IAAI,SAAS,GAAG,KAAK,CAAC;4CACtB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gDAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oDAClC,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,EAAE;wDACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,EAAE,EACrC;wDACA,SAAS,GAAG,IAAI,CAAC;wDACjB,MAAM;qDACP;iDACF;gDACD,IAAI,SAAS;oDAAE,MAAM;6CACtB;4CACD,IAAI,SAAS,EAAE;gDACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gDACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oDACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oDAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gDAC1D,SAAS,GAAG,IAAI,CAAC;6CAClB;yCACF;qCACF;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;iCAAM;gCACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;6BACpC;4BAED,oCAAoC;4BACpC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;gCAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAC1B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,EAAE;oCAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;oCACd,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;iCAC7B;6BACF;yBACF;wBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAC7C,IAAI,CAAC,YAAY,CAClB,KAAK,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;4BACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;4BAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;gCACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gCAC3B,IACE,QAAQ,IAAI,CAAC;oCACb,CAAC,mBAAmB;wCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;oCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;wCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;wCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;wCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;wCACtB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC;4CAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wCACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;qCAC3B;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,MAAM,KAAK,GACT,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC;oBAClB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;oBACnD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACjE,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,KAAK,EACL,KAAK,EACL,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,EAC7B,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EACzB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;wBACpB,IAAI,CAAC,cAAc,CACjB,KAAK,EACL,6BAAa,CAAC,QAAQ,GAAG,GAAG,EAC5B,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAC5B,CAAC;qBACH;oBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;wBACvB,IAAI,CAAC,eAAe,CAClB,KAAK,EACL,6BAAa,CAAC,QAAQ,GAAG,GAAG,EAC5B,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAC5B,CAAC;qBACH;iBACF;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QA5RA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;YAC7B,IAAI,QAAQ,GAAG,KAAK;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnD,IAAI,QAAQ,GAAG,IAAI;gBACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD,IAAI,QAAQ,GAAG,KAAK;gBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD,IAAI,QAAQ,GAAG,GAAG;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;gBACpD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;IACH,CAAC;;AAhDH,wCA6SC;AAnSQ,yBAAU,GAAW,CAAC,CAAC;AACvB,oBAAK,GAAW,EAAE,CAAC;AACnB,oBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AC5B3B,sEAA6C;AAS7C,2GAAyD;AAEzD,kFAAgC;AAChC,4FAA8C;AAC9C,wGAAiD;AACjD,+FAAiD;AACjD,mHAA6D;AAK7D,MAAa,aAAc,SAAQ,aAAK;IAetC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAPjB,gBAAW,GAAG,CAAC,CAAC;QAuCzB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,CACL,WAAmB,EACnB,MAAc,EACd,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAElC,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,YAAY,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,IAAI,YAAY,CAAC;YAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACrE,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;;gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACjB,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,EAAE;wBAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;wBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;qBAC1B;oBACD,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,iGAAiG;wBACjG,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;wBAC5B,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBACzD,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC5D,IAAI,SAAS,KAAK,YAAY,EAAE;4BAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;4BAChC,IAAI,SAAS,EAAE;gCACb,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAS,CAAC,KAAK,CAAC;6BAC9D;iCAAM,IAAI,YAAY,EAAE;gCACvB,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAS,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC;6BAC3D;4BACD,IAAI,UAAU,KAAK,IAAI,CAAC,SAAS,EAAE;gCACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;gCAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;gCACb,OAAO;6BACR;yBACF;wBAED,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,qDAAqD;gCACrD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oCACtC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wCACtC,gBAAgB,CAAC,IAAI,CAAC;4CACpB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;4CACX,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;yCACM,CAAC,CAAC;qCACtB;iCACF;6BACF;yBACF;wBAED,4CAA4C;wBAC5C,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4BACrD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gCACrD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;oCACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;oCAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBAED,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,EACd,SAAS,EACT,SAAS,CACV,CAAC;wBAEF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,0BAA0B;4BAE1B,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,IAAI,MAAM,KAAK,IAAI,CAAC,SAAS,EAAE;gCAC7B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,IAAI,QAAQ,GAAG,CAAC,MAAc,EAAE,KAAa,EAAE,KAAa,EAAE,EAAE;oCAC9D,OAAO,CACL,MAAM,CAAC,CAAC,IAAI,KAAK;wCACjB,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;wCACzB,MAAM,CAAC,CAAC,IAAI,KAAK;wCACjB,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAC1B,CAAC;gCACJ,CAAC,CAAC;gCAEF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC3D,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAC5C;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC5D,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC5D,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCAC1D,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCAED,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;6BAAM;4BACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBACpC;wBAED,4DAA4D;wBAC5D,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC/B,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;oCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iCACA,CAAC,CAAC;gCACrB,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;oCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iCACA,CAAC,CAAC;6BACtB;yBACF;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC/B,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;oCACtB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iCACA,CAAC,CAAC;gCACrB,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;oCACtB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iCACA,CAAC,CAAC;6BACtB;yBACF;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC/B,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;oCACjB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;iCACL,CAAC,CAAC;gCACrB,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;oCACjB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;iCACL,CAAC,CAAC;6BACtB;yBACF;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC/B,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;oCACjB,CAAC,EAAE,IAAI,CAAC,CAAC;iCACQ,CAAC,CAAC;gCACrB,gBAAgB,CAAC,IAAI,CAAC;oCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;oCACjB,CAAC,EAAE,IAAI,CAAC,CAAC;iCACQ,CAAC,CAAC;6BACtB;yBACF;wBACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;iCAC3B;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAEhB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;oBACnC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;wBAChC,IAAI,CAAC,aAAa,IAAI,GAAG,GAAG,KAAK,CAAC;wBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;4BAC5C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;yBACjB;qBACF;iBACF;gBAED,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;wBACpB,IAAI,CAAC,cAAc,CACjB,KAAK,EACL,6BAAa,CAAC,QAAQ,GAAG,GAAG,EAC5B,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAC5B,CAAC;qBACH;oBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;wBACvB,IAAI,CAAC,eAAe,CAClB,KAAK,EACL,6BAAa,CAAC,QAAQ,GAAG,GAAG,EAC5B,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAC5B,CAAC;qBACH;iBACF;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QA5XA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,IAAI;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;;AA9CH,sCA8YC;AAnYQ,wBAAU,GAAW,CAAC,CAAC;AACvB,mBAAK,GAAW,EAAE,CAAC;AACnB,mBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AChC3B,sEAA6C;AAW7C,4FAA8C;AAC9C,wGAAiD;AACjD,+FAAiD;AAGjD,kFAAgC;AAEhC,MAAa,cAAe,SAAQ,aAAK;IAYvC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA8B1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACjB,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,aAAQ,GAAG,GAAG,EAAE;YACd,6BAA6B;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,6BAA6B;gBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,2CAA2C;gBAC3C,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,4CAA4C;oBAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,wBAAwB;wBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBAEnD,yBAAyB;wBACzB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;wBAC5B,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBACzD,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC5D,IAAI,SAAS,KAAK,YAAY,EAAE;4BAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;4BAChC,IAAI,SAAS,EAAE;gCACb,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAS,CAAC,KAAK,CAAC;6BAC9D;iCAAM,IAAI,YAAY,EAAE;gCACvB,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAS,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC;6BAC3D;4BACD,IAAI,UAAU,KAAK,IAAI,CAAC,SAAS,EAAE;gCACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;gCAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;gCACb,OAAO;6BACR;yBACF;wBAED,sCAAsC;wBACtC,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,0DAA0D;gCAC1D,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wCAC/B,gBAAgB,CAAC,IAAI,CAAC;4CACpB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;4CACX,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;yCACM,CAAC,CAAC;qCACtB;iCACF;6BACF;yBACF;wBAED,oDAAoD;wBACpD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4BACrD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gCACrD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;oCACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;oCAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBAED,4BAA4B;wBAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,mCAAmC;wBACnC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;wBAEF,+BAA+B;wBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,yBAAyB;4BACzB,0BAA0B;4BAE1B,gDAAgD;4BAChD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,6DAA6D;4BAC7D,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,EAC3D;wCACA,qEAAqE;wCACrE,IAAI,SAAS,GAAG,KAAK,CAAC;wCACtB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4CAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gDAClC,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,EAAE;oDACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,EAAE,EACrC;oDACA,SAAS,GAAG,IAAI,CAAC;oDACjB,MAAM;iDACP;6CACF;4CACD,IAAI,SAAS;gDAAE,MAAM;yCACtB;wCAED,IAAI,SAAS,EAAE;4CACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4CACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gDACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gDAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;4CAC1D,SAAS,GAAG,IAAI,CAAC;yCAClB;qCACF;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,2BAA2B;oCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;6BAAM;4BACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBACpC;wBAED,wDAAwD;wBACxD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,oBAAoB;wBACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;oBAED,wCAAwC;oBACxC,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,sFAAsF;oBACtF,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;iCAC3B;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,+BAA+B;YAC/B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EAAE,4BAA4B;YACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QA7TA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,gBAAS,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;;AAzCH,wCA4UC;AApUQ,yBAAU,GAAW,CAAC,CAAC;AACvB,oBAAK,GAAW,EAAE,CAAC;AACnB,oBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AC5B3B,sEAAkC;AAIlC,wGAAiD;AACjD,+FAAiD;AACjD,gFAAuC;AACvC,kFAAgC;AAEhC,MAAa,WAAY,SAAQ,aAAK;IAUpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAsB1B,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACjC,IAAI,cAAc,GAAG,CAAC,KAAa,EAAE,KAAa,EAAW,EAAE;gBAC7D,OAAO,CACL,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CACrE,CAAC;YACJ,CAAC,CAAC;YACF,IAAI,YAAY,GAAG,CAAC,KAAa,EAAW,EAAE;gBAC5C,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;gBAClE,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;gBAClE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;oBACjC,OAAO;iBACR;aACF;YACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAClE,OAAO;iBACR;aACF;YACD,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gBAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;wBAClD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACjD;yBAAM;wBACL,OAAO;qBACR;iBACF;aACF;YACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;QAEF,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAE7D,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC9D,IAAI,KAAK,GAAG,IAAI;gBAAE,KAAK,GAAG,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,kCAAkC;oCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;gCACD,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI,EAAE;oCAC/C,6EAA6E;oCAC7E,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBACD,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAoB,CAAC,CAAC;wBACtE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAoB,CAAC,CAAC;wBACtE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAoB,CAAC,CAAC;wBACtE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAoB,CAAC,CAAC;wBACtE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAoB,CAAC,CAAC;wBAClE,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,IAAI,CACL,CAAC;wBACF,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;4BAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BACzC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BACzC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBACH,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;yBAC1B;6BAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,SAAS,GAAG,KAAK,CAAC;4BACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;oCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;oCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,SAAS,GAAG,IAAI,CAAC;oCACjB,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wCACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;iCAC3D;6BACF;4BACD,IAAI,CAAC,SAAS,EAAE;gCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;6BAC5B;yBACF;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,WAAW,EACxB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAC1C,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAhOA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA/BH,kCA6OC;AAtOQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,EAAE,CAAC;AACnB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACnB3B,sEAA6C;AAE7C,0GAAuD;AACvD,gFAAuC;AACvC,yHAAiE;AACjE,2GAAyD;AAEzD,kFAAgC;AAEhC,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,uDAAI;IACJ,6DAAO;IACP,+DAAQ;AACV,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AAED,MAAa,WAAY,SAAQ,aAAK;IAkBpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAP1B,sBAAiB,GAAW,CAAC,CAAC;QAI9B,eAAU,GAAW,CAAC,CAAC;QAuBvB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC9C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBAAE,OAAO,KAAK,CAAC;aACxD;YACD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,WAAI,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,IAAI,EAAE;oBACxC,IAAI,OAAO,GAAG,KAAK,CAAC;oBACpB,IAAI,EAAE,GAAG,CAAC,CAAC;oBACX,IAAI,EAAE,GAAG,CAAC,CAAC;oBACX,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;wBACjC,gEAAgE;wBAChE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;wBAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;wBAE7C,qEAAqE;wBACrE,IACE,CAAC,IAAI,CAAC,CAAC,KAAK,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,CAAC;4BAC3D,CAAC,IAAI,CAAC,CAAC,KAAK,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAC3D;4BACA,IAAI,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE;gCACtB,IAAI,IAAI,CAAC,CAAC,GAAG,OAAO;oCAAE,EAAE,GAAG,CAAC,CAAC;;oCACxB,EAAE,GAAG,CAAC,CAAC,CAAC;gCACb,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE;oCAC9C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;wCAAE,OAAO,GAAG,IAAI,CAAC;iCACnD;6BACF;iCAAM,IAAI,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE;gCAC7B,IAAI,IAAI,CAAC,CAAC,GAAG,OAAO;oCAAE,EAAE,GAAG,CAAC,CAAC;;oCACxB,EAAE,GAAG,CAAC,CAAC,CAAC;gCACb,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE;oCAC9C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;wCAAE,OAAO,GAAG,IAAI,CAAC;iCACnD;6BACF;4BAED,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;gCACtC,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,OAAO,CAAC;gCACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;gCACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;gCACtB,IAAI,aAAa,GAAG,CAAC,CAAC;gCACtB,OACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oCACtD,aAAa,GAAG,IAAI,CAAC,iBAAiB,EACtC;oCACA,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;oCACnB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;oCACnB,aAAa,EAAE,CAAC;oCAChB,IACE,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC;wCACtD,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC;wCAC1D,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC;wCAC1D,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,GAAG,CAAC,CAAC;wCAC1D,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,GAAG,CAAC,CAAC;wCAE1D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,uBAAU,CACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CACF,CAAC;iCACL;gCACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;gCAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;gCAC7C,IAAI,EAAE,KAAK,CAAC;oCAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;gCACzC,IAAI,EAAE,GAAG,CAAC;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;qCACxC,IAAI,EAAE,GAAG,CAAC;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qCAC5C,IAAI,EAAE,GAAG,CAAC;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;qCAC1C,IAAI,EAAE,GAAG,CAAC;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;gCACjD,MAAM;6BACP;yBACF;qBACF;iBACF;qBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,OAAO,EAAE;oBAClD,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC;oBACvC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBAEpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;wBACjC,IACE,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;gCACvC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxC,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gCAChC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;oCACvC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACxC;4BACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;yBAClD;qBACF;oBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;oBACtB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;iBACvB;qBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,QAAQ,EAAE;oBACnD,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC;iBACpC;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IACE,CAAC,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,QAAQ;oBACvC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;oBAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAC1B;oBACA,iCAAe,CAAC,YAAY,CAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,OAAO,CACR,CAAC;oBACF,iCAAe,CAAC,YAAY,CAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,OAAO,CACR,CAAC;iBACH;gBAED,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACnE,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;oBAExB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;wBACpB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;wBAC/B,IAAI,6BAAa,CAAC,aAAa,EAAE;4BAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;4BACxB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;yBACxC;wBAED,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,6BAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACnD,WAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;wBACrB,WAAI,CAAC,GAAG,CAAC,MAAM,CACb,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC5C,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAC7C,CAAC;wBACF,WAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC3B,WAAI,CAAC,GAAG,CAAC,MAAM,CACb,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACpD,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CACrD,CAAC;wBACF,WAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;wBAClB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;qBAC1B;oBACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;wBAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;iBAC/C;gBAED,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,IAAI,EAAE;wBACxC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBAC5B;yBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,OAAO,EAAE;wBAClD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACF;aACF;YACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3B,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,KAAK;gBAAE,OAAO;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;YACF,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAEhC,IAAI,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,OAAO,EAAE;gBAC3C,IAAI,CAAC,UAAU,IAAI,GAAG,GAAG,KAAK,CAAC;gBAE/B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACzC,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACrD,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACtD,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;wBAAE,MAAM,IAAI,CAAC,CAAC;yBAC9C,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,KAAK;wBAAE,MAAM,IAAI,CAAC,CAAC;yBACpD,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;wBAAE,MAAM,IAAI,CAAC,CAAC;yBACnD,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,EAAE;wBAAE,MAAM,IAAI,CAAC,CAAC;oBAEtD,gEAAgE;oBAChE,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;oBAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;oBAE9B,2CAA2C;oBAC3C,MAAM,EAAE,GACN,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;wBAC/B,CAAC,CAAC,CAAC,CAAC;wBACJ,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,KAAK;4BAClC,CAAC,CAAC,CAAC;4BACH,CAAC,CAAC,CAAC,CAAC;oBACV,MAAM,EAAE,GACN,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,EAAE;wBAC7B,CAAC,CAAC,CAAC,CAAC;wBACJ,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;4BACjC,CAAC,CAAC,CAAC;4BACH,CAAC,CAAC,CAAC,CAAC;oBAEV,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,EACrC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,CACtC,CAAC;oBAEF,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE;wBACrC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;wBAC5C,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;wBAC5C,IAAI,EAAE,KAAK,CAAC;4BAAE,IAAI,IAAI,IAAI,CAAC;wBAC3B,IAAI,EAAE,GAAG,CAAC;4BAAE,IAAI,IAAI,GAAG,CAAC;6BACnB,IAAI,EAAE,GAAG,CAAC;4BAAE,IAAI,IAAI,GAAG,CAAC;qBAC9B;oBAED,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;oBAC/B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,CAAC;oBAClD,WAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;oBACrB,WAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBACxD,WAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBAC3B,WAAI,CAAC,GAAG,CAAC,MAAM,CACb,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACjD,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC,CACnD,CAAC;oBACF,WAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;oBAClB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;iBAC1B;aACF;QACH,CAAC,CAAC;QAvSA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACnC,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AArCH,kCA4TC;AA/SQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,EAAE,CAAC;AACnB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AC9B3B,sEAA6C;AAE7C,wGAAiD;AACjD,+FAAiD;AAGjD,2GAAyD;AACzD,kFAAgC;AAGhC,MAAa,SAAU,SAAQ,aAAK;IAWlC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA2B1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,CAAC,MAAM;gCACT,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,MAAM;oCACnC,CAAC,CAAC,IAAI,CAAC,YAAY;oCACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;yCACnD,OAAO,CAAC;4BACjB,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,MAAM,EACX,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wCACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACzC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCAC1D,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCAED,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oCAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB;;;;;;;;;;;gCAWI,CAAC;gCACH,IAAI,CAAC,eAAe,EAAE,CAAC;6BACxB;yBACF;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB;;;;;;;;;;4CAUI,CAAC;4CACH,IAAI,CAAC,eAAe,EAAE,CAAC;yCACxB;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAC3B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,EAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,EAChD,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC/D;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QApOA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,SAAS;QACX,OAAO;cACG,IAAI,CAAC,MAAM;;2BAEE,CAAC;IAC1B,CAAC;;AArCH,8BAkPC;AA3OQ,oBAAU,GAAW,CAAC,CAAC;AACvB,eAAK,GAAW,CAAC,CAAC;AAClB,eAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACnB3B,sEAA6C;AAE7C,wGAAiD;AACjD,+FAAiD;AAIjD,kFAAgC;AAGhC,gFAAuC;AACvC,kGAAmD;AACnD,qFAA0C;AAC1C,0GAAuD;AAEvD,MAAa,YAAa,SAAQ,aAAK;IAarC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAJ1B,aAAQ,GAAW,CAAC,CAAC;QACrB,iBAAY,GAAW,CAAC,CAAC;QAiCzB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACvB,cAAS,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAErB,8CAA8C;QACrC,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,UAAmB,IAAI,EAAE,EAAE;YACnE,MAAM,aAAa,GAAG,CAAC,MAAc,EAAW,EAAE;gBAChD,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;gBACrE,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;gBACrE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEF,sDAAsD;YACtD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE;oBAC7C,OAAO;iBACR;aACF;YAED,yDAAyD;YACzD,+CAA+C;YAE/C,MAAM,KAAK,GAAG,EAAW,CAAC;YAC1B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gBAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oBAClC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;oBACvD,IACE,UAAU;wBACV,CAAC,UAAU,CAAC,OAAO,EAAE;wBACrB,CAAC,CAAC,UAAU,YAAY,WAAI,CAAC;wBAC7B,CAAC,CAAC,UAAU,YAAY,uBAAU,CAAC,EACnC;wBACA,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACxB;yBAAM;wBACL,OAAO;qBACR;iBACF;aACF;YACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC/B,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oBACxC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACd,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EACd;oBACA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBACnC,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;wBACpD,0DAA0D;wBAC1D,sBAAsB;qBACvB;oBACD,IAAI,GAAG,IAAI,CAAC;iBACb;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,CAAC,MAAM;gCACT,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,MAAM;oCACnC,CAAC,CAAC,IAAI,CAAC,YAAY;oCACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;yCACnD,OAAO,CAAC;4BACjB,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,MAAM,EACX,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;qCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;gCAEtD,sEAAsE;gCACtE,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gCAChC,IAAI,CAAC,YAAY,EAAE,CAAC;gCACpB,4BAA4B;gCAE5B,IAAI,CAAC,YAAY,EAAE,CAAC;6BACrB;iCAAM;gCACL,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gCAChC,mCAAmC;gCACnC,4BAA4B;gCAE5B,IAAI,CAAC,YAAY,EAAE,CAAC;gCACpB,sCAAsC;6BACvC;4BAED,IAAI,CAAC,cAAc,EAAE,CAAC;4BAEtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB;;;;;;;;;;;gCAWI,CAAC;gCACH,yEAAyE;gCAEzE,IAAI,CAAC,eAAe,EAAE,CAAC;gCACvB,IAAI,CAAC,cAAc,EAAE,CAAC;6BACvB;yBACF;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB;;;;;;;;;;4CAUI,CAAC;4CACH,yBAAyB;yCAC1B;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,uBAAU,CACZ,IAAI,CAAC,IAAI,CAAC,IAAI,EACd,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,KAAK,EACL,KAAK,CACN,CACF,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YACnB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtD,CAAC,EAAE,GAAG,CAAC,CAAC;gBACR,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACpB,CAAC,EAAE,GAAG,CAAC,CAAC;YACV,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE;YACjC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/C,IAAI,IAAI,GAAG,KAAK,EAAE;gBAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;aAC5D;iBAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;gBACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;aAC5D;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;aACnC;YACD,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE;gBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;YAC9B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAE3B,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,GAAG,EACnC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,YAAY,EACpE,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAxUA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,SAAS;QACX,OAAO;cACG,IAAI,CAAC,MAAM;;2BAEE,CAAC;IAC1B,CAAC;;AA1CH,oCAwVC;AAjVQ,uBAAU,GAAW,CAAC,CAAC;AACvB,kBAAK,GAAW,CAAC,CAAC;AAClB,kBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACxB3B,gFAAoD;AACpD,sEAA6C;AAI7C,wGAAiD;AACjD,+FAAiD;AACjD,gFAAuC;AAEvC,8FAAsD;AAEtD,yFAA4C;AAE5C,uHAA+D;AAE/D,4FAA8C;AAC9C,oHAA+D;AAE/D,IAAK,UAMJ;AAND,WAAK,UAAU;IACb,6CAAK;IACL,6CAAK;IACL,+CAAM;IACN,2CAAI;IACJ,2CAAI;AACN,CAAC,EANI,UAAU,KAAV,UAAU,QAMd;AAiBD,MAAsB,KAAM,SAAQ,eAAM;IAwBxC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAR1B,aAAQ,GAAY,KAAK,CAAC;QA2C1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU;gBAAE,OAAO;YAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAK,KAAK;gBAAE,OAAO;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC;YACrE,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;gBACvB,IAAI,CAAC,KAAK,IAAI;oBAAE,SAAS;gBACzB,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1D,IACE,QAAQ,IAAI,mCAAgB,CAAC,6BAA6B;oBAC1D,CAAC,YAAY,KAAK;oBAClB,CAAC,CAAC,CAAC,UAAU,EACb;oBACA,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBAChC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;iBAClB;aACF;QACH,CAAC,CAAC;QAMF,oBAAe,GAAG,CAAC,WAAoB,EAAE,EAAE;YACzC,IAAI,CAAC,WAAW;gBAAE,OAAO;YACzB,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;gBAChC,+BAA+B;gBAC/B,IAAI,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC5D,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,sEAAsE;aAC9F;QACH,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG;oBACnB,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,IAAI,CAAC,KAAK;oBACrB,UAAU,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC;iBAC3B,CAAC;gBACF,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG;oBAClB,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,IAAI,CAAC,KAAK;oBACrB,UAAU,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC;iBAC3B,CAAC;aACH;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;gBAClD,IACE,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU;oBAChD,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS;oBAC3C,IAAI,CAAC,MAAM,IAAI,CAAC,EAChB;oBACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAC5B,gCAAgC;oBAEhC;;;;;;;;;sBASE;iBACH;aACF;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;gBACjD,IACE,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU;oBAC/C,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAC1C;oBACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;oBAC3C,8BAA8B;oBAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAE7B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE;wBACnC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG;4BAClB,MAAM,EAAE,KAAK;4BACb,QAAQ,EAAE,CAAC;4BACX,SAAS,EAAE,CAAC;4BACZ,UAAU,EAAE,CAAC;yBACd,CAAC;qBACH;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;gBAClD,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;YACtD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,OAAgB,IAAI,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,UAAU;gBAAE,OAAO;YAE5B,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAK,KAAK;gBAAE,OAAO;YAExB,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU;gBAAE,OAAO;YAEvC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAEpC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,MAAc,EAAE,OAAgB,IAAI,EAAE,EAAE;YAC1D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,IAAI;gBAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,yBAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBACrC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;gBAChC,SAAS,EAAE,IAAI,CAAC,IAAI;aACrB,CAAC,CAAC;YAEH,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBACzD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAA0B,EAAE;YAChD,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;YAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iBAC7D;aACF;YACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oBAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wBAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wBACA,mCAAmC;wBACnC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qBAC3D;iBACF;aACF;YACD,OAAO,gBAAgB,CAAC;QAC1B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;YAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iBAC7D;aACF;YACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oBAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wBAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wBACA,mCAAmC;wBACnC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qBAC3D;iBACF;aACF;YACD,4BAA4B;YAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wBACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iBACzB;aACF;YAED,mCAAmC;YACnC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;QACJ,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,6BAA6B;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,6BAA6B;gBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,2CAA2C;gBAC3C,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,4CAA4C;oBAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,wBAAwB;wBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBAEnD,yBAAyB;wBACzB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,sCAAsC;wBACtC,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,mCAAmC;oCACnC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,4BAA4B;wBAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,mCAAmC;wBACnC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;wBAEF,+BAA+B;wBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,yBAAyB;4BACzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAExB,gDAAgD;4BAChD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,6DAA6D;4BAC7D,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;wCACA,2CAA2C;wCAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,2BAA2B;oCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC7B,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAChD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACxD;6BACF;yBACF;wBAED,wDAAwD;wBACxD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,oBAAoB;wBACpB,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,wCAAwC;oBACxC,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,sFAAsF;oBACtF,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,WAAM,GAAG,CACP,SAAiB,CAAC,EAClB,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,IAAI,KAAK,MAAM,EAAE;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,OAAO;gBAAE,OAAO;YACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,6BAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,EAAE;YACvC,kDAAkD;YAClD,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAEtC,iCAAiC;YACjC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAC1C,IAAI,MAAM,GAAG,CAAC,EAAE;gBACd,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;gBAC7B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;aAC9B;YAED,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,iBAAiB,GAAG,KAAK,CAAC;YAE9B,wDAAwD;YACxD,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;gBAChD,2EAA2E;gBAC3E,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBACvB,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAEvB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;oBAC7C,iBAAiB,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACL,yBAAyB;oBACzB,IAAI,EAAE,KAAK,CAAC;wBAAE,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAI,EAAE,KAAK,CAAC;wBAAE,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;oBAE7B,gDAAgD;oBAChD,IAAI,UAAU,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;oBACrC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;oBAClD,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;oBAClD,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;oBACnD,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;oBAEnD,uBAAuB;oBACvB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;wBACzC,QAAQ,GAAG,MAAM,CAAC;wBAClB,QAAQ,GAAG,MAAM,CAAC;wBAClB,iBAAiB,GAAG,IAAI,CAAC;qBAC1B;oBACD,4CAA4C;yBACvC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;wBAChD,QAAQ,GAAG,OAAO,CAAC;wBACnB,QAAQ,GAAG,OAAO,CAAC;wBACnB,iBAAiB,GAAG,IAAI,CAAC;qBAC1B;iBACF;aACF;iBAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAChC,kCAAkC;gBAClC,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBACvB,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAEvB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;oBAC7C,iBAAiB,GAAG,IAAI,CAAC;iBAC1B;aACF;iBAAM,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC9B,IAAI,EAAE,KAAK,CAAC;oBAAE,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAI,EAAE,KAAK,CAAC;oBAAE,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChD,gCAAgC;gBAChC,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;gBAE7B,gDAAgD;gBAChD,IAAI,UAAU,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;gBACrC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;gBAClD,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;gBAClD,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;gBACnD,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;gBAEnD,uBAAuB;gBACvB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;oBACzC,QAAQ,GAAG,MAAM,CAAC;oBAClB,QAAQ,GAAG,MAAM,CAAC;oBAClB,iBAAiB,GAAG,IAAI,CAAC;iBAC1B;gBACD,4CAA4C;qBACvC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;oBAChD,QAAQ,GAAG,OAAO,CAAC;oBACnB,QAAQ,GAAG,OAAO,CAAC;oBACnB,iBAAiB,GAAG,IAAI,CAAC;iBAC1B;aACF;YACD,wEAAwE;YAExE,iDAAiD;YACjD,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC5B;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/D,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACtC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACjE,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,+BAA+B;YAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEzB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;gBAC1C,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;gBAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAClB;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACnC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QASF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACjC,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBAEhC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,sBAAsB;YACtB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,8CAA8C;YAC9C,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtC,OAAO,IAAI,CAAC;aACb;YAED,kCAAkC;YAClC,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjD,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,oCAAoC;YACpC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3D,mCAAmC;YACnC,MAAM,QAAQ,GAAG,kBAAkB,CAAC,KAAK,CACvC,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAC1C,CAAC;YAEF,yCAAyC;YACzC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC;aACb;YAED,0CAA0C;YAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChE,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;QACpC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;QACH,CAAC,CAAC;QAzpBA,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,6BAA6B;QAC7B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG;YACZ,MAAM,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;YACnE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;SACnE,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,mCAAgB,CAAC,sBAAsB,CAAC;QAC1D,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,iBAAiB;QAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,6EAA6E;IAC/E,CAAC;IAyBD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;IAC7D,CAAC;IA6gBD,IAAI,aAAa;QACf,OAAO;YACL,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC1B,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;SAC3B,CAAC;IACJ,CAAC;IA8ED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,KAAK,CAAC;IAC1B,CAAC;;AAvrBH,sBAwrBC;AA7qBQ,gBAAU,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACpDhC,sEAAkC;AAMlC,oGAA4C;AAE5C,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,6CAAI;IACJ,iDAAM;IACN,6DAAY;IACZ,qDAAQ;AACV,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAED,MAAa,iBAAkB,SAAQ,yBAAW;IAIhD,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAkB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;oBACjD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,QAAQ;oBACvD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;oBACnB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAC1B,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;oBACF,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;oBAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EACzB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;wBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBAC5B;oBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;wBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACF;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAnEA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAEpC,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AArBH,8CA0EC;AAzEQ,4BAAU,GAAW,CAAC,CAAC;AACvB,uBAAK,GAAW,CAAC,CAAC;AAClB,uBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AClB3B,sEAAkC;AAClC,sEAAuC;AAGvC,kFAAgC;AAEhC,yFAA4C;AAC5C,8GAAyD;AAGzD,oGAAmD;AAEnD,4FAA8C;AAC9C,oHAA+D;AAC/D,wGAAiD;AACjD,+FAAiD;AAEjD,MAAa,YAAa,SAAQ,aAAK;IAUrC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAmC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QACF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAEjB,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE/C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,6BAA6B;gBAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjC,mCAAmC;oBACnC,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;wBAChE,MAAM,EAAE,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClE,MAAM,EAAE,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;wBAChE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACtC,CAAC,CAAC,CAAC;oBAEH,yEAAyE;oBACzE,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;oBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAClC,IAAI,CAAC,KAAK,IAAI,EAAE;4BACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;yBAC7D;qBACF;oBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;wBAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;gCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;gCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;6BAC3D;yBACF;qBACF;oBAED,aAAa;oBACb,IAAI,IAAI,GAAG,EAAW,CAAC;oBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;wBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;yBACzB;qBACF;oBAED,6BAA6B;oBAC7B,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,IAAI,EACJ,WAAW,EACX,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;oBAEF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAE7B,oCAAoC;wBACpC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;6BAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6BACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6BACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;qBACvD;iBACF;qBAAM;oBACL,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;gBACD,GAAG;aACJ;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;YACD,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,SAAiB,CAAC,EAAE,EAAE;YAC9B,IACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;gBAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,CAAC,EACf;gBACA,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACnC,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;iBACpE;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,aAAuB,EAAE,EAAE;YACxC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC9B,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClE,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,QAAQ,EAAE;wBACjC,IAAI,CAAC,WAAW,CAAC,KAAc,CAAC,CAAC;qBAClC;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClD,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,YAAY,aAAK;gBACvB,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK;gBAChE,CAAC,MAAM,CAAC,MAAM;gBACd,CAAC,MAAM,CAAC,IAAI;gBACZ,MAAM,KAAK,IAAI;gBACf,CAAC,MAAM,CAAC,YAAY,CACvB,CAAC;YACF,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,mCAAgB,CAAC,iBAAiB,CAAC,CAAC;QACzE,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACjB,KAAK,CAAC,UAAU,EAAE,CAAC;qBACpB;iBACF;gBACD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aACzB;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAY,EAAE,EAAE;YAC7B,8BAA8B;YAC9B,IAAI,CAAC,KAAK,CAAC,WAAW;gBAAE,OAAO;YAC/B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAAK,CAAC,SAAS,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,KAAK,CAAC,MAAM,EAAE;gBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,IAAI,GAAG,IAAI,uBAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBACnE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;oBACxC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;oBACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;oBACjC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClC;aACF;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,KAAa,EAAE,EAAE;YAC7B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtC,IAAI,IAAI,YAAY,uBAAU,EAAE;oBAC9B,IACE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAe,CAAC;wBAClD,IAAI,CAAC,IAAI,KAAK,MAAM;wBAEpB,SAAS;oBACX,IAAI,CAAC,SAAS,CACZ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAClC,CAAC;oBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;oBAEvC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBAC9B,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BACvB,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,cAAc;4BACtC,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,cAAc;4BACtC,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,cAAc;4BACtC,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAEvB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA1RA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,mBAAQ,CAAC,cAAc,CACxC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,GAAG,EACH,EAAE,CACH,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,OAAO;QACpC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;;AA5CH,oCAuSC;AAlSQ,kBAAK,GAAW,EAAE,CAAC;AACnB,kBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACvB3B,sEAAkC;AAKlC,8IAA+E;AAC/E,0HAAiE;AACjE,4FAA8C;AAE9C,oGAA4C;AAE5C,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,6CAAI;IACJ,iDAAM;IACN,6DAAY;IACZ,qDAAQ;AACV,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAED,MAAa,eAAgB,SAAQ,yBAAW;IAM9C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAHjB,kBAAa,GAAG,CAAC,CAAC;QAqB3B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,iCAA4B,GAAG,GAAY,EAAE;YAC3C,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IACE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACpC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACxC,IAAI,CAAC,aAAa,IAAI,CAAC,EACvB;oBACA,WAAW,GAAG,IAAI,CAAC;iBACpB;aACF;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,CAAC,EAAE,EAAE;YACd,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACZ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;oBACnD,QAAQ,IAAI,CAAC,KAAK,EAAE;wBAClB,KAAK,WAAW,CAAC,MAAM;4BACrB,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;4BAC/C,IAAI,iBAAiB,KAAK,KAAK,EAAE;gCAC/B,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,GAAG,iBAAiB,CAAC;gCACnD,MAAM,YAAY,GAAG,EAAE,CAAC;gCAExB,MAAM,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAC7C,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,EAAE,CACH,CAAC;gCAEF,IAAI,CAAC,0BAA0B,CAC7B;oCACE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;iCACf,EACD,+BAAc,EACd,KAAK,CACN,CAAC;6BACH;4BACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC;4BACtC,MAAM;wBACR,KAAK,WAAW,CAAC,YAAY;4BAC3B,IAAI,CAAC,0BAA0B,CAC7B;gCACE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gCAChB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gCACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gCACf,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;6BAChB,EACD,+BAAc,EACd,KAAK,CACN,CAAC;4BACF,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;4BAC9B,MAAM;wBACR,KAAK,WAAW,CAAC,QAAQ;4BACvB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,GAAG,GAAG,MAAM,CAAC;4BACjB,IAAI,OAAO,CAAC;4BACZ,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;4BACzD,UAAU,GAAG,UAAU,CAAC,MAAM,CAC5B,CAAC,IAAI,EAAE,EAAE,CACP,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACzB,CAAC,UAAU,EAAE,EAAE,CACb,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CACrD,CACJ,CAAC;4BAEF,IACE,UAAU,CAAC,MAAM,KAAK,CAAC;gCACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,EAC3C;gCACA,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;gCAC9B,MAAM;6BACP;4BAED,IAAI,WAAW,GAAG,WAAI,CAAC,SAAS,CAC9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,eAAM,CAAC,IAAI,CACZ,CAAC;4BACF,IAAI,UAAU,GAAG,EAAE,CAAC;4BACpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;gCAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACtD,IAAI,gBAAgB,GAAG,WAAI,CAAC,SAAS,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;4BAE/D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;gCACxC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;gCAC9B,MAAM;6BACP;4BAED,KAAK,IAAI,CAAC,IAAI,UAAU,EAAE;gCACxB,IAAI,MAAM,GAAG,CAAC,CAAC;gCACf,IAAI,IAAI,GACN,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oCAC1D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC7D,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,CAAC,EAAE;oCAC9D,GAAG,GAAG,IAAI,CAAC;oCACX,OAAO,GAAG,MAAM,CAAC;iCAClB;6BACF;4BAED,IAAI,CAAC,OAAO,EAAE;gCACZ,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;6BACzB;4BAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4BACf,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,+CAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;4BACjE,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;gCACvC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;6BACjC;iCAAM;gCACL,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;6BAC/B;4BACD,MAAM;wBACR,KAAK,WAAW,CAAC,IAAI;4BACnB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC;4BAClC,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM;oBAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;oBAClD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAErB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,IAAI;oBACnD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;oBACnB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAC1B,EAAE,EACF,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;oBACF,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;oBAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EACzB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;wBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBAC5B;oBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;wBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACF;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAvNA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AAvBH,0CAgOC;AA/NQ,0BAAU,GAAW,CAAC,CAAC;AACvB,qBAAK,GAAW,EAAE,CAAC;AACnB,qBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACrB3B,sEAA6C;AAE7C,wGAAiD;AACjD,0GAAuD;AACvD,+FAAiD;AACjD,gFAAuC;AAGvC,kFAAgC;AAChC,yFAA4C;AAE5C,MAAa,SAAU,SAAQ,aAAK;IAkBlC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA6B1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,cAAc,GAAG;gCACnB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gCACtB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;6BACvB,CAAC;4BACF,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;4BACtC,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;4BACtC,IACE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCACrB,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gCACrB,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gCACtB,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EACtB;gCACA,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;gCACzC,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;gCACzC,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;oCAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EACzC;oCACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;wCACxD,cAAc,GAAG;4CACf,CAAC,EAAE,SAAS;4CACZ,CAAC,EAAE,SAAS;yCACb,CAAC;qCACH;iCACF;6BACF;4BACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,KAAK,EACL,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,yCAAyC;4BAEzC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gCACZ,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wCACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACzC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtD,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCACxD,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wCACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wCAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;wCAEvC,IAAI,IAAI,CAAC,OAAO,EAAE;4CAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4CACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;yCACzB;wCACD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;6CAChD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6CACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6CACpD,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;4CAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;qCACxD;iCACF;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,eAAe,EAAE,CAAC;4BACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4BACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;4BACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;yBAC3B;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB,IAAI,CAAC,eAAe,EAAE,CAAC;qCACxB;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,sEAAsE;YACtE,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,KAAK;oBACR,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;gBAChE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;oBAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;iBACvB;gBACD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;aAChE;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC;YACxB,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE3C,MAAM,eAAe,GAAG,CACtB,YAAqB,EACrB,KAAa,EACD,EAAE;gBACd,MAAM,WAAW,GAAG,YAAY;oBAC9B,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;qBACP;oBACH,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACR,CAAC;gBACN,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CACtE,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC;YAEF,IAAI,OAAO,GAAe,EAAE,CAAC;YAC7B,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;oBACZ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;iBACb,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,UAAU;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;gBACnE,IAAI,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAClE;YAED,MAAM,kBAAkB,GAAG,OAAO;iBAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClB,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;aACvE,CAAC,CAAC;iBACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC1E,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAE9D,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBAClC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;oBAC7C,MAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,IAAI,CAAC,IAAI,EACT,OAAO,EACP,OAAO,EACP,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,EACJ,KAAK,EACL,IAAI,CACL,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACvC,oCAAoC;iBACrC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC1C,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;iBACrB;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;gBACD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;oBACtB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;iBAC3B;gBACD,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK;oBACR,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACpE,IAAI,CAAC,KAAK,CAAC,yBAAyB,EACpC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,EAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA7VA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;;AA9CH,8BAkXC;AApWQ,oBAAU,GAAW,CAAC,CAAC;AACvB,eAAK,GAAW,EAAE,CAAC;AACnB,eAAK,GAAW,EAAE,CAAC;;;;;;;;;;;;;;;AC3B5B,sEAA6C;AAM7C,2GAAyD;AAGzD,wGAAqD;AACrD,6GAAyD;AACzD,gFAAmC;AAEnC,MAAa,YAAa,SAAQ,eAAM;IAWtC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAwC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,GAAG,CAAC;QACb,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEzB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;gBAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC5B,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC/D;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAnGA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACZ,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,sEAAsE;IAChI,CAAC;IAED,IAAI,SAAS;QACX,OAAO;cACG,IAAI,CAAC,MAAM;;2BAEE,CAAC;IAC1B,CAAC;;AAlDH,oCAiHC;AA1GQ,uBAAU,GAAW,CAAC,CAAC;AACvB,kBAAK,GAAW,CAAC,CAAC;AAClB,kBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACtB3B,sEAA6C;AAE7C,wGAAiD;AACjD,+FAAiD;AAGjD,kFAAgC;AAEhC,MAAa,WAAY,SAAQ,aAAK;IAWpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA4B1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBACpC,IAAI,MAAM,KAAK,KAAK,EAAE;wBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;wBAC3B,IAAI,QAAQ,GAAG,CAAC,EAAE;4BAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4BACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;4BACnB,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gCAClD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;iBACF;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BACD,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wCACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACzC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCAC1D,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oCAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wCACrB,IAAI,CAAC,eAAe,EAAE,CAAC;qCACxB;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBAED,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,EAC7B,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,WAAW;oBAChB,IAAI,CAAC,KAAK;oBACV,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EACjC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAjNA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC;YACX,QAAQ;YACR,WAAW;YACX,WAAW;YACX,YAAY;YACZ,MAAM;YACN,MAAM;SACP,CAAC,CAAC;IACL,CAAC;;AAtCH,kCA+NC;AAxNQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,CAAC,CAAC;AAClB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AChB3B,sEAA6C;AAY7C,wGAAiD;AACjD,+FAAiD;AAGjD,kFAAgC;AAEhC,MAAa,UAAW,SAAQ,aAAK;IAWnC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAqB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAa;QACb,WAAM,GAAG,GAAG,EAAE;YACZ,mBAAmB;YACnB,OAAO;QACT,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,kBAAkB;YAClB,OAAO;QACT,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,6BAA6B;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,6BAA6B;gBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,2CAA2C;gBAC3C,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,4CAA4C;oBAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,wBAAwB;wBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBAEnD,yBAAyB;wBACzB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,sCAAsC;wBACtC,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,mCAAmC;oCACnC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBAED,4BAA4B;wBAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,mCAAmC;wBACnC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;wBAEF,+BAA+B;wBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,yBAAyB;4BACzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAExB,gDAAgD;4BAChD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,6DAA6D;4BAC7D,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;wCACA,2CAA2C;wCAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,2BAA2B;oCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;wBAED,wDAAwD;wBACxD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,oBAAoB;wBACpB,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,wCAAwC;oBACxC,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,sFAAsF;oBACtF,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,+BAA+B;YAC/B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAjQA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,gBAAS,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,yBAAyB;QAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAEtB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/C,CAAC;;AA/BH,gCA+QC;AAvQQ,qBAAU,GAAW,CAAC,CAAC;AACvB,gBAAK,GAAW,EAAE,CAAC;AACnB,gBAAK,GAAW,EAAE,CAAC;;;;;;;;;;;;;;;AC7B5B,sEAAkC;AAClC,sEAAuC;AAGvC,kFAAgC;AAEhC,yFAA4C;AAC5C,8GAAyD;AAGzD,oGAAmD;AAEnD,4FAA8C;AAC9C,oHAA+D;AAC/D,wGAAiD;AACjD,+FAAiD;AAEjD,MAAa,cAAe,SAAQ,aAAK;IASvC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAmC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAEjB,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAEnD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,6BAA6B;gBAC7B,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBACpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnC,qCAAqC;oBACrC,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;wBAClE,MAAM,EAAE,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClE,MAAM,EAAE,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;wBAChE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACtC,CAAC,CAAC,CAAC;oBAEH,yEAAyE;oBACzE,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;oBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAClC,IAAI,CAAC,KAAK,IAAI,EAAE;4BACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;yBAC7D;qBACF;oBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;wBAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;gCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;gCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;6BAC3D;yBACF;qBACF;oBAED,aAAa;oBACb,IAAI,IAAI,GAAG,EAAW,CAAC;oBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;wBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;yBACzB;qBACF;oBAED,6BAA6B;oBAC7B,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,IAAI,EACJ,WAAW,EACX,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;oBAEF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAE7B,oCAAoC;wBACpC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;6BAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6BACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;6BACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;4BAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;qBACvD;iBACF;qBAAM;oBACL,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;gBACD,GAAG;aACJ;YAED,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;YACD,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,SAAiB,CAAC,EAAE,EAAE;YAC9B,IACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;gBAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,CAAC,EACf;gBACA,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACrC,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;iBACxE;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,eAAyB,EAAE,EAAE;YAC5C,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,eAAe,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAChC,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClE,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,QAAQ,EAAE;wBACjC,IAAI,CAAC,aAAa,CAAC,KAAc,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC3B,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClD,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,YAAY,aAAK;gBACvB,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK;gBAChE,CAAC,MAAM,CAAC,QAAQ;gBAChB,CAAC,MAAM,CAAC,IAAI;gBACZ,MAAM,KAAK,IAAI;gBACf,CAAC,MAAM,CAAC,cAAc,CACzB,CAAC;YACF,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,mCAAgB,CAAC,qBAAqB,CAAC,CAAC;QAC7E,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,EAAE;oBACtC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACjB,KAAK,CAAC,YAAY,EAAE,CAAC;qBACtB;iBACF;gBACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC3B;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAY,EAAE,EAAE;YAC/B,8BAA8B;YAC9B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAAK,CAAC,WAAW,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;gBAClC,IAAI,IAAI,GAAG,IAAI,uBAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACnE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,KAAa,EAAE,EAAE;YAC7B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtC,IAAI,IAAI,YAAY,uBAAU,EAAE;oBAC9B,IACE,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAe,CAAC;wBACpD,IAAI,CAAC,IAAI,KAAK,QAAQ;wBAEtB,SAAS;oBACX,IAAI,CAAC,SAAS,CACZ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAClC,CAAC;oBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;oBAEvC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBAC9B,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BACvB,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BACvB,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BACvB,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BACvB,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAEvB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAxRA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,mBAAQ,CAAC,cAAc,CACxC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACX,GAAG,EACH,EAAE,CACH,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;;AA3CH,wCAoSC;AA/RQ,oBAAK,GAAW,EAAE,CAAC;AACnB,oBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACvB3B,sEAAkC;AAIlC,wGAAiD;AACjD,+FAAiD;AACjD,kFAAgC;AAEhC,yFAA4C;AAC5C,8FAAsD;AAEtD,MAAa,SAAU,SAAQ,aAAK;IAWlC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAoB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,OAAgB,IAAI,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,UAAU;gBAAE,OAAO;YAE5B,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAK,KAAK;gBAAE,OAAO;YAExB,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU;gBAAE,OAAO;YAEvC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,IAAI;gBAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,yBAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBACrC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;gBAChC,SAAS,EAAE,IAAI,CAAC,IAAI;aACrB,CAAC,CAAC;YAEH,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBACzD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QACF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;wBACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC3B,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;4BAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4BACvB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;yBAC/B;qBACF;iBACF;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,kCAAkC;oCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,gFAAgF;wBAChF,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAChD,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAEhD,IACE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;4BAC1B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;4BAC1B,CAAC,IAAI,CAAC,WAAW,EACjB;4BACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9C,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;4BAClD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;4BAClD,IACE,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gCAEhE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;4BAE1D,IAAI,CAAC,sBAAsB,EAAE,CAAC;4BAC9B,OAAO;yBACR;wBAED,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,oCAAoC;yBACrC;6BAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BAC5B,qEAAqE;4BACrE,IAAI,IAAI,GAAG,EAAW,CAAC;4BACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BAED,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EAAE,YAAY;4BACnB,KAAK,EAAE,gBAAgB;4BACvB,SAAS,EACT,SAAS,EACT,SAAS,EACT,KAAK,EAAE,gBAAgB;4BACvB,IAAI,CAAC,aAAa,CACnB,CAAC;4BAEF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAE7B,8EAA8E;gCAC9E,MAAM,YAAY,GAChB,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,CAAC;gCAEjE,+DAA+D;gCAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gCACvD,MAAM,aAAa,GACjB,UAAU,YAAY,qBAAS,IAAK,UAAwB,CAAC,EAAE,CAAC;gCAElE,IAAI,CAAC,YAAY,IAAI,CAAC,aAAa,EAAE;oCACnC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iCAC5B;6BACF;4BAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;yBAC/B;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;iCAC/B;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,2BAAsB,GAAG,GAAG,EAAE;YAC5B,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAC7B,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,YAAY,CAAC,CAAC,EACnB,IAAI,CAAC,YAAY,CAAC,CAAC,CACpB,CAAC;YACF,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY;gBACrC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;YACjE,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY;gBAAE,IAAI,CAAC,eAAe,EAAE,CAAC;QAChE,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,qEAAqE;YAErE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA5OA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,6CAA6C;QAC7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA9BH,8BA0PC;AAnPQ,oBAAU,GAAW,CAAC,CAAC;AACvB,eAAK,GAAW,EAAE,GAAG,EAAE,CAAC;AACxB,eAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACpB3B,sEAAkC;AAIlC,wGAAiD;AACjD,+FAAiD;AACjD,kFAAgC;AAEhC,MAAa,UAAW,SAAQ,aAAK;IAWnC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAF1B,aAAQ,GAAY,KAAK,CAAC;QAuB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC,mBAAmB;YACnE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAEtB,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;wBACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC3B,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;4BAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4BACvB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;iBACF;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,kCAAkC;oCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,IAAI,EAAE,WAAW;wBACjB,KAAK,EAAE,eAAe;wBACtB,SAAS,EACT,SAAS,EACT,SAAS,EACT,KAAK,CACN,CAAC;wBACF,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;yBAC1B;6BAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC3B,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAoB,CAAC,CAAC;4BAClE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAoB,CAAC,CAAC;4BAClE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAoB,CAAC,CAAC;4BAClE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAoB,CAAC,CAAC;4BAClE,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAE3B,IAAI,SAAS,GAAG,KAAK,CAAC;4BACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;oCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;oCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wCACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;iCAC3D;6BACF;4BACD,IAAI,CAAC,SAAS,EAAE;gCACd,OAAO;gCACP,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;6BAC5B;yBACF;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAE7D,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC9D,IAAI,KAAK,GAAG,IAAI;gBAAE,KAAK,GAAG,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,MAAM;gBAAE,WAAW,GAAG,CAAC,CAAC;YACjC,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,WAAW,EACxB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAC1C,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAxMA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC,yBAAyB;QACnD,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA/BH,gCAsNC;AA/MQ,qBAAU,GAAW,CAAC,CAAC;AACvB,gBAAK,GAAW,EAAE,CAAC;AACnB,gBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACjB3B,sEAAkC;AAIlC,wGAAiD;AACjD,+FAAiD;AACjD,kFAAgC;AAGhC,MAAa,SAAU,SAAQ,aAAK;IAWlC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAmB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;wBACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC3B,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;4BAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4BACvB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;gCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;iBACF;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,kCAAkC;oCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EAAE,WAAW;wBAClB,KAAK,EAAE,eAAe;wBACtB,SAAS,EACT,SAAS,EACT,SAAS,EACT,KAAK,EAAE,eAAe;wBACtB,IAAI,CAAC,aAAa,CACnB,CAAC;wBACF,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,2BAA2B;4BAC3B,cAAc;4BACd,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BAChD,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAE3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAE3B,IAAI,SAAS,GAAG,KAAK,CAAC;4BACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;oCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;oCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wCACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;iCAC3D;6BACF;4BAED,IAAI,CAAC,SAAS,EAAE;gCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;6BAC5B;yBACF;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,EAAE,iBAAiB;gBAC7B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAzLA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA7BH,8BAuMC;AAhMQ,oBAAU,GAAW,CAAC,CAAC;AACvB,eAAK,GAAW,EAAE,GAAG,EAAE,CAAC;AACxB,eAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AClB3B,sEAA6C;AAI7C,wGAAiD;AACjD,+FAAiD;AACjD,mHAA6D;AAC7D,kFAAgC;AAEhC,MAAa,UAAW,SAAQ,aAAK;IAanC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QANjB,gBAAW,GAAG,CAAC,CAAC;QAyBzB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,CACL,WAAmB,EACnB,MAAc,EACd,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAElC,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,YAAY,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,IAAI,YAAY,CAAC;YAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;;gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEb,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,EAAE;wBAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;wBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;qBAC1B;oBACD,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEb,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBACD,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,EACd,SAAS,EACT,SAAS,CACV,CAAC;wBACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAExB,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;wBAED,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEf,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;wBAChC,IAAI,CAAC,aAAa,IAAI,GAAG,GAAG,KAAK,CAAC;wBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;4BAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;qBACF;iBACF;gBAED,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAlSA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;;AA/BH,gCAkTC;AAxSQ,qBAAU,GAAW,CAAC,CAAC;AACvB,gBAAK,GAAW,CAAC,CAAC;AAClB,gBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACrB3B,sEAAkC;AAElC,mFAAyC;AACzC,0GAAuD;AACvD,iGAA0C;AAC1C,yIAA2E;AAC3E,oGAA4C;AAC5C,kFAAgC;AAChC,4FAA8C;AAC9C,uGAAmD;AACnD,oGAA4C;AAC5C,oGAA4C;AAC5C,8FAAwC;AACxC,oGAA4C;AAC5C,6GAAkD;AAClD,0GAAgD;AAChD,8FAAwC;AACxC,iGAA+C;AAC/C,iGAA0C;AAC1C,yHAA0D;AAC1D,8FAAwC;AAExC,sHAAwD;AACxD,oHAA+D;AAC/D,oGAA4C;AAC5C,iGAA0C;AAC1C,8FAAwC;AACxC,oGAA4C;AAC5C,uGAA8C;AAC9C,gFAAuC;AAEvC,MAAa,OAAQ,SAAQ,aAAK;IAUhC,YACE,IAAU,EACV,IAAU,EACV,CAAS,EACT,CAAS,EACT,aAAuB;QACrB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;KAC1D;QAED,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAwE1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,YAAoB,CAAC,EAAE,EAAE;YAC5C,IAAI,mCAAgB,CAAC,kBAAkB,EAAE;gBACvC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aACvE;YACD,IAAI,mCAAgB,CAAC,iBAAiB,EAAE;gBACtC,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,SAAS,CAAC;aACrC;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,OAAO,CAAC,CAAC;YACxE,IAAI,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACjB,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE;oBAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI;yBACtB,aAAa,EAAE;yBACf,MAAM,CACL,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAClE,CAAC;oBACJ,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE;wBAC7B,MAAM,SAAS,GAAG;4BAChB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;4BACxB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;4BAChC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;4BAChC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;4BAChC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;yBACjC,CAAC;wBACF,SAAS,GAAG,SAAS,CAAC,MAAM,CAC1B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;qBACH;oBACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wBAEf,MAAM,QAAQ,GAAG,WAAI,CAAC,SAAS,CAAC,SAAS,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;wBAExD,IAAI,OAAc,CAAC;wBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAC7C,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;wBAEF,QAAQ,IAAI,CAAC,cAAc,EAAE;4BAC3B,KAAK,CAAC,EAAE,sBAAsB;gCAC5B,OAAO,GAAG,IAAI,qBAAS,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,qBAAS,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,qBAAS,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,uBAAU,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,gCAAiB,CAC7B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,qBAAS,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,CAAC;gCACJ,OAAO,GAAG,IAAI,uCAAkB,CAC9B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,6BAAa,CACzB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;gCACnD,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,uBAAU,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,+BAAc,CAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;gCACnD,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,4BAAe,CAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,qCAAiB,CAC7B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,uBAAU,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,qBAAS,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,2BAAY,CACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;gCACnD,MAAM;4BACR,KAAK,EAAE;gCACL,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;4BACR;gCACE,OAAO,CAAC,IAAI,CACV,2CAA2C,EAC3C,IAAI,CAAC,cAAc,CACpB,CAAC;gCACF,OAAO,GAAG,IAAI,yBAAW,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gCACF,MAAM;yBACT;wBAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC;wBAEhD,IAAI,WAAW,EAAE;4BACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,yCAAmB,CACrB,IAAI,CAAC,IAAI,EACT,OAAO,EACP,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CACF,CAAC;4BACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,uBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAClE,CAAC;yBACH;qBACF;iBACF;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;QACH,CAAC,CAAC;QAEF,8BAAyB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACnD,sEAAsE;YACtE,MAAM,KAAK,GAAG;gBACZ,EAAE,CAAC,EAAE,CAAC,EAAE;gBACR,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;gBACf,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;aACvB,CAAC;YAEF,oDAAoD;YACpD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAC3B,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,WAAI,CACvD,CAAC;YACF,IAAI,CAAC,UAAU;gBAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAEjC,wEAAwE;YACxE,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACxD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAE1D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACnC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;oBAAE,OAAO,IAAI,CAAC;gBAClC,IAAI,CAAC,YAAY,WAAI;oBAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,UAAU,KAAK,IAAI,CAAC;gBAClE,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YACH,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACpC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS;oBAAE,OAAO,IAAI,CAAC;gBACnC,IAAI,CAAC,YAAY,WAAI;oBAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,WAAW,KAAK,IAAI,CAAC;gBACnE,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YACH,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBAClC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO;oBAAE,OAAO,IAAI,CAAC;gBACjC,IAAI,CAAC,YAAY,WAAI;oBAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,SAAS,KAAK,IAAI,CAAC;gBACjE,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YACH,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU;oBAAE,OAAO,IAAI,CAAC;gBACpC,IAAI,CAAC,YAAY,WAAI;oBAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,CAAC;gBACpE,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,WAAW;gBAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;YACrD,IAAI,YAAY;gBAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;YACrD,IAAI,UAAU;gBAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;YACrD,IAAI,aAAa;gBAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;YAErD,iDAAiD;YACjD,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAC5B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;YACjC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC3B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;YAElC,yCAAyC;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,IAAK,OAAe,CAAC,OAAO,EAAE,EAAE,KAAK,IAAI,EAAE;gBACrD,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACzB;YACD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAClB,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAC/C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oBAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC/C,IAAI,IAAI,YAAY,WAAI,EAAE;wBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;wBACjC,IAAI,QAAQ,EAAE,WAAW,EAAE;4BACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,aAAK,CAC7C,IAAI,CAAC,IAAI,EACT,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,CACP,CAAC,CAAC,mBAAmB;yBACvB;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAClC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA5cA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,oCAAoC;QAClE,MAAM,aAAa,GAAG,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;QAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAkDG;QACH,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACnE,CAAC;;AAzFH,0BAieC;AA1dQ,aAAK,GAAW,CAAC,CAAC;AAClB,aAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACvC3B,sEAA6C;AAE7C,wGAAiD;AACjD,+FAAiD;AAGjD,2GAAyD;AACzD,kFAAgC;AAChC,yFAA4C;AAC5C,0GAAuD;AAEvD,IAAK,WAIJ;AAJD,WAAK,WAAW;IACd,mDAAO;IACP,iDAAM;IACN,iDAAM;AACR,CAAC,EAJI,WAAW,KAAX,WAAW,QAIf;AAED,MAAa,WAAY,SAAQ,aAAK;IAcpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAgC1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YAC9C,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM,IAAI,UAAU,GAAG,CAAC;gBACrD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,sEAAsE;YACtE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3E,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;gBAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACjE,CAAC,CAAC;QAEF,yCAAyC;QACjC,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACxE,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,OAAO,EAAE;gBAAE,OAAO,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,qBAAS,IAAK,CAAe,CAAC,EAAE;gBAAE,OAAO,KAAK,CAAC;YAChE,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAAE,OAAO,KAAK,CAAC;aACxD;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAC7B,MAAc,EACd,MAAc,EAOb,EAAE;YACH,MAAM,UAAU,GAAG;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACrC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;gBACpC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAY,EAAE;aACtC,CAAC;YACF,MAAM,UAAU,GAAG,EAMjB,CAAC;YACH,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC9D,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAC1B,UAME,EACF,OAAe,EACf,OAAe,EACf,WAAoB,EACpB,UAAkB,EAClB,UAAkB,EAClB,EAAE;YACF,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACvB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;gBACnE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;gBACnE,IAAI,EAAE,KAAK,EAAE;oBAAE,OAAO,EAAE,GAAG,EAAE,CAAC;gBAC9B,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;wBAAE,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;qBAAM;oBACL,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;wBAAE,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;gBACD,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzE,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzE,IAAI,QAAQ,KAAK,QAAQ;oBAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC;gBACtD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAC7B,MAAc,EACd,MAAc,EACmB,EAAE;YACnC,MAAM,UAAU,GAAG;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;aAClB,CAAC;YACF,MAAM,UAAU,GAAoC,EAAE,CAAC;YAEvD,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC/B,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvC;aACF;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEM,6BAAwB,GAAG,CACjC,UAA2C,EAC3C,OAAe,EACf,OAAe,EACf,WAAoB,EACpB,UAAkB,EAClB,UAAkB,EAClB,EAAE;YACF,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,KAAK,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7D,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACvB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBAC7D,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBAC7D,IAAI,EAAE,KAAK,EAAE;oBAAE,OAAO,EAAE,GAAG,EAAE,CAAC;gBAE9B,2CAA2C;gBAC3C,MAAM,KAAK,GACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAChE,MAAM,KAAK,GACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAEhE,IAAI,WAAW,EAAE;oBACf,IAAI,KAAK,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAI,KAAK,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;gBAED,kCAAkC;gBAClC,MAAM,QAAQ,GAAG,CACf,CAAC,CAAC,CAAC,GAAG,OAAO;oBACX,CAAC,CAAC,UAAU,GAAG,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;wBACb,CAAC,CAAC,UAAU,GAAG,CAAC;wBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;4BACb,CAAC,CAAC,UAAU,GAAG,CAAC;4BAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;gCACb,CAAC,CAAC,UAAU,GAAG,CAAC;gCAChB,CAAC,CAAC,CAAC,CACZ;oBACC,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC,CAAC;gBACN,MAAM,QAAQ,GAAG,CACf,CAAC,CAAC,CAAC,GAAG,OAAO;oBACX,CAAC,CAAC,UAAU,GAAG,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;wBACb,CAAC,CAAC,UAAU,GAAG,CAAC;wBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;4BACb,CAAC,CAAC,UAAU,GAAG,CAAC;4BAChB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;gCACb,CAAC,CAAC,UAAU,GAAG,CAAC;gCAChB,CAAC,CAAC,CAAC,CACZ;oBACC,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC,CAAC;gBACN,IAAI,QAAQ,KAAK,QAAQ;oBAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC;gBAEtD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;QAEM,mBAAc,GAAG,CACvB,KAAa,EACb,KAAa,EACb,IAAY,EACZ,IAAY,EACN,EAAE;YACR,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;oBAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;oBAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;oBACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wBACrE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1D,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;qBAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qBACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;qBACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;aACvD;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,CAAC,MAAM;gCACT,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC;oCAC5B,CAAC,CAAC,IAAI,CAAC,YAAY;oCACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;yCACnD,OAAO,CAAC;4BAEjB,4EAA4E;4BAC5E,IAAI,cAAc,GAAG;gCACnB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gCACtB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;6BACvB,CAAC;4BAEF,qDAAqD;4BACrD,MAAM,cAAc,GAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gCACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BAEzC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,cAAc,KAAK,CAAC,EAAE;gCAC7D,uDAAuD;gCACvD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gCAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gCAC1C,iCAAiC;gCACjC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;oCACxB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wCAAE,EAAE,GAAG,CAAC,CAAC;;wCACpC,EAAE,GAAG,CAAC,CAAC;iCACb;gCACD,IACE,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oCAC/B,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAC/B;oCACA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oCACtD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oCACtD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;wCAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;wCACzC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EACpD;wCACA,cAAc,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;qCACjD;iCACF;6BACF;iCAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;gCAC5C,cAAc,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAS,CAAC;6BAChE;4BAED,4BAA4B;4BAC5B,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3C,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;4BAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;4BAEjE,4EAA4E;4BAC5E,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;4BACpB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;4BACpB,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,KAAK,EACL,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCACpB,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC5B,IAAI,UAAU,EAAE;oCACd,MAAM,aAAa,GACjB,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCACzD,MAAM,UAAU,GAAG,WAAW;wCAC5B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;wCAC3B,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;oCAC9B,IAAI,aAAa,IAAI,UAAU;wCAAE,IAAI,GAAG,UAAU,CAAC;iCACpD;gCACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gCACpB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gCACpB,MAAM,kBAAkB,GACtB,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gCACpD,IAAI,kBAAkB,KAAK,CAAC,EAAE;oCAC5B,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;oCAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;oCAC3B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACzD,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACzD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;wCAC/B,MAAM,GAAG,IAAI,CAAC;wCACd,MAAM,GAAG,IAAI,CAAC;qCACf;iCACF;6BACF;4BAED,sFAAsF;4BACtF,IAAI,cAAc,KAAK,CAAC,EAAE;gCACxB,oEAAoE;gCACpE,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCAChE,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oCAChC,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;oCACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iCACjD;6BACF;iCAAM;gCACL,yEAAyE;gCACzE,MAAM,SAAS,GACb,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gCACpD,IAAI,SAAS,IAAI,CAAC,EAAE;oCAClB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iCACjD;qCAAM;oCACL,+DAA+D;oCAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCACzD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wCACzB,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACjC,UAAU,EACV,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;wCACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qCACvD;yCAAM;wCACL,8DAA8D;wCAC9D,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CACjD,IAAI,EACJ,IAAI,CACL,CAAC;wCACF,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;4CAChC,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,cAAc,CAAC,CAAC,EAChB,cAAc,CAAC,CAAC,EAChB,WAAW,EACX,UAAU,EACV,UAAU,CACX,CAAC;4CACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;yCACjD;qCACF;iCACF;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BAErB,IAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wCACrB,IAAI,CAAC,eAAe,EAAE,CAAC;qCACxB;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC;YACxB,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE3C,MAAM,eAAe,GAAG,CACtB,YAAqB,EACrB,KAAa,EACD,EAAE;gBACd,MAAM,WAAW,GAAG,YAAY;oBAC9B,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;qBACP;oBACH,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACR,CAAC;gBACN,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CACtE,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC;YAEF,IAAI,OAAO,GAAe,EAAE,CAAC;YAC7B,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;oBACZ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;iBACb,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,UAAU;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;gBACnE,IAAI,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAClE;YAED,MAAM,kBAAkB,GAAG,OAAO;iBAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClB,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;aACvE,CAAC,CAAC;iBACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC1E,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAE9D,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBAClC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;oBAC7C,MAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,IAAI,CAAC,IAAI,EACT,OAAO,EACP,OAAO,EACP,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,EACJ,KAAK,EACL,IAAI,CACL,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACvC,oCAAoC;iBACrC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,QAAQ,IAAI,CAAC,SAAS,EAAE;oBACtB,KAAK,gBAAS,CAAC,EAAE;wBACf,kBAAkB;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,kBAAkB;wBAClB,iBAAiB;wBACjB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,iBAAiB;wBACjB,MAAM;iBACT;gBACD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACxD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CACnE,CAAC;gBACF,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,OAAO,EAAE;oBACtC,wBAAwB;oBACxB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EAAE,oBAAoB;oBAChC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,GAAG,EAClC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;gBACD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;aACF;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;iBAC/D;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAtnBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;QACjC,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,SAAS;QACX,OAAO;cACG,IAAI,CAAC,MAAM;;2BAEE,CAAC;IAC1B,CAAC;;AA7CH,kCAuoBC;AAhoBQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,CAAC,CAAC;AAClB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACzB3B,sEAA6C;AAW7C,4FAA8C;AAC9C,wGAAiD;AACjD,+FAAiD;AAGjD,kFAAgC;AAChC,8GAAyD;AAEzD,uGAA8C;AAC9C,6GAAyD;AAEzD,MAAa,WAAY,SAAQ,aAAK;IAepC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAL1B,qBAAgB,GAA+B,EAAE,CAAC;QAClD,iBAAY,GAAW,CAAC,CAAC;QACzB,aAAQ,GAAmB,EAAE,CAAC;QAmD9B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACjB,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,wBAAmB,GAAG,CAAC,gBAA4C,EAAE,EAAE;YACrE,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE;gBACvC,MAAM,OAAO,GAAG,IAAI,2BAAY,CAC9B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACnC,IAAI,IAAI,GAAG,IAAI,uBAAU,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBACzE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,UAAU;gBAClC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACtC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,OAAO;gBACL,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;gBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;aAC7B,CAAC;QACJ,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACnC,IAAI,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;iBACvC;qBAAM;oBACL,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;iBAC1C;aACF;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,sCAAsC;YACtC,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;aACpD;YACD,uDAAuD;YACvD,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE;gBACpD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAChD,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtC,IAAI,IAAI,YAAY,uBAAU,EAAE;oBAC9B,IACE,IAAI,CAAC,MAAM,YAAY,2BAAY;wBACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAsB,CAAC;wBACnD,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB;wBACA,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAClD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAClB,CAAC;qBACH;iBACF;aACF;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBACjB,OAAO,CAAC,IAAI,EAAE,CAAC;iBAChB;aACF;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,KAAa,EAAE,EAAE;YACtC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtC,IAAI,IAAI,YAAY,uBAAU,EAAE;oBAC9B,IACE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAEhC,SAAS;oBACX,IAAI,CAAC,SAAS,CACZ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACX,IAAI,CAAC,MAAM,CAAC,KAAK;wBACjB,IAAI;wBACH,IAAI,CAAC,MAAuB,CAAC,YAAY,CAC7C,CAAC;oBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;oBAEtC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBAC9B,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,UAAU;4BAClC,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,YAAY;4BACpC,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,WAAW;4BACnC,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,UAAU;4BAClC,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;4BAE/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,KAAK,IAAI,EAAE;oCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;iCAC7D;6BACF;4BAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;wCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;wCACA,kCAAkC;wCAClC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;qCAC3D;iCACF;6BACF;4BAED,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gCACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iCACzB;6BACF;4BACD,IAAI,CAAC,MAAM;gCACT,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,MAAM;oCACnC,CAAC,CAAC,IAAI,CAAC,YAAY;oCACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;yCACnD,OAAO,CAAC;4BACjB,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,MAAM,EACX,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,CAAC,aAAa,CACnB,CAAC;4BACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gCACpB,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wCACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACzC;wCACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;wCAC1D,SAAS,GAAG,IAAI,CAAC;qCAClB;iCACF;gCAED,IAAI,CAAC,SAAS,EAAE;oCACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oCAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;4BACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB;;;;;;;;;;;gCAWI,CAAC;gCACH,IAAI,CAAC,eAAe,EAAE,CAAC;6BACxB;yBACF;qBACF;oBAED,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;wCACxB;;;;;;;;;;4CAUI,CAAC;4CACH,IAAI,CAAC,eAAe,EAAE,CAAC;yCACxB;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBAED,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;iBAC7D;aACF;YAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,+BAA+B;YAC/B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACvC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QA9XA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,gBAAS,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,EAAE,EACF,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EACb,GAAG,CACJ,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAE3B,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;;AA9DH,kCAgZC;AAxYQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,EAAE,CAAC;AACnB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;ACjC3B,sEAAkC;AAKlC,8IAA+E;AAC/E,0HAAiE;AACjE,4FAA8C;AAE9C,kFAAgC;AAChC,6GAAyD;AAEzD,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,6CAAI;IACJ,iDAAM;IACN,6DAAY;IACZ,qDAAQ;AACV,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAED,MAAsB,WAAY,SAAQ,aAAK;IAW7C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QALjB,kBAAa,GAAG,CAAC,CAAC;QAqB3B,mBAAc,GAAG,CACf,CAAS,EACT,CAAS,EACT,MAAc,EACd,KAA+B,EAC/B,UAAkB,EAClB,EAAE;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;QACtE,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,WAAwB,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,WAAwB,EAAE,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CACpD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAC3B,CAAC;QACJ,CAAC,CAAC;QAEF,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,iCAA4B,GAAG,GAAY,EAAE;YAC3C,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IACE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACpC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACxC,IAAI,CAAC,aAAa,IAAI,CAAC,EACvB;oBACA,WAAW,GAAG,IAAI,CAAC;iBACpB;aACF;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,CAAC,EAAE,EAAE;YACd,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACZ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;oBACnD,QAAQ,IAAI,CAAC,KAAK,EAAE;wBAClB,KAAK,WAAW,CAAC,MAAM;4BACrB,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;4BAC/C,IAAI,iBAAiB,KAAK,KAAK,EAAE;gCAC/B,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,GAAG,iBAAiB,CAAC;gCACnD,MAAM,YAAY,GAAG,EAAE,CAAC;gCAExB,MAAM,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAC7C,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,EAAE,CACH,CAAC;gCAEF,IAAI,CAAC,0BAA0B,CAC7B;oCACE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oCACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;iCACf,EACD,+BAAc,EACd,KAAK,CACN,CAAC;6BACH;4BACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC;4BACtC,MAAM;wBACR,KAAK,WAAW,CAAC,YAAY;4BAC3B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;4BAC9B,MAAM;wBACR,KAAK,WAAW,CAAC,QAAQ;4BACvB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAClB,IAAI,GAAG,GAAG,MAAM,CAAC;4BACjB,IAAI,OAAO,CAAC;4BACZ,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;4BACzD,UAAU,GAAG,UAAU,CAAC,MAAM,CAC5B,CAAC,IAAI,EAAE,EAAE,CACP,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACzB,CAAC,UAAU,EAAE,EAAE,CACb,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CACrD,CACJ,CAAC;4BAEF,IAAI,WAAW,GAAG,WAAI,CAAC,SAAS,CAC9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,eAAM,CAAC,IAAI,CACZ,CAAC;4BACF,iCAAiC;4BACjC,IAAI,UAAU,GAAG,EAAE,CAAC;4BACpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;gCAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACtD,IAAI,gBAAgB,GAAG,WAAI,CAAC,SAAS,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;4BAC/D,KAAK,IAAI,CAAC,IAAI,UAAU,EAAE;gCACxB,IAAI,MAAM,GAAG,CAAC,CAAC;gCACf,IAAI,IAAI,GACN,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oCAC1D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC7D,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,CAAC,EAAE;oCAC9D,GAAG,GAAG,IAAI,CAAC;oCACX,OAAO,GAAG,MAAM,CAAC;iCAClB;6BACF;4BACD,IAAI,OAAO,EAAE;gCACX,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gCACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;gCAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;gCAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,6BAA6B;gCAC7C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,+CAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gCACjE,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;oCACvC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;iCACjC;qCAAM;oCACL,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;iCAC/B;6BACF;4BACD,MAAM;wBACR,KAAK,WAAW,CAAC,IAAI;4BACnB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC;4BAClC,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEzB,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;oBACjD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBAEpB,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;oBACnB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAC1B,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;oBACF,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;oBAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EACzB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAjNA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;;AA1BH,kCA+NC;AA9NQ,sBAAU,GAAW,CAAC,CAAC;AAOvB,iBAAK,GAAW,CAAC,CAAC;AAClB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AC3B3B,sEAA6C;AAY7C,wGAAiD;AACjD,+FAAiD;AAGjD,kFAAgC;AAEhC,MAAa,WAAY,SAAQ,aAAK;IAWpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAoB1B,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,6BAA6B;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;gBAED,6BAA6B;gBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,2CAA2C;gBAC3C,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,4CAA4C;oBAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;wBAChD,wBAAwB;wBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;wBAEnD,yBAAyB;wBACzB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;wBAElB,sCAAsC;wBACtC,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;wBAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,CAAC,KAAK,IAAI,EAAE;gCACd,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;6BAC7D;yBACF;wBACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,qBAAS;oCAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAe,CAAC,EAAE,EAC7C;oCACA,mCAAmC;oCACnC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAoB,CAAC,CAAC;iCAC3D;6BACF;yBACF;wBAED,4BAA4B;wBAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;4BAC1D,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oCACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACzB;yBACF;wBAED,mCAAmC;wBACnC,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,gBAAgB,EAChB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,SAAS,CACf,CAAC;wBAEF,+BAA+B;wBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;4BAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;4BAE/B,yBAAyB;4BACzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAExB,gDAAgD;4BAChD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iCAC9C,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iCAClD,IAAI,KAAK,GAAG,IAAI;gCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;4BAErD,6DAA6D;4BAC7D,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gCAC5B,IAAI,SAAS,GAAG,KAAK,CAAC;gCACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACjC,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI;wCAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wCAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAChC;wCACA,2CAA2C;wCAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wCACjD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACrD,IACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4CACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;4CAE1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3D;iCACF;gCACD,IAAI,CAAC,SAAS,EAAE;oCACd,2BAA2B;oCAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oCAE3B,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;yCAC/C,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;yCACnD,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI;wCAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iCACvD;6BACF;yBACF;wBAED,wDAAwD;wBACxD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,KAAK,EAAE;4BACrC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;6BACI,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,EAAE;4BACpC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAS,CAAC,EAAE,EAAE;4BAClC,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;4BACrB,gBAAgB,CAAC,IAAI,CAAC;gCACpB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;gCACb,CAAC,EAAE,IAAI,CAAC,CAAC;6BACQ,CAAC,CAAC;yBACtB;wBACD,oBAAoB;wBACpB,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,wCAAwC;oBACxC,IAAI,mBAAmB,GACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;wBAClE,CAAC,CAAC,CAAC;oBACL,sFAAsF;oBACtF,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;wBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;wBAC7B,IAAI,CAAC,KAAK,KAAK,EAAE;4BACf,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3B,IACE,QAAQ,IAAI,CAAC;gCACb,CAAC,mBAAmB;oCAClB,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACpD;gCACA,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,EAAE;oCAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;oCAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oCACxB,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wCACvD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oCACtB,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;6BACF;yBACF;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,+BAA+B;YAC/B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAE3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EACnD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QArPA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,gBAAS,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/C,CAAC;;AA9BH,kCAoQC;AA5PQ,sBAAU,GAAW,CAAC,CAAC;AACvB,iBAAK,GAAW,EAAE,CAAC;AACnB,iBAAK,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;AC7B3B,mEAA0C;AAG1C,oGAAkD;AAClD,iGAAgD;AAEhD,wGAAsD;AACtD,uGAAoD;AAEpD,sFAAyC;AAEzC,6GAAwD;AACxD,+FAAgD;AAChD,6EAAoC;AACpC,6EAAoC;AACpC,8HAAgE;AAChE,2FAAmD;AACnD,qFAAyC;AACzC,2FAA4C;AAE5C,4FAA8C;AAC9C,iGAA+C;AAC/C,8GAAwD;AACxD,kFAAuC;AACvC,gHAA0D;AAC1D,6EAAoC;AACpC,yFAA2C;AAC3C,8FAA8C;AAE9C,2GAAsD;AACtD,iGAAgD;AAEhD,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,qDAAI;IACJ,iDAAE;IACF,uDAAK;IACL,qDAAI;AACN,CAAC,EALW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK1B;AAED,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,6CAAK;IACL,mDAAQ;IACR,mDAAQ;IACR,2CAAI;IACJ,6CAAK;AACP,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AAgBD,MAAa,MAAO,SAAQ,mBAAQ;IAiGlC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,EAAE,CAAC;QAvEA,mBAAc,GAAG,CAAC,CAAC;QAuB7B,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,EAAE,CAAC;QAC5B,eAAU,GAAW,CAAC,CAAC;QASvB,qBAAqB;QACrB,oBAAe,GAAW,CAAC,CAAC;QAU5B,eAAU,GAAW,SAAS,CAAC;QAC/B,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAW,CAAC,CAAC;QAC3B,cAAS,GAAW,CAAC,CAAC;QACtB,iBAAY,GAAW,CAAC,CAAC;QAKzB,WAAM,GAAY,KAAK,CAAC;QACxB,YAAO,GAAW,CAAC,CAAC;QACpB,oBAAe,GAAY,IAAI,CAAC;QAChC,qBAAgB,GAAY,IAAI,CAAC;QACjC,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAY,IAAI,CAAC;QAC3B,qBAAgB,GAAY,KAAK,CAAC;QAClC,mBAAc,GAAY,KAAK,CAAC;QAChC,YAAO,GAAa,EAAE,CAAC;QAuKvB,cAAS,GAAG,GAAW,EAAE;YACvB,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;QAMF,gBAAW,GAAG,CAAC,eAAuB,CAAC,EAAE,UAAmB,KAAK,EAAE,EAAE;YACnE,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,OAAO,EAAE;gBACnC,IAAI,CAAC,MAAM,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,OAAO,EAAE;oBACZ,IAAI,CAAC,MAAM,IAAI,YAAY,CAAC;oBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;iBACvD;gBAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC3B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACvC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,mBAAQ,CAAC,cAAc,CACxC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,GAAG,EACH,EAAE,CACH,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CACtC,CAAC,UAAU,EAAE,EAAE,CACb,UAAU,YAAY,uBAAU,IAAI,UAAU,CAAC,MAAM,KAAK,IAAI,CACjE,CAAC;YACF,IAAI,KAAK,EAAE;gBACT,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACnB,CAAC,CAAC,CAAC;aACJ;YACD,4BAA4B;YAC5B,0BAA0B;YAC1B,qBAAqB;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACvC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,cAAwB,EAAE,EAAE,QAAiB,KAAK,EAAE,EAAE;YAC/D,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,MAAM,KAAK,GACT,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;gBACzC,CAAC,CAAC,IAAI,CAAC,SAAS;gBAChB,CAAC,CAAC,WAAW,CAAC;YAClB,qBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACzC,qCAAqC;YACrC,IAAI,IAAI,CAAC,IAAI,YAAY,eAAM,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE;gBACjE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAC/B,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAC/C,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACzB;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,WAAwB,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,WAAwB,EAAE,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CACpD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAC3B,CAAC;YACF,0BAA0B;YAC1B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,MAAc,EAAE,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAEpB,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAMxB,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC1C,OAAO,CACL,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CACzE,CAAC;QACJ,CAAC,CAAC;QAEF,uBAAkB,GAAG,CACnB,MAAc,EACd,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,YAAY,GAAG,6BAAa,CAAC,OAAO,CAAC;YACzC,IAAI,IAAI,KAAK,QAAQ;gBAAE,KAAK,GAAG,OAAO,CAAC;YACvC,IAAI,IAAI,KAAK,OAAO,EAAE;gBACpB,KAAK,GAAG,SAAS,CAAC;gBAClB,YAAY,GAAG,KAAK,CAAC;aACtB;YACD,IAAI,IAAI,KAAK,MAAM,EAAE;gBACnB,KAAK,GAAG,SAAS,CAAC;gBAClB,YAAY,GAAG,6BAAa,CAAC,OAAO,CAAC;aACtC;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CACtB,IAAI,2BAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,CACzE,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,+BAA+B;YAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7B,0BAA0B;YAE1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;gBAC1C,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;gBAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;aAC3D;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACnC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEO,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,UAAmB,IAAI,EAAE,EAAE;YACnE,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,cAAc,GAAG,CAAC,KAAa,EAAE,KAAa,EAAW,EAAE;gBAC7D,OAAO,CACL,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CACrE,CAAC;YACJ,CAAC,CAAC;YAEF,IAAI,aAAa,GAAG,CAAC,MAAc,EAAW,EAAE;gBAC9C,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC;oBAAE,IAAI,GAAG,KAAK,CAAC;gBACrE,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC;oBAAE,IAAI,GAAG,KAAK,CAAC;gBACrE,IACE,gBAAgB;oBAChB,MAAM,CAAC,WAAW;oBAClB,MAAM,CAAC,CAAC,IAAI,CAAC;oBACb,MAAM,CAAC,CAAC,IAAI,CAAC;oBACb,IAAI,KAAK,IAAI,EACb;oBACA,MAAM,CAAC,IAAI,CAAC,IAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBACxB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAa,CAAC,CAAC;wBACpD,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBAC9C;oBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEtD,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC3C;gBAED,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEF,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,IAAI,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE;oBAC7C,IAAI,GAAG,IAAI,CAAC;iBACb;aACF;YACD,IAAI,IAAI;gBAAE,OAAO;YAEjB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAClE,OAAO;iBACR;aACF;YACD,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gBAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oBAClC,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE;wBAC9C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,YAAY,WAAI,CAAC;wBACtD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,YAAY,uBAAU,CAAC,EAC5D;wBACA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACjD;yBAAM;wBACL,OAAO;qBACR;iBACF;aACF;YACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBAC5B,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;QACH,CAAC,CAAC;QAEO,cAAS,GAAG,GAAG,EAAE;YACxB,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,oCAAoC;YACtE,IAAI,eAAe,GAAG,WAAW,CAAC;YAClC,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC/D,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,IAAI,QAAQ,GAAG,eAAe,EAAE;wBAC9B,eAAe,GAAG,QAAQ,CAAC;wBAC3B,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBACtC;iBACF;aACF;YAED,IAAI,eAAe,KAAK,WAAW;gBAAE,OAAO,KAAK,CAAC;;gBAC7C,OAAO,aAAa,CAAC;QAC5B,CAAC,CAAC;QAEF,WAAM,GAAG,CACP,SAAiB,CAAC,EAClB,OAA6C,MAAM,EACnD,EAAE,GAAE,CAAC,CAAC;QAER,SAAI,GAAG,CACL,WAAmB,EACnB,MAAc,EACd,OAA6C,MAAM,EACnD,EAAE;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAElC,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,YAAY,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD;;;;;cAKE;YAEF,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,gBAAgB;gBACvD,aAAK,CAAC,SAAS,EAAE,CAAC;YAEpB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,iCAAiC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAE1B,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,gBAAgB;gBAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACjE,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAEtB,oEAAoE;YACpE,IAAI,IAAI,CAAC,OAAO,IAAI,WAAW,EAAE;gBAC/B,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;aAC7D;YAED,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACxD,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;YAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;;gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE;YACZ,qDAAqD;YACrD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,yCAAyC;YACzC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE;gBAC/C,4BAA4B;gBAC5B,MAAM,UAAU,GAAG;oBACjB,gBAAS,CAAC,EAAE;oBACZ,gBAAS,CAAC,IAAI;oBACd,gBAAS,CAAC,IAAI;oBACd,gBAAS,CAAC,KAAK;iBAChB,CAAC;gBACF,MAAM,eAAe,GACnB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE5D,+CAA+C;gBAC/C,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;gBACrB,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;gBAErB,QAAQ,eAAe,EAAE;oBACvB,KAAK,gBAAS,CAAC,EAAE;wBACf,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;wBACrB,MAAM;iBACT;gBAED,qCAAqC;gBACrC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAE3B,uEAAuE;gBACvE,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;oBACtC,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;oBACjC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;oBACjC,MAAM;iBACP;aACF;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,OAAO;aACR;YAED,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACpE,IAAI,QAAQ,GAAG,EAAE,EAAE;gBACjB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,OAAO;aACR;YAED,qDAAqD;YACrD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YAEpB,wDAAwD;YACxD,MAAM,YAAY,GAAG;gBACnB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;gBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;gBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBAC5B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;aAC7B,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBACnB,QAAQ;gBACR,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrE,CAAC,CAAC,CAAC;YAEJ,oCAAoC;YACpC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAErD,4CAA4C;YAC5C,MAAM,oBAAoB,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;YACjD,MAAM,cAAc,GAClB,oBAAoB,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC;gBAC7C,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAC1B,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAE/B,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC;YACjC,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC;YAEjC,qCAAqC;YACrC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE3B,2DAA2D;YAC3D,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;gBACtC,yCAAyC;gBACzC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;gBACzB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;gBAEzB,IAAI,EAAE,GAAG,CAAC,EAAE;oBACV,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iBAClC;qBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iBACjC;qBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iBACjC;qBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iBAC/B;gBAED,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAClC;iBAAM;gBACL,wCAAwC;gBACxC,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,MAAc,EAAE,EAAE,GAAE,CAAC,CAAC;QAElC,oBAAe,GAAG,CAAC,WAAoB,EAAE,EAAE,GAAE,CAAC,CAAC;QAE/C,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,IAAI,CAAC,QAAQ;gBAAE,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,SAAkB,EAAE,SAAkB,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,IAAI,CAAC,IAAI,CAAC,eAAe;gBAAE,OAAO;YAClC,IAAI,CAAC,SAAS;gBAAE,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;YAChD,IAAI,CAAC,SAAS;gBAAE,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;YAChD,6BAAa,CAAC,YAAY,CACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,SAAS,EACT,SAAS,CACV,CAAC;QACJ,CAAC,CAAC;QAEQ,aAAQ,GAAG,GAAG,EAAE;YACxB,IAAI,MAAc,CAAC;YACnB,IAAI,MAAc,CAAC;YACnB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBACpB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;aACrB;iBAAM;gBACL,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAChB,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;aACjB;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,mFAAmF;gBACnF,MAAM,UAAU,GAA+B,EAAE,CAAC;gBAClD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;oBAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wBAClC,MAAM,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;wBACvB,MAAM,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;wBACvB,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;4BACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;4BAC3B,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EACtC;4BACA,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;yBACnC;qBACF;iBACF;gBAED,uEAAuE;gBACvE,IACE,UAAU,CAAC,MAAM,KAAK,CAAC;oBACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;oBACnC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAC9C;oBACA,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;iBAC3C;gBAED,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;gBAE/B,gGAAgG;gBAChG,MAAM,UAAU,GACd,UAAU,CAAC,MAAM,GAAG,CAAC;oBACnB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC;oBAC/C,CAAC,CAAC,CAAC,CAAC;gBAER,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzB,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;wBACjE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC/B;yBAAM,IACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;wBACnC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAC9C;wBACA,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;wBAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;wBAChB,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC;qBACjC;oBACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO;wBAAE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAC/C,CAAC,CAAC,CAAC;gBAEH,gFAAgF;gBAChF,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvE,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;wBACtB,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO;4BAAE,IAAI,CAAC,UAAU,EAAE,CAAC;oBAC/C,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAe,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YAExB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAEhC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxC,oEAAoE;YACpE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEzC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAE9B,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC;gBACxB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;aACF;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IACE,6BAAa,CAAC,eAAe;gBAC7B,CAAC,6BAAa,CAAC,4BAA4B;gBAE3C,OAAO,CAAC,CAAC;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAE,OAAO,CAAC,CAAC;YACzC,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACpD,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC;gBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;YAC1D,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC;gBAAE,IAAI,CAAC,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC;YACnE,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC;gBAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,CAAC,GAAW,EAA4B,EAAE;gBACzD,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC1C,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;gBAC/B,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC9B,MAAM,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;gBACvB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC;YACF,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,CAAC,GAA6B,EAAU,EAAE;gBACzD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;gBACtB,OAAO,CACL,GAAG;oBACH,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;yBACnC,QAAQ,CAAC,EAAE,CAAC;yBACZ,KAAK,CAAC,CAAC,CAAC;yBACR,WAAW,EAAE,CACjB,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC5D,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE9D,wBAAwB;YACxB,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;YAC5B,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;YAC5B,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;YAE5B,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;gBAAE,KAAK,GAAG,IAAI,CAAC;YACtC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;gBAAE,KAAK,GAAG,IAAI,CAAC;YACtC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;gBAAE,KAAK,GAAG,IAAI,CAAC;YAEtC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;gBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC;aAC5B;YAED,IAAI,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAEzC,0CAA0C;YAC1C,IAAI,KAAK,EAAE;gBACT,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBACrB,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrE,OAAO,GAAG,IAAI,CAAC;aAChB;YAED,IAAI,KAAK,EAAE;gBACT,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBACrB,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrE,OAAO,GAAG,IAAI,CAAC;aAChB;YAED,IAAI,KAAK,EAAE;gBACT,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBACrB,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrE,OAAO,GAAG,IAAI,CAAC;aAChB;YAED,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,YAAwC,CAAC,CAAC;aAC1E;YAED,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,eAAe,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,sCAAsC;YACpF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAE7B,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,OAAO;gBAAE,UAAU,GAAG,CAAC,CAAC;YACjC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,UAAU,GAAG,eAAe,CAAC,CAAC;YAC3E,IAAI,CAAC,IAAI,CAAC,OAAO;gBAAE,OAAO;YAC1B,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,YAAY,EAAE;gBACvC,OAAO,EAAE,IAAI,CAAC,IAAI;gBAClB,EAAE,EAAE,EAAE;aACP,CAAC,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM;gBAAE,OAAO;YAEpB,IAAI,6BAAa,CAAC,gBAAgB,EAAE;gBAClC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACvE,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,GAAY,EAAE;YACzB,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;QAC1E,CAAC,CAAC;QAEF,kBAAa,GAAG,GAA6B,EAAE;YAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,oCAAoC;YACtE,IAAI,eAAe,GAAG,WAAW,CAAC;YAClC,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC/D,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,IAAI,QAAQ,GAAG,eAAe,EAAE;wBAC9B,eAAe,GAAG,QAAQ,CAAC;wBAC3B,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBACtC;iBACF;aACF;YAED,IAAI,eAAe,KAAK,WAAW;gBAAE,OAAO,KAAK,CAAC;;gBAC7C,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAC/C,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,MAAc,EAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,MAAc,EAAE,EAAE;YAC/B,IAAI,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjC,IAAI,eAAe,GAAG,OAAO,CAAC;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,QAAQ,GACV,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxE,IAAI,QAAQ,GAAG,eAAe,EAAE;wBAC9B,eAAe,GAAG,QAAQ,CAAC;wBAC3B,WAAW,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;qBAChD;iBACF;aACF;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,EAAE;YAC9B,mDAAmD;YACnD,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;gBAChC,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;gBACnC,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;gBAEnC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,aAAa,CAAC;gBAClC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,aAAa,CAAC;gBAElC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBACjC,oCAAoC;iBACrC;qBAAM,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBACtC,IAAI,EAAE,GAAG,CAAC;wBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;oBAC7C,IAAI,EAAE,GAAG,CAAC;wBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC7C;qBAAM;oBACL,IAAI,EAAE,GAAG,CAAC;wBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;oBAC5C,IAAI,EAAE,GAAG,CAAC;wBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iBAC3C;gBACD,OAAO;aACR;YAED,gEAAgE;YAChE,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACnE,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAEtE,iFAAiF;YACjF,IAAI,SAAS,IAAI,YAAY,EAAE;gBAC7B,OAAO;aACR;YACD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAE7C,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAClC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAElC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBAC/B,IAAI,EAAE,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;gBAC7C,IAAI,EAAE,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;aAC7C;iBAAM;gBACL,IAAI,EAAE,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;gBAC5C,IAAI,EAAE,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;aAC3C;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,iBAAiB;gBACjB,IAAI,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;gBAElD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;oBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC5B;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACxB;YACD;;;;;;;;;;;;;cAaE;YACF,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAC/B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF;;eAEG;YACH,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,8EAA8E;QAC9E,eAAU,GAAG,CAAC,KAAa,EAAE,EAAE;YAC7B,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACxD,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAS,EAAE;YAC1B,yBAAc,CAAC,IAAI,CAAC,YAAY,EAAE;gBAChC,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;aACnC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,2BAA2B;YAE3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAErC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAa,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,EAAE;YAC3D,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC;YAE7B,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,aAAa;YACjD,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,oEAAoE;YACpE,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;gBACzC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;gBAErE,IAAI,IAAI,GAAG,CAAC,CAAC;gBACb,IAAI,GAAG,KAAK,CAAC;oBAAE,IAAI,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,GAAG,CAAC;gBACtC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,GAAG,CAAC;gBAEtC,IAAI,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gBACxC,IAAI,6BAAa,CAAC,aAAa;oBAAE,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC9D,WAAI,CAAC,eAAe,CAClB,GAAG,EACH,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,OAAO,EACpE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,IAAI,GAAG,OAAO,EACxD,6BAAa,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;gBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,EAAE;YAC5D,IAAI,CAAC,gBAAgB,IAAI,KAAK,CAAC;YAE/B,IAAI,IAAI,GAAmB,CAAC,CAAC;YAC7B,IAAI,KAAK,GAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM;gBAAE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;gBACpE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAEzC,IAAI,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;YACxC,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YACzB,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,WAAI,CAAC,eAAe,CAClB,GAAG,EACH,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,OAAO,EAC7D,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,IAAI,GAAG,OAAO,EACzD,6BAAa,CAAC,OAAO,EACrB,6BAAa,CAAC,WAAW,CAC1B,CAAC;aACH;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,MAAc,CAAC;YACnB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC/B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,IAAI,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;YACD,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC1C,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;aACrB;iBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC3B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;aACrB;QACH,CAAC,CAAC;QACF,mDAAmD;QACnD,mDAAmD;QACnD,qCAAqC;QACrC,8EAA8E;QAC9E,WAAM,GAAG,CAAC,QAAiB,EAAE,KAAa,EAAE,SAAqB,EAAE,EAAE;YACnE,IAAI,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAElC,IAAI,QAAQ,EAAE;gBACZ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEvC,IAAI,SAAS,KAAK,gBAAS,CAAC,IAAI,IAAI,SAAS,KAAK,gBAAS,CAAC,KAAK,EAAE;oBACjE,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC;iBACzB;qBAAM,IACL,SAAS,KAAK,gBAAS,CAAC,EAAE;oBAC1B,SAAS,KAAK,gBAAS,CAAC,IAAI;oBAC5B,CAAC,SAAS,EACV;oBACA,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC;iBACzB;gBACD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC3B;YACD,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC;QAEF,+BAA0B,GAAG,CAC3B,OAAmC,EACnC,eAAyE,EACzE,UAAmB,KAAK,EACxB,YAAqB,IAAI,EACzB,kBAA2B,KAAK,EAChC,EAAE;YACF,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBAClC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBAElC,IACE,CAAC,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,EACrE;oBACA,IAAI,eAAe;wBAAE,MAAM;oBAC3B,SAAS;iBACV;gBAED,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBAExD,IAAI,eAAe;oBAAE,MAAM;aAC5B;QACH,CAAC,CAAC;QAEM,8BAAyB,GAAG,CAClC,CAAS,EACT,CAAS,EACT,OAAgB,EAChB,SAAkB,EACT,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACjD,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACvE,IAAI,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YAE1D,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,OAAO,UAAU,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACnE,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC5B,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAC7C,CAAC;QACJ,CAAC,CAAC;QAEM,oBAAe,GAAG,CACxB,eAKe,EACf,CAAS,EACT,CAAS,EACT,KAAgC,EAChC,EAAE;YACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC;QAEF,gBAAW,GAAG,CACZ,MAAc,EACd,MAAc,EACd,IAAY,EACZ,IAAY,EACH,EAAE;YACX,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;YACpC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,IAAI,CAAC,GAAG,MAAM,CAAC;YAEf,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;gBAC/B,CAAC,IAAI,EAAE,CAAC;gBACR,CAAC,IAAI,EAAE,CAAC;gBACR,IACE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EACpC;oBACA,OAAO,KAAK,CAAC;iBACd;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAuBF,iBAAY,GAAG,GAAW,EAAE;YAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAW,EAAE;YACjC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;oBAC5D,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACvB,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7B,KAAK,EAAE,CAAC;yBACT;qBACF;iBACF;aACF;YACD,OAAO,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAA6B,EAAE;YAC3C,IAAI,CAAC,EAAE,CAAC,CAAC;YACT,GAAG;gBACD,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/C,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAChD,QACC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;gBACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,uBAAU;gBAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,WAAI;gBACzC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,WAAI;gBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EACtD;YAEF,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;YAC9C,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAClB,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,QAAQ,IAAI,CAAC,SAAS,EAAE;gBACtB,KAAK,gBAAS,CAAC,IAAI;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACzC,MAAM;gBACR,KAAK,gBAAS,CAAC,KAAK;oBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC7C,MAAM;gBACR,KAAK,gBAAS,CAAC,EAAE;oBACf,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzC,MAAM;gBACR,KAAK,gBAAS,CAAC,IAAI;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC7C,MAAM;aACT;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,CAChB,KAAa,IAAI,CAAC,CAAC,EACnB,KAAa,IAAI,CAAC,CAAC,EACnB,aAAsB,KAAK,EAC3B,oBAAkE,IAAI,EACtE,EAAE;YACF,IAAI,IAAI,CAAC,WAAW;gBAAE,OAAO;YAC7B,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,EAAE,CAAC;YACxC,MAAM,cAAc,GAAG,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;YAC1D,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAE7C,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACnC,IAAI,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACzC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE3C,QAAQ,iBAAiB,EAAE;gBACzB,KAAK,UAAU;oBACb,QAAQ,GAAG,IAAI,CAAC;oBAChB,UAAU,GAAG,KAAK,CAAC;oBACnB,WAAW,GAAG,KAAK,CAAC;oBACpB,MAAM;gBACR,KAAK,YAAY;oBACf,UAAU,GAAG,IAAI,CAAC;oBAClB,QAAQ,GAAG,KAAK,CAAC;oBACjB,WAAW,GAAG,KAAK,CAAC;oBACpB,MAAM;gBACR,KAAK,SAAS;oBACZ,WAAW,GAAG,IAAI,CAAC;oBACnB,UAAU,GAAG,IAAI,CAAC;oBAClB,QAAQ,GAAG,KAAK,CAAC;oBACjB,MAAM;aACT;YAED,MAAM,eAAe,GAAG,CACtB,YAAqB,EACrB,KAAa,EACD,EAAE;gBACd,MAAM,WAAW,GAAG,YAAY;oBAC9B,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,EAAE,CAAC,CAAC;qBACP;oBACH,CAAC,CAAC;wBACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC;wBACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACR,CAAC;gBACN,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CACtE,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC;YAEF,IAAI,OAAO,GAAe,EAAE,CAAC;YAC7B,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;oBACZ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;iBACb,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,UAAU;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;gBACnE,IAAI,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;aAClE;YAED,MAAM,kBAAkB,GAAG,OAAO;iBAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClB,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,aAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;aAC/D,CAAC,CAAC;iBACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC1E,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAE9D,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBAClC,MAAM,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvB,MAAM,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvB,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;oBAC7C,MAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,IAAI,CAAC,IAAI,EACT,OAAO,EACP,OAAO,EACP,EAAE,EACF,EAAE,EACF,IAAI,EACJ,UAAU,EACV,IAAI,CACL,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACvC,oCAAoC;iBACrC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACrD,MAAM,SAAS,GACb,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAChE,MAAM,SAAS,GACb,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACjE,MAAM,UAAU,GACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC;YAEpE,OAAO,SAAS,IAAI,SAAS,IAAI,UAAU,CAAC;QAC9C,CAAC,CAAC;QA73CA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAE3C,iCAAiC;QACjC,MAAM,SAAS,GAAI,IAAI,CAAC,WAAmB,CAAC,WAAW,CAAC;QAExD,iDAAiD;QACjD,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;;YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAE3B,+DAA+D;QAC/D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,GAAG,CAQC,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,GAAG,IAAW;QACrE,qDAAqD;QACrD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/C,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACvE,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;YAClC,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC;SACb;QAED,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,QAAgB;QACjC,oEAAoE;QACnE,QAAQ,CAAC,WAAmB,CAAC,WAAW,GAAG,IAAI,CAAC;QAEjD,uBAAuB;QACvB,MAAM,MAAM,GAAG,IAAK,QAAQ,CAAC,WAA6B,CACxD,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACX,CAAC;QAEF,4BAA4B;QAC5B,OAAQ,QAAQ,CAAC,WAAmB,CAAC,WAAW,CAAC;QAEjD,kDAAkD;QAClD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;YACpB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,eAAe,EAAE,QAAQ,CAAC,eAAe;YACzC,cAAc,EAAE,QAAQ,CAAC,cAAc;YACvC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,UAAU,EAAE,CAAC;YACb,cAAc,EAAE,CAAC;YACjB,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;QAEH,8BAA8B;QAC9B,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,6BAA6B;QAClD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,uCAAuC;QAE5D,OAAO,MAAM,CAAC;IAChB,CAAC;IAMD,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAqHD,IAAI,IAAI;QACN,OAAO,UAAU,CAAC,KAAK,CAAC;IAC1B,CAAC;IAy5BD,0BAA0B,CACxB,OAAe,EACf,OAAe,EACf,YAAoB;QAEpB,MAAM,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;QAC5B,MAAM,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;QAC5B,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,0BAA0B;QAC1B,MAAM,KAAK,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3C,6CAA6C;QAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,YAAY,EAAE,CAAC,EAAE,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;SAC9C;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CAsLF;AAj+CD,wBAi+CC;;;;;;;;;;;;;;;AC9hDD,gFAAmC;AAEnC,sEAAkC;AAClC,gFAAuC;AAEvC,+HAAoE;AACpE,gFAAuC;AACvC,4FAA8C;AAE9C,MAAa,MAAO,SAAQ,eAAM;IAChC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAqB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA9CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iCAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;IACH,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AAlDD,wBAkDC;;;;;;;;;;;;;;;AC3DD,gFAAmC;AAEnC,sEAAkC;AAIlC,gFAAuC;AAEvC,qFAA0C;AAC1C,qGAAkD;AAClD,4FAA8C;AAC9C,MAAa,KAAM,SAAQ,eAAM;IAC/B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAqB1B,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAnDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,uBAAuB;QACvB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,kCAAkC;QAClC,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CAkCF;AAvDD,sBAuDC;;;;;;;;;;;;;;;AClED,gFAAmC;AAEnC,sEAAkC;AAGlC,yHAAiE;AACjE,gFAAuC;AAGvC,4FAA8C;AAE9C,qFAA0C;AAC1C,6GAAyD;AAGzD,oGAAmD;AAGnD,2GAAuD;AACvD,yFAA4C;AAE5C,MAAa,IAAK,SAAQ,eAAM;IAM9B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAN1B,eAAU,GAAW,CAAC,CAAC;QACvB,QAAG,GAAY,KAAK,CAAC;QACrB,gBAAW,GAAkB,IAAI,CAAC;QAElC,gBAAW,GAAY,KAAK,CAAC;QA8B7B,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YAExB,2EAA2E;QAC7E,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,iDAAiD;gBACjD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;oBACxB,oBAAoB;oBACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAChC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,aAAK,CAAC,QAAQ,EAAE,CAAC;iBAClB;aACF;QACH,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,GAAG;gBAAE,OAAO;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EACd,IAAI,CACL,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,WAAmB,EAAE,MAAc,EAAE,EAAE;YAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBAC/B,aAAK,CAAC,QAAQ,EAAE,CAAC;aAClB;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5C,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5C,IACE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;wBAC3B,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACpC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,EAC1C;wBACA,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC9D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACvC;iBACF;aACF;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,mBAAQ,CAAC,cAAc,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EACd,GAAG,EACH,EAAE,EACF,CAAC,CACF,CAAC;YAEF,iCAAe,CAAC,YAAY,CAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,OAAO,CACR,CAAC;YACF,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EACzB,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EACzB,KAAK,CACN,CAAC;YACJ,CAAC,EAAE,GAAG,CAAC,CAAC;YAER,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;YACpB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAChB;YACD,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACxD,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,GAAG,EAAE;oBACZ,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK;wBACR,CAAC;wBACD,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;wBAChC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EACnC,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;qBAAM;oBACL,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,GAAG,CAAC,EACd,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;iBACH;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QArKA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,aAAK,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6IF;AA9KD,oBA8KC;;;;;;;;;;;;;;;ACnMD,gFAAmC;AAEnC,sEAAkC;AAKlC,gFAAuC;AAEvC,qFAA0C;AAE1C,MAAa,IAAK,SAAQ,eAAM;IAC9B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAmB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA5CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC;QAC/B,0DAA0D;IAC5D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AAhDD,oBAgDC;;;;;;;;;;;;;;;AC3DD,sEAAkC;AAElC,gFAAmC;AAEnC,gFAAuC;AACvC,4FAA8C;AAI9C,qFAA0C;AAE1C,MAAa,KAAM,SAAQ,eAAM;IAM/B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAgC1B,aAAQ,GAAG,CAAC,WAAmB,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;gBACjB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO;aACR;YAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO;YAE9B,uBAAuB;YACvB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC;aAC3D;YAED,MAAM,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,EAAE;gBACnC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;gBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;QACH,CAAC,CAAC;QAEM,SAAI,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAEf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,aAAK,CAAC,KAAK,EAAE,CAAC;YAEd,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;gBACpB,IAAI,CAAC,OAAO,CACV,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EACxD,IAAI,CACL,CAAC;YAEJ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBACxB,IAAI,KAAK,GAAG,WAAI,CAAC,SAAS,CACxB;wBACE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;wBACnE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;wBACjE,GAAG;qBACJ,EACD,eAAM,CAAC,IAAI,CACZ,CAAC;oBACF,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI;wBAAE,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;oBACjE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,qBAAqB;iBACtB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;oBACnB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;aACF;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC;QA7HA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB;;;;;;;;UAQE;IACJ,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,KAAK,CAAC;IAC1B,CAAC;CAkGF;AAvID,sBAuIC;;;;;;;;;;;;;;;AClJD,sEAAkC;AAElC,gFAAmC;AAGnC,MAAa,UAAW,SAAQ,eAAM;IAEpC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAS1B,iBAAY,GAAG,GAAG,EAAE;YAClB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;gBAC3B,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBAClC,IAAI,CAAC,SAAS;wBACZ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9D,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,WAAI,CAAC,OAAO,CACV,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;QACH,CAAC,CAAC;QAhCA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;CA2BF;AArCD,gCAqCC;;;;;;;;;;;;;;;AC1CD,gFAAmC;AAEnC,sEAAkC;AAIlC,gFAAuC;AAEvC,+HAAoE;AACpE,gFAAuC;AACvC,4FAA8C;AAE9C,MAAa,KAAM,SAAQ,eAAM;IAC/B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAsB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA/CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iCAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;IACH,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AAnDD,sBAmDC;;;;;;;;;;;;;;;AC/DD,gFAAmC;AAEnC,sEAAkC;AAClC,gFAAuC;AAKvC,MAAa,SAAU,SAAQ,eAAM;IACnC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAgB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAzCA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AA7CD,8BA6CC;;;;;;;;;;;;;;;ACrDD,gFAAmC;AAEnC,sEAAkC;AAClC,iGAAgD;AAGhD,gFAAuC;AAGvC,4FAA8C;AAC9C,gFAAuC;AACvC,qFAA0C;AAE1C,8FAA8C;AAC9C,mFAAgD;AAChD,iGAAiD;AACjD,2GAAyD;AAEzD,MAAa,WAAY,SAAQ,eAAM;IAIrC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAJ1B,cAAS,GAAW,CAAC,CAAC;QACtB,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC;QA4BvB,SAAI,GAAG,CAAC,MAAc,EAAQ,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;gBACzD,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC;gBACrD,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAEpC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACrC,aAAK,CAAC,eAAe,EAAE,CAAC;YACxB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,aAAK,CAAC,eAAe,EAAE,CAAC;gBAExB,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;oBAClB,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAClC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CACpC,CAAC;oBACF,IAAI,KAAK,KAAK,KAAK,EAAE;wBACnB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC/D;oBACD,OAAO,GAAG,mBAAmB,CAAC;oBAC9B,aAAK,CAAC,gBAAgB,EAAE,CAAC;oBACzB,IAAI,eAAe,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,sCAAsC;oBACpF,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,eAAe,CAAC,CAAC;oBACjE,oBAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBAE5B,IAAI,6BAAa,CAAC,gBAAgB,EAAE;wBAClC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACtE;oBACD,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;wBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;qBACrB;iBACF;qBAAM;oBACL,OAAO,GAAG,2BAA2B,CAAC;iBACvC;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACpC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;YAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;gBACvB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,MAAc,EAAQ,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YACtC,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;YACD,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;YAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC3B,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA7GA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;QAEhD,iCAAiC;QACjC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,QAAQ,GAAG,KAAK;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;YACvE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CAuFF;AApHD,kCAoHC;;;;;;;;;;;;;;;ACtID,gFAAmC;AAEnC,sEAAkC;AAKlC,gFAAuC;AACvC,6GAAyD;AAKzD,+FAA+C;AAE/C,MAAa,OAAQ,SAAQ,eAAM;IACjC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA6B1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAtDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EACZ,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AA1DD,0BA0DC;;;;;;;;;;;;;;;ACzED,gFAAmC;AAEnC,sEAAkC;AAIlC,uGAAoD;AACpD,gFAAuC;AAGvC,MAAa,SAAU,SAAQ,eAAM;IACnC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA3CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA8BF;AA/CD,8BA+CC;;;;;;;;;;;;;;;ACzDD,gFAAmC;AAEnC,sEAAkC;AAClC,iGAAgD;AAGhD,gFAAuC;AAGvC,4FAA8C;AAC9C,gFAAuC;AACvC,qFAA0C;AAE1C,MAAa,GAAI,SAAQ,eAAM;IAC7B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAsB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA/CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,IAAI,CAAC,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,QAAQ,GAAG,KAAK;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;YACvE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA6BF;AAnDD,kBAmDC;;;;;;;;;;;;;;;AChED,gFAAmC;AAEnC,sEAAkC;AAClC,iGAAgD;AAIhD,gFAAuC;AACvC,gFAAuC;AAEvC,4FAA8C;AAG9C,MAAa,WAAY,SAAQ,eAAM;IAErC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAW;QACnE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAuB1B,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACnD,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QArDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACtB;YACH,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;YAC7B,IAAI,QAAQ,GAAG,KAAK;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;gBACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CAkCF;AA1DD,kCA0DC;;;;;;;;;;;;;;;ACvED,gFAAmC;AAEnC,sEAAkC;AAKlC,gFAAuC;AACvC,6GAAyD;AAGzD,kGAAiD;AAGjD,MAAa,OAAQ,SAAQ,eAAM;IACjC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA6B1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAvDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EACZ,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA8BF;AA3DD,0BA2DC;;;;;;;;;;;;;;;ACzED,gFAAmC;AAEnC,sEAAkC;AAKlC,gFAAuC;AAGvC,MAAa,MAAO,SAAQ,eAAM;IAChC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiB1B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAzCA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,0DAA0D;IAC5D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA4BF;AA7CD,wBA6CC;;;;;;;;;;;;;;;ACvDD,gFAAmC;AAEnC,sEAAkC;AAIlC,gFAAuC;AACvC,wGAAiD;AACjD,4FAA8C;AAI9C,6GAAwD;AACxD,qFAA0C;AAE1C,6GAAyD;AAEzD,MAAa,SAAU,SAAQ,eAAM;IAGnC,YACE,IAAU,EACV,IAAU,EACV,CAAS,EACT,CAAS,EACT,WAAmB,CAAC,EACpB,IAAW;QAEX,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAoC1B,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,SAAiB,CAAC,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;qBACxB,aAAa,EAAE;qBACf,MAAM,CACL,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAClE,CAAC;gBACJ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxB,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;wBAC9B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;4BACjC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvC,IACE,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,IAAI,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;gCAClD,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,IAAI,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,EAClD;gCACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,IAAI,uBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAC7D,CAAC;6BACH;yBACF;qBACF;oBACD,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;iBACvC;gBACD,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;gBAChB,wEAAwE;aACzE;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAE3C,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,qCAAqC;YACrC,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EACtC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA/FA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,qBAAqB;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,wBAAwB;QACxB,0BAA0B;QAC1B,2BAA2B;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,QAAQ,GAAG,IAAI;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EACX,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CA+DF;AA5GD,8BA4GC;;;;;;;;;;;;;;;AC7HD,gFAAmC;AAEnC,sEAAkC;AAKlC,gFAAuC;AAEvC,iGAAgD;AAChD,qFAA0C;AAC1C,4FAA8C;AAE9C,MAAa,IAAK,SAAQ,eAAM;IAC9B,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAuB1B,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,aAAK,CAAC,QAAQ,EAAE,CAAC;QACnB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAC1C,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAC1C,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAvDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,uBAAuB;QACvB,0DAA0D;IAC5D,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CAmCF;AA3DD,oBA2DC;;;;;;;;;;;;;;;ACvED,sEAAkC;AAElC,gFAAmC;AAGnC,gFAAuC;AAEvC,8GAAwD;AACxD,2GAAyD;AACzD,uGAAoD;AAEpD,mFAAyC;AACzC,iGAAgD;AAChD,iGAAgD;AAChD,2GAAsD;AACtD,gHAA0D;AAC1D,qGAAmD;AACnD,wGAAoD;AACpD,gFAAuC;AACvC,4FAA8C;AAC9C,6GAAwD;AACxD,+FAA+C;AAC/C,6GAAwD;AACxD,kGAAiD;AACjD,mGAAkD;AAClD,yFAA4C;AAC5C,4GAAwD;AACxD,gGAAgD;AAEhD,IAAI,SAAS,GAAG,GAAG,CAAC;AACpB,IAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,IAAI,aAAa,GAAG,SAAS,CAAC;AAC9B,IAAI,YAAY,GAAG,OAAO,CAAC;AAE3B,MAAa,cAAe,SAAQ,eAAM;IAUxC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU;QAClE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAT1B,SAAI,GAAG,KAAK,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QAGb,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC;QACb,kBAAa,GAAG,CAAC,CAAC;QA2ClB,YAAO,GAAG,CACR,QAAgB,CAAC,EACjB,SAAkB,EAClB,MAAiB,EACjB,WAAmB,CAAC,EACpB,EAAE;YACF,mEAAmE;YACnE,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE;gBACzB,2DAA2D;gBAC3D,MAAM,aAAa,GAAG;oBACpB,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC5B,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC7B,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC3B,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;iBAC1B,CAAC;gBACF,MAAM,QAAQ,GAAG,WAAI,CAAC,SAAS,CAAC,aAAa,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBAE5D,IAAI,QAAQ,YAAY,WAAI,EAAE;oBAC5B,QAAQ,CAAC,UAAU,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;iBACjE;qBAAM;oBACL,QAAQ,CAAC,UAAU,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;iBAC9D;gBACD,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC;gBAE7B,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC7B;iBAAM;gBACL,qCAAqC;gBACrC,MAAM,SAAS,GAAG,WAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBACtD,MAAM,QAAQ,GAAG,WAAI,CAAC,SAAS,CAAC,SAAS,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBACxD,QAAQ,CAAC,UAAU,GAAG,SAAS,CAAC;gBAChC,iCAAiC;gBACjC,kEAAkE;gBAClE,GAAG;gBACH,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC;QAEF,cAAS,GAAG,GAAW,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,IAAI;gBAAE,OAAO,iBAAiB,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;gBAAE,OAAO,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACtD,OAAO,cAAc,CAAC;QACxB,CAAC,CAAC;QAkDF,aAAQ,GAAG,CAAC,MAAc,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACnC,IAAI,IAAI,CAAC,IAAI;oBAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC3B,IACE,IAAI,CAAC,YAAY,CAAC,kBAAkB;oBACpC,IAAI,CAAC,YAAY,CAAC,kBAAkB,KAAK,IAAI;oBAE7C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBAC/C,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAC7C;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC9C,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,0BAA0B;gBAC1B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;wBAChD,IAAI,SAAS,GAAG,CAAC,CAAC;wBAElB,IAAI,CAAC,YAAY,WAAI,EAAE;4BACrB,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;yBACrD;6BAAM;4BACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gCACjD,IAAI,IAAI,YAAY,CAAC,CAAC,WAAW,EAAE;oCACjC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC;iCAC9B;4BACH,CAAC,CAAC,CAAC;yBACJ;wBAED,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC;wBAE5D,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;wBAEjE,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,YAAY,UAAU,SAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAmB,CAAC,QAAQ,GAAG,YAAY,gBAAgB,CAC9G,CAAC;wBACF,OAAO;qBACR;iBACF;gBAED,+BAA+B;gBAC/B,IAAI,OAAO,GAAG,IAAK,IAAI,CAAC,IAAI,CAAC,WAAmB,CAC9C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;gBACF,gEAAgE;gBAEhE,iEAAiE;gBACjE,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAEvE,IAAI,CAAC,iBAAiB,EAAE;oBACtB,mDAAmD;oBACnD,mCAAmC;oBACnC,yCAAyC;oBACzC,GAAG;oBACH,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,mDAAmD,CACpD,CAAC;oBACF,OAAO;iBACR;gBAED,kDAAkD;gBAClD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;iBAClD;gBAED,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC1C,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEzC,oFAAoF;gBACpF,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;wBAAE,IAAI,CAAC,KAAK,EAAE,CAAC;iBACtC;gBAED,+CAA+C;gBAC/C,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,aAAc,OAAO,CAAC,WAAmB,CAAC,QAAQ,QAAQ,IAAI,IAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAmB,CAAC,QAAQ,GAAG,YAAY,EAAE,CACnI,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,oBAAoB,CAAC,CAAC;gBAE5D,0CAA0C;gBAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBAClE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC;gBAAE,KAAK,GAAG,EAAE,CAAC;YACnD,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAE3C,WAAI,CAAC,OAAO,CACV,KAAK,EACL,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;aACR;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IACE,IAAI,CAAC,IAAI;gBACT,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAChE;gBACA,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,cAAc;gBACrF,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;gBACpB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;gBAClB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,qBAAqB;gBACjC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;gBAC3B,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9D,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAE/B,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBACjD,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBAEjD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC;gBAClC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,EACjC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,EAClC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAC5B,CAAC;gBACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC;oBACnC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAClD,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,EAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACrB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACtB,CAAC;oBACF,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;wBAC/B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;wBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EACtD,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC,EACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,CAAC;qBACH;iBACF;gBAED,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;oBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CACpB,EAAE;4BACA,GAAG,GAAG,KAAK;4BACX,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACnB,CAAC;4BACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;wBACF,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CACpB,EAAE;4BACA,GAAG,GAAG,MAAM;4BACZ,CAAC;4BACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;wBAEF,IAAI,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;wBACjD,IAAI,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;wBAEjD,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;4BAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;4BACV,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gCAC9D,CAAC,GAAG,IAAI,CAAC;4BACX,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;yBAChE;6BAAM,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;4BACtC,WAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;yBACzD;6BAAM,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAChB,KAAK,EACL,WAAW,EACX,WAAW,EACX,CAAC,EACD,IAAI,CAAC,QAAQ,CACd,CAAC;yBACH;qBACF;iBACF;gBACD,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC;gBACzC,IAAI,6BAAa,CAAC,aAAa;oBAC7B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC5C,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC;gBAClC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,EACjC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,EAClC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAC5B,CAAC;gBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;aAC5B;QACH,CAAC,CAAC;QA1VA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,IAAI,CAAC,IAAI,YAAY,iBAAO,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,aAAK,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,2BAA2B;SACrF;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,aAAK,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,aAAK,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,uBAAU,EAAE;YAC1C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,iBAAO,EAAE;YACvC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,qBAAS,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,qBAAS,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,aAAK,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;SAC7C;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,eAAM,EAAE;YACtC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACzD;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,iBAAO,EAAE;YACvC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,aAAK,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1E;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,uBAAU,EAAE;YAC1C,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,aAAK,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1E;aAAM,IAAI,IAAI,CAAC,IAAI,YAAY,eAAM,EAAE;YACtC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,aAAK,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1E;IACH,CAAC;IA2FD,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,IAAI,CAAC;IACzB,CAAC;;AA9IH,wCAwWC;AAxQQ,4CAA6B,GAAG,CACrC,CAAS,EACT,CAAS,EACT,IAAoB,EACX,EAAE;IACX,4DAA4D;IAC5D,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE,kBAAkB;QAC9D,OAAO,KAAK,CAAC;IAEf,gCAAgC;IAChC,MAAM,aAAa,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9C,MAAM,aAAa,GAAG,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IAE/C,mEAAmE;IACnE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;IACxE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;IAExE,sEAAsE;IACtE,MAAM,WAAW,GAAG,aAAa,GAAG,OAAO,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAa,GAAG,OAAO,CAAC;IAE5C,mEAAmE;IACnE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,cAAc;IAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;IACpB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;IAClB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9D,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAE/B,wDAAwD;IACxD,iEAAiE;IACjE,IAAI,EAAE,GAAG,WAAW,CAAC;IACrB,IAAI,EAAE,GAAG,WAAW,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;IAElD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IAC/C,MAAM,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;IAC/C,MAAM,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAElD,oEAAoE;IACpE,OAAO,CACL,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,WAAW,CACvE,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;;;;;ACtKJ,8FAAsC;AAGtC,qGAAkD;AAClD,4FAA8C;AAG9C,iHAA0D;AAE1D,MAAa,aAAc,SAAQ,mBAAQ;IACzC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;CACF;AAbD,sCAaC;;;;;;;;;;;;;;;AC3BD,8FAAsC;AACtC,kGAAgD;AAChD,qGAAkD;AAClD,4FAA8C;AAE9C,MAAa,YAAa,SAAQ,mBAAQ;IACxC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;CACF;AAbD,oCAaC;;;;;;;;;;;;;;;ACdD,8GAAwD;AACxD,8FAAsC;AAGtC,qGAAkD;AAClD,4FAA8C;AAE9C,MAAa,eAAgB,SAAQ,mBAAQ;IAC3C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;CACF;AAbD,0CAaC;;;;;;;;;;;;;;;ACnBD,8FAAsC;AAGtC,qGAAkD;AAClD,4FAA8C;AAC9C,wGAAoD;AAEpD,MAAa,cAAe,SAAQ,mBAAQ;IAC1C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;CACF;AAbD,wCAaC;;;;;;;;;;;;;;;ACxBD,8FAAsC;AACtC,2GAAsD;AACtD,qGAAkD;AAClD,4FAA8C;AAC9C,MAAa,YAAa,SAAQ,mBAAQ;IACxC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AAdD,oCAcC;;;;;;;;;;;;;;;ACbD,8FAAsC;AAEtC,qGAAkD;AAClD,4FAA8C;AAE9C,MAAa,gBAAiB,SAAQ,mBAAQ;IAC5C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,wDAAwD;IAC1D,CAAC;CACF;AAfD,4CAeC;;;;;;;;;;;;;;;AC3BD,sEAAkC;AAKlC,gFAAmC;AAMnC,gFAAuC;AACvC,qFAA0C;AAE1C,MAAa,QAAS,SAAQ,eAAM;IAClC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAe1B,SAAI,GAAG,CAAC,WAAmB,EAAE,MAAc,EAAE,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,OAAO;gBAAE,OAAO;YACxD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,aAAK,CAAC,IAAI,EAAE,CAAC;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxB;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAe,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YAExB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEzC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;gBACvE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,yEAAyE;aAC1E;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEzB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACnB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAC1B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QA1EA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI,IAAI;QACN,OAAO,mBAAU,CAAC,QAAQ,CAAC;IAC7B,CAAC;CAgEF;AA/ED,4BA+EC;;;;;;;;;;;;;;;ACtFD,8FAAsC;AAEtC,qGAAkD;AAClD,4FAA8C;AAE9C,MAAa,IAAK,SAAQ,mBAAQ;IAChC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,wDAAwD;IAC1D,CAAC;CACF;AAfD,oBAeC;;;;;;;;;;;;;;;ACrBD,8FAAsC;AAGtC,qGAAkD;AAClD,4FAA8C;AAE9C,2GAAsD;AAEtD,MAAa,cAAe,SAAQ,mBAAQ;IAC1C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AAbD,wCAaC;;;;;;;;;;;;;;;AC5BD,gGAA8C;AAE9C,MAAM,QAAQ;IAIZ;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAY,EAAE,CAAC;IACzC,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACtB,QAAQ,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;SACpC;QACD,OAAO,QAAQ,CAAC,QAAQ,CAAC;IAC3B,CAAC;IAEM,IAAI,CAAI,KAAa,EAAE,IAAO;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,EAAE,CAAI,KAAa,EAAE,QAA2B;QACrD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC;IAEM,GAAG,CAAI,KAAa,EAAE,QAA2B;QACtD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;CACF;AAEY,sBAAc,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;;;;;;;;;;;;;;;AC5BrD,MAAa,YAAY;IAAzB;QACU,WAAM,GAAoC,EAAE,CAAC;IAuBvD,CAAC;IArBC,EAAE,CAAI,KAAa,EAAE,QAA0B;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,GAAG,CAAI,KAAa,EAAE,QAA0B;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAAE,OAAO;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,CAAI,KAAa,EAAE,IAAO;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAAE,OAAO;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,kDAAkD;IAClD,kBAAkB,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACF;AAxBD,oCAwBC;;;;;;;;;;;;;;;AC1BY,cAAM,GAAG;IACpB,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;IAChB,gBAAgB,EAAE,kBAAkB;IACpC,iBAAiB,EAAE,mBAAmB;IACtC,UAAU,EAAE,YAAY;IACxB,WAAW,EAAE,aAAa;IAC1B,UAAU,EAAE,YAAY;IACxB,SAAS,EAAE,WAAW;IACtB,GAAG,EAAE,KAAK;IACV,QAAQ,EAAE,UAAU;IACpB,UAAU,EAAE,YAAY;IACxB,QAAQ,EAAE,UAAU;IAEpB,gCAAgC;IAChC,YAAY,EAAE,aAAa;IAC3B,iBAAiB,EAAE,iBAAiB;IACpC,YAAY,EAAE,cAAc;IAC5B,WAAW,EAAE,aAAa;IAC1B,YAAY,EAAE,cAAc;IAC5B,WAAW,EAAE,aAAa;IAC1B,cAAc,EAAE,gBAAgB;IAChC,cAAc,EAAE,gBAAgB;IAChC,wBAAwB,EAAE,0BAA0B;IACpD,0BAA0B,EAAE,4BAA4B;IACxD,oCAAoC;CAC5B,CAAC;;;;;;;;;;;;;;;AC1BX,uGAAqD;AACrD,4EAAwD;AAExD,4EAA6C;AAC7C,iFAAsC;AACtC,4GAAwD;AACxD,4GAAwD;AACxD,+EAAgD;AAChD,8FAA+C;AAC/C,qFAAyC;AACzC,2FAK0B;AAE1B,2HAAkE;AAGlE,+FAAgD;AAChD,+FAAkD;AAClD,0FAAkD;AAClD,oFAA8C;AAE9C,+EAA4C;AAC5C,oFAAwC;AAExC,6GAAyD;AACzD,kEAA8B;AAC9B,gHAA2D;AAC3D,wFAA0C;AAC1C,6HAA+D;AAC/D,uGAAqD;AAErD,sFAAkD;AAClD,mFAAgD;AAChD,mFAAgD;AAChD,sFAAkD;AAClD,gFAA8C;AAC9C,6EAA4C;AAC5C,wGAAsD;AAEtD,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,mDAAQ;IACR,6DAAa;IACb,2EAAoB;IACpB,mEAAgB;AAClB,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAED,IAAY,SAUX;AAVD,WAAY,SAAS;IACnB,yCAAI;IACJ,qCAAE;IACF,2CAAK;IACL,yCAAI;IACJ,qDAAU;IACV,+CAAO;IACP,iDAAQ;IACR,mDAAS;IACT,6CAAM;AACR,CAAC,EAVW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAUpB;AAED,MAAa,WAAW;IAMtB,YAAY,OAAe;QAHnB,gBAAW,GAAoB,IAAI,CAAC;QACpC,gBAAW,GAAW,CAAC,CAAC,CAAC;QAG/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,0DAA0D;IAC1D,eAAe,CAAC,QAAgB;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YACrD,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEO,QAAQ,CAAC,IAAY,EAAE,QAAgB;QAC7C,IAAI,IAAI,KAAK,EAAE;YAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QAE7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,QAAQ,GAAG,WAAW,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC;YAEtE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,QAAQ,EAAE;gBAChD,WAAW,GAAG,QAAQ,CAAC;aACxB;iBAAM;gBACL,IAAI,WAAW,KAAK,EAAE,EAAE;oBACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACxB,WAAW,GAAG,IAAI,CAAC;iBACpB;qBAAM;oBACL,8CAA8C;oBAC9C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB;aACF;SACF;QAED,IAAI,WAAW,KAAK,EAAE,EAAE;YACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzB;QAED,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,kCAAkC;IAClC,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IACxB,CAAC;CACF;AAzDD,kCAyDC;AAED,IAAI,iBAAiB,GAAG,CACtB,GAAqB,EACrB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,OAAe,EACf,UAAkB,EAClB,OAA0C,EAClC,EAAE;IACV,OAAO,CACL,GAAG,CAAC,GAAG;QACP,GAAG;QACH,EAAE;QACF,GAAG;QACH,EAAE;QACF,GAAG;QACH,EAAE;QACF,GAAG;QACH,EAAE;QACF,GAAG;QACH,OAAO;QACP,GAAG;QACH,UAAU;QACV,QAAQ;QACR,CAAC,OAAO,IAAI,MAAM,CAAC,CACpB,CAAC;AACJ,CAAC,CAAC;AAEF,cAAc;AACd,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB,IAAI,GAAG,GAAG,EAAE,CAAC;AAEb,MAAa,IAAI;IAGf,IAAI,aAAa;QACf,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,IAAI,CAAC,cAAc,GAAG,IAAI,6BAAa,EAAE,CAAC;QACpE,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAsHD;QA3GA,mDAAmD;QACnD,kBAAa,GAAW,MAAM,CAAC;QAEtB,kBAAa,GAAG,aAAa,CAAC;QAwBvC,qBAAgB,GAAY,KAAK,CAAC;QAClC,uBAAkB,GAAY,KAAK,CAAC;QACpC,yBAAyB;QACzB,YAAO,GAAG,OAAO,CAAC;QAIlB,iBAAY,GAAW,EAAE,CAAC;QAqBlB,qBAAgB,GAAG,CAAC,CAAC;QAG7B,wBAAwB;QAChB,kBAAa,GAAW,CAAC,CAAC;QAC1B,sBAAiB,GAAW,CAAC,CAAC;QAOtC,qBAAgB,GAAY,KAAK,CAAC;QAClC,2BAAsB,GAA8B,IAAI,CAAC;QACzD,2BAAsB,GAA4B,IAAI,CAAC;QAEvD,QAAG,GAAW,WAAI,CAAC,YAAY,EAAE,CAAC;QAC1B,0BAAqB,GAA+B,IAAI,CAAC;QAsBzD,iBAAY,GAAkB,IAAI,CAAC;QAC1B,2BAAsB,GAAG,KAAK,CAAC,CAAC,YAAY;QACrD,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QAEnB,kBAAa,GAAW,CAAC,CAAC;QAC1B,mBAAc,GAAqB,IAAI,CAAC;QAChD,+BAA+B;QAC/B,cAAS,GAAQ,IAAI,CAAC;QACtB,oBAAe,GAAY,KAAK,CAAC;QAEjC,mBAAc,GAAmB,IAAI,CAAC;QAkOtC,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,yCAAyC;YACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACjD,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,IAAU,EAAE,EAAE;YAC3B,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aACzB;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aAClE;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,EAAU,EAAoB,EAAE;YAC7C,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,EAAU,EAAqB,EAAE;YAC/C,OAAO,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAY,EAAE,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,EAAU,EAAoB,EAAE;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,IAAa,EAAE,EAAE;YAC1B,+EAA+E;YAC/E,aAAK,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,aAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;YAClC,aAAK,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,aAAK,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC;YACzC,aAAK,CAAC,wBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC;YAC1C,aAAK,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;YACrC,aAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;YAEnC,oBAAY,CAAC,UAAU,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,2FAA2F;YAC3F,mGAAmG;YACnG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAElC,+CAA+C;YAC9C,IAAY,CAAC,aAAa,GAAG,MAAM,CAAC;YACrC,+DAA+D;YAC/D,qBAAqB;YAErB,4CAA4C;YAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,8CAA8C;YAC9C,IAAI;gBACF,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAO,CAAC,qEAA4B,CAAC,CAAC;gBAC/D,YAAY,CAAC,IAAI,CAAC,CAAC;aACpB;YAAC,MAAM,GAAE;YAEV,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC;YAC9C,4EAA4E;YAC5E,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC;QAgBF,oBAAe,GAAG,CAAC,GAAW,EAAE,EAAE;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,+DAA+D;gBAC/D,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,OAAO;iBACR;gBACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,OAAO;aACR;YAED,qBAAqB;YACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,QAAQ,GAAG,CAAC,WAAW,EAAE,EAAE;oBACzB,KAAK,GAAG;wBACN,aAAK,CAAC,UAAU,EAAE,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,aAAK,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;wBACrE,OAAO;oBAET,KAAK,GAAG;wBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,OAAO;oBAET,KAAK,GAAG;wBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;wBACzB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;wBACrC,OAAO;oBAET,KAAK,GAAG;wBACN,+BAAc,CAAC,kBAAkB,GAAG,CAAC,CAAC;wBACtC,OAAO;oBACT,KAAK,GAAG;wBACN,+BAAc,CAAC,kBAAkB,GAAG,CAAC,CAAC;wBACtC,OAAO;oBACT,KAAK,GAAG;wBACN,+BAAc,CAAC,kBAAkB,GAAG,CAAC,CAAC;wBACtC,OAAO;oBACT,KAAK,GAAG;wBACN,+BAAc,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAC1C,OAAO;oBACT,KAAK,GAAG;wBACN,+BAAc,CAAC,kBAAkB,GAAG,CAAC,CAAC;wBACtC,OAAO;iBACV;gBAED,2BAA2B;gBAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChD,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;aAC5C;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACtC;QACH,CAAC,CAAC;QAEF,6BAAwB,GAAG,CACzB,MAAc,EACd,MAA6B,EAC7B,EAAE;YACF,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YACxB,IAAI,MAAM,YAAY,uBAAU,IAAI,CAAC,MAAM,CAAC,UAAU;gBAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;YAE1E,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;YAClC,iFAAiF;YACjF,IAAI,aAAa,GAAyC,SAAS,CAAC;YACpE,IAAK,MAAc,CAAC,gBAAgB,EAAE;gBACpC,aAAa,GAAG,EAAE,GAAI,MAAc,CAAC,gBAAgB,EAAE,CAAC;gBACxD,OAAO,CAAC,GAAG,CACT,qDAAqD,aAAa,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,qBAAsB,OAAe,EAAE,QAAQ,EAAE,CAC1I,CAAC;aACH;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,MAAM,EAAE;gBAC/C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,EAAE,CAAC;gBAC3B,MAAc,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAE3C,+DAA+D;gBAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;aAC5B;YAED,IAAI,OAAO,CAAC,OAAO,KAAK,CAAC;gBAAE,aAAK,CAAC,eAAe,EAAE,CAAC;YACnD,IAAI,OAAO,CAAC,OAAO,KAAK,CAAC;gBAAE,aAAK,CAAC,aAAa,EAAE,CAAC;YAEjD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAEhC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC;YAClD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAClC,+EAA+E;YAC/E,IAAI,aAAa,EAAE;gBAChB,OAAe,CAAC,yBAAyB,GAAG,aAAa,CAAC;gBAC3D,OAAO,CAAC,GAAG,CACT,yEAA0E,OAAe,EAAE,QAAQ,EAAE,CACtG,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,GAAG,CACT,qEAAsE,OAAe,EAAE,QAAQ,EAAE,CAClG,CAAC;aACH;QACH,CAAC,CAAC;QAEF,2BAAsB,GAAG,CAAC,MAAc,EAAE,IAAU,EAAE,IAAa,EAAE,EAAE;YACrE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpC,mEAAmE;YAClE,MAAc,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC7C,IAAI;gBACF,6DAA6D;gBAC7D,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,IAAI,CAAC;oBAAE,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;aACzD;YAAC,MAAM,GAAE;YAEV,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,MAAM,EAAE;gBAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC;gBAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;gBAExD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAE9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;gBAE3B,yBAAyB;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAEtB,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEpD,IAAI,CAAC,WAAW;oBACd,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBACvE,IAAI,CAAC,WAAW;oBACd,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBAEvE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;gBACpC,IACE,IAAI,YAAY,WAAI;oBACpB,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;oBACxD,MAAM;oBAEN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBACxB,IACH,IAAI,YAAY,WAAI;oBACpB,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,IAAI;oBAC/B,MAAM;oBAEN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD;YACD,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,QAAG,GAAG,CAAC,SAAiB,EAAE,EAAE;YAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,6DAA6D;gBAC7D,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvC,OAAO;aACR;YAED,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBAChC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;gBACxC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvC,OAAO;aACR;YAED,yCAAyC;YACzC,IAAI,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAEtD,4BAA4B;YAC5B,IAAI,KAAK,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;YAEpC,0CAA0C;YAC1C,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;YAClC,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,QAAQ;YAC5B,wCAAwC;YACxC,IAAI,IAAI,CAAC,KAAK;gBAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,KAAK,GAAG,QAAQ,EAAE;gBACpB,KAAK,GAAG,QAAQ,CAAC;aAClB;iBAAM,IAAI,KAAK,GAAG,QAAQ,EAAE;gBAC3B,KAAK,GAAG,QAAQ,CAAC;aAClB;YACD,gBAAgB;YAChB,sBAAsB;YACtB,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,GAAG,IAAI,EAAE;gBACvD,KAAK,CAAC,KAAK,EAAE,CAAC;aACf;YACD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtB,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;YACnB,oBAAoB;YACpB,IACE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;gBACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,EACrD;gBACA,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;YAED,IACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,IAAI,EAC9C;gBACA,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;YACD,cAAc;YACd,qCAAqC;YAErC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;YAErD,yBAAyB;YACzB,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEvC,sCAAsC;YACtC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,aAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,+CAA+C;YAC/C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;gBACrC,IACE,aAAK,CAAC,aAAa,KAAK,CAAC;oBACzB,IAAI,CAAC,GAAG,EAAE,GAAG,aAAK,CAAC,aAAa,GAAG,6BAAa,CAAC,eAAe,EAChE;oBACA,aAAK,CAAC,SAAS,CAAC;wBACd,MAAM,EAAE,KAAK;wBACb,GAAG,EAAE,aAAK,CAAC,YAAY;qBACP,CAAC,CAAC;iBACrB;aACF;YAED,yDAAyD;YACzD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;gBACrC,IACE,aAAK,CAAC,SAAS;oBACf,aAAK,CAAC,gBAAgB;oBACtB,aAAK,CAAC,iBAAiB,KAAK,CAAC;oBAC7B,IAAI,CAAC,GAAG,EAAE,GAAG,aAAK,CAAC,iBAAiB,GAAG,6BAAa,CAAC,eAAe,EACpE;oBACA,4BAA4B;oBAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAChD,IACE,MAAM;wBACN,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,QAAQ;wBAC9C,CAAC,MAAM,CAAC,IAAI;wBACZ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;wBACjB,CAAC,MAAM,CAAC,aAAa;wBACrB,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EACnC;wBACA,6CAA6C;wBAC7C,MAAM,CAAC,aAAa,EAAE,CAAC;wBACvB,aAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,8BAA8B;qBACrE;iBACF;aACF;YAED,uCAAuC;YACvC,IAAI,aAAK,CAAC,eAAe,IAAI,aAAK,CAAC,aAAa,KAAK,CAAC,EAAE;gBACtD,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,aAAK,CAAC,aAAa,CAAC;gBAExD,IAAI,CAAC,aAAK,CAAC,kBAAkB,EAAE;oBAC7B,sDAAsD;oBACtD,IAAI,cAAc,GAAG,6BAAa,CAAC,wBAAwB,EAAE;wBAC3D,aAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAChC,aAAK,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,gCAAgC;qBACnE;iBACF;qBAAM;oBACL,qDAAqD;oBACrD,IAAI,cAAc,GAAG,6BAAa,CAAC,sBAAsB,EAAE;wBACzD,2DAA2D;wBAC3D,QAAQ,aAAK,CAAC,kBAAkB,EAAE;4BAChC,KAAK,SAAS,CAAC,IAAI;gCACjB,aAAK,CAAC,iBAAiB,EAAE,CAAC;gCAC1B,MAAM;4BACR,KAAK,SAAS,CAAC,KAAK;gCAClB,aAAK,CAAC,kBAAkB,EAAE,CAAC;gCAC3B,MAAM;4BACR,KAAK,SAAS,CAAC,EAAE;gCACf,aAAK,CAAC,eAAe,EAAE,CAAC;gCACxB,MAAM;4BACR,KAAK,SAAS,CAAC,IAAI;gCACjB,aAAK,CAAC,iBAAiB,EAAE,CAAC;gCAC1B,MAAM;yBACT;wBACD,aAAK,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,8BAA8B;qBACjE;iBACF;aACF;YAED,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,aAAa,EAAE;gBAChD,IACE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB;oBACrC,+BAAc,CAAC,qBAAqB,EACpC;oBACA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC;iBACvC;aACF;YACD,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,oBAAoB,EAAE;gBACvD,IACE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB;oBACrC,+BAAc,CAAC,4BAA4B,EAC3C;oBACA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC;oBACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;iBACpD;aACF;YACD,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,gBAAgB,EAAE;gBACnD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC5B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;oBAEzB,8CAA8C;oBAC9C,IACE,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,aAAa;wBAC5C,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,oBAAoB,EACnD;wBACA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC/B,MAAM,IAAI,GAAI,MAAc,CAAC,OAAO;4BAClC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;4BAC3B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACpD,IAAI,CAAC,MAAM,EAAE,CAAC;qBACf;oBAED,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;wBACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;4BAC5B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;yBAC7B;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE;YACjD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,OAAe,EAAE,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,qDAAqD;QAC7C,wBAAmB,GAAG,CAAC,IAAY,EAAU,EAAE;YACrD,gDAAgD;YAChD,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACtB,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;YAED,mDAAmD;YACnD,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBACjC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,4BAA4B;aACjD;YAED,yBAAyB;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,OAAe,EAAQ,EAAE;YACzC,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,oDAAoD;YAEpD,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;oBAC9B,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;oBACvD,IAAI,CAAC,WAAW,CACd,gCAAgC,SAAS,KAAK,UAAU,GAAG,CAC5D,CAAC;oBACF,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBAC1B;qBAAM,IAAI,OAAO,KAAK,KAAK,EAAE;oBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;gBACD,OAAO;aACR;YAED,QAAQ,OAAO,EAAE;gBACf,KAAK,QAAQ;oBACX,IAAI,CAAC,WAAW,CACd,kCAAkC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAC/E,CAAC;oBACF,MAAM;gBACR,KAAK,WAAW;oBACd,IAAI,CAAC,WAAW,CACd,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAC3D,CAAC;oBACF,MAAM;gBACR,KAAK,KAAK;oBACR,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjD,IAAI,OAAO,EAAE;wBACX,IAAI,CAAC,WAAW,CAAC,aAAa,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;wBAC5C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;wBACvB,OAAO,CAAC,iBAAiB,EAAE,CAAC;wBAC5B,IAAI,CAAC,sBAAsB,CACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAChC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAChB,CAAC,CACF,CAAC;wBACF,MAAM,IAAI,GAAG,OAAO,CAAC,sBAAsB,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;wBACrE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC5C,OAAO,CAAC,cAAc,EAAE,CAAC;wBACzB,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;qBACxC;oBACD,MAAM;gBAER,KAAK,OAAO;oBACV,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAClD,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,UAAsB,CAAC;oBAC3B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;wBACnC,IAAI,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,EAAE;4BACrC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gCACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,uBAAU,EAAE;wCAC9C,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAe,CAAC;wCAChD,MAAM;qCACP;iCACF;6BACF;yBACF;qBACF;oBACD,IAAI,UAAU,EAAE;wBACd,UAAU,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC/B,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACpC,IAAI,CAAC,sBAAsB,CACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAChC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,CAAC,CACF,CAAC;wBACF,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;wBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;wBAClD,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;wBACjC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;qBACxC;oBACD,MAAM;gBACR,KAAK,SAAS;oBACZ,+BAAc,CAAC,mBAAmB,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,WAAW,CACd,8BAA8B,+BAAc,CAAC,mBAAmB,EAAE,CACnE,CAAC;oBACF,MAAM;gBACR,KAAK,WAAW;oBACd,IAAI,+BAAc,CAAC,mBAAmB,GAAG,CAAC,EAAE;wBAC1C,+BAAc,CAAC,mBAAmB,IAAI,CAAC,CAAC;qBACzC;oBACD,IAAI,CAAC,WAAW,CACd,8BAA8B,+BAAc,CAAC,mBAAmB,EAAE,CACnE,CAAC;oBACF,MAAM;gBACR,KAAK,OAAO,CAAC,CAAC;oBACZ,IAAI;wBACF,MAAM,EAAE,aAAa,EAAE,GAAG,mBAAO,CAAC,6DAAwB,CAAC,CAAC;wBAC5D,aAAa,CAAC,IAAI,CAAC,CAAC;wBACpB,IAAI,CAAC,WAAW,CACd,wDAAwD,CACzD,CAAC;qBACH;oBAAC,OAAO,CAAC,EAAE;wBACV,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;qBACzC;oBACD,MAAM;iBACP;gBACD,KAAK,OAAO,CAAC,CAAC;oBACZ,IAAI;wBACF,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAO,CAAC,6DAAwB,CAAC,CAAC;wBAC9D,eAAe,CAAC,IAAI,CAAC,CAAC;wBACtB,IAAI,CAAC,WAAW,CACd,wDAAwD,CACzD,CAAC;qBACH;oBAAC,OAAO,CAAC,EAAE;wBACV,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;qBACzC;oBACD,MAAM;iBACP;gBACD,KAAK,QAAQ;oBACX,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;oBACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAChC,MAAM;gBACR,KAAK,YAAY,CAAC,CAAC;oBACjB,MAAM,CAAC,GAAI,IAAI,CAAC,aAAqB,CAAC,QAAQ,EAAE,EAAE,CAAC;oBACnD,IAAI,CAAC,WAAW,CACd,CAAC;wBACC,CAAC,CAAC,yBAAyB,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,SAAS,eAAe,CAAC,CAAC,SAAS,EAAE;wBACxG,CAAC,CAAC,4BAA4B,CACjC,CAAC;oBACF,MAAM;iBACP;gBACD,KAAK,aAAa;oBACf,IAAI,CAAC,aAAqB,CAAC,cAAc,EAAE,EAAE,CAAC;oBAC/C,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;oBAC3C,MAAM;gBACR,KAAK,SAAS;oBACZ,6BAAa,CAAC,cAAc,GAAG,CAAC,6BAAa,CAAC,cAAc,CAAC;oBAC7D,OAAO,CAAC,GAAG,CAAC,yBAAyB,6BAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBACrE,MAAM;gBACR,KAAK,KAAK;oBACR,6BAAa,CAAC,cAAc,GAAG,CAAC,6BAAa,CAAC,cAAc,CAAC;oBAC7D,OAAO,CAAC,GAAG,CAAC,yBAAyB,6BAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBACrE,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,MAAM;gBACR,KAAK,MAAM;oBACT,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;wBAC5B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;qBAC7B;oBACD,MAAM;gBACR,KAAK,SAAS;oBACZ,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;wBAC5B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;4BAC/C,CAAC,CAAC,IAAI,EAAE,CAAC;wBACX,CAAC,CAAC,CAAC;qBACJ;oBACD,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC3C,MAAM;gBACR,KAAK,KAAK;oBACR,6BAAa,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;oBACzD,MAAM;gBACR,KAAK,KAAK;oBACR,6BAAa,CAAC,SAAS,EAAE,CAAC;oBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,KAAK;oBACR,6DAA6D;oBAC7D,iEAAiE;oBACjE,8CAA8C;oBAC9C,MAAM;gBACR,KAAK,OAAO;oBACV,6BAAa,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;oBACzD,MAAM;gBACR,KAAK,QAAQ;oBACX,6BAAa,CAAC,eAAe,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC;oBAC/D,OAAO,GAAG,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBACjE,IAAI,CAAC,WAAW,CAAC,0BAA0B,OAAO,EAAE,CAAC,CAAC;oBACtD,IAAI;wBACF,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAO,CAAC,qEAA4B,CAAC,CAAC;wBAC/D,YAAY,CAAC,IAAI,CAAC,CAAC;qBACpB;oBAAC,MAAM,GAAE;oBACV,MAAM;gBACR,KAAK,OAAO;oBACV,6BAAa,CAAC,cAAc,GAAG,CAAC,6BAAa,CAAC,cAAc,CAAC;oBAC7D,OAAO,GAAG,6BAAa,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBAChE,IAAI,CAAC,WAAW,CAAC,8BAA8B,OAAO,EAAE,CAAC,CAAC;oBAC1D,MAAM;gBACR,KAAK,KAAK;oBACR,6BAAa,CAAC,mBAAmB,GAAG,CAAC,6BAAa,CAAC,mBAAmB,CAAC;oBACvE,OAAO,GAAG,6BAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBACrE,IAAI,CAAC,WAAW,CAAC,8BAA8B,OAAO,EAAE,CAAC,CAAC;oBAC1D,MAAM;gBACR,KAAK,OAAO;oBACV,mCAAgB,CAAC,UAAU,GAAG,CAAC,mCAAgB,CAAC,UAAU,CAAC;oBAC3D,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,OAAO,GAAG,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC/D,IAAI,CAAC,WAAW,CAAC,wBAAwB,OAAO,EAAE,CAAC,CAAC;oBACpD,MAAM;gBACR,KAAK,OAAO;oBACV,mCAAgB,CAAC,eAAe,GAAG,CAAC,mCAAgB,CAAC,eAAe,CAAC;oBACrE,OAAO,GAAG,mCAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBACpE,IAAI,CAAC,WAAW,CAAC,yCAAyC,OAAO,EAAE,CAAC,CAAC;oBACrE,MAAM;gBACR,KAAK,QAAQ;oBACX,6BAAa,CAAC,4BAA4B;wBACxC,CAAC,6BAAa,CAAC,4BAA4B,CAAC;oBAC9C,OAAO,GAAG,6BAAa,CAAC,4BAA4B;wBAClD,CAAC,CAAC,SAAS;wBACX,CAAC,CAAC,UAAU,CAAC;oBACf,IAAI,CAAC,WAAW,CAAC,uBAAuB,OAAO,EAAE,CAAC,CAAC;oBACnD,MAAM;gBAER,KAAK,OAAO,CAAC,CAAC;oBACZ,wDAAwD;oBACxD,6BAAa,CAAC,qBAAqB,EAAE,CAAC;oBACtC,IAAI,6BAAa,CAAC,cAAc,EAAE;wBAChC,IAAI;4BACF,MAAM,EAAE,iBAAiB,EAAE,GAAG,mBAAO,CAAC,+DAAyB,CAAC,CAAC;4BACjE,iBAAiB,CAAC,WAAW,EAAE,CAAC;4BAChC,IAAI,CAAC,WAAW,CAAC,qCAAqC,CAAC,CAAC;yBACzD;wBAAC,OAAO,CAAC,EAAE;4BACV,IAAI,CAAC,WAAW,CACd,+DAA+D,CAChE,CAAC;4BACF,6BAAa,CAAC,cAAc,GAAG,KAAK,CAAC;yBACtC;qBACF;yBAAM;wBACL,oDAAoD;wBACpD,IAAI;4BACF,MAAM,EAAE,iBAAiB,EAAE,GAAG,mBAAO,CAAC,+DAAyB,CAAC,CAAC;4BACjE,iBAAiB,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;yBAChD;wBAAC,MAAM,GAAE;wBACV,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;qBAC1C;oBACD,MAAM;iBACP;gBACD,KAAK,IAAI;oBACP,6BAAa,CAAC,wBAAwB,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,SAAS;oBACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;oBACjC,MAAM;gBACR,KAAK,UAAU;oBACb,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;oBACpD,MAAM;gBACR,KAAK,MAAM;oBACT,2BAAa,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,2BAAa,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACjE,OAAO,GAAG,2BAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;oBAClE,IAAI,CAAC,WAAW,CAAC,yBAAyB,OAAO,EAAE,CAAC,CAAC;oBACrD,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI;wBACF,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;4BACpC,IAAI,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;yBAChD;6BAAM;4BACL,IAAI,CAAC,cAAc,GAAG,+BAAe,EAAC,IAAI,CAAC,CAAC;4BAC5C,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC,CAAC;4BACnD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;yBACvD;qBACF;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,WAAW,CAAC,2BAA2B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC9D,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;qBACrC;oBACD,MAAM;gBAER,KAAK,MAAM;oBACT,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBACxB,IAAI,CAAC,WAAW,CACd,sDAAsD,CACvD,CAAC;wBACF,OAAO;qBACR;oBACD,IAAI;wBACF,yDAAyD;wBACzD,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClD,6BAAa,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;wBACjE,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;wBACpD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;qBAClC;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,WAAW,CAAC,4BAA4B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC/D,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;qBACrC;oBACD,MAAM;gBAER,KAAK,UAAU;oBACb,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBACxB,IAAI,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;wBAC/C,OAAO;qBACR;oBACD,IAAI,CAAC,WAAW,CACd,uBAAuB,IAAI,CAAC,cAAc,CAAC,IAAI,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAC1J,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC9D,MAAM;gBAER,KAAK,aAAa;oBAChB,IAAI,CAAC,WAAW,CACd,yBAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CACxH,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE;wBACzC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;wBACxB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;wBACvB,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;wBAClC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;qBACzB,CAAC,CAAC;oBACH,MAAM;gBAER,KAAK,UAAU;oBACb,6DAA6D;oBAC7D,IAAI;wBACF,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;4BACpC,IAAI,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;4BAC/C,MAAM;yBACP;wBACD,IAAI,CAAC,cAAc,GAAG,+BAAe,EAAC,IAAI,CAAC,CAAC;wBAC5C,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;wBAC/D,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBACrD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBAErD,oBAAoB;wBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAChD,CAAC,EACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAC5C,CAAC;wBACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBAExC,IAAI,CAAC,WAAW,CACd,0BAA0B,cAAc,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,WAAW,SAAS,IAAI,SAAS,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAC5M,CAAC;wBACF,IAAI,CAAC,WAAW,CAAC,uCAAuC,CAAC,CAAC;qBAC3D;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,WAAW,CAAC,sBAAsB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;qBAC1C;oBACD,MAAM;gBACR;oBACE,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;wBAChC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAc,CAAC,CAAC;qBACtD;yBAAM,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;wBACrC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC3C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAc,CAAC,CAAC;yBACtD;qBACF;oBACD,MAAM;aACT;QACH,CAAC,CAAC;QA0FF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC;YAClC,IAAI,OAAO,GAAG,GAAG,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,6BAAa,CAAC,SAAS,EAAE,CAAC,IAAI,6BAAa,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;gBACvE,IAAI,SAAS,GAAG,CAAC,GAAG,OAAO,EAAE;oBAC3B,OAAO,CAAC,CAAC;iBACV;aACF;YACD,OAAO,6BAAa,CAAC,SAAS,CAAC;QACjC,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,6BAAa,CAAC,cAAc,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,2CAA2C;YAC3C,aAAK,CAAC,wBAAwB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,6BAAa,CAAC,cAAc,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,2CAA2C;YAC3C,aAAK,CAAC,wBAAwB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,6BAAa,CAAC,aAAa,EAAE;gBAC/B,IACE,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK;oBAC9C,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,IAAI,GAAG,EAC/D;oBACA,6BAAa,CAAC,UAAU;wBACtB,CAAC,CAAC,6BAAa,CAAC,KAAK,GAAG,6BAAa,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;iBACnE;gBACD,IACE,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK;oBAC9C,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,IAAI,GAAG,EAC/D;oBACA,6BAAa,CAAC,UAAU;wBACtB,CAAC,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;iBACnE;gBAED,IACE,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK;oBAC9C,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,IAAI,GAAG,EAC/D;oBACA,6BAAa,CAAC,UAAU,IAAI,KAAK,GAAG,EAAE,CAAC;iBACxC;gBACD,IACE,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK;oBAC9C,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,IAAI,GAAG,EAC/D;oBACA,6BAAa,CAAC,UAAU,IAAI,KAAK,GAAG,EAAE,CAAC;iBACxC;gBACD,IAAI,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;oBACpE,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC;iBAChD;aACF;iBAAM;gBACL,wDAAwD;gBACxD,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC;aAChD;YAED,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,2CAA2C;YAC3C,aAAK,CAAC,wBAAwB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,6BAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,6BAAa,CAAC,MAAM,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IACE,IAAI,CAAC,aAAa,KAAK,SAAS;gBAChC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC;gBAClC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EACxC;gBACA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;aACzD;YACD,IAAI,CAAC,QAAQ;gBACX,oFAAoF,CAAC,IAAI,CACvF,SAAS,CAAC,SAAS,CACpB,CAAC;YAEJ,6BAAa,CAAC,KAAK;gBACjB,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;oBAC7C,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAEnD,8CAA8C;YAC9C,MAAM,QAAQ,GACZ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC5E,IAAI,QAAQ,EAAE;gBACZ,6BAAa,CAAC,cAAc,GAAG,IAAI,CAAC;gBACpC,mGAAmG;gBACnG,IAAI,6BAAa,CAAC,KAAK,KAAK,IAAI,EAAE;oBAChC,6BAAa,CAAC,eAAe,GAAG,KAAK,CAAC;iBACvC;aACF;YAED,sDAAsD;YACtD,IAAI,6BAAa,CAAC,KAAK,KAAK,IAAI,EAAE;gBAChC,6BAAa,CAAC,KAAK,GAAG,6BAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9D,6BAAa,CAAC,UAAU,GAAG,6BAAa,CAAC,KAAK,CAAC;aAChD;YACD,IAAI,WAAW,GAAG,CAAC,CAAC;YAEpB,wDAAwD;YACxD,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC5B,MAAM,CAAC,UAAU,GAAG,6BAAa,CAAC,YAAY,CAC/C,CAAC;YACF,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAC7B,MAAM,CAAC,WAAW,GAAG,6BAAa,CAAC,aAAa,CACjD,CAAC;YAEF,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,QAAQ;oBAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAClD,6BAAa,CAAC,YAAY,GAAG,EAAE,CAAC;gBAChC,6BAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC9B,+BAAc,CAAC,mBAAmB,GAAG,CAAC,CAAC;gBACvC,+BAAc,CAAC,qBAAqB,GAAG,CAAC,CAAC;gBACzC,6BAAa,CAAC,cAAc,GAAG,IAAI,CAAC;gBAEpC,4DAA4D;gBAC5D,oCAAoC;gBACpC,MAAM,YAAY,GAAG,6BAAa,CAAC,UAAU,GAAG,WAAW,CAAC;gBAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,+BAA+B;aACpG;iBAAM;gBACL,6BAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC/B,0CAA0C;gBAC1C,8DAA8D;gBAC9D,MAAM,YAAY,GAAG,6BAAa,CAAC,UAAU,GAAG,WAAW,CAAC;gBAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;aACpE;YAED,qCAAqC;YACrC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,qEAAqE;gBACrE,aAAa,GAAG,MAAM,CAAC,UAAU,GAAG,6BAAa,CAAC,YAAY,CAAC;gBAC/D,cAAc,GAAG,MAAM,CAAC,WAAW,GAAG,6BAAa,CAAC,aAAa,CAAC;gBAClE,iDAAiD;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CACnB,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,CAAC,GAAG,WAAW,CAAC,CACzD,CAAC;aACH;YAED,2EAA2E;YAC3E,MAAM,iBAAiB,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,IAAI,iBAAiB,GAAG,MAAM,CAAC,gBAAgB,CAAC;YAE1D,sEAAsE;YACtE,+BAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAClC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,CACxD,CAAC;YACF,+BAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAClC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,CACzD,CAAC;YAEF,8CAA8C;YAC9C,6BAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,6BAAa,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAEnE,yCAAyC;YACzC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,6BAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,6BAAa,CAAC,MAAM,EAAE,CAAC,CAAC;YAElE,0DAA0D;YAC1D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAC1B,OAAO,EACP,UAAU,6BAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,eACxC,6BAAa,CAAC,MAAM,GAAG,IAAI,CAAC,KAC9B;;;;;;;;;OASC,CACF,CAAC;YAEF,oCAAoC;YACpC,MAAM,YAAY,GAAG,6BAAa,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,sBAAsB;YACrE,IAAI,YAAY,KAAK,IAAI,CAAC,aAAa,EAAE;gBACvC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;aACnC;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,QAAiB,KAAK,EAAE,EAAE;YACvE,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAChE,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAEhE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC;YAC5B,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC;YAC5B,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC;gBAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAClE,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC;gBAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtC,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAa,EAAE,kBAA2B,KAAK,EAAE,EAAE;YAC9D,IAAI,CAAC,6BAAa,CAAC,cAAc,EAAE;gBACjC,uDAAuD;gBACvD,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa;oBAAE,OAAO;gBAClE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACrC;iBAAM,IAAI,6BAAa,CAAC,cAAc,EAAE;gBACvC,kEAAkE;gBAClE,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK;qBAC3B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC;qBAC9C,KAAK,EAAE;qBACP,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACb,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;oBACrC,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;oBACrC,OAAO,SAAS,GAAG,SAAS,CAAC,CAAC,kBAAkB;gBAClD,CAAC,CAAC,CAAC;gBAEL,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;oBAC9B,MAAM,UAAU,GACd,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvE,IAAI,UAAU,EAAE;wBACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAEjB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;wBAC1C,mEAAmE;qBACpE;iBACF;aACF;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,KAAa,EAAE,EAAE;YACxC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa;oBAAE,SAAS;gBACjD,MAAM,UAAU,GAAG,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;gBACrE,IAAI,UAAU,EAAE;oBACd,IACE,6BAAa,CAAC,eAAe;wBAC7B,CAAC,6BAAa,CAAC,4BAA4B;wBAE3C,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC5B;aACF;YACD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa;oBAAE,SAAS;gBACjD,MAAM,cAAc,GAClB,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtD,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACF;QACH,CAAC,CAAC;QA6FF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,WAAW,GAAG,wBAAwB,CAAC;YAE3C,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACzC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC1B,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC;oBAAE,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;aAC3D;iBAAM,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,gBAAgB,IAAI,KAAK,GAAG,KAAK,CAAC;gBACvC,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,EAAE;oBAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,aAAK,CAAC,WAAW,EAAE,CAAC;iBACrB;aACF;YAED,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YACnE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;YAErD,wDAAwD;YACxD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACjD,IAAI,CAAC,QAAQ,CACX,WAAW,EACX,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,CAAC,EACjE,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAClD,CAAC;gBACF,IAAI,aAAa,GAAG,+BAA+B,CAAC;gBACpD,IAAI,IAAI,CAAC,QAAQ;oBAAE,aAAa,GAAG,cAAc,CAAC;gBAClD,IAAI,CAAC,QAAQ,CACX,aAAa,EACb,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,CAAC,EACnE,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAClD,CAAC;aACH;iBAAM;gBACL,yDAAyD;gBACzD,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;aACxB;YAED,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAEnB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YACnE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;YAErD,IAAI,CAAC,QAAQ,CACX,GAAG,EACH,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EACzD,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAClD,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,6BAAa,CAAC,UAAU,KAAK,6BAAa,CAAC,KAAK,EAAE;gBACpD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,uDAAuD;YAEvD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YACpE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YAEjD,gFAAgF;YAChF,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAClD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YAEnE,2DAA2D;YAC3D,oCAAoC;YACpC,qEAAqE;YAErE,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,aAAa,EAAE;gBAChD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAE/B,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAC3B,IAAI,CAAC,IAAI,CACP,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;oBACrC,+BAAc,CAAC,qBAAqB,EACtC,CAAC,EACD,CAAC,IAAI,CAAC,WAAW,CAClB,CACF,CAAC;gBACF,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAC3B,IAAI,CAAC,IAAI,CACP,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;oBACrC,+BAAc,CAAC,qBAAqB,EACtC,CAAC,EACD,CAAC,IAAI,CAAC,WAAW,CAClB,CACF,CAAC;gBACF,IAAI,aAAa,GAAG,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpD,IAAI,aAAa,GAAG,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBAEpD,IAAI,QAAQ,GACV,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK;oBACtC,GAAG,CAAC;oBACN,6BAAa,CAAC,QAAQ,CAAC;gBACzB,IAAI,QAAQ,GACV,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK;oBACtC,GAAG,CAAC;oBACN,6BAAa,CAAC,QAAQ,CAAC;gBAEzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,GAAG,GAAG,GAAG,6BAAa,CAAC,KAAK,CAAC,EACjE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,GAAG,GAAG,GAAG,6BAAa,CAAC,MAAM,CAAC,CACnE,CAAC;gBAEF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC5B,IAAI,CAAC,IAAI,CACP,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;oBACrC,+BAAc,CAAC,qBAAqB,EACtC,CAAC,EACD,6BAAa,CAAC,QAAQ,CACvB,CACF,CAAC;gBAEF,IAAI,eAAe,GAAG,aAAa,CAAC;gBACpC,IAAI,eAAe,GAAG,aAAa,CAAC;gBAEpC,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,IAAI,CAAC,uBAAuB,GAAG,CAAC,EAAE;wBACpC,YAAY,IAAI,aAAa,CAAC;wBAC9B,eAAe,IAAI,aAAa,GAAG,6BAAa,CAAC,QAAQ,CAAC;qBAC3D;yBAAM;wBACL,YAAY,IAAI,aAAa,CAAC;wBAC9B,eAAe,IAAI,aAAa,GAAG,6BAAa,CAAC,QAAQ,CAAC;qBAC3D;iBACF;qBAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBAChC,YAAY,IAAI,aAAa,CAAC;oBAC9B,eAAe,IAAI,aAAa,GAAG,6BAAa,CAAC,QAAQ,CAAC;iBAC3D;qBAAM;oBACL,YAAY,IAAI,aAAa,CAAC;oBAC9B,eAAe,IAAI,aAAa,GAAG,6BAAa,CAAC,QAAQ,CAAC;iBAC3D;gBAED,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAC1B,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC3C,+BAAc,CAAC,qBAAqB,CACvC,CAAC;gBAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;gBAC/C,IAAI,CAAC,6BAAa,CAAC,cAAc,EAAE;oBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBACnC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;oBAChC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAChC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAEpC;;;;;;;;;;;;;;;oBAeA;iBACD;gBACD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC;gBAEjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;gBAErD,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBAE5B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC,eAAe,CAAC,CAAC;oBACvD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;oBACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,uBAAuB;oBAErE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,CAAC;oBACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;oBAErD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;iBACnC;gBAED,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACtC,CAAC,EAAE,EACH;oBACA,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EACvC,CAAC,EAAE,EACH;wBACA,iDAAiD;qBAClD;iBACF;gBAED,wBAAwB;gBAExB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC,eAAe,CAAC,CAAC;gBAEvD,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,GAAG,GAAG,GAAG,6BAAa,CAAC,KAAK,CAAC,EAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,GAAG,GAAG,GAAG,6BAAa,CAAC,MAAM,CAAC,CAClE,CAAC;gBAEF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAE7B,oEAAoE;aACrE;iBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,oBAAoB,EAAE;gBAC9D,IAAI,QAAQ,GACV,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK;oBACtC,GAAG,CAAC;oBACN,6BAAa,CAAC,QAAQ,CAAC;gBACzB,IAAI,QAAQ,GACV,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK;oBACtC,GAAG,CAAC;oBACN,6BAAa,CAAC,QAAQ,CAAC;gBAEzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,KAAK,CAAC,EACjD,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,MAAM,CAAC,CACnD,CAAC;gBAEF,IAAI,UAAU,GAAG,CAAC,CAAC;gBACnB,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAC1B,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC9D,+BAAc,CAAC,4BAA4B,CAC9C,CAAC;gBAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,KAAK,CAAC,EAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,MAAM,CAAC,CAClD,CAAC;gBAEF,IAAI,WAAW,GAAG,CAAC,EAAE;oBACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAElC,IAAI,CAAC,6BAAa,CAAC,cAAc,EAAE;wBACjC,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACtC,CAAC,EAAE,EACH;4BACA,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EACvC,CAAC,EAAE,EACH;gCACA,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;6BACpD;yBACF;qBACF;iBACF;qBAAM,IAAI,WAAW,IAAI,CAAC,GAAG,UAAU,EAAE;oBACxC,IAAI,IAAI,CAAC,mBAAmB,EAAE;wBAC5B,8BAA8B;wBAC9B,yBAAyB;wBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;wBAEhD,2DAA2D;wBAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;wBACvD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;qBACjC;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAElC,gCAAgC;oBAChC,wCAAwC;oBACxC,gCAAgC;oBAChC,IAAI,CAAC,6BAAa,CAAC,cAAc,EAAE;wBACjC,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACtC,CAAC,EAAE,EACH;4BACA,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAC3B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EACvC,CAAC,EAAE,EACH;gCACA,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;6BACnE;yBACF;qBACF;iBACF;gBACD,kHAAkH;gBAClH,oEAAoE;gBACpE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;aACtC;iBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,gBAAgB,EAAE;gBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,QAAQ,EAAE;gBAClD,qBAAqB;gBAErB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAE5B,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAErD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;gBAElC,8BAA8B;gBAC9B,sCAAsC;gBAEtC,yBAAyB;gBAEzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAErC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChD,oEAAoE;aACrE;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAErB,eAAe;YACf,IAAI,6BAAa,CAAC,aAAa;gBAAE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;YAC5D,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;YACrD,IAAI,CAAC,QAAQ,CACX,6BAAa,CAAC,OAAO,EACrB,6BAAa,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,EACvE,CAAC,CACF,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YAEzB,MAAM;YACN,IAAI,6BAAa,CAAC,aAAa;gBAAE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;YAC5D,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,gBAAgB,EAAE;gBACpE,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;aAClC;YAED,iCAAiC;YACjC,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;aAC5C;YAED,yBAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAE;YAC3B,MAAM,MAAM,GAAG,CAAC,CAAC;YACjB,MAAM,aAAa,GAAG,6BAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACrE,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,MAAM;gBACvE,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,CAAC,CAAC;YACN,MAAM,cAAc,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,oBAAoB;YACpE,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YAC3C,MAAM,qBAAqB,GAAG,CAAC,CAAC;YAChC,IAAI,cAAc,GAAG,qBAAqB,CAAC;YAE3C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;gBAC7B,IAAI,6BAAa,CAAC,aAAa;oBAAE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC7D,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;gBAEnE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBACzB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;gBAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAC5D,CAAC,KAAK,CAAC;gBACR,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aAC3E;YAED,yDAAyD;YACzD,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,MAAM,cAAc,GAAa,EAAE,CAAC;YAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;gBAC3D,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;gBACjD,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACnC,WAAW,IAAI,aAAa,CAAC;aAC9B;YAED,mCAAmC;YACnC,IAAI,QAAQ,GAAG,aAAa,CAAC;YAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,QAAQ,IAAI,WAAW,CAAC,CAAC,yBAAyB;aACnD;YAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;gBACtD,MAAM,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAExC,iCAAiC;gBACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC;gBAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;gBAEd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,GAAG,IAAI,6BAAa,CAAC,gBAAgB,EAAE;wBACzC,KAAK,GAAG,6BAAa,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxD;yBAAM,IACL,GAAG;wBACH,6BAAa,CAAC,gBAAgB,GAAG,6BAAa,CAAC,cAAc,EAC7D;wBACA,KAAK,GAAG,6BAAa,CAAC,aAAa;4BACjC,CAAC,CAAC,YAAY;gCACZ,CAAC,CAAC;oCACA,CAAC,GAAG,GAAG,6BAAa,CAAC,gBAAgB,CAAC;wCACpC,6BAAa,CAAC,cAAc,CAAC;4BACnC,CAAC,CAAC,CAAC,CAAC;qBACP;yBAAM;wBACL,KAAK,GAAG,CAAC,CAAC;qBACX;iBACF;gBAED,IAAI,qBAAqB,GAAG,CAAC,CAAC;gBAC9B,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,oBAAoB;oBACpB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;oBAC7B,mCAAmC;oBACnC,6CAA6C;oBAC7C,GAAG;oBACH,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;oBAE7B,+CAA+C;oBAC/C,IAAI,KAAK,GAAG,QAAQ,CAAC;oBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjB,KAAK,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,SAAS,IAAI,CAAC,EAAE,SAAS,EAAE,EAAE;4BAClE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;4BAC/C,KAAK,IAAI,WAAW,CAAC;yBACtB;wBACD,qBAAqB,GAAG,KAAK,CAAC,MAAM,CAAC;qBACtC;yBAAM;wBACL,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;wBAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;wBAClD,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;wBAC5C,KACE,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAChC,SAAS,IAAI,UAAU,EACvB,SAAS,EAAE,EACX;4BACA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;4BAC/C,KAAK,IAAI,WAAW,CAAC;yBACtB;wBACD,qBAAqB,GAAG,SAAS,CAAC;wBAClC,cAAc,IAAI,SAAS,CAAC;qBAC7B;iBACF;gBAED,gDAAgD;gBAChD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,QAAQ,IAAI,aAAa,CAAC;iBAC3B;qBAAM;oBACL,QAAQ,IAAI,qBAAqB,GAAG,WAAW,CAAC;iBACjD;gBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAc,IAAI,CAAC,EAAE;oBACzC,MAAM;iBACP;aACF;YAED,cAAc;YACd,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAcF,iBAAY,GAAG,CAAC,OAAe,EAAE,OAAe,EAAE,EAAE;YAClD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CACtB,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,KAAK,CACrE,CAAC;YACF,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CACtB,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,MAAM,CACtE,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC/B,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7C,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAE7C,IAAI,KAAK,GAAG,6BAAa,CAAC,YAAY,CAAC;YAEvC,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,KAAK,GAAG,CAAC,CAAC;gBACV,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;YAED,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;gBAC/B,KAAK,GAAG,KAAK,CAAC;aACf;YAED,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE;gBAC5C,KAAK,GAAG,CAAC,CAAC;aACX;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;gBACzD,IAAI,CAAC,OAAO,IAAI,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,OAAO,IAAI,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;aACnC;YACD,oDAAoD;QACtD,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAE9C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACpE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEzB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACpE,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAEpE,OAAO;gBACL,OAAO,EAAE,cAAc;gBACvB,OAAO,EAAE,cAAc;aACxB,CAAC;QACJ,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO;aACR;YAED,IAAI,CAAC,YAAY,IAAI,GAAG,IAAI,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,IAAI,GAAG,IAAI,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5E,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC;YAEhC,IACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG;gBACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,EACjC;gBACA,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC;QAEM,qBAAgB,GAAG,GAAG,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,KAAa,EAAE,EAAE;YACxC,wEAAwE;YACxE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM;gBAAE,OAAO;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAE3E,IAAI,OAAO,GAAG,GAAG;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,KAAK,CAAC;YACpC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ;gBAC5D,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC;QAEF,yBAAoB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAE,EAAE;YAChE,2DAA2D;YAC3D,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,IAAY,EAAE,KAAc,IAAI,EAAE,EAAE;YACpD,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,cAAc,CAAC;gBACpC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;aACpE;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;YAErD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;YAC1C,IAAI,CAAC,QAAQ,CACX,IAAI,GAAG,QAAQ,EACf,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,EAC9C,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CACjD,CAAC;QACJ,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,GAAG,GAAG,EAAE;gBAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACnD;YACD,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxC,CAAC,CAAC;QAoVM,qBAAgB,GAAG,GAAG,EAAE;YAC9B,0CAA0C;YAC1C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACzC,sBAAsB;gBACtB,IAAI,CAAC,QAAQ,GAAG,aAAK,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAE/B,4BAA4B;gBAC5B,aAAK,CAAC,UAAU,GAAG,IAAI,CAAC;gBACxB,uBAAuB;gBACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEnB,mCAAmC;gBACnC,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;YACpD,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAClC,CAAC,CAAC;QAEM,sBAAiB,GAAG,GAAG,EAAE;YAC/B,iCAAiC;YACjC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;YAED,+DAA+D;YAC/D,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,aAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBAEpB,mCAAmC;gBACnC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QA/5EA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAE5B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;YACnC,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,GAAI,MAA4B,CAAC,UAAU,CAAC,IAAI,EAAE;gBACxD,KAAK,EAAE,KAAK;aACb,CAA6B,CAAC;YAE/B,iEAAiE;YACjE,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACxD,eAAe,CAAC,IAAI,GAAG,MAAM,CAAC;YAC9B,eAAe,CAAC,YAAY,GAAG,KAAK,CAAC;YACrC,eAAe,CAAC,cAAc,GAAG,KAAK,CAAC;YACvC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YAC5C,eAAe,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,sBAAsB;YAC9D,0DAA0D;YAC1D,oCAAoC;YACpC,8CAA8C;YAC9C,gEAAgE;YAChE,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpD,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;YAC1B,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YACxC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,sBAAsB;YAC1D,6CAA6C;YAC7C,6CAA6C;YAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAEvC,QAAQ,CAAC,gBAAgB,CACvB,OAAO,EACP,GAAG,EAAE;gBACH,eAAe,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACf,CAAC;YAEF,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,EAAE;gBACrC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAE3B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAElC,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,MAAM,aAAa,GAAG,CAAC,CAAC;YAExB,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACzB,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACxB,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACxB,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACzB,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;gBACvB,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,EAAE;gBAC3B,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC;YAE7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC;YAE9C,+BAA+B;YAC/B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YAEvB,IAAI,oBAAoB,GAAG,GAAG,EAAE;gBAC9B,IAAI,eAAe,GAAG,aAAa,EAAE;oBACnC,MAAM,CAAC,UAAU,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;iBAC9C;qBAAM;oBACL,2BAA2B;oBAE3B,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,KAAK,CAAC;oBAEjC,QAAQ,CAAC,gBAAgB,CACvB,YAAY,EACZ,UAAU,CAAC;wBACT,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,EAAE;4BACtB,CAAC,CAAC,cAAc,EAAE,CAAC;yBACpB;oBACH,CAAC,EACD,KAAK,CACN,CAAC;oBACF,QAAQ,CAAC,gBAAgB,CACvB,UAAU,EACV,UAAU,CAAC;wBACT,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,EAAE;4BACtB,CAAC,CAAC,cAAc,EAAE,CAAC;yBACpB;oBACH,CAAC,EACD,KAAK,CACN,CAAC;oBACF,QAAQ,CAAC,gBAAgB,CACvB,WAAW,EACX,UAAU,CAAC;wBACT,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,EAAE;4BACtB,CAAC,CAAC,cAAc,EAAE,CAAC;yBACpB;oBACH,CAAC,EACD,KAAK,CACN,CAAC;oBAEF,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,aAAK,CAAC,gBAAgB,EAAE;wBAC9D,OAAO,EAAE,KAAK;qBACf,CAAC,CAAC;oBACH,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,aAAK,CAAC,eAAe,EAAE;wBAC5D,OAAO,EAAE,KAAK;qBACf,CAAC,CAAC;oBACH,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,aAAK,CAAC,cAAc,EAAE;wBAC1D,OAAO,EAAE,KAAK;qBACf,CAAC,CAAC;oBAEH,aAAK,CAAC,eAAe,GAAG,CAAC,GAAW,EAAE,EAAE;wBACtC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC5B,CAAC,CAAC;oBAEF,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACjD,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAG,EAAE;wBAChD,qDAAqD;wBACrD,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;oBAEH,qCAAqC;oBAErC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;oBACpE,IAAI,CAAC,cAAc,GAAG,IAAI,+BAAc,EAAE,CAAC;oBAE3C,gFAAgF;oBAChF,aAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;wBACrD,IAAI,CAAC,IAAI,CAAC,QAAQ;4BAAE,OAAO;wBAC3B,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;4BACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;4BACzB,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;yBAC/B;oBACH,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACpC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;oBAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAC/B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;oBAE7B,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,qEAAqE;oBACrE,IAAI;wBACF,MAAM,EAAE,SAAS,EAAE,GAAG,mBAAO,CAAC,mDAAmB,CAAC,CAAC;wBACnD,MAAM,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;wBAC5C,IAAI,OAAO,EAAE;4BACX,MAAM,EAAE,IAAI,EAAE,GAAG,mBAAO,CAAC,qCAAY,CAAC,CAAC;4BACvC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;4BAClE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;4BAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;4BAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;yBAC7B;qBACF;oBAAC,MAAM,GAAE;iBACX;YACH,CAAC,CAAC;YACF,oBAAoB,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,qBAAY,CAAC,UAAU,EAAE,CAAC;QAE1B,aAAK,CAAC,UAAU,EAAE,CAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACtD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,0BAA0B,EAAE,GAAG,EAAE;YACxD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,yDAAyD;QACzD,2DAA2D;IAC7D,CAAC;IAuFO,eAAe,CAAC,IAAa;QACnC,uBAAuB;QACvB,eAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QACrD,sBAAc,GAAG,UAAE,CAAC,IAAI,CAAC;QACzB,6BAAa,EAAC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,UAAE,EAAE,IAAI,CAAC,CAAC;QAEpD,IAAI;YACF,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAO,CAAC,qEAA4B,CAAC,CAAC;YAC/D,YAAY,CAAC,IAAI,CAAC,CAAC;SACpB;QAAC,MAAM,GAAE;QACV,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IA0sBO,mBAAmB;QACzB,4CAA4C;QAC5C,yBAAc,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjE,IAAI;YACF,yDAAyD;YACzD,MAAM,UAAU,GAAG,GAAG,EAAE;gBACtB,IAAI;oBACF,MAAM,EAAE,aAAa,EAAE,GAAG,mBAAO,CAAC,6DAAwB,CAAC,CAAC;oBAC5D,oDAAoD;oBACpD,aAAa,CAAC,IAAI,CAAC,CAAC;iBACrB;gBAAC,MAAM,GAAE;YACZ,CAAC,CAAC;YACF,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YACpD,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;gBACjD,IAAI,QAAQ,CAAC,eAAe,KAAK,QAAQ;oBAAE,UAAU,EAAE,CAAC;YAC1D,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAChD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACrC,IAAI;oBACF,MAAM,EAAE,KAAK,EAAE,GAAG,mBAAO,CAAC,2CAAe,CAAC,CAAC;oBAC3C,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;iBACnB;gBAAC,MAAM,GAAE;YACZ,CAAC,CAAC,CAAC;YACH,kCAAkC;YAClC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAChD,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SACnD;QAAC,MAAM,GAAE;IACZ,CAAC;IAEO,yBAAyB;QAC/B,8BAA8B;QAC9B,MAAM,QAAQ,GAAuC;YACnD,QAAQ;YACR,OAAO;YACP,SAAS;SACV,CAAC;QACF,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtE,wCAAwC;QACxC,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa;QAClE,MAAM,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,eAAe;QAClE,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,eAAe;QAEnE,MAAM,SAAS,GAAG,yCAAmB,CAAC,mBAAmB,CACvD,KAAK,EACL,MAAM,EACN,QAAQ,EACR,eAAM,CAAC,IAAI,EACX,OAAO,CACR,CAAC;QAEF,sBAAsB;QACtB,MAAM,UAAU,GAAG,SAAS,CAAC,kBAAkB,EAAE,CAAC;QAClD,MAAM,iBAAiB,GAAG,UAAU;YAClC,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,2BAA2B,CAAC;QAEhC,8BAA8B;QAC9B,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QAEvC,IAAI,CAAC,WAAW,CACd,aAAa,QAAQ,WAAW,OAAO,eAAe,iBAAiB,EAAE,CAC1E,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,yDAAyD,CAAC,CAAC;QAE5E,mCAAmC;QACnC,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE;aACzB,WAAW,EAAE;aACb,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;aACZ,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,GAAG,OAAO,IAAI,KAAK,IAAI,MAAM,IAAI,QAAQ,SAAS,SAAS,MAAM,CAAC;QAEnF,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,kCAAkC,QAAQ,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,iDAAiD,CAAC,CAAC;QAEpE,mCAAmC;QACnC,IAAI,6BAAa,CAAC,cAAc,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE;gBACtC,OAAO;gBACP,UAAU,EAAE,GAAG,KAAK,IAAI,MAAM,EAAE;gBAChC,QAAQ;gBACR,UAAU;gBACV,KAAK,EAAE,SAAS,CAAC,QAAQ,EAAE;aAC5B,CAAC,CAAC;SACJ;IACH,CAAC;IA8zBO,oBAAoB,CAAC,CAAS,EAAE,CAAS;QAC/C,iDAAiD;QACjD,MAAM,MAAM,GAAG,CAAC,CAAC;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;QAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;QAC5E,MAAM,IAAI,GAAG,MAAM,CAAC;QACpB,MAAM,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,GAAG,YAAY,CAAC;QAClC,MAAM,MAAM,GAAG,6BAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7C,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC;IAC5D,CAAC;IAyfD,OAAO;QACL,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1D,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5D,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjC;IACH,CAAC;;AApiFH,oBAqiFC;AApiFC,2BAA2B;AACZ,mBAAc,GAAyB,IAAI,CAAC;AA+CpD,kBAAa,GAAG,KAAK,CAAC;AA0Cb,YAAO,GACrB,oDAAoD,CAAC;AACvC,kBAAa,GAAG;IAC9B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACzE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;CAC1E,CAAC;AACc,kBAAa,GAAG,CAAC,CAAC;AAC3B,qBAAgB,GAAG,EAAE,CAAC;AAE7B,uBAAuB;AAChB,SAAI,GAAG,CAAC,GAAW,EAAE,GAAW,EAAE,IAAI,EAAU,EAAE;IACvD,IAAI,GAAG,GAAG,GAAG;QAAE,OAAO,GAAG,CAAC;IAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACpD,CAAC,CAAC;AAEK,cAAS,GAAG,CAAC,KAAY,EAAE,IAAI,EAAO,EAAE;IAC7C,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC;AAw3CK,gBAAW,GAAG,CAAC,IAAY,EAAqC,EAAE;IACvE,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;QACvC,IAAI,MAAM,KAAK,GAAG;YAAE,CAAC,IAAI,CAAC,CAAC;;YAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;oBAC9B,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBAChC;aACF;KACJ;IACD,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;AAClD,CAAC,CAAC;AAEK,aAAQ,GAAG,CAAC,IAAY,EAAE,CAAS,EAAE,CAAS,EAAE,QAAiB,EAAE,EAAE;IAC1E,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAElB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;QACtC,6BAA6B;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;gBAExC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAClE;KACF;SAAM;QACL,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE;YACxB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE;gBACtC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACrE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;gBAC3D,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;gBAC7D,IAAI,EAAE,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAE5D,IAAI,QAAQ,GAAG,CAAC,CAAC;gBACjB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBACvC,IAAI,MAAM,KAAK,GAAG;wBAAE,QAAQ,IAAI,CAAC,CAAC;;wBAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gCAC9B,EAAE,CAAC,SAAS,CACV,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5B,CAAC,EACD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EACrB,IAAI,CAAC,aAAa,EAClB,QAAQ,EACR,CAAC,EACD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EACrB,IAAI,CAAC,aAAa,CACnB,CAAC;gCACF,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;6BACvC;yBACF;iBACJ;gBACD,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;gBAClC,EAAE,CAAC,wBAAwB,GAAG,WAAW,CAAC;gBAC1C,EAAE,CAAC,QAAQ,CACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,KAAK,EACvC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,MAAM,CACzC,CAAC;gBACF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7D;SACF;KACF;AACH,CAAC,CAAC;AAEK,oBAAe,GAAG,CACvB,IAAY,EACZ,CAAS,EACT,CAAS,EACT,YAAoB,EACpB,SAAiB,EACjB,EAAE;IACF,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC;IAClC,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;QAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;SACrC;KACF;IACD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC;AA4mBF;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACI,eAAU,GAAG,CAClB,GAAqB,EACrB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,SAAkB,KAAK,EACvB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,uDAAuD;IAExE,oCAAoC;IACpC,MAAM,UAAU,GAAG,MAAM;QACvB,CAAC,CAAC,6BAAa,CAAC,mBAAmB;QACnC,CAAC,CAAC,6BAAa,CAAC,YAAY,CAAC;IAC/B,YAAY;QACV,oFAAoF;QACpF,mFAAmF;QACnF,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAE3B,kFAAkF;IAClF,IAAI,GAAG,GAAG,iBAAiB,CACzB,GAAG,EACH,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,YAAY,EACZ,UAAU,EACV,OAAO,CACR,CAAC;IAEF,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC7B,qFAAqF;QACrF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEtD,KAAK,CAAC,SAAS,CACb,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,EAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,CAChC,CAAC;QAEF,0BAA0B;QAC1B,KAAK,CAAC,wBAAwB,GAAG,aAAa,CAAC;QAC/C,KAAK,CAAC,SAAS,CACb,GAAG,EACH,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CACxC,CAAC;QAEF,oEAAoE;QACpE,KAAK,CAAC,WAAW,GAAG,YAAY,CAAC;QACjC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;QAC7B,KAAK,CAAC,QAAQ,CACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,EAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,CAChC,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;QAExB,2EAA2E;QAC3E,KAAK,CAAC,wBAAwB,GAAG,gBAAgB,CAAC;QAClD,qCAAqC;QACrC,KAAK,CAAC,SAAS,CACb,GAAG,EACH,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CACxC,CAAC;QAEF,8EAA8E;QAC9E,IAAI,OAAO,EAAE;YACX,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;YAClD,IAAI,IAAI,GAA0B,IAAI,CAAC;YACvC,QAAQ,OAAO,EAAE;gBACf,KAAK,MAAM;oBACT,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,MAAM;gBACR,KAAK,OAAO;oBACV,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;oBACtC,MAAM;aACT;YACD,IAAI,IAAI,EAAE;gBACR,KAAK,CAAC,wBAAwB,GAAG,gBAAgB,CAAC,CAAC,0BAA0B;gBAC7E,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;gBACvB,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;SACF;KACF;IAED,iFAAiF;IACjF,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EACxB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC,CACxC,CAAC;IAEF,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2CAA2C;AACjE,CAAC,CAAC;AAEF;;;GAGG;AACI,aAAQ,GAAG,CAChB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,UAAU,CACb,IAAI,CAAC,OAAO,EACZ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,UAAU,EACV,YAAY,EACZ,KAAK,EACL,OAAO,CACR,CAAC;AACJ,CAAC,CAAC;AAEF;;;GAGG;AACI,YAAO,GAAG,CACf,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,UAAU,CACb,IAAI,CAAC,MAAM,EACX,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,OAAO,CACR,CAAC;AACJ,CAAC,CAAC;AAEF;;;GAGG;AACI,YAAO,GAAG,CACf,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,UAAU,CACb,IAAI,CAAC,MAAM,EACX,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,OAAO,CACR,CAAC;AACJ,CAAC,CAAC;AAEF;;;GAGG;AACI,aAAQ,GAAG,CAChB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,UAAU,CACb,IAAI,CAAC,OAAO,EACZ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,OAAO,CACR,CAAC;AACJ,CAAC,CAAC;AAEF;;;GAGG;AACI,WAAM,GAAG,CACd,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,UAAU,GAAG,OAAO,EACpB,YAAY,GAAG,CAAC,EAChB,OAA0C,EAC1C,EAAE;IACF,IAAI,CAAC,UAAU,CACb,IAAI,CAAC,KAAK,EACV,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,OAAO,CACR,CAAC;AACJ,CAAC,CAAC;AA6CO,YAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,UAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;;;;;;;;;;;;;;;ACjsFhC,mEAA+B;AAI/B,6GAAyD;AACzD,kGAAgD;AAEhD,4GAAsD;AACtD,4GAAsD;AACtD,kHAA0D;AAC1D,+GAAwD;AACxD,qHAAiE;AACjE,kHAA0D;AAC1D,4GAAsD;AACtD,kHAA0D;AAC1D,uIAAwE;AACxE,wHAA8D;AAC9D,+GAAwD;AACxD,kHAA0D;AAC1D,2HAAgE;AAChE,+GAA6D;AAC7D,sGAAkD;AAClD,2HAAgE;AAEhE,2BAA2B;AAC3B,MAAM,aAAa,GAAG;IACpB,SAAS,EAAE,qBAAS;IACpB,SAAS,EAAE,qBAAS;IACpB,WAAW,EAAE,yBAAW;IACxB,UAAU,EAAE,uBAAU;IACtB,iBAAiB,EAAE,gCAAiB;IACpC,WAAW,EAAE,yBAAW;IACxB,SAAS,EAAE,qBAAS;IACpB,WAAW,EAAE,yBAAW;IACxB,kBAAkB,EAAE,uCAAkB;IACtC,aAAa,EAAE,6BAAa;IAC5B,UAAU,EAAE,uBAAU;IACtB,WAAW,EAAE,yBAAW;IACxB,cAAc,EAAE,+BAAc;IAC9B,eAAe,EAAE,4BAAe;IAChC,OAAO,EAAE,iBAAO;IAChB,cAAc,EAAE,+BAAc;CAC/B,CAAC;AASF,MAAa,QAAQ;IAanB,YAAY,IAAU,EAAE,MAAc;QAVtC,WAAM,GAAY,KAAK,CAAC;QACxB,aAAQ,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAG9B,UAAK,GAAW,CAAC,CAAC;QAClB,qBAAgB,GAAW,CAAC,CAAC;QAiB7B;;WAEG;QACH,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC;gBAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF;;WAEG;QACH,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,gBAAgB;gBACnB,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5E,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5E,CAAC,CAAC;QAEF;;WAEG;QACH,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC,CAAC;QAEF;;;WAGG;QACH,aAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACjC,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,WAAW,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW;gBAC7C,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK;gBACjC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK;aAClC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF;;;WAGG;QACH,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YACzB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,mCAAmC;YACnC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;YAC1C,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YAEnE,yCAAyC;YACzC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,kBAAkB;YACrF,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;YAC7B,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,qBAAqB;YAC5D,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB;YAE1D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACxE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;YAE1E,+BAA+B;YAC/B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAEnE,uBAAuB;YACvB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,MAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,WAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,MAAM,GAAG,OAAO,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;oBACpC,WAAI,CAAC,QAAQ,CACX,KAAK,CAAC,IAAI,EACV,MAAM,GAAG,OAAO,EAChB,MAAM,GAAG,OAAO,GAAG,KAAK,GAAG,EAAE,CAC9B,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,eAAe,CAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,EACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,EACzC,KAAK,CACN,CAAC;aACH;YACD,sBAAsB;YACtB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC9B,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,EAAE;YAChE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YAChD,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAEpC,WAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF;;;WAGG;QACH,sBAAiB,GAAG,CAAC,KAAa,EAAE,EAAE;YACpC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,OAAO,GAAG,+BAAc,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,+BAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC9C,WAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF;;;;;WAKG;QACH,oBAAe,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,EAAE;YACzD,IAAI,MAAM,KAAK,CAAC;gBAAE,OAAO,CAAC,6BAA6B;YAEvD,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACrC,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC;QAEF;;;;;WAKG;QACH,kBAAa,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,EAAE;YACvD,sBAAsB;QACxB,CAAC,CAAC;QAEF;;WAEG;QACH,mBAAc,GAAG,GAAG,EAAE;YACpB,sBAAsB;QACxB,CAAC,CAAC;QAEF;;;;;WAKG;QACH,2BAAsB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACzD,MAAM,EAAE,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACtC,OAAO,CACL,EAAE,IAAI,IAAI,CAAC,OAAO;gBAClB,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;gBACtB,EAAE,IAAI,IAAI,CAAC,OAAO;gBAClB,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CACvB,CAAC;QACJ,CAAC,CAAC;QAEF;;WAEG;QACH,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,oCAAoC;aACrC;QACH,CAAC,CAAC;QAzLA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CACvB,CAAC,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CACnE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,CAAC;CAiLF;AAxMD,4BAwMC;;;;;;;;;;;;;;;ACzPD,MAAa,eAAe;IAC1B,YACS,CAAS,EACT,CAAS,EACT,QAAgB,EAChB,KAAa,EACb,KAAa,EACb,MAAe;QALf,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;QACT,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAS;QAEtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;CACF;AAfD,0CAeC;;;;;;;;;;;;;;;ACjBD,gFAAsC;AACtC,yFAA4C;AAC5C,+FAA8C;AAC9C,+FAA6C;AAE7C,yFAA4C;AAI5C,4FAA4C;AAI5C,6GAAyD;AACzD,iGAA+C;AAE/C,8FAA6C;AAC7C,0GAAqD;AAErD,6FAA6C;AAK7C,wGAAmD;AACnD,qGAAiD;AACjD,2GAAqD;AACrD,gGAA+C;AAM/C,wGAAmD;AACnD,8FAA6C;AAK7C,8GAAuD;AACvD,yGAAoD;AACpD,yGAAqD;AACrD,6EAAoC;AACpC,2FAA2C;AAC3C,wGAAmD;AAEnD,MAAa,aAAa;IAsFxB,MAAM,KAAK,aAAa;QACtB,OAAO,aAAa,CAAC,eAAe,CAAC;IACvC,CAAC;;AAxFH,sCAuSC;AAtSiB,qBAAO,GAAG,cAAc,CAAC,CAAC,WAAW;AAC9C,4BAAc,GAAG,KAAK,CAAC;AACvB,sBAAQ,GAAG,KAAK,CAAC;AACjB,mBAAK,GAAG,KAAK,CAAC;AACd,0BAAY,GAAG,CAAC,CAAC,CAAC,2BAA2B;AAEpC,iBAAG,GAAG,GAAG,CAAC;AACV,2BAAa,GAAG,IAAI,CAAC;AAC9B,0BAAY,GAAG,EAAE,CAAC,CAAC,IAAI;AACvB,iCAAmB,GAAG,EAAE,CAAC,CAAC,IAAI;AAErB,sBAAQ,GAAG,EAAE,CAAC;AACvB,mBAAK,GAAG,IAAI,CAAC;AACb,wBAAU,GAAG,CAAC,CAAC;AACN,uBAAS,GAAG,EAAE,CAAC;AACf,uBAAS,GAAG,CAAC,CAAC;AACvB,2BAAa,GAAG,KAAK,CAAC;AAEb,0BAAY,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,qCAAqC;AAC7D,yBAAW,GAAG,GAAG,CAAC,CAAC,eAAe;AAE3C,6BAAe,GAAG,GAAG,CAAC,CAAC,cAAc;AACrC,oCAAsB,GAAG,GAAG,CAAC;AAC7B,sCAAwB,GAAG,EAAE,CAAC;AAC9B,+BAAiB,GAAG,GAAG,CAAC,CAAC,eAAe;AACxC,qCAAuB,GAAG,GAAG,CAAC,CAAC,eAAe;AACrC,6BAAe,GAAG,IAAI,CAAC;AAChC,sCAAwB,GAAG,KAAK,CAAC;AAExB,8BAAgB,GAAG,IAAI,CAAC;AACxB,4BAAc,GAAG,IAAI,CAAC;AAC/B,6BAAe,GAAG,CAAC,CAAC;AACX,4BAAc,GAAG,EAAE,CAAC,CAAC,oCAAoC;AACzD,wCAA0B,GAAG,EAAE,CAAC,CAAC,yDAAyD;AACnG,0BAAY,GAAG,KAAK,CAAC,CAAC,gCAAgC;AAE7C,0BAAY,GAAG,aAAa,CAAC,QAAQ,CAAC;AACtC,2BAAa,GAAG,aAAa,CAAC,QAAQ,CAAC;AAChD,mBAAK,GAAG,+BAAc,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;AACzD,oBAAM,GAAG,+BAAc,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;AAE1D,4BAAc,GAAG,IAAI,CAAC;AAEb,8BAAgB,GAAG,EAAE,CAAC;AACtB,uBAAS,GAAG,CAAC,CAAC;AACd,2BAAa,GAAG,EAAE,CAAC;AAEnB,iBAAG,GAAG,SAAS,CAAC;AAChB,yBAAW,GAAG,SAAS,CAAC;AACxB,mBAAK,GAAG,SAAS,CAAC;AAClB,wBAAU,GAAG,SAAS,CAAC;AACvB,qBAAO,GAAG,SAAS,CAAC;AACpB,kCAAoB,GAAG,SAAS,CAAC;AACjC,+BAAiB,GAAG,SAAS,CAAC;AAC9B,wBAAU,GAAG,SAAS,CAAC;AACvB,8BAAgB,GAAG,IAAI,CAAC;AAExB,4BAAc,GAAG,IAAI,CAAC;AACtB,8BAAgB,GAAG,IAAI,CAAC;AACxB,8BAAgB,GAAG,IAAI,CAAC;AAExB,+BAAiB,GAAG;IAClC,WAAI;IACJ,iBAAO;IACP,iBAAO;IACP,eAAM;IACN,iBAAO;IACP,mBAAQ;IACR,qBAAS;IACT,WAAI;IACJ,WAAI;CACL,CAAC;AAEc,mCAAqB,GAAG,KAAK,CAAC,CAAC,iBAAiB;AAEzD,gCAAkB,GAAG,IAAI,CAAC;AACjB,0CAA4B,GAAG,IAAI,CAAC;AACpC,wCAA0B,GAAG,KAAK,CAAC;AACnC,gDAAkC,GAAG,IAAI,CAAC;AAC1C,sCAAwB,GAAG,IAAI,CAAC;AAChC,gDAAkC,GAAG,IAAI,CAAC;AAC1C,8CAAgC,GAAG,IAAI,CAAC;AACxC,sDAAwC,GAAG,IAAI,CAAC;AAEzD,yCAA2B,GAAG,KAAK,CAAC;AAIpC,6CAA+B,GAAG,YAAY,CAAC,CAAC,eAAe;AAC/D,6CAA+B,GAAG,aAAa,CAAC,CAAC,eAAe;AACvE,6FAA6F;AACtF,0CAA4B,GAAG,IAAI,CAAC;AACpC,mCAAqB,GAAG,KAAK,CAAC;AAC9B,6BAAe,GAAG,KAAK,CAAC;AACxB,4BAAc,GAAG,IAAI,CAAC;AACtB,0BAAY,GAAG,IAAI,CAAC;AACpB,4BAAc,GAAG,KAAK,CAAC;AACvB,+BAAiB,GAAG,KAAK,CAAC,CAAC,wDAAwD;AACnF,oCAAsB,GAAG,CAAC,CAAC,CAAC,qEAAqE;AACjG,iCAAmB,GAAG,KAAK,CAAC;AAE5B,4BAAc,GAAG,IAAI,CAAC;AAEb,8CAAgC,GAAG;IACjD,aAAa;IACb,QAAQ;IACR,UAAU;IACV,SAAS;IACT,QAAQ;IACR,SAAS;CACV,CAAC;AAEc,8CAAgC,GAAG;IACjD,YAAY;IACZ,aAAa;IACb,WAAW;IACX,SAAS;IACT,QAAQ;IACR,gBAAgB;IAChB,WAAW;IACX,UAAU;IACV,eAAe;IACf,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,eAAe;IACf,YAAY;CACb,CAAC;AAEc,iDAAmC,GAAG,CACpD,OAAgB,KAAK,EACrB,EAAE;IACF,MAAM,YAAY,GAAG,aAAa,CAAC,gCAAgC,CAAC,OAAO,CACzE,aAAa,CAAC,+BAA+B,CAC9C,CAAC;IACF,IAAI,SAAS,CAAC;IAEd,IAAI,IAAI,EAAE;QACR,+DAA+D;QAC/D,SAAS;YACP,CAAC,YAAY;gBACX,CAAC;gBACD,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;gBACxD,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;KACzD;SAAM;QACL,8DAA8D;QAC9D,SAAS;YACP,CAAC,YAAY,GAAG,CAAC,CAAC;gBAClB,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;KACzD;IAED,aAAa,CAAC,+BAA+B;QAC3C,aAAa,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;IAE5D,OAAO,CAAC,GAAG,CACT,0CAA0C,aAAa,CAAC,+BAA+B,EAAE,CAC1F,CAAC;AACJ,CAAC,CAAC;AAEc,iDAAmC,GAAG,CACpD,OAAgB,KAAK,EACrB,EAAE;IACF,MAAM,YAAY,GAAG,aAAa,CAAC,gCAAgC,CAAC,OAAO,CACzE,aAAa,CAAC,+BAA+B,CAC9C,CAAC;IACF,IAAI,SAAS,CAAC;IAEd,IAAI,IAAI,EAAE;QACR,+DAA+D;QAC/D,SAAS;YACP,CAAC,YAAY;gBACX,CAAC;gBACD,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;gBACxD,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;KACzD;SAAM;QACL,8DAA8D;QAC9D,SAAS;YACP,CAAC,YAAY,GAAG,CAAC,CAAC;gBAClB,aAAa,CAAC,gCAAgC,CAAC,MAAM,CAAC;KACzD;IAED,aAAa,CAAC,+BAA+B;QAC3C,aAAa,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;IAE5D,OAAO,CAAC,GAAG,CACT,0CAA0C,aAAa,CAAC,+BAA+B,EAAE,CAC1F,CAAC;AACJ,CAAC,CAAC;AAEc,0CAA4B,GAAG,GAAG,EAAE;IAClD,aAAa,CAAC,qBAAqB,GAAG,CAAC,aAAa,CAAC,qBAAqB,CAAC;AAC7E,CAAC,CAAC;AAEc,wCAA0B,GAAG,GAAG,EAAE;IAChD,aAAa,CAAC,mBAAmB,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAC;AACzE,CAAC,CAAC;AAEc,mCAAqB,GAAG,GAAG,EAAE;IAC3C,aAAa,CAAC,cAAc,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC;IAC7D,OAAO,CAAC,GAAG,CACT,qBAAqB,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,CAC7E,CAAC;AACJ,CAAC,CAAC;AAEc,sCAAwB,GAAG,GAAG,EAAE;IAC9C,aAAa,CAAC,iBAAiB,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC;IACnE,OAAO,CAAC,GAAG,CACT,sBAAsB,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB,EAAE,CACjG,CAAC;AACJ,CAAC,CAAC;AAEc,uBAAS,GAAG,GAAG,EAAE;IAC/B,aAAa,CAAC,KAAK,EAAE,CAAC;IACtB,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE;QACjD,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC;KAC/C;AACH,CAAC,CAAC;AAEc,4BAAc,GAAG,GAAG,EAAE;IACpC,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE;QACjD,aAAa,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE;YACjD,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC;SAC/C;KACF;AACH,CAAC,CAAC;AAEc,4BAAc,GAAG,GAAG,EAAE;IACpC,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE;QACjD,aAAa,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE;YACjD,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC;SAC/C;KACF;AACH,CAAC,CAAC;AAEc,wBAAU,GAAG,CAAC,QAAiB,EAAE,EAAE;IACjD,IAAI,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;IACxC,IAAI,cAAc,GAAG,QAAQ,CAAC;IAC9B,MAAM,OAAO,GACX,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK,mBAAmB;QAC1D,CAAC,CAAC,MAAM,CAAC,WAAW;QACpB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;IACxB,MAAM,SAAS,GAAG,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACpD,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;QACvE,MAAM,KAAK,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;QAEjD,IAAI,UAAU,GAAG,cAAc,EAAE;YAC/B,cAAc,GAAG,UAAU,CAAC;YAC5B,SAAS,GAAG,CAAC,CAAC;SACf;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEc,gCAAkB,GAAG,CAAC,eAAM,EAAE,eAAM,CAAC,CAAC;AACtC,oCAAsB,GAAG;IACvC,eAAM;IACN,aAAK;IACL,aAAK;IACL,aAAK;IACL,mBAAQ;IACR,qBAAS;IACT,uBAAU;IACV,aAAK;IACL,mBAAQ;IACR,eAAM;IACN,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,qBAAS;IACT,eAAM;IACN,mBAAQ;IACR,mBAAQ;IACR,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;CACR,CAAC;;;;;;;;;;;;;;;ACpVJ,qGAAiD;AACjD,wHAA8D;AAC9D,kHAA4E;AAC5E,2HAA+D;AAC/D,kGAA+C;AAC/C,oIAAqE;AAErE,2HAA+D;AAC/D,kHAA0D;AAC1D,oHAA2D;AAC3D,4FAA2C;AAC3C,+GAAwD;AACxD,4GAAsD;AACtD,sGAAkD;AAClD,6HAAiE;AACjE,kHAAuE;AACvE,kHAA0D;AAE1D,uGAAoD;AAEpD,gFAAsC;AACtC,wGAAmD;AACnD,+FAA8C;AAC9C,+FAA6C;AAC7C,6EAAoC;AACpC,+FAAgD;AAChD,wGAAmD;AACnD,4FAA8C;AAC9C,2GAAqD;AACrD,8FAA6C;AAE7C,0EAAkC;AAClC,kGAAgD;AAChD,qGAAiD;AACjD,4FAA4C;AAE5C,6GAAyD;AACzD,uFAA2D;AAC3D,sIAAwE;AAExE,uHAA8D;AAC9D,yFAA2C;AAC3C,iGAA+C;AAC/C,6GAAuD;AACvD,oGAAiD;AACjD,8FAA6C;AAC7C,iGAA+C;AAC/C,gGAA+C;AAC/C,yFAA4C;AAE5C,6EAAwC;AACxC,8GAAuD;AACvD,wGAAmD;AACnD,kGAA+C;AAC/C,qHAAiE;AACjE,kFAAuC;AACvC,2FAAmD;AACnD,qFAAyC;AACzC,oIAAsE;AACtE,uIAAwE;AACxE,2HAAgE;AAChE,2HAAgE;AAChE,kHAA0D;AAC1D,+GAA6D;AAC7D,4GAAsD;AACtD,qHAA4D;AAC5D,+GAAwD;AACxD,2HAAgE;AAChE,+GAAwD;AACxD,4GAAsD;AACtD,kHAA0D;AAC1D,8FAA6C;AAC7C,qGAAoD;AACpD,yFAA4C;AAC5C,wGAAsD;AACtD,2FAA2C;AAC3C,yGAAqD;AACrD,kGAA+C;AAC/C,qGAAkD;AAClD,yFAA4C;AAC5C,wGAAmD;AACnD,yGAAoD;AACpD,+GAAwD;AACxD,+GAAwD;AACxD,kHAA0D;AAC1D,4GAAsD;AACtD,gHAAyD;AACzD,uGAAmD;AACnD,0GAAqD;AACrD,8GAAuD;AACvD,iGAA+C;AAC/C,mHAA2D;AAC3D,gHAAyD;AACzD,oGAAiD;AACjD,0GAAqD;AACrD,0GAAqD;AACrD,sHAA6D;AAC7D,kGAA+C;AAC/C,8FAA6C;AAC7C,0GAAqD;AACrD,gHAAyD;AACzD,mHAA2D;AAC3D,4HAAiE;AACjE,6GAAuD;AACvD,+FAA6C;AAC7C,oHAA2D;AAC3D,wGAAmD;AACnD,qGAAiD;AACjD,8GAAuD;AACvD,8GAAuD;AACvD,+FAA6C;AAC7C,iHAAyD;AACzD,+FAA6C;AAC7C,kHAA4D;AAC5D,2HAAuD;AACvD,6FAA6C;AAC7C,2HAAwD;AAExD,gGAA8C;AAC9C,kGAA+C;AAI/C,gFAAsC;AACtC,6EAAoC;AACpC,4FAA8C;AAC9C,6EAAoC;AACpC,+FAAgD;AAChD,yFAA4C;AAC5C,6EAAoC;AACpC,gFAAsC;AACtC,+FAAgD;AAChD,4FAA8C;AAC9C,gFAAsC;AACtC,yFAA4C;AAM5C,gFAAsC;AAGtC,8HAAgE;AAChE,kHAA0D;AAC1D,8GAAwD;AACxD,uIAAuE;AACvE,qHAA4D;AAC5D,qIAAuE;AACvE,wIAAyE;AAEzE,0EAAuC;AACvC,4GAAsD;AACtD,qHAA4D;AAC5D,kHAA0D;AAC1D,qHAA4D;AAC5D,wGAAmD;AACnD,wGAAmD;AAEnD,MAAa,eAAe;IAK1B,YAAY,EAAc;QACxB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;IACtB,CAAC;CACF;AAVD,0CAUC;AAED,IAAI,cAAc,GAAG,CAAC,GAAoB,EAAE,IAAU,EAAc,EAAE;IACpE,IAAI,EAAE,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1D,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACnB,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,qDAAK;IACL,uDAAM;AACR,CAAC,EAHW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAGzB;AAED,MAAa,eAAe;IAY1B,0CAA0C;IAE1C,YAAY,UAAsB,EAAE,IAAU;QAC5C,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,UAAU,YAAY,yCAAmB,EAAE;YAC7C,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC1D;QACD,IAAI,UAAU,YAAY,+BAAc,EAAE;YACxC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAC3D,UAAU,CAAC,MAAM,CAClB,CAAC;YACF,IAAI,CAAC,eAAe,GAAI,UAAU,CAAC,MAAc,CAAC,QAAQ,CAAC;YAC3D,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;SAC/B;IACH,CAAC;CACF;AApCD,0CAoCC;AAED,IAAI,cAAc,GAAG,CAAC,EAAmB,EAAE,IAAU,EAAc,EAAE;IACnE,IAAI,EAAE,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,EAAE;QACpC,IAAI,IAAI,GACN,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC3E,IAAI,KAAK,GAAG,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,IAAI,yCAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;QACjB,OAAO,CAAC,CAAC;KACV;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,EAAE;QACrC,MAAM,UAAU,GACd,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAE3E,iFAAiF;QACjF,IAAI,eAAe,GAA4B,SAAS,CAAC;QACzD,IAAI,EAAE,CAAC,eAAe,EAAE;YACtB,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CACpC,CAAC,CAAC,EAAE,EAAE,CAAE,CAAS,CAAC,QAAQ,KAAK,EAAE,CAAC,eAAe,CAClD,CAAC;YACF,IAAI,KAAK,IAAI,KAAK,YAAY,yBAAW;gBAAE,eAAe,GAAG,KAAK,CAAC;SACpE;QAED,IAAI,CAAC,eAAe,EAAE;YACpB,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;YACvD,IAAI,OAAO,IAAI,OAAO,YAAY,yBAAW;gBAC3C,eAAe,GAAG,OAAsB,CAAC;SAC5C;QAED,IAAI,CAAC,eAAe,EAAE;YACpB,oEAAoE;YACpE,OAAO,SAAkC,CAAC;SAC3C;QAED,MAAM,CAAC,GAAG,IAAI,+BAAc,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC;QACzB,OAAO,CAAC,CAAC;KACV;AACH,CAAC,CAAC;AAEF,IAAY,SAqDX;AArDD,WAAY,SAAS;IACnB,6CAAM;IACN,iDAAQ;IACR,6CAAM;IACN,2CAAK;IACL,yCAAI;IACJ,2CAAK;IACL,+CAAO;IACP,yCAAI;IACJ,6CAAM;IACN,2CAAK;IACL,wCAAG;IACH,4CAAK;IACL,0CAAI;IACJ,gDAAO;IACP,8DAAc;IACd,8CAAM;IACN,8CAAM;IACN,0DAAY;IACZ,4DAAa;IACb,oDAAS;IACT,oDAAS;IACT,8CAAM;IACN,0DAAY;IACZ,sDAAU;IACV,0CAAI;IACJ,gDAAO;IACP,4CAAK;IACL,oDAAS;IACT,4CAAK;IACL,0CAAI;IACJ,8CAAM;IACN,0CAAI;IACJ,0DAAY;IACZ,gDAAO;IACP,gDAAO;IACP,8CAAM;IACN,oDAAS;IACT,sDAAU;IACV,0CAAI;IACJ,wDAAW;IACX,0CAAI;IACJ,4CAAK;IACL,kEAAgB;IAChB,0CAAI;IACJ,oDAAS;IACT,8CAAM;IACN,kDAAQ;IACR,gDAAO;IACP,0CAAI;IACJ,gDAAO;IACP,8CAAM;IACN,gDAAO;AACT,CAAC,EArDW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAqDpB;AAED,MAAa,UAAU;IA+CrB,YAAY,KAAa,EAAE,IAAU;QACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC;QACpC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAE7B,8EAA8E;QAC9E,IAAI;YACF,IAAI,CAAC,UAAU,GAAI,KAAa,CAAC,QAAQ,KAAK,IAAI,CAAC;YACnD,IAAI,CAAC,YAAY,GAAI,KAAa,CAAC,MAAM,EAAE,MAAM,IAAI,SAAS,CAAC;SAChE;QAAC,MAAM,GAAE;QAEV,IAAI;YACF,IAAI,CAAC,MAAM,GAAI,KAAa,CAAC,MAAM,KAAK,IAAI,CAAC;SAC9C;QAAC,MAAM,GAAE;QACV,IAAI;YACF,IAAI,CAAC,YAAY,GAAI,KAAa,CAAC,YAAY,KAAK,IAAI,CAAC;SAC1D;QAAC,MAAM,GAAE;QAEV,IAAI,CAAC,cAAc,GAAI,KAAa,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,WAAW,GAAI,KAAe,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,sBAAsB;QACtB,IAAI,KAAK,YAAY,aAAK,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACnC,IAAI,KAAK,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAClD,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,YAAY,CAClD,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,cAAc;oBACtB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CACzD,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,YAAY,CACzD,CAAC;aACL;SACF;QACD,IAAI,KAAK,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC1D,IAAI,KAAK,YAAY,6BAAa,EAAE;YAClC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC;YACnD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE;gBAC3B,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;iBACzC;aACF;SACF;QACD,IAAI,KAAK,YAAY,yBAAW,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;SAC1C;QACD,IAAI,KAAK,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QACxD,2EAA2E;QAC3E,IAAI,KAAK,YAAY,aAAK,EAAE;YAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;SACtC;QACD,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC9D,IAAI,KAAK,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QACxD,IAAI,KAAK,YAAY,iCAAe;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QACpE,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC9D,IAAI,KAAK,YAAY,yBAAW,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;SAC9B;QACD,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QAC9D,IAAI,KAAK,YAAY,SAAG;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC;QACpD,IAAI,KAAK,YAAY,uBAAU,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;YAC5B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC;SACpD;QACD,IAAI,KAAK,YAAY,qBAAS,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;SAC5B;QACD,IAAI,KAAK,YAAY,iBAAO,EAAE;YAC5B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;SAC5C;QACD,IAAI,KAAK,YAAY,+BAAc,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,cAAc,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,KAAK,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAClD,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,YAAY,CAClD,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,cAAc;oBACtB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CACzD,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,YAAY,CACzD,CAAC;aACL;YACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,SAAS,EAAE;gBAClC,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;iBAChD;aACF;YACD,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SAChC;QACD,IAAI,KAAK,YAAY,yBAAW,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;SAChC;QACD,IAAI,KAAK,YAAY,yBAAW,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;SAC9B;QACD,IAAI,KAAK,YAAY,qCAAiB;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC;QAC3E,IAAI,KAAK,YAAY,uCAAkB;YACrC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC;QACtC,IAAI,KAAK,YAAY,+BAAc;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;QACrE,IAAI,KAAK,YAAY,+BAAc;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;QACrE,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/D,IAAI,KAAK,YAAY,gCAAiB;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC;QAC3E,IAAI,KAAK,YAAY,4BAAe;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;QACvE,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3D,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QACjE,IAAI,KAAK,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QAC7D,IAAI,KAAK,YAAY,+BAAc,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;YAChC,kEAAkE;SACnE;QACD,IAAI,KAAK,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QAC7D,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3D,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/D,IAAI,KAAK,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtD,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC;QACrE,IAAI,KAAK,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QAC5D,IAAI,KAAK,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QAC5D,IAAI,KAAK,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC1D,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;QAChE,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;QACjE,IAAI,KAAK,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtD,IAAI,KAAK,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC;QACnE,IAAI,KAAK,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtD,IAAI,KAAK,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QACxD,IAAI,KAAK,YAAY,iCAAe;YAClC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,gBAAgB,CAAC;QACzC,IAAI,KAAK,YAAY,mBAAI;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtD,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;QAChE,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/D,IAAI,KAAK,YAAY,mCAAgB;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;QACtE,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QACjE,IAAI,KAAK,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3D,IAAI,KAAK,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/D,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QACjE,IAAI,KAAK,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;IACnE,CAAC;CACF;AAxND,gCAwNC;AAED,IAAI,SAAS,GAAG,CAAC,EAAc,EAAE,IAAU,EAAU,EAAE;IACrD,IAAI,KAAK,CAAC;IACV,IAAI,IAAI,GACN,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAE3E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAAE,KAAK,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ,EAAE;QAClC,KAAK,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,KAAK,CAAC,kBAAkB,GAAG,EAAE,CAAC,kBAAkB,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACjB,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,EAAE;gBACL,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;aACrC;SACF;KACF;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE;QAChC,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,gBAAgB,CAAC;QAClC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACzB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACzB,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;QAC3B,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;QAC3B,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;QACvC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;KACxC;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAAE,KAAK,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,gFAAgF;IAChF,IAAI,KAAK,YAAY,aAAK,EAAE;QAC1B,MAAM,YAAY,GAAG,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC;QACpC,IAAI,YAAY,EAAE;YACf,KAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,qBAAqB;YAC9C,KAAa,CAAC,KAAK,GAAG,CAAC,CAAC;YACxB,KAAa,CAAC,OAAO,GAAG,KAAK,CAAC;SAChC;KACF;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAC5B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAAE,KAAK,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAC5B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE;QAChC,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACjD;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAC7B,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,GAAG;QAAE,KAAK,GAAG,IAAI,SAAG,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,EAAE;QAC/B,KAAK,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,KAAK,CAAC,kBAAkB,GAAG,EAAE,CAAC,kBAAkB,CAAC;KAClD;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE;QAC9B,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KAC/C;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO,EAAE;QACjC,KAAK,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;QACjE,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC;KAC1C;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,cAAc,EAAE;QACxC,IAAI,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnC,KAAK,GAAG,IAAI,+BAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,EAAE,CAAC,cAAc,EAAE;YACrB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,YAAY;gBACrB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;SAC/D;QACD,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;QACrB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,MAAM,IAAI,IAAI,EAAE,CAAC,SAAS,EAAE;YAC/B,IAAI,IAAI,EAAE;gBACR,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;QACvB,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;KAC9B;IAED,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE;QAChC,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACjD;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,YAAY;QACpC,KAAK,GAAG,IAAI,qCAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,aAAa;QACrC,KAAK,GAAG,IAAI,uCAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS;QACjC,KAAK,GAAG,IAAI,+BAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS;QACjC,KAAK,GAAG,IAAI,+BAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAC9B,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,YAAY;QACpC,KAAK,GAAG,IAAI,gCAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,UAAU;QAClC,KAAK,GAAG,IAAI,4BAAe,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAC7B,KAAK,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS;QACjC,KAAK,GAAG,IAAI,+BAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAC9B,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAC7B,KAAK,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAC9B,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,YAAY;QACpC,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAAE,KAAK,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS;QACjC,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,UAAU;QAClC,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,WAAW;QACnC,KAAK,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK;QAAE,KAAK,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,gBAAgB;QACxC,KAAK,GAAG,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,mBAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS;QACjC,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ;QAChC,KAAK,GAAG,IAAI,mCAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;QAAE,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM;QAC9B,KAAK,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO;QAC/B,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAEnD,IAAI,EAAE,CAAC,OAAO,EAAE;QACd,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;QACvB,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;QACjC,IAAI,EAAE,CAAC,UAAU,EAAE;YACjB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,YAAY;gBACrB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;SAC/D;KACF;IAED,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,CAAC,KAAK,CACX,qBAAqB,EACrB,EAAE,CAAC,IAAI,EACP,uBAAuB,EACvB,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAClB,wBAAwB,CACzB,CAAC;QACF,KAAK,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5C;IAED,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACf,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACf,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IACzB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;IAC9B,KAAa,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC;IACjD,KAAa,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IACjC,KAAa,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;IAC9C,IAAI;QACF,IAAK,EAAU,CAAC,QAAQ,EAAE;YACvB,KAAa,CAAC,SAAS,EAAE,CAAC;SAC5B;KACF;IAAC,MAAM,GAAE;IAEV,4BAA4B;IAC5B,IAAI;QACF,IAAK,EAAU,CAAC,UAAU,EAAE;YAC1B,MAAM,EAAE,GAAI,EAAU,CAAC,YAAY,IAAI,CAAC,CAAC;YACzC,IAAI,CAAE,KAAa,CAAC,QAAQ,EAAE;gBAC3B,KAAa,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACtC;SACF;KACF;IAAC,MAAM,GAAE;IACT,KAAe,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC;IAC9C,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;IAC/B,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;IACrB,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;IACvC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;IAC7B,2DAA2D;IAC3D,IAAI,OAAQ,EAAU,CAAC,WAAW,KAAK,SAAS,EAAE;QAChD,KAAK,CAAC,WAAW,GAAI,EAAU,CAAC,WAAW,CAAC;KAC7C;IACD,IAAI,EAAE,CAAC,OAAO;QAAE,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrD,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;IACjC,yEAAyE;IACzE,IAAI;QACF,IAAI,KAAK,YAAY,yBAAW,EAAE;YAC/B,KAAqB,CAAC,KAAK,GAAI,EAAU,CAAC,KAAK,IAAI,CAAC,CAAC;YACrD,KAAqB,CAAC,KAAK;gBACzB,EAAU,CAAC,WAAW,IAAK,KAAqB,CAAC,KAAK,CAAC;YACzD,KAAqB,CAAC,UAAU,GAAI,EAAU,CAAC,UAAU,IAAI,KAAK,CAAC;SACrE;KACF;IAAC,MAAM,GAAE;IAEV,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAa,SAAS;IAiBpB,YAAY,IAAU,EAAE,IAAU;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAI,IAAY,CAAC,MAAM,IAAI,MAAM,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,qCAAqC;QACrC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;oBACrC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBACzB;aACF;SACF;QAED,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACjD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;YACzC,IAAI,UAAU,YAAY,yBAAW;gBAAE,SAAS,CAAC,sBAAsB;YACvE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;SAC9D;QACD,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,WAAW;YAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,yDAAyD;IACjD,cAAc,CAAC,IAAU;QAC/B,OAAO,CACL,IAAI,YAAY,aAAK;YACrB,IAAI,YAAY,WAAI;YACpB,IAAI,YAAY,WAAI;YACpB,IAAI,YAAY,uBAAU;YAC1B,IAAI,YAAY,mBAAQ;YACxB,IAAI,YAAY,aAAK;YACrB,IAAI,YAAY,qBAAS;YACzB,IAAI,YAAY,uBAAU;YAC1B,IAAI,YAAY,WAAI;YACpB,IAAI,YAAY,qBAAS,CAC1B,CAAC;IACJ,CAAC;CACF;AA5ED,8BA4EC;AAED,IAAI,QAAQ,GAAG,CAAC,IAAU,EAAE,SAAoB,EAAE,IAAU,EAAE,EAAE;IAC9D,IAAI,SAAS,CAAC,MAAM;QAAG,IAAY,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAC9D,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;IACjC,IAAI,SAAS,CAAC,OAAO,KAAK,SAAS,EAAE;QACnC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAkB,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAA8B,CAAC;KACjD;IACD,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IACnC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;IAE3B,4EAA4E;IAC5E,IAAI,SAAS,CAAC,KAAK,EAAE;QACnB,4EAA4E;QAC5E,IAAI;YACD,IAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACjC;QAAC,MAAM,GAAE;QACV,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClE,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,SAAS,EAAE;oBACb,mFAAmF;oBACnF,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;iBACnC;gBACD,wDAAwD;aACzD;SACF;QAED,iDAAiD;QACjD,IAAI;YACF,MAAM,SAAS,GAAG,IAAI,GAAG,EAAgB,CAAC;YAC1C,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,WAAI,EAAE;wBACxD,MAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,QAA8B,CAAC;wBACzD,IAAI,GAAG;4BAAE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBAChC;oBACD,mDAAmD;oBACnD,IACE,CAAC;wBACA,CAAS,CAAC,WAAW;wBACtB,CAAE,IAAY,CAAC,YAAY,EAAE,QAAQ,CAAE,CAAS,CAAC,WAAW,CAAC,EAC7D;wBACC,IAAY,CAAC,YAAY,CAAC,IAAI,CAAE,CAAS,CAAC,WAAW,CAAC,CAAC;qBACzD;iBACF;aACF;YACD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,WAAI,EAAE;wBACxD,MAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,aAA8B,CAAC;wBAC/D,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;4BACzC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;yBAClC;qBACF;iBACF;aACF;SACF;QAAC,MAAM,GAAE;QAEV,sFAAsF;QACtF,IAAI;YACF,MAAM,WAAW,GAAW,EAAE,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,YAAY,WAAI;wBAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC5C;aACF;YACA,IAAY,CAAC,KAAK,GAAG,WAAW,CAAC;SACnC;QAAC,MAAM,GAAE;KACX;IAED,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACtB,sFAAsF;IACtF,MAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAC5C,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS,CACxC,CAAC;IACF,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CACzC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS,CACxC,CAAC;IACF,KAAK,MAAM,KAAK,IAAI,aAAa;QAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9E,KAAK,MAAM,KAAK,IAAI,UAAU;QAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3E,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;QAClC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;SACxD;KACF;IACD,sEAAsE;IACtE,IAAI;QACF,mEAAmE;QACnE,MAAM,UAAU,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC7C,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;YAC3B,MAAM,EAAE,GAAI,EAAU,EAAE,YAAkC,CAAC;YAC3D,MAAM,EAAE,GAAI,EAAU,EAAE,YAAkC,CAAC;YAC3D,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,SAAS,EAAE;gBACxC,MAAM,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;gBAC1B,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACb,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aAC1B;SACF;QACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,YAAY,aAAK,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;oBAC1B,CAAS,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS;iBACV;gBACD,sDAAsD;gBACrD,CAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAClC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAC3C,CAAC;aACH;SACF;KACF;IAAC,MAAM,GAAE;IACV,KAAK,MAAM,UAAU,IAAI,SAAS,CAAC,WAAW,EAAE;QAC9C,MAAM,MAAM,GAAG,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,MAAM,IAAI,CAAE,MAAc,CAAC,IAAI,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;KACF;IACD,KAAK,MAAM,EAAE,IAAI,SAAS,CAAC,WAAW;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;IAElD,IAAI;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACnC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,2BAAY,CACf,CAAC;QACpB,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,aAAa,EAAE;gBACzC,IACE,KAAK,YAAY,aAAK;oBACtB,CAAC,KAAK,CAAC,IAAI;oBACX,CAAC,KAAK,CAAC,MAAM;oBACb,CAAC,KAAK,CAAC,YAAY,EACnB;oBACA,OAAO,CAAC,WAAW,CAAC,KAAc,CAAC,CAAC;iBACrC;aACF;SACF;KACF;IAAC,MAAM,GAAE;IAEV,sGAAsG;IACtG,IAAI;QACF,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,+BAAc,CACf,CAAC;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACnC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,aAAK,IAAK,CAAW,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CACnD,CAAC;QAEb,oBAAoB;QACpB,KAAK,MAAM,EAAE,IAAI,UAAU;YAAG,EAAU,CAAC,eAAe,GAAG,EAAE,CAAC;QAE9D,qEAAqE;QACrE,MAAM,WAAW,GAAG,IAAI,GAAG,EAA2B,CAAC;QACvD,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE;YACxB,IAAI,OAAO,GAA0B,IAAI,CAAC;YAC1C,IAAI,IAAI,GAAG,MAAM,CAAC,iBAAiB,CAAC;YACpC,KAAK,MAAM,EAAE,IAAI,UAAU,EAAE;gBAC3B,IAAI,EAAE,KAAM,CAAS;oBAAE,SAAS,CAAC,eAAe;gBAChD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,IAAI,IAAI,GAAG,IAAI,EAAE;oBACf,IAAI,GAAG,IAAI,CAAC;oBACZ,OAAO,GAAG,EAAE,CAAC;iBACd;aACF;YACD,IAAI,OAAO,EAAE;gBACX,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC3C,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACZ,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aAC/B;SACF;QAED,uFAAuF;QACvF,KAAK,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE;YAC/C,EAAU,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,IAAK,EAAU,CAAC,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;gBAC1C,EAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aAChC;SACF;KACF;IAAC,MAAM,GAAE;IAEV,6DAA6D;IAC7D,IAAI;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACnC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,2BAAY,CACf,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnB,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACxC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,aAAK,IAAK,CAAS,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,IAAI,CAC/C,CAAC;YAEb,2CAA2C;YAC3C,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE;gBACxB,EAAU,CAAC,aAAa,GAAG,EAAE,CAAC;aAChC;YAED,qEAAqE;YACrE,KAAK,MAAM,MAAM,IAAI,aAAa,EAAE;gBAClC,IAAI,OAAO,GAAwB,IAAI,CAAC;gBACxC,IAAI,IAAI,GAAG,MAAM,CAAC,iBAAiB,CAAC;gBACpC,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE;oBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EACzB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAC1B,CAAC;oBACF,IAAI,IAAI,GAAG,IAAI,EAAE;wBACf,IAAI,GAAG,IAAI,CAAC;wBACZ,OAAO,GAAG,EAAE,CAAC;qBACd;iBACF;gBACD,IAAI,OAAO,EAAE;oBACX,sEAAsE;oBACtE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACF;SACF;KACF;IAAC,MAAM,GAAE;IAEV,mDAAmD;IACnD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzB,IAAI,CAAC,cAAc,EAAE,CAAC;AACxB,CAAC,CAAC;AAEF,IAAY,QA0DX;AA1DD,WAAY,QAAQ;IAClB,yCAAK;IACL,6CAAO;IACP,2CAAM;IACN,uCAAI;IACJ,uCAAI;IACJ,uCAAI;IACJ,iDAAS;IACT,+CAAQ;IACR,qCAAG;IACH,6CAAO;IACP,4CAAM;IACN,0CAAK;IACL,4CAAM;IACN,oDAAU;IACV,8CAAO;IACP,0CAAK;IACL,8CAAO;IACP,gDAAQ;IACR,kDAAS;IACT,gEAAgB;IAChB,kDAAS;IACT,4CAAM;IACN,0DAAa;IACb,wDAAY;IACZ,0CAAK;IACL,kDAAS;IACT,0CAAK;IACL,sDAAW;IACX,0CAAK;IACL,0DAAa;IACb,kDAAS;IACT,4DAAc;IACd,wCAAI;IACJ,sDAAW;IACX,0CAAK;IACL,kDAAS;IACT,kDAAS;IACT,gDAAQ;IACR,kDAAS;IACT,sDAAW;IACX,sDAAW;IACX,wDAAY;IACZ,oDAAU;IACV,wDAAY;IACZ,gDAAQ;IACR,kDAAS;IACT,oDAAU;IACV,4CAAM;IACN,0DAAa;IACb,wDAAY;IACZ,kDAAS;IACT,4DAAc;IACd,0CAAK;IACL,wEAAoB;IACpB,0EAAqB;IACrB,gDAAQ;IACR,gDAAQ;AACV,CAAC,EA1DW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QA0DnB;AAED,MAAa,SAAS;IAapB,YAAY,IAAU,EAAE,IAAU;QAChC,kCAAkC;QAClC,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QAED,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1D,IAAI,IAAI,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAI,IAAI,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACpD,IAAI,IAAI,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACpD,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACvD,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC9D,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC5D,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,SAAG;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC;QAClD,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1D,IAAI,IAAI,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAI,IAAI,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;QAChE,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1D,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1D,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC5D,4BAA4B;QAC5B,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC;QACrE,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC7D,IAAI,IAAI,YAAY,6BAAa;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC;QACvE,IAAI,IAAI,YAAY,WAAI;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACpD,IAAI,IAAI,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;QACjE,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC7D,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC7D,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC3D,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC7D,IAAI,IAAI,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;QACjE,IAAI,IAAI,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;QACjE,IAAI,IAAI,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC;QACnE,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;QAC/D,IAAI,IAAI,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC;QACnE,IAAI,IAAI,YAAY,mBAAQ;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC5D,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC9D,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;QAC/D,IAAI,IAAI,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAI,IAAI,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC;QACrE,IAAI,IAAI,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC;QACnE,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,6BAA6B;QAC1F,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC9D,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,6BAA6B;QAC5F,IAAI,IAAI,YAAY,6BAAa;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC;QACvE,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,yBAAyB;QAChF,IAAI,IAAI,YAAY,aAAK;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,IAAI,YAAY,qBAAS;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,6BAA6B;QAC5F,IAAI,IAAI,YAAY,yBAAW;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,gCAAgC;QACpG,IAAI,IAAI,YAAY,2BAAY;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,iCAAiC;QACvG,IAAI,IAAI,YAAY,iCAAe;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,oCAAoC;QAChH,IAAI,IAAI,YAAY,uBAAU;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,+BAA+B;QACjG,IAAI,IAAI,YAAY,eAAM;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAI,IAAI,YAAY,uCAAkB;YACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC;QAC5C,IAAI,IAAI,YAAY,yCAAmB;YACrC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,qBAAqB,CAAC;QAC7C,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC3D,IAAI,IAAI,YAAY,iBAAO;YAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,uBAAU,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC5D,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI;YACF,uEAAuE;YACvE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,MAAM,cAAc,GAAG,SAAS,EAAE,QAAQ,EAAE,IAAI,CAC9C,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,YAAY,aAAK;gBAClB,CAAC,CAAC,MAAM,IAAI,CAAC;gBACb,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CACV,CAAC;YACT,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC;aACtC;SACF;QAAC,MAAM,GAAE;IACZ,CAAC;CACF;AAtGD,8BAsGC;AAED,IAAI,QAAQ,GAAG,CACb,CAAY,EACZ,IAAU,EACV,MAAe,EACf,UAAiB,EACX,EAAE;IACR,IAAI,IAAI,GACN,UAAU;QACV,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC;IACT,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;QAAE,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;QAAE,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;QAAE,IAAI,GAAG,IAAI,SAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;QAAE,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,8BAA8B;IAC9B,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,aAAa;QACnC,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,cAAc;QACpC,IAAI,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;QAAE,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW;QAAE,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW;QAAE,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW;QAAE,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;QAAE,IAAI,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;QAAE,IAAI,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,aAAa;QACnC,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;QAAE,IAAI,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,cAAc;QACpC,IAAI,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW;QAAE,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,gBAAgB;QACtC,IAAI,GAAG,IAAI,iCAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,SAAS;QAAE,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,aAAa;QACnC,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;QAAE,IAAI,GAAG,IAAI,yBAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM;QAAE,IAAI,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,oBAAoB;QAC1C,IAAI,GAAG,IAAI,uCAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,qBAAqB;QAC3C,IAAI,GAAG,IAAI,yCAAmB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ;QAAE,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,CAAC,KAAK,CACX,oBAAoB,EACpB,CAAC,CAAC,IAAI,EACN,sBAAsB,EACtB,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAChB,sBAAsB,CACvB,CAAC;QACF,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACjC;IAED,sCAAsC;IACtC,IAAI,IAAI,IAAI,CAAE,IAAY,CAAC,IAAI,EAAE;QAC9B,IAAY,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3B;IACD,yDAAyD;IACzD,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,MAAM,YAAY,GAAI,UAAkB,EAAE,OAAO;YAC/C,CAAC,CAAE,UAAkB,CAAC,OAAO,EAAE;YAC/B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;KAC3B;IAED,IAAI,CAAC,CAAC,QAAQ;QAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACrC,IAAI,IAAI,YAAY,uBAAU;QAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACxD,+CAA+C;IAC/C,IAAI,IAAI,IAAI,CAAE,IAAY,CAAC,IAAI,EAAE;QAC9B,IAAY,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3B;IACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;IAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;IAC3B,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAa,cAAc;IAazB,YAAY,SAAoB,EAAE,IAAU;QAC1C,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAmB,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACrC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YAC9D,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACxB;QACD,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;YAClC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACvE;SACF;IACH,CAAC;CACF;AArCD,wCAqCC;AAED,IAAI,aAAa,GAAG,CAAC,SAAoB,EAAE,CAAiB,EAAE,IAAU,EAAE,EAAE;IAC1E,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,uBAAuB;IAC1C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC7C,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,SAAS,EAAE;YACb,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YAC/D,sEAAsE;YACtE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBACrB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACxD,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC;aAC/B;YACD,IAAI,CAAE,UAAkB,CAAC,IAAI,EAAE;gBAC5B,UAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;aACjC;YACD,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;YAClC,IAAI,UAAU,YAAY,eAAM,IAAI,SAAS,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC7D,UAAU,CAAC,WAAW,EAAE,CAAC;gBACzB,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;aAC/B;SACF;aAAM;YACL,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SAC7B;KACF;IAED,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IAC5B,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACxB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACxB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACxB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACxB,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IAC1B,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;IAClC,kDAAkD;IAClD,IAAI,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;QAC5D,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAW,CAAC;KACzD;AACH,CAAC,CAAC;AAEF,MAAa,WAAW;IAuBtB,YAAY,MAAc,EAAE,IAAU;QACpC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,MAAM,YAAY,GAAI,MAAc,EAAE,OAAO;YAC3C,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;YAC3B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,YAAY;YACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;YAClC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,QAAQ,CAAC;QACvC,MAAM,UAAU,GAAG,YAAY,CAAC;QAChC,IAAI,UAAU,EAAE;YACd,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK;iBAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,UAAU,CAAC,QAAQ,CAAC;iBACjD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,MAAM,CAAC,kBAAkB,EAAE;YAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAChD,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAC/B,CAAC;YACF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC;YAC1E,IAAI,CAAC,oBAAoB;gBACvB,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAC7C,MAAM,CAAC,kBAAkB,CAC1B,CAAC;YACJ,IAAI,CAAC,qBAAqB,GAAI,MAAM,CAAC,kBAA0B,CAAC,QAAQ,CAAC;SAC1E;QACD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,8DAA8D;QAC9D,IAAI,CAAC,aAAa,GAAI,MAAc,CAAC,aAAa,CAAC;QACnD,IAAI,CAAC,UAAU,GAAI,MAAc,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAI,MAAc,CAAC,eAAe,CAAC;IACzD,CAAC;CACF;AAlED,kCAkEC;AAED,IAAI,UAAU,GAAG,CAAC,EAAU,EAAE,CAAc,EAAE,IAAU,EAAU,EAAE;IAClE,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC;IACnE,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IAErB,0BAA0B;IAC1B,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;QAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAc,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;QACpC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3C;SAAM;QACL,mEAAmE;QACnE,IAAI,YAA8B,CAAC;QACnC,IAAI,CAAC,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK;iBAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC;iBACxC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,UAAU,CAAC,MAAM,EAAE;gBACrB,IACE,CAAC,CAAC,gBAAgB,KAAK,SAAS;oBAChC,CAAC,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,EACtC;oBACA,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;iBAC/C;qBAAM;oBACL,YAAY;wBACV,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC9D;aACF;SACF;QACD,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,IAAI,KAAK,EAAE;gBACT,YAAY,GAAG,KAAK,CAAC;aACtB;SACF;QACD,IAAI,CAAC,YAAY,EAAE;YACjB,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SACrC;QACA,MAAc,CAAC,OAAO,GAAG,YAAY,EAAE,QAAQ,CAAC;QACjD,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACtE;IACD,kEAAkE;IAClE,IAAI,IAAI,CAAC,KAAK,EAAE;QACd,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KACjC;IACD,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;IAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IACzB,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;IAC/B,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;IACzC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACnD,IAAI,CAAC,CAAC,qBAAqB,EAAE;QAC3B,MAAM,MAAM,GACV,CAAC,CAAC,CAAC,yBAAyB;YAC1B,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC;QACzC,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC,qBAAqB;YACjD,CAAC,CAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CACnB,CAAC,CAAC,EAAE,EAAE,CAAE,CAAS,CAAC,QAAQ,KAAK,CAAC,CAAC,qBAAqB,CACpC;YACtB,CAAC,CAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAoB,CAAC;KACjE;IACD,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;IACnC,8DAA8D;IAC9D,IAAI,OAAO,CAAC,CAAC,aAAa,KAAK,SAAS;QACrC,MAAc,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;IAClD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC;QAC5B,MAAc,CAAC,UAAU,GAAG,CAAC,CAAC,UAAiB,CAAC;IACnD,IAAI,OAAO,CAAC,CAAC,eAAe,KAAK,QAAQ;QACtC,MAAc,CAAC,eAAe,GAAG,CAAC,CAAC,eAAsB,CAAC;IAE7D,gFAAgF;IAChF,kFAAkF;IAClF,yCAAyC;IACzC,wFAAwF;IAExF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAa,UAAU;IASrB,YAAY,KAAY;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAI,KAAa,CAAC,QAAQ,CAAC;IAC1C,CAAC;CACF;AAlBD,gCAkBC;AAED,MAAM,SAAS,GAAG,CAAC,KAAY,EAAE,UAAsB,EAAE,EAAE;IACzD,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAC/B,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAC/B,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACjC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;IACzC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACrC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC;IAC5C,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,UAAU,CAAC,OAA8B,CAAC;AACrE,CAAC,CAAC;AAEF,MAAa,SAAS;IAepB;QAJA,2BAAsB,GAA8B,IAAI,CAAC;QACzD,2BAAsB,GAA4B,IAAI,CAAC;QAIrD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,mCAAmC;IACrC,CAAC;CACF;AAxBD,8BAwBC;AAEM,MAAM,eAAe,GAAG,CAAC,IAAU,EAAa,EAAE;IACvD,6EAA6E;IAC7E,IAAI;QACF,IAAK,IAAY,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE;YAChD,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;YAC/D,OAAO,IAAW,CAAC;SACpB;KACF;IAAC,MAAM,GAAE;IAEV,IAAI;QACF,IAAI,EAAE,GAAG,IAAI,SAAS,EAAE,CAAC;QACzB,EAAE,CAAC,KAAK,GAAG,oBAAY,CAAC,QAAQ,EAAE,CAAC;QAEnC,6BAA6B;QAC7B,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC7B,EAAE,CAAC,WAAW,GAAG,eAAM,CAAC,KAAK,CAAC;QAC9B,EAAE,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QACxD,EAAE,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAExD,mBAAmB;QACnB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,EAAE,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,EAAE,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAa,CAAC,QAAQ,CAAC;SAC5C;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;SAC/C;QAED,eAAe;QAEf,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,IAAI;gBACF,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;gBAE1C,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aACxD;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC1D,MAAM,KAAK,CAAC;aACb;SACF;QAED,uBAAuB;QACvB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;YACnC,IAAI;gBACF,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aACtE;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAClE,MAAM,KAAK,CAAC;aACb;SACF;QAED,uBAAuB;QACvB,IAAI;YACD,EAAU,CAAC,aAAa,GAAI,IAAY,CAAC,aAAa,IAAI,MAAM,CAAC;SACnE;QAAC,MAAM,GAAE;QAEV,aAAa;QACb,IAAI;YACF,MAAM,WAAW,GAA2B,EAAE,CAAC;YAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;aAC9D;SACF;QAAC,MAAM,GAAE;QACV,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;YAClE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI;gBACF,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5C,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzB,CAAC,EAAE,CAAC,QAAQ,KAAX,EAAE,CAAC,QAAQ,GAAK,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1C;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,6BAA6B,SAAS,GAAG,EAAE,KAAK,CAAC,CAAC;gBAChE,MAAM,KAAK,CAAC;aACb;SACF;QAED,0DAA0D;QAC1D,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;YACxC,KAAK,MAAM,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE;gBACzB,MAAM,GAAG,GAAK,EAAU,CAAC,MAAiB,IAAI,MAAM,CAAC;gBACrD,IAAI,GAAG,KAAK,MAAM;oBAAE,SAAS;gBAC7B,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3C;YACA,EAAU,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CACxD,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CACzC,CAAC;SACH;QAAC,MAAM,GAAE;QAEV,OAAO,EAAE,CAAC;KACX;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAChE,MAAM,KAAK,CAAC;KACb;AACH,CAAC,CAAC;AA9FW,uBAAe,mBA8F1B;AAEK,MAAM,aAAa,GAAG,CAC3B,IAAU,EACV,eAA8B,EAC9B,SAAoB,EACpB,QAAiB,EACjB,EAAE;IACF,IAAI;QACF,kCAAkC;QAElC,uBAAuB;QACvB,IAAI,oBAAY,IAAI,SAAS,CAAC,KAAK;YAAE,oBAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE5E,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,4BAA4B;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5B,gFAAgF;QAChF,IAAI;YACF,MAAM,QAAQ,GAAG,mBAAO,CAAC,oCAAS,CAAC,CAAC;YACnC,QAAQ,CAAC,KAAK,CAAC,kBAA0B,CAAC,MAAM,GAAG,CAAC,CAAC;YACrD,QAAQ,CAAC,KAAK,CAAC,wBAAgC,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3D,QAAQ,CAAC,KAAK,CAAC,uBAA+B,CAAC,MAAM,GAAG,CAAC,CAAC;YAC1D,QAAQ,CAAC,KAAK,CAAC,kBAA0B,CAAC,MAAM,GAAG,CAAC,CAAC;YACrD,QAAQ,CAAC,KAAK,CAAC,gBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC;SACrD;QAAC,MAAM,GAAE;QAEV,6BAA6B;QAE7B,IAAI,CAAC,QAAQ,GAAG,IAAI,+BAAc,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEtC,6BAA6B;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACpB,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;YAChE,MAAM,SAAS,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,0BAAO,CAAC,OAAO,CAAC,CAAC;YACrE,SAAS,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;SAC7C;aAAM;SACN;QAED,IAAI,QAAQ,EAAE;YACZ,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;SAC3B;aAAM;YACL,mEAAmE;YAEnE,eAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACxC;QAED,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,QAAQ;aACjB,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC;aAC5D,IAAI,CAAC,KAAK,IAAI,EAAE;YACf,qDAAqD;YACrD,IAAI;gBACF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtC,eAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACxC;YAAC,MAAM,GAAE;YAEV,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;YAE3D,yFAAyF;YACzF,IAAI;gBACF,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC;gBACzC,yFAAyF;gBACzF,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAkB,CAAC;gBACnD,KAAK,MAAM,EAAE,IAAI,UAAU,EAAE;oBAC3B,MAAM,GAAG,GAAI,EAAU,CAAC,MAA4B,CAAC;oBACrD,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,MAAM;wBAAE,SAAS;oBACrC,MAAM,EAAE,GAAI,EAAU,CAAC,QAA8B,CAAC;oBACtD,IAAI,OAAO,EAAE,KAAK,QAAQ;wBAAE,SAAS;oBACrC,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACvC,IAAI,IAAI,KAAK,SAAS,IAAI,EAAE,GAAG,IAAI;wBAAE,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBACpE;gBACD,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;qBACrD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;qBACjC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBAE/B,4FAA4F;gBAC5F,MAAM,kBAAkB,GAAW,EAAE,CAAC;gBAEtC,KAAK,MAAM,EAAE,IAAI,SAAS,EAAE;oBAC1B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACnC,CAAC,CAAC,EAAE,EAAE,CAAE,CAAS,CAAC,MAAM,KAAK,EAAE,CAAC,GAAG,CACpC,CAAC;oBACF,IAAI,aAAa;wBAAE,SAAS;oBAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAEtC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAC1B,IAAI,EACJ,SAAS,CAAC,KAAK,CAAC,KAAK,EACrB,IAAI,EACJ,GAAG,EAAE,GAAE,CAAC,EACR,SAAS,CAAC,KAAK,CAAC,OAAO,EACvB,CAAC,QAAQ,EACT,EAAE,CAAC,GAAG;oBACN,6DAA6D;oBAC5D,SAAiB,CAAC,YAAY;wBAC7B,CAAC,CAAC;4BACE,SAAS,EACN,SAAiB,CAAC,YAAY,CAAC,IAAI,CAClC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,GAAG,CAC3B,EAAE,KAAK,IAAI,SAAS;yBACxB;wBACH,CAAC,CAAC,SAAS,CACd,CAAC;oBACF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAC7B,CAAC,CAAC,EAAE,EAAE,CAAE,CAAS,CAAC,MAAM,KAAK,EAAE,CAAC,GAAG,CACpC,CAAC;oBACF,0EAA0E;oBAC1E,KAAK,MAAM,CAAC,IAAI,KAAK;wBAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnD;gBAED,wDAAwD;gBACxD,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACvD,IAAI,WAAW,EAAE;oBACf,MAAM,YAAY,GAAG,IAAI,GAAG,CAC1B,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CACzC,CAAC;oBACF,MAAM,QAAQ,GAAG,kBAAkB;yBAChC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAC7C,yEAAyE;yBACxE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBACb,MAAM,EAAE,GAAI,CAAS,CAAC,MAAM,IAAI,MAAM,CAAC;wBACvC,MAAM,EAAE,GAAI,CAAS,CAAC,MAAM,IAAI,MAAM,CAAC;wBACvC,IAAI,EAAE,KAAK,EAAE;4BAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ;4BAAE,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;wBAC9D,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;oBACL,IAAI,MAAM,GAAG,CAAC,CAAC;oBACf,IAAI,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;oBACvC,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE;wBACxB,CAAC,CAAC,EAAE,GAAG,OAAO,GAAG,MAAM,CAAC;wBACxB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,EAAE,CAAC;qBACV;oBACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;oBAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEjE,IAAI;wBACF,MAAM,MAAM,GAA2B,EAAS,CAAC;wBACjD,MAAM,OAAO,GAA2B,EAAS,CAAC;wBAClD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;4BAC1B,MAAM,GAAG,GAAI,CAAS,CAAC,MAAM,IAAI,MAAM,CAAC;4BACxC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACrC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;yBACtD;qBACF;oBAAC,MAAM,GAAE;iBACX;aACF;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,+CAA+C,EAAE,CAAC,CAAC,CAAC;aAClE;YAED,IAAI,CAAC,QAAQ,EAAE;gBACb,qFAAqF;gBACrF,IAAI;oBACF,MAAM,aAAa,GAAG,IAAI,GAAG,EAAgB,CAAC;oBAC9C,KAAK,MAAM,EAAE,IAAI,SAAS,CAAC,KAAK,EAAE;wBAChC,IAAI,CAAC,EAAE,EAAE,OAAO;4BAAE,SAAS;wBAC3B,iFAAiF;wBACjF,IAAI,SAAS,GACX,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;4BAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,QAAQ,KAAM,EAAU,CAAC,QAAQ;gCAClC,CAAS,CAAC,MAAM,KAAK,CAAE,EAAU,CAAC,MAAM,IAAI,MAAM,CAAC;gCACpD,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,CACrB;4BACD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,QAAQ,KAAM,EAAU,CAAC,QAAQ,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,CAC5D;4BACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;wBAC7C,IAAI,SAAS,IAAK,SAAiB,CAAC,QAAQ,KAAK,EAAE,CAAC,OAAO,EAAE;4BAC3D,IAAI;gCACF,yBAAW,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;gCAC/B,SAAiB,CAAC,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC;6BAC1C;4BAAC,MAAM,GAAE;yBACX;qBACF;oBACD,mDAAmD;oBACnD,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClE;gBAAC,MAAM,GAAE;gBAEV,eAAe;gBAEf,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAC,OAAO,EAAE;oBACxC,IAAI;wBACF,MAAM,MAAM,GAAG,UAAU,CACvB,QAAQ,EACR,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAC3B,IAAI,CACL,CAAC;wBACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;qBACjC;oBAAC,OAAO,KAAK,EAAE;wBACd,OAAO,CAAC,KAAK,CACX,gCAAgC,QAAQ,GAAG,EAC3C,KAAK,CACN,CAAC;wBACF,MAAM,KAAK,CAAC;qBACb;iBACF;gBAED,uBAAuB;gBAEvB,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAC,cAAc,EAAE;oBAC/C,IAAI;wBACF,MAAM,aAAa,GAAG,UAAU,CAC9B,QAAQ,EACR,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,EAClC,IAAI,CACL,CAAC;wBACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC;qBAC/C;oBAAC,OAAO,KAAK,EAAE;wBACd,OAAO,CAAC,KAAK,CACX,wCAAwC,QAAQ,GAAG,EACnD,KAAK,CACN,CAAC;wBACF,MAAM,KAAK,CAAC;qBACb;iBACF;gBAED,mBAAmB;gBAEnB,IAAI;oBACF,KAAK,MAAM,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;wBACvC,IAAI,UAAU,GAAG,EAAE,CAAC;wBACpB,IAAI,IAAI,GAAqB,SAAS,CAAC;wBACvC,MAAM,SAAS,GAAI,SAAiB,CAAC,MAAM,IAAI,MAAM,CAAC;wBACtD,IAAI,SAAS,CAAC,OAAO,EAAE;4BACrB,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;4BAC/C,IAAI,EAAE,EAAE;gCACN,IAAI,GAAG,EAAE,CAAC;gCACV,UAAU,GAAG,KAAK,CAAC;6BACpB;yBACF;wBACD,IAAI,CAAC,IAAI,EAAE;4BACT,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACxB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;gCAChC,CAAS,CAAC,MAAM,KAAK,SAAS;gCAC/B,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,CAC5B,CAAC;4BACF,IAAI,EAAE,EAAE;gCACN,IAAI,GAAG,EAAE,CAAC;gCACV,UAAU,GAAG,eAAe,CAAC;6BAC9B;yBACF;wBACD,IAAI,CAAC,IAAI,EAAE;4BACT,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACxB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;gCACjC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,CAC5B,CAAC;4BACF,IAAI,EAAE,EAAE;gCACN,IAAI,GAAG,EAAE,CAAC;gCACV,UAAU,GAAG,UAAU,CAAC;6BACzB;yBACF;wBACD,IAAI,CAAC,IAAI,EAAE;4BACT,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC,CAAC;4BAC7D,IAAI,EAAE,EAAE;gCACN,IAAI,GAAG,EAAE,CAAC;gCACV,UAAU,GAAG,IAAI,CAAC;6BACnB;yBACF;wBAED,MAAM,aAAa,GAAG,IAAI,CAAC;wBAC3B,6BAA6B;wBAC7B,MAAM,SAAS,GAAG,aAAa,CAAC;wBAChC,MAAM,OAAO,GAAG,SAAS,CAAC;wBAC1B,IAAI,OAAO,EAAE;4BACX,4BAA4B;4BAC5B,IAAK,SAAiB,CAAC,MAAM;gCAC1B,OAAe,CAAC,MAAM,GAAI,SAAiB,CAAC,MAAM,CAAC;4BACtD,2EAA2E;4BAC3E,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;4BAC3B,IAAI;gCACF,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;gCACpB,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;6BACpC;oCAAS;gCACR,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;6BACtB;yBACF;6BAAM;yBACN;qBACF;oBACD,qDAAqD;oBACrD,IAAI;wBACF,MAAM,aAAa,GAAG,IAAI,GAAG,EAAgB,CAAC;wBAC9C,MAAM,OAAO,GAAgB,EAAE,CAAC;wBAChC,MAAM,OAAO,GAAG,IAAI,GAAG,EAAkB,CAAC;wBAC1C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;4BAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gCACxD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oCACzD,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oCAC9B,IAAI,CAAC,YAAY,WAAI,EAAE;wCACrB,MAAM,GAAG,GAAI,CAAS,CAAC,QAA8B,CAAC;wCACtD,IAAI,GAAG;4CAAE,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wCACnC,IAAK,CAAS,CAAC,qBAAqB;4CAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wCACtD,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;wCACxB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;wCACnC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wCACZ,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;qCACvB;iCACF;6BACF;yBACF;wBACD,6BAA6B;wBAC7B,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;4BACvB,MAAM,SAAS,GAAI,CAAS,CAAC,qBAErB,CAAC;4BACT,IAAI,SAAS,IAAI,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gCAC7C,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;6BACtC;4BACA,CAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC;yBACzC;wBACD,yDAAyD;wBACzD,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,EAAE;4BAC5C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gCACtB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;gCACrB,IAAI,CAAE,CAAS,CAAC,UAAU;oCAAE,CAAC,CAAC,IAAI,CAAC,CAAS,CAAC,CAAC;gCAC9C,IAAI,CAAE,CAAS,CAAC,UAAU;oCAAE,CAAC,CAAC,IAAI,CAAC,CAAS,CAAC,CAAC;6BAC/C;yBACF;qBACF;oBAAC,OAAO,CAAC,EAAE;wBACV,OAAO,CAAC,IAAI,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAC;qBACxD;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;oBAC3D,MAAM,KAAK,CAAC;iBACb;gBAED,oCAAoC;gBAEpC,IAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;oBAChD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACrD,IAAI,WAAW,EAAE;wBACf,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACzB,2FAA2F;4BAC3F,oEAAoE;4BACpE,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;4BACzD,MAAM,OAAO,GAAG,UAAU,EAAE,OAAO;gCACjC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC;gCACtC,CAAC,CAAC,SAAS,CAAC;4BACd,uDAAuD;4BACvD,IAAI,cAAc,GAAqB,SAAS,CAAC;4BACjD,IAAI,UAAU,EAAE,QAAQ,KAAK,SAAS,EAAE;gCACtC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK;qCAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,UAAU,CAAC,QAAQ,CAAC;qCACjD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gCAE/B,IAAI,UAAU,CAAC,MAAM,EAAE;oCACrB,IACE,UAAU,EAAE,gBAAgB,KAAK,SAAS;wCAC1C,UAAU,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,EAC/C;wCACA,cAAc,GAAG,UAAU,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;qCAC1D;yCAAM,IAAI,UAAU,EAAE,MAAM,KAAK,SAAS,EAAE;wCAC3C,cAAc;4CACZ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,MAAM,CAAC;gDAClD,UAAU,CAAC,CAAC,CAAC,CAAC;qCACjB;iCACF;6BACF;4BACD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CACtC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC3C,CAAC;4BACF,IAAI,CAAC,OAAO,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;6BAC7C;4BACD,MAAM,SAAS,GACb,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;gCACrC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;gCACjC,CAAC,CAAC,SAAS,CAAC;4BAChB,MAAM,YAAY,GAChB,OAAO;gCACP,cAAc;gCACd,SAAS;gCACT,SAAS;gCACT,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAEhB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;4BACzB,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;4BACvD,sBAAsB;4BACtB,IAAI;gCACD,IAAY,CAAC,aAAa;oCACxB,SAAiB,CAAC,aAAa;wCAChC,YAAY,CAAC,MAAM;wCACnB,MAAM,CAAC;6BACV;4BAAC,MAAM,GAAE;4BAEV,4CAA4C;4BAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;4BACrC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;4BACrC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;gCAC1D,MAAM,MAAM,GAAG,YAAY,CAAC,aAAa,EAAE,CAAC;gCAC5C,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;6BAC1C;4BACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;gCAChC,CAAC,EAAE,WAAW,CAAC,CAAC;gCAChB,CAAC,EAAE,WAAW,CAAC,CAAC;6BACjB,CAAC,CAAC;4BACH,WAAW,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;4BAClC,yFAAyF;4BACzF,IAAI;gCACF,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;6BAC5B;4BAAC,MAAM,GAAE;4BAEV,2BAA2B;4BAC3B,MAAM,IAAI,GACR,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;4BACtD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gCAC3B,OAAO,CAAC,IAAI,CACV,4DAA4D,CAC7D,CAAC;gCACF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gCAC7C,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;6BAClD;iCAAM;6BACN;yBACF;6BAAM;4BACL,OAAO,CAAC,KAAK,CACX,2CAA2C,EAC3C,WAAW,CAAC,OAAO,CACpB,CAAC;4BACF,MAAM,IAAI,KAAK,CACb,mBAAmB,WAAW,CAAC,OAAO,mBAAmB,CAC1D,CAAC;yBACH;qBACF;iBACF;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;gBAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;aACpD;YAED,gCAAgC;YAChC,IAAI;gBACF,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,EAAE,CAAC;aAC/B;YAAC,MAAM,GAAE;YAEV,aAAa;YACb,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YAEf,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;QAC9D,MAAM,KAAK,CAAC;KACb;AACH,CAAC,CAAC;AAzcW,qBAAa,iBAycxB;AAEF,IAAY,QAcX;AAdD,WAAY,QAAQ;IAClB,yCAAK;IACL,uCAAI;IACJ,mDAAU;IACV,uCAAI;IACJ,qDAAW;IACX,iDAAS;IACT,uCAAI;IACJ,yCAAK;IACL,qDAAW;IACX,mDAAU;IACV,0CAAK;IACL,kDAAS;IACT,0CAAK;AACP,CAAC,EAdW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAcnB;AACD,MAAa,SAAS;IAOpB,YAAY,IAAU,EAAE,IAAU;QAChC,kCAAkC;QAClC,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,sDAAsD;QACtD,IAAI,IAAI,YAAY,aAAK,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC5B;aAAM,IAAI,IAAI,YAAY,qBAAS,EAAE;YACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAI,IAAY,CAAC,YAAY,CAAC;YAC1D,IAAI,CAAC,UAAU,CAAC,KAAK,GAAI,IAAY,CAAC,KAAK,CAAC;SAC7C;aAAM,IAAI,IAAI,YAAY,WAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,YAAY,WAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1B,2EAA2E;YAC3E,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAI,IAAY,CAAC,IAAI,CAAC,CAAC,sBAAsB;YACjE,+DAA+D;YAC/D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAI,IAAY,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAI,IAAY,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAI,IAAY,CAAC,MAAM,CAAC;YAC9C,6CAA6C;YAC7C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,KAAK,GAAI,IAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,OAAO,GAAI,IAAY,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAI,IAAY,CAAC,UAAU,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,aAAa;gBAC1B,IAAY,CAAC,UAAU,EAAE,QAAQ,IAAI,IAAI,CAAC;SAC9C;aAAM,IAAI,IAAI,YAAY,uBAAU,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAI,IAAY,CAAC,UAAU,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,WAAW,GAAI,IAAY,CAAC,WAAW,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,KAAK,GAAI,IAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;YACtD,MAAM,UAAU,GAAiB,IAAY,CAAC,UAAU,IAAI,IAAI,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;SACzE;aAAM,IAAI,IAAI,YAAY,mBAAQ,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;YAC/B,6EAA6E;YAC7E,IAAI,CAAC,UAAU,CAAC,MAAM,GAAI,IAAY,CAAC,MAAM,IAAI,KAAK,CAAC;YACvD,MAAM,UAAU,GAAiB,IAAY,CAAC,UAAU,IAAI,IAAI,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;SACzE;aAAM,IAAI,IAAI,YAAY,WAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1B,wDAAwD;YACxD,MAAM,SAAS,GAAI,IAAY,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACrD,MAAM,SAAS,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,OAAO,GAAI,IAAY,CAAC,OAAO,CAAC,CAAC,iBAAiB;YAClE,IAAI,CAAC,UAAU,CAAC,UAAU,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;SAC9D;aAAM,IAAI,IAAI,YAAY,aAAK,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC3B,wDAAwD;YACxD,MAAM,SAAS,GAAI,IAAY,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACrD,MAAM,SAAS,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,OAAO,GAAI,IAAY,CAAC,OAAO,CAAC,CAAC,iBAAiB;YAClE,IAAI,CAAC,UAAU,CAAC,UAAU,GAAI,IAAY,CAAC,KAAK,GAAG,SAAS,CAAC;SAC9D;aAAM,IAAI,IAAI,YAAY,uBAAU,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;SAClC;aAAM,IAAI,IAAI,YAAY,qBAAS,EAAE;YACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAI,IAAY,CAAC,SAAS,CAAC;SACrD;aAAM,IAAI,IAAI,YAAY,aAAK,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC5B;aAAM,IAAI,IAAI,YAAY,mBAAQ,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;SAChC;aAAM,IAAI,IAAI,YAAY,aAAK,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC5B;aAAM;YACL,mBAAmB;YACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC3B,OAAO,CAAC,IAAI,CACV,yCAAyC,EACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CACtB,CAAC;SACH;IACH,CAAC;CACF;AA/FD,8BA+FC;AAED,IAAI,QAAQ,GAAG,CAAC,EAAa,EAAE,IAAU,EAAE,IAAU,EAAQ,EAAE;IAC7D,IAAI,IAAU,CAAC;IAEf,QAAQ,EAAE,CAAC,IAAI,EAAE;QACf,KAAK,QAAQ,CAAC,KAAK;YACjB,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM;QACR,KAAK,QAAQ,CAAC,IAAI;YAChB,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM;QACR,KAAK,QAAQ,CAAC,UAAU;YACtB,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAClE,IAAY,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC;YAC/C,MAAM;QACR,KAAK,QAAQ,CAAC,IAAI;YAChB,uDAAuD;YACvD,MAAM,SAAS,GACZ,EAAE,CAAC,UAAU,CAAC,QAAiC;gBAC/C,EAAE,CAAC,UAAU,CAAC,IAA6B;gBAC5C,eAAQ,CAAC,IAAI,CAAC;YAChB,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACzE,IAAY,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC;YACrD,IAAI,OAAO,EAAE,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS;gBAC1C,IAAY,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;YAC9C,IAAI,OAAO,EAAE,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS;gBAC1C,IAAY,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;YAC9C,sCAAsC;YACtC,IAAI;gBACF,IAAK,IAAY,CAAC,QAAQ,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;oBACjE,IAAY,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;oBACxD,IAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;iBACpD;aACF;YAAC,MAAM,GAAE;YACV,yDAAyD;YACxD,IAAY,CAAC,qBAAqB,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC;YAC1E,oDAAoD;YACpD,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE;gBAC1B,IAAI;oBACF,yBAAW,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBAC3C,IAAY,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;iBACjD;gBAAC,MAAM,GAAE;aACX;YACD,MAAM;QACR,KAAK,QAAQ,CAAC,WAAW;YACvB,IAAI,GAAG,IAAI,uBAAU,CACnB,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,UAAU,CAAC,UAAU,IAAI,KAAK,EACjC,EAAE,CAAC,UAAU,CAAC,WAAW,EACzB,EAAE,CAAC,UAAU,CAAC,QAAQ,EACtB,SAAS;YACT,sEAAsE;YACtE,EAAE,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CACjE,CAAC;YACF,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE;gBAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAChE,IAAI,MAAM;oBAAG,IAAY,CAAC,UAAU,GAAG,MAAM,CAAC;aAC/C;YACD,MAAM;QACR,KAAK,QAAQ,CAAC,SAAS;YACrB,IAAI,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAY,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;YAC9C,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE;gBAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAChE,IAAI,MAAM;oBAAG,IAAY,CAAC,UAAU,GAAG,MAAM,CAAC;aAC/C;YACD,MAAM;QACR,KAAK,QAAQ,CAAC,IAAI;YAChB,IAAI,GAAG,IAAI,WAAI,CACb,IAAI,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,EAC/B,EAAE,CAAC,UAAU,CAAC,SAAS,IAAI,KAAK,EAChC,EAAE,CAAC,UAAU,CAAC,OAAO,IAAI,KAAK,EAC9B,EAAE,CAAC,UAAU,CAAC,UAAU,IAAI,KAAK,CAClC,CAAC;YACF,MAAM;QACR,KAAK,QAAQ,CAAC,KAAK;YACjB,IAAI,GAAG,IAAI,aAAK,CACd,IAAI,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,CAAC,EACJ,EAAE,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,EAC/B,EAAE,CAAC,UAAU,CAAC,SAAS,IAAI,KAAK,EAChC,EAAE,CAAC,UAAU,CAAC,OAAO,IAAI,KAAK,EAC9B,EAAE,CAAC,UAAU,CAAC,UAAU,IAAI,KAAK,CAClC,CAAC;YACF,MAAM;QACR,KAAK,QAAQ,CAAC,WAAW;YACvB,IAAI,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM;QAER,KAAK,QAAQ,CAAC,UAAU;YACtB,IAAI,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAY,CAAC,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,IAAI,KAAK,CAAC;YAC3D,MAAM;QACR,KAAK,QAAQ,CAAC,KAAK;YACjB,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM;QAER,KAAK,QAAQ,CAAC,KAAK;YACjB,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM;QAER;YACE,OAAO,CAAC,KAAK,CACX,oBAAoB,EACpB,EAAE,CAAC,IAAI,EACP,sBAAsB,EACtB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,EACjB,uBAAuB,CACxB,CAAC;YACF,IAAI,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM;KACT;IACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAEtB,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;;;;;;;;;;;;;;;AC91EF,MAAa,gBAAgB;;AAA7B,4CA4CC;AA3CiB,kCAAiB,GAAG,IAAI,CAAC;AACzB,oCAAmB,GAAG,IAAI,CAAC;AAC3B,mCAAkB,GAAG,IAAI,CAAC;AAC1B,kCAAiB,GAAG,IAAI,CAAC;AAClC,2BAAU,GAAG,KAAK,CAAC;AACnB,gCAAe,GAAG,KAAK,CAAC;AACxB,2CAA0B,GAAG,KAAK,CAAC;AAC1B,8BAAa,GAAG,KAAK,CAAC;AACtB,sCAAqB,GAAG,GAAG,CAAC;AAE5B,oCAAmB,GAAG,GAAG,CAAC;AAC1B,oCAAmB,GAAG,IAAI,CAAC;AAE3B,uCAAsB,GAAG,CAAC,CAAC;AAC3B,8CAA6B,GAAG,CAAC,CAAC;AAElD,8BAA8B;AAE9B,yBAAyB;AACT,sCAAqB,GAAG,CAAC,CAAC,CAAC,2EAA2E;AACtG,uCAAsB,GAAG,CAAC,CAAC,CAAC,+DAA+D;AAC3F,uCAAsB,GAAG,CAAC,CAAC,CAAC,6CAA6C;AAEzF,mCAAmC;AACnB,kCAAiB,GAAG,CAAC,CAAC,CAAC,gEAAgE;AACvF,oCAAmB,GAAG,CAAC,CAAC,CAAC,kEAAkE;AAE3G,oCAAoC;AACpB,qCAAoB,GAAG,GAAG,CAAC,CAAC,mDAAmD;AAC/E,uCAAsB,GAAG,GAAG,CAAC,CAAC,sDAAsD;AAEpG,gCAAgC;AAChB,uCAAsB,GAAG,EAAE,CAAC,CAAC,oDAAoD;AACjF,yCAAwB,GAAG,GAAG,CAAC,CAAC,sDAAsD;AAEtG,yBAAyB;AACT,+CAA8B,GAAG,IAAI,CAAC,CAAC,6CAA6C;AACpF,2CAA0B,GAAG,CAAC,CAAC,CAAC,oCAAoC;AACpE,kCAAiB,GAAG,IAAI,CAAC,CAAC,4BAA4B;AACtD,uCAAsB,GAAG,IAAI,CAAC,CAAC,oDAAoD;AAEnF,sCAAqB,GAAG,CAAC,CAAC,CAAC,kDAAkD;AAC7E,kCAAiB,GAAG,CAAC,CAAC,CAAC,8CAA8C;;;;;;;;;;;;;;;AC3CvF,kGAAgD;AAChD,mEAA+B;AAC/B,gGAAiD;AACjD,mEAAoC;AAEpC,IAAY,SA4BX;AA5BD,WAAY,SAAS;IACnB,mCAAC;IACD,mCAAC;IACD,yCAAI;IACJ,mCAAC;IACD,yCAAI;IACJ,2CAAK;IACL,qCAAE;IACF,yCAAI;IACJ,2CAAK;IACL,2CAAK;IACL,8CAAM;IACN,sDAAU;IACV,wDAAW;IACX,sDAAU;IACV,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,kDAAQ;IACR,4CAAK;IACL,8CAAM;IACN,8CAAM;IACN,oCAAC;AACH,CAAC,EA5BW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QA4BpB;AAEY,aAAK,GAAG;IACnB,QAAQ,EAAE,EAAE;IAEZ,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,IAAI;IAClB,kBAAkB,EAAE,GAAG;IACvB,eAAe,EAAE,UAAU,GAAW,IAAG,CAAC;IAC1C,SAAS,EAAE,cAAa,CAAC;IACzB,SAAS,EAAE,cAAa,CAAC;IACzB,WAAW,EAAE,cAAa,CAAC;IAC3B,SAAS,EAAE,cAAa,CAAC;IACzB,YAAY,EAAE,cAAa,CAAC;IAC5B,aAAa,EAAE,cAAa,CAAC;IAC7B,UAAU,EAAE,cAAa,CAAC;IAC1B,YAAY,EAAE,cAAa,CAAC;IAC5B,SAAS,EAAE;QACT,aAAK,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IACD,SAAS,EAAE;QACT,aAAK,CAAC,aAAa,EAAE,CAAC;IACxB,CAAC;IACD,SAAS,EAAE;QACT,aAAK,CAAC,UAAU,EAAE,CAAC;IACrB,CAAC;IACD,SAAS,EAAE;QACT,aAAK,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IACD,aAAa,EAAE,cAAa,CAAC;IAC7B,iBAAiB,EAAE,cAAa,CAAC;IACjC,kBAAkB,EAAE,cAAa,CAAC;IAClC,eAAe,EAAE,cAAa,CAAC;IAC/B,iBAAiB,EAAE,cAAa,CAAC;IACjC,WAAW,EAAE,cAAa,CAAC;IAC3B,aAAa,EAAE,cAAa,CAAC;IAC7B,cAAc,EAAE,cAAa,CAAC;IAC9B,cAAc,EAAE,UAAU,GAAW,IAAG,CAAC;IACzC,cAAc,EAAE,cAAa,CAAC;IAC9B,aAAa,EAAE,cAAa,CAAC;IAC7B,cAAc,EAAE,cAAa,CAAC;IAC9B,SAAS,EAAE,cAAa,CAAC;IACzB,uBAAuB,EAAE,EAAE;IAC3B,wBAAwB,EAAE,EAAE;IAC5B,kBAAkB,EAAE,EAAE;IACtB,kBAAkB,EAAE,EAAE;IACtB,gBAAgB,EAAE,EAAE;IAEpB,mBAAmB,EAAE,EAAE;IACvB,iBAAiB,EAAE,EAAE;IAErB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;IACT,SAAS,EAAE,KAAK;IAEhB,aAAa,EAAE,CAAC;IAChB,YAAY,EAAE,EAAE;IAEhB,4BAA4B;IAC5B,iBAAiB,EAAE,CAAC;IACpB,cAAc,EAAE,CAAC;IACjB,cAAc,EAAE,CAAC;IACjB,gBAAgB,EAAE,KAAK;IAEvB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,KAAK,EAAE,YAAY;IACnB,IAAI,EAAE,WAAW;IACjB,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,QAAQ;IAChB,CAAC,EAAE,MAAM;IAET,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;IAEZ,MAAM,EAAE,UAAU,OAAe;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;QAClC,IAAI,KAAK,CAAC,MAAM;YAAE,OAAO,CAAC,2BAA2B;QACrD,IAAI,KAAK,CAAC,GAAG;YAAE,aAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI;YAC7D,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,2BAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,0BAAkB,GAAG,KAAK,CAAC,GAAG,CAAC;QAC/B,aAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAClC,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,aAAK,CAAC,IAAI;gBACb,aAAK,CAAC,YAAY,EAAE,CAAC;gBACrB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,KAAK;gBACd,aAAK,CAAC,aAAa,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,EAAE;gBACX,aAAK,CAAC,UAAU,EAAE,CAAC;gBACnB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,IAAI;gBACb,aAAK,CAAC,YAAY,EAAE,CAAC;gBACrB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,KAAK;gBACd,aAAK,CAAC,aAAa,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,aAAK,CAAC,KAAK;gBACd,aAAK,CAAC,aAAa,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,aAAK,CAAC,MAAM;gBACf,aAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ,CAAC;YACpB,KAAK,aAAK,CAAC,QAAQ;gBACjB,aAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,MAAM;YACR,KAAK,aAAK,CAAC,MAAM;gBACf,aAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,aAAK,CAAC,KAAK;gBACd,aAAK,CAAC,aAAa,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,aAAK,CAAC,MAAM;gBACf,aAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,aAAK,CAAC,CAAC;gBACV,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,MAAM;SACT;IACH,CAAC;IAED,OAAO,EAAE,UAAU,KAAoB;QACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,YAAY,EAAE;YACnC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,KAAK,CAAC,IAAI,KAAK,aAAK,CAAC,CAAC;YAAE,aAAK,CAAC,WAAW,EAAE,CAAC;IAClD,CAAC;IAED,sBAAsB,EAAE,UAAU,CAAS,EAAE,CAAS;QACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAK,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC,EAAE;YAC3D,aAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,uBAAuB,EAAE,UAAU,CAAS,EAAE,CAAS;QACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAK,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5D,aAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,iBAAiB,EAAE,UAAU,CAAS,EAAE,CAAS;QAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAK,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE;YACtD,aAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,iBAAiB,EAAE,UAAU,CAAS,EAAE,CAAS,EAAE,MAAc;QAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAK,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE;YACtD,aAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,eAAe,EAAE,UAAU,CAAS,EAAE,CAAS,EAAE,MAAc;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE;YACpD,aAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,kBAAkB,EAAE,UAAU,KAAiB;QAC7C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ;iBACvB,cAAc,CAAC,YAAY,CAAC;iBAC5B,qBAAqB,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;YACjC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;YAEzC,OAAO,CAAC,GAAG,CACT,oCAAoC,CAAC,QAAQ,CAAC,YAAY,WAAI,CAAC,KAAK,cAAc,OAAO,cAAc,OAAO,EAAE,CACjH,CAAC;YAEF,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,aAAK,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAChD;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,aAAK,CAAC,uBAAuB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACjD;SACF;IACH,CAAC;IAED,cAAc,EAAE,UAAU,KAAiB;QACzC,WAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ;aACvB,cAAc,CAAC,YAAY,CAAC;aAC5B,qBAAqB,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEjC,wBAAwB;QACxB,uBAAe,GAAG,CAAC,CAAC;QACpB,uBAAe,GAAG,CAAC,CAAC;QAEpB,+BAA+B;QAC/B,oBAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,oBAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;QAE1C,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,CAAC,CAAC;IACtD,CAAC;IAED,wBAAwB,EAAE;QACxB,IAAI,aAAK,CAAC,SAAS,KAAK,SAAS,IAAI,aAAK,CAAC,SAAS,KAAK,SAAS,EAAE;YAClE,oBAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAK,CAAC,SAAS,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;YACxD,oBAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAK,CAAC,SAAS,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;YAExD,4CAA4C;YAC5C,yBAAW,CAAC,WAAW,EAAE,CAAC,wBAAwB,EAAE,CAAC;SACtD;IACH,CAAC;IAED,eAAe,EAAE,UAAU,KAAiB;QAC1C,IAAI,aAAK,CAAC,SAAS;YAAE,OAAO,CAAC,4BAA4B;QACzD,yBAAW,CAAC,WAAW,EAAE,CAAC,cAAc,EAAE,CAAC;QAC3C,uBAAe,GAAG,IAAI,CAAC;QACvB,gCAAwB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtC,yBAAiB,GAAG,KAAK,CAAC;QAC1B,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAElE,0BAA0B;QAC1B,IAAI,CAAC,aAAK,CAAC,kBAAkB,EAAE;YAC7B,gCAAwB,GAAG,WAAW,CAAC,aAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,oBAAoB;SACzF;IACH,CAAC;IAED,aAAa,EAAE,UAAU,KAAiB;QACxC,uBAAe,GAAG,KAAK,CAAC;QACxB,gCAAwB,GAAG,IAAI,CAAC;QAChC,aAAK,CAAC,eAAe,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAEhE,8BAA8B;QAC9B,+BAAuB,GAAG,CAAC,CAAC;QAC5B,8BAAsB,GAAG,KAAK,CAAC;QAE/B,4BAA4B;QAC5B,IAAI,aAAK,CAAC,kBAAkB,EAAE;YAC5B,aAAa,CAAC,aAAK,CAAC,kBAAkB,CAAC,CAAC;YACxC,gCAAwB,GAAG,IAAI,CAAC;SACjC;QAED,wEAAwE;QACxE,UAAU,CAAC,GAAG,EAAE;YACd,yBAAiB,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,kBAAkB,EAAE,IAAI;IAExB,gBAAgB,EAAE;QAChB,IAAI,CAAC,aAAK,CAAC,SAAS,IAAI,aAAK,CAAC,kBAAkB,KAAK,IAAI;YAAE,OAAO;QAElE,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,aAAK,CAAC,kBAAkB,GAAG,aAAK,CAAC,WAAW,EAAE;YAC9D,IAAI,CAAC,aAAK,CAAC,WAAW,EAAE;gBACtB,yBAAiB,GAAG,IAAI,CAAC;gBACzB,8CAA8C;gBAC9C,IAAI,aAAK,CAAC,YAAY,EAAE;oBACtB,aAAK,CAAC,YAAY,EAAE,CAAC;iBACtB;aACF;SACF;IACH,CAAC;IAED,UAAU,EAAE,UAAU,GAAG;QACvB,WAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,OAAO,CACL,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc;SACxD,CAAC,CAAC,SAAS;IACd,CAAC;IAED,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;IACX,QAAQ,EAAE,CAAC;IACX,QAAQ,EAAE,CAAC;IACX,MAAM,EAAE,KAAK;IAEb,gBAAgB,EAAE,UAAU,GAAe;QACzC,4CAA4C;QAC5C,WAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,GAAG,CAAC,cAAc,EAAE,CAAC;QAErB,MAAM,UAAU,GAAG,aAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,mBAAW,GAAG,UAAU,CAAC,OAAO,CAAC;QACjC,mBAAW,GAAG,UAAU,CAAC,OAAO,CAAC;QACjC,sBAAc,GAAG,UAAU,CAAC,OAAO,CAAC;QACpC,sBAAc,GAAG,UAAU,CAAC,OAAO,CAAC;QAEpC,0BAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEhC,aAAK,CAAC,cAAc,CAAC;YACnB,OAAO,EAAE,aAAK,CAAC,QAAQ;YACvB,OAAO,EAAE,aAAK,CAAC,QAAQ;SACV,CAAC,CAAC;QAEjB,oBAAY,GAAG,KAAK,CAAC;QAErB,yEAAyE;QACzE,uBAAe,GAAG,IAAI,CAAC;QACvB,gCAAwB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtC,yBAAiB,GAAG,KAAK,CAAC;QAC1B,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAEvD,IAAI,CAAC,aAAK,CAAC,kBAAkB,EAAE;YAC7B,gCAAwB,GAAG,WAAW,CAAC,aAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;YACnE,6CAA6C;SAC9C;IACH,CAAC;IAED,eAAe,EAAE,UAAU,GAAG;QAC5B,GAAG,CAAC,cAAc,EAAE,CAAC;QAErB,sBAAc,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACxC,sBAAc,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAExC,aAAK,CAAC,cAAc,CAAC;YACnB,OAAO,EAAE,aAAK,CAAC,QAAQ;YACvB,OAAO,EAAE,aAAK,CAAC,QAAQ;SACV,CAAC,CAAC;QAEjB,IAAI,aAAK,CAAC,MAAM;YAAE,OAAO;QAEzB,IAAI,KAAK,GAAG,aAAK,CAAC,KAAK,GAAG,aAAK,CAAC,QAAQ,CAAC;QACzC,IAAI,KAAK,GAAG,aAAK,CAAC,KAAK,GAAG,aAAK,CAAC,QAAQ,CAAC;QAEzC,wBAAwB;QACxB,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,6BAAa,CAAC,YAAY,EAAE;YACzD,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACrC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,aAAK,CAAC,iBAAiB,EAAE,CAAC;oBAC1B,gCAAwB,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC3C;qBAAM;oBACL,aAAK,CAAC,kBAAkB,EAAE,CAAC;oBAC3B,gCAAwB,GAAG,gBAAS,CAAC,KAAK,CAAC;iBAC5C;gBACD,oBAAY,GAAG,IAAI,CAAC;gBACpB,2BAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACjC,6BAAqB,GAAG,IAAI,CAAC;gBAC7B,gCAAwB,GAAG,KAAK,CAAC,CAAC,+BAA+B;aAClE;iBAAM;gBACL,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,aAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,gCAAwB,GAAG,gBAAS,CAAC,EAAE,CAAC;iBACzC;qBAAM;oBACL,aAAK,CAAC,iBAAiB,EAAE,CAAC;oBAC1B,gCAAwB,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC3C;gBACD,oBAAY,GAAG,IAAI,CAAC;gBACpB,2BAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACjC,6BAAqB,GAAG,IAAI,CAAC;gBAC7B,gCAAwB,GAAG,KAAK,CAAC,CAAC,+BAA+B;aAClE;SACF;IACH,CAAC;IAED,cAAc,EAAE,UAAU,GAAe;QACvC,GAAG,CAAC,cAAc,EAAE,CAAC;QAErB,IAAI,CAAC,aAAK,CAAC,SAAS,IAAI,CAAC,aAAK,CAAC,MAAM;YAAE,aAAK,CAAC,WAAW,EAAE,CAAC;QAC3D,uBAAe,GAAG,KAAK,CAAC;QACxB,0BAAkB,GAAG,IAAI,CAAC;QAE1B,4BAA4B;QAC5B,6BAAqB,GAAG,KAAK,CAAC;QAC9B,gCAAwB,GAAG,KAAK,CAAC;QACjC,2BAAmB,GAAG,CAAC,CAAC;QACxB,gCAAwB,GAAG,IAAI,CAAC;QAEhC,wDAAwD;QACxD,uBAAe,GAAG,KAAK,CAAC;QACxB,gCAAwB,GAAG,IAAI,CAAC;QAChC,aAAK,CAAC,eAAe,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAErD,IAAI,aAAK,CAAC,kBAAkB,EAAE;YAC5B,aAAa,CAAC,aAAK,CAAC,kBAAkB,CAAC,CAAC;YACxC,gCAAwB,GAAG,IAAI,CAAC;YAChC,4CAA4C;SAC7C;QACD,UAAU,CAAC,GAAG,EAAE;YACd,yBAAiB,GAAG,KAAK,CAAC;YAC1B,mCAAmC;QACrC,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,cAAc,EAAE;QACd,IACE,aAAK,CAAC,YAAY,KAAK,IAAI;YAC3B,IAAI,CAAC,GAAG,EAAE,IAAI,aAAK,CAAC,YAAY,GAAG,aAAK,CAAC,kBAAkB;YAE3D,uBAAe,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAc;QAC5B,8CAA8C;QAC9C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,YAAY,EAAE,KAAK;IAEnB,kBAAkB,EAAE,IAAI;IACxB,WAAW,EAAE,GAAG;IAEhB,YAAY,EAAE,IAA2B;IAEzC,sBAAsB;IACtB,aAAa,EAAE,CAAC;IAChB,kBAAkB,EAAE,IAAwB;IAC5C,eAAe,EAAE,KAAK;IACtB,kBAAkB,EAAE,KAAK,EAAE,oCAAoC;CAChE,CAAC;AACF,MAAM,CAAC,gBAAgB,CACrB,OAAO,EACP,UAAU,KAAK;IACb,aAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC,EACD,KAAK,CACN,CAAC;AACF,MAAM,CAAC,gBAAgB,CACrB,SAAS,EACT,UAAU,KAAK;IACb,aAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC,EACD,KAAK,CACN,CAAC;AAEF;;;;;;;;;;;;;;;;;EAiBE;AAEF,MAAM,CAAC,QAAQ;KACZ,cAAc,CAAC,YAAY,CAAC;KAC5B,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,aAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AAChF,MAAM,CAAC,QAAQ;KACZ,cAAc,CAAC,YAAY,CAAC;KAC5B,gBAAgB,CACf,WAAW,EACX,CAAC,KAAK,EAAE,EAAE,CAAC,aAAK,CAAC,eAAe,CAAC,KAAK,CAAC,EACvC,KAAK,CACN,CAAC;AACJ,MAAM,CAAC,QAAQ;KACZ,cAAc,CAAC,YAAY,CAAC;KAC5B,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,aAAK,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AAC7E,MAAM,CAAC,QAAQ;KACZ,cAAc,CAAC,YAAY,CAAC;KAC5B,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;AAC7E;;;;;;;;;;;IAWI;;;;;;;;;;;;;;;AChjBJ,mEAA2C;AAC3C,kGAAgD;AAEhD,2FAAmD;AACnD,qFAAyC;AACzC,sFAAwE;AACxE,yFAA2C;AAE3C,MAAa,aAAa;IAA1B;QACU,YAAO,GAA+C,EAAE,CAAC;QACzD,YAAO,GAAG,CAAC,CAAC;QACZ,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,SAAI,GAAuB,SAAS,CAAC;QACrC,UAAK,GAAkB,IAAI,CAAC;QAC5B,cAAS,GAAqB,IAAI,CAAC;IAkN7C,CAAC;IAhNC,cAAc,CAAC,IAAa,EAAE,IAAW;QACvC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,EAAE;YACR,6EAA6E;YAC7E,MAAM,UAAU,GAAG,GAAG,EAAE;gBACtB,IAAI;oBACF,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACjD,MAAM,KAAK,GACT,CAAC,CAAC,KAAK;wBACP,CAAC,CAAC,IAAI,CAAC,IAAI;wBACX,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ;wBACvC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;wBACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACxB,IAAI,KAAK,EAAE;wBACT,IAAI,CAAC,IAAI,CAAC,SAAS;4BAAE,IAAI,CAAC,SAAS,GAAG,+BAAe,EAAC,IAAI,CAAC,CAAC;wBAC5D,OAAO,CAAC,eAAe;qBACxB;iBACF;gBAAC,MAAM,GAAE;gBACV,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAC7B,CAAC,CAAC;YACF,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,MAAoB;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAU,EAAE,SAAiB,6BAAa,CAAC,cAAc;QAC9D,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,uDAAuD;QACvD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,KAAK,SAAS,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,sCAAsC,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,wBAAwB,OAAO,CAAC,MAAM,aAAa,CAAC,CAAC;QACtE,MAAM,aAAa,GAAG,GAAG,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,EAAE;gBACV,6CAA6C;gBAC7C,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;gBAC9B,OAAO;aACR;YACD,uEAAuE;YACvE,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,MAAM,IAAI,GAAG,GAAG,EAAE;gBAChB,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;oBACrC,OAAO;iBACR;gBACD,IAAI;oBACF,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBACjC,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;oBACxB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;oBACxB,IAAI,UAAU,GAAwB,SAAS,CAAC;oBAChD,IAAI;wBACF,UAAU,GAAI,KAAK,CAAC,QAAgB,EAAE,OAAO,EAAE,EAAE,CAAC;qBACnD;oBAAC,MAAM,GAAE;oBACV,MAAM,IAAI,GAAI,KAAa,CAAC,OAAO,EAAE,EAAE,CAAC;oBACxC,MAAM,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE;wBACjC,KAAK,EAAE,CAAC,GAAG,CAAC;wBACZ,KAAK,EAAE,OAAO,CAAC,MAAM;wBACrB,IAAI,EAAE,MAAM,CAAC,IAAI;wBACjB,MAAM,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE;wBAClC,IAAI;wBACJ,OAAO,EAAE,UAAU;qBACpB,CAAC,CAAC;oBACH,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBACxB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;oBACnB,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBACxB,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACtC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;oBACvB,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;oBACvB,MAAM,KAAK,GAAG,OAAO,KAAK,MAAM,IAAI,OAAO,KAAK,MAAM,CAAC;oBACvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE;wBAC/B,KAAK,EAAE,CAAC,GAAG,CAAC;wBACZ,IAAI,EAAE,MAAM,CAAC,IAAI;wBACjB,KAAK,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE;wBAC/B,KAAK;qBACN,CAAC,CAAC;iBACJ;gBAAC,OAAO,CAAC,EAAE;oBACV,qDAAqD;iBACtD;gBACD,yDAAyD;gBACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,6BAAa,CAAC,iBAAiB,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;gBAEvE,MAAM,aAAa,GAAG,QAAQ,CAAC;gBAC/B,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC;oBACpB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C,CAAC,CAAC,MAAM,CAAC;gBACX,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;gBAClD,iEAAiE;gBACjE,IAAI;oBACF,MAAM,IAAI,GAAI,KAAa,CAAC,OAAO,EAAE,EAAE,CAAC;oBACxC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;wBACnC,uDAAuD;wBACvD,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;wBACvC,IAAI,cAAc;4BAChB,SAAS,IAAI,6BAAa,CAAC,0BAA0B,CAAC;qBACzD;iBACF;gBAAC,MAAM,GAAE;gBACV,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE;oBACpC,KAAK,EAAE,CAAC,GAAG,CAAC;oBACZ,aAAa;oBACb,QAAQ;oBACR,SAAS;iBACV,CAAC,CAAC;gBACH,CAAC,EAAE,CAAC;gBACJ,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAClD,CAAC,CAAC;YACF,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;QACF,+DAA+D;QAC/D,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI;gBACF,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC5D,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClD,6BAAa,EAAC,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,KAAK,CAAC;qBAClD,IAAI,CAAC,GAAG,EAAE;oBACR,IAAY,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC5B,IAAY,CAAC,cAAc,GAAG,KAAK,CAAC;oBACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI;wBACF,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE;4BAC5C,IAAI,EAAG,IAAY,CAAC,QAAQ,EAAE,IAAI;4BAClC,YAAY,EAAE,QAAQ,CAAC,IAAI;4BAC3B,WAAW,EAAG,eAAc,CAAC,KAAK;4BAClC,cAAc,EAAE,QAAQ,CAAC,WAAW;yBACrC,CAAC,CAAC;qBACJ;oBAAC,MAAM,GAAE;oBACV,aAAa,EAAE,CAAC;gBAClB,CAAC,CAAC;qBACD,KAAK,CAAC,GAAG,EAAE;oBACV,sCAAsC;oBACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClB,IAAY,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC5B,IAAY,CAAC,cAAc,GAAG,KAAK,CAAC;oBACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,MAAM,OAAO,GAAG,GAAG,EAAE;wBACnB,IAAI,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ;4BAAE,OAAO;wBACpD,yBAAc,CAAC,GAAG,CAChB,eAAM,CAAC,0BAA0B,EACjC,OAAc,CACf,CAAC;wBACF,aAAa,EAAE,CAAC;oBAClB,CAAC,CAAC;oBACF,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC;oBAC9D,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACL,OAAO,CAAC,sBAAsB;aAC/B;YAAC,MAAM,GAAE;SACX;QACD,6DAA6D;QAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,IAAY,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAY,CAAC,cAAc,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ;gBAAE,OAAO;YACpD,yBAAc,CAAC,GAAG,CAAC,eAAM,CAAC,0BAA0B,EAAE,OAAc,CAAC,CAAC;YACtE,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC;QACF,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC;QAC9D,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;CACF;AAzND,sCAyNC;;;;;;;;;;;;;;;AChOD,sFAA6D;AAC7D,4FAK4B;AAE5B,MAAM,WAAW,GAAG,SAAS,CAAC;AAEvB,MAAM,aAAa,GAAG,CAAC,IAAU,EAAE,EAAE;IAC1C,MAAM,KAAK,GAAG,+BAAe,EAAC,IAAI,CAAC,CAAC;IACpC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,iEAAiE;IACjE,6BAAe,EAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACvC,IAAI,CAAC,WAAW,EAAE,CAAC,mBAAmB,CAAC,CAAC;AAC1C,CAAC,CAAC;AANW,qBAAa,iBAMxB;AAEK,MAAM,eAAe,GAAG,KAAK,EAAE,IAAU,EAAoB,EAAE;IACpE,MAAM,IAAI,GAAG,6BAAe,EAAC,WAAW,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE;QACT,IAAI,CAAC,WAAW,EAAE,CAAC,uBAAuB,CAAC,CAAC;QAC5C,OAAO,KAAK,CAAC;KACd;IACD,IAAI;QACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,0FAA0F;QAC1F,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7C,MAAM,6BAAa,EAAC,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,EAAE,CAAC,sBAAsB,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1C,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAlBW,uBAAe,mBAkB1B;AAEK,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,IAAI;QACF,MAAM,IAAI,GAAG,uBAAS,EAAC,GAAG,WAAW,OAAO,CAAC,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9C,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;gBAAE,0BAAY,EAAC,GAAG,WAAW,IAAI,CAAC,EAAE,CAAC,CAAC;SACrE;aAAM;YACL,oEAAoE;YACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;gBAAE,0BAAY,EAAC,GAAG,WAAW,IAAI,CAAC,EAAE,CAAC,CAAC;SAClE;KACF;IAAC,MAAM,GAAE;IACV,0BAAY,EAAC,GAAG,WAAW,OAAO,CAAC,CAAC;AACtC,CAAC,CAAC;AAZW,uBAAe,mBAY1B;;;;;;;;;;;;;;;ACnDF,4FAA0D;AAE1D,kGAAgD;AAChD,kFAAuC;AAEvC,MAAM,YAAY,GAAG,aAAa,CAAC;AAU5B,MAAM,YAAY,GAAG,CAAC,IAAU,EAAE,EAAE;IACzC,MAAM,CAAC,GAAa;QAClB,KAAK,EAAG,aAAa,CAAC,UAAU,IAAI,KAAK;QACzC,SAAS,EAAG,6BAAqB,CAAC,UAAU,IAAI,6BAAa,CAAC,KAAK;QACnE,KAAK,EAAE,6BAAa,CAAC,aAAa;QAClC,cAAc,EAAE,6BAAa,CAAC,eAAe;QAC7C,SAAS,EAAE,6BAAa,CAAC,kBAAkB;KAC5C,CAAC;IACF,uBAAS,EAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAClD,CAAC,CAAC;AATW,oBAAY,gBASvB;AAEK,MAAM,YAAY,GAAG,CAAC,IAAU,EAAE,EAAE;IACzC,MAAM,GAAG,GAAG,uBAAS,EAAC,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG;QAAE,OAAO;IACjB,IAAI;QACF,MAAM,CAAC,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAE,aAAa,CAAC,UAAU;gBAAE,aAAK,CAAC,UAAU,EAAE,CAAC;YAC9D,IAAI,CAAC,CAAC,CAAC,KAAK,IAAK,aAAa,CAAC,UAAU;gBAAE,aAAK,CAAC,UAAU,EAAE,CAAC;SAC/D;QACD,IAAI,OAAO,CAAC,CAAC,SAAS,KAAK,QAAQ,EAAE;YAClC,6BAAqB,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC;SACjD;QACD,0EAA0E;QAC1E,IAAI,OAAO,CAAC,CAAC,cAAc,KAAK,SAAS;YACvC,6BAAa,CAAC,eAAe,GAAG,CAAC,CAAC,cAAc,CAAC;QACnD,IAAI,OAAO,CAAC,CAAC,SAAS,KAAK,SAAS,EAAE;YACpC,6BAAa,CAAC,kBAAkB,GAAG,CAAC,CAAC,SAAS,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,6BAAa,CAAC,kBAAkB,CAAC,CAAC;SAC1E;KACF;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAC;KACpD;AACH,CAAC,CAAC;AAtBW,oBAAY,gBAsBvB;;;;;;;;;;;;;;;AChDF,2HAAwE;AACxE,2FAAmD;AACnD,qFAAmE;AAgBnE,MAAa,YAAY;IAGvB;QAFQ,UAAK,GAAU,YAAY,CAAC,YAAY,EAAE,CAAC;QA+B3C,sBAAiB,GAAG,CAC1B,OAAkD,EAC5C,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACvD,kDAAkD;QACpD,CAAC,CAAC;QAEM,qBAAgB,GAAG,CACzB,OAAiD,EAC3C,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,OAAO,CAAC,MAAM,CAAC;YACxC,gDAAgD;QAClD,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAC1B,OAAkD,EAC5C,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC;YACzC,iDAAiD;QACnD,CAAC,CAAC;QAEM,qBAAgB,GAAG,GAAS,EAAE;YACpC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,CAAC;YAC5B,wDAAwD;QAC1D,CAAC,CAAC;QAEM,wBAAmB,GAAG,CAC5B,OAAoD,EAC9C,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,OAAO,CAAC,MAAM,CAAC;YAC5C,oDAAoD;QACtD,CAAC,CAAC;QAEM,wBAAmB,GAAG,CAC5B,OAAoD,EAC9C,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,CAAC;YAC/B,mDAAmD;QACrD,CAAC,CAAC;QArEA,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,MAAM,CAAC,YAAY;QACzB,OAAO;YACL,aAAa,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC;YACb,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,CAAC;YACd,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;YACjB,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,IAAI;YAClB,gBAAgB,EAAE,EAAE;YACpB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,CAAC;SACT,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7D,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7D,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACnE,yBAAc,CAAC,EAAE,CAAC,eAAM,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACrE,CAAC;IA6CM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,KAAK;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC;IACtB,CAAC;IAEM,kBAAkB,CAAC,YAAoB;QAC5C,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,CAAC;IAEM,qBAAqB,CAAC,EAC3B,KAAK,EACL,QAAQ,GAIT;QACC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC/B,KAAK;YACL,QAAQ,EAAE,qCAAc,EAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,YAAY,EAAE,CAAC;QACzC,wCAAwC;IAC1C,CAAC;IAEM,QAAQ,CAAC,KAAY;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AAhHD,oCAgHC;AAEY,oBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;;;;;ACpI/C,2FAAmD;AAEnD,MAAa,OAAO;IAYlB,YAAY,OAAoB;QAPxB,sBAAiB,GAAW,KAAK,CAAC;QAElC,YAAO,GAAW,EAAE,CAAC;QAErB,wBAAmB,GAAW,CAAC,CAAC,CAAC;QACxB,gBAAW,GAAW,EAAE,CAAC;QA4BnC,mBAAc,GAAG,CAAC,GAAW,EAAQ,EAAE;YAC5C,MAAM,OAAO,GAAG,qDAAqD,CAAC,KAAK,CACzE,EAAE,CACH,CAAC;YACF,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;gBACxB,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACzB,IACE,IAAI,CAAC,iBAAiB,KAAK,KAAK;wBAChC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,EACpC;wBACA,IAAI,CAAC,IAAI;4BACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;gCACnC,GAAG;gCACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;wBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;wBAErB,IAAI,CAAC,OAAO;4BACV,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gCAC1C,GAAG;gCACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;qBAChE;iBACF;gBACD,oDAAoD;gBACpD,OAAO;aACR;iBAAM;gBACL,QAAQ,GAAG,EAAE;oBACX,KAAK,WAAW;wBACd,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;4BACnB,IAAI,CAAC,IAAI;gCACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oCACvC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;4BAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;4BAErB,IAAI,CAAC,OAAO;gCACV,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;oCACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;yBAChE;wBACD,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;4BAClC,IAAI,CAAC,IAAI;gCACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;oCACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACzD,IAAI,CAAC,aAAa,EAAE,CAAC;4BAErB,IAAI,CAAC,OAAO;gCACV,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;oCACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;yBAChE;wBACD,MAAM;oBACR,KAAK,WAAW;wBACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,MAAM;oBACR,KAAK,YAAY;wBACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBAC1D,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,MAAM;oBACR,KAAK,SAAS;wBACZ,IACE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC;4BAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EACvD;4BACA,IAAI,CAAC,mBAAmB,EAAE,CAAC;4BAC3B,IAAI,CAAC,IAAI;gCACP,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CACxD,CAAC;4BACJ,IAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;yBAC1B;wBACD,MAAM;oBACR,KAAK,WAAW;wBACd,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;4BAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;4BAC3B,IAAI,CAAC,IAAI;gCACP,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CACxD,CAAC;4BACJ,IAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;yBAC1B;6BAAM,IAAI,IAAI,CAAC,mBAAmB,KAAK,CAAC,EAAE;4BACzC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;4BAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;yBACd;wBACD,MAAM;oBACR,KAAK,OAAO;wBACV,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,MAAM;iBACT;aACF;YACD,oDAAoD;QACtD,CAAC,CAAC;QAEM,qBAAgB,GAAG,CAAC,CAAa,EAAQ,EAAE;YACjD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC,CAAC;QAjIA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,qEAAqE;IACvE,CAAC;IAEM,gBAAgB,CAAC,QAAoB;QAC1C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAEM,iBAAiB,CAAC,QAAoB;QAC3C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACjC,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IA4GM,KAAK;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,OAA2B,CAAC;QAC/C,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;YAC9C,IAAI;gBACF,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,+DAA+D;gBAC/D,IAAI,OAAO,KAAK,CAAC,iBAAiB,KAAK,UAAU,EAAE;oBACjD,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAAC;oBACrC,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBACnC;aACF;YAAC,MAAM,GAAE;SACX;IACH,CAAC;IAEO,WAAW;QACjB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAElC,IAAI,OAAO,EAAE;YACX,qCAAqC;YACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhC,2DAA2D;YAC3D,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;gBAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,4BAA4B;aACxD;YACD,yBAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;YAEhD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAE/B,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC3B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC/B,yBAAc,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,6BAA6B;YAC7B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;SAC/B;IACH,CAAC;IAEO,aAAa;QACnB,gDAAgD;QAChD,+CAA+C;QAC/C,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QAErC,+CAA+C;IACjD,CAAC;IAEO,oBAAoB;QAC1B,0DAA0D;IAC5D,CAAC;CAGF;AAxMD,0BAwMC;;;;;;;;;;;;;;;AC1MD;;;;;;;;;GASG;AACH,MAAa,WAAW;IAOtB;;;OAGG;IACI,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE;QACxC,IAAI,EAAU,CAAC;QAEf,uEAAuE;QACvE,GAAG;YACD,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAsB;YAC/D,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;SACxC,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;QAEjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,OAAO,CAAC,UAAkB;QACtC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,0CAA0C,UAAU,EAAE,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,oDAAoD;IAC7C,MAAM,CAAC,UAAU,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,YAAY;QACxB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;AA9CH,kCA+CC;AA9CC,8DAA8D;AAC/C,iBAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAEjC,8DAA8D;AAC/C,qBAAS,GAAG,IAAI,GAAG,EAAU,CAAC;;;;;;;;;;;;;;;ACf/C,wGAAsD;AACtD,wFAA0C;AAE1C,MAAa,cAAe,SAAQ,uBAAU;IAC5C,YACE,EAAE,CAAC,EAAE,CAAC,KAA+B;QACnC,CAAC,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC;QAC1B,CAAC,EAAE,6BAAa,CAAC,MAAM,GAAG,CAAC;KAC5B;QAED,KAAK,CAAC;YACJ,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,qCAAqC;YAC9C,CAAC;YACD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAdD,wCAcC;;;;;;;;;;;;;;;ACjBD,kFAAuC;AAEvC,wFAA0C;AAE1C,MAAa,SAAS;IAapB,YACE,CAAS,EACT,CAAS,EACT,KAAa,EACb,MAAc,EACd,IAAY,EACZ,OAAmB,EACnB,aAAsB,KAAK,EAC3B,MAAa;QAef,mEAAmE;QACnE,mBAAc,GAAG,GAAG,EAAE;YACpB,0CAA0C;YAC1C,uBAAU,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,CAAC,IAAI,GAAG,aAAK,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC;YAC/D,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC;QApBA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAWD,+CAA+C;IAC/C,eAAe,CAAC,CAAS,EAAE,CAAS;QAClC,OAAO,CACL,CAAC,IAAI,IAAI,CAAC,CAAC;YACX,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;YACxB,CAAC,IAAI,IAAI,CAAC,CAAC;YACX,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAC1B,CAAC;IACJ,CAAC;CACF;AAtDD,8BAsDC;;;;;;;;;;;;;;;AC1DD,mEAA+B;AAC/B,wGAAsD;AACtD,gFAAsC;AAItC,MAAa,SAAS;IACpB,MAAM,CAAC,YAAY,CACjB,CAAS,EACT,CAAS,EACT,IAAU,EACV,MAAc,EACd,OAA2D;QAE3D,qCAAqC;QACrC,IACE,aAAK,CAAC,MAAM,KAAK,SAAS;YAC1B,aAAK,CAAC,MAAM,KAAK,SAAS;YAC1B,OAAO,KAAK,MAAM,EAClB;YACA,OAAO,EAAE,CAAC;SACX;QAED,gCAAgC;QAChC,MAAM,aAAa,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC;QAC9C,MAAM,aAAa,GAAG,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC;QAE/C,sCAAsC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,CAAC,aAAK,CAAC,MAAM,GAAG,aAAa,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;YACzD,6BAAa,CAAC,QAAQ,CACzB,CAAC;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,CAAC,aAAK,CAAC,MAAM,GAAG,aAAa,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;YACzD,6BAAa,CAAC,QAAQ,CACzB,CAAC;QAEF,MAAM,OAAO,GAAG,CAAC,GAAG,WAAW,CAAC;QAChC,MAAM,OAAO,GAAG,CAAC,GAAG,WAAW,CAAC;QAEhC,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,IACE,OAAO,KAAK,QAAQ;YACpB,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EACxD;YACA,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,EAAE;oBAChD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;iBAClC;aACF;YAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,CAAC,CAAC,KAAK,OAAO,IAAI,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE;oBAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBAChC;aACF;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC5C,IAAI,IAAI,EAAE;gBACR,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aAC9B;SACF;aAAM,IAAI,OAAO,KAAK,WAAW,EAAE;YAClC,IAAI,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE;gBACzC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;aAClE;SACF;aAAM;YACL,IAAI,MAAM,CAAC,kBAAkB,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrD;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,IAAI,CACT,KAAa,EACb,CAAS,EACT,CAAS,EACT,IAAU,EACV,MAAc,EACd,KAAa,EACb,KAAa,EACb,OAA2D;QAE3D,MAAM,OAAO,GAAa,SAAS,CAAC,YAAY,CAC9C,CAAC,EACD,CAAC,EACD,IAAI,EACJ,MAAM,EACN,OAAO,CACR,CAAC;QACF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,OAAO;SACR;QACD,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,IAAI,OAAO,KAAK,MAAM,EAAE;YACtB,OAAO;SACR;QACD,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC5B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5C,IAAI,OAAO,KAAK,WAAW,EAAE;gBAC3B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;aAC1B;iBAAM;gBACL,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;aAC5B;YACD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;YAE9B,MAAM,OAAO,GAAG,WAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YAEnD,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,CAAC;YAEb,QAAQ,OAAO,EAAE;gBACf,KAAK,QAAQ;oBACX,IAAI,GAAG,6BAAa,CAAC,gCAAgC;wBACnD,CAAC,CAAC,KAAK,GAAG,CAAC;wBACX,CAAC,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;oBACtC,IAAI,GAAG,6BAAa,CAAC,gCAAgC;wBACnD,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,YAAY;wBACxB,CAAC,CAAC,6BAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC9B,MAAM;gBACR,KAAK,WAAW;oBACd,IAAI,GAAG,6BAAa,CAAC,kCAAkC;wBACrD,CAAC,CAAC,KAAK,GAAG,CAAC;wBACX,CAAC,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;oBACtC,IAAI,GAAG,6BAAa,CAAC,kCAAkC;wBACrD,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,YAAY;wBACxB,CAAC,CAAC,6BAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC9B,MAAM;gBACR,KAAK,gBAAgB;oBACnB,IAAI,GAAG,6BAAa,CAAC,wCAAwC;wBAC3D,CAAC,CAAC,KAAK,GAAG,CAAC;wBACX,CAAC,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;oBACtC,IAAI,GAAG,6BAAa,CAAC,wCAAwC;wBAC3D,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,YAAY;wBACxB,CAAC,CAAC,6BAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC9B,MAAM;aACT;YAED,wDAAwD;YACxD,WAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC7D;QACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;CACF;AA1ID,8BA0IC;;;;;;;;;;;;;;;AChJD,6GAAyD;AACzD,mEAA+B;AAC/B,qFAAwC;AAExC,MAAa,UAAW,SAAQ,qBAAS;IACvC,YAAY,EACV,IAAI,EACJ,OAAO,EACP,CAAC,EACD,CAAC,GAMF;QACC,MAAM,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QAChD,MAAM,MAAM,GAAG,EAAE,CAAC;QAElB,KAAK,CACH,CAAC,EACD,CAAC,EACD,KAAK,EACL,MAAM,EACN,IAAI,EACJ,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,qBAAqB,CAAC,EAC3D,KAAK,CACN,CAAC;IACJ,CAAC;IAED,IAAI;QACF,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEvC,yBAAyB;QACzB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAChD,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CACxB,CAAC;QAEF,qBAAqB;QACrB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;QACrD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QACvB,WAAI,CAAC,GAAG,CAAC,UAAU,CACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CACxB,CAAC;QAEF,mBAAmB;QACnB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,wBAAwB,CAAC;QAC9C,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACpD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,WAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEhE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;QACrD,WAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/D,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;CACF;AA3DD,gCA2DC;;;;;;;;;;;;;;;AC/DD,mEAA+B;AAC/B,wGAAsD;AACtD,6EAA8C;AAC9C,uFAAsD;AAKtD,MAAa,GAAG;IAkBd,YAAY,IAAU,EAAE,MAAc;QAhBtC,YAAO,GAAU,EAAE,CAAC;QACpB,eAAU,GAAU,EAAE,CAAC;QAIvB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,gBAAW,GAAW,CAAC,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QAGxB,kDAAkD;QAClD,wBAAmB,GACjB,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC;QACvB,qBAAgB,GAAW,CAAC,CAAC;QAS7B,4DAA4D;QAC5D,2BAAsB,GAAG,CAAC,IAAU,EAAS,EAAE;YAC7C,MAAM,WAAW,GAAU,EAAE,CAAC;YAE9B,6DAA6D;YAC7D,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1D,yCAAyC;wBACzC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClC,yCAAyC;4BACzC,IACE,IAAI;gCACJ,IAAI,CAAC,WAAW;gCAChB,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,YAAY,EACtC;gCACA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BACxB;yBACF;qBACF;iBACF;aACF;YAED,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAE3D,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;gBAC5D,IACE,eAAe,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBAC5C,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,6BAAa,CAAC,cAAc,CAAC,EACvD;oBACA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBAChB,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,IAAI,CAAC,UAAU;wBACtB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;wBAC1B,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;wBAC9C,SAAS,EACP,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,GAAG,EAAU,EAAE,6BAA6B;qBACpG,CAAC,CAAC;iBACJ;aACF;YAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO;iBAC9B,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;iBACxB,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAElC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gBACtE,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gBAEtE,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;gBACnD,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAEhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;aAClB;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YAC5B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YAEjD,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACxB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC5B;YACD;;eAEG;YACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QACF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAC5C,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAE5C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,IAAI,KAAK,GAAG,GAAG,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;aACrC;;gBAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,IAAI,KAAK,GAAG,GAAG,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;aACrC;;gBAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;QACzC,CAAC,CAAC;QAEF,qBAAqB;QACrB,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAE3D,qDAAqD;YACrD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;gBAClD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,GAAG,EAAU,CAAC,CAAC;aAClE;YACD,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC;YAEjE,+DAA+D;YAC/D,KAAK,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE;gBACvE,KAAK,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE;oBACvE,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC9C,IAAI,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE;wBACrC,MAAM,OAAO,GAAG,GAAG,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;wBAClD,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;qBACxB;iBACF;aACF;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC7C,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS;gBAAE,OAAO,KAAK,CAAC;YAE7B,MAAM,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACpD,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,oBAAoB;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC;QAEF,6BAAwB,GAAG,CAAC,KAAa,EAAE,EAAE;YAC3C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;YAC7B,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;QACpD,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,MAAc,EAAE,EAAE;YACnC,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,6BAAa,CAAC,KAAK,CAAC;gBACpC,wBAAwB;gBACxB,0CAA0C;gBAC1C,EAAE,GAAG,IAAI,CAAC,KAAK;gBACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,6BAAa,CAAC,MAAM,CAAC;gBACrC,wBAAwB;gBACxB,2CAA2C;gBAC3C,CAAC,GAAG,IAAI,CAAC,KAAK;gBACd,MAAM;gBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;QACJ,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,IAAI,EAAE,KAAa,EAAE,EAAE;YACjC,iDAAiD;YAEjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE3C,yCAAyC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,gCAAgC;QAChC,iBAAY,GAAG,CAAC,IAAI,EAAE,EAAE;YACtB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YAE/B,2DAA2D;YAC3D,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC3D,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAE9D,sEAAsE;YACtE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;gBACxD,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;aACvC;YAED,6DAA6D;YAC7D,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;oBACpD,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;wBACzC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/C;iBACF;aACF;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YAC/B,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CACrB,CAAC;YACF,IAAI,KAAK,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;gBAAE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YACrE,IAAI,KAAK,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU;gBAAE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YACvE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EACnB,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CACrB,CAAC;QACJ,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAK,EAAE,EAAE;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aACzD;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAK,EAAE,EAAE;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK;oBAAE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC1D,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;oBACxB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;oBAC7B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzD;gBACD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,mCAAmC;aACpE;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,OAAO,EAAE,KAAa,EAAE,EAAE;YAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;gBACvB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;gBAC7B,IACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACzD,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EACvC;oBACA,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrE;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,yBAAoB,GAAG,CAAC,OAAO,EAAE,KAAa,EAAE,EAAE;YAChD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACzE;oBACE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;wBACpC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;wBAC/B,qCAAqC;wBACrC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,WAAW;wBACd,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,aAAa;wBAChB,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,YAAY;wBACf,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,cAAc;wBACjB,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,eAAe;wBAClB,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,cAAc;wBACjB,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,gBAAgB;wBACnB,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC,CAAC,eAAe;qBACnB;iBACF;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,QAAQ,EAAE,EAAE;YAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;gBAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC3B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3D;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,WAAW,EAAE,EAAE;YACpC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;gBACpC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aACrE;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAK,EAAE,EAAE;YACzB,8DAA8D;YAC9D,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAU,CAAC,KAAK,EAAE;gBACnC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC/B;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAU,CAAC,IAAI,EAAE;gBAClC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;aAChC;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAU,CAAC,QAAQ,EAAE;gBACtC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;aAChC;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAU,CAAC,QAAQ,EAAE;gBACtC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;aAC7B;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAK,EAAE,EAAE;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBACf,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzD;aACF;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,yBAAoB,GAAG,GAAG,EAAE;YAC1B,WAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;QAtYA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,sCAAsC;IACxC,CAAC;CAmYF;AA1ZD,kBA0ZC;;;;;;;;;;;;;;;AClaD,mEAA+B;AAC/B,qFAAwC;AACxC,gFAA0C;AAC1C,wGAAsD;AACtD,gGAAiD;AACjD,uFAA0C;AAE1C,MAAa,IAAI;IAcf,YACE,GAMK;QAdC,oBAAe,GAAY,IAAI,CAAC;QACxC,uBAAkB,GAAyC,IAAI,CAAC;QAChE,4BAA4B;QACpB,wBAAmB,GAAW,CAAC,CAAC;QAChC,yBAAoB,GAAW,CAAC,CAAC,CAAC;QACzB,+BAA0B,GAAG,GAAG,CAAC,CAAC,eAAe;QA4elE,iBAAiB;QACjB,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,6BAA6B;QAC/B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,4BAA4B;QAC9B,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,iCAAiC;QACnC,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC1B,kCAAkC;QACpC,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC1B,oCAAoC;QACtC,CAAC,CAAC;QAvfA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,YAAY,eAAM,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe,KAAK,KAAK,CAAC;YACrD,IAAI,IAAI,CAAC,eAAe;gBAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACvD,wDAAwD;SACzD;IACH,CAAC;IAED,MAAM,CAAC,kBAAkB;QACvB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAC5C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;QAE3B,6DAA6D;QAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,MAAM,WAAW,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC,0BAA0B;QAC1E,MAAM,OAAO,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC;QACxC,MAAM,OAAO,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;QAE3C,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,iEAAiE;QAEjE,oDAAoD;QACpD,WAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAEzB,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAED,qBAAqB;QACnB,mCAAmC;QACnC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,WAAW,GAAG,IAAI,qBAAS,CAC9B,CAAC,EACD,CAAC,CAAC,EACF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EACvB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EACxB,GAAG,EACH,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAClB,KAAK,EACL,IAAI,CACL,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,6EAA6E;QAC7E,0EAA0E;QAC1E,2EAA2E;QAC3E,IAAI,CAAC,SAAS,CACZ,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAClE,CAAC;QACF,IAAI,CAAC,SAAS,CACZ,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAChE,CAAC;QACF,MAAM,UAAU,GAAG,IAAI,qBAAS,CAC9B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,YAAY,EACZ,GAAG,EAAE,GAAE,CAAC,EACR,KAAK,EACL,IAAI,CACL,CAAC;QACF,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC3B,MAAM,YAAY,GAAG,IAAI,qBAAS,CAChC,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,iBAAiB,EACjB,GAAG,EAAE;YACH,wCAAwC;YACxC,6BAAa,CAAC,eAAe,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC;YAC/D,MAAM,OAAO,GAAG,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,0BAA0B,OAAO,EAAE,CAAC,CAAC;YAC3D,IAAI;gBACF,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAO,CAAC,sEAA6B,CAAC,CAAC;gBAChE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;YAAC,MAAM,GAAE;QACZ,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE7B,MAAM,eAAe,GAAG,IAAI,qBAAS,CACnC,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,YAAY,EACZ,GAAG,EAAE;YACH,6BAAa,CAAC,kBAAkB,GAAG,CAAC,6BAAa,CAAC,kBAAkB,CAAC;YACrE,MAAM,OAAO,GAAG,6BAAa,CAAC,kBAAkB;gBAC9C,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC,UAAU,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,OAAO,EAAE,CAAC,CAAC;YACtD,IAAI;gBACF,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAO,CAAC,sEAA6B,CAAC,CAAC;gBAChE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;YAAC,MAAM,GAAE;QACZ,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAEhC,MAAM,OAAO,GAAG,IAAI,qBAAS,CAC3B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,WAAW,EACX,GAAG,EAAE;YACH,IAAI;gBACF,MAAM,EAAE,aAAa,EAAE,GAAG,mBAAO,CAAC,8DAAyB,CAAC,CAAC;gBAC7D,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;aACvC;QACH,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,0BAA0B;QAE1B,MAAM,OAAO,GAAG,IAAI,qBAAS,CAC3B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,WAAW,EACX,GAAG,EAAE;YACH,IAAI;gBACF,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAO,CAAC,8DAAyB,CAAC,CAAC;gBAC/D,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5B;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;aACvC;QACH,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,0BAA0B;QAE1B,MAAM,UAAU,GAAG,IAAI,qBAAS,CAC9B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,UAAU,EACV,GAAG,EAAE;YACH,IAAI;gBACF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;aACrB;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;aAC3C;QACH,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE3B,MAAM,QAAQ,GAAG,IAAI,qBAAS,CAC5B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,YAAY,EACZ,GAAG,EAAE;YACH,IAAI;gBACF,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAO,CAAC,8DAAyB,CAAC,CAAC;gBAC/D,eAAe,EAAE,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC,CAAC;aAC5D;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;aAC7C;QACH,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,2BAA2B;QAC3B,mEAAmE;QACnE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,MAAM,MAAM,GAAG,IAAI,qBAAS,CAC1B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,wBAAwB,EACxB,GAAG,EAAE,GAAE,CAAC,EACR,KAAK,EACL,IAAI,CACL,CAAC;QACF,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC,cAAc;QACrD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,qBAAS,CAC/B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,UAAU,EACV,GAAG,EAAE;YACH,IAAI;gBACF,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAO,CAAC,8DAAyB,CAAC,CAAC;gBAC/D,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAW,EAAE,EAAE;oBAC9C,IAAI,EAAE,EAAE;wBACN,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,EAAE,CAAC;wBACZ,IAAI,CAAC,IAAY,CAAC,cAAc,GAAG,IAAI,CAAC;wBACxC,IAAI,CAAC,IAAY,CAAC,eAAe,GAAG,KAAK,CAAC;qBAC5C;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;qBACvC;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;aACvC;QACH,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,qBAAS,CAC1B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,UAAU,EACV,GAAG,EAAE;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,IAAI,CAAC,IAAY,CAAC,cAAc,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,IAAY,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7C,CAAC,EACD,KAAK,EACL,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,SAAS,CAAC,MAAiB;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;YACxC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YAEnE,yBAAyB;YACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,oBAAoB;YACpB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,WAAW;gBAAE,IAAI,CAAC,eAAe,EAAE,CAAC;YAErE,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;SACpB;IACH,CAAC;IAED,UAAU,CAAC,MAAiB;QAC1B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEvC,yDAAyD;QACzD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC;QACrC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QAEvB,2CAA2C;QAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,WAAI,CAAC,GAAG,CAAC,SAAS;gBAChB,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;oBAClD,CAAC,CAAC,uBAAuB;oBACzB,CAAC,CAAC,0BAA0B,CAAC;YAEjC,sDAAsD;YACtD,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAC1B,CAAC;SACH;QAED,8EAA8E;QAC9E,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAC5C,IAAI,MAAM,CAAC,SAAS;YAAE,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAE5D,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACtD,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAExD,8EAA8E;QAC9E,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,WAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEpE,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACjE,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACb,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEvC,+DAA+D;QAC/D,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,sBAAsB,CAAC,CAAC,iBAAiB;QAC9D,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CACpC,CAAC;QAEF,8BAA8B;QAC9B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAC1C,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,WAAW;YAClB,WAAI,CAAC,GAAG,CAAC,UAAU,CACjB,IAAI,CAAC,WAAW,CAAC,CAAC,EAClB,IAAI,CAAC,WAAW,CAAC,CAAC,EAClB,IAAI,CAAC,WAAW,CAAC,KAAK,EACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CACxB,CAAC;QAEJ,cAAc;QACd,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,wBAAwB,CAAC,CAAC,UAAU;QACzD,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QAChE,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC5E,MAAM,KAAK,GACT,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,WAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAE5E,WAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACnD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAED,YAAY,CAAC,KAAgB;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAO;QAEvB,QAAQ,KAAK,EAAE;YACb,KAAK,iBAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,MAAM;YACR,KAAK,iBAAS,CAAC,EAAE;gBACf,IAAI,CAAC,EAAE,EAAE,CAAC;gBACV,MAAM;YACR,KAAK,iBAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,MAAM;YACR,KAAK,iBAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;YACR,KAAK,iBAAS,CAAC,UAAU;gBACvB,sFAAsF;gBACtF,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;gBAEzD,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,iBAAS,CAAC,WAAW;gBACxB,mDAAmD;gBACnD,MAAM;YACR;gBACE,MAAM;SACT;IACH,CAAC;IAED,iBAAiB,CAAC,CAAS,EAAE,CAAS;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO;SACR;QAED,2BAA2B;QAC3B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC3D,sCAAsC;YACtC,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,IACE,WAAW,GAAG,IAAI,CAAC,mBAAmB;gBACtC,IAAI,CAAC,0BAA0B,EAC/B;gBACA,OAAO;aACR;YACD,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,OAAO;SACR;QAED,0BAA0B;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE9C,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,EAAE;YAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAChD,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE/B,mEAAmE;YACnE,IACE,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC,oBAAoB;gBAChD,WAAW,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,0BAA0B,EACxE;gBACA,OAAO,CAAC,wDAAwD;aACjE;YAED,2BAA2B;YAC3B,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;YACvC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,WAAW,CAAC;YAE/C,6BAA6B;YAC7B,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;gBACpC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACvC;YAED,8CAA8C;YAC9C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC;YAEzC,6CAA6C;YAC7C,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,GAAG,EAAE;gBACxC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,uDAAuD;gBACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACjC,CAAC,EAAE,GAAG,CAAC,CAAC;YAER,MAAM,CAAC,OAAO,EAAE,CAAC;SAClB;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;aAAM;YACL,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;SAC7C;IACH,CAAC;IAED,EAAE;QACA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,cAAc;gBACjB,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACzE;IACH,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACvE;IACH,CAAC;IA0BD,eAAe;QACb,MAAM,WAAW,GAAG,6BAAa,CAAC,KAAK,CAAC;QACxC,MAAM,YAAY,GAAG,6BAAa,CAAC,MAAM,CAAC;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAExC,sDAAsD;QACtD,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,WAAW,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;SACjD;QAED,yDAAyD;QACzD,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;QACpE,MAAM,cAAc,GAAG,CAAC,CAAC,CAAC,4BAA4B;QACtD,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,gCAAgC;QACnD,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,mCAAmC;QAC5D,MAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,8BAA8B;QAEnD,uCAAuC;QACvC,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACxD,MAAM,IAAI,GAAG,WAAW,GAAG,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,YAAY,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;QACrD,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAC9B,CAAC,EACD,YAAY,GAAG,cAAc,GAAG,CAAC,GAAG,YAAY,CACjD,CAAC;QACF,MAAM,eAAe,GAAG,EAAE,CAAC,CAAC,qBAAqB;QACjD,MAAM,cAAc,GAClB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;QAClE,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAC3B,eAAe,EACf,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAC7B,CAAC;QAEF,yCAAyC;QACzC,IAAI,IAAI,IAAI,CAAC;YAAE,OAAO;QACtB,MAAM,kBAAkB,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,CAAC;QAC9D,MAAM,gBAAgB,GAAG,cAAc,CAAC;QACxC,MAAM,mBAAmB,GAAG,YAAY,GAAG,cAAc,GAAG,CAAC,CAAC;QAC9D,IAAI,QAAQ,GACV,gBAAgB;YAChB,IAAI,CAAC,KAAK,CAAC,CAAC,mBAAmB,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/B,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC1D,iCAAiC;gBACjC,MAAM,QAAQ,GACZ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACnE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAEtC,+BAA+B;gBAC/B,MAAM,UAAU,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;gBACrD,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;gBACpD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,GAAG,QAAQ,CAAC,CAAC;gBAC/D,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC;gBAC7D,MAAM,SAAS,GAAG,MAAM,GAAG,aAAa,GAAG,KAAK,CAAC;gBACjD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,GAAG,QAAQ,CAAC;gBAEnB,cAAc;gBACd,MAAM,KAAK,GACT,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS;oBAChC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC5B,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;gBACjB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBACZ,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBACrB,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;gBAE5B,aAAa;gBACb,MAAM,IAAI,GAAG,OAAO,CAAC;gBACrB,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,aAAa,CAAC;gBACzC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;gBAE3B,sDAAsD;gBACtD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE;oBACtC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;iBAC1B;gBACD,QAAQ,IAAI,YAAY,GAAG,OAAO,CAAC;aACpC;iBAAM;gBACL,MAAM,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;gBAClD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,GAAG,QAAQ,CAAC,CAAC;gBACzD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACpB,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;gBAC7B,QAAQ,IAAI,YAAY,GAAG,OAAO,CAAC;aACpC;SACF;IACH,CAAC;IAED,qBAAqB;QACnB,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACrC,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC1D,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,mBAAmB,CACjB,CAAS,EACT,CAAS;QAET,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;SAC7C;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,IACE,CAAC,IAAI,MAAM,CAAC,CAAC;gBACb,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK;gBAC5B,CAAC,IAAI,MAAM,CAAC,CAAC;gBACb,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAC7B;gBACA,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;aAC3C;SACF;QAED,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;IAC9C,CAAC;IAED,oBAAoB,CAAC,CAAS,EAAE,CAAS;QACvC,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,WAAW;YAClB,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;YACvB,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;YAChD,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;YACvB,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAClD,CAAC;IACJ,CAAC;CACF;AAzpBD,oBAypBC;;;;;;;;;;;;;;;AChqBD,mEAAqC;AACrC,gFAAsC;AACtC,wGAAsD;AAEtD,MAAa,WAAW;IAatB;QAXQ,eAAU,GAAW,CAAC,CAAC,CAAC,+BAA+B;QACvD,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,CAAC,CAAC;QACnB,cAAS,GAAW,CAAC,CAAC;QACtB,cAAS,GAAW,CAAC,CAAC;QACtB,UAAK,GAAW,CAAC,CAAC;QAClB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,kBAAa,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACnC,kBAAa,GAAW,IAAI,CAAC;QAG7B,UAAK,GAAW,CAAC,CAAC;QAyEnB,YAAO,GAAG,CAAC,IAAY,EAAE,EAAE;YAChC,QAAQ,IAAI,EAAE;gBACZ,KAAK,OAAO;oBACV,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,MAAM;gBACR,KAAK,OAAO;oBACV,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,OAAO;oBACV,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,MAAM;aACT;QACH,CAAC,CAAC;QAEK,SAAI,GAAG,CAAC,KAAa,EAAE,SAAkB,KAAK,EAAE,EAAE;YACvD,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;gBACjE,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;IAjHqB,CAAC;IAGjB,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACzB,WAAW,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;SAC1C;QACD,OAAO,WAAW,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEM,UAAU;QACf,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QACxD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC,kCAAkC;QAElF,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,IAAI,eAAe,GAAG,aAAa,EAAE;YACnC,8BAA8B;YAC9B,MAAM,YAAY,GAAG,CAAC,eAAe,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC;YAC7D,KAAK,GAAG,CAAC,GAAG,YAAY,CAAC;SAC1B;QAED,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;QAE7B,sDAAsD;QACtD,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,CAAC,EACD,aAAK,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAClE,aAAK,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAClE,CAAC,EACD,CAAC,CACF,CAAC;QACF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAEM,aAAa,CAAC,KAAa;QAChC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,+BAA+B;YAC/B,OAAO;SACR;QACD,WAAI,CAAC,MAAM,CACT,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EACzB,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACjE,IAAI,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACjE,CAAC,EACD,CAAC,CACF,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IACtC,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,aAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,aAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,aAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,aAAK,CAAC,SAAS,CAAC;IACnC,CAAC;IAEM,wBAAwB;QAC7B,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChE,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;YAC1E,MAAM,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;YAE5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,KAAK,CAAC,CAAC;SACvD;IACH,CAAC;IA2CM,WAAW;QAChB,IAAI,aAAK,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,IAAI,aAAK,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,EAAE;YACxE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SACjC;QAED,IAAI,CAAC,UAAU,GAAG,aAAK,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,aAAK,CAAC,MAAM,CAAC;QAC/B,OAAO,EAAE,CAAC,EAAE,aAAK,CAAC,MAAM,EAAE,CAAC,EAAE,aAAK,CAAC,MAAM,EAAE,CAAC;IAC9C,CAAC;IAEM,eAAe;QACpB,OAAO;YACL,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAK,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACpD,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAK,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,CAAC;SACrD,CAAC;IACJ,CAAC;IAEM,oBAAoB;QACzB,OAAO;YACL,CAAC,EAAE,aAAK,CAAC,MAAM;YACf,CAAC,EAAE,aAAK,CAAC,MAAM;SAChB,CAAC;IACJ,CAAC;CACF;AAvJD,kCAuJC;;;;;;;;;;;;;;;AC3JD,mEAA+B;AAC/B,wGAAsD;AACtD,kFAAuC;AAEvC,MAAa,UAAU;IACrB,MAAM,CAAC,IAAI;QACT,MAAM,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACpC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;QAC3B,IAAI,aAAK,CAAC,UAAU,EAAE;YACpB,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACxC;QACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,UAAU;QACf,aAAK,CAAC,UAAU,EAAE,CAAC;IACrB,CAAC;CACF;AAhBD,gCAgBC;;;;;;;;;;;;;;;ACpBD,mEAA+B;AAC/B,wGAAsD;AAStD,MAAa,aAAa;;AAA1B,sCAiCC;AAhCQ,sBAAQ,GAAa;IAC1B,OAAO,EAAE,IAAI;IACb,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,SAAS;IACpB,wBAAwB,EAAE,QAAQ;CACnC,CAAC;AAEK,wBAAU,GAAY,KAAK,CAAC;AAE5B,kBAAI,GAAG,CAAC,KAAa,EAAE,EAAE;IAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO;QAAE,OAAO;IAC5C,IAAI,aAAa,CAAC,UAAU,EAAE;QAC5B,aAAa,CAAC,QAAQ,CAAC,WAAW,GAAG,GAAG,CAAC;QACzC,aAAa,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,sBAAsB;QACpE,aAAa,CAAC,QAAQ,CAAC,wBAAwB,GAAG,aAAa,CAAC;KACjE;IACD,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC;IAC1D,WAAI,CAAC,GAAG,CAAC,wBAAwB;QAC/B,aAAa,CAAC,QAAQ,CAAC,wBAAwB,CAAC;IAClD,6FAA6F;IAE7F,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC;IACtD,wDAAwD;IACxD,oDAAoD;IAEpD,sDAAsD;IACtD,uEAAuE;IAEvE,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;IACnE,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;AACrB,CAAC,CAAC;;;;;;;;;;;;;;;AC1CJ,wGAAsD;AAEtD,MAAa,iBAAiB;IAqH5B;QAvGA,2DAA2D;QACnD,iBAAY,GAAW,CAAC,CAAC;QACzB,kBAAa,GAAW,CAAC,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,sBAAiB,GAAW,CAAC,CAAC;QActC,gDAAgD;QACxC,sBAAiB,GAAmC,IAAI,GAAG,EAAE,CAAC;QAC9D,iBAAY,GAAW,EAAE,CAAC;QAElC,gCAAgC;QACxB,uBAAkB,GAAG;;;;;;;;;;;;;;GAc5B,CAAC;QAEF,4CAA4C;QACpC,oCAA+B,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BzC,CAAC;QAEF,2CAA2C;QACnC,oCAA+B,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BzC,CAAC;QAGA,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,6BAAa,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,6BAAa,CAAC,MAAM,CAAC;QAE1C,iCAAiC;QACjC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;YAC9C,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,IAAI;YACX,kBAAkB,EAAE,KAAK;YACzB,qBAAqB,EAAE,KAAK;YAC5B,eAAe,EAAE,kBAAkB;SACpC,CAAiC,CAAC;QAEnC,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,EAAE;YACvE,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,IAAI;YACX,kBAAkB,EAAE,KAAK;YACzB,qBAAqB,EAAE,KAAK;YAC5B,eAAe,EAAE,kBAAkB;SACpC,CAAiC,CAAC;QAEnC,IAAI,CAAC,EAAE,GAAG,OAAO,IAAI,mBAAmB,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SACxC;QAED,oBAAoB;QACpB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YAC/B,iBAAiB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACtD;QACD,OAAO,iBAAiB,CAAC,QAAQ,CAAC;IACpC,CAAC;IAEO,WAAW;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CACpC,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CAAC,kBAAkB,CACxB,CAAC;QAEF,qCAAqC;QACrC,MAAM,yBAAyB,GAAG,IAAI,CAAC,YAAY,CACjD,IAAI,CAAC,EAAE,CAAC,eAAe,EACvB,IAAI,CAAC,+BAA+B,CACrC,CAAC;QAEF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxD,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAE,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,EAAE,CAAC,YAAY,CAClB,IAAI,CAAC,wBAAwB,EAC7B,yBAAyB,CAC1B,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAEnD,IACE,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAC1B,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,EAAE,CAAC,WAAW,CACpB,EACD;YACA,MAAM,IAAI,KAAK,CACb,oDAAoD;gBAClD,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAC3D,CAAC;SACH;QAED,oCAAoC;QACpC,MAAM,yBAAyB,GAAG,IAAI,CAAC,YAAY,CACjD,IAAI,CAAC,EAAE,CAAC,eAAe,EACvB,IAAI,CAAC,+BAA+B,CACrC,CAAC;QAEF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxD,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAE,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,EAAE,CAAC,YAAY,CAClB,IAAI,CAAC,wBAAwB,EAC7B,yBAAyB,CAC1B,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAEnD,IACE,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAC1B,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,EAAE,CAAC,WAAW,CACpB,EACD;YACA,MAAM,IAAI,KAAK,CACb,mDAAmD;gBACjD,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAC3D,CAAC;SACH;QAED,8BAA8B;QAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAC1D,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,mBAAmB;QACzB,MAAM,cAAc,GAAG,6BAAa,CAAC,iBAAiB,CAAC;QACvD,MAAM,aAAa,GAAG,cAAc;YAClC,CAAC,CAAC,IAAI,CAAC,wBAAwB;YAC/B,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;QAElC,IAAI,IAAI,CAAC,oBAAoB,KAAK,aAAa,EAAE;YAC/C,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAE9C,0BAA0B;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAC/C,IAAI,CAAC,oBAAoB,EACzB,YAAY,CACb,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAC/C,IAAI,CAAC,oBAAoB,EACzB,YAAY,CACb,CAAC;YAEF,wBAAwB;YACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAClD,IAAI,CAAC,oBAAoB,EACzB,cAAc,CACf,CAAC;YACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAC/C,IAAI,CAAC,oBAAoB,EACzB,WAAW,CACZ,CAAC;YACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CACjD,IAAI,CAAC,oBAAoB,EACzB,aAAa,CACd,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAC9C,IAAI,CAAC,oBAAoB,EACzB,UAAU,CACX,CAAC;YAEF,mBAAmB;YACnB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;IAEO,YAAY,CAAC,IAAY,EAAE,MAAc;QAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE;YAC/D,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,KAAK,CAAC,CAAC;SACvD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,WAAW;QACjB,kBAAkB;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,IAAI,YAAY,CAAC;YACf,CAAC;YACD,CAAC;YACD,6BAAa,CAAC,KAAK;YACnB,CAAC;YACD,CAAC;YACD,6BAAa,CAAC,MAAM;YACpB,CAAC;YACD,6BAAa,CAAC,MAAM;YACpB,6BAAa,CAAC,KAAK;YACnB,CAAC;YACD,6BAAa,CAAC,KAAK;YACnB,6BAAa,CAAC,MAAM;SACrB,CAAC,EACF,IAAI,CAAC,EAAE,CAAC,WAAW,CACpB,CAAC;QAEF,4BAA4B;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACtD,IAAI,CAAC,EAAE,CAAC,WAAW,CACpB,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,cAAc,EACtB,IAAI,CAAC,EAAE,CAAC,aAAa,CACtB,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,cAAc,EACtB,IAAI,CAAC,EAAE,CAAC,aAAa,CACtB,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAC1B,IAAI,CAAC,EAAE,CAAC,MAAM,CACf,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAC1B,IAAI,CAAC,EAAE,CAAC,MAAM,CACf,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC3C,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,cAAc,EACtB,IAAI,CAAC,EAAE,CAAC,aAAa,CACtB,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,cAAc,EACtB,IAAI,CAAC,EAAE,CAAC,aAAa,CACtB,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAC1B,IAAI,CAAC,EAAE,CAAC,MAAM,CACf,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAC1B,IAAI,CAAC,EAAE,CAAC,MAAM,CACf,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;IACrD,CAAC;IAED,6CAA6C;IACrC,aAAa,CACnB,OAAqB,EACrB,KAAa,EACb,MAAc,EACd,YAAoB,EACpB,aAAqB,EACrB,OAAiC,IAAI;QAErC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAEjD,wCAAwC;QACxC,IAAI,YAAY,KAAK,KAAK,IAAI,aAAa,KAAK,MAAM,EAAE;YACtD,yCAAyC;YACzC,IAAI,IAAI,EAAE;gBACR,iDAAiD;gBACjD,IAAI,CAAC,EAAE,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,IAAI,EACZ,IAAI,CAAC,EAAE,CAAC,IAAI,EACZ,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CACL,CAAC;aACH;iBAAM;gBACL,yCAAyC;gBACzC,IAAI,CAAC,EAAE,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,IAAI,EACZ,KAAK,EACL,MAAM,EACN,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,IAAI,EACZ,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CACL,CAAC;aACH;YACD,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SAC1B;aAAM,IAAI,IAAI,EAAE;YACf,kDAAkD;YAClD,IAAI,CAAC,EAAE,CAAC,aAAa,CACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,IAAI,EACZ,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CACL,CAAC;YACF,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;SACvD;QAED,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;IACxD,CAAC;IAEO,eAAe,CAAC,KAAa,EAAE,MAAc;QACnD,MAAM,GAAG,GAAG,GAAG,KAAK,IAAI,MAAM,EAAE,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAE7C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAEvB,oBAAoB;YACpB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;gBACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACzC;YAED,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;SACzC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,SAAS,CACP,YAA+B,EAC/B,UAAkB;QAElB,MAAM,aAAa,GAAG,YAAY,CAAC,KAAK,CAAC;QACzC,MAAM,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC;QAE3C,mCAAmC;QACnC,MAAM,gBAAgB,GAAG,6BAAa,CAAC,sBAAsB,CAAC;QAC9D,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAC/B,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAC7C,CAAC;QACF,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAChC,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,gBAAgB,CAAC,CAC9C,CAAC;QAEF,6BAA6B;QAC7B,IACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,KAAK,gBAAgB;YAChD,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,iBAAiB,EAClD;YACA,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,gBAAgB,CAAC;YAC/C,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,iBAAiB,CAAC;SAClD;QAED,iEAAiE;QACjE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;QACxE,IAAI,CAAC,aAAa,CAAC,SAAS,CAC1B,YAAY,EACZ,CAAC,EACD,CAAC,EACD,aAAa,EACb,cAAc,EACd,CAAC,EACD,CAAC,EACD,gBAAgB,EAChB,iBAAiB,CAClB,CAAC;QAEF,uCAAuC;QACvC,MAAM,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CACrD,IAAI,CAAC,gBAAgB,EACrB,UAAU,GAAG,gBAAgB,EAAE,wCAAwC;QACvE,gBAAgB,EAChB,iBAAiB,CAClB,CAAC;QAEF,oEAAoE;QACpE,0EAA0E;QAC1E,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QACzE,MAAM,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;QAEzD,yDAAyD;QACzD,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACvC,SAAS,CAAC,qBAAqB,GAAG,MAAM,CAAC;QACzC,SAAS,CAAC,SAAS,CACjB,wBAAwB,EACxB,CAAC,EACD,CAAC,EACD,gBAAgB,EAChB,iBAAiB,EACjB,CAAC,EACD,CAAC,EACD,aAAa,EACb,cAAc,CACf,CAAC;QAEF,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,iBAAiB,CACvB,YAA+B,EAC/B,UAAkB,EAClB,KAAa,EACb,MAAc;QAEd,2DAA2D;QAC3D,MAAM,cAAc,GAAG,UAAU,GAAG,CAAC,CAAC;QAEtC,mDAAmD;QACnD,MAAM,cAAc,GAAG,6BAAa,CAAC,iBAAiB;YACpD,CAAC,CAAC,IAAI,CAAC,wBAAwB;YAC/B,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;QAElC,IAAI,IAAI,CAAC,oBAAoB,KAAK,cAAc,EAAE;YAChD,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;YAChE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAEtC,4CAA4C;YAC5C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9D,IAAI,CAAC,EAAE,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,IAAI,YAAY,CAAC;gBACf,CAAC;gBACD,CAAC;gBACD,KAAK;gBACL,CAAC;gBACD,CAAC;gBACD,MAAM;gBACN,CAAC;gBACD,MAAM;gBACN,KAAK;gBACL,CAAC;gBACD,KAAK;gBACL,MAAM;aACP,CAAC,EACF,IAAI,CAAC,EAAE,CAAC,WAAW,CACpB,CAAC;SACH;QAED,gEAAgE;QAChE,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CACvC,IAAI,CAAC,OAAO,EACZ,KAAK,EACL,MAAM,EACN,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,aAAa,EAClB,YAAY,CACb,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC;QAE3C,MAAM,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAC3C,IAAI,CAAC,WAAW,EAChB,KAAK,EACL,MAAM,EACN,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CACL,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,MAAM,CAAC;QAEnD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvD,IAAI,CAAC,EAAE,CAAC,mBAAmB,CACzB,IAAI,CAAC,gBAAgB,EACrB,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,KAAK,EACb,KAAK,EACL,CAAC,EACD,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvD,IAAI,CAAC,EAAE,CAAC,mBAAmB,CACzB,IAAI,CAAC,gBAAgB,EACrB,CAAC,EACD,IAAI,CAAC,EAAE,CAAC,KAAK,EACb,KAAK,EACL,CAAC,EACD,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAEvD,8BAA8B;QAC9B,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACnE,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAC1B,IAAI,CAAC,EAAE,CAAC,WAAW,EACnB,IAAI,CAAC,EAAE,CAAC,iBAAiB,EACzB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,WAAW,EAChB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,6BAA6B;QAC7B,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAC1B,IAAI,CAAC,EAAE,CAAC,WAAW,EACnB,IAAI,CAAC,EAAE,CAAC,iBAAiB,EACzB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,OAAO,EACZ,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,+BAA+B;QAC/B,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;IACjC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACrD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACrD,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACjD;IACH,CAAC;CACF;AAtqBD,8CAsqBC;;;;;;;;;;;;;;;ACxqBD,mEAA+B;AAC/B,gFAA6C;AAE7C,MAAa,SAAS;IAIpB;QACE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,KAAa;QACvB,MAAM,EAAE,GAAG,oBAAY,CAAC,KAAK,EAAE,CAAC;QAChC,sBAAsB;QAEtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEhB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAC5C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;QAC3B,WAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAClC,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;CACF;AApBD,8BAoBC;;;;;;;;;;;;;;;ACvBD,6EAAoC;AACpC,mEAA+B;AAC/B,wGAAsD;AACtD,+FAAgD;AAChD,gFAAsC;AACtC,6EAAoC;AACpC,iGAA+C;AAE/C,iGAA+C;AAE/C,gGAAiD;AACjD,gFAAsC;AACtC,gGAA+C;AAC/C,2EAAmC;AACnC,0FAA6C;AAC7C,yGAAqD;AACrD,8HAAgE;AAChE,2FAAmD;AACnD,qFAAyC;AAEzC,IAAI,SAAS,GAAG,GAAG,CAAC,CAAC,eAAe;AACpC,6DAA6D;AAC7D,IAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,0DAA0D;AAC1D,IAAI,aAAa,GAAG,SAAS,CAAC;AAC9B,mDAAmD;AACnD,IAAI,WAAW,GAAG,SAAS,CAAC;AAC5B,yDAAyD;AACzD,IAAI,YAAY,GAAG,OAAO,CAAC;AAE3B,MAAa,SAAS;IAuCpB,YAAY,IAAU,EAAE,MAAc;QAnCtC,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QAET,WAAM,GAAY,KAAK,CAAC;QACxB,aAAQ,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9B,UAAK,GAAW,CAAC,CAAC;QAElB,WAAM,GAAkB,IAAI,CAAC;QACrB,eAAU,GAAW,CAAC,CAAC;QAC/B,gBAAW,GAAgB,IAAI,CAAC;QACxB,qBAAgB,GAAkB,IAAI,CAAC;QACvC,qBAAgB,GAAkB,IAAI,CAAC;QACvC,mBAAc,GAAgB,IAAI,CAAC;QACnC,qBAAgB,GAAY,KAAK,CAAC;QAClC,gBAAW,GAAY,KAAK,CAAC;QAC7B,mBAAc,GAAgB,IAAI,CAAC;QACnC,mBAAc,GAAkB,IAAI,CAAC;QACrC,wBAAmB,GAAsB,IAAI,GAAG,EAAE,CAAC;QAC3D,eAAU,GAAW,EAAE,CAAC;QAExB,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAEjC,cAAS,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAE/B,2CAA2C;QACnC,cAAS,GAAkB,IAAI,CAAC;QAChC,mBAAc,GAAkB,IAAI,CAAC;QAC7C,oBAAe,GAAyB,UAAU,CAAC;QAoDnD,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC;QAMF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9C,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;iBAAM;gBACL,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aACf;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC;QAEF,OAAE,GAAG,GAAG,EAAE;YACR,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;gBAC/C,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAgB,EAAE;YACrC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACb;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,IAAU,EAAU,EAAE;YACtC,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO,CAAC,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;gBAAE,OAAO;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE/B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,4DAA4D;gBAC5D,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,gDAAgD;oBAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,OAAO;iBACR;gBACD,0BAA0B;gBAC1B,IAAI,IAAI,YAAY,WAAI,EAAE;oBACxB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC9C;gBACD,yBAAyB;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,2BAA2B;gBAC3B,IAAI,IAAI,YAAY,eAAM,EAAE;oBAC1B,IAAI,IAAI,CAAC,aAAa,EAAE;wBACtB,0BAA0B;wBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;qBAC7B;yBAAM;wBACL,eAAe;wBACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACxB,6BAA6B;wBAC7B,4BAA4B;qBAC7B;iBACF;qBAAM,IAAI,IAAI,YAAY,uBAAU,EAAE;oBACrC,2BAA2B;oBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,IAAI,YAAY,eAAM,EAAE;wBAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;4BAAE,OAAO;wBAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC3C;oBACD,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;4BAC5B,IACE,CAAC,YAAY,uBAAU;gCACvB,CAAC,KAAK,IAAI;gCACV,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACrB;gCACA,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;gCACnB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;6BAC/B;wBACH,CAAC,CAAC,CAAC;qBACJ;iBACF;aACF;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,IAAU,EAAW,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO,IAAI,CAAC;YAChC,IAAI,IAAI,YAAY,WAAI;gBAAE,OAAO,IAAI,CAAC;YACtC,IACE,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,CACxD;gBACD,IAAI,CAAC,SAAS;gBAEd,OAAO,IAAI,CAAC;YACd,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;YAElC,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;YAClC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;YAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YACzD,MAAM,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEnD,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;oBACnB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;oBAC/D,CAAC,CAAC,EAAE,CAAC;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEb,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBAE1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAClB,CAAC,EACD,IAAI,CAAC,GAAG,CACN,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EACjD,IAAI,CAAC,IAAI,GAAG,CAAC,CACd,CACF,CAAC;gBACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM;oBACrB,CAAC,CAAC,IAAI,CAAC,GAAG,CACN,CAAC,EACD,IAAI,CAAC,GAAG,CACN,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAChC,CACF;oBACH,CAAC,CAAC,CAAC,CAAC;gBAEN,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,EAAE;oBAClD,oCAAoC;iBACrC;aACF;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,CACf,IAAiB,EACjB,KAAa,EACb,SAAsB,EACtB,UAAkB,EAClB,EAAE;YACF,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;YAE1B,0CAA0C;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,IAAI,SAAS,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvE;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;oBACzB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBAC9B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,IAAU,EAAE,EAAE;YACxB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO;aACR;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,OAAO;aACR;YAED,6CAA6C;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBAAM;aACN;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,OAAO;aACR;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAE7C,4CAA4C;YAC5C,IAAI,YAAY,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;aAC5C;iBAAM;gBACL,aAAa;gBACb,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;aAC5C;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;gBAAE,OAAO;YACtC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YAEzD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;YAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC;YAC3D,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACnD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YACzB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;gBAAE,OAAO;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,IAAU,EAAE,KAAa,EAAE,EAAE;YACvC,MAAM,IAAI,GAAI,IAAI,CAAC,MAAc,CAAC,OAAO;gBACvC,CAAC,CAAE,IAAI,CAAC,MAAc,CAAC,OAAO,EAAE;gBAChC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,kDAAkD;QACpD,CAAC,CAAC;QAEF,YAAO,GAAG,CAAiB,QAAmC,EAAY,EAAE;YAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAU,EAAE,CAAC,CAAC,YAAY,QAAQ,CAAC,IAAI,IAAI,CAAC;QACvE,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,IAAiB,EAAW,EAAE;YAC5C,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;YAChC,IAAI,IAAI,YAAY,WAAI;gBAAE,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC;YACrE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,KAAK,IAAI;gBACV,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW;gBAClC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAClC,CAAC;QACJ,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,IAAiB,EAAE,EAAE;YACxC,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;YAC1B,IAAI,IAAI,YAAY,WAAI,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,OAAO;aACR;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC5B,IAAI,CAAC,KAAK,IAAI;oBAAE,OAAO;gBACvB,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;oBACtC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;oBAChC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,EAAE;wBACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;qBACxB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,IAAiB,EAAE,KAAa,EAAE,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;YAC1B,IAAI,IAAI,YAAY,WAAI,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,OAAO;aACR;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC5B,IAAI,CAAC,KAAK,IAAI;oBAAE,OAAO;gBACvB,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;oBACtC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC;oBACtB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,EAAE;wBACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;qBACxB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,cAAS,GAAG,GAAW,EAAE;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,CAAS,EAAE,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAS,EAAE,EAAE;YACvB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,WAAM,GAAG,GAAY,EAAE;YACrB,OAAO,CACL,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM;gBAC3C,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAC1C,CAAC;QACJ,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,IAAiB,EAAE,aAA4B,IAAI,EAAW,EAAE;YACzE,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;YAChC,IAAI,IAAI,YAAY,WAAI,EAAE;gBACxB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC;gBAC9B,oDAAoD;gBACpD,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBACxE,OAAO,IAAI,CAAC;aACb;YACD,IAAI,IAAI,YAAY,uBAAU,EAAE;gBAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,UAAU,EAAE;oBACd,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;iBAC9B;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,IACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI;wBACtB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAC/C;wBACA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;wBAC7C,OAAO,IAAI,CAAC;qBACb;iBACF;aACF;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;wBAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;wBACrB,OAAO,IAAI,CAAC;qBACb;iBACF;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAiB,EAAE,EAAE;YACjC,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;YAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aAC1B;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAO,CAAC,KAAK,IAAI,CAAC;QACxC,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAU,CAAC,KAAK,IAAI,CAAC;QAC3C,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAiB,EAAE;YAC5B,OAAO,CACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAc,EAAE,CAAC,CAAC,YAAY,aAAK,IAAI,CAAC,CAAC,QAAQ,CAAC;gBACpE,IAAI,CACL,CAAC;QACJ,CAAC,CAAC;QAEF,cAAS,GAAG,GAAY,EAAE;YACxB,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;QAC9B,CAAC,CAAC;QAEF,cAAS,GAAG,GAAkB,EAAE;YAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,IAAI,CAAC,KAAK,IAAI;oBAAE,CAAC,CAAC,eAAe,EAAE,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,4BAA4B;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,IAAY,EAAE,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAU,EAAE;YAC1E,gCAAgC;YAChC,IAAI,IAAI,KAAK,EAAE;gBAAE,OAAO,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;YAEd,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,WAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,EAAE;oBACtD,WAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,IAAI,GAAG,EAAE,CAAC;oBACV,CAAC,IAAI,CAAC,CAAC;iBACR;qBAAM;oBACL,IAAI,IAAI,KAAK,EAAE;wBAAE,IAAI,IAAI,GAAG,CAAC;oBAC7B,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACpB;aACF;YACD,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACtB,WAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,CAAC,IAAI,CAAC,CAAC;aACR;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS,GAAG,EAAE,CAAC;YACpC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS,GAAG,EAAE,CAAC;YAEpC,2CAA2C;YAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAChD,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,cAAc;YAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACtD,MAAM,iBAAiB,GAAG,cAAc,GAAG,aAAa,CAAC;YACzD,sDAAsD;YACtD,IAAI,KAAK,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;YACjE,IAAI,KAAK,GAAG,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEhE,0DAA0D;YAC1D,MAAM,QAAQ,GAAG,CAAC,6BAAa,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACrE,IAAI,KAAK,GAAG,QAAQ,EAAE;gBACpB,KAAK,GAAG,QAAQ,CAAC;aAClB;YAED,IAAI,6BAAa,CAAC,KAAK,GAAG,GAAG,EAAE;gBAC7B,KAAK,IAAI,IAAI,CAAC;gBACd,KAAK,IAAI,IAAI,CAAC;aACf;iBAAM;gBACL,KAAK,IAAI,GAAG,CAAC;aACd;YACD,IAAI,6BAAa,CAAC,KAAK,GAAG,GAAG,EAAE;gBAC7B,KAAK,IAAI,IAAI,CAAC;aACf;YAED,WAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;YAChD,MAAM,MAAM,GAAG,EAAE,CAAC;YAClB,MAAM,MAAM,GAAG,CAAC,CAAC;YAEjB,WAAI,CAAC,eAAe,CAClB,SAAS,EACT,KAAK,GAAG,6BAAa,CAAC,QAAQ;gBAC5B,MAAM;gBACN,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK;gBAC7C,CAAC,EACH,KAAK,GAAG,6BAAa,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAC3C,6BAAa,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;YACF;;;;;;;;;cASE;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC9C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,cAAc;YACvF,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,qBAAqB;YACzF,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAEnE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACxE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;gBACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE;gBAC5D,CAAC,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAChD,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAEvE,OAAO,CACL,CAAC,IAAI,MAAM;gBACX,CAAC,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE;gBAC5B,CAAC,IAAI,MAAM;gBACX,CAAC,IAAI,MAAM,GAAG,WAAW,CAC1B,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAEhE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,cAAc;YAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,+EAA+E;YAC7F,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;YAE7D,uBAAuB;YACvB;;;cAGE;YACF,4CAA4C;YAE5C,2EAA2E;YAC3E,IAAI,UAAU,IAAI,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;gBACrD;;;;;;;kBAOE;aACH;YAED,6BAA6B;YAC7B,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;gBAC3C,uEAAuE;gBACvE,MAAM,GAAG,GAAG,IAAI,CAAC;gBAEjB,uBAAuB;gBACvB,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;oBACtB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;oBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EACtB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,CAAC;oBAEF,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACnD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EACjB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAClB,CAAC;oBAEF,iDAAiD;oBACjD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;oBACjC,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;oBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7D,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,EAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CACrB,CAAC;oBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB;;;;;;;sBAOE;iBACH;gBAED,2BAA2B;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;oBACvD,MAAM,KAAK,GACT,MAAM;wBACN,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;wBACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBAC/B,MAAM,KAAK,GACT,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBAClE,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;iBAC5D;aACF;YAED,gDAAgD;YAChD,IAAI,IAAI,EAAE;gBACR,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC;;;;;;;;;kBASE;gBAEF,mCAAmC;gBACnC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;gBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,EAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,EAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EACvB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CACxB,CAAC;gBAEF,6DAA6D;gBAC7D,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzC,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,EAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,EAClC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EACrB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CACtB,CAAC;gBAEF,wDAAwD;gBACxD,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;gBACjC,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;gBAC3B,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC7D,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAC1D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,EACnC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EACvB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAC/B,CAAC;gBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBAEzB;;;;;;;kBAOE;gBACF,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEnD,2BAA2B;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;oBACvD,MAAM,KAAK,GACT,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACrE,MAAM,KAAK,GACT,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACrE,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;oBAEnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;iBAC5D;gBACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC;QAEF,kBAAa,GAAG,CACd,KAAa,EACb,MAAc,EACd,MAAc,EACd,CAAS,EACT,CAAS,EACT,CAAS,EACT,EAAE;YACF,6FAA6F;YAC7F,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAClD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;gBAClD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3D,MAAM,eAAe,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1D,MAAM,eAAe,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE1D,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,yCAAyC;gBAC1E,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;gBACvB,WAAI,CAAC,GAAG,CAAC,UAAU,CACjB,eAAe,EACf,eAAe,EACf,CAAC,GAAG,CAAC,GAAG,CAAC,EACT,CAAC,GAAG,CAAC,GAAG,CAAC,CACV,CAAC;gBACF,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,mBAAmB;aAC5C;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,KAAa,EAAE,EAAE;YACxC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,IAAI,YAAY,uBAAU,EAAE;oBAC9B,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC;oBAEjE,aAAa,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC;oBAC9D,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;oBAExD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;oBAClD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC;iBAC3C;qBAAM;oBACL,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC9B,IAAI,IAAI;wBAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACjD;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACvC,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACvC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAChE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAClB,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAC9D,CAAC,CAAC,cAAc;YACjB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,qBAAqB;YACzF,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACxD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACzE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;YAE3E,qDAAqD;YACrD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAChC,WAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,qBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEtB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,sDAAsD;gBACtD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;gBAC1C,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;gBAEnE,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBAEzB,oEAAoE;gBACpE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAClB,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAC9D,CAAC,CAAC,cAAc;gBACjB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;gBACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;gBACpB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CACnB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CACxD,CAAC,CAAC,qBAAqB;gBACxB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC5C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;gBAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEzD,2DAA2D;gBAC3D,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC;gBAClC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBACzE,MAAM,OAAO,GACX,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;gBAC7D,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBAErE,2EAA2E;gBAC3E,IAAI,UAAU,IAAI,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;oBACrD,MAAM,UAAU,GACd,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,KAAK;wBACvB,GAAG,GAAG,KAAK;wBACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC9B;wBACD,EAAE;wBACF,EAAE,CAAC;oBACL,MAAM,UAAU,GACd,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,MAAM;wBACxB,GAAG,GAAG,MAAM;wBACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC9B;wBACD,EAAE;wBACF,EAAE,CAAC;oBAEL,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,UAAU,EACV,UAAU,EACV,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAC3B,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAC5B,CAAC;iBACH;gBAED,8EAA8E;gBAC9E,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBAC3C,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE;wBAC7D,oBAAoB;wBACpB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACjE,CAAC;wBACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACnE,CAAC;wBACF,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC;wBACnC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;wBAEtD,uBAAuB;wBACvB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;wBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBAE9C,uDAAuD;wBACvD,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACpC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;wBACjC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7D,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;wBAE5D,2BAA2B;wBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;4BACvD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,KAAK;gCACvB,GAAG,GAAG,KAAK;gCACX,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACtB,CAAC;gCACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;gCACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;4BACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,MAAM;gCACxB,GAAG,GAAG,MAAM;gCACZ,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACtB,CAAC;gCACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;gCACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;4BACF,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;4BACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;4BAEnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;yBAC5D;qBACF;iBACF;gBAED,qFAAqF;gBACrF,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;oBAC3C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;wBAC/B,IAAI,IAAI,KAAK,IAAI;4BAAE,OAAO;wBAC1B,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;wBAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,KAAK;4BACvB,GAAG,GAAG,KAAK;4BACX,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACnB,CAAC;4BACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;wBACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,MAAM;4BACxB,GAAG,GAAG,MAAM;4BACZ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACnB,CAAC;4BACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;wBAEF,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;wBACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;wBAEnD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;oBAEH,qEAAqE;oBACrE,IAAI,UAAU,IAAI,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;wBACrD,qBAAqB;wBACrB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC;wBACnC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,KAAK;4BACvB,GAAG,GAAG,KAAK;4BACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC3B,EAAE,CACL,EACD,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,MAAM;4BACxB,GAAG,GAAG,MAAM;4BACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC3B,EAAE,CACL,EACD,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,EAClB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CACnB,CAAC;wBAEF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,KAAK;4BACvB,GAAG,GAAG,KAAK;4BACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC3B,CAAC;4BACD,EAAE,CACL,CAAC;wBACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,MAAM;4BACxB,GAAG,GAAG,MAAM;4BACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC3B,CAAC;4BACD,EAAE,CACL,CAAC;wBACF,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;wBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;wBAExD,yEAAyE;wBACzE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;4BACvD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;4BACjC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CACrB,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAC/C,CAAC;4BACF,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,KAAK;gCACvB,GAAG,GAAG,KAAK;gCACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCAC3B,CAAC;gCACD,EAAE,CACL,EACD,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,6BAAa,CAAC,MAAM;gCACxB,GAAG,GAAG,MAAM;gCACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCAC3B,CAAC;gCACD,EAAE;gCACF,IAAI,CACP,EACD,CAAC,GAAG,CAAC,GAAG,EAAE,EACV,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAClB,CAAC;4BAEF,sDAAsD;4BACtD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,KAAK;gCACvB,GAAG,GAAG,KAAK;gCACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCAC3B,CAAC;gCACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;gCACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;4BACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,GAAG,GAAG,6BAAa,CAAC,MAAM;gCACxB,GAAG,GAAG,MAAM;gCACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCAC3B,CAAC;gCACD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;gCACnB,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAC/B,CAAC;4BAEF,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;4BACnD,MAAM,WAAW,GAAG,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;4BAEnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;yBAC5D;wBAED,4DAA4D;qBAC7D;oBAED,oDAAoD;oBACpD,wDAAwD;iBACzD;gBAED,oDAAoD;gBACpD,wDAAwD;gBACxD,wEAAwE;gBACxE,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAEtD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;oBACvE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC;oBACtC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;oBAE7B,wBAAwB;oBACxB,IAAI,SAAS,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,YAAY,uBAAU,EAAE;wBAC9B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,kBAAkB,CAAC;qBACvE;oBACD,IAAI,IAAI,YAAY,eAAM,EAAE;wBAC1B,SAAS,GAAG,gBAAgB,CAAC;qBAC9B;oBAED,mBAAmB;oBACnB,MAAM,eAAe,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;oBAC1D,WAAI,CAAC,QAAQ,CACX,SAAS,EACT,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,6BAAa,CAAC,KAAK,GAAG,eAAe,CAAC,CAAC,EACzD,CAAC,CACF,CAAC;oBAEF,wBAAwB;oBACxB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAChD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CACpB,GAAG,GAAG,6BAAa,CAAC,MAAM;wBACxB,GAAG,GAAG,MAAM;wBACZ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAC9C,CAAC;wBACD,CAAC,CACJ,CAAC;oBACF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;wBACrB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,6BAAa,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;oBAClE,CAAC,CAAC,CAAC;iBACJ;aACF;YACD,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9D;YAED,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEF,6BAAwB,GAAG,CACzB,CAAS,EACT,CAAS,EAC8C,EAAE;YACzD,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;gBACnB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;gBAC/D,CAAC,CAAC,EAAE,CAAC;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,qBAAqB;YACzF,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;YAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAE9C,IAAI,MAAc,CAAC;YACnB,IAAI,MAAc,CAAC;YACnB,IAAI,MAAc,CAAC;YAEnB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,wBAAwB;gBACxB,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7D,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;gBAC7D,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;aAChE;iBAAM;gBACL,kBAAkB;gBAClB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;gBAC7D,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;aACxD;YAED,MAAM,QAAQ,GACZ,CAAC,IAAI,MAAM,GAAG,EAAE;gBAChB,CAAC,IAAI,MAAM,GAAG,KAAK,GAAG,EAAE;gBACxB,CAAC,IAAI,MAAM,GAAG,EAAE;gBAChB,CAAC,IAAI,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;YAE5B,OAAO;gBACL,QAAQ;gBACR,MAAM;gBACN,MAAM;aACP,CAAC;QACJ,CAAC,CAAC;QACF,4BAAuB,GAAG,CACxB,CAAS,EACT,CAAS,EAC8C,EAAE;YACzD,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;gBACnB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;gBAC/D,CAAC,CAAC,EAAE,CAAC;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClE,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjC,MAAM,QAAQ,GACZ,CAAC,IAAI,MAAM;gBACX,CAAC,IAAI,MAAM,GAAG,KAAK;gBACnB,CAAC,IAAI,MAAM;gBACX,CAAC,IAAI,MAAM,GAAG,cAAc,CAAC;YAE/B,OAAO;gBACL,QAAQ;gBACR,MAAM;gBACN,MAAM;aACP,CAAC;QACJ,CAAC,CAAC;QAEF,6BAAwB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC3D,MAAM,EAAE,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACtC,OAAO,CACL,EAAE,IAAI,IAAI,CAAC,OAAO;gBAClB,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;gBACtB,EAAE,IAAI,IAAI,CAAC,OAAO;gBAClB,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CACvB,CAAC;QACJ,CAAC,CAAC;QAEF;;;;WAIG;QACH,wBAAmB,GAAG,CAAC,KAAa,EAAE,EAAE;YACtC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,IAAI,CAAC,OAAO,GAAG,6BAAa,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YACnE,IAAI,CAAC,OAAO,GAAG,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YACpE,IAAI,6BAAa,CAAC,KAAK,GAAG,GAAG,EAAE;gBAC7B,oBAAoB;gBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;aACtB;YACD,WAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,cAAc;YAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,EAAE;YACzD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElC,2BAA2B;YAC3B,IAAI,MAAM,KAAK,CAAC;gBAAE,OAAO;YAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC/C,IAAI,YAAY,KAAK,IAAI,EAAE;oBACzB,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;oBACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACzD;aACF;QACH,CAAC,CAAC;QAEF;;WAEG;QACH,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpD,OAAO;aACR;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;YAEvC,iCAAiC;YACjC,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;gBAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;aACxC;QACH,CAAC,CAAC;QAEF;;WAEG;QACH,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC;QAEF;;WAEG;QACH,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,aAAK,CAAC,SAAS,IAAI,aAAK,CAAC,WAAW,EAAE;gBACxC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM,IAAI,aAAK,CAAC,SAAS,EAAE;gBAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,EAAE;YACvD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElC,2BAA2B;YAC3B,IAAI,MAAM,KAAK,CAAC;gBAAE,OAAO;YAEzB,MAAM,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM;gBACjC,CAAC,CAAC,SAAS,CAAC,QAAQ;gBACpB,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC;YAE5B,IAAI,eAAe,EAAE;gBACnB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;oBACjD,mCAAmC;oBACnC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACrD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;iBAClC;qBAAM,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;oBACvC,oDAAoD;oBACpD,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;aACF;iBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBACpC,6BAA6B;gBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAErD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;aAC/B;YAED,4BAA4B;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,UAAkB,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;gBAAE,OAAO;YAEtC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE5C,0BAA0B;YAC1B,IAAI,YAAY,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3C;iBAAM;gBACL,aAAa;gBACb,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;oBAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC;iBAChD;gBACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3C;YAED,yBAAyB;YACzB,IAAI;gBACF,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,IAAI,UAAU,CAAC;gBAClD,MAAM,KAAK,GAAG,UAAU,CAAC;gBACxB,IAAI,CAAC,IAAY,CAAC,aAAa,EAAE,YAAY,CAAC;oBAC7C,IAAI,EAAE,eAAe;oBACrB,SAAS,EAAE,OAAO;oBAClB,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC;aACJ;YAAC,MAAM,GAAE;YAEV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QApzCA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,OAAO;YACV,CAAC,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACrE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,aAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAC7C,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CACnC,CAAC;QACF,aAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAC3C,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CACjC,CAAC;QAEF,aAAK,CAAC,YAAY,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAEjD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CACpB,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAC1C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,CAC9B,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAC1C,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAc,EAAE,EAAE;YACzB,IAAI,CAAC,KAAK,IAAI;gBAAE,OAAO;YACvB,IAAI,CAAC,YAAY,uBAAU,EAAE;gBAC3B,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,YAAY,eAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/C,CAAC,CAAC,WAAW,EAAE,CAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,mCAAmC;aACpC;YAED,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QACF,IAAI,WAAW,GAAG,6BAAa,CAAC,cAAc;YAC5C,CAAC,CAAC,6BAAa,CAAC,sBAAsB;YACtC,CAAC,CAAC,6BAAa,CAAC,kBAAkB,CAAC;QAErC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAOD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAkwCD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,SAAS,CAAC,KAAa;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;YAC7B,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;YAChE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;YAEhE,qBAAqB;YACrB,IAAI,aAAa,GAAG,aAAa,EAAE;gBACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,GAAG,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAChD,CAAC;aACH;iBAAM,IAAI,aAAa,GAAG,aAAa,EAAE;gBACxC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;gBAClC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,aAAa,CAAC;aAC7C;SACF;IACH,CAAC;IAED,eAAe,CAAC,cAAsB;QACpC,IAAI,CAAC,SAAS,IAAI,cAAc,CAAC;IACnC,CAAC;CACF;AAx3CD,8BAw3CC;;;;;;;;;;;;;;;ACt5CD,mEAA+B;AAG/B,yFAA0C;AAC1C,wGAAsD;AACtD,2FAAyC;AAEzC,MAAa,KAAM,SAAQ,uBAAU;IAMnC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAJZ,mBAAc,GAAG,EAAE,CAAC;QAY7B,iBAAY,GAAG,CAAC,KAAiB,EAAW,EAAE;YAC5C,IAAI,KAAK,YAAY,KAAK;gBAAE,OAAO,KAAK,CAAC;YACzC,IAAI,KAAK,YAAY,eAAM,IAAK,KAAgB,CAAC,SAAS,EAAE;gBAC1D,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,CACL,4EAA4E;gBAC5E,IAAI,CAAC,cAAc;gBACnB,SAAS,CACV,CAAC;QACJ,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBAEzC,IAAI,IAAI,CAAC,mBAAmB,KAAK,CAAC,EAAE;oBAClC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC;oBACzC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBACjB;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAc,EAAE,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO;YAC7B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC3C,CAAC,CAAC;QAEF,YAAO,GAAG,CACR,KAAa,EACb,eAAuB,EACvB,cAAsB,EACtB,EAAE;YACF,oEAAoE;YACpE,8BAA8B;YAC9B,MAAM,WAAW,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAClE,4BAA4B;YAE5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1E,IAAI,OAAO,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAEpD,IAAI,IAAI,CAAC,mBAAmB,KAAK,CAAC,CAAC;gBACjC,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,EAC3D,IAAI,EACJ,IAAI,CACL,CAAC;iBACC;gBACH,IAAI,kBAAkB,GACpB,CAAC,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;gBAErD,IAAI,kBAAkB,GAAG,GAAG;oBAC1B,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,EAC3D,IAAI,EACJ,IAAI,CACL,CAAC;;oBAEF,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,EAC3D,IAAI,EACJ,IAAI,CACL,CAAC;aACL;QACH,CAAC,CAAC;QA9FA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;IAC9B,CAAC;;AAbH,sBAuGC;AAnGQ,cAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;ACRpC,kFAAuC;AAEvC,2FAAyC;AAGzC,MAAa,QAAS,SAAQ,eAAM;IAGlC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAChE,aAAK,CAAC,YAAY,EAAE,CAAC;YACvB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,8DAA8D,CAC/D,CAAC;YACF,iGAAiG;QACnG,CAAC,CAAC;QACF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,2EAA2E,CAAC;QACrF,CAAC,CAAC;QAlBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;IAChC,CAAC;;AAVH,4BAyBC;AAxBQ,iBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACL/B,2FAAyC;AACzC,yFAA4C;AAE5C,MAAa,YAAa,SAAQ,eAAM;IAGtC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE;gBAC5B,MAAM,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACrD;YACD,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC/B,CAAC,CAAC;QAZA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;IAC1C,CAAC;;AAVH,oCAkBC;AAjBQ,qBAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;ACLpC,kFAAuC;AAEvC,2FAAyC;AACzC,+CAA+C;AAE/C,MAAa,QAAS,SAAQ,eAAM;IAGlC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,EAAE,IAAI,EAAE,GAAG,mBAAO,CAAC,0DAAuB,CAAC,CAAC;YAClD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,aAAK,CAAC,IAAI,EAAE,CAAC;QACf,CAAC,CAAC;QAZA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAChC,CAAC;;AAVH,4BAkBC;AAjBQ,iBAAQ,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;ACT3B,uEAA8B;AAE9B,kFAAuC;AACvC,wGAAsD;AACtD,yFAA2C;AAE3C,MAAa,IAAK,SAAQ,WAAI;IAE5B,mBAAmB;IACnB,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,WAAM,GAAG,GAAG,EAAE;YACZ,MAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,6BAA6B;YAClD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACnC,IAAI,IAAI,YAAY,IAAI;oBAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/C;YACD,KAAK,MAAM,SAAS,IAAI,QAAQ,EAAE;gBAChC,IACE,IAAI,KAAK,SAAS;oBAClB,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;oBACtB,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EACtB;oBACA,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC;oBACxC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;iBACpE;gBACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC1C,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aAC3C;QACH,CAAC,CAAC;QAQF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,6BAAa,CAAC,gBAAgB;gBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,6BAAa,CAAC,cAAc;gBAC9B,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAE/C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBACrC,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC;QA5CA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1B,mEAAmE;IACrE,CAAC;IAmBD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,IAAI,CACd,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;YACxC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAC9C,CAAC;IACJ,CAAC;;AApCH,oBAmDC;AAlDQ,aAAQ,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;ACN3B,0EAAgC;AAChC,kGAA6C;AAC7C,yFAAwC;AACxC,uEAA8B;AAC9B,qGAA+C;AAC/C,wFAAuC;AAEvC,+FAA2C;AAC3C,sHAA2D;AAC3D,wFAAuC;AACvC,oGAA+C;AAC/C,uGAAiD;AACjD,6GAAqD;AACrD,0GAAmD;AACnD,kGAA6C;AAC7C,4FAAyC;AACzC,0FAAyC;AACzC,uFAAuC;AACvC,yFAAuC;AACvC,sFAAsC;AACtC,4FAA0C;AAC1C,oGAA+C;AAC/C,gHAAuD;AACvD,mFAAsC;AACtC,mFAAsC;AACtC,iGAA6C;AAC7C,yFAA2C;AAE3C,sFAAyC;AACzC,4FAAyC;AACzC,2FAAyC;AACzC,oGAA+C;AAC/C,6GAAqD;AACrD,0GAAmD;AACnD,mGAA+C;AAC/C,kIAAmE;AACnE,+HAAiE;AAUpD,mBAAW,GAAmC;IACzD,UAAU,EAAE,uBAAU;IACtB,SAAS,EAAE,qBAAS;IACpB,KAAK,EAAE,aAAK;IACZ,SAAS,EAAE,qBAAS;IACpB,QAAQ,EAAE,mBAAQ;IAClB,MAAM,EAAE,eAAM;IACd,SAAS,EAAE,qBAAS;IACpB,UAAU,EAAE,uBAAU;IAEtB,WAAW,EAAE,yBAAW;IACxB,YAAY,EAAE,2BAAY;IAC1B,kBAAkB,EAAE,uCAAkB;IACtC,mBAAmB,EAAE,yCAAmB;IAExC,KAAK,EAAE,aAAK;IAEZ,OAAO,EAAE,iBAAO;IAChB,MAAM,EAAE,eAAM;IAEd,KAAK,EAAE,aAAK;IACZ,YAAY,EAAE,2BAAY;IAC1B,WAAW,EAAE,yBAAW;IAExB,IAAI,EAAE,WAAI;IAEV,eAAe,EAAE,iCAAe;IAChC,aAAa,EAAE,6BAAa;IAE5B,QAAQ,EAAE,mBAAQ;IAElB,MAAM,EAAE,eAAM;IACd,KAAK,EAAE,aAAK;IACZ,OAAO,EAAE,iBAAO;IAEhB,MAAM,EAAE,eAAM;IACd,OAAO,EAAE,iBAAO;IAChB,QAAQ,EAAE,mBAAQ;IAClB,KAAK,EAAE,aAAK;IACZ,IAAI,EAAE,iBAAO;IACb,KAAK,EAAE,aAAK;IACZ,IAAI,EAAE,WAAI;IACV,IAAI,EAAE,mBAAQ;CACf,CAAC;AAEF,MAAa,SAAS;;AAAtB,8BAsOC;;AArOQ,eAAK,GAAW;IACrB,mCAAmC;IACnC;QACE,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC7B,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC7B,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC7B,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC7B,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC7B,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACpB,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACpB,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACpB,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,CAAC,WAAW,CAAC;QACvB,MAAM,EAAE,IAAI;KACb;IACD;QACE,QAAQ,EAAE,qBAAqB;QAC/B,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,CAAC,WAAW,CAAC;QACvB,MAAM,EAAE,IAAI;KACb;IAED;QACE,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC,MAAM,CAAC;QAClB,MAAM,EAAE,IAAI;KACb;IAED,YAAY;IACZ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;IAE3E,QAAQ;IACR,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;IACzD,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;IACxD,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;IAE5D,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;IAE3E,cAAc;IACd,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE;IAC7D,wEAAwE;IACxE,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE;IAEpE,eAAe;IACf,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;IAEtD,qBAAqB;IACrB;QACE,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC;KAClC;IACD;QACE,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC;KAClC;IAED,WAAW;IACX,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAE;IAE9D,gBAAgB;IAChB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE;IAC1D,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE;IACzD,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE;IAE3D,oBAAoB;IACpB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;IACpE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;IACrE,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;IACtE,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;IACnE,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAE;IAC/D,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAE;IAC5D;QACE,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;KACnD;IACD,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;CAClE,CAAC;AAEK,iBAAO,GAAG,CACf,MAAc,EACd,cAAwB,EAAE,EAC1B,QAAiB,KAAK,EACtB,gBAAwB,CAAC,EACzB,WAAmB,CAAC,EACpB,EAAE;IACF,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO;KACR;IAED,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;IACvD,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC;IAE1C,2CAA2C;IAC3C,IAAI,CAAC,KAAK,IAAI,UAAU,GAAG,CAAC,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,UAAU,EAAE;QAC9D,OAAO,IAAI,CAAC;KACb;IAED,iCAAiC;IACjC,IAAI,aAAa,GAAG,EAAI,CAAC,KAAK,CAAC,MAAM,CACnC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,YAAY,CACvE,CAAC;IAEF,8EAA8E;IAC9E,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;QAC5B,aAAa,GAAG,aAAa,CAAC,MAAM,CAClC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAC7D,CAAC;KACH;IAED,qDAAqD;IACrD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1B,aAAa,GAAG,aAAa,CAAC,MAAM,CAClC,CAAC,IAAI,EAAE,EAAE,CACP,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,sBAAsB;YAC7D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzD,CAAC;KACH;IAED,qCAAqC;IACrC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9B,OAAO,IAAI,CAAC;KACb;IAED,qCAAqC;IACrC,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,YAAY,GAAG,EAAE,CAAC;IAEtB,wDAAwD;IACxD,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;QAChC,MAAM,UAAU,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;QACjC,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEpC,IAAI,UAAU,GAAG,SAAS,EAAE;YAC1B,MAAM,IAAI,GAAG,EAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,YAAY,EAAE,CAAC;gBAEf,oDAAoD;gBACpD,IAAI,YAAY,IAAI,QAAQ,EAAE;oBAC5B,MAAM;iBACP;aACF;iBAAM;aACN;SACF;KACF;IAED,gFAAgF;IAChF,IAAI,KAAK,IAAI,YAAY,KAAK,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3D,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAC5C,CAAC;QACF,MAAM,IAAI,GAAG,EAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9D,IAAI,IAAI,EAAE;YACR,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;KACF;IAED,OAAO,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC,CAAC;AAEK,oBAAU,GAAG,CAAC,QAAgB,EAAE,MAAc,EAAe,EAAE;IACpE,MAAM,SAAS,GAAG,mBAAW,CAAC,QAAQ,CAAC,CAAC;IACxC,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,cAAc,QAAQ,sBAAsB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;KACb;IAED,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;QACxB,wEAAwE;QACxE,IAAI,CAAC,UAAU,GAAG,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAChD;IACD,IACE,IAAI,YAAY,iBAAO;QACvB,IAAI,YAAY,eAAM;QACtB,IAAI,YAAY,mBAAQ,EACxB;QACA,wEAAwE;QACxE,IAAI,CAAC,UAAU,GAAG,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/C;IACD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;;;;;;;;;;;;;;;AC3TJ,2FAAyC;AAKzC,uFAA0C;AAC1C,2FAAmD;AACnD,kHAA0D;AAG1D,MAAa,aAAc,SAAQ,eAAM;IAIvC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,UAAK,GAAG,CAAC,MAAc,EAAQ,EAAE,GAAE,CAAC,CAAC;QAErC,gBAAW,GAAG,CAAC,MAAc,EAAQ,EAAE;YACrC,eAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtE,gCAAgC;QAClC,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,OAAe,EAAQ,EAAE;YACzC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO;aACR;YACD,QAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC7B,KAAK,QAAQ;oBACX,IAAI,CAAC,WAAW,CACd,IAAI,yBAAW,CACb,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,MAAM,CAAC,CAAC,CACd,CACF,CAAC;oBACF,MAAM;gBACR;oBACE,6CAA6C;oBAC7C,MAAM;aACT;YACD,8CAA8C;QAChD,CAAC,CAAC;QAQF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,0BAA0B,CAAC;QACpC,CAAC,CAAC;QAhDA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAgCO,mBAAmB;QACzB,4CAA4C;QAC5C,yBAAc,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjE,wCAAwC;IAC1C,CAAC;CAKF;AAvDD,sCAuDC;;;;;;;;;;;;;;;ACvED,uEAA8B;AAC9B,mEAA+B;AAG/B,iHAA4D;AAE5D,0EAAgC;AAEhC,MAAa,UAAW,SAAQ,WAAI;IASlC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QATrB,YAAO,GAAkB,IAAI,CAAC;QAE9B,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,CAAC,CAAC;QACpB,aAAQ,GAAW,CAAC,CAAC;QACrB,gBAAW,GAAW,CAAC,CAAC;QACxB,mBAAc,GAAkB,IAAI,CAAC;QAOrC,eAAU,GAAG,CAAC,OAAe,EAAE,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAiB,EAAW,EAAE;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,IAAI,YAAY,aAAK,EAAE;gBACjE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;oBACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;iBACrD;gBAED,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAE/B,IAAI,mCAAgB,CAAC,eAAe,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI;oBAC5D,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,MAAM,EAAE;gBACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,0BAA0B;oBACxB,IAAI,CAAC,IAAI;oBACT,sBAAsB;oBACtB,OAAO;oBACP,GAAG,CACN,CAAC;aACH;iBAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3D;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,EAAE;YACrD,WAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,gBAAwB,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,WAAW;gBAAE,OAAO;YAC9B,IAAI,CAAC,UAAU,IAAI,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAChD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACzC,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,0CAA0C;YAC1C,sBAAsB;QACxB,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;QA3DA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;CA2DF;AAvED,gCAuEC;;;;;;;;;;;;;;;AC5ED,6EAA8C;AAG9C,2FAAyC;AAGzC,MAAa,QAAS,SAAQ,eAAM;IAElC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAQ,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC;QACF,mBAAc,GAAG,CAAC,MAAc,EAAQ,EAAE;YACxC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAC5C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,CAC5C,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;YACxC,MAAM,UAAU,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBAClC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;gBACjB,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,mEAAmE;YACnE,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;YAChC,wDAAwD;YACxD,IAAI;gBACF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;gBAC7B,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;aAC1B;YAAC,MAAM,GAAE;QACZ,CAAC,CAAC;QACF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,0BAA0B,CAAC;QACpC,CAAC,CAAC;QAhCA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;CA4BF;AArCD,4BAqCC;;;;;;;;;;;;;;;AC7CD,yFAA0C;AAG1C,MAAa,SAAU,SAAQ,uBAAU;IAEvC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAOrB,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,6BAA6B,CAAC;QACvC,CAAC,CAAC;QAPA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IAC1B,CAAC;;AARH,8BAaC;AAZQ,kBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACLhC,mEAA+B;AAC/B,wGAAsD;AAGtD,kFAAuC;AACvC,iGAAgD;AAChD,sFAAyC;AAEzC,yFAA2C;AAC3C,8HAAgE;AAChE,2FAA4C;AAC5C,gFAA6C;AAC7C,2FAAmD;AACnD,qFAAyC;AAEzC,uEAAuE;AACvE,MAAa,IAAK,SAAQ,mBAAQ;IA2ChC,iCAAiC;IACjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,EAAE,CAAC;QAbV,UAAK,GAAc,IAAI,CAAC;QACxB,gBAAW,GAAY,IAAI,CAAC;QAC5B,aAAQ,GAAW,CAAC,CAAC;QACrB,sBAAiB,GAAW,CAAC,CAAC;QACtB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QACxB,UAAK,GAAW,CAAC,CAAC;QAClB,sBAAiB,GAAW,IAAI,CAAC;QA+CzC,cAAS,GAAG,GAAG,EAAE;YACf,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;QAQF,qDAAqD;QACrD,SAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAChB,4EAA4E;QAC5E,oBAAe,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAE3B,0EAA0E;QAC1E,mBAAc,GAAG,GAAW,EAAE;YAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACvE,OAAO,GAAG,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,WAAW,MAAM,SAAS,EAAE,CAAC;QAC7D,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;QAEF,gDAAgD;QAChD,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,6BAAa,CAAC,gBAAgB;gBAChC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAE/C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBACrC,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC;QAEF,mFAAmF;QACnF,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAClB,+CAA+C;QAC/C,aAAQ,GAAG,CAAC,MAAc,EAAE,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,OAAO;YAC9C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;gBAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,yCAAyC;oBACzC,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;wBACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBAChB;oBACD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;wBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;wBAErB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACxC;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,oDAAoD;oBACpD,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;oBAElE,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,oBAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAE3C,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;wBACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;qBACnB;iBACF;aACF;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,6BAAa,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC7D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;aACvE;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,MAAM,IAAI,GAAI,IAAI,CAAC,WAA2B,CAAC,QAAQ,CAAC;YACxD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS;gBAC1B,CAAC,CAAC,YAAY,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG;gBACxC,CAAC,CAAC,cAAc,IAAI,GAAG,CAAC;YAE1B,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC/C,OAAO,GAAG,YAAY,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,CAAC;aACnD;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE;gBAC5C,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;oBACzC,OAAO,KAAK,CAAC;iBACd;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;QAEF,6DAA6D;QAC7D,gBAAW,GAAG,GAAG,EAAE;YACjB,IACE,6BAAa,CAAC,eAAe;gBAC7B,CAAC,6BAAa,CAAC,4BAA4B;gBAE3C,OAAO,CAAC,CAAC;YACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CACV,iDAAiD,EACjD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;gBACF,OAAO,CAAC,CAAC;aACV;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,GAAE,CAAC,CAAC;QAE1C,qBAAgB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,EAChC,CAAC,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,EAChC,CAAC,EACD,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QAOF,4BAA4B;QAC5B,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;gBAClC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;gBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;gBACxB,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;oBAEvE,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,EAAE;wBAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC;qBAC1B;iBACF;gBACD,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI;oBACzD,IAAI,CAAC,iBAAiB,IAAI,GAAG,GAAG,KAAK,CAAC;gBACxC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;oBACxB,IAAI,CAAC,WAAW,IAAI,GAAG,IAAI,KAAK,CAAC;oBACjC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI;wBAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;iBACnD;gBACD,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACzC,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACvC,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClC,kDAAkD;gBAClD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAC3C,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,EACxD,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI;oBACpD,CAAC;oBACD,IAAI,CAAC,OAAO;oBACZ,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;oBAC7B,IAAI,CAAC,YAAY,EACnB,IAAI,CAAC,CAAC,GAAG,KAAK,EACd,IAAI,CAAC,CAAC,GAAG,KAAK,EACd,IAAI,CAAC,KAAK,CAAC,UAAU,EACrB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACzC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CACjD,CAAC;YACF,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC3B,IAAI,CAAC,UAAU;wBACb,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BACzD,WAAW,CAAC,MAAM,CAAC;gBACvB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,WAAW;gBAAE,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;oBACnD,kDAAkD;oBAClD,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,uBAAuB;oBACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;oBAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB;oBACnD,MAAM,IAAI,GACR,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;wBACzB,IAAI,CAAC,WAAW,GAAG,CAAC;wBACpB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC1D,IAAI,CAAC,UAAU,CAAC;oBAClB,MAAM,IAAI,GACR,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;wBACzB,IAAI,CAAC,WAAW,GAAG,CAAC;wBACpB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC1D,IAAI,CAAC,YAAY,CAAC;oBAEpB,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;wBACnC,IAAI,CAAC,iBAAiB,GAAG,aAAK,CAAC,QAAQ,CACrC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,EACJ,IAAI,CACL,CAAC;qBACH;oBACD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACvB,aAAK,CAAC,QAAQ,CACZ,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,EACJ,IAAI,CACL,CACF,CAAC;oBACF,oBAAoB;oBACpB,MAAM,SAAS,GAAG,GAAG,CAAC;oBACtB,IAAI,CAAC,GAAG,SAAS,EAAE;wBACjB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;wBAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CACnB,CAAC,GAAG,CAAC,EACL,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAC5C,CAAC;qBACH;oBAED,IAAI,6BAAa,CAAC,aAAa;wBAC7B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBACjD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC1B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAE1B,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,GAAG,GAAG,EAAE,WAAW;oBACvB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,KAAK,CAAC,UAAU,EACrB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;oBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;oBAE3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;wBACnB,kCAAkC;wBAClC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;qBAC/D;oBACD,OAAO;iBACR;qBAAM;oBACL,OAAO;iBACR;aACF;QACH,CAAC,CAAC;QAEF,6CAA6C;QAC7C,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;oBACrC,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;iBAChE;;oBAAM,OAAO;gBAEd,qDAAqD;gBACrD,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC;gBAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE;oBAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;oBAEvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;iBAC/D;gBAED,IAAI,6BAAa,CAAC,aAAa;oBAC7B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEjD,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,EAC3B,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;gBAEF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;aAC5B;QACH,CAAC,CAAC;QACF,mCAAmC;QACnC,aAAQ,GAAG,CAAC,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,OAAO,GAAG,CAAC,EAAE,KAAM,EAAE,EAAE;YACtE,IAAI,6BAAa,CAAC,aAAa;gBAAE,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;gBACtC,KAAK;oBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAC7C,CAAC;wBACD,6BAAa,CAAC,QAAQ,CAAC;YAE3B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;aAC7B;YAED,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,CAAC,GAAG,KAAK,EACT,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,EACvB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;YACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YAEzB,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YACjD,IAAI,SAAS,GAAG,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC;YACvD,IAAI,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;YAC9C,IAAI,MAAM,GAAG,EAAE,GAAG,KAAK,CAAC;YACxB,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,WAAI,CAAC,eAAe,CAClB,SAAS,EACT,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,MAAM,EACnC,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,MAAM,EACnC,6BAAa,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,WAAI,CAAC,eAAe,CAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EACxB,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,EAAE,EAC/B,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,EAAE,EAC/B,6BAAa,CAAC,OAAO,EACrB,OAAO,CACR,CAAC;aACH;QACH,CAAC,CAAC;QAEF,wFAAwF;QACxF,mBAAc,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;gBACxC,oDAAoD;gBACpD,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;gBAE7D,qDAAqD;gBACrD,IAAI,KAAK,GAAG,aAAK,CAAC,QAAQ,CACxB,GAAG,GAAG,eAAe,EAAE,kCAAkC;gBACzD,CAAC,EAAE,kBAAkB;gBACrB,CAAC,CACF,CAAC;gBAEF,MAAM,SAAS,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,CAAC,CAAC,yBAAyB;gBAClF,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,gBAAgB;gBAErC,+CAA+C;gBAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,yBAAyB;gBAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CACpB,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CACxD,CAAC,CAAC,yBAAyB;gBAE5B,4CAA4C;gBAC5C,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC3B,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBAEvC,0BAA0B;gBAC1B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAEnD,iBAAiB;gBACjB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;aAC9B;QACH,CAAC,CAAC;QAxcA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAE3C,wBAAwB;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,GAAG,CAEC,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,GAAG,IAAW;QACzD,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;IACvC,CAAC;IAMD,IAAI,kBAAkB;QACpB,OAAO,6BAAa,CAAC,iBAAiB,CAAC,QAAQ,CAC7C,IAAI,CAAC,WAA2C,CACjD,CAAC;IACJ,CAAC;IA4ID,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,gEAAgE;IAClE,CAAC;CAwQF;AAvfD,oBAufC;;;;;;;;;;;;;;;ACvgBD,iHAA4D;AAG5D,MAAa,SAAS;IAEpB,YAAY,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,iBAAiB,CAAC,IAAU;QAC1B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,CAAC,CAAC,OAAO,EAAE,CAAC;aACb;SACF;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,0BAA0B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEpE,IAAI,mCAAgB,CAAC,0BAA0B,EAAE;YAC/C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,IAAI,eAAe,CAAC;SACrC;IACH,CAAC;CACF;AApBD,8BAoBC;;;;;;;;;;;;;;;ACjBD,0FAA2C;AAE3C,MAAa,SAAU,SAAQ,uBAAU;IAEvC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;IACvC,CAAC;;AAVH,8BAWC;AAVQ,kBAAQ,GAAG,YAAY,CAAC;;;;;;;;;;;;;;;ACHjC,0FAA2C;AAE3C,MAAa,WAAY,SAAQ,uBAAU;IAEzC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC;IACzC,CAAC;;AAVH,kCAWC;AAVQ,oBAAQ,GAAG,cAAc,CAAC;;;;;;;;;;;;;;;ACHnC,0FAA2C;AAE3C,MAAa,UAAW,SAAQ,uBAAU;IAExC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;IACxC,CAAC;;AAVH,gCAWC;AAVQ,mBAAQ,GAAG,aAAa,CAAC;;;;;;;;;;;;;;;ACHlC,0FAA2C;AAC3C,oGAA4C;AAC5C,iGAA0C;AAC1C,8FAAwC;AACxC,iGAA0C;AAE1C,MAAa,QAAS,SAAQ,uBAAU;IAEtC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,GAAS,EAAE,EAAE;YACpC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,QAAQ,GAAG,CAAC,IAAI,EAAE;gBAChB,KAAK,SAAS;oBACZ,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,yBAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,uBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrE,MAAM;gBACR,KAAK,OAAO;oBACV,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,qBAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpE,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,uBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrE,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;QAClE,CAAC,CAAC;QAzBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,sDAAsD,CAAC;IAC5E,CAAC;;AAVH,4BA+BC;AA9BQ,iBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACPhC,0FAA2C;AAE3C,MAAa,UAAW,SAAQ,uBAAU;IAExC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;IACxC,CAAC;;AAVH,gCAWC;AAVQ,mBAAQ,GAAG,aAAa,CAAC;;;;;;;;;;;;;;;ACNlC,kFAAuC;AAIvC,2FAAyC;AAEzC,MAAa,GAAI,SAAQ,eAAM;IAM7B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAWrB,mBAAc,GAAG,GAAW,EAAE;YAC5B,sEAAsE;YACtE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3E,OAAO,eAAe,KAAK,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,MAAc,EAAE,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;oBAChD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC,CAAC;oBAE9D,aAAK,CAAC,SAAS,EAAE,CAAC;oBAClB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI;wBAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACF;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAEjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,0BAA0B;QAC5B,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI;gBACF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtE,MAAM,UAAU,GAAI,MAAc,EAAE,OAAO,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;gBAC9D,IAAI,CAAC,UAAU;oBAAE,OAAO;gBAExB,2DAA2D;gBAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,6BAA6B,CAC1D,UAAU,EACV,IAAI,CAAC,MAAM,CACZ,CAAC;gBACF,IAAI,CAAC,KAAK,EAAE;oBACV,4CAA4C;oBAC5C,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC;oBACnC,OAAO;iBACR;gBAED,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;gBAE3C,4EAA4E;gBAC5E,IAAI,UAAU,KAAK,UAAU,EAAE;oBAC7B,MAAM,IAAI,GAAG,UAAU,CAAC,sBAAsB,CAC5C,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,CACT,CAAC;oBACF,iDAAiD;oBACjD,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC9B,OAAO;iBACR;gBAED,8FAA8F;gBAC9F,MAAM,QAAQ,GAAkB,UAAU,CAAC,sBAAsB,CAC/D,UAAU,EACV,IAAI,CACL,CAAC;gBACF,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtC,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC;oBACnC,OAAO;iBACR;gBAED,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC9B,yDAAyD;gBACzD,MAAM,IAAI,GAAG,UAAU,CAAC,sBAAsB,CAC5C,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,EACR,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,CACZ,CAAC;gBACF,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;aAC/B;YAAC,OAAO,CAAC,EAAE;gBACV,aAAa;aACd;QACH,CAAC,CAAC;QAnGA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;;AAhBH,kBA6GC;AA5GQ,YAAQ,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;ACF1B,gFAAgC;AAEhC,MAAa,MAAO,SAAQ,aAAK;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,oCAAoC;QACrD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAbH,wBAcC;AAbQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACH7B,gFAAgC;AAEhC,MAAa,QAAS,SAAQ,aAAK;IAEjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,oCAAoC;QACrD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,2BAA2B;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC;;AAfH,4BAgBC;AAfQ,iBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACJhC,gFAAgC;AAEhC,MAAa,OAAQ,SAAQ,aAAK;IAGhC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAarB,mBAAc,GAAG,GAAG,EAAE;YACpB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;YAChE,OAAO,mBAAmB,UAAU,gBAAgB,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC;QAC1E,CAAC,CAAC;QAfA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC9C,CAAC;;AAfH,0BAqBC;AAnBQ,gBAAQ,GAAG,SAAS,CAAC;;;;;;;;;;;;;;;ACX9B,sEAAkC;AAElC,0FAA2C;AAC3C,2GAAyD;AACzD,yFAA4C;AAC5C,gHAA4D;AAE5D,MAAsB,KAAM,SAAQ,uBAAU;IAQ5C,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAHrB,cAAS,GAAY,KAAK,CAAC;QAgB3B,mBAAc,GAAG,GAAG,EAAE;YACpB,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;gBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,EAAE,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC;QAMF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7E,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,eAAe;gBAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;QAClE,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBACpB,mBAAmB;oBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;iBACtC;qBAAM;oBACL,qBAAqB;oBACrB,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;oBACnC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,+BAAc,CAAC,mBAAmB,CAAC;iBAC9D;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAC3B,2CAA2C,CAC5C,CAAC;aACH;YAED,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAY,EAAW,EAAE;YACvC,OAAO,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;QAC7D,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,GAAG,CAAC;QACrC,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,wDAAwD;YACxD,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACpB,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;oBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;oBACjC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAClD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvC,IAAI,CAAC,WAAW;oBAAE,IAAI,CAAC,IAAI,EAAE,CAAC;;oBACzB,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;gBAEtB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;YAED,uBAAuB;YACvB,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;gBAClB,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;iBAC1B;gBAED,wDAAwD;gBACxD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IACE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;wBACxC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EACpC;wBACA,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;wBACnC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC;qBACzD;yBAAM,IAAI,IAAI,CAAC,SAAS,EAAE;wBACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC;wBACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;wBACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;qBACpB;oBAED,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;aACF;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;gBAC5B,oDAAoD;gBACpD,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEjD,qDAAqD;gBACrD,IAAI,KAAK,GAAG,aAAK,CAAC,QAAQ,CACxB,GAAG,GAAG,eAAe,EAAE,kCAAkC;gBACzD,CAAC,EAAE,kBAAkB;gBACrB,CAAC,CACF,CAAC;gBAEF,MAAM,SAAS,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBACzC,MAAM,QAAQ,GAAG,eAAe,GAAG,SAAS,CAAC;gBAC7C,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,gBAAgB;gBAErC,+CAA+C;gBAC/C,MAAM,IAAI,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBACxC,MAAM,IAAI,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAErE,4CAA4C;gBAC5C,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC3B,iDAAiD;gBACjD,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBAEvC,0BAA0B;gBAC1B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAEnD,8BAA8B;gBAC9B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC;QAClE,CAAC,CAAC;QAnKA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,+BAAc,CAAC,iBAAiB,CAAC;IAChD,CAAC;IASD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IAClC,CAAC;CAgJF;AA/KD,sBA+KC;;;;;;;;;;;;;;;ACpLD,gFAAgC;AAEhC,MAAa,KAAM,SAAQ,aAAK;IAE9B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAdH,sBAeC;AAdQ,cAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACE5B,4FAA0C;AAE1C,MAAa,OAAQ,SAAQ,eAAM;IAGjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC9B,IAAI,QAAQ,GAAG,KAAiB,CAAC;gBACjC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,oEAAoE,CAAC;QAC9E,CAAC,CAAC;QAjBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAZH,0BAwBC;AAvBQ,gBAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACJ7B,4FAA0C;AAC1C,6FAA2C;AAC3C,uFAAuC;AACvC,4FAA8C;AAE9C,MAAa,IAAK,SAAQ,eAAM;IAE9B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,iBAAO,EAAE;gBACxB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,GAAG,EAAE,EAAE;oBAC5B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oCAAoC,CAAC,CAAC;oBAC9D,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;oBACrB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;wBACxB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBACnC;iBACF;aACF;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,aAAK,EAAE;gBAC1B,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE;oBACtD,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;oBACnE,KAAK,CAAC,IAAI,IAAI,cAAc,CAAC;oBAC7B,IAAI,CAAC,UAAU,IAAI,cAAc,GAAG,EAAE,CAAC;oBACvC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,uBAAuB,KAAK,CAAC,IAAI,SAAS,cAAc,GAAG,EAAE,QAAQ,CACtE,CAAC;oBAEF,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;wBAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAC7D;aACF;QACH,CAAC,CAAC;QAnCA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,iCAAiC,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAZH,oBAyCC;AAxCQ,aAAQ,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;ACZ3B,wEAA+B;AAM/B,sFAAkC;AAClC,yFAAoC;AACpC,4FAAsC;AAEtC,yFAA4C;AAC5C,4FAA8C;AAC9C,MAAa,KAAM,SAAQ,WAAI;IAE7B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,4CAA4C,CAAC;QACtD,CAAC,CAAC;QAEF,UAAK,GAAG,CAAC,SAAoB,EAAE,EAAE;YAC/B,IAAI,SAAS,CAAC,MAAM,EAAE,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,mEAAmE,CACpE,CAAC;aACH;iBAAM;gBACL,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzD,IAAI,QAAQ,GAAG,CAAC,iBAAO,EAAE,eAAM,EAAE,mBAAQ,CAAC,CAAC;gBAC3C,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,gCAAgC,OAAO,IAAI,OAAO,CAAC,QAAQ,GAAG,CAC/D,CAAC;gBAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;oBAChC,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5D;gBACD,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;;oBAAM,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC;QACH,CAAC,CAAC;QA/BA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAVH,sBAqCC;AApCQ,cAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACb5B,wEAA+B;AAM/B,oGAA+C;AAC/C,qFAA0C;AAE1C,MAAa,OAAQ,SAAQ,WAAI;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,sCAAsC,CAAC,CAAC;YAEpE,aAAK,CAAC,SAAS,EAAE,CAAC;QACpB,CAAC,CAAC;QAbA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,qDAAqD,CAAC;IAC3E,CAAC;;AAVH,0BAmBC;AAlBQ,gBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACV/B,wEAA+B;AAM/B,yFAAoC;AACpC,qFAA0C;AAE1C,MAAa,OAAQ,SAAQ,WAAI;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,sEAAsE,CACvE,CAAC;gBACF,OAAO;aACR;YACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBACxB,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,yCAAyC,CAAC,CAAC;aACxE;QACH,CAAC,CAAC;QApBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;IACrC,CAAC;;AAVH,0BA0BC;AAzBQ,gBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACJ/B,4FAA0C;AAG1C,MAAa,QAAS,SAAQ,eAAM;IAElC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC9B,IAAI,QAAQ,GAAG,KAAiB,CAAC;gBACjC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,mEAAmE,CAAC;QAC7E,CAAC,CAAC;QAjBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAXH,4BAuBC;AAtBQ,iBAAQ,GAAG,SAAS,CAAC;;;;;;;;;;;;;;;ACV9B,wEAA+B;AAO/B,qFAA0C;AAE1C,MAAa,OAAQ,SAAQ,WAAI;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACvC,qEAAqE;YACrE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,sCAAsC,CAAC,CAAC;YAEpE,aAAK,CAAC,SAAS,EAAE,CAAC;QACpB,CAAC,CAAC;QAbA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,qDAAqD,CAAC;IAC3E,CAAC;;AAVH,0BAmBC;AAlBQ,gBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACV/B,wEAA+B;AAO/B,qFAA0C;AAC1C,yFAAoC;AAEpC,MAAa,OAAQ,SAAQ,WAAI;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,sEAAsE,CACvE,CAAC;gBACF,OAAO;aACR;YACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBACxB,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,yCAAyC,CAAC,CAAC;aACxE;QACH,CAAC,CAAC;QApBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;IACrC,CAAC;;AAVH,0BA0BC;AAzBQ,gBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACJ/B,4FAA0C;AAE1C,MAAa,SAAU,SAAQ,eAAM;IAGnC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC9B,IAAI,QAAQ,GAAG,KAAiB,CAAC;gBACjC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,iEAAiE,CAAC;QAC3E,CAAC,CAAC;QAjBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAZH,8BAwBC;AAvBQ,kBAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACH5B,4FAA0C;AAE1C,MAAa,MAAO,SAAQ,eAAM;IAEhC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC9B,IAAI,QAAQ,GAAG,KAAiB,CAAC;gBACjC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,iEAAiE,CAAC;QAC3E,CAAC,CAAC;QAjBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAXH,wBAuBC;AAtBQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACV7B,wEAA+B;AAO/B,MAAa,KAAM,SAAQ,WAAI;IAE7B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,iCAAiC,CAAC;QAC3C,CAAC,CAAC;QARA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AATH,sBAcC;AAbQ,cAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACR7B,wEAA+B;AAI/B,uHAA4D;AAE5D,4FAA8C;AAC9C,MAAa,UAAW,SAAQ,WAAI;IAElC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,yBAAyB,IAAI,CAAC,IAAI,kBAAkB,CACrD,CAAC;YAEF,IAAI,SAAS,GACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YACnE,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,0CAA0C,YAAY,aAAa,CACpE,CAAC;YACF,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,SAAS,CAAC,OAAO,CACf,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,EACvD,YAAY,CACb,CAAC;QACJ,CAAC,CAAC;QAzBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,0BAA0B,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;;AATH,gCA8BC;AA7BQ,mBAAQ,GAAG,aAAa,CAAC;;;;;;;;;;;;;;;ACLlC,qFAA0C;AAE1C,4FAA0C;AAC1C,4FAA0C;AAE1C,uHAA4D;AAI5D,4FAA8C;AAG9C,MAAa,MAAO,SAAQ,eAAM;IAEhC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;gBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;gBAC3B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAAE,aAAK,CAAC,IAAI,EAAE,CAAC;YAEhD,iGAAiG;QACnG,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,eAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACtD,KAAK,CAAC,WAAW,EAAE,CAAC;aACrB;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,mDAAmD,CACpD,CAAC;aACH;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;gBACpD,IAAI,MAAM,GAAG,KAAe,CAAC;gBAC7B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,uCAAuC,CAAC,CAAC;aACtE;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBACjC,IAAI,KAAK,GAAG,KAAc,CAAC;gBAC3B,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,oCAAoC,CAAC,CAAC;aACnE;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBACnC,IAAI,OAAO,GAAG,KAAgB,CAAC;gBAC/B,OAAO,CAAC,WAAW,EAAE,CAAC;aACvB;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;gBACpC,IAAI,OAAO,GAAG,KAAgB,CAAC;gBAC/B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACvB;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;gBACpC,IAAI,IAAI,GAAG,KAAgB,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACpB;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,EAAE;gBACvC,IAAI,UAAU,GAAG,KAAmB,CAAC;gBACrC,UAAU,CAAC,WAAW,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,MAAc,EAAE,EAAE;YAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,SAAS,CAAC,OAAO,CACtB,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC,CACtE,CAAC;QACJ,CAAC,CAAC;QAxDA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,iDAAiD,CAAC;QACrE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC9B,CAAC;;AAVH,wBA6DC;AA5DQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;AChB7B,4FAA0C;AAO1C,MAAa,OAAQ,SAAQ,eAAM;IAEjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,uCAAuC,CAAC;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;;AATH,0BAUC;AATQ,gBAAQ,GAAG,SAAS,CAAC;;;;;;;;;;;;;;;ACF9B,oFAAkC;AAClC,qFAA0C;AAE1C,MAAa,KAAM,SAAQ,eAAM;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE;gBACpC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC9D,aAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;;oBAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oCAAoC,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,4BAA4B,CAAC;QACtC,CAAC,CAAC;QAnBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AATH,sBAyBC;AAxBQ,cAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACP5B,qFAA0C;AAE1C,oFAAkC;AAElC,MAAa,UAAW,SAAQ,eAAM;IACpC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAMrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAChE,aAAK,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAElC,iGAAiG;QACnG,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,iCAAiC,CAAC;QAC3C,CAAC,CAAC;QAhBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;IACtB,CAAC;CAcF;AApBD,gCAoBC;;;;;;;;;;;;;;;ACrBD,oFAAkC;AAClC,qFAA0C;AAE1C,MAAa,IAAK,SAAQ,eAAM;IAE9B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE;gBACpC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC9D,aAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;;oBAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,oBAAoB,CAAC;QAC9B,CAAC,CAAC;QApBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,iCAAiC;IACnC,CAAC;;AAVH,oBA0BC;AAzBQ,aAAQ,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;ACP3B,qFAA0C;AAE1C,oFAAkC;AAElC,MAAa,WAAY,SAAQ,eAAM;IACrC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAMrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAChE,aAAK,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAElC,iGAAiG;QACnG,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,gCAAgC,CAAC;QAC1C,CAAC,CAAC;QAhBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;IACtB,CAAC;CAcF;AApBD,kCAoBC;;;;;;;;;;;;;;;ACxBD,qFAA0C;AAE1C,oFAAkC;AAElC,MAAa,KAAM,SAAQ,eAAM;IAG/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE;gBACpC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;oBAChE,aAAK,CAAC,IAAI,EAAE,CAAC;gBACf,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;;oBAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;aACzD;QACH,CAAC,CAAC;QAlBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC;IACzC,CAAC;;AAXH,sBAwBC;AAvBQ,cAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;ACHpC,oFAAkC;AAElC,MAAa,SAAU,SAAQ,eAAM;IACnC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YACxC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;YACD,iGAAiG;QACnG,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,yBAAyB,CAAC;QACnC,CAAC,CAAC;QApBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;CAgBF;AAxBD,8BAwBC;;;;;;;;;;;;;;;ACzBD,oFAAkC;AAClC,qFAA0C;AAE1C,MAAa,OAAQ,SAAQ,eAAM;IAEjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE;gBACpC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAChE,aAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;;oBAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,wCAAwC,CAAC,CAAC;aACnE;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,OAAO,8CAA8C,CAAC;QACxD,CAAC,CAAC;QAnBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AATH,0BAyBC;AAxBQ,gBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACRhC,qFAA0C;AAE1C,oFAAkC;AAClC,0FAA2C;AAC3C,4FAA8C;AAE9C,MAAa,aAAc,SAAQ,eAAM;IAEvC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS,EAAE,UAAmB;QAChE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAWrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;gBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;gBAC3B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAAE,aAAK,CAAC,IAAI,EAAE,CAAC;YAChD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAElC,iGAAiG;QACnG,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IACE,KAAK,YAAY,uBAAU;gBAC3B,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,UAAU,IAAI,CAAC;gBAC3C,KAAK,CAAC,IAAI,KAAK,WAAW,EAC1B;gBACA,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CACzB,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,UAAU,EACtC,IAAI,CAAC,UAAU,CAChB,CAAC;gBACF,KAAK,CAAC,UAAU,IAAI,YAAY,CAAC;gBACjC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC;gBAChC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,iBAAiB,KAAK,CAAC,IAAI,8BAA8B,YAAY,eAAe,CACrF,CAAC;gBACF,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;oBAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC;QAvCA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,sDAAsD,CAAC;IAC5E,CAAC;;AAZH,sCA4CC;AA3CQ,sBAAQ,GAAG,kBAAkB,CAAC;;;;;;;;;;;;;;;ACTvC,wEAA+B;AAM/B,MAAa,MAAO,SAAQ,WAAI;IAG9B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAGrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE,GAAE,CAAC,CAAC;QAC/B,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE,GAAE,CAAC,CAAC;QAH/C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;CAGF;AATD,wBASC;;;;;;;;;;;;;;;ACZD,qFAA0C;AAE1C,oFAAkC;AAClC,4FAA0C;AAE1C,MAAa,WAAY,SAAQ,eAAM;IAErC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAOrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAChE,aAAK,CAAC,IAAI,EAAE,CAAC;YAEf,iGAAiG;QACnG,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,eAAM,EAAE;gBAC3B,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;gBAClD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,iBAAiB,KAAK,CAAC,IAAI,mBAAmB,CAC/C,CAAC;aACH;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,8DAA8D,CAAC;QACxE,CAAC,CAAC;QA1BA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AARH,kCA+BC;AA9BQ,oBAAQ,GAAG,cAAc,CAAC;;;;;;;;;;;;;;;ACPnC,qFAA0C;AAE1C,oFAAkC;AAClC,0FAA2C;AAC3C,4FAA8C;AAE9C,MAAa,eAAgB,SAAQ,eAAM;IAEzC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS,EAAE,UAAmB;QAChE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAYrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;gBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;gBAC3B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAAE,aAAK,CAAC,IAAI,EAAE,CAAC;YAChD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAElC,iGAAiG;QACnG,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IACE,KAAK,YAAY,uBAAU;gBAC3B,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,UAAU,IAAI,CAAC;gBAC3C,KAAK,CAAC,IAAI,KAAK,WAAW,EAC1B;gBACA,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CACzB,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,UAAU,EACtC,IAAI,CAAC,UAAU,CAChB,CAAC;gBACF,KAAK,CAAC,UAAU,IAAI,YAAY,CAAC;gBACjC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC;gBAChC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,mBAAmB,KAAK,CAAC,IAAI,SAAS,YAAY,aAAa,CAChE,CAAC;gBACF,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;oBAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC7D;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,gDAAgD,CACjD,CAAC;aACH;QACH,CAAC,CAAC;QA5CA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,sCAAsC,CAAC;QAC1D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;;AAbH,0CAiDC;AAhDQ,wBAAQ,GAAG,kBAAkB,CAAC;;;;;;;;;;;;;;;ACPvC,qFAA0C;AAE1C,oFAAkC;AAClC,4FAA0C;AAE1C,MAAa,YAAa,SAAQ,eAAM;IAEtC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAOrB,UAAK,GAAG,CAAC,MAAc,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;gBAChE,aAAK,CAAC,IAAI,EAAE,CAAC;YAEf,iGAAiG;QACnG,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,eAAM,EAAE;gBAC3B,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;gBAClD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CACzB,gCAAgC,KAAK,CAAC,IAAI,GAAG,CAC9C,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aACpD;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,OAAO,gEAAgE,CAAC;QAC1E,CAAC,CAAC;QA3BA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AARH,oCAgCC;AA/BQ,qBAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;ACRpC,oFAAkC;AAGlC,MAAa,MAAO,SAAQ,eAAM;IAEhC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQrB,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAEpD,OAAO,CAAC,YAAY,CAAC;QACvB,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAdjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,gCAAgC,CAAC;IACtD,CAAC;;AATH,wBAoBC;AAnBQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACJ7B,oFAAkC;AAElC,qFAA0C;AAG1C,yHAAiE;AAEjE,MAAa,UAAW,SAAQ,eAAM;IAIpC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAWrB,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,KAAK,EAAE,CAAC;YACd,aAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,IAAI,GAAG,KAAK,CAAC;YAEjB,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,GAAG,IAAI,CAAC;aACb;YAED,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAE7B,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAClD,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CACtE,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAClD,IAAI,iCAAe,CACjB,IAAI,EACJ,IAAI,EACJ,aAAa,EACb,IAAI,CAAC,OAAO,CAAC,SAAS,CACvB,CACF,CAAC;iBACH;gBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAC9D,IAAI,CAAC,OAAO,CAAC,OAAO,CACrB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAElC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC1D;gBAED,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC7D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAExE,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;oBACxD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC;oBACvD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;iBAChC;gBACD,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YACD,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,CAAC;QApEA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW;YACd,0FAA0F,CAAC;IAC/F,CAAC;;AAdH,gCA4EC;AA1EQ,mBAAQ,GAAG,cAAc,CAAC;;;;;;;;;;;;;;;ACTnC,oFAAkC;AAElC,qFAA0C;AAC1C,sEAAuC;AAGvC,MAAa,QAAS,SAAQ,eAAM;IAGlC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiBrB,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,KAAK,EAAE,CAAC;YACd,aAAK,CAAC,aAAa,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;YACxD,IAAI,MAAM,GAAG,CAAC,CAAC;YAEf,IAAI,EAAE,IAAI,CAAC;gBAAE,MAAM,GAAG,CAAC,CAAC;YACxB,IAAI,EAAE,IAAI,IAAI;gBAAE,MAAM,GAAG,CAAC,CAAC;YAC3B,IAAI,EAAE,IAAI,GAAG;gBAAE,MAAM,GAAG,CAAC,CAAC;YAC1B,IAAI,EAAE,IAAI,IAAI;gBAAE,MAAM,GAAG,CAAC,CAAC;YAC3B,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,KAAa,EAAE,EAAE;YACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;YAE/B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC7B,kBAAkB;gBAClB,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC9B,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;wBAC7D,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;wBAC7D,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;wBAC9D,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;wBAC7D,MAAM;iBACT;YACH,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC;QAzDA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAnBH,4BAgEC;AA/DQ,iBAAQ,GAAG,UAAU,CAAC;;;;;;;;;;;;;;;ACP/B,oFAAkC;AAElC,qFAA0C;AAC1C,sEAAuC;AAEvC,MAAa,MAAO,SAAQ,eAAM;IAGhC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAcrB,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,KAAK,EAAE,CAAC;YACd,cAAc;YACd,aAAK,CAAC,SAAS,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,SAAS,GAA+B,EAAE,CAAC;YAE/C,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBAC9B,KAAK,gBAAS,CAAC,IAAI;oBACjB,SAAS,GAAG;wBACV,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBAC5B,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,YAAY;qBAC3C,CAAC;oBACF,MAAM;gBACR,KAAK,gBAAS,CAAC,EAAE;oBACf,SAAS,GAAG;wBACV,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBAC5B,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,YAAY;qBAC3C,CAAC;oBACF,MAAM;gBACR,KAAK,gBAAS,CAAC,IAAI;oBACjB,SAAS,GAAG;wBACV,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBAC5B,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,YAAY;qBAC3C,CAAC;oBACF,MAAM;gBACR,KAAK,gBAAS,CAAC,KAAK;oBAClB,SAAS,GAAG;wBACV,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBACxB,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;wBAC5B,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,YAAY;qBAC3C,CAAC;oBACF,MAAM;aACT;YAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CACrC,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,CACN,CAAC;YACF,IAAI,YAAY,EAAE;gBAChB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxB,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;wBAC3B,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;4BACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;4BACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;4BAC3C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACrC;qBACF;iBACF;gBACD,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;oBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;oBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzB;YAED,OAAO,CAAC,YAAY,CAAC;QACvB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,iCAAiC;YAEjC,UAAU,CAAC,GAAG,EAAE;gBACd,+BAA+B;gBAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC9B,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;iBACT;YACH,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC;QA5GA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;;AAhBH,wBAmHC;AAlHQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACA7B,4FAA0C;AAG1C,oFAAkC;AAClC,sGAA8C;AAE9C,MAAa,WAAY,SAAQ,eAAM;IAErC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,OAAO,EAAE;gBACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,2BAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;aACrE;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE;gBAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;aAClD;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,2BAAY,EAAE;gBACjC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,0CAA0C,CAAC,CAAC;gBACpE,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;oBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;oBAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QA7BA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,mDAAmD,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAXH,kCAmCC;AAlCQ,oBAAQ,GAAG,cAAc,CAAC;;;;;;;;;;;;;;;ACPnC,4FAA0C;AAG1C,oFAAkC;AAClC,mGAA4C;AAE5C,MAAa,YAAa,SAAQ,eAAM;IAEtC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUrB,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,QAAQ,EAAE;gBACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,yBAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;aACrE;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE;gBAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC;aACnD;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,yBAAW,EAAE;gBAChC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,0CAA0C,CAAC,CAAC;gBACpE,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;oBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;oBAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QA7BA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,mDAAmD,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAXH,oCAmCC;AAlCQ,qBAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;ACPpC,4FAA0C;AAK1C,2HAA4D;AAC5D,2EAAiC;AAEjC,MAAa,kBAAmB,SAAQ,eAAM;IAE5C,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAWrB,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,MAAM,EAAE;gBACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CACnB,IAAI,yCAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CACpD,CAAC;gBACF,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;aACrE;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE;gBAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;aAClD;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,yCAAmB,EAAE;gBACxC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CACrB,iDAAiD,CAClD,CAAC;gBACF,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;oBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;oBAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAlCA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,WAAW;YACd,mEAAmE,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAZH,gDAwCC;AAvCQ,2BAAQ,GAAG,sBAAsB,CAAC;;;;;;;;;;;;;;;ACT3C,4FAA0C;AAK1C,wHAA0D;AAC1D,2EAAiC;AAEjC,MAAa,mBAAoB,SAAQ,eAAM;IAE7C,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAWrB,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,OAAO,EAAE;gBACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,uCAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;aACrE;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE;gBAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;aAClD;QACH,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,KAAW,EAAE,EAAE;YAC3C,IAAI,KAAK,YAAY,uCAAkB,EAAE;gBACvC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CACrB,iDAAiD,CAClD,CAAC;gBACF,MAAM,IAAI,GAAI,MAAc,EAAE,OAAO;oBACnC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;oBAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAhCA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,WAAW;YACd,mEAAmE,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;AAZH,kDAsCC;AArCQ,4BAAQ,GAAG,uBAAuB,CAAC;;;;;;;;;;;;;;;ACd5C,oFAAkC;AAMlC,yHAAiE;AAEjE,MAAa,OAAQ,SAAQ,eAAM;IAEjC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAOrB,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1C,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1C,IAAI,KAAK,GAAG,CAAC,CAAC;YAEd,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;gBAErE,OAAO,IAAI,CAAC;iBACT,IACH,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC;gBAC/D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;gBAEvE,KAAK,GAAG,CAAC,CAAC;iBACP,IACH,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC;gBAC/D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;gBAEvE,KAAK,GAAG,CAAC,CAAC;YAEZ,IAAI,kBAAkB,GAAG,EAAE,CAAC;YAC5B,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,gBAAgB,GAAG,CAAC,CAAC;YACzB,IAAI,mBAAmB,GAAG,CAAC,CAAC;YAE5B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;gBAC5D,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACd,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;wBAAE,OAAO,IAAI,CAAC;oBACvC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC/C,aAAa,GAAG,CAAC,CAAC;qBACnB;oBACD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC/C,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;qBAC5C;iBACF;qBAAM,IAAI,CAAC,CAAC,WAAW,EAAE;oBACxB,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACvC,gBAAgB,GAAG,CAAC,CAAC;wBACrB,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;qBAChD;oBACD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;wBACjD,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;qBAChD;oBACD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;wBACjD,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;qBAChD;iBACF;qBAAM;oBACL,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACvC,mBAAmB,GAAG,CAAC,CAAC;qBACzB;oBACD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;qBACxD;oBACD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACzC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;qBACxD;iBACF;aACF;YAED,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,IACE,mBAAmB,GAAG,gBAAgB;gBACtC,mBAAmB,GAAG,aAAa,EACnC;gBACA,OAAO,IAAI,CAAC;aACb;YAED,IAAI,gBAAgB,IAAI,aAAa,EAAE;gBACrC,KAAK,MAAM,CAAC,IAAI,kBAAkB,EAAE;oBAClC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBAChB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACf,IAAI,CAAC,KAAK,CAAC;wBAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;;wBAClC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAED,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAElC,iCAAe,CAAC,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EACpB,IAAI,CAAC,OAAO,CAAC,CAAC,EACd,OAAO,GAAG,GAAG,EACb,OAAO,EACP,OAAO,CACR,CAAC;gBACF,iCAAe,CAAC,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EACpB,IAAI,CAAC,OAAO,CAAC,CAAC,EACd,OAAO,GAAG,GAAG,EACb,OAAO,EACP,SAAS,CACV,CAAC;gBACF,IAAI,EAAE,GAAG,IAAI,iCAAe,CAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EACnC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAC7B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,OAAO,EACP,CAAC,CACF,CAAC;gBACF,EAAE,CAAC,eAAe,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAEzD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAjIA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACxB,CAAC;;AARH,0BAuIC;AAtIQ,gBAAQ,GAAG,SAAS,CAAC;;;;;;;;;;;;;;;ACV9B,oFAAkC;AAElC,yHAAiE;AAEjE,MAAa,SAAU,SAAQ,eAAM;IAEnC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAOrB,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,4DAA4D;YAC5D,IAAI,KAAK,GAAW,CAAC,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KACE,IAAI,CAAC,GAAG,CAAC,EACT,CAAC,GAAG,CAAC,EACL,CAAC,EAAE,CAAC,oBAAoB;cACxB;gBACA,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;oBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClE;gBACD,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;oBAC3B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClE;gBACD,kDAAkD;gBAClD,CAAC,EAAE,CAAC;aACL;YACD,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EACrE;gBACA,wDAAwD;gBACxD,OAAO,IAAI,CAAC;aACb;YACD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACvD,KAAK,CAAC,CAAC,CAAC,CACT,CAAC,OAAO,EAAE,EACX;oBACA,KAAK,GAAG,CAAC,CAAC;oBACV,uCAAuC;iBACxC;gBACD,CAAC,EAAE,CAAC;gBACJ,oCAAoC;aACrC;YACD,aAAa;YACb,IAAI,kBAAkB,GAAG,EAAE,CAAC;YAC5B,IAAI,aAAa,GAAG,KAAK,GAAG,CAAC,CAAC;YAC9B,IAAI,gBAAgB,GAAG,KAAK,GAAG,CAAC,CAAC;YACjC,IAAI,mBAAmB,GAAG,KAAK,GAAG,CAAC,CAAC;YACpC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;gBAC5D,qDAAqD;gBACrD,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACd,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEV,oBAAoB;oBACpB,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;wBAAE,OAAO,IAAI,CAAC;oBACvC,4CAA4C;oBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;wBAC3B,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;4BACvD,iDAAiD;4BACjD,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;yBAC5C;wBACD,CAAC,EAAE,CAAC,CAAC,oBAAoB;qBAC1B;iBACF;qBAAM,IAAI,CAAC,CAAC,WAAW,EAAE;oBACxB,uBAAuB;oBACvB,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACvC,gBAAgB,GAAG,CAAC,CAAC;wBACrB,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;qBAChD;oBACD,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;wBAC3B,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;4BACvD,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;4BACjD,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;yBAChD;wBACD,CAAC,EAAE,CAAC;qBACL;iBACF;qBAAM;oBACL,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;wBACvC,mBAAmB,GAAG,CAAC,CAAC;qBACzB;oBACD,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;wBAC3B,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;4BACvD,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;yBACxD;wBACD,CAAC,EAAE,CAAC;wBAEJ,gFAAgF;qBACjF;iBACF;aACF;YACD,8DAA8D;YAE9D,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,eAAe;YACnC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,eAAe;YAEnC,IACE,mBAAmB,GAAG,gBAAgB;gBACtC,mBAAmB,GAAG,aAAa;YACnC,wFAAwF;cACxF;gBACA,OAAO,IAAI,CAAC;gBACZ,mCAAmC;aACpC;YACD,IAAI,gBAAgB,IAAI,aAAa,EAAE;gBACrC,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjC,MAAM,YAAY,GAAG,kBAAkB,CAAC,MAAM,CAC5C,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE;wBACzB,IAAI,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE;4BACrC,OAAO,YAAY,CAAC;yBACrB;;4BAAM,OAAO,QAAQ,CAAC;oBACzB,CAAC,CACF,CAAC;oBACF,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC1C;gBAED,aAAa;gBACb,oFAAoF;gBACpF,uCAAuC;gBACvC,2CAA2C;gBAE3C,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAElC,iCAAe,CAAC,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EACpB,IAAI,CAAC,OAAO,CAAC,CAAC,EACd,OAAO,GAAG,GAAG,EACb,OAAO,EACP,OAAO,CACR,CAAC;gBACF,iCAAe,CAAC,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EACpB,IAAI,CAAC,OAAO,CAAC,CAAC,EACd,OAAO,GAAG,GAAG,EACb,OAAO,EACP,SAAS,CACV,CAAC;gBACF,IAAI,EAAE,GAAG,IAAI,iCAAe,CAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACrC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EACnC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAC7B,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,OAAO,EACP,CAAC,CACF,CAAC;gBACF,EAAE,CAAC,eAAe,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACzD,uFAAuF;gBACvF,yFAAyF;gBACzF,yFAAyF;gBACzF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;gBAEvC,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAvKA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IAC1B,CAAC;;AARH,8BA6KC;AA5KQ,kBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACLhC,oFAAkC;AAOlC,MAAa,KAAM,SAAQ,eAAM;IAE/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAarB,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,IAAI,UAAU,GAAG,KAAK,CAAC;YAEvB,oFAAoF;YACpF,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEtC,6BAA6B;YAC7B,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC3D,MAAM,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAE9D,wEAAwE;YACxE,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,MAAM,CACtD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,CACjC,CAAC;YACF,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,0DAA0D;gBAC1D,KAAK,MAAM,MAAM,IAAI,qBAAqB,EAAE;oBAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBACrB;gBACD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,OAAO,KAAK,CAAC;aACd;YAED,2DAA2D;YAC3D,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,MAAM,CACnD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO,CAChC,CAAC;YACF,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,KAAK,MAAM,KAAK,IAAI,kBAAkB,EAAE;oBACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACpB;gBACD,UAAU,GAAG,IAAI,CAAC;aACnB;YAED,kEAAkE;YAClE,IACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;gBAC7D,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,EACxE;gBACA,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,MAAM,CACrD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO,CAChC,CAAC;gBACF,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClC,KAAK,MAAM,KAAK,IAAI,mBAAmB,EAAE;wBACvC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACpB;oBACD,UAAU,GAAG,IAAI,CAAC;iBACnB;aACF;YAED,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,uCAAuC;gBAC3E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAED,OAAO,CAAC,UAAU,CAAC;QACrB,CAAC,CAAC;QA9EA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,WAAW;YACd,yDAAyD,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,WAAW;QAClC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,eAAe;QACrC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;;AAdH,sBAoFC;AAnFQ,cAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACP5B,oFAAkC;AAElC,qFAA0C;AAC1C,0HAAiE;AAEjE,yFAA4C;AAC5C,sEAAuC;AACvC,iHAAwD;AACxD,MAAa,SAAU,SAAQ,eAAM;IAInC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAcrB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;gBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAC5B,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,CAAC,QAAQ;gBACX,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACtD,IAAI,CAAC,KAAK;gBACZ,CAAC,CAAC,WAAW,CAChB,CAAC;YACF,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;YAC7D,uBAAuB;YACvB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;gBAAE,OAAO,OAAO,CAAC;iBAClC;gBACH,4BAA4B;gBAC5B,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,kEAAkE,CACnE,CAAC;gBACF,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,qDAAqD,CACtD,CAAC;YAEF,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACvC,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,0BAA0B;YAC1B,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,SAAS,CAAC,OAAO,CACf,IAAI,6BAAa,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC,CACpE,CAAC;QACJ,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,yDAAyD;YAEzD,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACvC,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,MAAM,mBAAmB,GAAG,CAAC,CAAS,EAAW,EAAE;gBACjD,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,EAAE;wBACf,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBACrB,KAAK,gBAAS,CAAC,KAAK;wBAClB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBACrB,KAAK,gBAAS,CAAC,IAAI;wBACjB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBACrB,KAAK,gBAAS,CAAC,IAAI;wBACjB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBACrB;wBACE,OAAO,KAAK,CAAC;iBAChB;YACH,CAAC,CAAC;YACF,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;YAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;YAE9C,+CAA+C;YAC/C,MAAM,kBAAkB,GAAa,EAAE,CAAC;YAExC,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;gBACrB,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;oBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;oBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;oBACvC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oBAExB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAElE,0CAA0C;oBAC1C,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,GAAG,IAAI,CAAC;iBACb;aACF;YAED,qEAAqE;YACrE,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC;YAElC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAElC,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;oBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;oBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC7B,aAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,iBAAiB;gBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;gBAEjC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YACD,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,WAAmB,EAAE,WAAmB,EAAE,KAAa,EAAE,EAAE;YACtE,yCAAyC;YACzC,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;gBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC/B,wDAAwD;oBACxD,IAAI,CAAC,aAAa,CAChB,WAAW,EACX,WAAW,EACX,MAAM,CAAC,CAAC,GAAI,MAAc,CAAC,KAAK,EAChC,MAAM,CAAC,CAAC,GAAI,MAAc,CAAC,KAAK,EAChC,MAAM,CACP,CAAC;oBAEF,uCAAuC;oBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAE3D,kBAAkB;oBAClB,IAAI,CAAC,MAAM,CACT,WAAW,EACX,WAAW,EACX,MAAM,CAAC,CAAC,GAAI,MAAc,CAAC,KAAK,EAChC,MAAM,CAAC,CAAC,GAAI,MAAc,CAAC,KAAK,EAChC,MAAM,EACN,CAAC,EACD,KAAK,CACN,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAjKA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,kDAAkD,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;;AAjBH,8BAwKC;AArKQ,kBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACZhC,oFAAkC;AAElC,qFAA0C;AAC1C,sEAAuC;AAEvC,MAAa,KAAM,SAAQ,eAAM;IAG/B,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAarB,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,GAAG,EAAE,CAAC;YACZ,aAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,UAAU,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YACtC,IAAI,WAAW,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YAEvC,IAAI,SAAS,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YAE1C,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBAC9B,KAAK,gBAAS,CAAC,IAAI;oBACjB,UAAU,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBACxB,WAAW,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBAEzB,MAAM;gBACR,KAAK,gBAAS,CAAC,EAAE;oBACf,UAAU,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBACxB,WAAW,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBAEzB,MAAM;gBACR,KAAK,gBAAS,CAAC,IAAI;oBACjB,UAAU,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBACxB,WAAW,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBAEzB,MAAM;gBACR,KAAK,gBAAS,CAAC,KAAK;oBAClB,UAAU,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBACxB,WAAW,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBAEzB,MAAM;aACT;YAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CACrC,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,CACN,CAAC;YACF,IAAI,YAAY,EAAE;gBAChB,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;oBAC3B,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CACrD,GAAG,CAAC,CAAC,CACN,CAAC,OAAO,EAAE,EACX;wBACA,MAAM,MAAM,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;qBAC1C;iBACF;gBACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1D;YAED,OAAO,CAAC,YAAY,CAAC;QACvB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,iCAAiC;YAEjC,UAAU,CAAC,GAAG,EAAE;gBACd,+BAA+B;gBAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC9B,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBACpC,MAAM;iBACT;YACH,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC;QA9FA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC;QACpB,wBAAwB;IAC1B,CAAC;;AAfH,sBAqGC;AApGQ,cAAQ,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;ACN5B,oFAAkC;AAElC,qFAA0C;AAC1C,sEAAuC;AAEvC,MAAa,SAAU,SAAQ,eAAM;IAGnC,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS;QAC3C,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAYrB,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,KAAK,EAAE,CAAC;YACd,aAAK,CAAC,aAAa,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;aAClC;YACD,OAAO,CAAC,YAAY,CAAC;QACvB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;YAE/B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC7B,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC9B,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACrC,MAAM;iBACT;YACH,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC;QA7CA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,wBAAwB;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;;AAdH,8BAoDC;AAnDQ,kBAAQ,GAAG,WAAW,CAAC;;;;;;;;;;;;;;;ACLhC,sEAAkC;AAClC,0FAA2C;AAC3C,qFAA0C;AAG1C,2GAAyD;AACzD,uHAA4D;AAE5D,yHAAiE;AACjE,sEAAuC;AACvC,2EAAiC;AAOjC,MAAsB,MAAO,SAAQ,uBAAU;IAa7C,YAAY,KAAW,EAAE,CAAS,EAAE,CAAS,EAAE,MAAqB;QAClE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiBrB,cAAS,GAAG,GAAG,EAAE;YACf,8BAA8B;YAC9B,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;QACF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,0CAA0C;YAC1C,sBAAsB;YACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAiB,EAAW,EAAE;YAC5C,IAAI,KAAK,YAAY,MAAM;gBAAE,OAAO,KAAK,CAAC;YAC1C,IAAI,KAAK,YAAY,aAAK,IAAI,IAAI,CAAC,SAAS;gBAAE,OAAO,KAAK,CAAC;YAC3D,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,MAAoB,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACrB,iDAAiD;aAClD;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;YACvD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,MAAM,kBAAkB,CAAC,CAAC;YAEvE,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;YAC9C,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,MAAc,EAAE,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,OAAO;gBAAE,OAAO;YAC5B,MAAM,KAAK,GAAG,MAAe,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC7D,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpE,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;wBAChC,CAAC,CAAC,2BAA2B,KAAK,CAAC,IAAI,EAAE;wBACzC,CAAC,CAAC,2CAA2C,KAAK,CAAC,IAAI,EAAE,CAAC;oBAE5D,iCAAiC;oBAEjC,4DAA4D;iBAC7D;aACF;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,+DAA+D,CAChE,CAAC;gBACF,OAAO;aACR;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,kEAAkE,CACnE,CAAC;gBACF,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,yBAAyB,IAAI,CAAC,IAAI,kBAAkB,CAAC,CAAC;YAE5E,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACvC,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,0BAA0B;YAC1B,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,SAAS,CAAC,OAAO,CACf,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,EACvD,YAAY,CACb,CAAC;QACJ,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI;gBACxC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACtD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACxC,IAAI,CAAC,CAAC,UAAU,KAAK,IAAI,EAAE;oBACzB,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,IAAY,EAAE,IAAY,EAAW,EAAE;YACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAEpD,OAAO,CAAC,YAAY,CAAC;QACvB,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,KAAa,EAAE,MAAe,EAAE,EAAE;YAC1C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAElC,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;gBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;gBACrE,OAAO;aACR;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CACnE,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,EAAU,EAAE,EAAU,EAAE,EAAE;YACvC,MAAM,WAAW,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;gBAChD,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,WAAW,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;gBACxC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,aAAK,CAAC,KAAK,EAAE,CAAC;YACd,aAAK,CAAC,GAAG,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBACtB,KAAK,GAAG,CAAC,CAAC;iBACX;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACrB,KAAK,GAAG,CAAC,CAAC;iBACX;gBAED,WAAI,CAAC,MAAM,CACT,KAAK,EACL,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC9B,CAAC,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC9B,CAAC,EACD,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAW,EAAE;YAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5C,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;gBAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;gBAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa;gBACtC,UAAU,GAAG,gBAAgB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvE,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,KAAK,IAAI,CAAC,WAAW,aAAa,IAAI,CAAC,MAAM,EAAE,CAAC;QACnH,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CACzD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,CACvC,CAAC;oBACF,IACE,iBAAiB;wBACjB,IAAI,CAAC,cAAc,KAAK,IAAI;wBAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,KAAK;wBACpC,IAAI,CAAC,cAAc,CAAC,QAAQ,KAAK,CAAC,EAClC;wBACA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;wBACpD,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;qBACrC;yBAAM;wBACL,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;qBACtC;iBACF;aACF;QACH,CAAC,CAAC;QA4EQ,kBAAa,GAAG,CAAC,YAAqB,EAAE,EAAE;YAClD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;gBAClC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;gBACrC,CAAC,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC;QAzSA,IAAI,KAAK;YAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IA0MD,mEAAmE;IAEzD,aAAa,CAAC,CAAS,EAAE,CAAS;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACnD,OAAO,EAAE,CAAC;SACX;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YACtD,OAAO,EAAE,CAAC;SACX;QAED,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;YACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;YACjC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YACtD,OAAO,EAAE,CAAC;SACX;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAES,aAAa,CAAC,CAAS,EAAE,CAAS,EAAE,MAAe;QAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACrE,IAAI,YAAY,GAAG,KAAK,CAAC;QAEzB,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC5B,YAAY,GAAG,IAAI,CAAC;SACrB;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAES,iBAAiB,CAAC,CAAS,EAAE,CAAS;QAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,QAAQ,SAAS,EAAE;YACjB,KAAK,gBAAS,CAAC,IAAI;gBACjB,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;YACR,KAAK,gBAAS,CAAC,EAAE;gBACf,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;YACR,KAAK,gBAAS,CAAC,IAAI;gBACjB,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;YACR,KAAK,gBAAS,CAAC,KAAK;gBAClB,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;SACT;QAED,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;YACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;YACjC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI;YAAE,OAAO,KAAK,CAAC;QAExB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,CAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CACnB,CAAC;QACF,MAAM,oBAAoB,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM,aAAa,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;QAE1D,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACrE,MAAM,cAAc,GAAG,CAAC,aAAa,IAAI,CAAC,oBAAoB,CAAC;QAE/D,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC;IAChD,CAAC;IAWS,aAAa,CACrB,OAAe,EACf,OAAe,EACf,WAAoB,IAAI,EACxB,SAAiB,IAAI,CAAC,MAAM,EAC5B,cAAuB,IAAI,EAC3B,QAAiB,IAAI,EACrB,aAAsB,IAAI,EAC1B,aAAsB,IAAI;QAE1B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAElE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEjC,IAAI,YAAY,EAAE;YAChB,IAAI,KAAK;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACxC,IAAI,QAAQ;gBAAE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACrD,IAAI,UAAU,EAAE;gBACd,MAAM,IAAI,GAAI,IAAI,CAAC,OAAe,EAAE,OAAO;oBACzC,CAAC,CAAE,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE;oBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,IAAI;oBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;YACD,IAAI,WAAW;gBAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACpD,IAAI,UAAU;gBAAE,IAAI,CAAC,OAAO,EAAE,CAAC;SAChC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;;AAxVH,wBAyVC;AAnVQ,eAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;ACxB7B,qGAAiD;AACjD,kGAA+C;AAC/C,+FAA6C;AAC7C,kGAA+C;AAC/C,kGAA+C;AAC/C,8GAAuD;AACvD,4FAA2C;AAC3C,oHAA2D;AAC3D,wGAAmD;AACnD,qGAAiD;AACjD,8GAAuD;AACvD,2HAAuD;AAGvD,2HAA+D;AAC/D,2HAA+D;AAC/D,oIAAqE;AACrE,qHAA4D;AAC5D,+FAA6C;AAC7C,2HAAwD;AAExD,8GAAuD;AACvD,wGAAmD;AAEnD,gBAAgB;AAChB,4GAAsD;AACtD,4GAAsD;AACtD,kHAA0D;AAC1D,+GAAwD;AACxD,qHAAiE;AACjE,kHAA0D;AAC1D,4GAAsD;AACtD,kHAA0D;AAC1D,uIAAwE;AACxE,wHAA8D;AAC9D,+GAAwD;AACxD,kHAA0D;AAC1D,2HAAgE;AAChE,oIAAsE;AACtE,+GAA6D;AAC7D,+GAAwD;AACxD,kHAA0D;AAC1D,uIAAuE;AACvE,4GAAsD;AACtD,qHAA4D;AAC5D,kHAA0D;AAC1D,iIAAmE;AACnE,iIAAmE;AACnE,8HAAiE;AAEjE,iEAAiE;AACpD,sBAAc,GAAqB,IAAI,GAAG,CAAC;IACtD,CAAC,qBAAS,EAAE,CAAC,CAAC;IACd,CAAC,qBAAS,EAAE,CAAC,CAAC;IACd,CAAC,yBAAW,EAAE,CAAC,CAAC;IAChB,CAAC,uBAAU,EAAE,CAAC,CAAC;IACf,CAAC,gCAAiB,EAAE,CAAC,CAAC;IACtB,CAAC,yBAAW,EAAE,CAAC,CAAC;IAChB,CAAC,qBAAS,EAAE,CAAC,CAAC;IACd,CAAC,yBAAW,EAAE,CAAC,CAAC;IAChB,CAAC,uCAAkB,EAAE,CAAC,CAAC;IACvB,CAAC,6BAAa,EAAE,EAAE,CAAC;IACnB,CAAC,uBAAU,EAAE,EAAE,CAAC;IAChB,CAAC,yBAAW,EAAE,EAAE,CAAC;IACjB,CAAC,+BAAc,EAAE,EAAE,CAAC;IACpB,CAAC,4BAAe,EAAE,EAAE,CAAC;IACrB,CAAC,qCAAiB,EAAE,EAAE,CAAC;IACvB,CAAC,uBAAU,EAAE,EAAE,CAAC;IAChB,CAAC,yBAAW,EAAE,EAAE,CAAC;IACjB,CAAC,qBAAS,EAAE,EAAE,CAAC;IACf,CAAC,2BAAY,EAAE,EAAE,CAAC;IAClB,CAAC,yBAAW,EAAE,EAAE,CAAC;CAClB,CAAC,CAAC;AAEH,MAAa,WAAW;IAGtB,YAAY,IAAa;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAA2B,CAAC;IAC/C,CAAC;CACF;AAPD,kCAOC;AA2BD,2EAA2E;AAC3E,MAAa,QAAQ;IACnB,MAAM,CAAC,GAAG;QACR,sBAAsB;IACxB,CAAC;CACF;AAJD,4BAIC;AAED,MAAM,eAAe,GAAqC;IACxD,CAAC,0BAAO,CAAC,OAAO,CAAC,EAAE;QACjB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YACzD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YACzD,EAAE,KAAK,EAAE,iBAAO,EAAE,MAAM,EAAE,IAAI,EAAE;YAChC,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,SAAG,EAAE,MAAM,EAAE,CAAC,EAAE;YACzB,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,CAAC,EAAE;YACjC,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE;YACjC,EAAE,KAAK,EAAE,WAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,KAAK,EAAE;YAChC,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,KAAK,EAAE;YAC/B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,IAAI,EAAE;YAClC,EAAE,KAAK,EAAE,iBAAO,EAAE,MAAM,EAAE,IAAI,EAAE;SACjC;QACD,OAAO,EAAE;YACP,gCAAgC;YAChC,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAE9C,8BAA8B;YAC9B,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEhD,+BAA+B;YAC/B,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD;gBACE,KAAK,EAAE,6BAAa;gBACpB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C;gBACE,KAAK,EAAE,+BAAc;gBACrB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,4BAAe,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACpD,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD;gBACE,KAAK,EAAE,2BAAY;gBACnB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;SACF;KACF;IACD,CAAC,0BAAO,CAAC,IAAI,CAAC,EAAE;QACd,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,2BAAY,EAAE,MAAM,EAAE,CAAC,EAAE;YAClC,EAAE,KAAK,EAAE,2BAAY,EAAE,MAAM,EAAE,GAAG,EAAE;YACpC,EAAE,KAAK,EAAE,iCAAe,EAAE,MAAM,EAAE,IAAI,EAAE;YACxC,EAAE,KAAK,EAAE,+BAAc,EAAE,MAAM,EAAE,IAAI,EAAE;YACvC,EAAE,KAAK,EAAE,+BAAc,EAAE,MAAM,EAAE,IAAI,EAAE;YACvC,EAAE,KAAK,EAAE,6BAAa,EAAE,MAAM,EAAE,IAAI,EAAE;YACtC,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,GAAG,EAAE;YAC7B,EAAE,KAAK,EAAE,mBAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE;YACjC,EAAE,KAAK,EAAE,SAAG,EAAE,MAAM,EAAE,GAAG,EAAE;YAC3B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,GAAG,EAAE;SAC9B;QACD,OAAO,EAAE;YACP,0BAA0B;YAC1B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAE/C,yBAAyB;YACzB,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvD,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEhD,oBAAoB;YACpB;gBACE,KAAK,EAAE,6BAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,0EAA0E;SAC3E;KACF;IACD,CAAC,0BAAO,CAAC,MAAM,CAAC,EAAE;QAChB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YAC1D,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YAC1D,EAAE,KAAK,EAAE,iBAAO,EAAE,MAAM,EAAE,IAAI,EAAE;YAChC,EAAE,KAAK,EAAE,WAAI,EAAE,MAAM,EAAE,CAAC,EAAE;YAC1B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE;YACjC,EAAE,KAAK,EAAE,mBAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,IAAI,EAAE;YAC9B,EAAE,KAAK,EAAE,2BAAY,EAAE,MAAM,EAAE,IAAI,EAAE;YACrC,EAAE,KAAK,EAAE,WAAI,EAAE,MAAM,EAAE,GAAG,EAAE;SAC7B;QACD,OAAO,EAAE;YACP,oCAAoC;YACpC,EAAE,KAAK,EAAE,2BAAY,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACjD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,sEAAsE;YAEtE,6BAA6B;YAC7B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAE/C,gCAAgC;YAChC,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,6EAA6E;YAC7E;gBACE,KAAK,EAAE,2BAAY;gBACnB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;SACF;KACF;IACD,CAAC,0BAAO,CAAC,MAAM,CAAC,EAAE;QAChB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE;YACjC,EAAE,KAAK,EAAE,WAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC7B,EAAE,KAAK,EAAE,SAAG,EAAE,MAAM,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,mBAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC7B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,IAAI,EAAE;SAC/B;QACD,OAAO,EAAE;YACP,kCAAkC;YAClC,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEvD,uBAAuB;YACvB,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEhD,2BAA2B;YAC3B,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,gBAAgB;SACzE;KACF;IACD,CAAC,0BAAO,CAAC,OAAO,CAAC,EAAE;QACjB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,EAAE,EAAE;YAC5B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,mBAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,GAAG,EAAE;SAC9B;QACD,OAAO,EAAE;YACP,8BAA8B;YAC9B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD;gBACE,KAAK,EAAE,+BAAc;gBACrB,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YAED,oCAAoC;YACpC,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvD,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEhD,uBAAuB;YACvB;gBACE,KAAK,EAAE,6BAAa;gBACpB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;SACF;KACF;IACD,CAAC,0BAAO,CAAC,MAAM,CAAC,EAAE;QAChB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,EAAE,EAAE;YAC5B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE;YACnC,EAAE,KAAK,EAAE,SAAG,EAAE,MAAM,EAAE,GAAG,EAAE;YAC3B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,GAAG,EAAE;SAC9B;QACD,OAAO,EAAE;YACP,oCAAoC;YACpC,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD;gBACE,KAAK,EAAE,+BAAc;gBACrB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC5C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAE/C,gBAAgB;YAChB,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YACxD,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEvD,2BAA2B;YAC3B,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,4BAAe,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACpD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,aAAa;SAChE;KACF;IACD,CAAC,0BAAO,CAAC,WAAW,CAAC,EAAE;QACrB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,eAAM,EAAE,MAAM,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,IAAI,EAAE;YAC9B,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,CAAC,EAAE;SAChC;QACD,OAAO,EAAE;YACP,yBAAyB;YACzB,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC9C,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YAEhD,cAAc;YACd,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,4BAAe,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YAErD,8BAA8B;YAC9B;gBACE,KAAK,EAAE,+BAAc;gBACrB,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;SACvD;KACF;IACD,CAAC,0BAAO,CAAC,WAAW,CAAC,EAAE;QACrB,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QACvC,OAAO,EAAE,EAAE;KACZ;IACD,CAAC,0BAAO,CAAC,UAAU,CAAC,EAAE;QACpB,KAAK,EAAE;YACL,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9B,EAAE,KAAK,EAAE,mCAAgB,EAAE,MAAM,EAAE,GAAG,EAAE;YACxC,wBAAwB;YACxB,EAAE,KAAK,EAAE,aAAK,EAAE,MAAM,EAAE,IAAI,EAAE;SAC/B;QACD,OAAO,EAAE;YACP,qCAAqC;YACrC,kBAAkB;YAClB,EAAE,KAAK,EAAE,uCAAkB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,gCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,qBAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAE9C,kBAAkB;YAClB,EAAE,KAAK,EAAE,qCAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD;gBACE,KAAK,EAAE,+BAAc;gBACrB,MAAM,EAAE,GAAG;gBACX,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD;gBACE,KAAK,EAAE,6BAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,CAAC;gBACX,iBAAiB,EAAE,YAAY;gBAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACrB;YACD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,4BAAe,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YACpD,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,EAAE,KAAK,EAAE,uBAAU,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,KAAK,EAAE,yBAAW,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE;SACjD;KACF;CACF,CAAC;AAEO,0CAAe;;;;;;;;;;;;;;;AChbxB,mEAA+B;AAC/B,wGAAsD;AAoBtD,MAAa,oBAAoB;IAM/B,YAAY,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAEjE,IAAI,CAAC,eAAe,GAAG;YACrB,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxC,iBAAiB,EAAE,CAAC;YACpB,OAAO,EAAE,IAAI,CAAC,SAAS;SACxB,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG;YACxB,WAAW,EAAE,cAAc;YAC3B,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;SACX,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,MAAgC;QACpD,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,MAAM,EAAE,CAAC;IAChE,CAAC;IAED;;OAEG;IACH,qBAAqB,CACnB,UAAuB,EACvB,OAAe,EACf,OAAe,EACf,OAAe,YAAY,EAC3B,WAAmB,CAAC;QAEpB,IAAI,CAAC,kBAAkB,GAAG;YACxB,WAAW,EAAE,IAAI;YACjB,QAAQ;YACR,UAAU;YACV,OAAO;YACP,OAAO;SACR,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,KAAa;QAChB,mBAAmB;QACnB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACxC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;QAEnE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,KAAa;QAC1C,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACjD,sBAAsB;YACtB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBACvD,IAAI,CAAC,aAAa,CAChB,SAAS,EACT,KAAK,EACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAC/B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAChC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,4BAA4B;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;IACH,CAAC;IAED;;OAEG;IACK,uBAAuB;QAC7B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACH,aAAa,CACX,SAAoB,EACpB,KAAa,EACb,YAAoB,EACpB,YAAoB;QAEpB,2BAA2B;QAC3B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACzC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,EAChE,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,EACjE,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,CACZ,CAAC;QAEF,mBAAmB;QACnB,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;QAErE,uCAAuC;QACvC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;SAC/D;IACH,CAAC;IAED;;OAEG;IACK,wBAAwB,CAC9B,SAAoB,EACpB,YAAoB,EACpB,YAAoB;QAEpB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7B,KAAK,IAAI,UAAU,IAAI,SAAS,CAAC,WAAW,EAAE;YAC5C,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,YAAY,CAAC,EACjE,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,YAAY,CAAC,EAClE,CAAC,EACD,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACK,iBAAiB,CACvB,SAAoB,EACpB,YAAoB,EACpB,YAAoB;QAEpB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;QAC3E,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;QAE5E,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;QAC5B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QACtD,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IACK,gBAAgB;QACtB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAC1C,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAEnC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7B,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,YAAY,CAAC;QAC7B,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1E,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,eAAe,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,EAAE,EAC1D,EAAE,EACF,EAAE,CACH,CAAC;QACF,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,aAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,EAClE,EAAE,EACF,EAAE,CACH,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,oBAAoB,CACxB,SAAgD;QAEhD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YACjC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,QAAQ,SAAS,EAAE;YACjB,KAAK,WAAW;gBACd,KAAK;oBACH,IAAI,CAAC,eAAe,CAAC,iBAAiB;wBACtC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC;gBAC3C,MAAM;YACR,KAAK,aAAa;gBAChB,KAAK;oBACH,IAAI,CAAC,eAAe,CAAC,iBAAiB;wBACtC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;gBACxC,MAAM;YACR,KAAK,OAAO;gBACV,KAAK;oBACH,IAAI,CAAC,eAAe,CAAC,iBAAiB;wBACtC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;gBACtC,MAAM;SACT;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,UAAuB;QAC3C,iDAAiD;QACjD,MAAM,gBAAgB,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,IAAI,CAC3C,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAC9B,CAAC;QAEF,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAE1C,MAAM,OAAO,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,MAAM,OAAO,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAErE,2BAA2B;QAC3B,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YAC/B,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC9B,SAAS,CAAC,SAAS,GAAG,gBAAgB,CAAC;aACxC;iBAAM,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE;gBACpC,SAAS,CAAC,SAAS,GAAG,gBAAgB,CAAC;aACxC;iBAAM,IAAI,SAAS,CAAC,IAAI,KAAK,YAAY,EAAE;gBAC1C,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;aAC9B;iBAAM,IAAI,SAAS,CAAC,IAAI,KAAK,UAAU,EAAE;gBACxC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;aAChC;iBAAM;gBACL,6BAA6B;gBAC7B,MAAM,cAAc,GAClB,OAAO,GAAG,OAAO;oBACf,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBACpD,CAAC,CAAC,CAAC,CAAC;gBACR,MAAM,OAAO,GAAG,GAAG,GAAG,cAAc,GAAG,GAAG,CAAC;gBAC3C,SAAS,CAAC,SAAS,GAAG,uBAAuB,OAAO,GAAG,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,4BAA4B,CAC1B,UAAuB,EACvB,QAAgB,EAChB,SAAiB;QAEjB,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,OAAO;QAE5B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,CAClD,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAC5B,CAAC;QAEF,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QACvC,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;QAE7C,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;YACtC,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YAE9D,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5D,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,EAAE;wBACrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,GAAG,CAAC;qBACjC;iBACF;aACF;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CACT,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CACrE,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YAC1B,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,GAAG,WAAW,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,IAAY,EAAE,OAAgB;QAC9C,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,OAAO;QAE5B,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,0BAA0B,OAAO,EAAE,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAChC;IACH,CAAC;IAED;;OAEG;IACH,kBAAkB,CAChB,UAIyB,EACzB,SAAqB;QAErB,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,OAAO;QAE5B,QAAQ,UAAU,EAAE;YAClB,KAAK,iBAAiB;gBACpB,IAAI,SAAS,EAAE;oBACb,sCAAsC;oBACtC,MAAM,aAAa,GAAG,SAAS,CAAC,SAAS,CAAC;oBAC1C,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC/B,UAAU,CAAC,GAAG,EAAE;wBACd,SAAS,CAAC,SAAS,GAAG,aAAa,CAAC;oBACtC,CAAC,EAAE,GAAG,CAAC,CAAC;iBACT;gBACD,MAAM;YACR,KAAK,gBAAgB;gBACnB,IAAI,SAAS,EAAE;oBACb,SAAS,CAAC,SAAS,GAAG,YAAY,CAAC;iBACpC;gBACD,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,SAAS,EAAE;oBACb,SAAS,CAAC,SAAS,GAAG,gBAAgB,CAAC;iBACxC;gBACD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,MAAM;YACR,KAAK,qBAAqB;gBACxB,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;gBAC/C,MAAM;SACT;IACH,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,IAAY,EAAE,QAAgB;QAC3C,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEtE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACjE,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,kBAAkB,GAAG;YACxB,WAAW,EAAE,cAAc;YAC3B,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;SACX,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,OAAO,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,qBAAqB;QACnB,OAAO,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IACxC,CAAC;CACF;AA3XD,oDA2XC;;;;;;;;;;;;;;;AChZD,6EAA8C;AAQ9C,6FAA4C;AAE5C,wGAAkD;AAElD,+FAAgD;AAChD,0EAAkC;AAElC,yFAA2C;AAC3C,8HAAgE;AAQhE,MAAM,iBAAiB,GAA2B;IAChD,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC,EAAE,cAAc;CACtB,CAAC;AACF;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,MAAa,KAAK;IAqBhB,YACE,IAAU,EACV,KAAa,EACb,KAAa,EACb,MAAc,EACd,aAAsB,IAAI,EAC1B,QAAgB,EAChB,GAAY,EACZ,iBAA0B,KAAK;QApBjC,iCAAiC;QACjC,UAAK,GAAwB,IAAI,GAAG,EAAE,CAAC;QACvC,cAAS,GAAmC,IAAI,GAAG,EAAE,CAAC;QAKtD,eAAU,GAAY,IAAI,CAAC;QAG3B,mBAAc,GAAY,KAAK,CAAC;QAqDhC;;;WAGG;QACH,kCAA6B,GAAG,CAC9B,MAAY,EACZ,KAAa,EAC8B,EAAE;YAC7C,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS;gBAAE,OAAO,IAAI,CAAC;YAClE,oDAAoD;YACpD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC5B,OAAO,CAAC,GAAG,CACT,yCAA0C,MAAc,CAAC,QAAQ,UAAU,KAAK,gBAAgB,KAAK,CAAC,MAAM,EAAE,CAC/G,CAAC;YACF,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBAChD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACjD,MAAM,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/B,IAAI,IAAI,YAAY,uBAAU,IAAI,IAAI,CAAC,UAAU,EAAE;4BACjD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC;4BACnC,IAAI,KAAK,KAAK,KAAK,EAAE;gCACnB,OAAO,CAAC,GAAG,CACT,6CAA8C,CAAS,CAAC,QAAQ,QAAQ,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,CACjG,CAAC;gCACF,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;6BAClC;iCAAM;gCACL,+BAA+B;gCAC/B,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI;oCACtB,OAAO,CAAC,GAAG,CACT,8DAA8D,KAAK,UAAU,KAAK,YAAa,CAAS,CAAC,QAAQ,EAAE,CACpH,CAAC;6BACL;yBACF;qBACF;iBACF;aACF;YACD,OAAO,CAAC,GAAG,CACT,qDAAqD,KAAK,gBAAiB,MAAc,CAAC,QAAQ,EAAE,CACrG,CAAC;YACF,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QA8EF,kBAAa,GAAG,CAAC,IAAU,EAAE,UAAyB,EAAe,EAAE;YACrE,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC3B,IAAI,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC;oBAAE,OAAO,CAAC,CAAC;aACvC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAyBF,yBAAoB,GAAG,GAAG,EAAE;YAC1B,oCAAoC;YACpC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBAC9B;aACF;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,UAAyB,EAAe,EAAE;YACjE,IAAI,YAAY,GAAgB,IAAI,CAAC;YACrC,IAAI,gBAAgB,GAAG,CAAC,CAAC;YAEzB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;gBAC7D,IAAI,QAAQ,IAAI,QAAQ,GAAG,gBAAgB,EAAE;oBAC3C,gBAAgB,GAAG,QAAQ,CAAC;oBAC5B,YAAY,GAAG,IAAI,CAAC;iBACrB;aACF;YACD,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC;QAEF,2BAAsB,GAAG,CAAC,cAAoB,EAAe,EAAE;YAC7D,IAAI,YAAY,GAAgB,IAAI,CAAC;YACrC,IAAI,mBAAmB,GAAG,CAAC,QAAQ,CAAC;YAEpC,2EAA2E;YAC3E,wEAAwE;YACxE,2DAA2D;YAC3D,MAAM,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;gBACzD,MAAM,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;gBAE7D,YAAY,GAAG,UAAU,CAAC;gBAC1B,cAAc,GAAG,YAAY,CAAC;gBAE9B,MAAM,SAAS,GAAa,EAAE,CAAC;gBAC/B,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS;oBACjD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS;oBACrD,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE/B,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS,CAAC,8BAA8B;gBAEpE,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;gBAE3C,IAAI,WAAW,GAAG,mBAAmB,EAAE;oBACrC,mBAAmB,GAAG,WAAW,CAAC;oBAClC,YAAY,GAAG,IAAI,CAAC;iBACrB;aACF;YACD,MAAM,EAAE,GAAG,YAAY,EAAE,0BAA0B,CAAC,IAAI,CAAC,CAAC;YAC1D,MAAM,IAAI,GAAG,YAAY,EAAE,0BAA0B,CAAC,MAAM,CAAC,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,QAAQ,EAAE;gBAClD,EAAE;gBACF,IAAI;gBACJ,mBAAmB;aACpB,CAAC,CAAC;YACH,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC;QAEF,4BAAuB,GAAG,GAAG,EAAE;YAC7B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC3B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1D,sBAAsB;wBACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;4BACzD,yDAAyD;4BACzD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAC7C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC9C;iCAAM;gCACL,OAAO,CAAC,IAAI,CACV,+BAA+B,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,EAAE,EAAE,CAC9D,CAAC;6BACH;yBACF;6BAAM;4BACL,OAAO,CAAC,IAAI,CACV,qBAAqB,CAAC,KAAK,CAAC,+BAA+B,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CACzF,CAAC;yBACH;qBACF;iBACF;aACF;QACH,CAAC,CAAC;QAvRA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,yBAAS,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACjD,mDAAmD;IACrD,CAAC;IACD,aAAa,CAAC,IAAU;QACtB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ,EAAE;YAC5C,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACb;QAED,4BAA4B;QAC5B,wEAAwE;QAExE,IAAI,IAAI,EAAE;YACR,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClC,IAAI,IAAI,YAAY,uBAAU,EAAE;wBAC9B,OAAO,IAAI,CAAC;qBACb;iBACF;aACF;SACF;QAED,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IA4CD,UAAU,CAAC,IAAU;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC1B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO,IAAI,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa,CAAC,UAAsB;QAClC,IAAI,IAAI,CAAC,cAAc;YAAE,OAAO;QAEhC,MAAM,aAAa,GAAG;YACpB,QAAQ,EAAE,UAAU,CAAC,CAAC;YACtB,QAAQ,EAAE,UAAU,CAAC,CAAC;YACtB,WAAW,EAAE,UAAU,CAAC,IAAI;SAC7B,CAAC;QAEF,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAErC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC3D,OAAO;SACR;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEhE,IAAI,UAAU,GAAG,UAAU,CAAC,aAAa,EAAE,CAAC;QAC5C,IAAI,aAAa,CAAC,WAAW,KAAK,UAAU,EAAE;YAC5C,UAAU,GAAG,UAAU,CAAC,MAAM,CAC5B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,QAAQ,CACxE,CAAC;SACH;QAED,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,CAAC,KAAK,CACX,gCAAgC,UAAU,CAAC,EAAE,4CAA4C,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,EAC7G,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,CACjC,CAAC;YACF,OAAO;SACR;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAClE,MAAM,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;QAE3C,MAAM,GAAG,GAAG,IAAI,SAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5D,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEhC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,wEAAwE;QACxE,0CAA0C;IAC5C,CAAC;IAED,WAAW,CAAC,QAAQ,GAAG,IAAI;QACzB,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAC7B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,CAC5C,CAAC;SACH;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EACjC,MAAM,CACP,CAAC;SACH;IACH,CAAC;IAED,YAAY,CAAC,QAAQ,GAAG,IAAI;QAC1B,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK,CAAC,CAAC;SAC1E;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EACjC,IAAI,CACL,CAAC;SACH;IACH,CAAC;IASD,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACxC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IA8FD;;;;OAIG;IACH,kBAAkB;QAChB,8EAA8E;QAC9E,OAAO;YACL,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,IAAI,CAAC,KAAK;YACzB,SAAS,EAAE,iBAAiB;SAC7B,CAAC;IACJ,CAAC;IAED,YAAY;QACV,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACnC;IACH,CAAC;CACF;AA3UD,sBA2UC;;;;;;;;;;;;;;;AC3YD,MAAa,cAAc;IAiBzB,MAAM,KAAK,sCAAsC;QAC/C,OAAO,cAAc,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAChD,CAAC;;AAnBH,wCA0BC;AAzBQ,uBAAQ,GAAG,CAAC,CAAC;AACb,uBAAQ,GAAG,CAAC,CAAC;AAEJ,kCAAmB,GAAG,GAAG,CAAC,CAAC,yBAAyB;AACpD,wBAAS,GAAG,IAAI,CAAC,CAAC,eAAe;AACjC,oCAAqB,GAAG,GAAG,CAAC,CAAC,eAAe;AAC5C,2CAA4B,GAAG,IAAI,CAAC,CAAC,eAAe;AACpD,yBAAU,GAAG,EAAE,CAAC;AAEhB,gCAAiB,GAAG,GAAG,CAAC;AACxB,iCAAkB,GAAG,GAAG,CAAC;AACzB,mCAAoB,GAAG,IAAI,CAAC;AAE5B,iCAAkB,GAAG,CAAC,CAAC;AACvB,6BAAc,GAAG,CAAC,CAAC,CAAC,iDAAiD;AAC9E,kCAAmB,GAAG,CAAC,CAAC,CAAC,kDAAkD;AAI3E,oCAAqB,GAAG,CAAC,CAAC;AACjC,wDAAwD;AAExC,+BAAgB,GAAG,QAAQ,CAAC;AAC5B,kCAAmB,GAA6B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC7D,gCAAiB,GAA6B,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;AC3B9E,mEAA4C;AAC5C,6EAA8C;AAG9C,yFAA2C;AAE3C,oIAGoC;AACpC,2EAAgC;AAChC,wGAAsD;AACtD,2HAAwD;AAExD,kHAM8B;AAC9B,sGAAoE;AAEpE,2HAAgE;AAChE,iHAA4D;AAG5D,MAAa,cAAc;IAazB;QAVA,iBAAY,GAAG,CAAC,CAAC;QACjB,6BAAwB,GAAG,CAAC,CAAC;QAgBrB,8BAAyB,GAAG,CAClC,UAA4B,EAC5B,QAAgB,EAChB,SAAiB,EACjB,EAAE;YACF,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;gBAClC,uCAAuC;gBACvC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC5B,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC9B,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC/B,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;gBAE7B,4CAA4C;gBAC5C,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE;oBACrB,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC7B;gBACD,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE;oBACrB,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;iBAC5B;gBACD,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAC1C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC9B;gBACD,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,KAAK,SAAS,EAAE;oBAC3C,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC/B;aACF;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CACZ,KAAa,EACb,aAAsB,IAAI,EAC1B,QAAgB,EAChB,OAAgB,EAChB,iBAA0B,KAAK,EAC/B,EAAE;YACF,IAAI,QAAQ,GAAG,IAAI,aAAK,CACtB,IAAI,CAAC,IAAI,EACT,KAAK,EACL,GAAG,EACH,GAAG,EACH,UAAU,EACV,QAAQ,EACR,OAAO,EACP,cAAc,CACf,CAAC;YACF,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;QAEF,aAAQ,GAAG,CACT,UAA4B,EAC5B,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,MAAc,EACD,EAAE;YACf,IAAI,KAAK,GAAgB,EAAE,CAAC;YAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAE9B,IAAI,IAAI,GAAG,IAAI,WAAI,CACjB,IAAI,CAAC,IAAI,EACT,SAAS,CAAC,CAAC,GAAG,CAAC,EACf,SAAS,CAAC,CAAC,GAAG,CAAC,EACf,SAAS,CAAC,CAAC,GAAG,CAAC,EACf,SAAS,CAAC,CAAC,GAAG,CAAC,EACf,SAAS,CAAC,IAAI,EACd,KAAK,EACL,QAAQ,EACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EACvB,eAAM,CAAC,IAAI,EACX,OAAO,CACR,CAAC;gBACF,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC;gBAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;YAED,IAAI,WAAW,GAAgB,EAAE,CAAC;YAElC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBACtC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;oBAC3C,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC5D,IAAI,YAAY,GAAG,WAAW,CAAC,IAAI,CACjC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAC7D,CAAC;oBACF,IAAI,YAAY,EAAE;wBAChB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACzB;oBACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,IAAY,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;QAEF,aAAQ,GAAG,KAAK,EACd,IAAU,EACV,KAAa,EACb,UAAU,GAAG,KAAK,EAClB,QAAoC,EACpC,cAAuB,0BAAO,CAAC,OAAO,EACtC,cAAc,GAAG,KAAK,EAAE,qBAAqB;QAC7C,MAAe,EACf,IAAsB,EACtB,EAAE;YACF,2CAA2C;YAC3C,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,uCAAkB,CAAC,IAAI,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;aAC3D;YAED,IAAI,CAAC,WAAW,GAAG,kDAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,mFAAmF;YACnF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACzD;YACD,eAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAExD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,0BAA0B;YAC1B,IAAI,QAAQ,GACV,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;gBACxB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC;gBAC1D,CAAC,CAAC,CAAC,CAAC;YAER,qEAAqE;YACrE,IAAI,UAAuB,CAAC;YAE5B,MAAM,YAAY,GAAG,6BAAa,CAAC,cAAc,IAAI,CAAC,UAAU,CAAC;YACjE,mEAAmE;YACnE,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CACvC,KAAK,EACL,GAAG,EACH,mCAAgB,CAAC,qBAAqB,CACvC,CAAC;YACF,IAAI,YAAY,IAAI,OAAO,EAAE;gBAC3B,qDAAqD;gBACrD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBAE3D,IAAI,MAAM,EAAE;oBACV,OAAO,CAAC,GAAG,CAAC,oCAAoC,MAAM,EAAE,CAAC,CAAC;oBAC1D,UAAU,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CACrE,MAAM,EACN,IAAI,EACJ,KAAK,EACL,UAAU,CACX,CAAC;iBACH;gBAED,4EAA4E;gBAC5E,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtC,IAAI,CAAC,MAAM,EAAE;wBACX,OAAO,CAAC,IAAI,CACV,iCAAiC,KAAK,yCAAyC,CAChF,CAAC;qBACH;yBAAM;wBACL,OAAO,CAAC,IAAI,CACV,8DAA8D,CAC/D,CAAC;qBACH;oBACD,UAAU,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAClE,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,KAAK,EACL,IAAI,CAAC,WAAW;oBAChB,0DAA0D;oBAC1D,UAAU;wBACR,CAAC,CAAC,SAAS;wBACX,CAAC,CAAC;4BACE,SAAS,EAAG,IAAY,EAAE,SAAS;4BACnC,SAAS,EAAG,IAAY,EAAE,SAAS;yBACpC,CACN,CAAC;iBACH;aACF;iBAAM;gBACL,mEAAmE;gBACnE,IAAI,UAAU,EAAE;oBACd,UAAU,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;iBACzE;qBAAM;oBACL,UAAU,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAClE,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,KAAK,EACL,IAAI,CAAC,WAAW,EAChB,UAAU;wBACR,CAAC,CAAC,SAAS;wBACX,CAAC,CAAC;4BACE,SAAS,EAAG,IAAY,EAAE,SAAS;4BACnC,SAAS,EAAG,IAAY,EAAE,SAAS;yBACpC,CACN,CAAC;iBACH;aACF;YAED,mDAAmD;YACnD,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACxE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;gBAC9B,OAAO,CAAC,IAAI,CACV,8BAA8B,iBAAiB,CAAC,YAAY,EAAE,CAC/D,CAAC;aACH;YACD,IAAI,WAAW,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,0BAAO,CAAC,UAAU,CAAC,CAAC,CAAC,0BAAO,CAAC,OAAO,CAAC;YACnE,IAAI,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC;YACtD,mBAAmB;YACnB,kCAAkC;YAClC,IAAI;YAEJ,qBAAqB;YACrB,uGAAuG;YACvG,uDAAuD;YACvD,IAAI;YAEJ,yCAAyC;YACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAC7B,KAAK,EACL,CAAC,UAAU,EACX,QAAQ,EACR,OAAO,EACP,cAAc,CACf,CAAC;YAEF,IAAI,UAAU,EAAE;gBACd,iDAAiD;gBACjD,6BAA6B;aAC9B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACnC;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;YAErE,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzB,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;YAEnC,QAAQ,CAAC,YAAY,EAAE,CAAC;YACxB,qCAAqC;YAErC,2CAA2C;YAC3C,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACrB,QAAQ,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;aACrC;YAED,6DAA6D;YAC7D,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAExE,uCAAuC;YACvC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/B,kDAAkD;YAClD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAE7D,4CAA4C;YAC5C,iFAAiF;YAEjF,8CAA8C;YAC9C,QAAQ,CACN,UAAU;gBACR,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ,CAAC;gBACjD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK,CAAC,CACjD,CAAC;QACJ,CAAC,CAAC;QAsBF,yBAAoB,GAAG,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,cAAc,GAAG,KAAK,EAAE,EAAE;YACvE,oEAAoE;YACpE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC/C,MAAM,IAAI,CAAC,QAAQ,CACjB,IAAI,EACJ,KAAK,EACL,KAAK,EACL,GAAG,EAAE,GAAE,CAAC,EACR,0BAAO,CAAC,OAAO,EACf,cAAc,EACd,SAAS,EACT;oBACE,SAAS,EAAE,mCAAgB,CAAC,mBAAmB;oBAC/C,SAAS,EAAE,mCAAgB,CAAC,mBAAmB;iBAChD,CACF,CAAC;gBACF,sDAAsD;aACvD;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;iBAAM;gBACL,yCAAyC;gBACzC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;gBACxC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;gBACnE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC;QA7UA,2EAA2E;QAC3E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,qBAAqB,GAAG,IAAI,6CAAqB,EAAE,CAAC;IAC3D,CAAC;IAwRD;;;OAGG;IACK,oBAAoB,CAC1B,KAAa,EACb,MAAc,EACd,WAAmB;QAEnB,uDAAuD;QACvD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,6DAA6D;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;SACvE;QACD,eAAe;QACf,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,UAAU,CAAC;QACjC,OAAO,CAAC,GAAG,WAAW,CAAC;IACzB,CAAC;IAiCO,KAAK,CAAC,yBAAyB,CACrC,KAAa;QAEb,OAAO,CAAC,GAAG,CAAC,oCAAoC,KAAK,KAAK,CAAC,CAAC;QAE5D,kDAAkD;QAClD,MAAM,mBAAmB,GAAa,EAAE,CAAC;QACzC,MAAM,aAAa,GAAG,EAAE,CAAC,CAAC,sCAAsC;QAEhE,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,aAAa,EAAE,SAAS,EAAE,EAAE;YAC9D,MAAM,QAAQ,GAAG,GAAG,KAAK,IAAI,SAAS,MAAM,CAAC;YAC7C,MAAM,QAAQ,GAAG,cAAc,QAAQ,EAAE,CAAC;YAE1C,4CAA4C;YAC5C,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;gBACzC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,wBAAwB,QAAQ,EAAE,CAAC,CAAC;aACjD;SACF;QAED,IAAI,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,qCAAqC,KAAK,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC;SACb;QAED,kDAAkD;QAClD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAC9B,eAAM,CAAC,IAAI,EAAE,GAAG,mBAAmB,CAAC,MAAM,CAC3C,CAAC;QACF,MAAM,YAAY,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAExD,OAAO,CAAC,GAAG,CACT,iBAAiB,YAAY,KAAK,aAAa,GAAG,CAAC,IAAI,mBAAmB,CAAC,MAAM,aAAa,CAC/F,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,SAAiB;QAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBAChB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC;YACF,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE;gBACjB,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,CAAC;YACF,iCAAiC;YACjC,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;AAlZH,wCAmZC;AA3YQ,iCAAkB,GAAG,CAAC,CAAC;AA6YhC,MAAM,iBAAiB,GAAG,CACxB,QAAkB,EAClB,KAAa,EACG,EAAE;IAClB,MAAM,UAAU,GAAG,kDAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAEhE,QAAQ,QAAQ,EAAE;QAChB,KAAK,6BAAQ,CAAC,SAAS;YACrB,OAAO;gBACL,QAAQ,EAAE,6BAAQ,CAAC,SAAS;gBAC5B,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;gBAC/B,SAAS,EAAE;oBACT,GAAG,EAAE,UAAU,CAAC,YAAY;oBAC5B,GAAG,EAAE,UAAU,CAAC,YAAY;iBAC7B;gBACD,kBAAkB,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC;gBAClC,qBAAqB,EAAE,GAAG;gBAC1B,WAAW,EAAE,UAAU,CAAC,WAAW;gBACnC,eAAe,EAAE,UAAU,CAAC,eAAe;gBAC3C,eAAe,EAAE,QAAQ;gBACzB,aAAa,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;aAClC,CAAC;QAEJ,KAAK,6BAAQ,CAAC,SAAS;YACrB,OAAO;gBACL,QAAQ,EAAE,6BAAQ,CAAC,SAAS;gBAC5B,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;gBAC7B,kBAAkB,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC;gBAClC,qBAAqB,EAAE,GAAG;gBAC1B,WAAW,EAAE,GAAG;gBAChB,eAAe,EAAE,EAAE;gBACnB,eAAe,EAAE,UAAU;gBAC3B,aAAa,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;aAClC,CAAC;QAEJ,KAAK,6BAAQ,CAAC,QAAQ;YACpB,OAAO;gBACL,QAAQ,EAAE,6BAAQ,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;gBAC7B,kBAAkB,EAAE,EAAE;gBACtB,qBAAqB,EAAE,CAAC;gBACxB,WAAW,EAAE,EAAE;gBACf,eAAe,EAAE,EAAE;gBACnB,eAAe,EAAE,QAAQ;gBACzB,aAAa,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;aAClC,CAAC;QAEJ;YACE,MAAM,IAAI,KAAK,CAAC,sBAAsB,QAAQ,EAAE,CAAC,CAAC;KACrD;AACH,CAAC,CAAC;;;;;;;;;;;;;;;ACteF,mEAA+B;AAC/B,sFAAyC;AACzC,yFAA2C;AAa3C,MAAa,mBAAmB;IAQ9B,YAAY,QAAgB,GAAG,EAAE,SAAiB,GAAG;QAP7C,UAAK,GAAW,EAAE,CAAC;QAKnB,YAAO,GAAY,KAAK,CAAC;QAG/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;QAEzC,sDAAsD;QACtD,IAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,GAAW,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACrD,IAAI,CAAC,GAAW,CAAC,wBAAwB,GAAG,KAAK,CAAC;QAClD,IAAI,CAAC,GAAW,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACpD,CAAC;IAED,8DAA8D;IACtD,gBAAgB;QACtB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,kEAAkE;QAClE,kDAAkD;QAClD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CACpB,OAAO,EACP,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,aAAK,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAC1E,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CACrB,OAAO,EACP,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,aAAK,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAC1E,CAAC;QAEF,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,+DAA+D;IACvD,aAAa,CAAC,KAAa,EAAE,MAAc;QACjD,OAAO,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;IAC9B,CAAC;IAED,yCAAyC;IACzC,aAAa,CACX,QAAgB,EAChB,OAAqB,eAAM,CAAC,IAAI,EAChC,kBAAkD,QAAQ;QAE1D,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAClD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE/C,IAAI,CAAS,EAAE,CAAS,CAAC;YAEzB,8BAA8B;YAC9B,QAAQ,eAAe,EAAE;gBACvB,KAAK,OAAO;oBACV,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE;wBACpB,YAAY;wBACZ,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;wBACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;qBACpD;yBAAM;wBACL,cAAc;wBACd,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;wBACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;qBACpD;oBACD,MAAM;gBACR,KAAK,SAAS;oBACZ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;oBACtC,QAAQ,MAAM,EAAE;wBACd,KAAK,CAAC,EAAE,WAAW;4BACjB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;4BACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;4BACnD,MAAM;wBACR,KAAK,CAAC,EAAE,YAAY;4BAClB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;4BACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;4BACnD,MAAM;wBACR,KAAK,CAAC,EAAE,cAAc;4BACpB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;4BACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;4BACnD,MAAM;wBACR,KAAK,CAAC,EAAE,eAAe;4BACrB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;4BACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;4BACnD,MAAM;qBACT;oBACD,MAAM;gBACR,SAAS,SAAS;oBAChB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACjD,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aACtD;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,CAAC;gBACD,CAAC;gBACD,KAAK;gBACL,MAAM;gBACN,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,IAAI;gBACJ,EAAE,EAAE,CAAC;aACN,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oEAAoE;IAC5D,YAAY,CAAC,KAAW,EAAE,KAAW;QAC3C,OAAO,CAAC,CACN,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC;YACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC;YACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC;YACrC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CACtC,CAAC;IACJ,CAAC;IAED,6DAA6D;IACrD,UAAU,CAAC,KAAW,EAAE,KAAW;QACzC,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,qCAAqC;QAE9D,4BAA4B;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAC5B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAC7C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAC9C,CAAC;QAEF,0BAA0B;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAC1B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAC9C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAC/C,CAAC;QAEF,MAAM,oBAAoB,GAAG,CAAC,CAC5B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CACnE,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,CAC1B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CACrE,CAAC;QAEF,OAAO,CACL,CAAC,aAAa,GAAG,aAAa,IAAI,kBAAkB,CAAC;YACrD,CAAC,WAAW,GAAG,aAAa,IAAI,oBAAoB,CAAC,CACtD,CAAC;IACJ,CAAC;IAED,qDAAqD;IAC7C,SAAS,CAAC,KAAW,EAAE,KAAW;QACxC,MAAM,oBAAoB,GAAG,CAAC,CAC5B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CACnE,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,CAC1B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CACrE,CAAC;QAEF,IAAI,oBAAoB,EAAE;YACxB,kBAAkB;YAClB,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBACrB,oBAAoB;gBACpB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC3C,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;gBAClB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aACd;iBAAM;gBACL,oBAAoB;gBACpB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC3C,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;gBAClB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aACd;SACF;aAAM,IAAI,kBAAkB,EAAE;YAC7B,oBAAoB;YACpB,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBACrB,sBAAsB;gBACtB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBAC1C,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;gBAClB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aACd;iBAAM;gBACL,sBAAsB;gBACtB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBAC1C,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;gBAClB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aACd;SACF;IACH,CAAC;IAED,6CAA6C;IACrC,gBAAgB,CAAC,KAAW,EAAE,KAAW;QAC/C,oBAAoB;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACvB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,EACnC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CACpC,CAAC;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACvB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,EACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CACrC,CAAC;QAEF,kEAAkE;QAClE,IAAI,QAAQ,GAAG,QAAQ,EAAE;YACvB,wBAAwB;YACxB,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YAC1C,MAAM,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAC;YAEhC,KAAK,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YAC7D,KAAK,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YAE7D,yCAAyC;YACzC,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YACvD,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;SACxD;aAAM;YACL,sBAAsB;YACtB,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YAC1C,MAAM,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAC;YAEhC,KAAK,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YAC7D,KAAK,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YAE7D,yCAAyC;YACzC,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;YACvD,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;SACxD;IACH,CAAC;IAED,yBAAyB;IACzB,eAAe,CAAC,aAAqB,IAAI;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC;QACrB,MAAM,WAAW,GAAG,IAAI,CAAC;QAEzB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,UAAU,EAAE,IAAI,EAAE,EAAE;YAC5C,IAAI,WAAW,GAAG,KAAK,CAAC;YAExB,sCAAsC;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACnD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpD,WAAW,GAAG,IAAI,CAAC;qBACpB;iBACF;aACF;YAED,8EAA8E;YAC9E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9C;iBACF;aACF;YAED,qCAAqC;YACrC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC;gBACnB,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC;gBAEnB,2BAA2B;gBAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEtE,IACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW;oBAC/B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,EAC/B;oBACA,WAAW,GAAG,IAAI,CAAC;iBACpB;aACF;YAED,8BAA8B;YAC9B,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,yBAAyB,IAAI,aAAa,CAAC,CAAC;gBACxD,MAAM;aACP;SACF;QAED,4EAA4E;QAC5E,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,0BAA0B;IAC1B,WAAW;QACT,2CAA2C;QAC3C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAElD,iCAAiC;QACjC,IAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEvC,kCAAkC;QAClC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CACZ,CAAC;SACH;QAED,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,4CAA4C;IAC5C,OAAO,CAAC,QAAiB;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAClC,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACjE,MAAM,aAAa,GAAG,QAAQ,IAAI,SAAS,SAAS,MAAM,CAAC;QAE3D,4BAA4B;QAC5B,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,aAAa,EAAE,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE1C,oCAAoC;QACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEhC,oDAAoD;QACpD,OAAO,CAAC,GAAG,CACT,wBAAwB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,EACrD,IAAI,CAAC,IAAI,CACV,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,yCAAyC,aAAa,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,4DAA4D;IAC5D,IAAI,CAAC,UAAkB,CAAC,EAAE,UAAkB,CAAC,EAAE,QAAgB,CAAC;QAC9D,IAAI,CAAC,WAAI,CAAC,GAAG;YAAE,OAAO;QAEtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEhB,gDAAgD;QAChD,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACtC,WAAI,CAAC,GAAW,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACrD,WAAI,CAAC,GAAW,CAAC,wBAAwB,GAAG,KAAK,CAAC;QAClD,WAAI,CAAC,GAAW,CAAC,uBAAuB,GAAG,KAAK,CAAC;QAElD,aAAa;QACb,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAC1C,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,OAAO,EACP,OAAO,EACP,IAAI,CAAC,KAAK,GAAG,KAAK,EAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CACpB,CAAC;QAEF,0BAA0B;QAC1B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,0BAA0B,CAAC;QAClD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE;YACxC,WAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9C,WAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YACpE,WAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACnB;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;YACzC,WAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAC9C,WAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YACnE,WAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACnB;QAED,6DAA6D;QAC7D,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,+DAA+D;YAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7C,IAAI,GAAW,CAAC;YAEhB,IAAI,WAAW,GAAG,GAAG,EAAE;gBACrB,8BAA8B;gBAC9B,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;aACnC;iBAAM,IAAI,WAAW,GAAG,IAAI,EAAE;gBAC7B,6BAA6B;gBAC7B,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;aACjC;iBAAM;gBACL,2BAA2B;gBAC3B,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;aACnC;YAED,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,aAAa,CAAC;YAC7C,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,EACpC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,EACpC,IAAI,CAAC,KAAK,GAAG,KAAK,EAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CACpB,CAAC;YAEF,cAAc;YACd,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAC/B,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YACvB,WAAI,CAAC,GAAG,CAAC,UAAU,CACjB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,EACpC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,EACpC,IAAI,CAAC,KAAK,GAAG,KAAK,EAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CACpB,CAAC;YAEF,8BAA8B;YAC9B,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;gBAC7B,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;gBACjC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC9B,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,GAAG,IAAI,CAAC,EAAE,EAAE,EACZ,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,EAC3C,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CACjD,CAAC;gBAEF,iCAAiC;gBACjC,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,eAAe,CAAC;oBAChC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,EAC9B,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,EAC3C,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CACjD,CAAC;iBACH;aACF;SACF;QAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC;IAED,mCAAmC;IACnC,MAAM,CAAC,mBAAmB,CACxB,QAAgB,EAAE,EAClB,SAAiB,EAAE,EACnB,WAAmB,EAAE,EACrB,OAAqB,eAAM,CAAC,IAAI,EAChC,UAA0C,QAAQ;QAElD,MAAM,SAAS,GAAG,IAAI,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzD,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACjD,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,iCAAiC;IACjC,QAAQ;QACN,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,2DAA2D;IAC3D,kBAAkB;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAEzC,0CAA0C;QAC1C,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;QAClC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,wBAAwB;QAC3C,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEf,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,EAAG,CAAC;YACjC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAE1C,0EAA0E;YAC1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBAAE,SAAS;gBAE7B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEhC,oDAAoD;gBACpD,MAAM,oBAAoB,GACxB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;oBACjE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAElE,MAAM,kBAAkB,GACtB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;oBAClE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEnE,MAAM,oBAAoB,GAAG,CAAC,CAC5B,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;oBAC/C,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAC9C,CAAC;gBAEF,MAAM,kBAAkB,GAAG,CAAC,CAC1B,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC;oBAChD,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC,CAC/C,CAAC;gBAEF,IACE,CAAC,oBAAoB,IAAI,kBAAkB,CAAC;oBAC5C,CAAC,kBAAkB,IAAI,oBAAoB,CAAC,EAC5C;oBACA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACf,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACf;aACF;SACF;QAED,OAAO,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC5C,CAAC;CACF;AAjgBD,kDAigBC;;;;;;;;;;;;;;;ACjhBD,4GAAsD;AACtD,4GAAsD;AACtD,kHAA0D;AAC1D,+GAAwD;AACxD,qHAAiE;AACjE,kHAA0D;AAE1D,kHAA0D;AAC1D,uIAAwE;AACxE,wHAA8D;AAC9D,+GAAwD;AACxD,kHAA0D;AAC1D,2HAAgE;AAChE,+GAA6D;AAC7D,4GAAsD;AACtD,oIAAsE;AACtE,+GAAwD;AACxD,kHAA0D;AAE7C,oBAAY,GAAG;IAC1B,CAAC,EAAE,qBAAS;IACZ,CAAC,EAAE,qBAAS;IACZ,CAAC,EAAE,yBAAW;IACd,CAAC,EAAE,uBAAU;IACb,CAAC,EAAE,gCAAiB;IACpB,CAAC,EAAE,yBAAW;IACd,CAAC,EAAE,qBAAS;IACZ,CAAC,EAAE,yBAAW;IACd,CAAC,EAAE,uCAAkB;IACrB,EAAE,EAAE,6BAAa;IACjB,EAAE,EAAE,uBAAU;IACd,EAAE,EAAE,yBAAW;IACf,EAAE,EAAE,+BAAc;IAClB,EAAE,EAAE,4BAAe;IACnB,EAAE,EAAE,qCAAiB;IACrB,EAAE,EAAE,uBAAU;IACd,EAAE,EAAE,yBAAW;CAChB,CAAC;AAeF,MAAa,uBAAuB;IAClC;;;;OAIG;IACH,MAAM,CAAC,aAAa,CAAC,KAAa;QAChC,OAAO;YACL,YAAY,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,YAAY,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,WAAW,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;YAC9C,QAAQ,EAAE,EAAE,GAAG,CAAC,GAAG,KAAK;YACxB,SAAS,EAAE,EAAE,GAAG,CAAC,GAAG,KAAK;YACzB,kBAAkB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;YACrC,qBAAqB,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACzB,aAAa,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,eAAe,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;SAC3D,CAAC;IACJ,CAAC;CACF;AApBD,0DAoBC;;;;;;;;;;;;;;;ACvED,6EAAwC;AAUxC,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC7B,gEAAyC;IACzC,8DAAuC;IACvC,wDAAiC;IACjC,wEAAiD;IACjD,4DAAqC;IACrC,gEAAyC;IACzC,0EAAmD;AACrD,CAAC,EARW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAQ9B;AAED,MAAa,cAAc;IAIzB,YAAY,IAAU,EAAE,sBAA+B,KAAK;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,mBAAmB;YACtB,mBAAmB,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAC3E,CAAC;IAED;;OAEG;IACH,yBAAyB,CACvB,UAAuB,EACvB,MAAuB;QAEvB,6BAA6B;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,OAAO;YAAE,OAAO,UAAU,CAAC;QAE3C,2BAA2B;QAC3B,MAAM,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAClD,UAAU,EACV,MAAM,CAAC,YAAY,CACpB,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,OAAO;YAAE,OAAO,cAAc,CAAC;QAEnD,4BAA4B;QAC5B,MAAM,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QACnE,IAAI,CAAC,kBAAkB,CAAC,OAAO;YAAE,OAAO,kBAAkB,CAAC;QAE3D,2BAA2B;QAC3B,MAAM,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,iBAAiB,CAAC,OAAO;YAAE,OAAO,iBAAiB,CAAC;QAEzD,mCAAmC;QACnC,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,OAAO;YAAE,OAAO,YAAY,CAAC;QAE/C,yDAAyD;QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,OAAO;YAAE,OAAO,UAAU,CAAC;QAE3C,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,sBAAsB,CACpB,UAAuB,EACvB,iBAAyB;QAEzB,6BAA6B;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,OAAO;YAAE,OAAO,UAAU,CAAC;QAE3C,qCAAqC;QACrC,MAAM,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAClD,UAAU,EACV,iBAAiB,CAClB,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC3B,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,uBAAuB,iBAAiB,eAAe,UAAU,CAAC,MAAM,EAAE;gBACxF,SAAS,EAAE,mBAAmB,CAAC,uBAAuB;aACvD,CAAC;SACH;QAED,mCAAmC;QACnC,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,OAAO;YAAE,OAAO,YAAY,CAAC;QAE/C,kDAAkD;QAClD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,CAAC,OAAO;YAAE,OAAO,aAAa,CAAC;QAEjD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,0BAA0B,CAAC,UAAuB;QAChD,6BAA6B;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,OAAO;YAAE,OAAO,UAAU,CAAC;QAE3C,sCAAsC;QACtC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,4CAA4C,UAAU,CAAC,MAAM,EAAE;gBAC7E,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QAED,4CAA4C;QAC5C,MAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,YAAY,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ,EAAE;YAC3C,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,gDAAgD;gBAC9D,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QAED,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,gBAAgB,CAAC,UAAuB;QACtC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1C,MAAM,YAAY,GAAG,yBAAyB,CAAC;YAC/C,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,gBAAgB;aAChD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,wBAAwB,CACtB,UAAuB,EACvB,YAAoB;QAEpB,IAAI,UAAU,CAAC,MAAM,GAAG,YAAY,EAAE;YACpC,MAAM,YAAY,GAAG,0BAA0B,YAAY,SAAS,UAAU,CAAC,MAAM,EAAE,CAAC;YACxF,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,sBAAsB,CAAC,UAAuB;QAC5C,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,YAAY,GAAG,kCAAkC,CAAC;YACxD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,iBAAiB;aACjD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,wBAAwB,CACtB,UAAuB,EACvB,WAAmB;QAEnB,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC,yCAAyC;SAC1F;QAED,IAAI,QAAQ,CAAC,QAAQ,GAAG,WAAW,EAAE;YACnC,MAAM,YAAY,GAAG,0CAA0C,QAAQ,CAAC,QAAQ,aAAa,WAAW,EAAE,CAAC;YAC3G,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,cAAc;aAC9C,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,UAAuB;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBACxB,IACE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EACf;oBACA,MAAM,YAAY,GAAG,8CAA8C,CAAC,4BAA4B,CAAC,EAAE,CAAC;oBACpG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;oBACtC,OAAO;wBACL,OAAO,EAAE,KAAK;wBACd,YAAY;wBACZ,SAAS,EAAE,mBAAmB,CAAC,sBAAsB;qBACtD,CAAC;iBACH;aACF;SACF;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,uBAAuB,CAAC,UAAuB;QAC7C,MAAM,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,YAAY,GAAG,kDAAkD,CAAC;YACxE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,sBAAsB,CAAC,UAAuB;QAC5C,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ,CAAC,CAAC;QACzE,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,YAAY,GAAG,iCAAiC,CAAC;YACvD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,uBAAuB;aACvD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,UAAuB;QAC1C,MAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM,CACxC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAClD,CAAC;QAEF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,MAAM,YAAY,GAAG,SAAS,gBAAgB,CAAC,MAAM,oBAAoB,CAAC;YAC1E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,yBAAyB,CACvB,UAAuB,EACvB,aAAyB;QAEzB,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CACvC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAClC,CAAC;QAEF,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,MAAM,YAAY,GAAG,gCAAgC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,wBAAwB,CAAC,UAAuB;QAC9C,8CAA8C;QAC9C,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,kBAAkB,GAAG,UAAU,CAAC,MAAM,CAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CACtC,CAAC;QAEF,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,YAAY,GAAG,SAAS,kBAAkB,CAAC,MAAM,yCAAyC,OAAO,EAAE,CAAC;YAC1G,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QAED,gDAAgD;QAChD,MAAM,iBAAiB,GAAG,UAAU,CAAC,MAAM,CACzC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAClD,CAAC;QAEF,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,YAAY,GAAG,SAAS,iBAAiB,CAAC,MAAM,qCAAqC,CAAC;YAC5F,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,kBAAkB;aAClD,CAAC;SACH;QAED,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,kBAAkB,CAAC,OAAe;QACxC,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC,oBAAoB,OAAO,EAAE,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAChC;SACF;IACH,CAAC;IAED;;OAEG;IACH,0BAA0B,CACxB,UAAuB,EACvB,MAAuB,EACvB,OAAwC,SAAS;QAEjD,MAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,SAAS,UAAU,CAAC,MAAM,aAAa,CAAC,CAAC;QAExE,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,CAAC,IAAI,CAAC,2BAA2B,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;YAC/D,OAAO,CAAC,IAAI,CAAC,2BAA2B,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;SAChE;QAED,MAAM,MAAM,GACV,IAAI,KAAK,SAAS;YAChB,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,UAAU,EAAE,MAAM,CAAC;YACpD,CAAC,CAAC,IAAI,KAAK,MAAM;gBACf,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,CAAC,CAAC;gBAC5C,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;QAEpD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,sBAAsB,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;SAC3D;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACnC;QAED,OAAO;YACL,GAAG,MAAM;YACT,OAAO;SACR,CAAC;IACJ,CAAC;CACF;AA1XD,wCA0XC;;;;;;;;;;;;;;;AC/YD,mEAA+B;AAC/B,6EAA8C;AAC9C,yFAA2C;AAG3C,sGAAoE;AACpE,wHAA8D;AAG9D,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,iDAAS;IACT,iDAAS;IACT,+CAAQ;AACV,CAAC,EAJW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAInB;AAeD,MAAa,mBAAmB;IAK9B,YAAY,CAAS,EAAE,CAAS,EAAE,KAAgB;QAChD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AAVD,kDAUC;AAED,MAAa,SAAS;IAepB,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,SAAiB;QAgBzE,UAAK,GAAG,KAAK,IAA+B,EAAE;YAC5C,iEAAiE;YACjE,iFAAiF;YAEjF,6CAA6C;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,gGAAgG;YAChG,IAAI,QAAQ,GAAG,GAAG,EAAE;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC;gBACjB,IAAI,KAAK,GAAG,GAAG,CAAC;gBAChB,OAAO,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;YAChD,CAAC,CAAC;YAEF,IAAI,QAAQ,GAAG,CAAC,CAAC;YAEjB,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE;gBACnB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACzB,IAAI,EAAE,GAAG,QAAQ,IAAI,EAAE,GAAG,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,OAAO;oBACL,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;oBACzD,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;iBACnE,CAAC;aACH;iBAAM;gBACL,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACzB,IAAI,EAAE,GAAG,QAAQ,IAAI,EAAE,GAAG,QAAQ;oBAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,OAAO;oBACL,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;oBACzD,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;iBACnE,CAAC;aACH;QACH,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC3C,OAAO,CACL,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CACzE,CAAC;QACJ,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAChD,OAAO,CACL,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC;gBACd,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;gBACvB,CAAC,IAAI,IAAI,CAAC,CAAC;gBACX,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBACtB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;oBACV,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACnB,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC;oBACf,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3B,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,GAAW,EAAE;YAClB,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAgB,EAAW,EAAE;YACvC,OAAO,CACL,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;gBAC7B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;gBAC9B,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;gBAC7B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAC/B,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,UAA+B,EAAE,EAAE;YAChD,IACE,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;gBAC3B,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAC9B;gBACA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;YACD,IACE,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gBAChC,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAC9B;gBACA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;YACD,IACE,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gBAChC,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAC9B;gBACA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;YACD,IACE,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;gBAC3B,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAC9B;gBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;QACH,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAA6B,EAAE;YAChD,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;aAC3C;YACD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAC3C;YACD,MAAM,GAAG,MAAM,CAAC,MAAM,CACpB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACpB,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACtD,CACJ,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC;QAtIA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,eAAQ,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;CA0HF;AAvJD,8BAuJC;AAED,MAAa,YAAY;IAGvB;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;CACF;AAND,oCAMC;AAED,MAAa,kBAAkB;IAI7B,YAAY,IAAU;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,2CAAoB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,yBAAyB,CAC7B,IAAU,EACV,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,MAAuB,EACvB,QAAqD;QAErD,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QACxC,IAAI,gBAAkC,CAAC;QACvC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;QAEjE,GAAG;YACD,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,UAAU,CAAC,cAAc,CAC5B,wBAAwB,QAAQ,EAAE,EAClC,QAAQ,GAAG,GAAG,CACf,CAAC;YAEF,MAAM,IAAI,CAAC,wBAAwB,CACjC,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,KAAK,EACL,MAAM,EACN,QAAQ,CACT,CAAC;YAEF,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,yBAAyB,CACzD,YAAY,CAAC,UAAU,EACvB,MAAM,CACP,CAAC;YAEF,6BAA6B;YAC7B,IAAI,CAAC,UAAU,CAAC,qBAAqB,CACnC,YAAY,CAAC,UAAU,EACvB,QAAQ,GAAG,CAAC,EACZ,SAAS,GAAG,CAAC,EACb,YAAY,EACZ,GAAG,CACJ,CAAC;YAEF,6DAA6D;SAC9D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE;QAEpC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QAC7D,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEpD,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;QAE3D,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,OAAO,YAAY,CAAC,UAAU,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,IAAqB;QAChD,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QACxC,IAAI,gBAAkC,CAAC;QACvC,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;QACrC,MAAM,YAAY,GAAG,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC;QACxD,MAAM,SAAS,GACb,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;YAChC,CAAC,CAAC,IAAI,CAAC,SAAS;YAChB,CAAC,CAAC,YAAY;gBACZ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAI,IAAI,CAAC,SAAoB,CAAC,CAAC;gBAC1D,CAAC,CAAC,GAAG,CAAC,CAAC,qCAAqC;QAClD,MAAM,SAAS,GACb,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;YAChC,CAAC,CAAC,IAAI,CAAC,SAAS;YAChB,CAAC,CAAC,YAAY;gBACZ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAI,IAAI,CAAC,SAAoB,CAAC,CAAC;gBAC1D,CAAC,CAAC,GAAG,CAAC,CAAC,0BAA0B;QAEvC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC;QAE9D,GAAG;YACD,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,UAAU,CAAC,cAAc,CAC5B,6BAA6B,QAAQ,EAAE,EACvC,QAAQ,GAAG,GAAG,CACf,CAAC;YAEF,MAAM,IAAI,CAAC,qBAAqB,CAC9B,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,SAAS,EACT,SAAS,CACV,CAAC;YAEF,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CACtD,YAAY,CAAC,UAAU,EACvB,QAAQ,CACT,CAAC;YAEF,6BAA6B;YAC7B,IAAI,CAAC,UAAU,CAAC,qBAAqB,CACnC,YAAY,CAAC,UAAU,EACvB,QAAQ,GAAG,CAAC,EACZ,SAAS,GAAG,CAAC,EACb,iBAAiB,EACjB,GAAG,CACJ,CAAC;YAEF,6DAA6D;SAC9D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE;QAEpC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QAChE,OAAO,YAAY,CAAC,UAAU,CAAC;IACjC,CAAC;IAED,0BAA0B,CACxB,SAAiB,CAAC,EAClB,QAAgB,CAAC;QAEjB,MAAM,UAAU,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;QACjE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,eAAQ,CAAC,QAAQ,CAAC;QAEvC,+BAA+B;QAC/B,MAAM,gBAAgB,GACpB,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC7B,MAAM,IAAI,KAAK,CACb,+BAA+B,gBAAgB,CAAC,YAAY,EAAE,CAC/D,CAAC;SACH;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,KAAK,CAAC,wBAAwB,CACpC,IAAU,EACV,YAA0B,EAC1B,KAAa,EACb,KAAa,EACb,KAAa,EACb,MAAuB,EACvB,QAAqD;QAErD,MAAM,EACJ,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,kBAAkB,EAClB,qBAAqB,EACrB,eAAe,GAChB,GAAG,MAAM,CAAC;QAEX,YAAY,CAAC,UAAU,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;QAEvE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,qBAAqB,CACnC,YAAY,CAAC,UAAU,EACvB,KAAK,GAAG,CAAC,EACT,KAAK,GAAG,CAAC,EACT,WAAW,CACZ,CAAC;QAEF,uCAAuC;QACvC,OAAO,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,EAAE;YAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,YAAY,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAClD,YAAY,CAAC,UAAU,EACvB,kBAAkB,CAAC,CAAC,CAAC,CACtB,CAAC;gBAEF,wCAAwC;gBACxC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CACnC,YAAY,CAAC,UAAU,EACvB,KAAK,GAAG,CAAC,EACT,KAAK,GAAG,CAAC,EACT,WAAW,EACX,GAAG,GAAG,CAAC,CAAC,GAAG,kBAAkB,CAAC,MAAM,CAAC,GAAG,GAAG,CAC5C,CAAC;aACH;SACF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;gBAClD,IAAI,QAAQ,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC;gBACpE,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,QAAQ,EAAE;oBAC/B,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACtD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CACvB,CAAC;oBACF,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACtD,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,CAAC,CAC1C,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;QAC3D,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAC5C,YAAY,CAAC,UAAU,EACvB,KAAK,EACL,KAAK,EACL,qBAAqB,CACtB,CAAC;QAEF,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEpD,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;QAC5D,6BAA6B;QAC7B,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE/D,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,EAAE;YACV,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,KAAK,CAAC;QAC5B,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;QACnC,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI;gBAC9D,eAAQ,CAAC,IAAI,CAAC;YAChB,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;gBACnE,KAAK,CAAC;SACT;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QAC7D,MAAM,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAEvE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACzD,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QAC7D,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACnD,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SAC1C;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CACjC,YAA0B,EAC1B,KAAa,EACb,KAAa,EACb,SAAiB,EACjB,YAAoB,GAAG,EACvB,YAAoB,GAAG;QAEvB,MAAM,WAAW,GAAG,GAAG,CAAC;QACxB,YAAY,CAAC,UAAU,GAAG;YACxB,IAAI,SAAS,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;SAC/D,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,YAAY,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAClD,YAAY,CAAC,UAAU,EACvB,IAAI,CACL,CAAC;SACH;QAED,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAE5D,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC7C;QAED,IAAI,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,QAAQ,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,eAAQ,CAAC,IAAI,CAAC;SACjD;QAED,MAAM,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC5E,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACjD,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAEO,KAAK,CAAC,eAAe,CAC3B,UAA4B,EAC5B,IAAY;QAEZ,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;YAChC,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;gBACjE,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;gBACvD,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;aACzD;SACF;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,KAAK,CAAC,cAAc,CAC1B,SAAoB,EACpB,IAAY;QAEZ,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;YACxB,OAAO,MAAM,SAAS,CAAC,KAAK,EAAE,CAAC;SAChC;aAAM;YACL,OAAO,CAAC,SAAS,CAAC,CAAC;SACpB;IACH,CAAC;IAEO,YAAY,CAClB,UAA4B,EAC5B,QAAgB,EAChB,SAAiB;QAEjB,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE;YACrC,MAAM,WAAW,GAAG,CAClB,SAA8C,EACrC,EAAE;gBACX,QAAQ,SAAS,EAAE;oBACjB,KAAK,MAAM;wBACT,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC5D,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gCACtC,IAAI,KAAK,KAAK,SAAS;oCAAE,OAAO,KAAK,CAAC;gCACtC,OAAO,CACL,KAAK,CAAC,CAAC,IAAI,CAAC;oCACZ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CACjC,CAAC;4BACJ,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,OAAO;gCAAE,OAAO,IAAI,CAAC;yBAC3B;wBACD,OAAO,KAAK,CAAC;oBACf,KAAK,OAAO;wBACV,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC5D,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gCACtC,IAAI,KAAK,KAAK,SAAS;oCAAE,OAAO,KAAK,CAAC;gCACtC,OAAO,CACL,KAAK,CAAC,CAAC,IAAI,CAAC;oCACZ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,QAAQ;oCAClB,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CACrC,CAAC;4BACJ,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,OAAO;gCAAE,OAAO,IAAI,CAAC;yBAC3B;wBACD,OAAO,KAAK,CAAC;oBACf,KAAK,KAAK;wBACR,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC5D,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gCACtC,IAAI,KAAK,KAAK,SAAS;oCAAE,OAAO,KAAK,CAAC;gCACtC,OAAO,CACL,KAAK,CAAC,CAAC,IAAI,CAAC;oCACZ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CACjC,CAAC;4BACJ,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,OAAO;gCAAE,OAAO,IAAI,CAAC;yBAC3B;wBACD,OAAO,KAAK,CAAC;oBACf,KAAK,QAAQ;wBACX,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC5D,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gCACtC,IAAI,KAAK,KAAK,SAAS;oCAAE,OAAO,KAAK,CAAC;gCACtC,OAAO,CACL,KAAK,CAAC,CAAC,IAAI,CAAC;oCACZ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oCACrB,KAAK,CAAC,CAAC,GAAG,SAAS;oCACnB,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CACrC,CAAC;4BACJ,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,OAAO;gCAAE,OAAO,IAAI,CAAC;yBAC3B;wBACD,OAAO,KAAK,CAAC;oBACf;wBACE,OAAO,KAAK,CAAC;iBAChB;YACH,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG;gBAChB,WAAW,CAAC,MAAM,CAAC;gBACnB,WAAW,CAAC,OAAO,CAAC;gBACpB,WAAW,CAAC,KAAK,CAAC;gBAClB,WAAW,CAAC,QAAQ,CAAC;aACtB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAEzB,OAAO,SAAS,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CACrB,UAA4B,EAC5B,CAAS,EACT,CAAS,EACT,OAAe,GAAG;QAElB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtD,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;gBACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;aACvD;SACF;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAC7B,YAA0B,EAC1B,KAAgB,EAChB,SAAkB;QAElB,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;YACzC,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;aAC5D;YACD,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,kDAAkD;YAClD,MAAM,SAAS,GACb,SAAS,KAAK,SAAS;gBACrB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,MAAM,SAAS,GAAG,IAAI,CAAC;YAEvB,OAAO,WAAW,GAAG,SAAS,IAAI,KAAK,GAAG,SAAS,EAAE;gBACnD,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,KAAK,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE;oBACvC,IACE,CAAC,KAAK,IAAI;wBACV,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBAC3B,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EACjC;wBACA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBAEpE,IAAI,CAAC,WAAW,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC/D,CAAC,CAAC,WAAW,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBAE/D,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACjB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClB,WAAW,EAAE,CAAC;wBACd,IAAI,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,EAAE;4BAC5B,UAAU,GAAG,IAAI,CAAC;4BAClB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;yBACrD;wBACD,MAAM;qBACP;iBACF;gBACD,KAAK,EAAE,CAAC;aACT;YAED,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;SAC3D;QAED,2BAA2B;QAC3B,KAAK,MAAM,SAAS,IAAI,YAAY,CAAC,UAAU,EAAE;YAC/C,IAAI,SAAS,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtC,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACtD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CACvB,CAAC;aACH;SACF;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CACjC,YAA0B,EAC1B,KAAgB,EAChB,SAAiB,EACjB,YAAoB,GAAG;QAEvB,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QAEvB,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,SAAS,EAAE;YAC1D,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,kDAAkD;YAClD,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;YACxD,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,MAAM,SAAS,GAAG,IAAI,CAAC;YAEvB,OACE,WAAW,GAAG,SAAS;gBACvB,KAAK,GAAG,SAAS;gBACjB,SAAS,CAAC,MAAM,GAAG,SAAS,EAC5B;gBACA,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,IAAI,CAAC,KAAK;oBAAE,MAAM;gBAElB,KAAK,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE;oBACvC,IACE,CAAC,KAAK,IAAI;wBACV,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBAC3B,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EACjC;wBACA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBACpE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACjB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClB,WAAW,EAAE,CAAC;wBACd,MAAM;qBACP;iBACF;gBACD,KAAK,EAAE,CAAC;aACT;SACF;QAED,2BAA2B;QAC3B,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACtD,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAChD,CAAC;QAEF,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;IACH,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAC9B,YAA0B,EAC1B,SAAkB;QAElB,+CAA+C;QAC/C,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO;SACR;QAED,IAAI,cAAc,GAChB,SAAS,KAAK,SAAS;YACrB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,IAAI,CAAC,KAAK,CACR,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAC9D,CAAC;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvC,6EAA6E;YAC7E,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxC,MAAM;aACP;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CACxB,eAAM,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAC/C,CAAC;YACF,IAAI,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAE9C,qCAAqC;YACrC,IAAI,CAAC,IAAI,EAAE;gBACT,SAAS;aACV;YAED,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,MAAM,SAAS,GAAG,EAAE,CAAC;YAErB,IAAI,qBAAqB,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACxD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CACzD,CAAC;YAEF,OAAO,CAAC,UAAU,IAAI,KAAK,GAAG,SAAS,EAAE;gBACvC,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,IAAI,CAAC,KAAK,EAAE;oBACV,MAAM,CAAC,sCAAsC;iBAC9C;gBAED,KAAK,MAAM,CAAC,IAAI,qBAAqB,EAAE;oBACrC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;wBACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBAEpE,IAAI,CAAC,WAAW,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC/D,CAAC,CAAC,WAAW,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBAE/D,UAAU,GAAG,IAAI,CAAC;wBAClB,MAAM;qBACP;iBACF;gBACD,KAAK,EAAE,CAAC;aACT;SACF;IACH,CAAC;IAEO,KAAK,CAAC,YAAY,CACxB,YAA0B,EAC1B,YAAoB,GAAG;QAEvB,+CAA+C;QAC/C,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO;SACR;QAED,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAC7B,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAC9D,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvC,6EAA6E;YAC7E,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxC,MAAM;aACP;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CACxB,eAAM,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAC/C,CAAC;YACF,IAAI,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAE9C,qCAAqC;YACrC,IAAI,CAAC,IAAI,EAAE;gBACT,SAAS;aACV;YAED,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,MAAM,SAAS,GAAG,GAAG,CAAC;YAEtB,IAAI,qBAAqB,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACxD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CACzD,CAAC;YAEF,OAAO,CAAC,UAAU,IAAI,KAAK,GAAG,SAAS,EAAE;gBACvC,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,IAAI,CAAC,KAAK,EAAE;oBACV,MAAM,CAAC,sCAAsC;iBAC9C;gBAED,KAAK,MAAM,CAAC,IAAI,qBAAqB,EAAE;oBACrC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;wBACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBACpE,UAAU,GAAG,IAAI,CAAC;wBAClB,MAAM;qBACP;iBACF;gBACD,KAAK,EAAE,CAAC;aACT;SACF;IACH,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,YAA0B,EAAE,IAAU;QAC/D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,EAAE;YAClE,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,MAAM,eAAe,GAAG,CAAC,CAAC;QAC1B,MAAM,cAAc,GAAG,CAAC,CAAC;QACzB,MAAM,eAAe,GAAG,CAAC,CAAC;QAE1B,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,eAAe,EAAE,WAAW,EAAE,EAAE;YACtE,IAAI,KAAK,GAAG,IAAI,SAAS,CACvB,WAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,EACvD,IAAI,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,EAC5B,cAAc,EACd,eAAe,EACf,OAAO,CACR,CAAC;YACF,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,UAAU,CAAC;YACjC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YAEzB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC3D,WAAW,GAAG,IAAI,CAAC;gBACnB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,KAAK,CAAC,WAAW,CAAC,IAAI,CACpB,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,eAAe,EAAE,IAAI,CAAC,CACtE,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,mBAAmB,CACrB,KAAK,CAAC,CAAC,GAAG,CAAC,EACX,KAAK,CAAC,CAAC,GAAG,eAAe,EACzB,KAAK,CACN,CACF,CAAC;gBAEF,KAAK,CAAC,WAAW,CACf,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,eAAe,EAAE,IAAI,CAAC,CACtE,CAAC;gBACF,IAAI,CAAC,WAAW,CACd,IAAI,mBAAmB,CACrB,KAAK,CAAC,CAAC,GAAG,CAAC,EACX,KAAK,CAAC,CAAC,GAAG,eAAe,EACzB,KAAK,CACN,CACF,CAAC;gBACF,MAAM;aACP;SACF;QAED,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;SAC9B;IACH,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAC9B,YAA0B,EAC1B,KAAgB;QAEhB,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEnB,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEhB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACpB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAC7D,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;SACF;IACH,CAAC;IAEO,KAAK,CAAC,eAAe,CAAC,YAA0B;QACtD,IAAI,eAAe,GAAG,KAAK,CAAC;QAC5B,KAAK,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE;YACvC,IAAI,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,OAAO,EAAE;gBAC/B,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;oBACzD,CAAC,CAAC,IAAI,GAAG,eAAQ,CAAC,QAAQ,CAAC;iBAC5B,CAAC;;;mBAGC;aACJ;SACF;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,qDAAqD;IACrD,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF;AA5vBD,gDA4vBC;;;;;;;;;;;;;;;ACr8BD,kHAI8B;AAC9B,6EAAwC;AACxC,yFAA2C;AAC3C,mEAA+B;AAU/B,gDAAgD;AAChD,MAAM,kBAAkB,GAAkC;IACxD,kBAAkB;IAClB,gBAAgB,EAAE,eAAQ,CAAC,KAAK;IAChC,gBAAgB,EAAE,eAAQ,CAAC,IAAI;IAC/B,gBAAgB,EAAE,eAAQ,CAAC,UAAU;IACrC,kBAAkB,EAAE,eAAQ,CAAC,QAAQ;IAErC,gBAAgB;IAChB,kBAAkB,EAAE,eAAQ,CAAC,QAAQ;IACrC,kBAAkB,EAAE,eAAQ,CAAC,IAAI;IACjC,kBAAkB,EAAE,eAAQ,CAAC,QAAQ;IACrC,kBAAkB,EAAE,eAAQ,CAAC,MAAM;IACnC,kBAAkB,EAAE,eAAQ,CAAC,OAAO;IAEpC,+BAA+B;IAC/B,iBAAiB,EAAE,eAAQ,CAAC,MAAM;IAClC,cAAc,EAAE,eAAQ,CAAC,UAAU;IACnC,oBAAoB,EAAE,eAAQ,CAAC,IAAI;IACnC,oBAAoB,EAAE,eAAQ,CAAC,OAAO;IAEtC,oBAAoB;IACpB,kBAAkB,EAAE,eAAQ,CAAC,KAAK;IAClC,kBAAkB,EAAE,eAAQ,CAAC,IAAI;IACjC,kBAAkB,EAAE,eAAQ,CAAC,SAAS;IACtC,kBAAkB,EAAE,eAAQ,CAAC,MAAM;IAEnC,4BAA4B;IAC5B,oBAAoB,EAAE,eAAQ,CAAC,QAAQ;IACvC,kBAAkB,EAAE,eAAQ,CAAC,aAAa;IAE1C,cAAc;IACd,kBAAkB,EAAE,eAAQ,CAAC,OAAO;IACpC,iBAAiB,EAAE,eAAQ,CAAC,QAAQ;IACpC,mBAAmB,EAAE,eAAQ,CAAC,QAAQ;IACtC,mBAAmB,EAAE,eAAQ,CAAC,MAAM;IAEpC,oBAAoB;IACpB,oBAAoB,EAAE,eAAQ,CAAC,QAAQ;IACvC,oBAAoB,EAAE,eAAQ,CAAC,UAAU;IAEzC,mBAAmB;IACnB,oBAAoB,EAAE,eAAQ,CAAC,OAAO,EAAE,gCAAgC;CACzE,CAAC;AAEF,MAAa,qBAAqB;IACzB,KAAK,CAAC,yBAAyB,CACpC,QAAgB,EAChB,IAAU,EACV,KAAa,EACb,aAAsB,KAAK;QAE3B,wDAAwD;QACxD,+CAA+C;QAC/C,sCAAsC;QACtC,6CAA6C;QAE7C,IAAI;YACF,+CAA+C;YAC/C,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrD,cAAc;YACd,oEAAoE;YACpE,IAAI;YAEJ,+CAA+C;YAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAClD,sEAAsE;YAEtE,gEAAgE;YAChE,MAAM,aAAa,GAAG,IAAI,CAAC,8BAA8B,CACvD,UAAU,EACV,UAAU,CACX,CAAC;YACF,kEAAkE;YAElE,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACrD,OAAO,EAAE,CAAC;aACX;YAED,+DAA+D;YAC/D,MAAM,YAAY,GAAG,IAAI,iCAAY,EAAE,CAAC;YACxC,YAAY,CAAC,UAAU,GAAG,aAAa,CAAC;YAExC,MAAM,IAAI,CAAC,4BAA4B,CAAC,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CACT,iCAAiC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,CAClE,CAAC;YAEF,2DAA2D;YAC3D,OAAO,YAAY,CAAC,UAAU,CAAC;SAChC;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC7D,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAEO,aAAa,CAAC,QAAgB;QACpC,mDAAmD;QACnD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;YAEhC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;gBAClB,cAAc;gBACd,oEAAoE;gBACpE,IAAI;gBACJ,IAAI;oBACF,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAChD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBAC3B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAEpC,IAAI,CAAC,GAAG,EAAE;wBACR,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;qBACjD;oBAED,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3B,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;oBACpE,kBAAkB;oBAClB,+DAA+D;oBAC/D,IAAI;oBACJ,OAAO,CAAC,SAAS,CAAC,CAAC;iBACpB;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;oBACpD,MAAM,CAAC,KAAK,CAAC,CAAC;iBACf;YACH,CAAC,CAAC;YAEF,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE;gBACtB,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,EAAE,CAAC,CAAC;gBAClD,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,QAAQ,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC;YAEF,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;YACrB,8CAA8C;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,cAAc,CAAC,SAAoB;QACzC,kDAAkD;QAClD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;QAC1C,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,UAAU,GAAgB,EAAE,CAAC;QAEnC,6EAA6E;QAE7E,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,MAAM,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;gBAC5B,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClB,SAAS;iBACV;gBAED,MAAM,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;gBAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gBAEnC,IAAI,KAAK,KAAK,CAAC,EAAE;oBACf,iBAAiB,EAAE,CAAC;oBACpB,SAAS;iBACV;gBAED,eAAe,EAAE,CAAC;gBAClB,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3B,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gBAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;gBAEtC,cAAc;gBACd,yEAAyE;gBACzE,IAAI;gBAEJ,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,OACE,CAAC,GAAG,KAAK,GAAG,KAAK;oBACjB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAC/D;oBACA,KAAK,EAAE,CAAC;iBACT;gBAED,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,OAAO,CAAC,GAAG,KAAK,GAAG,MAAM,EAAE;oBACzB,IAAI,UAAU,GAAG,IAAI,CAAC;oBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC9B,IACE,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACtC,CAAC,IAAI,CAAC,WAAW,CACf,IAAI,EACJ,UAAU,EACV,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAClC,EACD;4BACA,UAAU,GAAG,KAAK,CAAC;4BACnB,MAAM;yBACP;qBACF;oBACD,IAAI,UAAU,EAAE;wBACd,KAAK,EAAE,CAAC;qBACT;yBAAM;wBACL,MAAM;qBACP;iBACF;gBAED,+CAA+C;gBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAC3C;iBACF;gBAED,MAAM,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;gBACtD,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC3B,cAAc;gBACd,iFAAiF;gBACjF,IAAI;aACL;SACF;QAED,iDAAiD;QACjD,gEAAgE;QAChE,4DAA4D;QAC5D,oEAAoE;QAEpE,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,WAAW,CACjB,IAAuB,EACvB,MAAc,EACd,MAAc;QAEd,MAAM,IAAI,GACR,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,8BAA8B,CACpC,UAAuB,EACvB,UAAmB;QAEnB,0DAA0D;QAC1D,iDAAiD;QAEjD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;YAC/D,OAAO,EAAE,CAAC;SACX;QAED,MAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChD,2EAA2E;YAC3E,sDAAsD;YACtD,+CAA+C;YAC/C,0CAA0C;YAE1C,MAAM,SAAS,GAAG,IAAI,8BAAS,CAC7B,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,KAAK,CACX,CAAC;YAEF,IAAI,UAAU,EAAE;gBACd,sDAAsD;gBACtD,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/D,SAAS,CAAC,IAAI,GAAG,YAAY,CAAC;gBAC9B,gEAAgE;aACjE;iBAAM;gBACL,iDAAiD;gBACjD,MAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,QAAQ,EAAE;oBACZ,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;oBAC1B,iEAAiE;iBAClE;qBAAM;oBACL,SAAS,CAAC,IAAI,GAAG,eAAQ,CAAC,OAAO,CAAC;oBAClC,gBAAgB;oBAChB,+DAA+D;oBAC/D,IAAI;iBACL;aACF;YAED,wEAAwE;YACxE,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,6DAA6D;QAC7D,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,wBAAwB,CAAC,KAAa;QAC5C,+BAA+B;QAC/B,QAAQ,KAAK,EAAE;YACb,KAAK,gBAAgB,EAAE,2BAA2B;gBAChD,OAAO,eAAQ,CAAC,QAAQ,CAAC;YAC3B,KAAK,kBAAkB,EAAE,uCAAuC;gBAC9D,OAAO,eAAQ,CAAC,QAAQ,CAAC;YAC3B,KAAK,kBAAkB,EAAE,yBAAyB;gBAChD,OAAO,eAAQ,CAAC,QAAQ,CAAC;YAC3B,KAAK,kBAAkB,EAAE,iBAAiB;gBACxC,OAAO,eAAQ,CAAC,IAAI,CAAC;YACvB;gBACE,OAAO,eAAQ,CAAC,IAAI,CAAC,CAAC,oBAAoB;SAC7C;IACH,CAAC;IAEO,KAAK,CAAC,4BAA4B,CACxC,YAA0B,EAC1B,IAAU,EACV,UAAmB;QAEnB,qDAAqD;QACrD,iDAAiD;QAEjD,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAC/C,OAAO;SACR;QAED,cAAc;QACd,6EAA6E;QAC7E,IAAI;QAEJ,IAAI,UAAU,EAAE;YACd,MAAM,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SACtD;aAAM;YACL,MAAM,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SAC1D;QAED,wDAAwD;IAC1D,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,YAA0B,EAAE,IAAU;QACxE,gDAAgD;QAEhD,2BAA2B;QAC3B,MAAM,cAAc,GAA8B,EAAE,CAAC;QACrD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACpC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,gEAAgE;QAEhE,+BAA+B;QAC/B,IAAI,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CACtC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ,CACpC,CAAC;QAEF,IAAI,CAAC,KAAK,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,cAAc;YACd,kEAAkE;YAClE,IAAI;YACJ,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5D,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,QAAQ,CAAC;YAC/B,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;YACnC,2EAA2E;SAC5E;QAED,uFAAuF;QACvF,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,OAAO,EAAE;gBAC9C,CAAC,CAAC,IAAI,GAAG,eAAQ,CAAC,IAAI,CAAC;gBACvB,iEAAiE;aAClE;QACH,CAAC,CAAC,CAAC;QAEH,6CAA6C;QAC7C,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE1D,8DAA8D;QAC9D,IAAI,KAAK,EAAE;YACT,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,UAAU,GAAG,CAAC,EAAE;gBAClB,gBAAgB;gBAChB,iEAAiE;gBACjE,IAAI;gBACJ,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAC9C,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvC,qDAAqD;aACtD;iBAAM;gBACL,sDAAsD;aACvD;SACF;QAED,sCAAsC;QACtC,IAAI,KAAK,EAAE;YACT,iDAAiD;YACjD,MAAM,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACtD,cAAc;YACd,4FAA4F;YAC5F,IAAI;SACL;QAED,iBAAiB;QACjB,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,mDAAmD;YACnD,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;SAC7C;QAED,gDAAgD;QAChD,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,EAAE;YAC/C,iDAAiD;YACjD,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACnD,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SAC1C;IACH,CAAC;IAEO,KAAK,CAAC,yBAAyB,CACrC,YAA0B,EAC1B,IAAU;QAEV,8CAA8C;QAE9C,2BAA2B;QAC3B,MAAM,cAAc,GAA8B,EAAE,CAAC;QACrD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACpC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,2DAA2D;QAE3D,mDAAmD;QACnD,IAAI,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK,CAAC,CAAC;QAC3E,IAAI,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,CAAC;QAEzE,6DAA6D;QAC7D,2DAA2D;QAE3D,oEAAoE;QACpE,IAAI,CAAC,KAAK,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,qEAAqE;YACrE,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5D,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,KAAK,CAAC;YAC5B,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;YACnC,cAAc;YACd,gGAAgG;YAChG,IAAI;SACL;QAED,kEAAkE;QAClE,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,mEAAmE;YACnE,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5D,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACnE,IAAI,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,OAAO,EAAE;gBAClC,IAAI,CAAC,IAAI,GAAG,eAAQ,CAAC,IAAI,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,cAAc;gBACd,2FAA2F;gBAC3F,IAAI;aACL;iBAAM;gBACL,gBAAgB;gBAChB,qEAAqE;gBACrE,IAAI;gBACJ,IAAI,GAAG,IAAI,CAAC;aACb;SACF;QAED,6CAA6C;QAC7C,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE1D,2DAA2D;QAC3D,IAAI,KAAK,EAAE;YACT,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,UAAU,GAAG,CAAC,EAAE;gBAClB,yEAAyE;gBACzE,0CAA0C;gBAC1C,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAC9C,sBAAsB;gBACtB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvC,kDAAkD;aACnD;iBAAM;gBACL,mDAAmD;aACpD;SACF;QAED,qBAAqB;QACrB,IAAI,KAAK,EAAE;YACT,4CAA4C;YAC5C,MAAM,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YAClD,cAAc;YACd,6FAA6F;YAC7F,IAAI;SACL;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QAED,uBAAuB;QACvB,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,8CAA8C;YAC9C,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAC5C,4CAA4C;SAC7C;QAED,iBAAiB;QACjB,MAAM,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAC/C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,CACtC,CAAC;QACF,uEAAuE;QAEvE,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACvD,kDAAkD;YAClD,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC5C,cAAc;YACd,8FAA8F;YAC9F,IAAI;SACL;QAED,sBAAsB;QACtB,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,EAAE;YAC/C,8CAA8C;YAC9C,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YAEnD,2CAA2C;YAC3C,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YAEzC,mDAAmD;YAEnD,sBAAsB;YACtB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACpC,cAAc;gBACd,gEAAgE;gBAChE,IAAI;YACN,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,2BAA2B,CAAC,UAAuB;QACzD,+CAA+C;QAC/C,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC;YACrC,QAAQ,SAAS,CAAC,IAAI,EAAE;gBACtB,KAAK,eAAQ,CAAC,KAAK;oBACjB,SAAS,CAAC,SAAS,GAAG,gBAAgB,CAAC;oBACvC,MAAM;gBACR,KAAK,eAAQ,CAAC,IAAI;oBAChB,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC5B,MAAM;gBACR,KAAK,eAAQ,CAAC,UAAU,CAAC;gBACzB,KAAK,eAAQ,CAAC,QAAQ;oBACpB,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;oBAC7B,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,SAAS,CAAC,SAAS,GAAG,kBAAkB,CAAC;oBACzC,MAAM;gBACR,KAAK,eAAQ,CAAC,IAAI;oBAChB,SAAS,CAAC,SAAS,GAAG,kBAAkB,CAAC;oBACzC,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,SAAS,CAAC,SAAS,GAAG,kBAAkB,CAAC;oBACzC,MAAM;gBACR,KAAK,eAAQ,CAAC,IAAI,CAAC;gBACnB,KAAK,eAAQ,CAAC,OAAO;oBACnB,SAAS,CAAC,SAAS,GAAG,kBAAkB,CAAC;oBACzC,MAAM;gBACR;oBACE,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC;oBAC9B,MAAM;aACT;YAED,IAAI,QAAQ,KAAK,SAAS,CAAC,SAAS,EAAE;gBACpC,cAAc;gBACd,mFAAmF;gBACnF,IAAI;aACL;SACF;IACH,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAC7B,YAA0B,EAC1B,KAAgB;QAEhB,2DAA2D;QAE3D,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,uEAAuE;YAEvE,4DAA4D;YAC5D,MAAM,aAAa,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;gBACzD,OAAO,CACL,CAAC,KAAK,IAAI;oBACV,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,CACpC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,cAAc;YACd,qEAAqE;YACrE,IAAI;YAEJ,0DAA0D;YAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBAE/D,IAAI,aAAa,EAAE;oBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;oBAEtD,cAAc;oBACd,2FAA2F;oBAC3F,IAAI;oBAEJ,mCAAmC;oBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,wCAAmB,CACrB,eAAe,CAAC,CAAC,EACjB,eAAe,CAAC,CAAC,EACjB,MAAM,CACP,CACF,CAAC;oBACF,MAAM,CAAC,WAAW,CAAC,IAAI,CACrB,IAAI,wCAAmB,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CACpE,CAAC;oBAEF,oBAAoB;oBACpB,IAAI,CAAC,WAAW,CACd,IAAI,wCAAmB,CACrB,eAAe,CAAC,CAAC,EACjB,eAAe,CAAC,CAAC,EACjB,MAAM,CACP,CACF,CAAC;oBACF,MAAM,CAAC,WAAW,CAChB,IAAI,wCAAmB,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CACpE,CAAC;oBAEF,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvB,eAAe,EAAE,CAAC;iBACnB;aACF;YAED,cAAc;YACd,6EAA6E;YAC7E,IAAI;SACL;QAED,cAAc;QACd,kFAAkF;QAClF,IAAI;QAEJ,+DAA+D;QAC/D,MAAM,WAAW,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAChD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAClC,CAAC;QAEF,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,gBAAgB;YAChB,gFAAgF;YAChF,IAAI;YACJ,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBAChC,cAAc;gBACd,oEAAoE;gBACpE,IAAI;gBACJ,mEAAmE;gBACnE,IAAI,CAAC,mBAAmB,CACtB,SAAS,EACT,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAChE,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QAED,cAAc;QACd,gFAAgF;QAChF,IAAI;IACN,CAAC;IAEO,mBAAmB,CACzB,YAAuB,EACvB,cAA2B;QAE3B,0DAA0D;QAC1D,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,eAAe,GAAG,QAAQ,CAAC;QAE/B,KAAK,MAAM,IAAI,IAAI,cAAc,EAAE;YACjC,MAAM,QAAQ,GACZ,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,QAAQ,GAAG,eAAe,EAAE;gBAC9B,eAAe,GAAG,QAAQ,CAAC;gBAC3B,WAAW,GAAG,IAAI,CAAC;aACpB;SACF;QAED,IAAI,WAAW,EAAE;YACf,8CAA8C;YAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAErE,cAAc;YACd,gHAAgH;YAChH,IAAI;YAEJ,YAAY,CAAC,WAAW,CAAC,IAAI,CAC3B,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAC/D,CAAC;YACF,WAAW,CAAC,WAAW,CAAC,IAAI,CAC1B,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAChE,CAAC;SACH;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CACjC,YAA0B,EAC1B,KAAgB;QAEhB,mDAAmD;QACnD,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,8BAA8B;QAE/E,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,QAAQ,EAAE;YACzD,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,cAAc;YACd,sEAAsE;YACtE,IAAI;YAEJ,kCAAkC;YAClC,MAAM,aAAa,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;gBACzD,OAAO,CACL,CAAC,KAAK,IAAI;oBACV,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,CACpC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAC7B,aAAa,CAAC,MAAM,EACpB,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAClC,CAAC;YAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,IAAI,SAAS,CAAC,MAAM,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;gBACtE,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBAE/D,IAAI,aAAa,EAAE;oBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;oBAEtD,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,wCAAmB,CACrB,eAAe,CAAC,CAAC,EACjB,eAAe,CAAC,CAAC,EACjB,MAAM,CACP,CACF,CAAC;oBACF,MAAM,CAAC,WAAW,CAAC,IAAI,CACrB,IAAI,wCAAmB,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CACpE,CAAC;oBAEF,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvB,wEAAwE;iBACzE;aACF;SACF;QAED,2BAA2B;QAC3B,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CACtD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAChC,CAAC;QACF,gBAAgB;QAChB,0EAA0E;QAC1E,IAAI;IACN,CAAC;IAED;;OAEG;IACK,qBAAqB,CAC3B,EAAa,EACb,EAAa;QAKb,wDAAwD;QACxD,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;YAC5C,0BAA0B;YAC1B,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,YAAY,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAC/C,CAAC;gBACF,OAAO;oBACL,SAAS,EAAE,YAAY;oBACvB,eAAe,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE;iBACpD,CAAC;aACH;YACD,0BAA0B;YAC1B,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,YAAY,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAC/C,CAAC;gBACF,OAAO;oBACL,SAAS,EAAE,YAAY;oBACvB,eAAe,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE;iBACpD,CAAC;aACH;SACF;QAED,oDAAoD;QACpD,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;YAC5C,iBAAiB;YACjB,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,YAAY,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAC/C,CAAC;gBACF,OAAO;oBACL,SAAS,EAAE,UAAU;oBACrB,eAAe,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;iBACpD,CAAC;aACH;YACD,iBAAiB;YACjB,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,YAAY,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAC/C,CAAC;gBACF,OAAO;oBACL,SAAS,EAAE,UAAU;oBACrB,eAAe,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;iBACpD,CAAC;aACH;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB,CAAC,YAA0B;QACzD,8DAA8D;QAC9D,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO;SACR;QAED,sBAAsB;QACtB,MAAM,YAAY,GAAG,IAAI,GAAG,EAA0B,CAAC;QAEvD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE;gBACrD,OAAO,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACvB,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAC/C,CAAC;QAEF,mEAAmE;QAEnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,qBAAqB;YACrB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAC1B,eAAM,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAC/C,CAAC;YACF,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAEhD,oDAAoD;YACpD,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnD,MAAM,mBAAmB,GAAG,aAAa,CAAC,MAAM,CAC9C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CACpD,CAAC;YAEF,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,MAAM,MAAM,GACV,mBAAmB,CACjB,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,mBAAmB,CAAC,MAAM,CAAC,CACvD,CAAC;gBACJ,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBAE/D,IAAI,aAAa,EAAE;oBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;oBAEtD,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,wCAAmB,CACrB,eAAe,CAAC,CAAC,EACjB,eAAe,CAAC,CAAC,EACjB,MAAM,CACP,CACF,CAAC;oBACF,MAAM,CAAC,WAAW,CAAC,IAAI,CACrB,IAAI,wCAAmB,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CACpE,CAAC;oBAEF,IAAI,CAAC,WAAW,CACd,IAAI,wCAAmB,CACrB,eAAe,CAAC,CAAC,EACjB,eAAe,CAAC,CAAC,EACjB,MAAM,CACP,CACF,CAAC;oBACF,MAAM,CAAC,WAAW,CAChB,IAAI,wCAAmB,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CACpE,CAAC;oBAEF,UAAU,EAAE,CAAC;oBACb,cAAc;oBACd,gEAAgE;oBAChE,IAAI;iBACL;aACF;SACF;QAED,4DAA4D;IAC9D,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,YAA0B,EAAE,IAAU;QAC/D,4CAA4C;QAE5C,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAChC,CAAC;QACF,MAAM,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAC5C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU,CACtC,CAAC;QAEF,+CAA+C;QAC/C,uDAAuD;QAEvD,IAAI,CAAC,OAAO,IAAI,SAAS,EAAE;YACzB,kDAAkD;YAClD,OAAO;SACR;QAED,IAAI,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAAC,CAAC;QACzE,yDAAyD;QAEzD,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,MAAM,eAAe,GAAG,CAAC,CAAC;QAC1B,MAAM,cAAc,GAAG,CAAC,CAAC;QACzB,MAAM,eAAe,GAAG,CAAC,CAAC;QAE1B,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,eAAe,EAAE,WAAW,EAAE,EAAE;YACtE,MAAM,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;YACvE,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,CAAC;YAE5C,cAAc;YACd,mFAAmF;YACnF,IAAI;YAEJ,IAAI,KAAK,GAAG,IAAI,8BAAS,CACvB,MAAM,EACN,MAAM,EACN,cAAc,EACd,eAAe,EACf,OAAO,CACR,CAAC;YACF,KAAK,CAAC,IAAI,GAAG,eAAQ,CAAC,UAAU,CAAC;YACjC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YAEzB,MAAM,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxE,uEAAuE;YAEvE,IAAI,CAAC,QAAQ,EAAE;gBACb,WAAW,GAAG,IAAI,CAAC;gBACnB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEpC,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,GAAG,eAAe,CAAC;gBAE9C,KAAK,CAAC,WAAW,CAAC,IAAI,CACpB,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,CACxD,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CACzD,CAAC;gBAEF,KAAK,CAAC,WAAW,CACf,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,CACxD,CAAC;gBACF,IAAI,CAAC,WAAW,CACd,IAAI,wCAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CACzD,CAAC;gBAEF,cAAc;gBACd,yEAAyE;gBACzE,IAAI;gBACJ,MAAM;aACP;SACF;QAED,IAAI,CAAC,WAAW,EAAE;YAChB,qEAAqE;SACtE;IACH,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAC9B,YAA0B,EAC1B,KAAgB;QAEhB,yDAAyD;QACzD,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEnB,IAAI,cAAc,GAAG,CAAC,CAAC;QAEvB,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,cAAc,EAAE,CAAC;YAEjB,cAAc;YACd,uFAAuF;YACvF,IAAI;YAEJ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACpB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACtC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE;oBAChC,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC;oBAC7B,sEAAsE;iBACvE;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC9B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtB;aACF;SACF;QAED,cAAc;QACd,sEAAsE;QACtE,IAAI;IACN,CAAC;IAEO,KAAK,CAAC,eAAe,CAAC,YAA0B;QACtD,+CAA+C;QAC/C,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAE1B,KAAK,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE;YACvC,IAAI,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,OAAO,EAAE;gBAC/B,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;oBAC3D,CAAC,CAAC,IAAI,GAAG,eAAQ,CAAC,QAAQ,CAAC;oBAC3B,iBAAiB,EAAE,CAAC;oBACpB,cAAc;oBACd,sFAAsF;oBACtF,IAAI;iBACL;aACF;SACF;QAED,kEAAkE;IACpE,CAAC;IAED,oDAAoD;IAC7C,MAAM,CAAC,aAAa;QACzB,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC;aAC7C,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,IAAI,EAAE,CAAC;aAC7C,IAAI,CAAC,IAAI,CAAC,CAAC;QAEd,OAAO,oCAAoC,KAAK,EAAE,CAAC;IACrD,CAAC;CACF;AA1gCD,sDA0gCC;;;;;;;;;;;;;;;ACtkCD,yFAA4C;AAE5C,gFAA6C;AAc7C;;;;;;;;;GASG;AACH,MAAa,eAAe;IAG1B,YAAY,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,WAAW,CAAC,UAAsB;QACtC,IAAI,UAAU,CAAC,UAAU;YAAE,OAAO;QAElC,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAEvD,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAC/B,IAAI,CAAC,IAAI,EACT,WAAW,EACX,UAAU,CAAC,UAAU,EACrB,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,EAC7D,UAAU,CAAC,WAAW,EACtB,KAAK,EACL,MAAM,EACN,UAAU,CAAC,IAAI,CAChB,CAAC;QAEF,oBAAY,CAAC,qBAAqB,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;YAC7B,QAAQ,EAAE,UAAU,CAAC,UAAU,CAAC,OAAO;SACxC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,4BAA4B,CAAC,UAAsB;QACjD,IAAI,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,EAAE;YACjD,IAAI,CAAC,IAAY,CAAC,aAAa;gBAC7B,UAAU,CAAC,UAAkB,CAAC,MAAM;oBACpC,IAAI,CAAC,IAAY,CAAC,aAAa;oBAChC,MAAM,CAAC;SACV;IACH,CAAC;IAEO,sBAAsB,CAAC,CAAa;QAC1C,IAAI,CAAC,CAAC,CAAC,UAAU;YAAE,OAAO,MAAM,CAAC;QACjC,MAAM,SAAS,GAAY,IAAI,CAAC,IAAY,CAAC,aAAa,IAAI,MAAM,CAAC;QACrE,MAAM,UAAU,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrE,MAAM,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,MAAM,QAAQ,GAAG,MAAM,SAAS,IAAI,UAAU,IAAI,UAAU,EAAE,CAAC;QAC/D,MAAM,SAAS,GACX,CAAS,CAAC,QAAmB;YAC/B,GAAI,CAAC,CAAC,IAAY,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9C,2EAA2E;QAC3E,OAAO,QAAQ,IAAI,SAAS,IAAI,MAAM,CAAC;IACzC,CAAC;IAEO,gBAAgB,CAAC,UAAsB,EAAE,UAAgB;QAC/D,IAAI,UAAU,CAAC,UAAU,EAAE;YACzB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;SACtC;QAED,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,UAAgB;QAC1C,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAC1C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,QAAQ,CAChD,CAAC;QACF,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;QACtC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACpC,IAAI,CAAC,EAAE,GAAG,UAAU,GAAG,KAAK,CAAC;YAC7B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU;YAAE,OAAO;QAEnC,IAAI,UAAU,CAAC,UAAU,EAAE;YACzB,MAAM,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC;YAC1C,MAAM,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC/C,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC;YACrE,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;gBAC7B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpC,IAAI,IAAI,YAAY,mBAAQ,EAAE;4BAC5B,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAgB,CAAC,CAAC;4BACnD,IACE,CAAC,UAAU,CAAC,gBAAgB;gCAC5B,IAAI,KAAK,UAAU,CAAC,UAAU,EAC9B;gCACA,UAAU,CAAC,gBAAgB,GAAG;oCAC5B,CAAC,EAAG,IAAY,CAAC,CAAC;oCAClB,CAAC,EAAG,IAAY,CAAC,CAAC;iCACnB,CAAC;6BACH;yBACF;qBACF;iBACF;aACF;SACF;aAAM;YACL,+DAA+D;YAC/D,KACE,IAAI,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,EACnC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,EAC7D,CAAC,EAAE,EACH;gBACA,KACE,IAAI,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,EACnC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,EAC9D,CAAC,EAAE,EACH;oBACA,MAAM,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACrD,IAAI,IAAI,YAAY,mBAAQ,EAAE;wBAC5B,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAgB,CAAC,CAAC;wBACnD,OAAO;qBACR;iBACF;aACF;SACF;IACH,CAAC;IAEO,eAAe,CAAC,UAAsB,EAAE,QAAkB;QAChE,IAAI,UAAU,CAAC,UAAU,EAAE;YACzB,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;YACrC,QAAgB,CAAC,MAAM,GAAG,IAAI,CAAC;YAChC,0EAA0E;YACzE,QAAgB,CAAC,iBAAiB,GAAG;gBACpC,CAAC,EAAE,UAAU,CAAC,CAAC;gBACf,CAAC,EAAE,UAAU,CAAC,CAAC;aAChB,CAAC;SACH;aAAM;YACL,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;SACxE;IACH,CAAC;CACF;AArJD,0CAqJC;;;;;;;;;;;;;;;AC/KD,MAAa,WAAW;IAetB,YACE,CAAS,EACT,CAAS,EACT,CAAS,EACT,IAA8B,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAC1C,IAAY,CAAC;QAff,MAAC,GAAW,CAAC,CAAC;QAOd,SAAI,GAAY,KAAK,CAAC;QAuBtB,mBAAc,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACxC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,OAAO,IAAI,CAAC;YACZ;AAMkB;YAClB;AAAuB;QACzB,CAAC,CAAC;QA5BA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;CAkBF;AAnDD,kCAmDC;;;;;;;;;;;;;;;ACrDD,gGAA4C;AAG5C,MAAa,QAAQ;;AAArB,4BA4CC;AA3CQ,uBAAc,GAAG,CACtB,IAAU,EACV,CAAS,EACT,CAAS,EACT,MAAc,EACd,KAA+B,EAC/B,QAAgB,EAChB,UAAkB,EAClB,KAAa,EACb,EAAE;IACF,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CACzC,CAAC,EACD,CAAC,EACD,KAAK,EACL,MAAM,EACN,UAAU,CACX,CAAC;IACF,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAErC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC7C,CAAC,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC,EAAE,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AAEK,uBAAc,GAAG,CACtB,CAAS,EACT,CAAS,EACT,KAA+B,EAC/B,MAAc,EACd,UAAkB,EAClB,EAAE;IACF,OAAO,IAAI,yBAAW,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAC1D,CAAC,CAAC;AAEK,uBAAc,GAAG,CAAC,IAAU,EAAE,WAAwB,EAAE,EAAE;IAC/D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtC,CAAC,CAAC;AAEK,0BAAiB,GAAG,CAAC,IAAU,EAAE,WAAwB,EAAE,EAAE;IAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAAC,CAAC;AAC3E,CAAC,CAAC;;;;;;;;;;;;;;;AC9CJ,mEAA0C;AAE1C,uFAAsC;AAEtC,MAAa,eAAgB,SAAQ,mBAAQ;IAc3C,YAAY,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,SAAoB;QAClE,KAAK,EAAE,CAAC;QAqNV,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,qCAAqC;YACrC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBACnB,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,EAC7B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAC3B,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAC3B,CAAC,EACD,CAAC,CACF,CAAC;aACH;YAED,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC1C,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjD,CAAC,CAAC;QA1OA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBAEjB,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;iBACT;gBAED,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;gBAExB,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;wBACtB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,MAAM;iBACT;gBACD,MAAM;YAER,KAAK,YAAY;gBACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBAEjB,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;iBACT;gBACD,MAAM;YAER,KAAK,aAAa;gBAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,0BAA0B;gBAE1B,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;wBACpB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,MAAM;iBACT;gBACD,MAAM;YAER,KAAK,OAAO;gBACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;gBAE1B,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;wBAEtB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,kDAAkD;wBAClD,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;wBAEtB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBAErB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBAErB,MAAM;iBACT;gBACD,MAAM;YAER,KAAK,QAAQ;gBACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;iBACT;gBACD,MAAM;YAER,KAAK,OAAO;gBACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,EAAE;wBACf,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,IAAI;wBACjB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;oBACR,KAAK,gBAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;wBAClB,MAAM;iBACT;gBACD,MAAM;SACT;QACD,QAAQ,SAAS,EAAE;YACjB,KAAK,gBAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,MAAM;YACR,KAAK,gBAAS,CAAC,EAAE;gBACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,MAAM;YACR,KAAK,gBAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,MAAM;YACR,KAAK,gBAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,MAAM;SACT;IACH,CAAC;CAyBF;AA3PD,0CA2PC;;;;;;;;;;;;;;;AC/PD,mEAA+B;AAC/B,wGAAsD;AAEtD,yFAA2C;AAC3C,uFAAsC;AAEtC,MAAa,YAAa,SAAQ,mBAAQ;IAUxC,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,MAAc,EACd,KAAc,EACd,YAAqB;QAErB,KAAK,EAAE,CAAC;QAbV,UAAK,GAAW,CAAC,CAAC;QAGlB,UAAK,GAAW,CAAC,CAAC;QAClB,YAAO,GAAW,CAAC,CAAC;QAoBpB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAC5C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,YAAY,CACjC,CAAC;gBACF,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,GAAG,CAAC;gBAC/C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,CAAC,CAAC;gBAC7C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,IAAI,CAAC;aACjD;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBACnB,OAAO;aACR;YACD,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;gBAAE,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC;YAEjD,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;YACpB,IAAI,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC;YAC3D,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;gBACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,MAAM,OAAO,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YACnE,WAAI,CAAC,eAAe,CAClB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAC5B,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,OAAO,EAChE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACvC,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,KAAK,CACX,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YAEzB,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAlDA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,KAAK;YAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,YAAY;YAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;YAC9C,IAAI,CAAC,YAAY,GAAG,6BAAa,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;IACrC,CAAC;CA0CF;AAtED,oCAsEC;;;;;;;;;;;;;;;AC3ED,uFAAsC;AACtC,mEAA+B;AAC/B,wGAAsD;AACtD,yFAA2C;AAE3C,MAAa,eAAgB,SAAQ,mBAAQ;IAuE3C,YACE,KAAW,EACX,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,EACT,EAAU,EACV,EAAU,EACV,EAAU,EACV,KAAa,EACb,KAAc,EACd,eAAwB,EACxB,OAAgB,EAChB,OAAgB,EAChB,OAAgB;QAEhB,KAAK,EAAE,CAAC;QAmBV,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACnC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,qCAAqC;YACxE,IAAI,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC;YAC1B,IAAI,YAAY,GAAG,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC;YACtC,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YAEvC,WAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,WAAI,CAAC,GAAG,CAAC,GAAG,CACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EACrC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EACzB,CAAC,EACD,CAAC,GAAG,IAAI,CAAC,EAAE,EACX,KAAK,CACN,CAAC;YACF,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC;QACpC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;gBACrD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;gBACrD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;gBACrD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;YAEvB,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;YAChB,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;YAChB,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;aACjB;YAED,gBAAgB;YAChB,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;YAEhB,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;gBAAE,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;;gBACrC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAExC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEhD,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC;QAtEA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,KAAK,KAAK,SAAS;YAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,eAAe,KAAK,SAAS;YAAE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC5E,CAAC;;AAxGH,0CA+JC;AA9IQ,uBAAO,GAAG,CACf,KAAW,EACX,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,KAAa,EACb,EAAE;IACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,KAAK,CAAC,SAAS,CAAC,IAAI,CAClB,IAAI,eAAe,CACjB,KAAK,EACL,EAAE,EACF,EAAE,EACF,CAAC,EACD,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EACzB,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,EACL,CAAC,EACD,QAAQ,EACR,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EACxB,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EACxB,CAAC,CACF,CACF,CAAC;KACH;AACH,CAAC,CAAC;AAEK,4BAAY,GAAG,CACpB,KAAW,EACX,EAAU,EACV,EAAU,EACV,KAAa,EACb,EAAE;IACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,KAAK,CAAC,SAAS,CAAC,IAAI,CAClB,IAAI,eAAe,CACjB,KAAK,EACL,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,EACjC,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,EACjC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EACnB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAChB,KAAK,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAC/B,KAAK,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAC/B,GAAG,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EACzB,KAAK,EACL,CAAC,CACF,CACF,CAAC;KACH;AACH,CAAC,CAAC;;;;;;;;;;;;;;;AC1EJ,uFAAsC;AACtC,mEAA0C;AAC1C,wGAAsD;AACtD,yFAA2C;AAI3C,MAAa,aAAc,SAAQ,mBAAQ;IAyEzC,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,EACT,EAAU,EACV,EAAU,EACV,EAAU,EACV,KAAa,EACb,KAAa,EACb,IAAY,EACZ,KAAc,EACd,eAAwB,EACxB,OAAgB,EAChB,OAAgB,EAChB,OAAgB;QAEhB,KAAK,EAAE,CAAC;QAqBV,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACnC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;YAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mDAAmD;YACrF,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YAEvC,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3C,WAAI,CAAC,MAAM,CACT,aAAa,EACb,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAChC,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YAEvC,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;;gBAC7D,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAC/B,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;;gBAC7D,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAC/B,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;;gBAC7D,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAE/B,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACjC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;aACjB;YAED,IAAI,CAAC,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC;YAExB,IAAI,CAAC,eAAe,IAAI,KAAK,CAAC;YAC9B,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEhD,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC;QApEA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;QAClC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,KAAK,KAAK,SAAS;YAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,0BAA0B;QACtD,IAAI,eAAe,KAAK,SAAS;YAAE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC5E,CAAC;;AA9GH,sCAiKC;AA9IQ,qBAAO,GAAG,CACf,IAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,KAAa,EACb,KAAa,EACb,EAAE;IACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,aAAa,CACf,IAAI,EACJ,EAAE,EACF,EAAE,EACF,CAAC,EACD,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EACzB,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,EACL,KAAK,EACL,CAAC,CACF,CACF,CAAC;KACH;AACH,CAAC,CAAC;AAEK,0BAAY,GAAG,CACpB,KAAW,EACX,EAAU,EACV,EAAU,EACV,KAAa,EACb,KAAa,EACb,EAAE;IACF,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACtD,KAAK,CAAC,SAAS,CAAC,IAAI,CAClB,IAAI,aAAa,CACf,KAAK,EACL,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI;QACvC,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI;QACvC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI;QACzB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI;QACtB,KAAK,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI;QACrC,KAAK,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI;QACrC,GAAG,GAAG,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;QAC/B,KAAK,EACL,KAAK,EACL,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CACzB,CACF,CAAC;KACH;AACH,CAAC,CAAC;;;;;;;;;;;;;;;AC/EJ,sFAAyC;AACzC,mEAA+B;AAC/B,wGAAsD;AACtD,uFAAsC;AAEtC,MAAa,eAAgB,SAAQ,mBAAQ;IAM3C,YAAY,CAAS,EAAE,CAAS;QAC9B,KAAK,EAAE,CAAC;QAOV,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,MAAM,WAAW,GAAG,aAAK,CAAC,QAAQ,CAChC,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EACtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CACvD,CAAC;YACF,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,EAAE,CAAC;YACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YAExD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YAE/B,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAClE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAClE,CAAC,EACD,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QA1BA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;CAuBF;AAnCD,0CAmCC;;;;;;;;;;;;;;;ACxCD,iGAAgD;AAEhD,wGAAsD;AAItD,MAAa,QAAS,SAAQ,mBAAQ;IAAtC;;QAKE,iBAAY,GAAG,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CAAC;QAC7B,gBAAW,GAAG,GAAG,EAAE;YACjB,IACE,6BAAa,CAAC,eAAe;gBAC7B,CAAC,6BAAa,CAAC,4BAA4B;gBAE3C,OAAO,CAAC,CAAC;YACX,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAAE,OAAO,GAAG,CAAC;YAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,OAAO,KAAK,IAAI,GAAG,CAAC;QACtB,CAAC,CAAC;QACF,eAAU,GAAG,GAAG,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;CAAA;AAvBD,4BAuBC;;;;;;;;;;;;;;;AC7BD,uFAAsC;AACtC,mEAA+B;AAE/B,MAAa,sBAAuB,SAAQ,mBAAQ;IAQlD,YAAY,CAAS,EAAE,CAAS;QAC9B,KAAK,EAAE,CAAC;QASV,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC;YACf,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,CAAC,CAAC;QAfA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;IAChB,CAAC;CAUF;AA1BD,wDA0BC;;;;;;;;;;;;;;;AC5BD,mEAA+B;AAC/B,wGAAsD;AAGtD,uFAAsC;AAEtC,MAAa,OAAQ,SAAQ,mBAAQ;IAUnC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,EAAU;QACtD,KAAK,EAAE,CAAC;QANV,UAAK,GAAW,IAAI,CAAC;QAGrB,UAAK,GAAW,CAAC,CAAC;QAClB,YAAO,GAAW,CAAC,CAAC;QAWpB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAC5C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,OAAO,CAC5B,CAAC;gBACF,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,GAAG,CAAC;gBAC/C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,CAAC,CAAC;gBAC7C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAO,IAAI,CAAC;aACjD;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBACnB,OAAO;aACR;YACD,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;gBAAE,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC;YAEjD,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;YACpB,IAAI,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC;YACvD,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;gBACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,MAAM,OAAO,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YAC5D,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,WAAI,CAAC,QAAQ,CACX,IAAI,IAAI,CAAC,EAAE,KAAK,EAChB,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,OAAO,EAChE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,6BAAa,CAAC,QAAQ,CACzC,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YAEzB,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA/CA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,6BAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;CAyCF;AA5DD,0BA4DC;;;;;;;;;;;;;;;ACnED,gFAAsC;AACtC,wGAAsD;AACtD,mEAAsD;AACtD,6EAAoC;AACpC,yFAA4C;AAC5C,sGAAmD;AACnD,kFAAuC;AACvC,6GAAyD;AACzD,wEAAiC;AACjC,oGAAkD;AAElD,iGAAgD;AAEhD,6EAAoC;AAEpC,gGAA8C;AAC9C,gGAAiD;AAGjD,2EAAmC;AACnC,yFAA4C;AAC5C,mHAA0D;AAC1D,4HAAgE;AAChE,uGAAkD;AAClD,uGAAkD;AAClD,yFAA4C;AAC5C,+FAAgD;AAChD,8HAAgE;AAChE,2FAAmD;AACnD,qFAAyC;AAEzC,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,qDAAI;IACJ,iDAAE;IACF,uDAAK;IACL,qDAAI;AACN,CAAC,EALW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK1B;AAED,IAAK,aAGJ;AAHD,WAAK,aAAa;IAChB,2CAAC;IACD,2CAAC;AACH,CAAC,EAHI,aAAa,KAAb,aAAa,QAGjB;AAED,MAAa,MAAO,SAAQ,mBAAQ;IAgElC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,aAAsB;QAClE,KAAK,EAAE,CAAC;QARF,kBAAa,GAGf,EAAE,CAAC;QAET,gBAAW,GAAsB,IAAI,GAAG,EAAE,CAAC;QAC3C,aAAQ,GAAa,IAAI,CAAC;QA+D1B,YAAO,GAAG,GAAG,EAAE;YACb,MAAM,IAAI,GAAI,IAAI,CAAC,IAAY,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5D,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClE,CAAC,CAAC;QAgBF,aAAQ,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,QAAQ,GAAG,GAAG,EAAE,EAAE;YACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QAClD,CAAC,CAAC;QAEF,gBAAW,GAAG,CACZ,KAAa,EACb,MAA2C,EAC3C,EAAE;YACF,IAAI,KAAK,YAAY,aAAK,EAAE;gBAC1B,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,KAAK,CAAC,MAAM,EAAE,CAAC;oBACf,OAAO,IAAI,CAAC;iBACb;gBACD,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,KAAK,CAAC,KAAK,EAAE,CAAC;oBACd,OAAO,IAAI,CAAC;iBACb;aACF;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,UAAkB,CAAC,EAAE,EAAE;YAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAE5C,+BAA+B;YAC/B,IAAI,SAAS,CAAC,CAAC,KAAK,SAAS,IAAI,SAAS,CAAC,CAAC,KAAK,SAAS,EAAE;gBAC1D,OAAO,KAAK,CAAC;aACd;YAED,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;YAC3B,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;YAE3B,IACE,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,gBAAgB;gBACpD,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;gBAClB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBACf,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;gBACzB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,SAAS;gBAEtD,OAAO,KAAK,CAAC;YAEf,OAAO,CAAC,CACN,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC;gBAC3C,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC;oBACzC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE;oBACnD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,WAAI,CAAC,CAAC,CAChE,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAErC,+BAA+B;YAC/B,IAAI,SAAS,CAAC,CAAC,KAAK,SAAS,IAAI,SAAS,CAAC,CAAC,KAAK,SAAS,EAAE;gBAC1D,OAAO,KAAK,CAAC;aACd;YAED,OAAO,SAAS,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,OAAO,IAAI,CAAC;aACb;YAED,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/C,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAEhD,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,EAAE;gBACpC,OAAO,IAAI,CAAC;aACb;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACrC,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAE5C,IACE,SAAS,CAAC,CAAC,KAAK,SAAS;gBACzB,SAAS,CAAC,CAAC,KAAK,SAAS;gBACzB,eAAe,CAAC,CAAC,KAAK,SAAS;gBAC/B,eAAe,CAAC,CAAC,KAAK,SAAS,EAC/B;gBACA,OAAO,IAAI,CAAC;aACb;YAED,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;gBACzB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EACnD;gBACA,OAAO,IAAI,CAAC;aACb;YAED,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;YAEnE,IAAI,aAAa,IAAI,iBAAiB,EAAE;gBACtC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;aAC7B;YAED,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACrC,MAAM,KAAK,GAAG,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YAEjC,IAAI,KAAK,IAAI,KAAK,EAAE;gBAClB,OAAO,IAAI,CAAC;aACb;YAED,IAAI,KAAK,EAAE;gBACT,MAAM,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEzD,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EACxC;oBACA,OAAO,IAAI,CAAC;iBACb;gBAED,OAAO,OAAO,GAAG,IAAI,CAAC,CAAC;oBACrB,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;oBAClD,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;aACxD;YAED,IAAI,KAAK,EAAE;gBACT,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAE7D,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBAChC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EACxC;oBACA,OAAO,IAAI,CAAC;iBACb;gBAED,OAAO,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACzB,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;oBACpD,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAS,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;aACzD;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YACpE,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ,EAAE;gBAChD,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;aAC1D;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,CAAC,6BAAa,CAAC,eAAe;gBAAE,OAAO;YAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACzC,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,QAAQ,CAAC,SAAS;oBAC7B,OAAO,EAAE,QAAQ,CAAC,CAAC;oBACnB,OAAO,EAAE,QAAQ,CAAC,CAAC;iBACpB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,UAAkB,CAAC,EAAE,EAAE;YACpC,qCAAqC;YACrC,IAAI,aAAK,CAAC,MAAM,KAAK,SAAS,IAAI,aAAK,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC5D,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;aACvC;YAED,gCAAgC;YAChC,MAAM,aAAa,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC;YAC9C,MAAM,aAAa,GAAG,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC;YAE/C,sCAAsC;YACtC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,CAAC,aAAK,CAAC,MAAM,GAAG,aAAa,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACzD,6BAAa,CAAC,QAAQ,CACzB,CAAC;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,CAAC,aAAK,CAAC,MAAM,GAAG,OAAO,GAAG,aAAa,GAAG,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACnE,6BAAa,CAAC,QAAQ,CACzB,CAAC;YAEF,OAAO;gBACL,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,WAAW;gBACvB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,WAAW;aACxB,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC7B,gCAAgC;YAChC,MAAM,aAAa,GAAG,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC;YAC9C,MAAM,aAAa,GAAG,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC;YAE/C,gDAAgD;YAChD,MAAM,WAAW,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACnC,MAAM,WAAW,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YAEnC,2CAA2C;YAC3C,MAAM,MAAM,GAAG,aAAa,GAAG,WAAW,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACpE,MAAM,MAAM,GAAG,aAAa,GAAG,WAAW,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAEpE,OAAO;gBACL,CAAC,EAAE,MAAM;gBACT,CAAC,EAAE,MAAM;aACV,CAAC;QACJ,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC3B,MAAM,OAAO,GACX,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAC/D,MAAM,OAAO,GACX,IAAI,CAAC,KAAK,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAEhE,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAEzC,+CAA+C;YAC/C,IAAI,OAAO,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC;YACvD,IAAI,OAAO,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC;YAEvD,wDAAwD;YACxD,kCAAkC;YAClC,MAAM,OAAO,GAAG,OAAO,CAAC;YACxB,MAAM,OAAO,GAAG,OAAO,CAAC;YAExB,yDAAyD;YACzD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YACpD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YAEpD,kBAAkB;YAClB,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,wCAAwC;gBACxC,MAAM,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,OAAO,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC,iCAAiC;aACvE;YAED,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,wCAAwC;gBACxC,MAAM,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,OAAO,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC,iCAAiC;aACvE;YAED,IAAI,CAAC,UAAU,GAAG;gBAChB,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,OAAO;aACX,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,EAAU,EAAE,EAAU,EAAE,KAAoB,EAAE,EAAE;YAC9D,4DAA4D;YAC5D,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;YAErB,2BAA2B;YAC3B,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YAEjD,0BAA0B;YAC1B,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YAEjD,yBAAyB;YACzB,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACnC;YAED,uBAAuB;YACvB,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACnC;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,2BAAsB,GAAG,CAAC,MAAc,EAAE,MAAc,EAAU,EAAE;YAClE,+BAA+B;YAC/B,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;gBAAE,OAAO,EAAE,CAAC;YAEtD,0BAA0B;YAC1B,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;gBAAE,OAAO,EAAE,CAAC;YAEtD,mBAAmB;YACnB,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,EAAE;gBACrB,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;aAC3C;YAED,iBAAiB;YACjB,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,EAAE;gBACrB,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;aACxC;YAED,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,qBAAqB;YACrB,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBAC7B,yBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC1C,OAAO;aACR;YAED,MAAM,MAAM,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACtC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAErC,2CAA2C;YAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAC7D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEM,mBAAc,GAAG,CACvB,QAAkC,EAClC,SAAmC,EAC3B,EAAE;YACV,2BAA2B;YAC3B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC9B,OAAO,MAAM,CAAC;aACf;YACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE;gBACtC,OAAO,OAAO,CAAC;aAChB;YAED,mCAAmC;YACnC,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBAClD,oCAAoC;gBAEpC,gCAAgC;gBAChC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBAClD,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC9D;gBAED,gCAAgC;gBAChC,OAAO,MAAM,CAAC;aACf;YAED,0BAA0B;YAC1B,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEM,gBAAW,GAAG,CAAC,QAAkC,EAAW,EAAE;YACpE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAE1B,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC7C,IAAI,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,CACtC,CAAC;QACJ,CAAC,CAAC;QAEM,+BAA0B,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACrE,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,YAAY,WAAI,CAAC;YAE5E,OAAO,CACL,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ;gBACpD,eAAe,CAAC;gBAClB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;oBACpB,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ;oBACtD,eAAe,CAAC,CACnB,CAAC;QACJ,CAAC,CAAC;QAEM,uBAAkB,GAAG,CAAC,SAG7B,EAAW,EAAE;YACZ,qBAAqB;YACrB,MAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,gBAAgB;gBAAE,OAAO,IAAI,CAAC;YAElC,wCAAwC;YACxC,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAC7C,CAAC,EAAE,SAAS,CAAC,CAAC;gBACd,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;aAClD,CAAC,CAAC;YAEH,OAAO,cAAc,CAAC;QACxB,CAAC,CAAC;QAEM,uBAAkB,GAAG,CAAC,IAA8B,EAAW,EAAE;YACvE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC7C,OAAO,CACL,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACnB,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAC7C,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,8BAA8B;YAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,QAAG,GAAG,GAAW,EAAE;YACjB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,KAAU,EAAE,IAAY,EAAE,IAAY,EAAE,EAAE;YACtD,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK;gBAAE,OAAO,KAAK,CAAC;YAC7C,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACxE,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YACxE,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACjC,IACE,IAAI,CAAC,aAAa;gBAClB,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,aAAa;gBACjD,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,oBAAoB;gBAExD,OAAO;YACT,kCAAkC;YAClC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC;YACzB,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;gBACrD,OAAO;aACR;YACD,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEtB,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;gBACrC,IAAI,CAAC,CAAC,UAAU,KAAK,IAAI,EAAE;oBACzB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;wBAC1B,OAAO,GAAG,IAAI,CAAC;wBACf,MAAM;qBACP;iBACF;aACF;YAED,iEAAiE;YACjE,0BAA0B;YAC1B,IACE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAC5C;gBACA,6DAA6D;gBAC7D,oCAAoC;gBACpC,OAAO;gBACP,GAAG;aACJ;iBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;aAC9C;YACD,GAAG;YACH,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;gBACrC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,0DAA0D;gBAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oBAC5B,IAAI,CAAC,CAAC,QAAQ,EAAE;wBACd,4BAA4B;wBAE5B,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;wBACpB,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;wBACnB,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;wBACnB,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,6CAA6C;wBACnE,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,wDAAwD;wBAC9E,IAAI,aAAa,GAAG,EAAE,CAAC;wBACvB,OAAO,IAAI,EAAE;4BACX,QAAQ,GAAG,IAAI,CAAC;4BAChB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;gCACvC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gCACd,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;oCAC3B,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE;wCACpB,QAAQ,GAAG,IAAI,CAAC;wCAChB,QAAQ,GAAG,IAAI,CAAC;wCAChB,MAAM;qCACP;oCACD,QAAQ,GAAG,KAAK,CAAC;oCACjB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCACtB,MAAM;iCACP;6BACF;4BACD,IAAI,QAAQ;gCAAE,MAAM;4BACpB,KAAK,IAAI,EAAE,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxD,KAAK,IAAI,EAAE,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;yBACzD;wBACD;4FACoE;wBACpE,8EAA8E;wBAE9E,IACE,aAAa,CAAC,MAAM,KAAK,CAAC;4BAC1B,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,IAAI,QAAQ,CAAC,EACpE;4BACA,IAAI,CAAC,CAAC,WAAW,EAAE;gCACjB,gCAAgC;gCAChC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gCAC/B,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;oCAAE,aAAK,CAAC,GAAG,EAAE,CAAC;gCAEnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gCAExC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCAC1B,OAAO;6BACR;yBACF;6BAAM;4BACL,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;gCAAE,aAAK,CAAC,IAAI,EAAE,CAAC;4BACpD,qCAAqC;4BAErC,KAAK,MAAM,CAAC,IAAI,aAAa,EAAE;gCAC7B,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gCACd,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gCACd,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gCACV,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gCACV,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gCACb,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gCACb,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,8DAA8D;6BACpF;4BACD,IACE,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE;gCACtD,QAAQ,EACR;gCACA,MAAM,WAAW,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gCAC5D,WAAW,CAAC,KAAK,EAAE,CAAC;gCACpB,IAAI,WAAW,CAAC,OAAO,EAAE;oCACvB,aAAK,CAAC,UAAU,EAAE,CAAC;iCACpB;gCACD,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;oCAAE,aAAK,CAAC,GAAG,EAAE,CAAC;6BACpD;4BAED,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;4BACV,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;4BACV,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;4BACb,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;4BACb,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAChB,IAAI,CAAC,YAAY,EAAE,CAAC;4BACpB,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC1B,OAAO;yBACR;qBACF;yBAAM;wBACL,6DAA6D;wBAC7D,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;4BACX,IAAI,CAAC,CAAC,YAAY;gCAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;4BACrC,kDAAkD;4BAClD,qCAAqC;4BACrC,OAAO;yBACR;qBACF;iBACF;aACF;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;gBACvE,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;gBACvE,OAAO;aACR;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;gBACxE,OAAO;aACR;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;gBACpB,IAAI,KAAK,YAAY,mBAAQ,IAAI,KAAK,YAAY,uBAAU,EAAE;oBAC5D,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAEhC,IAAI,MAAM,EAAE;wBACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAClC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;yBAC7B;6BAAM;4BACL,aAAK,CAAC,UAAU,EAAE,CAAC;yBACpB;wBACD,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;wBAChC,OAAO;qBACR;iBACF;gBACD,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtB,IACE,CAAC,CACC,KAAK,YAAY,WAAI;oBACrB,KAAK,YAAY,mBAAQ;oBACzB,KAAK,YAAY,mBAAQ;oBACzB,KAAK,YAAY,uBAAU,CAC5B;oBAED,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;iBAAM;gBACL,IAAI,KAAK,YAAY,WAAI,EAAE;oBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEvC,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBACzB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACpB;yBAAM;wBACL,aAAK,CAAC,UAAU,EAAE,CAAC;qBACpB;iBACF;aACF;QACH,CAAC,CAAC;QAEM,uBAAkB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACpD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAc,EAAE,KAAa,EAAE,QAAgB,CAAC,EAAE,EAAE;YAC1D,qCAAqC;YACrC,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACrC,UAAU,CAAC,GAAG,EAAE;oBACd,aAAK,CAAC,IAAI,EAAE,CAAC;oBACb,aAAK,CAAC,SAAS,EAAE,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACvB,CAAC,EAAE,KAAK,CAAC,CAAC;aACX;YAED,sBAAsB;YACtB,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YAED,sBAAsB;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAErC,4BAA4B;YAC5B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;gBACtB,kDAAkD;gBAClD,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;aAC9D;YACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,kBAAkB;YAClB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,6BAAa,CAAC,cAAc,EAAE;gBACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,kDAAkD;gBAClD,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,MAAc,EAAE,KAAa,EAAE,EAAE;YACnD,IAAI,CAAC,6BAAa,CAAC,cAAc;gBAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK,iBAAiB,MAAM,UAAU,CAAC,CAAC;QACzE,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAClC,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAExC,4CAA4C;YAC5C,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;gBACnC,aAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpD,IAAI,IAAI,CAAC,kBAAkB;gBAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAE7D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACtB,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;gBACjB,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB,CAAC,CAAC;YAEH;;;;;cAKE;YAEF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAEX,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC1B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAClB;aACF;YACD,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;gBAAE,OAAO;YAEvC,iDAAiD;YACjD,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,sEAAsE;gBACtE,IAAI,IAAI,CAAC,QAAQ;oBAAE,aAAa,EAAE,CAAC;aACpC;YACD,6DAA6D;QAC/D,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACtC,0BAA0B;YAC1B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAClC,eAAe;YACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAElB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAEtB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAE7B,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;YACxD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,0BAA0B;YAC7D,IAAI,eAAe,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;aACvB;YAED,iDAAiD;YACjD,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YAEtB,iDAAiD;YACjD,uDAAuD;QACzD,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAc,EAAE,EAAE;YACxB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QACjE,CAAC,CAAC;QAEF,aAAQ,GAAG,CACT,OAAe,EACf,OAAe,EACf,MAAc,EACd,MAAc,EACd,EAAE;YACF,MAAM,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACrC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACzE,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,gBAAW,GAAG,CACZ,OAAe,EACf,OAAe,EACf,MAAc,EACd,MAAc,EACd,gBAAwB,EAAE,EAC1B,EAAE;YACF,MAAM,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3E,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAEvC,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,EAC3B,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,CAC5B,CAAC;QACJ,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,KAAa,EAAE,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC;QA91BA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAEzB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,gBAAS,CAAC,EAAE,CAAC;QAElC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,+BAAc,CAAC,qBAAqB,CAAC,CAAC,0BAA0B;QACnF,IAAI,CAAC,GAAG,GAAG,IAAI,SAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,+BAAc,CAAC,mBAAmB,CAAC;QAErD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAG,IAAI,uCAAkB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,6CAAqB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;IAChC,CAAC;IAOD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC;IACnC,CAAC;;AA/IH,wBAi6BC;AA74BQ,qBAAc,GAAW,CAAC,CAAC,CAAC,8CAA8C;;;;;;;;;;;;;;;AC3DnF,MAAa,qBAAqB;IAGhC,YAAY,MAAc;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,OAAO,CAAC,MAAoB;QAC1B,+BAA+B;QAC/B,IAAI;YACD,IAAI,CAAC,MAAM,CAAC,IAAY,CAAC,aAAa,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;SAC/D;QAAC,MAAM,GAAE;QACV,QAAQ,MAAM,CAAC,IAAI,EAAE;YACnB,KAAK,MAAM;gBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CACvB,MAAM,CAAC,SAAS,EAChB,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,OAAO,CACf,CAAC;gBACF,MAAM;YAER,KAAK,WAAW;gBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAC5B,MAAM,CAAC,SAAS,EAChB,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,OAAO,CACf,CAAC;gBACF,MAAM;YACR,KAAK,eAAe;gBAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAC7B,MAAM;YAER,KAAK,gBAAgB;gBACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM;YAER,KAAK,eAAe;gBAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;gBACrC,MAAM;YAER,KAAK,gBAAgB;gBACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;gBACtC,MAAM;YAER,KAAK,cAAc;gBACjB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;gBACtC,MAAM;YAER,KAAK,eAAe;gBAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAC7B,MAAM;YAER,KAAK,iBAAiB;gBACpB,sDAAsD;gBACtD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CACnC,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CACvD,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;gBACtC,MAAM;YACR,KAAK,eAAe,CAAC,CAAC;gBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CACnB,CAAC,EACD,IAAI,CAAC,GAAG,CACN,MAAM,CAAC,SAAS,EAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;oBACxB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;wBACxB,IAAI,CAAC,MAAM,CAAC,SAAiB,CAAC,SAAS,CAAC;oBAC3C,CAAC,CACJ,CACF,CAAC;gBACF,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CACjB,CAAC,EACD,IAAI,CAAC,GAAG,CACN,MAAM,CAAC,OAAO,EACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;oBACxB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;wBACxB,IAAI,CAAC,MAAM,CAAC,SAAiB,CAAC,SAAS,CAAC;oBAC3C,CAAC,CACJ,CACF,CAAC;gBACF,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,IAAI,EAAE;oBACR,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACjD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;oBAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;iBACxC;gBACD,MAAM;aACP;YAED,KAAK,SAAS;gBACZ,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtB,MAAM;YAER,KAAK,QAAQ;gBACX,qDAAqD;gBACrD,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;gBAChE,MAAM;YAER,KAAK,UAAU;gBACb,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,kDAAkD;gBACzG,MAAM;SACT;IACH,CAAC;CACF;AAzGD,sDAyGC;;;;;;;;;;;;;;;AC7GD,gFAAiD;AAEjD,mEAAgD;AAChD,gGAAiD;AACjD,6HAAiE;AACjE,wGAAsD;AACtD,6FAA+C;AAC/C,kFAAuC;AAEvC,MAAa,kBAAkB;IAO7B,YAAY,MAAc;QAFlB,8BAAyB,GAAqB,IAAI,CAAC;QAoP3D,iBAAY,GAAG,CAAC,GAAW,EAAE,EAAE;YAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;gBAAE,OAAO;YAClC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,GAAG,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;oBAClC,IAAI,EAAE,iBAAiB;oBACvB,KAAK,EAAE,GAAG,GAAG,CAAC;iBACf,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,QAAQ,GAAG,EAAE;wBACX,KAAK,CAAC;4BACJ,6BAAa,CAAC,mCAAmC,CAAC,IAAI,CAAC,CAAC;4BACxD,MAAM;wBACR,KAAK,CAAC;4BACJ,6BAAa,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;4BACzD,MAAM;qBACT;iBACF;aACF;QACH,CAAC,CAAC;QAoMF,yBAAoB,GAAG,GAAY,EAAE;YACnC,OAAO,CACL,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;gBAC5B,IAAI,CAAC,MAAM,CAAC,IAAI;gBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ;gBACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;gBACrB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,CAAC;qBACvE,QAAQ;oBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC7B,CAAC;QACJ,CAAC,CAAC;QAkHF,uBAAkB,GAAG,CAAC,KAAa,EAAE,EAAE;YACrC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;QACF,2BAAsB,GAAG,CAAC,KAAa,EAAE,EAAE;YACzC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,MAAM,aAAa,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YAC9D,MAAM,mBAAmB,GAAG;gBAC1B,CAAC,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC;gBAC1B,CAAC,EAAE,6BAAa,CAAC,MAAM,GAAG,CAAC;aAC5B,CAAC;YACF,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC;YACnD,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IACE,CAAC,6BAAa,CAAC,eAAe;gBAC9B,IAAI,CAAC,mBAAmB,KAAK,UAAU;gBACvC,6BAAa,CAAC,QAAQ;gBAEtB,OAAO;YACT,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAEhC,6BAA6B;YAC7B,2CAA2C;YAC3C,wDAAwD;YAExD,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;gBAChD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;aACzC;iBAAM,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;gBAC5D,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;aACxC;iBAAM,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;gBAC9D,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;aACxC;QACH,CAAC,CAAC;QA7mBA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,MAAM,CAAC,aAAa,EAAE;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,cAAc;QACZ,8EAA8E;QAC9E,sDAAsD;QACtD,IAAI;YACD,aAAK,CAAC,wBAAgC,CAAC,MAAM,GAAG,CAAC,CAAC;YAClD,aAAK,CAAC,uBAA+B,CAAC,MAAM,GAAG,CAAC,CAAC;SACnD;QAAC,MAAM,GAAE;QAEV,aAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;QACjE,aAAK,CAAC,kBAAkB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;QACnE,aAAK,CAAC,eAAe,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,EAAE,CAAC,CAAC;QAC7D,aAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;QACjE,aAAK,CAAC,aAAa,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;QAC9D,aAAK,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;QAChE,aAAK,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,aAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,UAAU,CAAC,CAAC;QACvE,aAAK,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,CACvC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,WAAW,CAAC,CACxC,CAAC;QACF,aAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,EAAE,CACrE,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CACnC,CAAC;QACF,aAAK,CAAC,cAAc,GAAG,CAAC,GAAG,EAAE,EAAE,CAC7B,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACjD,aAAK,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;QAChE,aAAK,CAAC,aAAa,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;QAC9D,aAAK,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;QAChE,aAAK,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,WAAW,CAAC,KAAgB;QAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM;YACtE,OAAO;QAET,kEAAkE;QAClE,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,aAAa;YACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,oBAAoB,CAAC;YAClE,KAAK,KAAK,iBAAS,CAAC,UAAU,EAC9B;YACA,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,KAAK,iBAAS,CAAC,UAAU,EAAE;YAC/D,gFAAgF;YAChF,IAAK,IAAI,CAAC,MAAM,CAAC,IAAY,CAAC,eAAe,EAAE;gBAC7C,OAAO;aACR;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YACvC,OAAO;SACR;QAED,QAAQ,KAAK,EAAE;YACb,KAAK,iBAAS,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;oBAClC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,eAAe;iBACtD,CAAC,CAAC;gBACH,MAAM;aACP;YACD,KAAK,iBAAS,CAAC,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC;gBAC/D,MAAM;YACR,KAAK,iBAAS,CAAC,CAAC;gBACd,6BAA6B;gBAC7B,sBAAsB;gBACtB,MAAM;YACR,KAAK,iBAAS,CAAC,IAAI;gBACjB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM;iBACP;gBACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;wBAClC,IAAI,EAAE,MAAM;wBACZ,SAAS,EAAE,gBAAS,CAAC,IAAI;wBACzB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;wBAC1B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;qBACvB,CAAC,CAAC;gBACL,MAAM;YAER,KAAK,iBAAS,CAAC,KAAK;gBAClB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM;iBACP;gBACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;wBAClC,IAAI,EAAE,MAAM;wBACZ,SAAS,EAAE,gBAAS,CAAC,KAAK;wBAC1B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;wBAC1B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;qBACvB,CAAC,CAAC;gBACL,MAAM;YAER,KAAK,iBAAS,CAAC,EAAE;gBACf,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM;iBACP;gBACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;wBAClC,IAAI,EAAE,MAAM;wBACZ,SAAS,EAAE,gBAAS,CAAC,EAAE;wBACvB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wBACtB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;qBAC3B,CAAC,CAAC;gBACL,MAAM;YAER,KAAK,iBAAS,CAAC,IAAI;gBACjB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM;iBACP;gBACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;wBAClC,IAAI,EAAE,MAAM;wBACZ,SAAS,EAAE,gBAAS,CAAC,IAAI;wBACzB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wBACtB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;qBAC3B,CAAC,CAAC;gBACL,MAAM;YACR,KAAK,iBAAS,CAAC,KAAK;gBAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBAEpC,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ;oBAAE,OAAO;gBAEjC,IAAI,MAAM,CAAC,IAAI,EAAE;oBACf,MAAM,CAAC,OAAO,EAAE,CAAC;oBACjB,OAAO;iBACR;gBAED,IACE,IAAI,CAAC,MAAM,CAAC,kBAAkB;oBAC9B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,EACnC;oBACA,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;oBACvC,MAAM;iBACP;gBAED,IACE,MAAM,CAAC,SAAS,CAAC,MAAM;oBACvB,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ,EAC9C;oBACA,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;iBAC/D;gBACD,MAAM;YACR,KAAK,iBAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACpC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC;gBAC/D,MAAM;YACR,KAAK,iBAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACpC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC;gBAChE,MAAM;YACR,KAAK,iBAAS,CAAC,UAAU;gBACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,MAAM;YACR,KAAK,iBAAS,CAAC,WAAW;gBACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,MAAM;YACR,KAAK,iBAAS,CAAC,UAAU;gBACvB,kBAAkB;gBAClB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;gBAElC,0CAA0C;gBAC1C,IAAI,aAAK,CAAC,SAAS,IAAI,aAAK,CAAC,gBAAgB,EAAE;oBAC7C,IAAI,gBAAgB,GAAG,KAAK,CAAC;oBAE7B,uCAAuC;oBACvC,MAAM,EAAE,GAAG,aAAK,CAAC,MAAM,GAAG,aAAK,CAAC,cAAc,CAAC;oBAC/C,MAAM,EAAE,GAAG,aAAK,CAAC,MAAM,GAAG,aAAK,CAAC,cAAc,CAAC;oBAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC9C,MAAM,eAAe,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,YAAY;oBAElE,IAAI,QAAQ,GAAG,eAAe,EAAE;wBAC9B,gBAAgB,GAAG,IAAI,CAAC;qBACzB;oBAED,iDAAiD;oBACjD,IACE,IAAI,CAAC,yBAAyB,KAAK,IAAI;wBACvC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,yBAAyB,EACxD;wBACA,gBAAgB,GAAG,IAAI,CAAC;qBACzB;oBAED,IAAI,gBAAgB,EAAE;wBACpB,aAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;wBAC/B,aAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;wBAC5B,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;qBACvC;iBACF;gBAED,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,6BAAa,CAAC,QAAQ,EAAE;oBAC1D,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;iBACrC;gBACD,MAAM;YACR,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ,CAAC;YACxB,KAAK,iBAAS,CAAC,QAAQ;gBACrB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACpC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;gBAC9B,MAAM;YACR,KAAK,iBAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,MAAM;YACR,KAAK,iBAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,MAAM;YACR,KAAK,iBAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM;SACT;IACH,CAAC;IAwBD,qBAAqB;QACnB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpE,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SAC9B;IACH,CAAC;IAED,eAAe,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc;QAClD,IAAI,MAAM,KAAK,CAAC;YAAE,OAAO,CAAC,gCAAgC;QAE1D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE3B,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ,EAAE;YAClD,uCAAuC;YACvC,IACE,CAAE,MAAM,CAAC,IAAY,CAAC,OAAO;gBAC5B,MAAM,CAAC,IAAY,CAAC,eAAe,EACpC;gBACC,MAAM,CAAC,IAAY,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxD,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC9B,OAAO;aACR;YACD,aAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,0BAA0B;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACxB,IAAK,MAAM,CAAC,IAAY,CAAC,eAAe,EAAE;gBACvC,MAAM,CAAC,IAAY,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aACnC;YACD,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,mCAAmC;QACnC,aAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACrC,aAAK,CAAC,cAAc,GAAG,CAAC,CAAC;QACzB,aAAK,CAAC,cAAc,GAAG,CAAC,CAAC;QAEzB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAEnC,uEAAuE;QACvE,MAAM,uBAAuB,GAC3B,CAAC,SAAS,CAAC,MAAM;YACf,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YACrD,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3C,IAAI,uBAAuB,EAAE;YAC3B,SAAS,CAAC,UAAU,EAAE,CAAC;YACvB,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,cAAc;QACd,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,mCAAmC;QACnC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,yBAAyB;QACzB,IAAI,MAAM,CAAC,kBAAkB,EAAE;YAC7B,IACE,+BAAc,CAAC,6BAA6B,CAC1C,CAAC,EACD,CAAC,EACD,MAAM,CAAC,kBAAkB,CAC1B,EACD;gBACA,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;aACnC;iBAAM;gBACL,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;aACnC;YACD,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACR;QAED,oCAAoC;QACpC,MAAM,eAAe,GACnB,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC;YACxC,SAAS,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ;YAChD,SAAS,CAAC,MAAM;YAChB,IAAI,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,eAAe,EAAE;YACpB,kBAAkB;YAClB,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;gBAChE,oEAAoE;gBACpE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBACvD,MAAM,CAAC,aAAa,EAAE,CAAC;gBACvB,aAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC/B;iBAAM;gBACL,aAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAChC;SACF;aAAM;YACL,aAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAChC;IACH,CAAC;IAED,oBAAoB;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,MAAM,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,iBAAU,CAAC,QAAQ,EAAE;YAClD,IACE,CAAE,MAAM,CAAC,IAAY,CAAC,OAAO;gBAC5B,MAAM,CAAC,IAAY,CAAC,eAAe,EACpC;gBACC,MAAM,CAAC,IAAY,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACzD;YACD,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,OAAO;SACR;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAEnC,MAAM,uBAAuB,GAC3B,CAAC,SAAS,CAAC,MAAM;YACf,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YACrD,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3C,IAAI,uBAAuB,EAAE;YAC3B,SAAS,CAAC,UAAU,EAAE,CAAC;SACxB;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,OAAO;SACR;aAAM;SACN;QAED,mCAAmC;QACnC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,MAAM,CAAC,kBAAkB,EAAE;YAC7B,IACE,+BAAc,CAAC,6BAA6B,CAC1C,CAAC,EACD,CAAC,EACD,MAAM,CAAC,kBAAkB,CAC1B,EACD;gBACA,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;aACnC;iBAAM;gBACL,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBAClC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACjC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;gBACzD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrE;YACD,OAAO;SACR;QAED,MAAM,gBAAgB,GACpB,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC;YACzC,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ;YACjD,CAAC,SAAS,CAAC,MAAM,CAAC;QAEpB,iEAAiE;QACjE,IAAI,gBAAgB,IAAI,CAAC,aAAK,CAAC,gBAAgB,EAAE;YAC/C,MAAM,CAAC,aAAa,EAAE,CAAC;SACxB;IACH,CAAC;IAcD,SAAS;QACP,8EAA8E;QAC9E,IAAI,aAAK,CAAC,gBAAgB,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,sBAAsB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,CAAC,CAAC;YACxD,OAAO;SACR;aAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACpC,IAAK,IAAI,CAAC,MAAM,CAAC,IAAY,CAAC,eAAe,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,IAAY,CAAC,SAAS,EAAE,iBAAiB,CACpD,aAAK,CAAC,MAAM,EACZ,aAAK,CAAC,MAAM,CACb,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aACxC;YACD,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,MAAM,CAAC,CAAC;YAC/D,OAAO;SACR;QAED,MAAM,CAAC,GAAG,aAAK,CAAC,MAAM,CAAC;QACvB,MAAM,CAAC,GAAG,aAAK,CAAC,MAAM,CAAC;QAEvB,iCAAiC;QACjC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAClE,CAAC,EACD,CAAC,CACF,CAAC,QAAQ,CAAC;QACX,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAChE,CAAC,EACD,CAAC,CACF,CAAC,QAAQ,CAAC;QAEX,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE;YACzE,MAAM,QAAQ,GAAG,+BAAc,CAAC,6BAA6B,CAC3D,aAAK,CAAC,MAAM,EACZ,aAAK,CAAC,MAAM,EACZ,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAC/B,CAAC;YACF,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBACvC,OAAO;aACR;iBAAM,IAAI,CAAC,QAAQ,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBACvC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACjC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;gBACzD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrE;YACD,OAAO;SACR;QAED,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;YAC7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,EACpD;YACA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;YACvC,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,UAAU,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aAC/B;SACF;aAAM,IAAI,YAAY,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,UAAU,CAAC,CAAC;SACxC;IACH,CAAC;IAED,iBAAiB,CAAC,GAAW;QAC3B,QAAQ,GAAG,CAAC,WAAW,EAAE,EAAE;YACzB,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBACd,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;gBACjC,MAAM;YACR,KAAK,GAAG,CAAC;YACT,KAAK,YAAY;gBACf,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;gBAClC,MAAM;YACR,KAAK,GAAG,CAAC;YACT,KAAK,SAAS;gBACZ,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,EAAE,CAAC,CAAC;gBAC/B,MAAM;YACR,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBACd,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;gBACjC,MAAM;YACR,KAAK,GAAG;gBACN,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;gBAClC,MAAM;YACR,KAAK,GAAG;gBACN,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM;YACR,KAAK,GAAG;gBACN,IAAI,CAAC,WAAW,CAAC,iBAAS,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM;YACR,kDAAkD;YAClD;gBACE,uCAAuC;gBACvC,MAAM;SACT;IACH,CAAC;IA4CD,8CAA8C;IAC9C,yBAAyB,CAAC,CAAS,EAAE,CAAS;QAC5C,MAAM,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACpC,sGAAsG;QACtG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC;IAC1D,CAAC;IAED,qBAAqB;QACnB,uBAAU,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAC1B,aAAK,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CACnD,CAAC;IACJ,CAAC;IAED,yBAAyB,CAAC,CAAS,EAAE,CAAS;QAC5C,MAAM,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACpC,sGAAsG;QACtG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IAC1D,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC;IAEO,sBAAsB,CAAC,CAAS,EAAE,CAAS;QACjD,IAAI,IAAI,CAAC,+BAA+B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACvB;IACH,CAAC;IAEO,+BAA+B,CAAC,CAAS,EAAE,CAAS;QAC1D,OAAO,CACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CACtD,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACvC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,UAAU,IAAI,CAAC;YAAE,OAAO;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC;QACtD,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC;QAC1C,IAAI,IAAI,GAAG,CAAC;YAAE,IAAI,IAAI,UAAU,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,IAAI,CAAC;IAC1C,CAAC;CACF;AAvqBD,gDAuqBC;;;;;;;;;;;;;;;AC/qBD,mEAAoC;AACpC,wGAAsD;AACtD,6EAAyC;AAEzC,MAAa,cAAc;IAUzB,YAAY,MAAc;QARlB,cAAS,GAAqD,EAAE,CAAC;QACjE,sBAAiB,GAAY,KAAK,CAAC;QACnC,qBAAgB,GAAkB,IAAI,CAAC;QACvC,cAAS,GAAW,CAAC,CAAC;QAC9B,iBAAY,GAAW,CAAC,CAAC;QACzB,4BAAuB,GAAW,CAAC,CAAC;QACpC,qBAAgB,GAAW,CAAC,CAAC;QA4C7B,QAAQ;QACR,mBAAc,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACxC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,OAAO,CACL,EAAE,IAAI,IAAI,CAAC,SAAS;gBACpB,EAAE,IAAI,IAAI,CAAC,SAAS;gBACpB,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACtB,EAAE,GAAG,EAAE,KAAK,CAAC,CACd,CAAC;QACJ,CAAC,CAAC;QAsHM,iBAAY,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,iBAAiB;gBAAE,OAAO;YAEpC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAEvB,MAAM,QAAQ,GAAG,6BAAa,CAAC,iBAAiB,CAAC;YAEjD,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;gBACvC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBAExC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBAC5B;aACF;YAED,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnE,CAAC,CAAC;QA5LA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,SAAoB,EAAE,OAAgB,EAAE,OAAgB;QAC3D,IAAI,CAAC,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QAEtD,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;QAExB,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;SACjC;IACH,CAAC;IAED,SAAS,CAAC,SAAoB,EAAE,OAAgB,EAAE,OAAgB;QAChE,IAAI,CAAC,CAAC,SAAS,IAAI,gBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,6BAAa,CAAC,QAAQ;YACrE,OAAO;QAET,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;QACxB,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS;YAAE,OAAO;QAC/C,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;SACjC;IACH,CAAC;IAaO,eAAe,CACrB,SAAoB,EACpB,CAAU,EACV,CAAU;QAEV,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;YAClE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACjB;QAED,QAAQ,SAAS,EAAE;YACjB,KAAK,gBAAS,CAAC,IAAI;gBACjB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YACpD,KAAK,gBAAS,CAAC,KAAK;gBAClB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YACpD,KAAK,gBAAS,CAAC,EAAE;gBACf,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACpD,KAAK,gBAAS,CAAC,IAAI;gBACjB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACpD;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;IACD,uBAAuB;QACrB,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;QACxE,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QACpE,OAAO,gBAAgB,GAAG,EAAE,IAAI,cAAc,GAAG,EAAE,CAAC;IACtD,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,OAAO,KAAK,CAAC;QAC5C,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAAE,OAAO,KAAK,CAAC;QAEjD,6EAA6E;QAC7E,IACE,6BAAa,CAAC,wBAAwB;YACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,gBAAS,CAAC,YAAY;YACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EACpE;YACA,OAAO,KAAK,CAAC;SACd;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG,6BAAa,CAAC,iBAAiB,CAAC;QAE/C,uEAAuE;QACvE,IACE,6BAAa,CAAC,wBAAwB;YACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EACpE;YACA,QAAQ,IAAI,CAAC,CAAC,CAAC,8CAA8C;SAC9D;QAED,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,OAAO,KAAK,CAAC;QAC5C,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAAE,OAAO,KAAK,CAAC;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG,6BAAa,CAAC,uBAAuB,CAAC;QAErD,6EAA6E;QAC7E,IACE,6BAAa,CAAC,wBAAwB;YACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EACpE;YACA,QAAQ,IAAI,CAAC,CAAC,CAAC,oDAAoD;SACpE;QAED,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,SAAoB;QAClD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;QAC7B,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO;QAE5E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAEO,cAAc,CAAC,EACrB,CAAC,EACD,CAAC,EACD,SAAS,GAKV;QACC,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,mBAAmB,KAAK,OAAO,EAAE;YAC5D,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B;IACH,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SAC1E;IACH,CAAC;IACO,mBAAmB;QACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;YAClC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;IACH,CAAC;CAsBF;AAxMD,wCAwMC;;;;;;;;;;;;;;;AC7MD,mEAA0C;AAC1C,wGAAsD;AACtD,uGAAoD;AACpD,6GAAyD;AACzD,gGAAiD;AACjD,gGAAmD;AACnD,gFAA6C;AAC7C,sFAAyC;AACzC,0GAAqD;AAErD,0FAA6C;AAC7C,2FAA4C;AAC5C,sEAA6C;AAC7C,iHAA0D;AAC1D,6HAAiE;AAEjE,MAAa,cAAc;IAoBzB,YAAY,MAAc;QAqB1B,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC;QACF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACtC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBACnD,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;gBACzB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC;oBAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;aACjD;YACD,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE;gBACrD,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;gBACzB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI;oBAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACtD;QACH,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,IAAI,CAAC,sBAAsB,GAAG,CAAC;gBAAE,IAAI,CAAC,sBAAsB,IAAI,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,sBAAsB,KAAK,CAAC;gBAAE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACxE,CAAC,CAAC;QAEF;;;;WAIG;QACH,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YAEjD,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACpB,WAAI,CAAC,OAAO,CACV,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EACtB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EACtB,CAAC,EACD,CAAC,EACD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACjC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACrD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EAAE,CAClB,CAAC;aACH;iBAAM,IACL,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,mBAAmB,KAAK,OAAO;gBACxD,IAAI,CAAC,aAAa,EAAE;gBACpB,CAAC,6BAAa,CAAC,QAAQ,EACvB;gBACA,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;gBACtE,IAAI,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBACnC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK,IAAI,CAAC,GAAG;oBAAE,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAClE,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE;oBAAE,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAChE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,EAAE;oBAAE,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAC9D,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG;oBAAE,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAEhE,WAAI,CAAC,OAAO,CACV,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,CAAC,EACD,CAAC,EACD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACjC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACrD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EAAE,CAClB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;oBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,WAAI,CAAC,OAAO,CACV,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,EACxB,CAAC,EACD,CAAC,EACD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACjC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EACrD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EAAE,CAClB,CAAC;aACH;YACD,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzE,kBAAkB;aACnB;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YACtE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE;gBAAE,OAAO,IAAI,CAAC;YAC1C,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG;gBAAE,OAAO,IAAI,CAAC;YAC5C,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,CAAC,GAAG;gBAAE,OAAO,IAAI,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;gBAAE,OAAO,IAAI,CAAC;YAC5C,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,MAAM,CAAC,aAAa;gBAAE,OAAO,KAAK,CAAC;YACtE,IAAI,CAAC,GAAG,GAAG,CAAC;YACZ,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YAClC,IACE,CAAC,GAAG,KAAK,gBAAS,CAAC,EAAE,IAAI,OAAO,KAAK,gBAAS,CAAC,IAAI,CAAC;gBACpD,CAAC,GAAG,KAAK,gBAAS,CAAC,IAAI,IAAI,OAAO,KAAK,gBAAS,CAAC,EAAE,CAAC;gBACpD,CAAC,GAAG,KAAK,gBAAS,CAAC,IAAI,IAAI,OAAO,KAAK,gBAAS,CAAC,KAAK,CAAC;gBACvD,CAAC,GAAG,KAAK,gBAAS,CAAC,KAAK,IAAI,OAAO,KAAK,gBAAS,CAAC,IAAI,CAAC;gBAEvD,CAAC,GAAG,GAAG,CAAC;YACV,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAAC;YAC5E,IAAI,SAAS,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;;gBAC3B,OAAO,KAAK,CAAC;QACpB,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAAC;YAC5E,MAAM,CAAC,GAAG,EAAE,CAAC;YAEb,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,CAAC;gBAC/C,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;oBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,EAAE,CAAC,EAC7C;gBACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,IAAI,CAAC;aACb;YACD,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,KAAK,CAAC;gBAChD,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,KAAK;oBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,EAAE,CAAC,EAC7C;gBACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,IAAI,CAAC;aACb;YACD,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;gBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,KAAK,CAAC;gBAChD,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,KAAK;oBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,CAAC,EAC/C;gBACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,IAAI,CAAC;aACb;YACD,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;gBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,CAAC;gBAC/C,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;oBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,CAAC,EAC/C;gBACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,IAAI,CAAC;aACb;YACD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;gBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,EAAE,EAC1C;gBACA,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE;oBACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACX,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;iBACb;gBACD,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACb;YACD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,IAAI;gBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,KAAK,EAC7C;gBACA,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE;oBACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;iBACZ;gBACD,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACb;YACD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,EAC5C;gBACA,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE;oBACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACX,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;iBACb;gBACD,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACb;YACD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,gBAAS,CAAC,KAAK;gBACzC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,gBAAS,CAAC,IAAI,EAC5C;gBACA,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE;oBACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;iBACZ;gBACD,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,GAAG,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAChB,eAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChE,6BAA6B;gBAE7B,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBAC9D,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBAC9B;aACF;YACD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1B,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,YAAY,qBAAS,EAAE;gBAC1D,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAe,CAAC;gBACjE,SAAS,CAAC,SAAS,CACjB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAC1B,KAAK,CACN,CAAC;aACH;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3B,IAAI,CAAC,6BAAa,CAAC,2BAA2B,EAAE;gBAC9C,OAAO,OAAO,CAAC;aAChB;iBAAM;gBACL,MAAM,IAAI,GAAI,IAAI,CAAC,MAAc,CAAC,OAAO;oBACvC,CAAC,CAAE,IAAI,CAAC,MAAc,CAAC,OAAO,EAAE;oBAChC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC1E,OAAO,aAAK,CAAC,QAAQ,CACnB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC;aACH;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YAEjD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACxB,KAAK,EACL,IAAI,CAAC,MAAM,CAAC,MAAM,EAClB,IAAI,CAAC,MAAM,CAAC,SAAS,EACrB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAC1B,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAC3D,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC;gBAC5B,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC;gBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;aAC3D;YACD,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAClB;YAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;YAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,6BAAa,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;QACnD,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAa,EAAE,EAAE;YAC9B,wFAAwF;YACxF,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC;YAE1B,2CAA2C;YAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEjD,0CAA0C;YAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;gBAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YAC9C,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;gBAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC;QAEF,eAAU,GAAG,GAAY,EAAE;YACzB,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;QAC1E,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAY,EAAE;YAC1B,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACxE,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,KAAa,EAAE,gBAAyB,KAAK,EAAE,EAAE;YAC1D,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACrB,qDAAqD;gBACrD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE3D,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC;oBAAE,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;gBACxD,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBACxB;gBAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;gBAE/C,wCAAwC;gBACxC,MAAM,cAAc,GAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAClE,8BAA8B;gBAC9B,IAAI,WAAW,GAAG,cAAc,GAAG,6BAAa,CAAC,QAAQ,CAAC;gBAE1D,yDAAyD;gBACzD,IAAI,WAAW,GAAG,IAAI,EAAE;oBACtB,WAAW,GAAG,IAAI,CAAC;iBACpB;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,MAAM,GAAG,CAAC,CAAC;oBACf,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;wBAC3B,KAAK;4BACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACvD,CAAC;gCACD,6BAAa,CAAC,QAAQ,CAAC;wBACzB,MAAM;4BACJ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACvD,CAAC;gCACD,6BAAa,CAAC,QAAQ,CAAC;qBAC1B;oBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3C,IAAI,OAAO,GAAG,6BAAa,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAEpD,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;wBACvC,IACE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;4BACnC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EACjC;4BACA,kBAAkB;4BAClB,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAC7B,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ;gCAC3C,CAAC;gCACD,MAAM;gCACN,OAAO,EACT,IAAI,EACJ,IAAI,CACL,CAAC;yBACH;6BAAM;4BACL,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAC7B,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ;gCAC3C,CAAC;gCACD,MAAM;gCACN,OAAO,EACT,IAAI,EACJ,IAAI,CACL,CAAC;yBACH;qBACF;yBAAM;wBACL,WAAI,CAAC,MAAM,CACT,KAAK,EACL,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAC7B,6BAAa,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ;4BAC3C,CAAC;4BACD,MAAM;4BACN,OAAO,EACT,IAAI,EACJ,IAAI,CACL,CAAC;qBACH;iBACF;gBACD,yBAAyB;gBACzB,IAAI,KAAK;oBAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;gBACvE,IAAI,CAAC,aAAa;oBAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;gBACnD,MAAM,YAAY,GAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAC3C,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAC1C,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;gBAC9C,MAAM,gBAAgB,GACpB,IAAI,CAAC,MAAM,CAAC,kBAAkB;oBAC9B,+BAAc,CAAC,6BAA6B,CAC1C,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAC/B,CAAC;gBACJ,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CACtE,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAC1C,CAAC,QAAQ,CAAC;gBAEX,MAAM,OAAO,GACX,6BAAa,CAAC,0BAA0B;oBACxC,CAAC,aAAa;oBACd,CAAC,YAAY;oBACb,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB;oBAC7B,CAAC,CAAC,QAAQ;oBACV,CAAC,CAAC,6BAAa,CAAC,4BAA4B;wBACxC,CAAC,CAAC,aAAa,IAAI,iBAAiB,CAAC,IAAI,YAAY,CAAC;wBACxD,CAAC,CAAC,WAAW;wBACb,CAAC,CAAC,6BAAa,CAAC,kCAAkC;4BAC9C,gBAAgB;4BAClB,CAAC,CAAC,gBAAgB;4BAClB,CAAC,CAAC,MAAM,CAAC;gBAEjB,IAAI,6BAAa,CAAC,kBAAkB,EAAE;oBACpC,qBAAS,CAAC,IAAI,CACZ,KAAK,EACL,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,MAAM,CAAC,OAAO;wBACjB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;wBACvB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAC9C,IAAI,CAAC,MAAM,CAAC,OAAO,CACpB,EACL,IAAI,CAAC,MAAM,EACX,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,yBAAW,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EACzC,OAAO,CACR,CAAC;iBACH;aACF;iBAAM;gBACL,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;gBACrD,MAAM,SAAS,GAAG,oBAAY,CAAC,QAAQ,EAAE,CAAC;gBAC1C,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;gBAClC,sCAAsC;gBACtC,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAChC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;oBACb,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACnC,OAAO,GAAG,CAAC;gBACb,CAAC,EACD,EAA4B,CAC7B,CAAC;gBAEF,0BAA0B;gBAC1B,MAAM,KAAK,GAAa,EAAE,CAAC;gBAE3B,gCAAgC;gBAChC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,OAAO,EAAE;oBACrC,KAAK,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;iBAC3D;qBAAM;oBACL,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACzB;gBAED,MAAM,UAAU,GAAI,IAAI,CAAC,MAAc,CAAC,OAAO;oBAC7C,CAAC,CAAE,IAAI,CAAC,MAAc,CAAC,OAAO,EAAE;oBAChC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC1E,KAAK,CAAC,IAAI,CAAC,kBAAkB,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;gBAEjD,yBAAyB;gBACzB,KAAK,CAAC,IAAI,CACR,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,CAClC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EACf,CAAC,CACF,2BAA2B,CAC7B,CAAC;gBAEF,oBAAoB;gBACpB,MAAM,UAAU,GAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE;oBACrD,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,KAAK,EAAE,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;gBAEH,+CAA+C;gBAC/C,IAAI,aAAa,GAAG,iCAAiC,CAAC;gBACtD,IAAI,6BAAa,CAAC,QAAQ;oBAAE,aAAa,GAAG,gBAAgB,CAAC;gBAC7D,MAAM,UAAU,GAAG,WAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,2BAA2B;gBAEtE,8DAA8D;gBAC9D,MAAM,iBAAiB,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,+BAA+B;gBACzE,MAAM,oBAAoB,GAAG,EAAE,CAAC,CAAC,kBAAkB;gBACnD,MAAM,YAAY,GAAG,EAAE,CAAC;gBACxB,MAAM,oBAAoB,GACxB,iBAAiB,GAAG,oBAAoB,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,gBAAgB;gBAE/E,sFAAsF;gBACtF,MAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAC9B,CAAC,EACD,6BAAa,CAAC,MAAM,GAAG,oBAAoB,GAAG,SAAS,CACxD,CAAC;gBAEF,iDAAiD;gBACjD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc;gBAChD,MAAM,YAAY,GAAG,WAAW,GAAG,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC,uBAAuB;gBAEzF,2BAA2B;gBAC3B,MAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,GAAG,YAAY,CAAC,CAAC;gBACxE,MAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CACjC,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,UAAU,CAAC,CAC7C,CAAC;gBAEF,mBAAmB;gBACnB,IAAI,cAAc,GAAG,kBAAkB,CAAC;gBACxC,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC;gBAC1C,wGAAwG;gBACxG,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,CAAC;gBAC1E,IAAI,UAAU,GAAG,CAAC,EAAE;oBAClB,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,kBAAkB,GAAG,CAAC,CAAC,CAAC;oBACrD,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,CAAC;iBACvE;gBACD,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,UAAU,CAAC;gBAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC,EAClD,UAAU,GAAG,CAAC,CACf,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,WAAW,CAAC;gBAE/C,MAAM,QAAQ,GAAG,WAAW,GAAG,cAAc,CAAC;gBAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,cAAc,CAAC,CAAC;gBACpE,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAE1D,4EAA4E;gBAC5E,IAAI,MAAM,GAAG,SAAS,CAAC;gBAEvB,eAAe;gBACf,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBAC5B,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;oBAC/C,MAAM,OAAO,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC3D,WAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;oBACrE,MAAM,IAAI,OAAO,CAAC;gBACpB,CAAC,CAAC,CAAC;gBAEH,gCAAgC;gBAChC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC9B,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;oBAC/C,WAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;oBACrE,MAAM,IAAI,UAAU,CAAC;gBACvB,CAAC,CAAC,CAAC;gBAEH,wCAAwC;gBACxC,IAAI,UAAU,GAAG,CAAC,EAAE;oBAClB,MAAM,SAAS,GAAG,QAAQ,WAAW,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;oBAC1D,MAAM,CAAC,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;oBAC5C,MAAM,CAAC,GAAG,6BAAa,CAAC,MAAM,GAAG,oBAAoB,GAAG,CAAC,CAAC;oBAC1D,WAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC9D;gBAED,oDAAoD;gBACpD,MAAM,gBAAgB,GAAG,WAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;gBAC/D,MAAM,QAAQ,GAAG,6BAAa,CAAC,MAAM,GAAG,oBAAoB,GAAG,CAAC,CAAC;gBACjE,WAAI,CAAC,QAAQ,CACX,aAAa,EACb,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,gBAAgB,GAAG,CAAC,EAC9C,QAAQ,CACT,CAAC;gBAEF,wDAAwD;gBACxD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE;oBACnC,MAAM,SAAS,GAAG,QAAQ,GAAG,UAAU,GAAG,CAAC,CAAC;oBAE5C,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CACrC,CAAC,KAAK,CAAC;oBACR,MAAM,WAAW,GAAG,SAAS,GAAG,EAAE,CAAC;oBACnC,MAAM,SAAS,GAAG,CAAC,6BAAa,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;oBAE1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,SAAS,CAAC;oBAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,SAAS,CAAC;oBAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iBACxC;gBAED,4CAA4C;gBAC5C,IAAI,CAAC,6BAAa,CAAC,QAAQ,IAAI,UAAU,GAAG,CAAC,EAAE;oBAC7C,MAAM,IAAI,GAAG,6BAA6B,CAAC;oBAC3C,MAAM,SAAS,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;oBAC/C,MAAM,KAAK,GACT,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,6BAAa,CAAC,MAAM,GAAG,EAAE,CAAC;wBACjE,oBAAoB;wBACpB,CAAC,CAAC;oBACJ,IAAI,KAAK,GAAG,6BAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpC,WAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;qBACrE;iBACF;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBACtC,sFAAsF;oBACtF,oCAAoC;oBACpC,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;oBACrE,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK;yBAC/C,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,UAAU,CAAC;yBAChD,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;wBACd,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,SAAS,EAAE,IAAI,CAAC,UAAU;qBAC3B,CAAC,CAAC,CAAC;oBAEN,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAO,CAAC,kDAAmB,CAAC,CAAC;oBAEzD,kDAAkD;oBAClD,6BAAmB,EAAC;wBAClB,EAAE,EAAE,SAAS,CAAC,EAAE;wBAChB,KAAK,EAAE,SAAS,CAAC,KAAK;wBACtB,cAAc;wBACd,SAAS,EAAE,cAAc;wBACzB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI;wBACvC,aAAa,EAAE,OAAO;wBACtB,UAAU,EAAE,SAAS,CAAC,UAAU;wBAChC,WAAW,EAAE,SAAS,CAAC,WAAW;wBAClC,YAAY,EAAE,UAAU,CAAC,KAAK;wBAC9B,WAAW,EAAE,SAAS,CAAC,WAAW;wBAClC,cAAc,EAAE,SAAS,CAAC,cAAc;wBACxC,cAAc,EAAE,SAAS,CAAC,cAAc;wBACxC,UAAU,EAAE,kCAAa,GAAE;wBAC3B,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;wBAC5C,YAAY,EAAE,SAAS,CAAC,YAAY;wBACpC,SAAS,EAAE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBAC5C,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO;wBACrC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB;qBACxD,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;iBAC1C;aACF;YACD,2BAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO;gBAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEvC,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI;gBAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;YAE5B,kCAAkC;YAClC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;gBAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,iBAAiB;oBAC3B,CAAC;wBACD,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;aAC3C;;gBAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC;YACzC,MAAM,IAAI,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACpC,WAAI,CAAC,MAAM,CACT,EAAE;gBACA,IAAI,CAAC,GAAG,CACN,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAC7D,EACH,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,EACJ,6BAAa,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,EACnC,CAAC,EACD,CAAC,CACF,CAAC;YACF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAE;YAC3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YACjD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;YAChD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;YACD,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAClD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,qCAAqC;YACrE,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,sCAAsC;aACvE;YAED,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;YAEnE,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,QAAQ;YACR,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAChD,oDAAoD;gBACpD,MAAM,cAAc,GAAG,GAAG,CAAC,CAAC,iDAAiD;gBAC7E,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,cAAc,CAAC;gBACtC,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC;gBAE7B,MAAM,cAAc,GAAG,WAAI,CAAC,GAAG,CAAC,oBAAoB,CAClD,CAAC,EACD,6BAAa,CAAC,MAAM,EACpB,CAAC,EACD,CAAC,6BAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAC/B,CAAC;gBAEF,8BAA8B;gBAC9B,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACpC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,qBAAqB;oBAC1D,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,CAAC,4BAA4B;gBAC5E,CAAC,CAAC,CAAC;gBAEH,qBAAqB;gBACrB,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;gBAElD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,cAAc,CAAC;gBACpC,WAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,6BAAa,CAAC,KAAK,EAAE,6BAAa,CAAC,MAAM,CAAC,CAAC;gBAEnE,sCAAsC;gBACtC,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;gBAClD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aACzB;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC;QAEF;;;;WAIG;QACH,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE;YACjC,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;gBAC5B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,mBAAmB,KAAK,UAAU;gBAC3D,6BAAa,CAAC,QAAQ;gBAEtB,OAAO;YACT,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,gCAAgC;YAEjD,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;gBAC1B,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;gBAEjC,OAAO;YACT,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,oBAAoB;YACpC,IAAI,KAAK,GAAG,CAAC,CAAC;YAEd,WAAI,CAAC,MAAM,CACT,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAU,CAAC,KAAK,CAAC,EACpC,KAAK,EACL,CAAC,EACD,CAAC,EACD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC5C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC5C,CAAC,EACD,CAAC,CACF,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACjD,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAChD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACjE,CAAC,CAAC;QA30BA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;CA0zBF;AAj2BD,wCAi2BC;;;;;;;;;;;;;;;ACh3BD,mEAA+B;AAC/B,wGAAsD;AAEtD,+FAA0C;AAE1C,yFAA2C;AAa3C,MAAa,UAAW,SAAQ,uBAAU;IAqExC,YAAY,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,MAAc;QACxE,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QApBhB,WAAM,GAAY,IAAI,CAAC;QACvB,SAAI,GAAW,CAAC,CAAC;QACzB,UAAK,GAAW,CAAC,CAAC;QAKlB,YAAO,GAAW,UAAU,CAAC,OAAO,CAAC;QACrC,oBAAe,GAAW,UAAU,CAAC,gBAAgB,CAAC;QACtD,eAAU,GAAW,UAAU,CAAC,UAAU,CAAC;QAC3C,kBAAa,GAAW,UAAU,CAAC,cAAc,CAAC;QAClD,gBAAW,GAAW,UAAU,CAAC,YAAY,CAAC;QAC9C,gBAAW,GAAW,UAAU,CAAC,YAAY,CAAC;QAC9C,YAAO,GAAW,UAAU,CAAC,OAAO,CAAC;QACrC,oBAAe,GAAW,UAAU,CAAC,gBAAgB,CAAC;QACtD,kBAAa,GAAW,UAAU,CAAC,cAAc,CAAC;QAClD,eAAU,GAAW,UAAU,CAAC,UAAU,CAAC;QAC3C,aAAQ,GAAW,UAAU,CAAC,QAAQ,CAAC;QA2LvC,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC;QA2FF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,MAAM,CACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,KAAK,EACV,CAAC,EACD,KAAK,EACL,IAAI,CAAC,kBAAkB,CACxB,CAAC;QACJ,CAAC,CAAC;QAlSA,MAAM,MAAM,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC1E,MAAM,MAAM,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC1E,MAAM,IAAI,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACxE,MAAM,IAAI,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACxE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;IAC1C,CAAC;IACD;;;;;;;;;;;;;;OAcG;IACH,UAAU,CACR,OAAgB,EAChB,eAAwB,EACxB,UAAmB,EACnB,aAAsB,EACtB,WAAoB,EACpB,WAAoB,EACpB,OAAgB,EAChB,eAAwB,EACxB,aAAsB,EACtB,UAAmB,EACnB,QAAiB;QAEjB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,IAAI,UAAU,CAAC,gBAAgB,CAAC;QACtE,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,UAAU,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,WAAW,IAAI,UAAU,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,WAAW,IAAI,UAAU,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,IAAI,UAAU,CAAC,gBAAgB,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,UAAU,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC;IAClD,CAAC;IAED,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,EAAU,EAAE,EAAU;QACpD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CACJ,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,QAAgB,IAAI,CAAC,KAAK,EAC1B,YAAoB,CAAC,EACrB,QAAgB,CAAC,GAAG,EAAE,EACtB,qBAA6B,IAAI,CAAC,kBAAkB;QAEpD,MAAM,MAAM,GACV,IAAI,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACjE,MAAM,MAAM,GACV,IAAI,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACjE,MAAM,IAAI,GACR,IAAI,CAAC,OAAO,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACvE,MAAM,IAAI,GACR,IAAI,CAAC,OAAO,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAEvE,MAAM,WAAW,GACf,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC5D,MAAM,WAAW,GACf,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC5D,MAAM,SAAS,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACxE,MAAM,SAAS,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAExE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,GAAG,SAAS,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,GAAG,SAAS,CAAC;SAC7C;QACD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACpE,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,GAAG,SAAS,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,GAAG,SAAS,CAAC;SAC3C;QAED,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAErD,MAAM,GAAG,GAAG,WAAI,CAAC,GAAG,CAAC;QACrB,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,WAAI,CAAC,GAAG,CAAC,wBAAwB;YAC/B,kBAA8C,CAAC;QACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAE9B,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAEnD,MAAM,UAAU,GAAG,EAAE,GAAG,KAAK,CAAC;YAC9B,MAAM,UAAU,GAAG,EAAE,GAAG,KAAK,CAAC;YAE9B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEb,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,KAAK,EAAE,IAAI,EAAE,EAAE;gBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;oBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;wBAClC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;wBACtB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC1D;iBACF;gBACD,CAAC,IAAI,UAAU,CAAC;gBAChB,CAAC,IAAI,UAAU,CAAC;aACjB;SACF;QAED,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAEO,gBAAgB,CACtB,MAAc,EACd,MAAc,EACd,IAAY,EACZ,IAAY;QAEZ,MAAM,MAAM,GAAY,EAAE,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;gBACV,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAC/B,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAC/B,IAAI,EAAE,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAClC,IAAI,EAAE,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAClC,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,CAAC;gBACZ,KAAK,EAAE,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC;aACnC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,eAAe,CAAC,KAAY,EAAE,KAAa;QACjD,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAE1E,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAE5D,KAAK,CAAC,SAAS,IAAI,WAAW,CAAC;QAC/B,KAAK,CAAC,SAAS,IAAI,WAAW,CAAC;QAE/B,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAC5C,IAAI,CAAC,WAAW,CACjB,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAC5C,IAAI,CAAC,WAAW,CACjB,CAAC;IACJ,CAAC;IAQO,YAAY,CAClB,MAAc,EACd,MAAc,EACd,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,MAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QAE/D,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,mBAAmB,EAAE,SAAS,EAAE,EAAE;YACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAErC,MAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;gBACxE,MAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;gBACxE,MAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;gBACxE,MAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;gBAExE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAE/B,KAAK,CAAC,SAAS;oBACb,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,GAAG,gBAAgB,CAAC;wBACvD,IAAI,CAAC,OAAO,CAAC;gBACf,KAAK,CAAC,SAAS;oBACb,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,GAAG,gBAAgB,CAAC;wBACvD,IAAI,CAAC,OAAO,CAAC;gBAEf,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBAC7D,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBAC7D,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBAC7D,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBAE7D,KAAK,CAAC,SAAS;oBACb,CAAC,cAAc,GAAG,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBACzD,KAAK,CAAC,SAAS;oBACb,CAAC,cAAc,GAAG,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBAEzD,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;gBACrB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;gBAErB,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC;gBAC3B,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;aAC3C;YAED,MAAM,aAAa,GACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClE,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAEtB,KACE,IAAI,mBAAmB,GAAG,CAAC,EAC3B,mBAAmB,GAAG,CAAC,EACvB,mBAAmB,EAAE,EACrB;gBACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAE9B,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBACvB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC9C,MAAM,UAAU,GAAG,aAAa,GAAG,QAAQ,CAAC;oBAC5C,MAAM,OAAO,GAAG,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAC;oBAC1C,MAAM,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC;oBAC7B,MAAM,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC;oBAE7B,IAAI,CAAC,GAAG,CAAC,EAAE;wBACT,EAAE,CAAC,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;wBACtB,EAAE,CAAC,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;qBACvB;oBACD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9B,EAAE,CAAC,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;wBACtB,EAAE,CAAC,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;qBACvB;iBACF;aACF;SACF;QAED,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAClD,CAAC;IAgBD,MAAM,CAAC,UAAU,CACf,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,QAAgB,MAAM,EACtB,YAAoB,CAAC,EACrB,QAAgB,CAAC;QAEjB,MAAM,GAAG,GAAG,WAAI,CAAC,GAAG,CAAC;QACrB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;QAExB,MAAM,MAAM,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC1E,MAAM,MAAM,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC1E,MAAM,IAAI,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QACxE,MAAM,IAAI,GAAG,EAAE,GAAG,6BAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAExE,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC3B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;QAC1B,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;QACxB,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,GAAG,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;AA9YH,gCA+YC;AA9YC,gFAAgF;AAChF,iCAAiC;AACT,mBAAQ,GAAG,EAAE,CAAC;AAEtC,wDAAwD;AACxD,8BAA8B;AACN,kBAAO,GAAG,CAAC,CAAC;AAEpC,iFAAiF;AACjF,8BAA8B;AACN,qBAAU,GAAG,CAAC,CAAC;AAEvC,2DAA2D;AAC3D,6BAA6B;AACL,2BAAgB,GAAG,CAAC,CAAC;AAE7C,kEAAkE;AAClE,+BAA+B;AACP,qBAAU,GAAG,GAAG,CAAC;AAEzC,2CAA2C;AAC3C,+BAA+B;AACP,yBAAc,GAAG,GAAG,CAAC;AAE7C,2CAA2C;AAC3C,+BAA+B;AACP,uBAAY,GAAG,IAAI,CAAC,CAAC,8BAA8B;AAE3E,6CAA6C;AAC7C,mCAAmC;AACX,uBAAY,GAAG,GAAG,CAAC;AAE3C,8DAA8D;AAC9D,qCAAqC;AACb,kBAAO,GAAG,GAAG,CAAC;AAEtC,kDAAkD;AAClD,mCAAmC;AACX,2BAAgB,GAAG,IAAI,CAAC;AAEhD,yCAAyC;AACzC,qCAAqC;AACb,yBAAc,GAAG,GAAG,CAAC;;;;;;;;;;;;;;;AC9D/C,+FAA0C;AAC1C,mEAA+B;AAM/B,iGAAgD;AAGhD,+FAA0C;AAG1C,MAAa,WAAY,SAAQ,uBAAU;IAQzC,YACE,MAAqB,EACrB,CAAS,EACT,CAAS,EACT,SAAiB,CAAC,EAClB,eAAwB,IAAI;QAE5B,KAAK,CAAC,MAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA4B7B,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAChE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,KAAK,IAAI,CACpC,CAAC;YAEF,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1C,CAAC,UAAU,EAAE,EAAE,CACb,UAAU,YAAY,uBAAU,IAAI,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CACxE,CAAC;YACF,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;YACD,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC;QAEF,yBAAoB,GAAG,GAAG,EAAE;YAC1B,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;gBAAE,OAAO;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;YAC7D,oCAAoC;QACtC,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,MAAc,EAAE,EAAE;YACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;YAChC;;;;;;;cAOE;YAEF,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;YACD,OAAO,gBAAgB,CAAC;QAC1B,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAE,IAAI,CAAC,MAAc,CAAC,IAAI,EAAE;gBAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,OAAO;aACR;YACD,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE;gBACrB,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,IAAI,CAAC,MAAM,IAAK,IAAI,CAAC,MAAc,CAAC,IAAI,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAChE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,KAAK,IAAI,CACpC,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAEpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9C,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,YAAY,CAAC;YACjD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACxB,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC3B,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,CAAC,EACD,CAAC,CACF,CAAC;aACH;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAhHA,IAAI,CAAC,MAAM,GAAG,MAAa,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,gFAAgF;QAChF,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAE,IAAI,CAAC,MAAc,CAAC,IAAI,EAAE;YAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,mBAAQ,CAAC,cAAc,CACxC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACX,GAAG,EACH,EAAE,CACH,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;CAwFF;AAjID,kCAiIC;;;;;;;;;;;;;;;AC9ID,+FAA0C;AAC1C,mEAA+B;AAM/B,kFAAuC;AACvC,uGAAoD;AAEpD,0GAAsD;AAEtD,MAAa,mBAAoB,SAAQ,uBAAU;IAMjD,YAAY,IAAU,EAAE,KAAa,EAAE,CAAS,EAAE,CAAS;QACzD,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QANZ,eAAU,GAAG,CAAC,CAAC;QAyBxB,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBAAE,aAAK,CAAC,UAAU,EAAE,CAAC;YAE1D,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtC,IACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EACtC;oBACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;oBAC9C,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAC/D,CAAC;aACH;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEtB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;YAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,EAAE,EACF,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,EACnC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QA9DA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC;QAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EACZ,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;CA+CF;AAvED,kDAuEC;;;;;;;;;;;;;;;ACnFD,+FAA0C;AAC1C,mEAA+B;AAI/B,iGAAgD;AAChD,sFAAyC;AAEzC,+FAA6C;AAC7C,MAAa,SAAU,SAAQ,uBAAU;IAOvC,YAAY,MAAc,EAAE,CAAS,EAAE,CAAS,EAAE,WAAmB;QACnE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QA0CtB,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC;gBAAE,IAAI,CAAC,WAAW,IAAI,EAAE,GAAG,KAAK,CAAC;YACzD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;gBACzB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;aAC5B;YAED,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACtC,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;QAlDA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW;YACd,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACtE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,mBAAQ,CAAC,cAAc,CACrB,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,GAAG,EACH,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EACb,GAAG,EACH,EAAE,EACF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAC3B,CAAC;QACF,MAAM,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;QAEF,IAAI,MAAM,GACR,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC5C,IACE,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACnB,MAAM,KAAK,IAAI,CAAC,MAAM,EACtB;gBACA,IAAI,MAAM,YAAY,WAAI,EAAE;oBAC1B,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;iBACvB;gBACD,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aAClC;YACD,IAAI,WAAW,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;gBACxD,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aAClC;SACF;IACH,CAAC;CAWF;AA5DD,8BA4DC;;;;;;;;;;;;;;;ACrED,+FAA0C;AAC1C,mEAA+B;AAI/B,iGAAgD;AAChD,sFAAyC;AACzC,MAAa,cAAe,SAAQ,uBAAU;IAO5C,YAAY,MAAc,EAAE,CAAS,EAAE,CAAS;QAC9C,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiBtB,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC;gBAAE,IAAI,CAAC,WAAW,IAAI,EAAE,GAAG,KAAK,CAAC;YACzD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;gBACzB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;aAC5B;YAED,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;gBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACtC,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;QAzBA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW;YACd,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,mBAAQ,CAAC,cAAc,CACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAC3C,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,GAAG,EACH,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EACb,GAAG,EACH,EAAE,EACF,CAAC,CACF,CAAC;IACJ,CAAC;CAWF;AAnCD,wCAmCC;;;;;;;;;;;;;;;ACxCD,iGAAgD;AAKhD,8HAAgE;AAEhE,MAAa,UAAW,SAAQ,mBAAQ;IAUtC,YAAY,MAAuB,EAAE,CAAS,EAAE,CAAS;QACvD,KAAK,EAAE,CAAC;QAmBV,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE,GAAE,CAAC,CAAC;QACnC,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAEjC,SAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAChB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAC7B,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAvBnC,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE7C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,EAAU,EAAE,EAAU,IAAG,CAAC;CAQ3D;AApCD,gCAoCC;;;;;;;;;;;;;;;AC7CD,+FAA0C;AAC1C,mEAA+B;AAY/B,MAAa,aAAc,SAAQ,uBAAU;IAO3C,YAAY,MAAc,EAAE,CAAS,EAAE,CAAS;QAC9C,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAHtB,UAAK,GAAW,CAAC,CAAC;QASlB,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAChE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,KAAK,IAAI,CACpC,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;gBAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC9B;YACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC;YAC7C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;YAC3B,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAEnC,gDAAgD;YAChD,mDAAmD;YACnD,6BAA6B;YAC7B,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC3B,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACjC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,EACvC,CAAC,EACD,CAAC,CACF,CAAC;YACF,GAAG;YACH,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QA3CA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;CAyCF;AArDD,sCAqDC;;;;;;;;;;;;;;;AClED,+FAA0C;AAC1C,mEAA+B;AAG/B,uGAAoD;AAGpD,0GAAsD;AACtD,iGAAgD;AAChD,sFAAyC;AACzC,yFAA2C;AAE3C,MAAa,cAAe,SAAQ,uBAAU;IAW5C,YAAY,MAAmB,EAAE,CAAS,EAAE,CAAS;QACnD,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAuBtB,mBAAc,GAAG,GAAG,EAAE;YACpB,uCAAuC;YACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBAClC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBAEtB,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CACpD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,CAChC,CAAC;gBACF,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAC/B,IAAI,uBAAU,CACZ,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CAAC,MAAM,CAAC,CAAC,EACb,IAAI,CACL,CACF,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,mBAAQ,CAAC,cAAc,CACrB,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACA,IAAI,CAAC,MAAsB,CAAC,eAAe,EAC5C,GAAG,EACH,CAAC,EACD,GAAG,CACJ,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;aAC5C;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBAClC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO;YACtB;;;;;;;;;gBASI;YAEJ,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBACnB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBACpB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;oBAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACpC,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,CACF,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBAC3B,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;oBAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;wBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACpC,WAAI,CAAC,MAAM,CACT,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAC3B,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CACF,CAAC;iBACH;qBAAM;oBACL,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,OAAO;qBACR;oBACD,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;oBAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;wBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACtC,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxE;aACF;QACH,CAAC,CAAC;QAlIA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,yBAAyB;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACA,MAAsB,CAAC,eAAe,EACvC,GAAG,CACJ,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,oCAAoC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,aAAK,CAAC,QAAQ,CAC7B,IAAI,CAAC,MAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,EAC9C,IAAI,CAAC,MAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,EAC9C,IAAI,CAAC,MAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAChD,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC1B,CAAC;CA8GF;AAhJD,wCAgJC;;;;;;;;;;;;;;;AC5JD,yFAA2C;AAmB3C;;GAEG;AACH,MAAa,aAAa;IAMxB,YAAY,IAAU,EAAE,UAA6B,EAAE;QAH/C,oBAAe,GAA+B,EAAE,CAAC;QACjD,mBAAc,GAA+B,EAAE,CAAC;QAGtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG;YACb,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,CAAC;YAC7C,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG;YACnC,oBAAoB,EAAE,OAAO,CAAC,oBAAoB,IAAI,EAAE;YACxD,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,KAAK;YACjD,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;SACrD,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,0BAA0B,CAAC,QAAgB;QACzC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE/C,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,EAAE,CAAC;SACX;QAED,mDAAmD;QACnD,IACE,IAAI,CAAC,OAAO,CAAC,eAAe;YAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAC/C;YACA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAC3C,CAAC;YACF,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC3C;QAED,+BAA+B;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACnE,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aAC9B;iBAAM;gBACL,MAAM,CAAC,0BAA0B;aAClC;SACF;QAED,OAAO,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACK,iBAAiB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,QAAkC;QACxD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAC7B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CACzD,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,aAAa,CAAC,QAAkC;QACtD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAC9C,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAC5D,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC;SACb;QAED,kEAAkE;QAClE,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACrD,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC,CAAC;QAEJ,iDAAiD;QACjD,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAE1E,IAAI,UAAU,IAAI,CAAC,EAAE;YACnB,uDAAuD;YACvD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAC3C,CAAC;YACF,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;QAED,oCAAoC;QACpC,MAAM,WAAW,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC;QAC/C,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;YAC9B,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC;YAC9B,IAAI,eAAe,IAAI,WAAW,EAAE;gBAClC,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;SACF;QAED,wBAAwB;QACxB,OAAO,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED;;OAEG;IACK,kBAAkB,CAAC,IAA8B;QACvD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAEnC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEtD,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE;gBACjD,yCAAyC;gBACzC,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;gBACvE,KAAK,IAAI,SAAS,CAAC;aACpB;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,iBAAiB,CACvB,IAA8B,EAC9B,IAA8B;QAE9B,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,CAAC;CACF;AAxJD,sCAwJC;;;;;;;;;;;;;;;AC9KD,kBAAkB;AAClB,6EAAoC;AACpC,6GAAyD;AACzD,gFAAsC;AACtC,mEAAsD;AACtD,6EAA8C;AAC9C,6EAA8C;AAC9C,kHAA0D;AAC1D,uFAAsD;AACtD,kGAA+C;AAG/C,+FAAgD;AAEhD,wGAAsD;AACtD,+GAAwD;AACxD,qGAAiD;AACjD,kGAA+C;AAC/C,gFAAsC;AACtC,iGAAgD;AAEhD,4FAA8C;AAG9C,oHAA2D;AAG3D,uGAAoD;AACpD,yFAA4C;AAC5C,+FAAgD;AAChD,2HAA+D;AAC/D,2HAA+D;AAC/D,oIAAqE;AACrE,gFAAsC;AACtC,sGAAkD;AAClD,6HAAiE;AACjE,4FAA8C;AAE9C,kHAA0D;AAE1D,8FAA6C;AAC7C,8FAA6C;AAE7C,uFAA2D;AAC3D,4GAAsD;AACtD,kHAA0D;AAC1D,wHAA8D;AAC9D,yFAA2C;AAI3C,kHAA0D;AAC1D,2HAAuD;AAEvD,uIAAwE;AACxE,8GAAuD;AAEvD,+GAAwD;AACxD,4GAAsD;AACtD,2HAAgE;AAChE,gGAA8C;AAC9C,+GAA6D;AAC7D,qHAAiE;AACjE,qFAA+C;AAC/C,qGAA8C;AAI9C,4FAA4C;AAC5C,4GAAsD;AACtD,2GAAsD;AACtD,2HAAwD;AAExD,2HAAgE;AAEhE,uHAA4D;AAC5D,+FAA6C;AAC7C,kFAAuC;AACvC,kGAA+C;AAE/C,oIAAsE;AACtE,+GAAwD;AACxD,kHAA0D;AAC1D,4FAA4C;AAC5C,2HAAgE;AAGhE,+FAA8C;AAC9C,qHAA4D;AAC5D,iHAA4D;AAG5D,kHAA6D;AAC7D,sFAAyC;AACzC,+FAA6C;AAC7C,8HAAgE;AAChE,kHAA0D;AAC1D,qHAA4D;AAC5D,4GAAsD;AACtD,kHAA0D;AAC1D,qHAA4D;AAC5D,0EAAkC;AAClC,qHAA4D;AAE5D,aAAa;AAEb,6BAA6B;AAC7B;;GAEG;AACH,IAAY,SAgCX;AAhCD,WAAY,SAAS;IACnB,0BAAa;IACb,0BAAa;IACb,8BAAiB;IACjB,4BAAe;IACf,0CAA6B;IAC7B,8BAAiB;IACjB,0BAAa;IACb,8BAAiB;IACjB,4CAA+B;IAC/B,kCAAqB;IACrB,4BAAe;IACf,8BAAiB;IACjB,oCAAuB;IACvB,sCAAyB;IACzB,gCAAmB;IACnB,oCAAuB;IACvB,0BAAa;IACb,0CAA6B;IAC7B,4BAAe;IACf,8BAAiB;IACjB,oCAAuB;IACvB,gCAAmB;IACnB,0BAAa;IACb,oCAAuB;IACvB,8BAAiB;IACjB,gCAAmB;IACnB,0BAAa;IACb,8BAAiB;IACjB,gCAAmB;IACnB,gCAAmB;IACnB,6BAA6B;AAC/B,CAAC,EAhCW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAgCpB;AAED;;GAEG;AACU,oBAAY,GAAwC;IAC/D,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,qBAAS;IAC3B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,qBAAS;IAC3B,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,uBAAU;IAC7B,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,gCAAiB;IAC3C,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,qBAAS;IAC3B,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,uCAAkB;IAC7C,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,6BAAa;IACnC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,uBAAU;IAC7B,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,+BAAc;IACrC,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,4BAAe;IACvC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,iBAAO;IAC5B,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,+BAAc;IACrC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAI;IACtB,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,qCAAiB;IAC3C,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,uBAAU;IAC7B,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,+BAAc;IACrC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,2BAAY;IACjC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAI;IACtB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,qBAAS;IAChC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,2BAAY;IACjC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,qBAAS;IAC3B,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,yBAAW;IAC/B,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,2BAAY;IACjC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,2BAAY;IACjC,gCAAgC;CACjC,CAAC;AAEF,IAAY,QA2BX;AA3BD,WAAY,QAAQ;IAClB,2BAAe;IACf,+BAAmB;IACnB,yBAAa;IACb,qCAAyB;IACzB,iCAAqB;IACrB,iCAAqB;IACrB,6BAAiB;IACjB,2BAAe;IACf,6BAAiB;IACjB,+BAAmB;IACnB,qCAAyB;IACzB,yBAAa;IACb,iCAAqB;IACrB,2CAA+B;IAC/B,iCAAqB;IACrB,qCAAyB;IACzB,yBAAa;IACb,+BAAmB;IACnB,yBAAa;IACb,+BAAmB;IACnB,iCAAqB;IACrB,iCAAqB;IACrB,iCAAqB;IACrB,mCAAuB;IACvB,6BAAiB;IACjB,6BAAiB;AACnB,CAAC,EA3BW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QA2BnB;AAED,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,qDAAU;IACV,yDAAY;AACd,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAeD,IAAY,aASX;AATD,WAAY,aAAa;IACvB,gCAAe;IACf,8BAAa;IACb,gCAAe;IACf,8BAAa;IACb,oCAAmB;IACnB,sCAAqB;IACrB,0CAAyB;IACzB,4CAA2B;AAC7B,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB;AAmBD,MAAa,IAAI;IAkGf,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,EACT,IAAc,EACd,KAAa,EACb,QAAgB,EAChB,KAAY,EACZ,IAAI,GAAG,eAAM,CAAC,IAAI,EAClB,OAAgB;QA7ElB,wFAAwF;QAChF,0BAAqB,GAAW,CAAC,CAAC;QAc1C,SAAI,GAAW,EAAE,CAAC;QAQlB,eAAU,GAAG,SAAS,CAAC;QAEvB,aAAQ,GAA0B,IAAI,GAAG,EAAE,CAAC;QAM5C,eAAU,GAAS,IAAI,CAAC,CAAC,iEAAiE;QAM1F,gBAAW,GAAW,CAAC,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QACxB,aAAQ,GAAW,CAAC,CAAC;QACrB,kBAAa,GAAW,CAAC,CAAC;QAC1B,iBAAY,GAAW,CAAC,CAAC;QAKzB,mDAAmD;QACnD,gBAAW,GAAiB,EAAE,CAAC;QAE/B,mDAAmD;QAC3C,iBAAY,GAAwB,EAAE,CAAC;QAE/C,0BAA0B;QAClB,cAAS,GAAc;YAC7B,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,KAAK;YACd,kBAAkB,EAAE,CAAC;SACtB,CAAC;QACM,uBAAkB,GAAY,KAAK,CAAC;QAC5C,uEAAuE;QACvE,2BAAsB,GAAW,CAAC,CAAC;QA0InC,8BAA8B;QAE9B,eAAU,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,WAAI,EAAE;gBACxC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC7B;YACD,0EAA0E;YAC1E,0EAA0E;QAC5E,CAAC,CAAC;QA6HF,YAAO,GAAG,CACR,CAAS,EACT,CAAS,EACT,OAAa,IAAI,EACjB,aAAsB,KAAK,EAC3B,EAAE;YACF,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,GAAG,eAAQ,CAAC,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;gBAAE,CAAC,GAAG,eAAQ,CAAC,WAAW,CAAC;YAC1D,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO;gBAAE,CAAC,GAAG,eAAQ,CAAC,UAAU,CAAC;YAC5D,IAAI,UAAU;gBAAE,CAAC,GAAG,eAAQ,CAAC,UAAU,CAAC;YACxC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;gBACpB,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,gBAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3D;iBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;gBAC5C,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,gBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3D;iBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;gBAC3B,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,gBAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3D;iBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7C,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,gBAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3D;YAED,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBACpC,gCAAgC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAE7B,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAkSF,oDAAoD;QACpD;;;;WAIG;QACH,gBAAW,GAAG,CAAC,SAAoB,EAAQ,EAAE;YAC3C,MAAM,UAAU,GAAG,oBAAY,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,eAAe,SAAS,sBAAsB,CAAC,CAAC;gBAC9D,OAAO;aACR;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACnC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,kDAAkD;gBAClD,OAAO;aACR;YAED,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO;aACR;YACD,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAExB,IAAI,SAAS,KAAK,SAAS,CAAC,SAAS,EAAE;gBACrC,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,EAAE;oBACb,OAAO;iBACR;gBACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;aACvB;YAED,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,SAAoB,EAAQ,EAAE;YAC7C,MAAM,UAAU,GAAG,oBAAY,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,EAAE;gBACf,gEAAgE;gBAChE,OAAO;aACR;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACnC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,kDAAkD;gBAClD,OAAO;aACR;YAED,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,iBAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC;QAgFF,aAAa;QAEb,0CAA0C;QAE1C,oBAAe,GAAG,CAAC,SAAgB,EAAE,EAAE;YACrC,8CAA8C;YAC9C,IAAI,CAAC,SAAS;gBAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACjD,IACE,IAAI,CAAC,iBAAiB,CACpB,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,EACrD,SAAS,CAAC,KAAK,EACf,SAAS,EACT,IAAI,CACL;gBACD,IAAI,CAAC,iBAAiB,CACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,EAC3C,IAAI,CAAC,KAAK,EACV,IAAI,EACJ,IAAI,CACL,EACD;gBACA,SAAS,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;gBAClD,SAAS,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aACnD;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,uDAAuD;YAEvD,WAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,WAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAElC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC3B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU;oBAAE,SAAS;gBACxC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC3B,IAAI,CAAC,EAAE,CAAC,WAAW;oBAAE,SAAS;gBAC9B,IAAI,CAAC,EAAE,CAAC,IAAI;oBAAE,SAAS;gBACvB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE;oBACtC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;oBACrB,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;oBACrB,oEAAoE;oBACpE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC1B;aACF;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,WAAI,CAAC,EAAE;gBAC9D,0BAA0B;gBAC1B,0BAA0B;gBAC1B,MAAM,IAAI,GAAG,CAAS,CAAC;gBACvB,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChC,GAAG;aACJ;QACH,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,WAAI,CAAC,EAAE;gBAC9D,0BAA0B;gBAC1B,0BAA0B;gBAE1B,MAAM,IAAI,GAAG,CAAS,CAAC;gBACvB,IAAI,IAAI,CAAC,GAAG,EAAE;oBACZ,aAAK,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtC;aACF;QACH,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,MAAc,EAAE,EAAE;YAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC3B;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,0EAA0E;YAE1E,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,MAAc,EAAE,QAAmC,EAAE,EAAE;YACnE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5B,wFAAwF;YACxF,IAAI,WAAW,GAAI,IAAY,CAAC,yBAEnB,CAAC;YACd,IAAI,WAAW,EAAE;gBACf,OAAQ,IAAY,CAAC,yBAAyB,CAAC;aAChD;YACD,IAAI,UAAU,GAAG,WAAW,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YAEjE,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;gBACxD,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;aAChE;YAED,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAErB,kFAAkF;YAClF,IAAI,CAAC,QAAQ,IAAI,CAAC,WAAW,EAAE;gBAC7B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpC,IAAI,IAAI,YAAY,uBAAU,EAAE;4BAC9B,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;4BACX,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;yBACZ;qBACF;iBACF;aACF;YAED,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,MAAc,EAAE,IAAU,EAAE,IAAa,EAAE,EAAE;YACpE,qEAAqE;YACrE,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpC,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YACD,IAAI,IAAI,YAAY,WAAI,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE,EAAE;gBACzD,aAAa;gBACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACzC;iBAAM,IAAI,IAAI,YAAY,WAAI,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;gBAClE,gBAAgB;gBAChB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACzC;iBAAM,IACL,IAAI,YAAY,WAAI;gBACpB,CAAC,gBAAS,CAAC,KAAK,EAAE,gBAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EACxD;gBACA,eAAe;gBACf,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,IAAI,CAAC,YAAY,aAAK;oBAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAChD;QACH,CAAC,CAAC;QAEF,aAAa;QAEb,wBAAwB;QAExB,SAAI,GAAG,CAAC,MAAc,EAAE,EAAE;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,MAAM,CAAC,gBAAgB,EAAE,CAAC;YAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACxC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,aAAK,CAC1B,CAAC,MAAM,CAAC;YACT,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,CAAC,CAAC,IAAI,EAAE,CAAC;aACV;YACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,CAAC,CAAC,IAAI,EAAE,CAAC;aACV;YAED,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAErD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC7B;aACF;YAED,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC;YAEnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAE3B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAEzB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,qBAAqB;YACrB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,CAAC,CAAC,IAAI,EAAE,CAAC;aACV;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACrD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,CAAC,CAAC,IAAI,EAAE,CAAC;aACV;YAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE;oBACpD,IAAI,CAAC;wBAAE,CAAC,CAAC,IAAI,EAAE,CAAC;iBACjB;aACF;YAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,IACE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAClC;oBACA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;iBACf;gBACD,CAAC,CAAC,iBAAiB,EAAE,CAAC;aACvB;YAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,IACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAElC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBAChB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACjC,IACG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAS,CAAC,OAAO,EAAE,EAAE,KAAK,IAAI;wBAClD,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9B,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B;wBACA,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnC;iBACF;gBACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAC7B,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;wBAC9B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;qBACf;iBACF;aACF;YAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAChC;aACF;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,qCAAqC;YAE3F,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAE/B,2EAA2E;YAE3E,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,sEAAsE;YAEtE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,YAAY,EAAE;gBACvC,MAAM,KAAK,GAAI,IAAI,CAAC,IAAY,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE;oBAC7D,CAAC,CAAC,6BAAa,CAAC,0BAA0B;oBAC1C,CAAC,CAAC,+BAAc,CAAC,mBAAmB,CAAC;gBACvC,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;oBAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC;QAEF;;;WAGG;QACH,yBAAoB,GAAG,GAAG,EAAE;YAC1B,IAAI,MAAM,GAAG,KAAK,CAAC;YACnB,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACrD,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;oBACtC,IAAI,CAAC,YAAY,SAAG,EAAE;wBACpB,CAAC,CAAC,gBAAgB,EAAE,CAAC;wBACrB,MAAM,GAAG,IAAI,CAAC;wBACd,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;qBACvB;iBACF;aACF;YAED,IAAI,CAAC,MAAM,EAAE;gBACX,OAAO;aACR;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,WAEL,CAAC;YACd,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC3C,yDAAyD;gBACzD,IAAI,GAAG,GAAG,KAAK,CAAC;gBAChB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC9B,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,iBAAiB,EAAE;wBAC7C,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;wBACd,GAAG,GAAG,IAAI,CAAC;qBACZ;iBACF;gBACD,IAAI,GAAG,IAAI,CAAC,QAAQ;oBAAE,OAAO;aAC9B;YAED,qEAAqE;YACrE,MAAM,SAAS,GAAG,IAAI,GAAG,CAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC9B,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,iBAAiB,EAAE;oBAC7C,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,oCAAoC;oBAChG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;wBACvB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;qBACf;iBACF;aACF;YAED,mDAAmD;YACnD,MAAM,aAAa,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;gBACtD,IAAI,CAAC,QAAQ;oBAAE,OAAO,KAAK,CAAC;gBAC5B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC9B,IACE,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,iBAAiB;wBACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBACrB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC5B,CAAC,CAAC,CAAC,IAAI;wBAEP,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;YACf,CAAC,CAAC;YACF,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAC/B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE;oBAChC,MAAM,QAAQ,GACZ,IAAI,CAAC,6GAAsD,CAAC,CAC1D,GAAG,CAAC,CAAC,EACL,GAAG,CAAC,CAAC,CACN,CAAC;oBACJ,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC9B,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;wBACrB,OAAO,CAAC,GAAG,CACT,0CAA0C,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAC5D,CAAC;iBACL;aACF;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,YAAY;gBAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,2CAA2C;QAC5G,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;oBACvD,CAAC,CAAC,IAAI,EAAE,CAAC;iBACV;aACF;QACH,CAAC,CAAC;QAEF,aAAa;QAEb,2BAA2B;QAE3B,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClD,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,IAAI,GAAG,KAAK,CAAC;oBACjB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI;wBAAE,IAAI,GAAG,IAAI,CAAC;oBAE1C,IAAI,CAAC,IAAI;wBAAE,SAAS;oBAEpB,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC;oBAExB,OAAO,IAAI,OAAO,CAAC;oBAEnB,IAAI,OAAO,GAAG,CAAC;wBAAE,OAAO,GAAG,CAAC,CAAC;oBAC7B,IAAI,OAAO,GAAG,CAAC;wBAAE,OAAO,GAAG,CAAC,CAAC;oBAE7B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;oBAE7B,yDAAyD;iBAC1D;aACF;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,KAAa,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjD,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEnD,wBAAwB;oBACxB,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;oBAC5B,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;oBAC5B,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;oBAE5B,IAAI,KAAK,GAAG,KAAK,CAAC;oBAClB,IAAI,KAAK,GAAG,KAAK,CAAC;oBAClB,IAAI,KAAK,GAAG,KAAK,CAAC;oBAClB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK;wBAAE,KAAK,GAAG,IAAI,CAAC;oBAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK;wBAAE,KAAK,GAAG,IAAI,CAAC;oBAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK;wBAAE,KAAK,GAAG,IAAI,CAAC;oBAE1C,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;wBAC9B,SAAS;qBACV;oBAED,0CAA0C;oBAC1C,IAAI,KAAK,EAAE;wBACT,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;qBACvE;oBACD,IAAI,KAAK,EAAE;wBACT,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;qBACvE;oBACD,IAAI,KAAK,EAAE;wBACT,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;qBACvE;iBACF;aACF;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW;oBAAE,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC5C,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,WAAW;oBAC/C,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,4BAAuB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;YAC7D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC;YACvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,CAAC,CAAC;YACjB,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QACvC,CAAC,CAAC;QAEF,2BAAsB,GAAG,GAAG,EAAE;YAC5B,sDAAsD;YACtD,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YAEzB,MAAM,gBAAgB,GAAG;gBACvB,CAAC,gBAAS,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC/B,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBAChC,CAAC,gBAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBAChC,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aACnC,CAAC;YACF,IAAI,WAAW,GAAW,EAAE,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO;oBAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;gBAC3B,MAAM,OAAO,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,2BAA2B;gBACzD,MAAM,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnE,gFAAgF;gBAChF,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBACrC,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBAErC,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;gBAChE,IAAI,CAAC,IAAI;oBACP,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAClE,IAAI,IAAI,EAAE;oBACR,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC7B,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;oBAClC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,+BAAc,CAAC,qBAAqB,CAAC;iBACxD;aACF;YAED,IAAI,cAAc,GAAc,IAAI,GAAG,CACrC,IAAI,CAAC,KAAK;iBACP,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,mCAAmC;iBACpE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;iBAC7B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CACpB,CAAC;YAEF,iFAAiF;YACjF,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAC1C,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,kBAAkB;oBAAE,CAAC,CAAC,cAAc,EAAE,CAAC;aAC5D;QACH,CAAC,CAAC;QAEF,yBAAoB,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO;YACzB,+DAA+D;YAC/D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3C,uCAAuC;YACvC,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,CACjE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,KAAK,IAAI,CACpC,CAAC,MAAM,CAAC;YAET,qDAAqD;YACrD,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,+BAAc,CAAC,mBAAmB,CAAC,CAAC;YAE3E,yEAAyE;YACzE,IAAI,gBAAgB,GAAG,CAAC,CAAC;YACzB,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE;gBAClC,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,+BAAc,CAAC,qBAAqB,CAAC,CAAC;aAC1E;YACD,gBAAgB,IAAI,aAAa,GAAG,+BAAc,CAAC,qBAAqB,CAAC;YAEzE,0DAA0D;YAC1D,MAAM,iBAAiB,GAAG,gBAAgB,GAAG,cAAc,CAAC;YAC5D,MAAM,cAAc,GAAG,SAAS,GAAG,iBAAiB,CAAC;YAErD,6CAA6C;YAC7C,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;YAE7C,cAAc;YACd,2IAA2I;YAC3I,IAAI;QACN,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAC3B,IAAI,IAAI,CAAC,kBAAkB;gBAAE,OAAO;YACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAE/B,4CAA4C;YAC5C,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,iCAAiC;YACjC,gDAAgD;YAChD,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACf,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAE9B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iBAC9B;aACF;YACD,+BAA+B;YAC/B,mDAAmD;YAEnD,+CAA+C;YAC/C,uDAAuD;YACvD,oEAAoE;YACpE,4EAA4E;YAC5E,+BAA+B;YAC/B,IAAI;gBACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE;oBAClD,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5B,wBAAwB;oBACxB,IACE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;wBACnB,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;wBAC5B,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;wBACnB,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;wBAE7B,OAAO,KAAK,CAAC;oBAEf,iCAAiC;oBACjC,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;wBAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;4BAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gCAAE,OAAO,IAAI,CAAC;yBACrD;qBACF;oBACD,OAAO,KAAK,CAAC;gBACf,CAAC,CAAC,CAAC;aACJ;YAAC,MAAM,GAAE;YAEV,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACjC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;oBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,+BAAc,CAAC,mBAAmB,EAAE;wBAChE,IAAI,CAAC,eAAe,CAClB,CAAC,EACD,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,CAAC,GAAG,+BAAc,CAAC,sCAAsC,CAC5D,CAAC,CAAC,oBAAoB;qBACxB;iBACF;aACF;YACD,0DAA0D;YAC1D,kDAAkD;YAClD,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,IAAI,iBAAiB,GAAG,+BAAc,CAAC,mBAAmB,CAAC;YAE3D,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAK,MAAc,CAAC,OAAO,EAAE,EAAE,KAAK,IAAI,EAAE;oBACxC,oCAAoC;oBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,iBAAiB,EAAE;wBAC/C,IAAI,UAAU,GAAG,+BAAc,CAAC,mBAAmB,CAAC;wBACpD,IAAI,eAAe,GAAG,CAAC,CAAC;wBACxB,IAAI,MAAM,CAAC,aAAa,EAAE;4BACxB,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;4BAC/B,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;yBAC1C;wBACD,IAAI,OAAO,GAAG,CAAC,CAAC;wBAChB,IAAI,OAAO,GAAG,CAAC,CAAC;wBAChB,QAAQ,MAAM,CAAC,SAAS,EAAE;4BACxB,KAAK,gBAAS,CAAC,EAAE;gCACf,OAAO,GAAG,CAAC,CAAC,CAAC;gCACb,MAAM;4BACR,KAAK,gBAAS,CAAC,IAAI;gCACjB,OAAO,GAAG,CAAC,CAAC;gCACZ,MAAM;4BACR,KAAK,gBAAS,CAAC,IAAI;gCACjB,OAAO,GAAG,CAAC,CAAC,CAAC;gCACb,MAAM;4BACR,KAAK,gBAAS,CAAC,KAAK;gCAClB,OAAO,GAAG,CAAC,CAAC;yBACf;wBACD,IAAI,CAAC,eAAe,CAClB,CAAC,EACD,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,EACxB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO;wBACxB;;;;;;;;0BAQE;wBACF,+BAAc,CAAC,qBAAqB,EACpC,UAAU,EAAE,oBAAoB;wBAChC,eAAe;4BACb,+BAAc,CAAC,sCAAsC,CACxD,CAAC;qBACH;iBACF;aACF;YACD,+CAA+C;YAC/C,qDAAqD;YAErD,sCAAsC;YACtC,qDAAqD;YACrD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC1C,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACF;YACD,oCAAoC;YACpC,wDAAwD;YAExD,2CAA2C;YAC3C,uDAAuD;YACvD,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC1C,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtD;aACF;YACD,yCAAyC;YACzC,0DAA0D;YAC1D,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,gEAAgE;YAChE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,WAAyB,EAAE,MAAgB,EAAE,EAAE;YACnE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;YACvB,IAAI,WAAW,EAAE;gBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,+BAAc,CAAC,mBAAmB,EAAE;oBAChE,IAAI,CAAC,MAAM,EAAE;wBACX,IAAI,CAAC,eAAe,CAClB,CAAC,EACD,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC;4BACX,+BAAc,CAAC,sCAAsC,CACxD,CAAC,CAAC,oBAAoB;qBACxB;yBAAM;wBACL,IAAI,CAAC,iBAAiB,CACpB,CAAC,EACD,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC,EACb,WAAW,CAAC,CAAC;4BACX,+BAAc,CAAC,sCAAsC,CACxD,CAAC;qBACH;iBACF;aACF;YACD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjE;aACF;YAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtD;aACF;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACxB,oCAAoC;YACpC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,CAAC,CAAC;QAEF;;;;;;;;;;WAUG;QACK,uBAAkB,GAAG,CAC3B,KAAa,EACb,EAAU,EACV,EAAU,EACV,MAAc,EACd,KAA+B,EAC/B,UAAkB,EAClB,SAA4B,MAAM,EAClC,EAAE;YACF,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAC7C,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAE7C,8CAA8C;YAC9C,MAAM,WAAW,GAA6B;gBAC5C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC5B,CAAC;YAEF,KACE,IAAI,CAAC,GAAG,CAAC,EACT,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,+BAAc,CAAC,qBAAqB,EAAE,MAAM,CAAC,EAC3D,CAAC,EAAE,EACH;gBACA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBAEzC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC;oBAAE,OAAO,CAAC,mBAAmB;gBAE3E,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAAE,OAAO,CAAC,uCAAuC;gBAEpE,oDAAoD;gBACpD,IAAI,SAAiB,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,EAAE;oBACX,SAAS,GAAG,UAAU,GAAG,GAAG,CAAC;iBAC9B;qBAAM;oBACL,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;iBAC/C;gBACD,IAAI,SAAS,GAAG,KAAK;oBAAE,SAAS,GAAG,CAAC,CAAC;gBAErC,IAAI,SAAS,IAAI,CAAC;oBAAE,SAAS;gBAE7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;oBAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;iBAClC;gBACD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;oBAC1C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;iBAC5C;gBAED,IAAI,6BAAa,CAAC,mBAAmB,EAAE;oBACrC,kCAAkC;oBAClC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,CACxD,CAAC;oBACF,IAAI,MAAM,EAAE;wBACV,+CAA+C;wBAC/C,6EAA6E;wBAC7E,MAAM,mBAAmB,GAAqC;4BAC5D,WAAW,CAAC,CAAC,CAAC;4BACd,WAAW,CAAC,CAAC,CAAC;4BACd,WAAW,CAAC,CAAC,CAAC;4BACd,SAAS;yBACV,CAAC;wBAEF,IAAI,MAAM,KAAK,MAAM,EAAE;4BACrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;yBACjE;6BAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;4BAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CACjE,QAAQ,CACT,CAAC,MAAM,CACN,CAAC,UAAU,EAAE,EAAE,CACb,CAAC,CACC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;gCACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;gCACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;gCACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAC1D,CACJ,CAAC;yBACH;wBACD,OAAO,CAAC,+CAA+C;qBACxD;iBACF;gBACD,gCAAgC;gBAEhC,iEAAiE;gBACjE,IAAI,IAAI,YAAY,WAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBACjE,MAAM,mBAAmB,GAAqC;wBAC5D,WAAW,CAAC,CAAC,CAAC;wBACd,WAAW,CAAC,CAAC,CAAC;wBACd,WAAW,CAAC,CAAC,CAAC;wBACd,SAAS;qBACV,CAAC;oBAEF,IAAI,MAAM,KAAK,MAAM,EAAE;wBACrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;qBACjE;yBAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;wBAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CACjE,QAAQ,CACT,CAAC,MAAM,CACN,CAAC,UAAU,EAAE,EAAE,CACb,CAAC,CACC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;4BACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;4BACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;4BACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAC1D,CACJ,CAAC;qBACH;oBACD,OAAO,CAAC,6CAA6C;iBACtD;gBAED,MAAM,mBAAmB,GAAqC;oBAC5D,WAAW,CAAC,CAAC,CAAC;oBACd,WAAW,CAAC,CAAC,CAAC;oBACd,WAAW,CAAC,CAAC,CAAC;oBACd,SAAS;iBACV,CAAC;gBAEF,IAAI,MAAM,KAAK,MAAM,EAAE;oBACrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBACjE;qBAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CACjE,QAAQ,CACT,CAAC,MAAM,CACN,CAAC,UAAU,EAAE,EAAE,CACb,CAAC,CACC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;wBACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;wBACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;wBACzD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAC1D,CACJ,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QA0BF;;;;;;;;;WASG;QACH,oBAAe,GAAG,CAChB,KAAa,EACb,EAAU,EACV,EAAU,EACV,MAAc,EACd,KAA+B,EAC/B,UAAkB,EAClB,EAAE;YACF,IAAI,CAAC,kBAAkB,CACrB,KAAK,EACL,EAAE,EACF,EAAE,EACF,MAAM,EACN,KAAK,EACL,UAAU,GAAG,CAAC,EACd,MAAM,CACP,CAAC;QACJ,CAAC,CAAC;QAEF;;;;;;;;;WASG;QACH,sBAAiB,GAAG,CAClB,KAAa,EACb,EAAU,EACV,EAAU,EACV,MAAc,EACd,KAA+B,EAC/B,UAAkB,EAClB,EAAE;YACF,IAAI,CAAC,kBAAkB,CACrB,KAAK,EACL,EAAE,EACF,EAAE,EACF,MAAM,EACN,KAAK,EACL,UAAU,GAAG,CAAC,EAAE,aAAa;YAC7B,QAAQ,CACT,CAAC;QACJ,CAAC,CAAC;QAEM,iBAAY,GAAG,CAAC,KAAa,EAAU,EAAE;YAC/C,MAAM,UAAU,GAAG,KAAK,GAAG,GAAG,CAAC;YAC/B,IAAI,UAAU,IAAI,OAAO,EAAE;gBACzB,OAAO,UAAU,GAAG,KAAK,CAAC;aAC3B;iBAAM;gBACL,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;aACpD;QACH,CAAC,CAAC;QAEM,iBAAY,GAAG,CAAC,KAAa,EAAU,EAAE;YAC/C,IAAI,KAAK,IAAI,SAAS,EAAE;gBACtB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;aACxC;iBAAM;gBACL,OAAO,IAAI,CAAC,KAAK,CACf,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAC3D,CAAC;aACH;QACH,CAAC,CAAC;QAEF,UAAK,GAAG,CAAC,KAAa,EAAE,MAAc,CAAC,EAAE,MAAc,CAAC,EAAU,EAAE;YAClE,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF;;;;;WAKG;QACK,qBAAgB,GAAG,CACzB,MAAmE,EACvB,EAAE;YAC9C,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1C,uCAAuC;YACvC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CACvB,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;gBACtB,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;gBACpC,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;gBACpC,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aACrC,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV,CAAC;YAEF,oDAAoD;YACpD,MAAM,aAAa,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,mBAAmB;YACrD,MAAM,SAAS,GAAG;gBAChB,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa;gBACtB,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa;gBACtB,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa;aACvB,CAAC;YAEF,mDAAmD;YACnD,MAAM,UAAU,GAA6B;gBAC3C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAC/B,CAAC;YACF,uBAAuB;YACvB,OAAO;gBACL,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACjC,CAAC;QACJ,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAA+B,EAAU,EAAE;YAC3D,kBAAkB;YAClB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC5E,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,uBAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;iBAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;YAED,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;YAE5B,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC3D,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;aACpC;QACH,CAAC,CAAC;QACF,wEAAwE;QACxE,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,mCAAmC;YACnC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC9B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YAEF,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,gEAAgE;YAChE,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YACjC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAEjC,gDAAgD;YAChD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;wBAAE,SAAS,CAAC,mBAAmB;oBAEhE,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;oBAE9C,IAAI,SAAS,KAAK,aAAa,EAAE;wBAC/B,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;wBAC7C,aAAa,GAAG,SAAS,CAAC;qBAC3B;oBAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACnD,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACnD,6BAAa,CAAC,QAAQ,EACtB,6BAAa,CAAC,QAAQ,CACvB,CAAC;iBACH;aACF;YAED,sCAAsC;YACtC,IAAI,6BAAa,CAAC,cAAc,EAAE;gBAChC,8BAA8B;gBAC9B,MAAM,YAAY,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;gBAErD,qCAAqC;gBACrC,IACE,IAAI,CAAC,kBAAkB,EAAE;oBACzB,IAAI,CAAC,SAAS,CAAC,QAAQ;oBACvB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB;oBACA,6BAA6B;oBAC7B,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,YAAY,CAAC;oBACjD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;oBAC3B,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;oBAEF,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,SAAS,CAAC;oBAC9C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC5B,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;iBACH;qBAAM;oBACL,0CAA0C;oBAC1C,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,YAAY,CAAC;oBACjD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;oBAE3B,6BAA6B;oBAC7B,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;oBACxE,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,UAAU,EACV,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;oBAEF,uCAAuC;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;qBAC9C;oBAED,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,SAAS,CAAC;oBAC9C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;oBAE5B,8BAA8B;oBAC9B,MAAM,WAAW,GAAG,YAAY,CAAC,SAAS,CACxC,IAAI,CAAC,oBAAoB,EACzB,EAAE,CACH,CAAC;oBACF,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,WAAW,EACX,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;oBAEF,uCAAuC;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;qBAChD;iBACF;aACF;iBAAM;gBACL,4DAA4D;gBAC5D,WAAI,CAAC,GAAG,CAAC,wBAAwB;oBAC/B,6BAAa,CAAC,+BAA2D,CAAC;gBAC5E,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;gBAE3B,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC;iBAC/B;gBAED,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,oBAAoB,EACzB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;gBAEF,mBAAmB;gBACnB,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,SAAS,CAAC;gBAC9C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;gBAE5B,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,YAAY,CAAC;iBAChC;gBAED,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,oBAAoB,EACzB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;gBAEF,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;aAC1B;YAED,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC9B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YAEF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,6BAAa,CAAC,KAAK,IAAI,CAAC,6BAAa,CAAC,aAAa;gBAAE,OAAO;YAChE,IAAI,6BAAa,CAAC,4BAA4B;gBAAE,OAAO,CAAC,iCAAiC;YACzF,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,WAAI,CAAC,GAAG,CAAC,wBAAwB;gBAC/B,6BAAa,CAAC,+BAA2D,CAAC;YAE5E,mCAAmC;YACnC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC9B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YAEF,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAE3C,IAAI,aAAa,GAAG,EAAE,CAAC;YAEvB,gDAAgD;YAChD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACpC,oBAAoB;oBAEpB,IAAI,KAAK,GACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,IAAI,IAAI,YAAY,qBAAS;wBAAE,SAAS;oBACxC,IAAI,MAAM,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,YAAY,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAI,aAAa,GAAG,KAAK,IAAI,MAAM,GAAG,YAAY,CAAC;oBAEnD,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,SAAS,GAAG,CAAC,CAAC;oBAClB,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,IAAI,IAAI,YAAY,WAAI,EAAE;wBACxB,MAAM,IAAI,GAAG,IAAY,CAAC;wBAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BACnC,QAAQ,IAAI,CAAC,SAAS,EAAE;gCACtB,KAAK,gBAAS,CAAC,EAAE;oCACf,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,SAAS,GAAG,IAAI,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,KAAK;oCAClB,KAAK,GAAG,CAAC,CAAC;oCACV,SAAS,GAAG,IAAI,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,SAAS;oCACtB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,UAAU;oCACvB,KAAK,GAAG,CAAC,CAAC;oCACV,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,OAAO;oCACpB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,QAAQ;oCACrB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;6BACT;yBACF;qBACF;yBAAM,IAAI,IAAI,YAAY,WAAI,EAAE;wBAC/B,MAAM,IAAI,GAAG,IAAY,CAAC;wBAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;4BAAE,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;wBAC5D,QAAQ,IAAI,CAAC,OAAO,EAAE;4BACpB,KAAK,gBAAS,CAAC,EAAE;gCACf,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;gCAChB,UAAU,GAAG,GAAG,CAAC;gCACjB,MAAM;4BACR,KAAK,gBAAS,CAAC,IAAI;gCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;gCAChB,UAAU,GAAG,GAAG,CAAC;gCACjB,MAAM;4BACR,KAAK,gBAAS,CAAC,KAAK;gCAClB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;gCAChB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;gCACjB,SAAS,GAAG,GAAG,CAAC;gCAChB,UAAU,GAAG,CAAC,CAAC;gCACf,MAAM;4BACR,KAAK,gBAAS,CAAC,IAAI;gCACjB,KAAK,GAAG,CAAC,CAAC;gCACV,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;gCACjB,SAAS,GAAG,GAAG,CAAC;gCAChB,UAAU,GAAG,CAAC,CAAC;gCACf,MAAM;yBACT;qBACF;oBACD,MAAM,eAAe,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;oBAEpE,MAAM,SAAS,GAAG,iBAAiB,aAAa,GAAG,eAAe,GAAG,CAAC;oBAEtE,IAAI,SAAS,KAAK,aAAa,EAAE;wBAC/B,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;wBAC7C,aAAa,GAAG,SAAS,CAAC;qBAC3B;oBAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACvD,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACvD,SAAS,GAAG,6BAAa,CAAC,QAAQ,EAClC,UAAU,GAAG,6BAAa,CAAC,QAAQ,CACpC,CAAC;iBACH;aACF;YAED,sCAAsC;YACtC,IAAI,6BAAa,CAAC,cAAc,EAAE;gBAChC,8BAA8B;gBAC9B,MAAM,YAAY,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;gBAErD,qCAAqC;gBACrC,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;oBACxD,4BAA4B;oBAC5B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;iBACH;qBAAM;oBACL,0CAA0C;oBAC1C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;oBAEzB,6BAA6B;oBAC7B,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;oBACxE,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,UAAU,EACV,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;oBAEF,uCAAuC;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;qBAC9C;iBACF;aACF;iBAAM;gBACL,4DAA4D;gBAC5D,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBAEzB,MAAM,UAAU,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE1D,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ,UAAU,KAAK,CAAC;iBAC3C;gBAED,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,oBAAoB,EACzB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;gBAEF,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;aAC1B;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,0FAA0F;QAClF,kCAA6B,GAAG,GAAG,EAAE;YAC3C,mCAAmC;YACnC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC9B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YAEF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YACjC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAEjC,IAAI,aAAa,GAAG,EAAE,CAAC;YAEvB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACpC,IAAI,KAAK,GACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,IAAI,IAAI,YAAY,qBAAS;wBAAE,SAAS;oBACxC,IAAI,MAAM,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,YAAY,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAI,aAAa,GAAG,KAAK,IAAI,MAAM,GAAG,YAAY,CAAC;oBAEnD,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,SAAS,GAAG,CAAC,CAAC;oBAClB,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,IAAI,IAAI,YAAY,WAAI,EAAE;wBACxB,MAAM,IAAI,GAAG,IAAY,CAAC;wBAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BACnC,QAAQ,IAAI,CAAC,SAAS,EAAE;gCACtB,KAAK,gBAAS,CAAC,EAAE;oCACf,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,SAAS,GAAG,IAAI,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,KAAK;oCAClB,KAAK,GAAG,CAAC,CAAC;oCACV,SAAS,GAAG,IAAI,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,SAAS;oCACtB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,UAAU;oCACvB,KAAK,GAAG,CAAC,CAAC;oCACV,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,OAAO;oCACpB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,QAAQ;oCACrB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,SAAS,GAAG,IAAI,CAAC;oCACjB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;6BACT;yBACF;qBACF;yBAAM,IAAI,IAAI,YAAY,WAAI,EAAE;wBAC/B,MAAM,IAAI,GAAG,IAAY,CAAC;wBAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;4BACxB,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;4BAClC,QAAQ,IAAI,CAAC,OAAO,EAAE;gCACpB,KAAK,gBAAS,CAAC,EAAE;oCACf,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,SAAS,GAAG,CAAC,CAAC;oCACd,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,SAAS,GAAG,CAAC,CAAC;oCACd,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,MAAM;gCACR,KAAK,gBAAS,CAAC,KAAK;oCAClB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,SAAS,GAAG,CAAC,CAAC;oCACd,UAAU,GAAG,CAAC,CAAC;oCACf,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,CAAC;oCACV,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,SAAS,GAAG,CAAC,CAAC;oCACd,UAAU,GAAG,CAAC,CAAC;oCACf,MAAM;6BACT;yBACF;6BAAM;4BACL,QAAQ,IAAI,CAAC,OAAO,EAAE;gCACpB,KAAK,gBAAS,CAAC,EAAE;oCACf,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,UAAU,GAAG,GAAG,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,UAAU,GAAG,CAAC,CAAC;oCACf,SAAS,GAAG,CAAC,CAAC;oCACd,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;oCAChB,MAAM;gCACR,KAAK,gBAAS,CAAC,KAAK;oCAClB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,SAAS,GAAG,CAAC,CAAC;oCACd,UAAU,GAAG,CAAC,CAAC;oCACf,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,KAAK,GAAG,CAAC,CAAC;oCACV,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;oCACd,SAAS,GAAG,CAAC,CAAC;oCACd,UAAU,GAAG,CAAC,CAAC;oCACf,MAAM;6BACT;yBACF;qBACF;oBACD,MAAM,eAAe,GAAG,CAAC,6BAAa,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,MAAM,SAAS,GAAG,iBAAiB,aAAa,GAAG,eAAe,GAAG,CAAC;oBACtE,IAAI,SAAS,KAAK,aAAa,EAAE;wBAC/B,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;wBAC7C,aAAa,GAAG,SAAS,CAAC;qBAC3B;oBACD,KAAK,IAAI,CAAC,CAAC;oBACX,KAAK,IAAI,CAAC,CAAC;oBACX,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACvD,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACvD,SAAS,GAAG,6BAAa,CAAC,QAAQ,EAClC,UAAU,GAAG,6BAAa,CAAC,QAAQ,CACpC,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAEF,mGAAmG;QAC3F,oCAA+B,GAAG,GAAsB,EAAE;YAChE,IAAI,6BAAa,CAAC,cAAc,EAAE;gBAChC,MAAM,YAAY,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;gBACrD,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;oBACxD,OAAO,IAAI,CAAC,SAAS,CAAC,QAA6B,CAAC;iBACrD;qBAAM;oBACL,sCAAsC;oBACtC,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;oBACxE,IAAI,CAAC,IAAI,CAAC,MAAM;wBAAE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC/D,OAAO,UAAU,CAAC;iBACnB;aACF;iBAAM;gBACL,0EAA0E;gBAC1E,+CAA+C;gBAC/C,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;oBAC7B,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC5D,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;oBACjE,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;oBACnE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CACzD,IAAI,CACuB,CAAC;iBAC/B;gBACD,MAAM,IAAI,GAAG,IAAI,CAAC,gBAA4C,CAAC;gBAC/D,IAAI,CAAC,SAAS,CACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,mBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,mBAAoB,CAAC,MAAM,CACjC,CAAC;gBACF,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;iBACtB;gBACD,iFAAiF;gBACjF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,OAAO,IAAI,CAAC,mBAAwC,CAAC;aACtD;QACH,CAAC,CAAC;QAEF,gDAAgD;QACxC,0BAAqB,GAAG,CAC9B,QAA2B,EAC3B,KAAa,EACb,KAAa,EACb,OAA0C,EAC1C,EAAE;YACF,MAAM,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAClC,0EAA0E;YAC1E,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YAC5D,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YAC5D,MAAM,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;YACtB,MAAM,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE;gBACZ,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC7D,OAAO;aACR;YAED,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,EAAE,CAAC;gBACrC,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAC3D,IAAI,CACuB,CAAC;aAC/B;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,iBAA6C,CAAC;YAChE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC7B,uBAAuB;YACvB,IAAI,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACvD,6CAA6C;YAC7C,IAAI,IAAI,GAA0B,IAAI,CAAC;YACvC,IAAI,OAAO,KAAK,OAAO,EAAE;gBACvB,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;aACvC;iBAAM,IAAI,OAAO,KAAK,MAAM,EAAE;gBAC7B,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;aACvC;iBAAM,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3B,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;aACvC;iBAAM,IAAI,OAAO,KAAK,MAAM,EAAE;gBAC7B,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;aACvC;YACD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,wBAAwB,GAAG,gBAAgB,CAAC;gBACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;aAC7B;YACD,mBAAmB;YACnB,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAyC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7E,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE;YACjC,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,mCAAmC;YACnC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC9B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YACjC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAEjC,IAAI,aAAa,GAAG,EAAE,CAAC;YAEvB,gDAAgD;YAChD,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC5D,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC;gBACxB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAC3B,IAAI,CAAC,CAAC,QAAQ,EAAE;wBACd,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBACrB,IAAI,CAAC,iBAAiB,CAAC,WAAW;4BAChC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;wBACtD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC;wBAEhD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;4BAC5D,6BAAa,CAAC,QAAQ,EACxB,CAAC,CAAC,CAAC,CAAC;4BACF,CAAC,CAAC,KAAK;4BACP,IAAI,CAAC,KAAK;4BACV,GAAG;4BACH,OAAO;4BACP,GAAG;4BACH,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;4BAChB,6BAAa,CAAC,QAAQ;4BACtB,CAAC,CAAC,YAAY,EAChB,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,SAAS,EACpC,6BAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,SAAS,CACrC,CAAC;qBACH;iBACF;YAEH,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;wBACjC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBACxC,IAAI,CAAC,iBAAiB,CAAC,WAAW;4BAChC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;wBACrE,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBAEnE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACnD,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC1D,6BAAa,CAAC,QAAQ,EACtB,6BAAa,CAAC,QAAQ,GAAG,IAAI,CAC9B,CAAC;qBACH;iBACF;aACF;YAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;gBAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;oBAC9B,IAAI,CAAC,CAAC,QAAQ,EAAE;wBACd,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBACrB,IAAI,CAAC,iBAAiB,CAAC,WAAW;4BAChC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;wBACtD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC;wBAEhD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACrD,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,CAAC,CAAC,YAAY,CAAC;4BAC3C,6BAAa,CAAC,QAAQ,EACxB,6BAAa,CAAC,QAAQ,EACtB,6BAAa,CAAC,QAAQ,CACvB,CAAC;qBACH;iBACF;YAEH,sCAAsC;YACtC,IAAI,6BAAa,CAAC,cAAc,EAAE;gBAChC,8BAA8B;gBAC9B,MAAM,YAAY,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;gBAErD,qCAAqC;gBACrC,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;oBACxD,4BAA4B;oBAC5B,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC;oBAC7C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;iBACH;qBAAM;oBACL,0CAA0C;oBAC1C,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC;oBAC7C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;oBAEzB,6BAA6B;oBAC7B,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;oBACxE,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,UAAU,EACV,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;oBAEF,uCAAuC;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;qBAC9C;iBACF;aACF;iBAAM;gBACL,4DAA4D;gBAC5D,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC;gBAC7C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBAEzB,IAAI,6BAAa,CAAC,cAAc,EAAE;oBAChC,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC;iBAC/B;gBAED,WAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,oBAAoB,EACzB,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,EAC/C,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAChD,CAAC;gBAEF,WAAI,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;aAC1B;YAED,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,kBAAkB,CAAC;YACtD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,CAAC,EACD,CAAC,EACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACjC,CAAC;YACF,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,eAAyB,EAAE,EAAE;YAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,sEAAsE;YACtE,IAAI,cAAc,GAChB,6BAAa,CAAC,aAAa,IAAI,6BAAa,CAAC,4BAA4B,CAAC;YAC5E,IAAI,QAAQ,GAA6B,IAAI,CAAC;YAC9C,IAAI,cAAc,EAAE;gBAClB,+CAA+C;gBAC/C,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;aACnD;YAED,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB;aACF;YAED,IAAI,SAAS,GAAG,IAAI,KAAK,EAAY,CAAC;YACtC,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAU,CAAC;YACnC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAE7D,SAAS,GAAG,SAAS,CAAC,MAAM,CAC1B,KAAK,EACL,IAAI,CAAC,WAAW,EAChB,QAAQ,EACR,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,CACX,CAAC;YAEF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAS,CAAC,OAAO,EAAE,EAAE,KAAK,IAAI,EAAE;oBACtD,IACE,CAAC,CACC,eAAe;wBACf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CACpE;wBAED,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC;aACF;YAED,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACtB,IAAI,CAAC,YAAY,aAAK,IAAI,CAAC,YAAY,uBAAU,EAAE;oBACjD,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM,IAAI,CAAC,YAAY,aAAK,IAAI,CAAC,YAAY,uBAAU,EAAE;oBACxD,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAI,CAAC,YAAY,uBAAU,EAAE;oBAClC,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM,IAAI,CAAC,YAAY,uBAAU,EAAE;oBAClC,OAAO,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE;oBAC7C,MAAM,MAAM,GAAI,CAAS,CAAC,qBAAqB,KAAK,IAAI,CAAC;oBACzD,MAAM,MAAM,GAAI,CAAS,CAAC,qBAAqB,KAAK,IAAI,CAAC;oBACzD,mEAAmE;oBACnE,IAAI,CAAC,YAAY,eAAM,IAAI,MAAM,EAAE;wBACjC,OAAO,CAAC,CAAC,CAAC,CAAC,+CAA+C;qBAC3D;yBAAM,IAAI,CAAC,YAAY,eAAM,IAAI,MAAM,EAAE;wBACxC,OAAO,CAAC,CAAC,CAAC,uBAAuB;qBAClC;oBACD,8BAA8B;oBAC9B,IAAI,CAAC,YAAY,eAAM,EAAE;wBACvB,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,YAAY,eAAM,EAAE;wBAC9B,OAAO,CAAC,CAAC,CAAC;qBACX;yBAAM,IAAI,CAAC,YAAY,eAAM,EAAE;wBAC9B,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,YAAY,eAAM,EAAE;wBAC9B,OAAO,CAAC,CAAC,CAAC;qBACX;yBAAM,IAAI,CAAC,YAAY,mBAAQ,EAAE;wBAChC,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,YAAY,mBAAQ,EAAE;wBAChC,OAAO,CAAC,CAAC,CAAC;qBACX;;wBAAM,OAAO,CAAC,CAAC;iBACjB;qBAAM;oBACL,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;YAEH,4EAA4E;YAC5E,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE;gBACzB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACd,IAAI,cAAc,IAAI,QAAQ,IAAI,CAAC,YAAY,WAAI,EAAE;oBACnD,MAAM,EAAE,GAAI,CAAU,CAAC,CAAC,CAAC;oBACzB,MAAM,EAAE,GAAI,CAAU,CAAC,CAAC,CAAC;oBACzB,MAAM,EAAE,GACN,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,IAAI,EAAE,GAAG,CAAC,EAAE;wBACV,MAAM,MAAM,GAAG,WAAI,CAAC,GAAG;6BACpB,wBAAoD,CAAC;wBACxD,IACE,MAAM;4BACL,6BAAa,CAAC,+BAA4D,EAC3E;4BACA,WAAI,CAAC,GAAG,CAAC,wBAAwB;gCAC/B,6BAAa,CAAC,+BAA2D,CAAC;yBAC7E;wBAED,MAAM,SAAS,GAAG,WAAI,CAAC,GAAG,CAAC,WAAW,CAAC;wBACvC,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;wBAEzB,IAAI,IAAkD,CAAC;wBACvD,IAAI,CAAC,YAAY,WAAI,IAAI,CAAC,CAAC,MAAM,EAAE;4BACjC,QAAQ,CAAC,CAAC,OAAO,EAAE;gCACjB,KAAK,gBAAS,CAAC,IAAI;oCACjB,IAAI,GAAG,MAAM,CAAC;oCACd,MAAM;gCACR,KAAK,gBAAS,CAAC,KAAK;oCAClB,IAAI,GAAG,OAAO,CAAC;oCACf,MAAM;gCACR,KAAK,gBAAS,CAAC,EAAE;oCACf,IAAI,GAAG,SAAS,CAAC;oCACjB,MAAM;gCACR,KAAK,gBAAS,CAAC,IAAI;oCACjB,kCAAkC;oCAClC,IAAI,GAAG,MAAM,CAAC;oCACd,MAAM;6BACT;yBACF;6BAAM,IAAI,CAAC,YAAY,WAAI,EAAE;4BAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;4BAC9C,IAAI,IAAI,IAAK,IAAY,CAAC,eAAe,EAAE;gCACzC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gCAC3C,IAAI,KAAK,YAAY,WAAI,IAAI,KAAK,CAAC,MAAM,EAAE;oCACzC,IAAI,KAAK,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI;wCAAE,IAAI,GAAG,MAAM,CAAC;yCAC/C,IAAI,KAAK,CAAC,OAAO,KAAK,gBAAS,CAAC,KAAK;wCAAE,IAAI,GAAG,OAAO,CAAC;iCAC5D;6BACF;yBACF;wBAED,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;wBACnD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;wBACjC,IACE,MAAM;4BACL,6BAAa,CAAC,+BAA4D,EAC3E;4BACA,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,MAAM,CAAC;yBAC5C;qBACF;iBACF;aACF;YAED,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACvB;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,0EAA0E;iBAC3E;aACF;QACH,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE3B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC,CAAC,gBAAgB;gBACnE,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBACzB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACpC,MAAM,UAAU,GAAI,MAAc,CAAC,OAAO;oBACxC,CAAC,CAAE,MAAc,CAAC,OAAO,EAAE;oBAC3B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACrC,IAAI,UAAU,KAAK,IAAI,IAAI,MAAM,CAAC,kBAAkB,GAAG,eAAe,EAAE;oBACtE,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;iBAC3D;aACF;YACD,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;YACnE,IAAI,6BAAa,CAAC,aAAa,EAAE;gBAC/B,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,sBAAsB;gBACnD,4BAA4B;gBAC5B,yDAAyD;gBACzD,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;gBACrC,WAAI,CAAC,GAAG,CAAC,QAAQ,CACf,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,EACnC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,EACzC,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,EACnC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAC3C,CAAC;gBACF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;gBACzB,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;aACnD;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,KAAa,EAAE,EAAE;YAChC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc;aACtC;YAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACvB;YACD,gDAAgD;YAChD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACvB;YACD,oDAAoD;YAEpD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC9B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACvB;YACD,6BAA6B;YAC7B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBAC9C;aACF;YACD,0BAA0B;YAC1B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAC3B;YAED,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,0CAA0C;QAC1C,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,YAAY;YAEZ,YAAY;YACZ,IAAI,GAAG,GAAG,WAAI,CAAC,GAAG,CAAC,IAAI,CAAC;YACxB,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,6BAAa,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAC7D,WAAI,CAAC,GAAG,CAAC,SAAS,GAAG,+BAAc,CAAC,gBAAgB,CAAC;YACrD,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,OAAO,EACZ,6BAAa,CAAC,KAAK,GAAG,CAAC,GAAG,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,EAC/D,CAAC,CACF,CAAC;YACF,WAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;YACpB,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,cAAc;QACd,mBAAc,GAAG,GAAsB,EAAE;YACvC,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,uBAAuB;YAC3D,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACvD,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,6BAAa,CAAC,QAAQ,CAAC;YACzD,MAAM,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,GAAG,EAAE;gBACR,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAC1D;YAED,oCAAoC;YACpC,GAAG,CAAC,SAAS,GAAG,wBAAwB,CAAC;YACzC,GAAG,CAAC,QAAQ,CACV,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,EACnC,IAAI,CAAC,KAAK,GAAG,6BAAa,CAAC,QAAQ,EACnC,UAAU,CAAC,KAAK,EAChB,UAAU,CAAC,MAAM,CAClB,CAAC;YAEF,8BAA8B;YAC9B;;;;;;;;;;;;;;;;gBAgBI;YACJ,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QA4DF;;;;;WAKG;QACH,wBAAmB,GAAG,GAGpB,EAAE;YACF,MAAM,SAAS,GAA4C,EAAE,CAAC;YAE9D,qCAAqC;YACrC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;wBAC/C,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC/C;iBACF;aACF;YAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;YAED,yCAAyC;YACzC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAExC,OAAO;gBACL,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBACxC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;aACvB,CAAC;QACJ,CAAC,CAAC;QAEF;;;;;;;;WAQG;QACH,iCAA4B,GAAG,CAC7B,EAAU,EACV,EAAU,EAIV,EAAE;YACF,MAAM,iBAAiB,GAAG;gBACxB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;gBACpB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;gBACpB,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACpB,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ;aAC/B,CAAC;YAEF,MAAM,SAAS,GAA4C,EAAE,CAAC;YAE9D,iBAAiB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAChC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;gBACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;oBAC/C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC7C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,aAAK,EAAE;4BACzC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;yBAC/C;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;YAED,yCAAyC;YACzC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAExC,OAAO;gBACL,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBACxC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;aACvB,CAAC;QACJ,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAW,EAAE;YACjC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACtD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBACrD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAClB,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxB,KAAK,EAAE,CAAC;yBACT;qBACF;iBACF;aACF;YACD,OAAO,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;QAmBF,eAAU,GAAG,CAAC,KAAa,EAAE,KAAa,EAAW,EAAE;YACrD,OAAO,IAAI,CAAC,WAAW,CACrB,KAAK,EACL,KAAK,EACL,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CACZ,CAAC;QACJ,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAW,EAAE;YAC3B,IAAI,SAAS,GAAW,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,IACE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBAC/B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,qBAAS,CAAC;wBAC5C,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,uBAAU,CAAC;wBAC7C,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,mBAAQ,CAAC;wBAC3C,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,uBAAU,CAAC,EAC7C;wBACA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACtC;iBACF;aACF;YACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAC9C,OAAO,SAAS,CAAC;QACxB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;oBACnD,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC1D;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,SAAI,GAAG,GAAW,EAAE;YAClB,2EAA2E;YAC3E,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;YAClC,MAAM,cAAc,GAAW,EAAE,CAAC;YAClC,MAAM,KAAK,GAAW,CAAC,IAAuB,CAAC,CAAC;YAEhD,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;gBAC9B,IAAI,CAAC,OAAO;oBAAE,SAAS;gBACvB,MAAM,GAAG,GAAI,OAAe,CAAC,QAA8B,CAAC;gBAC5D,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;oBAAE,SAAS;gBAEvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE7B,IAAI;oBACF,MAAM,KAAK,GAAI,OAAe,CAAC,KAAmB,CAAC;oBACnD,IAAI,CAAC,KAAK;wBAAE,SAAS;oBACrB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;wBACxB,MAAM,MAAM,GAAI,IAAY,EAAE,UAAU,CAAC;wBACzC,MAAM,QAAQ,GAAG,MAAM,IAAK,MAAc,CAAC,IAAI,CAAC;wBAChD,IAAI,QAAQ,EAAE;4BACZ,MAAM,OAAO,GAAI,QAAgB,CAAC,QAA8B,CAAC;4BACjE,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gCACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;6BACtB;yBACF;qBACF;iBACF;gBAAC,MAAM,GAAE;aACX;YAED,OAAO,cAAc,CAAC;QACxB,CAAC,CAAC;QAEF;;WAEG;QACH,cAAS,GAAG,CAAC,UAAyB,EAAW,EAAE;YACjD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAAE,SAAS;gBACjC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,YAAY,mBAAQ,IAAI,UAAU,KAAK,IAAI;wBAAE,OAAO,IAAI,CAAC;oBAC9D,IAAI,CAAC,YAAY,uBAAU,IAAI,UAAU,KAAK,MAAM,IAAI,CAAC,CAAC,UAAU;wBAClE,OAAO,IAAI,CAAC;iBACf;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,WAAM,GAAG,GAAY,EAAE;YACrB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,YAAY,SAAG;oBAAE,OAAO,IAAI,CAAC;aACtC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF;;;;WAIG;QACH,+BAA0B,GAAG,CAAC,UAAyB,EAAiB,EAAE;YACxE,MAAM,WAAW,GAAG,IAAI,CAAC;YACzB,IAAI,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC;gBAAE,OAAO,CAAC,CAAC;YAEhD,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;YAClC,MAAM,KAAK,GAAwC,EAAE,CAAC;YAEtD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3C,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;gBACrC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;oBACxD,IAAI,CAAC,QAAQ;wBAAE,SAAS;oBACxB,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;oBAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;wBAAE,SAAS;oBAC/B,IAAI,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;wBAClC,OAAO,IAAI,GAAG,CAAC,CAAC;qBACjB;oBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;iBAChD;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,aAAK,CAAC,CAAC;YAC9D,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YAEhE,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,aAAK,CAAC,CAAC;YAChE,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAChD;;;;cAIE;YACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;oBAAE,OAAO,IAAI,CAAC;aACpD;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC3C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,IAAI,CAAC,YAAY,aAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAAE,OAAO,IAAI,CAAC;aAC/D;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF;;;;;;;WAOG;QACH,gBAAW,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YAC9C,uDAAuD;YACvD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC/C,OAAO,KAAK,CAAC;aACd;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAElC,6BAA6B;YAC7B,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBAClB,OAAO,KAAK,CAAC;aACd;YAED,oEAAoE;YACpE,IACE,IAAI,YAAY,qBAAS;gBACzB,IAAI,YAAY,uBAAU;gBAC1B,IAAI,YAAY,mBAAQ;gBACxB,IAAI,YAAY,uBAAU,EAC1B;gBACA,OAAO,KAAK,CAAC;aACd;YAED,mDAAmD;YACnD,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBACxB,OAAO,KAAK,CAAC;iBACd;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACnD,MAAM,MAAM,GAAG,CAAC,CAAC;YACjB,MAAM,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,iBAAiB;YAExD,KAAK,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,MAAM,EAAE,EAAE,EAAE,EAAE;gBACzC,KAAK,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,MAAM,EAAE,EAAE,EAAE,EAAE;oBACzC,mDAAmD;oBACnD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,aAAa,EAAE;wBACtC,MAAM,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;wBACtB,MAAM,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;wBAEtB,gCAAgC;wBAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;4BACjC,OAAO,IAAI,CAAC;yBACb;qBACF;iBACF;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvB,IAAI,QAAQ,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBACvB,IAAI,CAAC,CAAC,IAAI,KAAK,eAAQ,CAAC,WAAW,EAAE;wBACnC,CAAC,CAAC,OAAO,EAAE,CAAC;wBACZ,QAAQ,GAAG,IAAI,CAAC;wBAChB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAC5B,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EACpB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EACpB,GAAG,CACJ,CAAC;qBACH;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,2DAA2D,CAC5D,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAqEF,4EAA4E;QAE5E,2BAAsB,GAAG,GAAG,EAAE;YAC5B,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,KAAK,EAAE;oBAClC,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI;wBAAE,SAAS,CAAC,uCAAuC;oBAChH,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBACrD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC5B,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,wCAAwC;qBAC3E;iBACF;aACF;YACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;oBAC9B,qEAAqE;oBACrE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;oBAC5D,QAAQ,GAAG,IAAI,CAAC;iBACjB;aACF;QACH,CAAC,CAAC;QAEF,oDAAoD;QACpD,aAAQ,GAAG,CACT,SAAe,EACf,UAAgB,EAChB,0BAA6C,EAC9B,EAAE;YACjB,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;YAC/C,IAAI,kBAAkB,GAAG,EAAE,CAAC;YAE5B,2CAA2C;YAC3C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,IACE,CAAC,YAAY,+BAAc;oBAC3B,CAAC,YAAY,mBAAI;oBACjB,CAAC,YAAY,eAAM;oBACnB,CAAC,YAAY,aAAK;oBAClB,CAAC,YAAY,aAAK;oBAClB,CAAC,YAAY,qBAAS;oBACtB,CAAC,YAAY,yBAAW,EACxB;oBACA,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;oBAC5D,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC5B;aACF;YAED,+EAA+E;YAC/E,IAAI,0BAA0B,EAAE;gBAC9B,gBAAgB,CAAC,IAAI,CAAC,GAAG,0BAA0B,CAAC,CAAC;aACtD;YAED,2CAA2C;YAC3C,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;wBACvD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;;wBACvC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iBACzB;aACF;YAED,wDAAwD;YACxD,MAAM,YAAY,GAAG;gBACnB,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;gBAC3B,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;aAC5B,CAAC;YACF,MAAM,aAAa,GAAG;gBACpB,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;gBAC5B,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;aAC7B,CAAC;YAEF,gDAAgD;YAChD,MAAM,qBAAqB,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC3D,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;gBACrB,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;aACtB,CAAC,CAAC,CAAC;YAEJ,IAAI,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC5B,IAAI,EACJ,YAAY,EACZ,aAAa,EACb,qBAAqB,EACrB,KAAK,EACL,KAAK,EACL,KAAK,CACN,CAAC;YAEF,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,kBAAkB,CAAC;aAC3B;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC;QAEF;;;;;;;WAOG;QACH,mBAAc,GAAG,CAAC,CAAS,EAAE,CAAS,EAAW,EAAE;YACjD,qDAAqD;YACrD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,OAAO,KAAK,CAAC;aACd;YAED,0BAA0B;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAE5B,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK;wBAAE,SAAS;oBAE/B,gEAAgE;oBAChE,MAAM,qBAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAE1D,4EAA4E;oBAC5E,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpC,SAAS;qBACV;oBAED,8DAA8D;oBAC9D,MAAM,oBAAoB,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBACxC,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CACtC,KAAK,EACL,KAAK,EACL,oBAAoB,CACrB,CAAC;oBAEF,iGAAiG;oBACjG,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACjC,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;wBACvC,OAAO,IAAI,CAAC;qBACb;iBACF;aACF;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF;;;;;WAKG;QACH,kCAA6B,GAAG,GAAW,EAAE;YAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACxC,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC;QAEF,aAAa;QAEb,kCAAkC;QAElC;;;;;WAKG;QACH,2BAAsB,GAAG,CACvB,MAAY,EACZ,eAAwB,IAAI,EACb,EAAE;YACjB,IAAI,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YACzB,IAAI,MAAM,KAAM,IAAwB;gBAAE,OAAO,EAAE,CAAC;YAEpD,IAAI;gBACF,MAAM,KAAK,GAAS,IAAuB,CAAC;gBAC5C,MAAM,SAAS,GAAI,MAAc,CAAC,QAA8B,CAAC;gBACjE,MAAM,WAAW,GAAI,KAAa,CAAC,MAAM,CAAC;gBAE1C,MAAM,KAAK,GAAW,CAAC,KAAK,CAAC,CAAC;gBAC9B,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;gBAClC,MAAM,IAAI,GAAG,IAAI,GAAG,EAGjB,CAAC;gBAEJ,MAAM,UAAU,GAAG,CACjB,GAAW,EACX,KAA2D,EAC3D,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;wBAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC3C,CAAC,CAAC;gBAEF,MAAM,UAAU,GAAG,CAAC,CAAmB,EAAE,EAAE,CACxC,CAAS,EAAE,QAA8B,CAAC;gBAE7C,MAAM,SAAS,GAAG,CAAC,CAAO,EAAE,EAAE,CAC5B,CAAC,YAAY,IAAK,CAAS,CAAC,MAAM,KAAK,WAAW,CAAC;gBAErD,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnC,IAAI,CAAC,QAAQ;oBAAE,OAAO,IAAI,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,UAAU,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAE3D,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;oBAC9B,IAAI,CAAC,OAAO;wBAAE,SAAS;oBACvB,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;oBACvC,IAAI,CAAC,UAAU;wBAAE,SAAS;oBAE1B,IAAI,OAAO,KAAK,MAAM,EAAE;wBACtB,6DAA6D;wBAC7D,MAAM,KAAK,GAAW,EAAE,CAAC;wBACzB,IAAI,SAAS,GAAuB,UAAU,CAAC;wBAC/C,OAAO,SAAS,IAAI,SAAS,KAAK,QAAQ,EAAE;4BAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;4BAClC,IAAI,CAAC,KAAK;gCAAE,MAAM;4BAClB,IAAI,KAAK,CAAC,OAAO;gCAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;4BAC7C,SAAS,GAAG,KAAK,CAAC,WAAW,IAAI,SAAS,CAAC;yBAC5C;wBACD,KAAK,CAAC,OAAO,EAAE,CAAC;wBAChB,OAAO,KAAK,CAAC;qBACd;oBAED,MAAM,KAAK,GAAI,OAAe,CAAC,KAAgC,CAAC;oBAChE,IAAI,CAAC,KAAK;wBAAE,SAAS;oBACrB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;wBACxB,MAAM,QAAQ,GAAI,IAAY,EAAE,UAAU,EAAE,IAAwB,CAAC;wBACrE,IAAI,CAAC,QAAQ;4BAAE,SAAS;wBACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;4BAAE,SAAS;wBACnC,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;wBACrC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;4BAAE,SAAS;wBAC/C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,UAAU,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;wBAChE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACtB;iBACF;gBAED,OAAO,IAAI,CAAC;aACb;YAAC,MAAM;gBACN,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;QAEF,8EAA8E;QAE9E;;;;WAIG;QACH,2BAAsB,GAAG,CACvB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACuB,EAAE;YACnC,kCAAkC;YAClC,MAAM,IAAI,GAAY,EAAE,CAAC;YACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;wBACvD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;;wBACvC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iBACzB;aACF;YAED,MAAM,YAAY,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAChE,MAAM,aAAa,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAEjE,MAAM,KAAK,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC9B,IAAI,EACJ,YAAY,EACZ,aAAa,EACb,SAAS,EACT,KAAK,EACL,KAAK,EACL,KAAK,CACN,CAAC;YAEF,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC7B,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;gBACvB,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;aACxB,CAAC,CAAC,CAAC;YACJ,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAsGF,aAAa;QAEb;;;;;;;;;;WAUG;QACH,sBAAiB,GAAG,CAClB,CAAS,EACT,CAAS,EACT,OAAa,IAAI,EACjB,aAAsB,KAAK,EAC3B,EAAE;YACF,mEAAmE;YACnE,MAAM,mBAAmB,GAAG,CAAC,MAAc,EAAE,MAAc,EAAW,EAAE;gBACtE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvB,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,YAAY,+BAAc;oBAChC,MAAM,CAAC,CAAC,KAAK,MAAM;oBACnB,MAAM,CAAC,CAAC,KAAK,MAAM,CACtB,CAAC;YACJ,CAAC,CAAC;YAEF,yDAAyD;YACzD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAI,EAAE;gBAC1C,uDAAuD;gBACvD,IAAI,SAAS,GAAqB,IAAI,CAAC;gBACvC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;oBACpB,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;iBAC7B;qBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;oBAC5C,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC5B;qBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;oBAC3B,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC5B;qBAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7C,SAAS,GAAG,gBAAS,CAAC,EAAE,CAAC;iBAC1B;gBAED,IAAI,CAAC,SAAS,EAAE;oBACd,yCAAyC;oBACzC,OAAO,IAAI,CAAC;iBACb;gBAED,6DAA6D;gBAC7D,MAAM,aAAa,GAAsC,EAAE,CAAC;gBAC5D,QAAQ,SAAS,EAAE;oBACjB,KAAK,gBAAS,CAAC,KAAK,CAAC;oBACrB,KAAK,gBAAS,CAAC,IAAI;wBACjB,8CAA8C;wBAC9C,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;wBACxD,MAAM;iBACT;gBAED,oDAAoD;gBACpD,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;gBAEtE,iDAAiD;gBACjD,IAAI,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBAC7B,OAAO,IAAI,CAAC;iBACb;gBAED,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;oBACpC,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;oBAC3B,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;oBAE3B,+DAA+D;oBAC/D,MAAM,cAAc,GAClB,IAAI,GAAG,IAAI,CAAC,KAAK;wBACjB,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;wBAClC,IAAI,GAAG,IAAI,CAAC,KAAK;wBACjB,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAEtC,IACE,cAAc;wBACd,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,WAAI,CAAC;wBAC/C,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,EAChC;wBACA,4BAA4B;wBAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;qBACnD;iBACF;gBAED,OAAO,IAAI,CAAC;aACb;YAED,8EAA8E;YAC9E,IAAI,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC7B,OAAO,IAAI,CAAC;aACb;YAED,sFAAsF;YACtF,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QAC9C,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,IAAU,EAAE,EAAE;YAC9B,IAAI,gBAAgB,GAAG,KAAK,EAAkB,CAAC;YAC/C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAoB,CAAC,CAAC;aAC7D;YACD,MAAM,IAAI,GAAG,kBAAK,CAAC,KAAK,CAAC,MAAM,CAC7B,IAAI,CAAC,SAAS,EACd,IAAI,EACJ,IAAI,EACJ,EAAE,EACF,KAAK,EACL,KAAK,EACL,KAAK,CACN,CAAC;YACF,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAsCF,gBAAW,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC;QAgDF,mCAAmC;QAC3B,wBAAmB,GAAG,GAAG,EAAE;YACjC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC9D,CAAC,CAAC;QAEM,uBAAkB,GAAG,GAAY,EAAE;YACzC,OAAO,CACL,CAAC,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,SAAS,CAAC,OAAO;gBACtB,IAAI,CAAC,SAAS,CAAC,kBAAkB,KAAK,IAAI,CAAC,kBAAkB,CAC9D,CAAC;QACJ,CAAC,CAAC;QAEO,cAAS,GAAG,GAAG,EAAE;YACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,IAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAS,CAAC,OAAO,EAAE,EAAE,KAAK,IAAI,EAAE;oBACtD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBAC7B;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,oBAAe,GAAG,CACxB,IAAqE,EACrE,MAAyB,EACzB,EAAE;YACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,+BAA+B;gBAC/B,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACtD,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAClC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACpC,MAAM,GAAG,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC1C,IAAI,GAAG,EAAE;oBACP,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;oBACpC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAC7D;aACF;QACH,CAAC,CAAC;QAp2HA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,+BAA+B;QAC/C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,gCAAgC;QAChD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAQ,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,EAAc,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,KAAK,EAAc,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,KAAK,EAAY,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAQ,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,EAAU,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,KAAK,EAAe,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,KAAK,EAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,EAAU,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,EAAQ,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,EAAc,CAAC;QACvC,oCAAoC;QACpC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,CAAC,KAAK;YAC7B,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,MAAM;YAC9B,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,oCAAoC;QACpC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,CAAC,KAAK;YAC7B,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,MAAM;YAC9B,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,oCAAoC;QACpC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,CAAC,KAAK;YAC7B,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,MAAM;YAC9B,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,4BAA4B;QAE5B,uBAAuB;QAEvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC7B;SACF;QAED,sEAAsE;QACtE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAChC;SACF;QAED,oCAAoC;QACpC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1D,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aAC9B;SACF;QAED,+CAA+C;QAC/C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,OAA8B,CAAC;QAC3C;;;;;;;UAOE;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,yBAAW,CAAC,IAAI,CAAC,CAAC;QAErC,aAAa;IACf,CAAC;IAYO,cAAc,CAAC,CAAS,EAAE,CAAS,EAAE,OAAkB;QAC7D,IAAI,OAAO,KAAK,gBAAS,CAAC,EAAE,IAAI,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;YAC1D,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,QAAQ,GAAG,YAAY,EAAE,UAAU,KAAK,KAAK,CAAC;YACpD,MAAM,SAAS,GAAG,aAAa,EAAE,WAAW,KAAK,KAAK,CAAC;YAEvD,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1D;YAED,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1D;SACF;IACH,CAAC;IAEO,UAAU,CAChB,UAAkB,EAClB,IAAkB,EAClB,MAAe,EACf,MAAe;QAEf,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM;YAC9C,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;YAEjC,OAAO;QAET,IACE,MAAM,KAAK,SAAS;YACpB,MAAM,KAAK,SAAS;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,WAAI,EAChD;YACA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAErE,OAAO;SACR;QAED,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACjE,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;oBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;oBACA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACpC;aACF;SACF;QACD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,gCAAgC;QAChC,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAc;YACvD,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;gBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;gBACA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1C;SACF;QAED,6DAA6D;QAC7D,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,iBAAiB,GAAG,UAAU,GAAG,WAAW,CAAC;QAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;gBAAE,MAAM;YAC7B,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAClD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC;gBAAE,MAAM;YACnC,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IAEO,SAAS,CAAC,IAAkB;QAClC,aAAa;QACb,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;YAAE,OAAO;QACvC,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAEpC,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACzC,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACzC,qBAAqB;gBACrB,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;oBAChE,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,uBAAU,CAAC;wBACjD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBACpD;;oBACC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,aAAK,CAChC,IAAI,EACJ,EAAE,EACF,EAAE,EACF,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAChB,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CACjB,CAAC;aACL;SACF;IACH,CAAC;IAwCD,wBAAwB;IAEhB,aAAa,CAAC,SAAiB,EAAE,IAAkB;QACzD,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM;YAC9C,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM;YAE/B,OAAO;QACT,aAAa;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IAED,aAAa;IAEb,0BAA0B;IAE1B,sCAAsC;IAC9B,UAAU,CAAC,UAAkB,EAAE,IAAkB;QACvD,IAAI,mCAAgB,CAAC,UAAU,KAAK,IAAI;YAAE,OAAO;QACjD,IAAI,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM;YAAE,UAAU,IAAI,CAAC,CAAC;QACrD,kCAAkC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI;YAAE,OAAO;QAC3B,yEAAyE;QAEzE,4DAA4D;QAC5D,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QAEzC,yEAAyE;QACzE,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;oBAC/B,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBACrD;aACF;SACF;QAED,+CAA+C;QAC/C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,iDAAiD;QACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,OAAO,GAAG,CAAC,CAAC;YAEhB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;gBAC/C,MAAM;aACP;YACD,IAAI,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,CAAC,KAAK,IAAI,EAAE;gBAClD,CAAC,GAAG,UAAU,CAAC;gBACf,MAAM;aACP;YACD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;YAE5B,+CAA+C;YAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC;YACpD,iCAAiC;YACjC,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC;YAC/D,qDAAqD;YACrD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAC9C,kDAAkD;YAClD,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,uCAAuC;gBACvC,IAAI,QAAQ,GAAG,CAAC,KAAa,EAAW,EAAE;oBACxC,qDAAqD;oBACrD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wBACnC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4BACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE;gCAC3D,yDAAyD;gCACzD,UAAU,EAAE,CAAC;gCACb,OAAO,KAAK,CAAC;6BACd;yBACF;qBACF;oBACD,2GAA2G;oBAC3G,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;wBACnC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;4BACnC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;yBAClE;qBACF;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC;gBAEF,+CAA+C;gBAC/C,IAAI,IAAI,GAAG,WAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBAElD,QAAQ,IAAI,EAAE;oBACZ,KAAK,CAAC;wBACJ,qBAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,CAAC;wBACJ,qBAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,CAAC;wBACJ,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,MAAM;oBACR,KAAK,CAAC;wBACJ,uBAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,CAAC;wBACJ,gCAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7C,MAAM;oBACR,KAAK,CAAC;wBACJ,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,MAAM;oBACR,KAAK,CAAC;wBACJ,qBAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,CAAC;wBACJ,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,MAAM;oBACR,KAAK,CAAC;wBACJ,uCAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC9C,MAAM;oBACR,KAAK,EAAE;wBACL,IAAI,QAAQ,CAAC,IAAI,6BAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;4BACtD,uBAAuB;4BACvB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,aAAK,CACxC,IAAI,EACJ,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,CACP,CAAC,CAAC,mBAAmB;iCACvB;6BACF;yBACF;wBACD,MAAM;oBACR,KAAK,EAAE;wBACL,uBAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,EAAE;wBACL,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,MAAM;oBACR,KAAK,EAAE;wBACL,IAAI,QAAQ,CAAC,IAAI,+BAAc,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;4BACvD,uBAAuB;4BACvB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,aAAK,CACxC,IAAI,EACJ,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,CACP,CAAC,CAAC,mBAAmB;iCACvB;6BACF;yBACF;wBACD,MAAM;oBACR,KAAK,EAAE;wBACL,qCAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7C,MAAM;oBACR,KAAK,EAAE;wBACL,4BAAe,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC3C,MAAM;iBACT;aACF;SACF;QACD,IAAI,cAAc,GAAG;YACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACzE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACzE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACpB,CAAC;QACF,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,aAAa,GAAG,WAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACzD,kDAAkD;YAClD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SACvC;QACD,IAAI,gBAAgB,GAAG;YACrB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SAC1E,CAAC;QACF,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,eAAe,GAAG,WAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAC7D,sDAAsD;YACtD,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;SAC3C;IACH,CAAC;IAEO,gBAAgB;QACtB,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;QAChD;;;;UAIE;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAC1B,IAAI,CAAC,GAAG,CACN,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,aAAa,GAAG,MAAM,CAAC,EAChD,aAAa,GAAG,MAAM,CACvB,CACF,CAAC;QACF,qEAAqE;QACrE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEO,WAAW,CAAC,WAAmB,EAAE,IAAkB;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,iDAAiD;YACjD,OAAO;SACR;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;iBAClC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACjD,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,MAAM,OAAO,GAAG,iBAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;YAC/D,OAAO,OAAO,CAAC;SAChB;IACH,CAAC;IACO,aAAa,CAAC,aAAqB,EAAE,IAAkB;QAC7D,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,iDAAiD;YACjD,OAAO;SACR;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,SAAS,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAEO,SAAS,CAAC,KAAa;QAC7B,IAAI,mCAAgB,CAAC,UAAU,KAAK,IAAI;YAAE,OAAO;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,iDAAiD;YACjD,OAAO;SACR;QAED,IAAI,MAAM,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC;QACpE,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC;SACrC;QACD,MAAM,IAAI,GAAG,WAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAEjD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;YACvC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAEvC,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBACjD,OAAO,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAC5C,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;gBACvB,MAAM;YACR,KAAK,OAAO;gBACV,MAAM,KAAK,GAAG,uBAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,KAAK,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAC1C,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;gBACrB,MAAM;YACR,KAAK,eAAe;gBAClB,MAAM,QAAQ,GAAG,6BAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1D,QAAQ,CAAC,SAAS,GAAG;oBACnB,QAAQ;oBACR,WAAW;oBACX,YAAY;oBACZ,KAAK;oBACL,MAAM;iBACP,CAAC;gBAEF,MAAM;YACR,KAAK,WAAW;gBACd,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;gBACrD,SAAS,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAC9C,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;gBAEzB,MAAM;YACR,KAAK,gBAAgB;gBACnB,MAAM,SAAS,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5D,SAAS,CAAC,SAAS,GAAG;oBACpB,QAAQ;oBACR,WAAW;oBACX,YAAY;oBACZ,KAAK;oBACL,MAAM;iBACP,CAAC;gBACF,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;gBACzB,MAAM;SACT;IACH,CAAC;IAsDO,SAAS,CAAC,SAAiB,EAAE,IAAkB;QACrD,aAAa;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,EAAE;gBACb,mDAAmD;gBACnD,MAAM;aACP;YACD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtD;IACH,CAAC;IAED,QAAQ,CAAC,QAAgB,EAAE,IAAkB;QAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,YAAY,CAAC,YAAoB,EAAE,IAAkB;QAC3D,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAEpD,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,EAAE;gBAClC,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACrC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC7C,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;gBACrC,iCAAe,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjD;IACH,CAAC;IAEO,iBAAiB,CACvB,IAAkB,EAClB,MAAe,EACf,MAAe,EACf,IAAW;QAEX,MAAM,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAEhC,IAAI,KAAK,GACP,IAAI,CAAC,KAAK,GAAG,CAAC;YACZ,CAAC,CAAC;gBACE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnE,CAAC,EAAE,CAAC;aACL;YACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB,IAAI,IAAI,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,EAAE;YACR,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,OAAO;SACR;QACD,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;SACT;IACH,CAAC;IAi5BD;;;;;OAKG;IACH,iBAAiB,CAAC,MAAyB,EAAE,MAAc;QACzD,YAAY;QACZ,gDAAgD;QAChD,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,qCAAqC;QACrC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7B,0DAA0D;QAC1D,IAAI,CAAC,GAAG,MAAM,CAAC;QACf,IAAI,CAAC,6BAAa,CAAC,YAAY;YAAE,CAAC,GAAG,CAAC,CAAC;QACvC,kBAAkB;QAClB,uEAAuE;IACzE,CAAC;IAkpCD,+CAA+C;IAC/C,iBAAiB;QACf,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,YAAY,WAAI,IAAI,IAAI,YAAY,qBAAS,EAAE;oBACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtB,MAAM,SAAS,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;oBACnC,MAAM,YAAY,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBACxD,MAAM,UAAU,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;oBACpC,MAAM,WAAW,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACtD,MAAM,WAAW,GACf,CAAC,SAAS,IAAI,CAAC,YAAY,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC;oBAC7D,MAAM,eAAe,GACnB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;oBACrE,MAAM,eAAe,GACnB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;oBACrE,MAAM,UAAU,GACd,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;oBAEjE,IAAI,aAAa,GAAG,IAAI,CAAC;oBACzB,IAAI,WAAW,EAAE;wBACf,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC;wBAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC;wBAE5D,IAAI,CAAC,YAAY,IAAI,YAAY,EAAE;4BACjC,aAAa,GAAG,UAAU,CAAC;yBAC5B;6BAAM,IAAI,YAAY,IAAI,CAAC,YAAY,EAAE;4BACxC,aAAa,GAAG,aAAa,CAAC;yBAC/B;6BAAM,IAAI,YAAY,IAAI,YAAY,EAAE;4BACvC,aAAa,GAAG,iBAAiB,CAAC;yBACnC;6BAAM;4BACL,aAAa,GAAG,eAAe,CAAC;yBACjC;qBACF;oBAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;wBAC7B,SAAS;wBACT,YAAY;wBACZ,UAAU;wBACV,WAAW;wBACX,WAAW;wBACX,eAAe;wBACf,UAAU;wBACV,aAAa;wBACb,eAAe;wBACf,gBAAgB,EACd,UAAU;4BACV,eAAe;4BACf,CAAC,SAAS,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC;4BAC1C,WAAW;qBACd,CAAC,CAAC;iBACJ;aACF;SACF;IACH,CAAC;IAqGD,aAAa;IAEb,oBAAoB;IAEpB,WAAW,CACT,CAAS,EACT,CAAS,EACT,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU;QAEV,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,KAAK,CAAC;QACzC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,KAAK,CAAC;QACzC,OAAO,IAAI,CAAC;IACd,CAAC;IA4PD,8FAA8F;IAC9F,sBAAsB,CACpB,KAAa,EACb,MAAiC;QAEjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QACpC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CACvB,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,EAC3C,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;QACL,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,EAAE;YACxD,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACnD;QACD,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;IAClC,CAAC;IAED,yBAAyB,CAAC,KAAa;QAIrC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAEpC,mDAAmD;QACnD,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3D,gEAAgE;QAChE,MAAM,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YAC1C,qFAAqF;YACrF,OAAO,CACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,QAAQ;gBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ;gBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CACrC,CAAC,CAAC,WAAW;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAE/C,iDAAiD;QACjD,MAAM,YAAY,GAChB,gBAAgB,CAAC,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3E,OAAO,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC;IAClD,CAAC;IACD,mFAAmF;IACnF,aAAa;QACX,OAAO;YACL,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC1C,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAC5C,CAAC;IACJ,CAAC;IAED,wDAAwD;IACxD,gBAAgB,CAAC,CAAS,EAAE,CAAS;QACnC,OAAO,CAAC,CACN,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;YAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;YACxC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;YAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAC1C,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAU,EAAE,SAAe;QACzC,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,OAAO,EAAE;YAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,SAAS,CAAC,OAAO,EAAE;YAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAqSD,aAAa;IAEb,eAAe;IAEf;;;;;;;OAOG;IACI,aAAa,CAClB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,MAAc;QAEd,MAAM,IAAI,GAAG,IAAI,uBAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,cAAsB;QAC9C,MAAM,qBAAY,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,QAAQ;QACV,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAChD,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,aAAK;oBAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrE;SACF;QACD,sCAAsC;QACtC,OAAO,SAAS,CAAC,MAAM,CAAC;IAC1B,CAAC;IACD;;;;;OAKG;IACI,YAAY,CAAC,MAAc;QAChC,MAAM,QAAQ,GAAG,6BAAa,CAAC,QAAQ,CAAC;QAExC,qDAAqD;QACrD,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC7C,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC3D,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC5C,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAE7D,+CAA+C;QAC/C,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;QACvC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;QAEvC,sCAAsC;QACtC,MAAM,OAAO,GACX,UAAU;YACV,MAAM,CAAC,KAAK;YACZ,GAAG,GAAG,QAAQ;YACd,GAAG,GAAG,6BAAa,CAAC,KAAK;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,+CAA+C;QACzE,MAAM,OAAO,GACX,UAAU;YACV,MAAM,CAAC,KAAK;YACZ,GAAG,GAAG,QAAQ;YACd,GAAG,GAAG,6BAAa,CAAC,MAAM,GAAG,iCAAiC;YAC9D,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,+CAA+C;QACzE,MAAM,WAAW,GAAG,6BAAa,CAAC,KAAK,CAAC,CAAC,4BAA4B;QACrE,MAAM,YAAY,GAAG,6BAAa,CAAC,MAAM,CAAC,CAAC,6BAA6B;QAExE,iCAAiC;QACjC,MAAM,UAAU,GAAG,OAAO,CAAC;QAC3B,MAAM,WAAW,GAAG,OAAO,GAAG,WAAW,CAAC;QAC1C,MAAM,SAAS,GAAG,OAAO,CAAC;QAC1B,MAAM,YAAY,GAAG,OAAO,GAAG,YAAY,CAAC;QAE5C,gEAAgE;QAChE,MAAM,aAAa,GAAG,CAAC,CACrB,SAAS,GAAG,UAAU;YACtB,QAAQ,GAAG,WAAW;YACtB,UAAU,GAAG,SAAS;YACtB,OAAO,GAAG,YAAY,CACvB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;IAChC,CAAC;IAEO,SAAS;QACf,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,QAAQ,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;SACjD;aAAM,IAAI,QAAQ,GAAG,EAAE,EAAE;YACxB,IAAI,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;SACjD;IACH,CAAC;IAsHD;;;OAGG;IACH,YAAY;QACV,MAAM,UAAU,GAAW,EAAE,CAAC;QAE9B,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAElC,IAAI,IAAI,YAAY,WAAI,IAAI,IAAI,YAAY,qBAAS,EAAE;oBACrD,+CAA+C;oBAC/C,IAAI,CAAC,CAAC,IAAI,YAAY,WAAI,CAAC,EAAE;wBAC3B,iCAAiC;wBACjC,MAAM,aAAa,GAAG;4BACpB,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;4BAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;yBAC3B,CAAC;wBAEF,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,CACxC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,YAAY,WAAI,CACrC,CAAC;wBAEF,IAAI,CAAC,eAAe,EAAE;4BACpB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBACvB;qBACF;iBACF;aACF;SACF;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAMD;;;;OAIG;IACH,eAAe,CAAC,IAAU;QACxB,IAAI,CAAC,CAAC,IAAI,YAAY,WAAI,CAAC;YAAE,OAAO,IAAI,CAAC;QAEzC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QAEtB,gEAAgE;QAChE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7C,qDAAqD;QACrD,MAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QAC5D,MAAM,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAEpD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAClB,CAAC;IAED;;OAEG;IACH,yBAAyB,CAAC,IAAW;QACnC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACrC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjC,OAAO,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAEpC,6BAA6B;QAC7B,MAAM,YAAY,GAAG,WAAI,CAAC,SAAS,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY;YAAE,OAAO;QAE1B,2BAA2B;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,eAAe;YAAE,OAAO;QAE7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,eAAe,CAAC;QAEjC,oCAAoC;QACpC,IAAI,CAAC,iBAAiB,CAAC,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;CA2CF;AAp9HD,oBAo9HC;;;;;;;;;;;;;;;ACptID,mEAA+B;AAC/B,gFAAsC;AACtC,6EAAoC;AAEpC,uEAA6C;AAE7C,MAAa,WAAW;IAEtB,YAAY,IAAU;QA2CtB,gBAAW,GAAG,CACZ,MAAc,EACd,MAAc,EACd,KAAa,EACb,KAAa,EACb,KAAa,EACb,MAAc,EACQ,EAAE;YACxB,IAAI,UAAU,GAAyB,EAAE,CAAC;YAC1C,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,GAAG,KAAK;gBAChE,UAAU,CAAC,IAAI,CAAC,oBAAa,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,MAAM,KAAK,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,GAAG,KAAK;gBACzE,UAAU,CAAC,IAAI,CAAC,oBAAa,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,GAAG,MAAM;gBACjE,UAAU,CAAC,IAAI,CAAC,oBAAa,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,MAAM,KAAK,KAAK,GAAG,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,GAAG,MAAM;gBACzE,UAAU,CAAC,IAAI,CAAC,oBAAa,CAAC,IAAI,CAAC,CAAC;YACtC,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAMM,uBAAkB,GAAG,CAAC,IAAU,EAAU,EAAE;YAClD,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAChD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oBAChD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,WAAI;wBAC7C,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;wBAEjC,KAAK,EAAE,CAAC;iBACX;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QA9EA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,cAAc;QACpB,yBAAyB;QACzB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACxE,KACE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACvB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EACtC,CAAC,EAAE,EACH;gBACA,IACE,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CACrB,EACD;oBACA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,WAAI,CAClC,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,WAAW,CACd,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,IAAI,CAAC,MAAM,CACjB,CACF,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAsBD,aAAa,CAAC,IAAkB;QAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAgBD,sDAAsD;IACtD,qBAAqB,CAAC,IAAkB;QACtC,IAAI,SAAS,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,GAAG;YAAE,SAAS,IAAI,CAAC,CAAC;QACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CACnB,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EACvD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CACpB,CAAC;YACF,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CACnB,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CACrB,CAAC;YAEF,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CACf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,EAC9C,IAAI,CACL,CAAC;YACF,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CACf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,EAC/C,IAAI,CACL,CAAC;YAEF,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,EAAE,EAAE;gBACtC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,EAAE,EAAE;oBACtC,IAAI,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACF;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpC,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACtC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,aAAK,CAC7C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;iBACvE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,2FAA2F;IAC3F,oBAAoB,CAAC,IAAkB;QACrC,IAAI,SAAS,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,GAAG;YAAE,SAAS,IAAI,CAAC,CAAC;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,qDAAqD;YACrD,IAAI,KAAK,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC/D,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CACnB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAC3C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CACrB,CAAC;YAEF,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CACf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,EAC9C,IAAI,CACL,CAAC;YACF,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CACf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,EAC/C,IAAI,CACL,CAAC;YAEF,gEAAgE;YAChE,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,EAAE,EAAE;gBACtC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,EAAE,EAAE;oBACtC,yDAAyD;oBACzD,MAAM,MAAM,GACV,EAAE,KAAK,CAAC;wBACR,EAAE,KAAK,CAAC;wBACR,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC;wBACrB,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;oBACxB,IAAI,MAAM,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE;wBAC3B,IAAI,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACpC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAC9B;iBACF;aACF;YAED,kDAAkD;YAClD,MAAM,KAAK,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,MAAM,EAAE,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACnE,MAAM,EAAE,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACnE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,WAAI,EAAE;oBACjD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAChD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CACnC,CAAC;iBACH;aACF;YAED,iEAAiE;YACjE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpC,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACtC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,aAAK,CAC7C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;iBACvE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAtMD,kCAsMC;;;;;;;;;;;;;;;AC1MD,kGAA+C;AAG/C,mEAA+B;AAC/B,iHAA4D;AAC5D,oGAK8B;AAC9B,+FAAgD;AAChD,2HAAwD;AACxD,yFAA4C;AAE5C,yFAA2C;AAC3C,sFAAyC;AACzC,kGAAmE;AACnE,uEAAwC;AAGxC,mEAAoC;AACpC,4FAA8C;AAC9C,6EAAoC;AACpC,4FAA8C;AAC9C,gFAAsC;AACtC,gFAAsC;AACtC,+FAAgD;AAChD,6HAAiE;AACjE,kGAA+C;AAC/C,+FAA6C;AAE7C,8FAA6C;AAC7C,+FAA8C;AAC9C,gFAAsC;AACtC,8FAA6C;AAC7C,4FAA4C;AAI5C,8GAA0D;AAC1D,mFAAwC;AACxC,yFAA4C;AAC5C,uBAAuB;AACvB,4FAA8C;AAC9C,0GAAqD;AACrD,8FAA6C;AAC7C,gGAA+C;AAC/C,oGAAiD;AAYjD,wHAA8D;AAC9D,+GAAwD;AAKxD,2HAAgE;AAChE,sGAAkD;AAClD,2HAAgE;AAChE,2HAA+D;AAC/D,2HAA+D;AAC/D,oIAAqE;AACrE,6EAAoC;AACpC,4FAA8C;AAC9C,kHAA0D;AAC1D,yGAAqD;AACrD,6FAA6C;AAC7C,mFAAwC;AAExC,qHAA4D;AAC5D,qHAA4D;AAE5D,wEAAwE;AACxE,MAAM,aAAa,GAA2B,EAAE,CAAC;AACjD,KAAK,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,4BAAc,CAAC,OAAO,EAAE,EAAE;IACvD,aAAa,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC;CACrC;AAED,MAAa,SAAS;IAQpB,YAAY,KAAY,EAAE,iBAA0B,KAAK;QALjD,UAAK,GAA+B,EAAE,CAAC;QAC/C,oBAAe,GAAY,KAAK,CAAC;QAEzB,mBAAc,GAAY,KAAK,CAAC;QAWxC,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,cAAc;gBAAE,OAAO;YAChC,0CAA0C;YAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChC,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,qDAAqD;YACrD,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;aAClC;YAED,yDAAyD;YACzD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChC,IACE,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK;oBAC5B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU;oBACjC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;oBAC/B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;oBAC/B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;oBAE/B,OAAO;gBAET,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,2DAA2D;YAC3D,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACpE,IAAI,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBAClD,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;aACtD;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;gBAAE,OAAO;YAEnC,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,OAAO,EAAE;gBACnD,IAAI,CAAC,aAAa,CAAC;oBACjB,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE;oBAC1B,MAAM,EAAE,IAAI;oBACZ,SAAS,EAAE,CAAC;iBACb,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,IAAI,EAAE;gBAChD,IAAI,CAAC,aAAa,CAAC;oBACjB,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE;oBAC1B,MAAM,EAAE,IAAI;oBACZ,OAAO,EAAE,0BAAO,CAAC,UAAU;oBAC3B,SAAS,EAAE,CAAC;iBACb,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,EAAE;gBAClD,IAAI,CAAC,aAAa,CAAC;oBACjB,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE;oBAC1B,MAAM,EAAE,IAAI;oBACZ,OAAO,EAAE,0BAAO,CAAC,MAAM;oBACvB,SAAS,EAAE,GAAG;iBACf,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,EAAE;gBAClD,IAAI,CAAC,aAAa,CAAC;oBACjB,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE;oBAC1B,MAAM,EAAE,IAAI;oBACZ,OAAO,EAAE,0BAAO,CAAC,WAAW;oBAC5B,SAAS,EAAE,GAAG;iBACf,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,8BAA8B;QAChC,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,IAAU,EAAE,EAAE;YACrC,QAAQ,IAAI,CAAC,OAAO,EAAE;gBACpB,KAAK,0BAAO,CAAC,IAAI;oBACf,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;oBACnC,MAAM;gBACR,KAAK,0BAAO,CAAC,MAAM;oBACjB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;oBACrC,MAAM;gBACR,KAAK,0BAAO,CAAC,UAAU;oBACrB,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;oBACxC,MAAM;gBACR,KAAK,0BAAO,CAAC,MAAM;oBACjB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;oBACrC,MAAM;gBACR;oBACE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;oBACtC,MAAM;aACT;QACH,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAG,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU;gBAAE,OAAO;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACrC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ;gBAAE,OAAO;YACpC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,IAAqB,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;gBAAE,OAAO;YACnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,IAAI;gBAAE,OAAO;YAClB,MAAM,UAAU,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACxD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,CAAC,IAAI,CACV,mEAAmE,CACpE,CAAC;gBACF,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;YACzD,IACE,QAAQ,KAAK,IAAI;gBACjB,QAAQ,CAAC,CAAC,KAAK,SAAS;gBACxB,QAAQ,CAAC,CAAC,KAAK,SAAS;gBAExB,OAAO;YAET,MAAM,EAAE,GAAG,IAAI,uBAAU,CACvB,IAAI,EACJ,IAAI,CAAC,KAAK,CAAC,IAAI,EACf,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,EACV,IAAI,EACJ,0BAAO,CAAC,OAAO,EACf,mBAAQ,CAAC,IAAI,EACb,IAAI,EACJ,EAAE,QAAQ,EAAE,mBAAQ,CAAC,IAAI,EAAE,CAC5B,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9C,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,IAAqB,EAAE,EAAE;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACnC,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,KAAK;gBAC5B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU;gBACjC,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;gBAC/B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,QAAQ;gBAC/B,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,IAAI,CAC9B,CAAC;YAEF,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU;gBAC1C,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;gBACjD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YAE3C,OAAO,CAAC,GAAG,CACT,sCAAsC,cAAc,CAAC,IAAI,WAAW,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,CAClG,CAAC;YAEF,+DAA+D;YAC/D,MAAM,UAAU,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC;YAElE,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;gBACzE,OAAO;aACR;YAED,MAAM,QAAQ,GAAG,cAAc,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;YACnE,IACE,QAAQ,KAAK,IAAI;gBACjB,QAAQ,CAAC,CAAC,KAAK,SAAS;gBACxB,QAAQ,CAAC,CAAC,KAAK,SAAS;gBAExB,OAAO;YAET,OAAO,CAAC,GAAG,CACT,mCAAmC,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,GAAG,CAChE,CAAC;YAEF,wEAAwE;YACxE,MAAM,GAAG,GAAG,IAAI,EAAE,OAAO;gBACvB,CAAC,CAAC,IAAI,CAAC,OAAO;gBACd,CAAC,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC;oBACxB,CAAC,CAAC,0BAAO,CAAC,MAAM;oBAChB,CAAC,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC;wBACxB,CAAC,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG;4BACnB,CAAC,CAAC,0BAAO,CAAC,MAAM;4BAChB,CAAC,CAAC,0BAAO,CAAC,IAAI;wBAChB,CAAC,CAAC,0BAAO,CAAC,IAAI,CAAC;YACrB,MAAM,YAAY,GAChB,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS;gBACtC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAQ,CAAC,IAAI,EAAE;gBAC7D,CAAC,CAAC,SAAS,CAAC;YAEhB,MAAM,EAAE,GAAG,IAAI,uBAAU,CACvB,cAAc,EACd,IAAI,CAAC,KAAK,CAAC,IAAI,EACf,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,EACV,IAAI,EACJ,GAAG,EACH,mBAAQ,CAAC,IAAI,EACb,IAAI,EACJ,YAAY,CACb,CAAC;YAEF,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACtD,IAAI,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE;gBAC1B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACxC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,IAAU,EAAE,EAAE,GAAE,CAAC,CAAC;QAuIpC,aAAQ,GAAG,GAAG,EAAE;YACd,8CAA8C;YAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChE,wFAAwF;YACxF,MAAM,QAAQ,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;YAC1D,mDAAmD;YACnD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC;QA+7BF,aAAa;QAEb,6BAA6B;QAE7B,kBAAa,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE,GAAE,CAAC,CAAC;QAEvD,qBAAgB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACnD,IAAI,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACpC,IAAI,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;YAEtD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACtD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACnD,iBAAO,CAAC,GAAG,CACT,IAAI,EACJ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CACzC,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YAClD,IAAI,CAAC,CAAC;YAEN,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;oBACjD,CAAC,GAAG,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC9B;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACF;YAED,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,EAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAC5B,IAAI,CACL,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEjD,IAAI,UAAU,GAAG,IAAI;iBAClB,aAAa,EAAE;iBACf,MAAM,CACL,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;gBACrB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;gBAClC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;gBACnD,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CACtC,CAAC;YACJ,IAAI,SAAS,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAEtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CACvB,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,EACzC,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;gBACL,IAAI,CAAC;oBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjE;YAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,0BAAqB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAClE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;iBACzE;aACF;YACD,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,kDAAkD;QACpD,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YAChD,IAAI,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YAEpC,qDAAqD;YACrD,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;YAChD,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CACxB,aAAa,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CACxD,CAAC;YACF,wFAAwF;YACxF,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,IAAI;gBAC9C,IAAI,CAAC,YAAY,CACf,IAAI,EACJ,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EACpE,IAAI,CACL,CAAC;YACJ,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACpD,kDAAkD;YAElD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACtD,uEAAuE;YAEvE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,uBAAU,CAC3C,IAAI,EACJ,IAAI,CAAC,IAAI,EACT,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACN,CAAC;YAEF,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;YAE/C,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,aAAa,GAAG,KAAK,CAAC;YAC1B,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;oBACpD,IAAI,QAAQ,KAAK,IAAI;wBAAE,MAAM;oBAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;oBAE1B,IAAI,KAAK,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7C;;;;;uBAKG;oBAEH,KAAK,CAAC,OAAO,CACX;wBACE,YAAY;wBACZ,KAAK;wBACL,OAAO;wBACP,MAAM;wBACN,MAAM;wBACN,UAAU;wBACV,QAAQ;wBACR,MAAM;qBACP,EACD,KAAK,CACN,CAAC;oBAEF,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACF;YACD,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;gBAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC9D,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,IAAU,EAAE,KAAa,EAAE,EAAE;YAClD,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACrD,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACjE,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YAElE,MAAM,OAAO,GAAG,IAAI,qBAAS,CAAC;gBAC5B,IAAI,aAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;gBACzC,IAAI,qBAAS,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;gBAC/C,IAAI,aAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;aAC5C,CAAC,CAAC;YACH,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;QACH,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACpD,kDAAkD;YAElD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAEtC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,0BAAO,CAAC,MAAM,CAAC,CAAC,CAAC,0BAAO,CAAC,IAAI,CAAC;YACnE,yDAAyD;YACzD,IAAI,CAAC,GAAG,IAAI,uBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YACjE,gEAAgE;YAEhE,yFAAyF;YACzF,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzB,uEAAuE;YACzE,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YACpD,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,QAAQ,IAAI,CAAC,OAAO,EAAE;gBACpB,KAAK,0BAAO,CAAC,IAAI;oBACf,OAAO,GAAG,MAAM,CAAC;oBACjB,MAAM;gBACR,KAAK,0BAAO,CAAC,UAAU;oBACrB,OAAO,GAAG,YAAY,CAAC;oBACvB,MAAM;gBACR,KAAK,0BAAO,CAAC,MAAM;oBACjB,OAAO,GAAG,QAAQ,CAAC;oBACnB,MAAM;gBACR,KAAK,0BAAO,CAAC,MAAM;oBACjB,OAAO,GAAG,QAAQ,CAAC;aACtB;YACD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACtC,IAAI,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YAChC,IAAI,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,IAAI;gBAC/B,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;gBAC3D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;YAE1C,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YAChD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACtC,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,iBAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzE,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzE,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEzE,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC;QAgCM,qBAAgB,GAAG,CAAC,IAAU,EAAE,EAAE;YACxC,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CACvB,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;YACF,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;oBACxB,UAAU,GAAG,CAAC,CAAC;iBAChB;aACF;iBAAM;gBACL,kEAAkE;gBAClE,MAAM,WAAW,GAAG,GAAG,CAAC,CAAC,yCAAyC;gBAClE,MAAM,SAAS,GAAG,GAAG,CAAC;gBACtB,MAAM,MAAM,GACV,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,MAAM,EAAE;oBAC1B,UAAU,GAAG,CAAC,CAAC;iBAChB;aACF;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC,CAAC;QAEM,qBAAgB,GAAG,CAAC,IAAU,EAAE,EAAE;YACxC,4CAA4C;YAC5C,MAAM,QAAQ,GACZ,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM;gBAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAEtB,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CACvB,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;YAEF,uCAAuC;YACvC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,IAAI,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;oBACxB,UAAU,GAAG,CAAC,CAAC;iBAChB;aACF;YAED,iDAAiD;QACnD,CAAC,CAAC;QAoJF,aAAQ,GAAG,CAAC,IAAU,EAAE,IAAkB,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,QAAQ,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,eAAQ,CAAC,KAAK;oBACjB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;wBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;qBACtC;oBAED,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;oBAEnC,MAAM;gBACR,KAAK,eAAQ,CAAC,IAAI;oBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;oBACnB,MAAM;gBACR,KAAK,eAAQ,CAAC,OAAO;oBACnB,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,IAAI;wBAC5C,eAAM,CAAC,IAAI,EAAE,IAAI,GAAG,EACpB;wBACA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC/B;yBAAM;wBACL,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBAClC;oBACD,MAAM;gBACR,KAAK,eAAQ,CAAC,UAAU;oBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACpC,MAAM;gBAER,KAAK,eAAQ,CAAC,MAAM;oBAClB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAChC,MAAM;gBACR,KAAK,eAAQ,CAAC,aAAa;oBACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACvC,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAClC,MAAM;gBAER,KAAK,eAAQ,CAAC,KAAK;oBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACjC,MAAM;gBACR,KAAK,eAAQ,CAAC,OAAO;oBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAChC,KAAK,eAAQ,CAAC,IAAI;oBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC9B,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAClC,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;oBAEnC,MAAM;gBACR,KAAK,eAAQ,CAAC,UAAU;oBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;oBACnC,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAClC,MAAM;gBACR,KAAK,eAAQ,CAAC,QAAQ;oBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAClC,MAAM;gBACR,KAAK,eAAQ,CAAC,IAAI;oBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC9B,MAAM;gBACR,KAAK,eAAQ,CAAC,OAAO;oBACnB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACjC,MAAM;aACT;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC;QA/zDA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,mCAAgB,CAAC,mBAAmB,CAAC;QAE1D,2CAA2C;QAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;IAwNO,QAAQ,CAAC,IAAU,EAAE,QAAgB,EAAE,OAAiB;QAC9D,MAAM,OAAO,GAAG,OAAO;YACrB,CAAC,CAAC,6BAAe,CAAC,OAAO,CAAC;YAC1B,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM;YAE9B,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,KAAK,IAAI;gBAAE,MAAM;YAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,MAAM,YAAY,GAAG,aAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5D,8DAA8D;YAC9D,IAAI,YAAY,IAAI,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE;gBAChE,MAAM,IAAI,GAAG,YAAY,CAAC,gBAAgB,IAAI,EAAE,CAAC;gBACjD,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;aACxD;SACF;IACH,CAAC;IAED;;;;;;OAMG;IACK,sBAAsB,CAC5B,IAAU,EACV,QAAgB,EAChB,OAAiB,EACjB,iBAAqC;QAErC,MAAM,OAAO,GAAG,OAAO;YACrB,CAAC,CAAC,6BAAe,CAAC,OAAO,CAAC;YAC1B,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEjD,MAAM,SAAS,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,SAAS,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QAEjE,KAAK,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,SAAS,EAAE;YAChC,MAAM,YAAY,GAAG,aAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5D,IAAI,YAAY,IAAI,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE;gBAChE,MAAM,IAAI,GAAG,YAAY,CAAC,gBAAgB,IAAI,EAAE,CAAC;gBACjD,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;aACxD;SACF;IACH,CAAC;IAEO,0BAA0B,CAAC,IAAU;QAC3C,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEO,uBAAuB,CAAC,IAAU;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,8CAA8C;QAC9C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACxD,eAAe,EAAE,CAAC;YAClB,SAAS,EAAE,GAAG;YACd,oBAAoB,EAAE,EAAE;YACxB,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,qDAAqD;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,yBAAyB,CAAC,IAAU;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9C,8CAA8C;QAC9C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACxD,eAAe,EAAE,CAAC;YAClB,SAAS,EAAE,GAAG;YACd,oBAAoB,EAAE,EAAE;YACxB,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,qDAAqD;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,4BAA4B,CAAC,IAAU;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACxD,eAAe,EAAE,CAAC;YAClB,SAAS,EAAE,GAAG;YACd,oBAAoB,EAAE,EAAE;YACxB,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,qDAAqD;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,yBAAyB,CAAC,IAAU;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACxD,eAAe,EAAE,CAAC;YAClB,SAAS,EAAE,GAAG;YACd,oBAAoB,EAAE,EAAE;YACxB,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,qDAAqD;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAC,IAAU,EAAE,aAAsB;QACpD,aAAa,GAAG,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC;QACpD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;QAClD,MAAM,QAAQ,GAAG,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,aAAa,EAAE;YACvD,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACjD,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;QACjE,gDAAgD;QAChD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEO,0BAA0B,CAAC,IAAU;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,8CAA8C;QAC9C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACxD,eAAe,EAAE,CAAC;YAClB,SAAS,EAAE,GAAG;YACd,oBAAoB,EAAE,EAAE;YACxB,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,qDAAqD;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAWD,8BAA8B;IACtB,cAAc,CAAC,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,OAAkB;QACzE,IAAI,OAAO,KAAK,gBAAS,CAAC,EAAE,IAAI,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;YAC1D,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,QAAQ,GAAG,YAAY,EAAE,UAAU,KAAK,KAAK,CAAC;YACpD,MAAM,SAAS,GAAG,aAAa,EAAE,WAAW,KAAK,KAAK,CAAC;YAEvD,MAAM,UAAU,GAAG,OAAO,KAAK,gBAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE7D,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;aACtE;YAED,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;aACtE;SACF;IACH,CAAC;IAEO,UAAU,CAChB,IAAU,EACV,UAAkB,EAClB,IAAkB,EAClB,MAAe,EACf,MAAe;QAEf,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM;YAC9C,IAAI,CAAC,IAAI,KAAK,eAAQ,CAAC,UAAU;YAEjC,OAAO;QAET,IACE,MAAM,KAAK,SAAS;YACpB,MAAM,KAAK,SAAS;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,WAAI,EAChD;YACA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAErE,OAAO;SACR;QAED,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACjE,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;oBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;oBACA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACpC;aACF;SACF;QACD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,gCAAgC;QAChC,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAc;YACvD,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;gBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;gBACA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1C;SACF;QAED,6DAA6D;QAC7D,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,iBAAiB,GAAG,UAAU,GAAG,WAAW,CAAC;QAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;gBAAE,MAAM;YAC7B,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAClD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC;gBAAE,MAAM;YACnC,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IAED,wCAAwC;IAChC,cAAc,CAAC,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,OAAkB;QACzE,IAAI,OAAO,KAAK,gBAAS,CAAC,EAAE,IAAI,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;YAC1D,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACzD,MAAM,QAAQ,GAAG,YAAY,EAAE,UAAU,KAAK,KAAK,CAAC;YACpD,MAAM,SAAS,GAAG,aAAa,EAAE,WAAW,KAAK,KAAK,CAAC;YAEvD,MAAM,UAAU,GAAG,OAAO,KAAK,gBAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE7D,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAI,EAAE;gBAC1D,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;aACnE;YAED,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAI,EAAE;gBAC3D,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;aACnE;SACF;IACH,CAAC;IAEO,UAAU,CAChB,IAAU,EACV,UAAkB,EAClB,IAAkB,EAClB,MAAe,EACf,MAAe;QAEf,gEAAgE;QAChE,MAAM,QAAQ,GACZ,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM;YAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,IACE,MAAM,KAAK,SAAS;YACpB,MAAM,KAAK,SAAS;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,WAAI,EAChD;YACA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAClE,OAAO;SACR;QAED,IAAI,KAAK,GAAU,EAAE,CAAC;QACtB,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACjE,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;oBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;oBACA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACpC;aACF;SACF;QAED,IAAI,WAAW,GAAU,EAAE,CAAC;QAC5B,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACpE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACxC,IACE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,WAAI;gBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,EAC7C;gBACA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1C;SACF;QAED,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,iBAAiB,GAAG,UAAU,GAAG,WAAW,CAAC;QAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM;YAC9B,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM;YACpC,MAAM,WAAW,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACrD;IACH,CAAC;IAEO,sBAAsB,CAU5B,IAAU,EAAE,IAAkB,EAAE,SAAY;QAC5C,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;YAAE,OAAO;QACvC,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAEpC,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACzC,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACzC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACpC,IACE,CAAC,IAAI,YAAY,uBAAU,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC/C,yBAAyB;oBACzB,IAAI,YAAY,WAAI;oBACpB,IAAI,YAAY,aAAK;oBAErB,KAAK,GAAG,KAAK,CAAC;aACjB;SACF;QACD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;SAChD;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,KAAK;YAAE,OAAO;QACnB,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YACzC,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBACzC,qBAAqB;gBACrB,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;oBAChE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBACpC,IACE,CAAC,CAAC,IAAI,YAAY,uBAAU,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;wBAChD,CAAC,CAAC,IAAI,YAAY,WAAI,CAAC;wBACvB,CAAC,CAAC,IAAI,YAAY,WAAI,CAAC;wBACvB,CAAC,CAAC,IAAI,YAAY,aAAK,CAAC;wBAExB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBACpD;;oBACC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,SAAS,CACpC,IAAI,EACJ,EAAE,EACF,EAAE,EACF,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAChB,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CACjB,CAAC;aACL;SACF;IACH,CAAC;IACO,SAAS,CAAC,IAAU,EAAE,IAAkB;QAC9C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,EAAE,aAAK,CAAC,CAAC;IACjD,CAAC;IAEO,aAAa,CAAC,IAAU,EAAE,IAAkB;QAClD,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,EAAE,qBAAS,CAAC,CAAC;IACrD,CAAC;IAEO,QAAQ,CAAC,IAAU,EAAE,IAAkB;QAC7C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,EAAE,WAAI,CAAC,CAAC;IAChD,CAAC;IAEO,aAAa,CAAC,IAAU,EAAE,SAAiB,EAAE,IAAkB;QACrE,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM;YAC9C,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM;YAE/B,OAAO;QACT,aAAa;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,KAAK,IAAI;gBAAE,MAAM;YAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IACD,aAAa;IAEb,0BAA0B;IAE1B;;OAEG;IACK,iBAAiB,CAAC,IAAU,EAAE,UAAkB,EAAE,OAAiB;QACzE,IAAI,mCAAgB,CAAC,UAAU,KAAK,IAAI;YAAE,OAAO;QAEjD,mDAAmD;QACnD,MAAM,gBAAgB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAExE,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,CAAC,GAAG,CACT,wCAAwC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,aAAa,IAAI,CAAC,KAAK,EAAE,CACxG,CAAC;YACF,OAAO;SACR;QAED,oDAAoD;QACpD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;QAE9D,6CAA6C;QAC7C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACK,0BAA0B,CAChC,IAAU,EACV,OAAiB;QAEjB,MAAM,WAAW,GAAG,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QAC3D,MAAM,OAAO,GAAG,6BAAe,CAAC,WAAW,CAAC,CAAC;QAE7C,uEAAuE;QACvE,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE/C,yDAAyD;QACzD,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO;aACrC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACf,GAAG,KAAK;YACR,EAAE,EAAE,4BAAc,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,qBAAqB;SAC3D,CAAC,CAAC;aACF,MAAM,CACL,CAAC,KAAK,EAAE,EAAE,CACR,KAAK,CAAC,EAAE;YACR,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAClC,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CACtC,CAAC;QAEJ,OAAO,CAAC,GAAG,CACT,SAAS,IAAI,CAAC,KAAK,SAAS,WAAW,WAAW,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,gBAAgB;aAChK,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAG,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC;aACtD,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,CAAC;QAEF,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED;;OAEG;IACK,oBAAoB,CAC1B,IAAU,EACV,UAAkB,EAClB,SAAsB;QAEtB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAE/B,gCAAgC;QAChC,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QACzC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC/B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;oBAC/B,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBACrD;aACF;SACF;QACD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3E,gBAAgB;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM;YAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,KAAK,IAAI;gBAAE,MAAM;YAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAE1B,MAAM,aAAa,GAAG,aAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YACzD,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG;gBAAE,SAAS;YAEzC,MAAM,IAAI,GAAG,aAAa,CAAC,gBAAgB,IAAI,EAAE,CAAC;YAElD,6BAA6B;YAC7B,IAAI,aAAa,CAAC,iBAAiB,KAAK,YAAY,EAAE;gBACpD,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;gBACtE,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;oBACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBAChE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iBACzD;qBAAM;oBACL,UAAU,EAAE,CAAC,CAAC,QAAQ;iBACvB;aACF;iBAAM;gBACL,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;gBACxD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;QACD,OAAO,CAAC,GAAG,CACT,WAAW,UAAU,4CAA4C,KAAK,CAAC,MAAM,EAAE,CAChF,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,IAAU;QAClC,yDAAyD;QACzD,IAAI,IAAI,CAAC,KAAK,GAAG,mCAAgB,CAAC,iBAAiB,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,2DAA2D;QAC3D,IAAI,IAAI,CAAC,KAAK,GAAG,mCAAgB,CAAC,mBAAmB,EAAE;YACrD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;SACvC;IACH,CAAC;IAED,yDAAyD;IAEzD;;OAEG;IACK,oBAAoB,CAAC,KAAa;QACxC,0EAA0E;QAC1E,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACxC,MAAM,UAAU,GAAG,6BAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;QAEhD,MAAM,gBAAgB,GAAG,UAAU;aAChC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACf,EAAE,EAAE,4BAAc,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACnC,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,CAAC;SAC9B,CAAC,CAAC;aACF,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC;aAC9D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAY,CAAC,CAAC;QAE9B,sCAAsC;QACtC,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CACxC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,CACzD,CAAC;QAEF,yDAAyD;QACzD,MAAM,oBAAoB,GAAG,mCAAgB,CAAC,iBAAiB;YAC7D,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,mCAAgB,CAAC,qBAAqB,CAAC;YACrE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;QAEtB,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAC5C,UAAU,EACV,oBAAoB,CACrB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;QAE5D,yBAAyB;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAEhE,sCAAsC;QACtC,MAAM,aAAa,GAAG,mCAAgB,CAAC,iBAAiB;YACtD,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YACnC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC;QAExB,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAC7C,YAAY,EACZ,aAAa,CACd,CAAC;QACF,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;IACvE,CAAC;IAED;;OAEG;IACI,oBAAoB,CAAC,KAAa;QACvC,0FAA0F;QAC1F,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC;SAC/B;QACD,+GAA+G;QAC/G,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACK,qBAAqB,CAAC,KAAa;QACzC,OAAO,KAAK,KAAK,CAAC;YAChB,CAAC,CAAC,mCAAgB,CAAC,sBAAsB;YACzC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC7B,mCAAgB,CAAC,sBAAsB,CAAC;IAChD,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAI,KAAU,EAAE,KAAa;QACpD,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED;;OAEG;IACK,gBAAgB,CACtB,IAAU,EACV,KAAa,EACb,CAAS,EACT,CAAS,EACT,KAAa;QAEb,IACE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;YAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;YAC5C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;YACpB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EACpB;YACA,OAAO,KAAK,CAAC;SACd;QACD,0DAA0D;QAC1D,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;YACnC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;gBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;oBAC9D,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC1B,OAAO,KAAK,CAAC;iBACd;aACF;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACK,qBAAqB,CAC3B,IAAU,EACV,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,EACT,KAAa;QAEb,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;gBACjE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE;oBAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,CACzD,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CACzB,KAAY,EACZ,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS;QAET,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;gBACvE,IAAI,KAAK,KAAK,CAAC,CAAC;oBAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC1C;SACF;IACH,CAAC;IAEO,gBAAgB,CAAC,IAAU,EAAE,aAAqB,CAAC;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;QAClD,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAEtD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CACrB,CAAC,IAAI,CAAC,KAAK,GAAG,mCAAgB,CAAC,0BAA0B,CAAC;YACxD,mCAAgB,CAAC,8BAA8B,EACjD,mCAAgB,CAAC,iBAAiB,CACnC,CAAC;QAEF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAC9B,IAAI,CAAC,GAAG,CACN,aAAK,CAAC,eAAe,CAAC,CAAC,EAAE,SAAS,GAAG,MAAM,CAAC,EAC5C,SAAS,GAAG,MAAM,CACnB,CACF,CAAC;QAEF,gDAAgD;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;QAE3D,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,UAAU,GAAG,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtE,CAAC;IAEO,WAAW,CAAC,IAAU,EAAE,IAAkB,EAAE,WAAoB;QACtE,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO;SACR;QAED,IAAI,WAAW,GAAG,IAAI,CAAC;QAEvB,uDAAuD;QACvD,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,QAAQ,KAAK,IAAI;oBAAE,MAAM;gBAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;gBAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CACxB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEzB,WAAW,GAAG,iBAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;gBAE7D,mBAAmB;gBACnB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;aAAM;YACL,6DAA6D;YAC7D,MAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CACnC,IAAI,CAAC,QAAQ,GAAG,mCAAgB,CAAC,sBAAsB,CACxD,CAAC;YAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,IAAI,EAAE,GAAG,mCAAgB,CAAC,oBAAoB;oBAAE,SAAS;gBAE7D,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,QAAQ,KAAK,IAAI;oBAAE,MAAM;gBAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;gBAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAC5B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEzB,WAAW,GAAG,iBAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;gBAE7D,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,aAAa,CACnB,IAAU,EACV,IAAkB,EAClB,aAAsB;QAEtB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO;SACR;QAED,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,yDAAyD;QACzD,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,QAAQ,KAAK,IAAI;oBAAE,MAAM;gBAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;gBAE1B,aAAa,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE1D,mBAAmB;gBACnB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;aAAM;YACL,+DAA+D;YAC/D,MAAM,qBAAqB,GAAG,IAAI,CAAC,IAAI,CACrC,IAAI,CAAC,QAAQ,GAAG,mCAAgB,CAAC,wBAAwB,CAC1D,CAAC;YAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,IAAI,EAAE,GAAG,mCAAgB,CAAC,sBAAsB;oBAAE,SAAS;gBAE/D,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,QAAQ,KAAK,IAAI;oBAAE,MAAM;gBAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;gBAE1B,aAAa,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE1D,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,SAAS,CAAC,IAAU,EAAE,KAAa;QACzC,IAAI,mCAAgB,CAAC,UAAU,KAAK,IAAI;YAAE,OAAO;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,iDAAiD;YACjD,OAAO;SACR;QACD,IAAI,CAAC,mCAAgB,CAAC,aAAa,EAAE;YACnC,IAAI,MAAM,GAAG;gBACX,QAAQ;gBACR,OAAO;gBACP,eAAe;gBACf,gBAAgB;gBAChB,cAAc;gBACd,SAAS;aACV,CAAC;YAEF,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACzB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC;aAC9C;YACD,IAAI,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM,EAAE;gBACnC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC7B;YACD,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtB,MAAM,GAAG,MAAM,CAAC,MAAM,CACpB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,KAAK,eAAe;oBACrB,CAAC,KAAK,gBAAgB;oBACtB,CAAC,KAAK,WAAW,CACpB,CAAC;aACH;YAED,MAAM,IAAI,GAAG,WAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAE5C,MAAM,QAAQ,GACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,QAAQ;gBACzC,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,QAAQ,KAAK,IAAI;gBAAE,OAAO;YAC9B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAE1B,QAAQ,IAAI,EAAE;gBACZ,KAAK,QAAQ;oBACX,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBACvD,OAAO,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC5C,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;oBACvB,MAAM;gBACR,KAAK,OAAO;oBACV,MAAM,KAAK,GAAG,uBAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpD,KAAK,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC1C,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;oBACrB,MAAM;gBACR,KAAK,eAAe;oBAClB,MAAM,QAAQ,GAAG,6BAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1D,QAAQ,CAAC,SAAS,GAAG;wBACnB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBAEF,MAAM;gBACR,KAAK,WAAW;oBACd,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC3D,SAAS,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC9C,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;oBAEzB,MAAM;gBACR,KAAK,gBAAgB;oBACnB,MAAM,SAAS,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5D,SAAS,CAAC,SAAS,GAAG;wBACpB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBACF,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;oBACzB,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,MAAM,GAAG,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtD,MAAM,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC3C,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;oBACtB,MAAM;gBACR,KAAK,cAAc;oBACjB,MAAM,OAAO,GAAG,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxD,OAAO,CAAC,SAAS,GAAG;wBAClB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBACF,MAAM;gBACR,KAAK,SAAS;oBACZ,MAAM,OAAO,GAAG,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxD,OAAO,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC5C,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;oBACvB,MAAM;aACT;SACF;aAAM;YACL,MAAM,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,QAAQ,KAAK,IAAI;gBAAE,OAAO;YAC9B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,QAAQ,KAAK,EAAE;gBACb,KAAK,CAAC;oBACJ,MAAM,SAAS,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5D,SAAS,CAAC,SAAS,GAAG;wBACpB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBACF,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;oBAEzB,MAAM,KAAK,GAAG,uBAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpD,KAAK,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC1C,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;oBAErB,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,QAAQ,GAAG,6BAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1D,QAAQ,CAAC,SAAS,GAAG;wBACnB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBAEF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBACvD,8CAA8C;oBAC9C,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;oBACvB,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBACxD,8CAA8C;oBAC9C,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;oBAExB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC3D,gDAAgD;oBAChD,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;oBACzB,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,UAAU,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7D,UAAU,CAAC,SAAS,GAAG;wBACrB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBACF,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;oBAE1B,MAAM,UAAU,GAAG,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7D,UAAU,CAAC,SAAS,GAAG;wBACrB,QAAQ;wBACR,WAAW;wBACX,YAAY;wBACZ,KAAK;wBACL,MAAM;qBACP,CAAC;oBACF,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;oBAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC5D,gDAAgD;oBAChD,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC1B,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,MAAM,GAAG,yBAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtD,MAAM,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBAC3C,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;oBACtB,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM;aACT;SACF;IACH,CAAC;IAEO,SAAS,CAAC,IAAU,EAAE,SAAiB,EAAE,IAAkB;QACjE,aAAa;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,EAAE;gBACb,mDAAmD;gBACnD,MAAM;aACP;YACD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtD;IACH,CAAC;IAED,QAAQ,CAAC,IAAU,EAAE,QAAgB,EAAE,IAAkB;QACvD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,KAAK,IAAI;gBAAE,MAAM;YAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC1B,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,YAAY,CAAC,IAAU,EAAE,YAAoB,EAAE,IAAkB;QACvE,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,KAAK,IAAI;gBAAE,MAAM;YAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;YAE1B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,EAAE;gBAClC,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACrC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC7C,2BAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;gBACrC,iCAAe,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjD;IACH,CAAC;IAEO,iBAAiB,CACvB,IAAU,EACV,IAAkB,EAClB,MAAe,EACf,MAAe,EACf,IAAW;QAEX,MAAM,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAC9D,IAAI,GAAG,KAAK,IAAI;YAAE,OAAO;QACzB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAEhC,IAAI,KAAK,GACP,IAAI,CAAC,KAAK,GAAG,CAAC;YACZ,CAAC,CAAC;gBACE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;aAC3D;YACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB,IAAI,IAAI,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,EAAE;YACR,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,OAAO;SACR;QACD,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,aAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,uBAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtE,MAAM;YACR,KAAK,CAAC;gBACJ,+BAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM;SACT;IACH,CAAC;IAkPD,yEAAyE;IACjE,gBAAgB,CACtB,IAAU,EACV,YAAgD,QAAQ;QAExD,MAAM,aAAa,GAAG;YACpB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,CAAC;QACF,MAAM,WAAW,GAAG,WAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,wDAAwD;IAChD,gBAAgB,CACtB,IAAU,EACV,YAAgD,QAAQ;QAExD,MAAM,cAAc,GAAG;YACrB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,CAAC;QACF,MAAM,WAAW,GAAG,WAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAC3E,kDAAkD;IACpD,CAAC;IAgDD;;OAEG;IACK,wBAAwB,CAAC,IAAU,EAAE,IAAkB;QAC7D,MAAM,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAEtC,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,eAAQ,CAAC,KAAK;gBACjB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBACpB,2CAA2C;iBAC5C;qBAAM;oBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;iBAC7B;gBACD,MAAM;YAER,KAAK,eAAQ,CAAC,IAAI;gBAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACpC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACpE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,aAAa,CAChB,IAAI,EACJ,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAC3C,IAAI,CACL,CAAC;gBACF,MAAM;YAER,KAAK,eAAQ,CAAC,OAAO;gBACnB,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,IAAI;oBAC5C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,UAAU;oBAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,EAC9C;oBACA,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;iBAC1D;qBAAM;oBACL,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBACnD;gBAED,IAAI,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM,EAAE;oBACnC,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAE3C,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAE5C,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;wBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACnE;gBAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,+BAA+B;gBAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,MAAM,GAAG,EAAE;oBACb,IAAI,CAAC,aAAa,CAChB,IAAI,EACJ,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAC3C,IAAI,CACL,CAAC;gBACJ,MAAM;YAER,KAAK,eAAQ,CAAC,UAAU;gBACtB,IAAI,MAAM,GAAG,CAAC;oBAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAEjD,IAAI,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;oBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;oBAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACrE,MAAM;YAER,KAAK,eAAQ,CAAC,IAAI;gBAChB,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,IAAI;oBAC5C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,UAAU;oBAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM,EAC9C;oBACA,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;iBAC1D;qBAAM;oBACL,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBACnD;gBAED,IAAI,IAAI,CAAC,OAAO,KAAK,0BAAO,CAAC,MAAM,EAAE;oBACnC,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAE5C,IAAI,MAAM,GAAG,EAAE;wBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC3C,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;wBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACnE;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,0BAAO,CAAC,MAAM;oBAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,sCAAsC;gBACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAE5B,MAAM;YAER,KAAK,eAAQ,CAAC,OAAO;gBACnB,IAAI,MAAM,GAAG,EAAE;oBACb,IAAI,CAAC,aAAa,CAChB,IAAI,EACJ,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAC3C,IAAI,CACL,CAAC;gBACJ,qCAAqC;gBACrC,MAAM;YAER,KAAK,eAAQ,CAAC,QAAQ;gBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM;YAER,KAAK,eAAQ,CAAC,OAAO;gBACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM;YAER,KAAK,eAAQ,CAAC,QAAQ;gBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACtC,MAAM;YAER,KAAK,eAAQ,CAAC,UAAU;gBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3D,MAAM;YAER,KAAK,eAAQ,CAAC,QAAQ;gBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACtC,MAAM;YAER,KAAK,eAAQ,CAAC,aAAa;gBACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACtC,MAAM;YAER,KAAK,eAAQ,CAAC,IAAI;gBAChB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC/B,MAAM;YAER,KAAK,eAAQ,CAAC,KAAK;gBACjB,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjD,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC;oBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,MAAM,GAAG,EAAE;oBACb,IAAI,CAAC,aAAa,CAChB,IAAI,EACJ,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAC3C,IAAI,CACL,CAAC;gBACJ,MAAM;YAER;gBACE,iDAAiD;gBACjD,MAAM;SACT;IACH,CAAC;IA4ED;;OAEG;IACH,yBAAyB,CAAC,IAAU,EAAE,IAAW;QAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACvC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAEpC,6BAA6B;QAC7B,MAAM,YAAY,GAAG,WAAI,CAAC,SAAS,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY;YAAE,OAAO;QAE1B,2BAA2B;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,eAAe;YAAE,OAAO;QAE7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,eAAe,CAAC;QAEjC,oCAAoC;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,eAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAEtD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;IACtC,CAAC;CACF;AAh2DD,8BAg2DC;;;;;;;;;;;;;;;AC17DD,mEAA+B;AAC/B,2EAAgC;AAChC,2FAAsC;AAEtC,MAAa,YAAY;IASvB,MAAM,CAAC,QAAQ;QACb,OAAO,aAAK,CAAC,QAAQ,CAAC;IACxB,CAAC;IAED,uCAAuC;IAC/B,MAAM,CAAC,KAAK,CAAC,iBAAiB;QACpC,IAAI,YAAY,CAAC,qBAAqB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAClE,OAAO;SACR;QAED,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAE1C,IAAI;YACF,iEAAiE;YACjE,MAAM,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;YAC9D,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAEtD,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE;gBACtC,MAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC3B;iBAAM;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjB;YAED,qBAAqB;YACrB,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,WAAW,EAAE;gBACnD,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;aAC1C;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;SACxE;IACH,CAAC;IAED,sDAAsD;IAC9C,MAAM,CAAC,YAAY,CAAC,KAAW;QACrC,MAAM,GAAG,GAAI,KAAa,CAAC,IAAI,CAAC;QAChC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,SAAS,CAAC;SAC7C;aAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAClC,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,SAAS,CAAC;SAC1C;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,+CAA+C;IACvC,MAAM,CAAC,OAAO,CACpB,IAAY,EACZ,SAAiB,EACjB,OAAe,EACf,OAAgB;QAEhB,MAAM,KAAK,GAAG,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,UAAU;QAC5B,IAAI,YAAY,CAAC,WAAW;YAAE,OAAO;QAErC,IAAI,aAAa,GAAG,WAAI,CAAC,aAAa,CAAC;QAEvC,uDAAuD;QACvD,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI;gBACF,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;oBAClC,MAAM,UAAU,GAAG,GAAG,EAAE;wBACtB,IAAI,WAAI,CAAC,aAAa,EAAE;4BACtB,OAAO,EAAE,CAAC;4BACV,aAAa,GAAG,IAAI,CAAC;yBACtB;6BAAM;4BACL,qBAAqB,CAAC,UAAU,CAAC,CAAC;yBACnC;oBACH,CAAC,CAAC;oBACF,UAAU,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;aACJ;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;gBAClD,OAAO;aACR;SACF;QAED,IACE,CAAC,YAAY,CAAC,YAAY;YAC1B,CAAC,YAAY,CAAC,WAAW;YACzB,aAAa,EACb;YACA,IAAI;gBACF,4CAA4C;gBAC5C,IAAI,CAAC,eAAM,CAAC,GAAG,EAAE;oBACf,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC1D;gBAED,YAAY,CAAC,YAAY;oBACvB,eAAM,CAAC,GAAG;wBACV,IAAI,CAAC,MAAM,CAAC,YAAY,IAAK,MAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC;gBAEpE,2EAA2E;gBAC3E,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE;oBAC3B,MAAM,YAAY,CAAC,iBAAiB,EAAE,CAAC;iBACxC;gBAED,iDAAiD;gBACjD,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,WAAW,EAAE;oBACnD,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC1C;gBAED,uBAAuB;gBACvB,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;gBACrE,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAEtE,MAAM,YAAY,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,CAAC;gBAClE,YAAY,CAAC,gBAAgB,EAAE,CAAC;gBAEhC,kCAAkC;gBAClC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE;oBACvC,YAAY,CAAC,qBAAqB,GAAG,aAAI,CAAC,SAAS,CAAC,cAAc,CAAC;oBAEnE,aAAI,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,KAAU;wBAClD,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAClD,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,4BAA4B,EAC5B,KAAK,CAAC,GAAG,CACV,CAAC;wBAEF,sDAAsD;wBACtD,IACE,YAAY,CAAC,QAAQ,EAAE;4BACvB,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,WAAW,EAC/C;4BACA,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gCAC3C,YAAY,CAAC,OAAO,CAClB,UAAU,EACV,SAAS,EACT,2BAA2B,EAC3B,KAAK,CAAC,GAAG,CACV,CAAC;4BACJ,CAAC,CAAC,CAAC;yBACJ;wBAED,iCAAiC;wBACjC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAErD,0DAA0D;wBAC1D,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;4BAC3C,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,2BAA2B,EAC3B,KAAK,CAAC,GAAG,CACV,CAAC;4BAEF,2CAA2C;4BAC3C,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;4BAEtC,yCAAyC;4BACzC,IAAI,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACrD,IAAI,CAAC,QAAQ,EAAE;gCACb,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;gCAClD,MAAM,MAAM,GAAI,IAAY,CAAC,OAAO,IAAI,GAAG,CAAC;gCAC5C,QAAQ,CAAC,IAAI,CAAC,cAAc,CAC1B,MAAM,EACN,YAAY,CAAC,YAAY,CAAC,WAAW,CACtC,CAAC;gCACF,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gCACzC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;gCAChD,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,iCAAiC,MAAM,EAAE,EACzC,KAAK,CAAC,GAAG,CACV,CAAC;6BACH;4BAED,6EAA6E;4BAC7E,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;4BAC3C,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,+BAA+B,EAC/B,KAAK,CAAC,GAAG,CACV,CAAC;yBACH;oBACH,CAAC,CAAC;iBACH;gBAED,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;gBAChC,IAAI,aAAK,CAAC,WAAW;oBAAE,aAAK,CAAC,UAAU,GAAG,KAAK,CAAC;gBAEhD,MAAM,UAAU,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;aACnE;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;gBAC3D,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;gBAChC,IAAI,aAAK,CAAC,WAAW;oBAAE,aAAK,CAAC,UAAU,GAAG,KAAK,CAAC;aACjD;SACF;IACH,CAAC;IAED,oCAAoC;IAC5B,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAgB;QACpD,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEvC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,uBAAuB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;aAC3D;YAED,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;YACjD,YAAY,CAAC,YAAY;gBACvB,MAAM,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SAChE;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;SACtD;IACH,CAAC;IAED,gCAAgC;IACxB,MAAM,CAAC,gBAAgB;QAC7B,IAAI,YAAY,CAAC,YAAY,EAAE;YAC7B,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC;SAC3D;IACH,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAgB;QACnD,IAAI,CAAC,YAAY,CAAC,WAAW;YAAE,OAAO;QACtC,IAAI;YACF,MAAM,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,YAAY,CAAC,YAAY,EAAE;gBAC7B,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC;aAC3D;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;SACvD;IACH,CAAC;IAED,4EAA4E;IACrE,MAAM,CAAC,WAAW,CAAC,KAAW;QACnC,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEnD,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,+DAA+D,CAChE,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;YAC7B,YAAY,CAAC,OAAO,CAClB,IAAI,EACJ,SAAS,EACT,yCAAyC,CAC1C,CAAC;YACF,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;SACrB;QAED,uDAAuD;QACvD,IACE,YAAY,CAAC,QAAQ,EAAE;YACvB,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,SAAS,EAC7C;YACA,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjD,OAAO,CAAC,IAAI,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;SACJ;QAED,yEAAyE;QACzE,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,wCAAwC;IACjC,MAAM,CAAC,YAAY,CAAC,KAAW;QACpC,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEnD,qDAAqD;QACrD,KAAK,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;YAClE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,UAAU,EAAE,CAAC;gBACtB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACxC;SACF;QAED,YAAY,CAAC,OAAO,CAClB,GAAG,EACH,SAAS,EACT,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED,iBAAiB;IACV,MAAM,CAAC,OAAO;QACnB,yCAAyC;QACzC,IAAI,YAAY,CAAC,qBAAqB,EAAE;YACtC,aAAI,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY,CAAC,qBAAqB,CAAC;SACpE;QAED,0BAA0B;QAC1B,KAAK,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;YAClE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,UAAU,EAAE,CAAC;aACvB;SACF;QACD,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAE/B,IAAI,YAAY,CAAC,SAAS,EAAE;YAC1B,YAAY,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;SACrC;QAED,IACE,YAAY,CAAC,YAAY;YACzB,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,QAAQ,EAC5C;YACA,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SACnC;QACD,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;IACnC,CAAC;;AArUH,oCAsUC;AAnUgB,yBAAY,GAAuB,IAAI,CAAC;AACxC,sBAAS,GAA0B,IAAI,GAAG,EAAE,CAAC;AAE7C,kCAAqB,GAAY,KAAK,CAAC;AAC/C,wBAAW,GAAY,KAAK,CAAC;;;;;;;;;;;;;;;;ACXtC,mEAA+B;AAC/B,yFAA2C;AAC3C,8EAAwC;AACxC,2FAAsC;AAEtC,MAAa,KAAK;IAkEhB,MAAM,CAAC,YAAY;QACjB,MAAM,SAAS,GACb,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAK,MAAc,CAAC,KAAK,CAAC;QACnE,KAAK,CAAC,QAAQ;YACZ,gEAAgE,CAAC,IAAI,CACnE,SAAS,CACV,CAAC;QACJ,OAAO,KAAK,CAAC,QAAQ,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,oBAAoB;QAC/B,IAAI,KAAK,CAAC,mBAAmB;YAAE,OAAO;QAEtC,IAAI;YACF,IAAI,eAAM,CAAC,GAAG,IAAI,eAAM,CAAC,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;gBAClD,MAAM,eAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;gBAC1B,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;aACrC;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;SACvD;IACH,CAAC;IAED,MAAM,CAAC,sBAAsB;QAC3B,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE;YAC7B,MAAM,KAAK,CAAC,oBAAoB,EAAE,CAAC;YACnC,IAAI,KAAK,CAAC,UAAU,IAAI,qBAAY,CAAC,WAAW,EAAE;gBAChD,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;gBACzB,eAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CAAC;QAEF,MAAM,MAAM,GAAG,CAAC,YAAY,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,WAAW,EAAE,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACvB,QAAQ,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvB,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,UAAU;QACf,KAAK,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;QACrC,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACL,eAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;aAC9B;SACF;IACH,CAAC;IA0TD,MAAM,CAAC,cAAc,CACnB,KAAW,EACX,WAAmB,KAAK,CAAC,QAAQ,CAAC,YAAY;QAE9C,IAAI,KAAK,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC;QAElC,IAAI;YACF,sCAAsC;YACtC,IACE,KAAK,CAAC,gBAAgB,CAAC,IAAI,GAAG,EAAE;gBAChC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAChC;gBACA,OAAO,IAAI,CAAC;aACb;YAED,IAAI,OAAO,GAAkB,IAAI,CAAC;YAElC,0DAA0D;YAC1D,IAAI,qBAAY,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAC/C,OAAO,GAAG,qBAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;iBAAM;gBACL,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;aACxB;YAED,IAAI,OAAO,EAAE;gBACX,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEpC,oBAAoB;gBACpB,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE;oBACrB,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;gBAEH,mBAAmB;gBACnB,UAAU,CAAC,GAAG,EAAE;oBACd,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;YAED,OAAO,OAAO,CAAC;SAChB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAsUD,MAAM,CAAC,SAAS,CAAC,KAAW;QAC1B,KAAK,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,KAAW;QACpC,qBAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC/B,eAAM,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;;AAjzBH,sBAkzBC;;AAvxBQ,iBAAW,GAAY,KAAK,CAAC;AAC7B,gBAAU,GAAY,IAAI,CAAC;AAsB3B,sBAAgB,GAAgB,IAAI,GAAG,EAAE,CAAC;AAEjC,cAAQ,GAAG;IACzB,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,CAAC;IACZ,YAAY,EAAE,CAAC;IACf,MAAM,EAAE,CAAC;IACT,QAAQ,EAAE,CAAC;CACZ,CAAC;AAEK,cAAQ,GAAY,KAAK,CAAC;AAC1B,yBAAmB,GAAY,KAAK,CAAC;AACrC,mBAAa,GAAkB,IAAI,CAAC;AACpC,iBAAW,GAAkB,IAAI,CAAC;AAClC,oBAAc,GAAkB,IAAI,CAAC;AA4DrC,gBAAU,GAAG,KAAK,IAAI,EAAE;IAC7B,IAAI,KAAK,CAAC,WAAW;QAAE,OAAO;IAC9B,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;IAEzB,KAAK,CAAC,YAAY,EAAE,CAAC;IACrB,IAAI,KAAK,CAAC,QAAQ,EAAE;QAClB,KAAK,CAAC,sBAAsB,EAAE,CAAC;KAChC;IAED,IAAI,qBAAY,CAAC,WAAW,EAAE;QAC5B,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;KAC1B;IAED,4EAA4E;IAC5E,MAAM,eAAe,GAAG,CACtB,QAAgB,EAChB,OAAiB,EACjB,SAAiB,GAAG,EACpB,gBAAwB,CAAC,EACZ,EAAE;QACf,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACvB,OAAO,IAAI,aAAI,CAAC;gBACd,GAAG,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC;gBAC5B,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,aAAa;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,CACjB,GAAW,EACX,SAAiB,GAAG,EACpB,OAAgB,KAAK,EACrB,gBAAwB,CAAC,EACnB,EAAE;QACR,OAAO,IAAI,aAAI,CAAC;YACd,GAAG,EAAE,CAAC,GAAG,CAAC;YACV,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,aAAa;SACpB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI;QACF,0CAA0C;QAC1C,KAAK,CAAC,UAAU,GAAG,UAAU,CAC3B,4BAA4B,EAC5B,IAAI,EACJ,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,cAAc,GAAG,UAAU,CAC/B,+BAA+B,EAC/B,CAAC,EACD,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,4BAA4B,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAC1E,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACvE,kBAAkB;QAClB,KAAK,CAAC,oBAAoB,GAAG,eAAe,CAC1C,kCAAkC,EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,oBAAoB,GAAG,eAAe,CAC1C,kCAAkC,EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,mBAAmB,GAAG,eAAe,CACzC,iCAAiC,EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,cAAc,GAAG,eAAe,CACpC,uCAAuC,EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,GAAG,EACH,CAAC,CACF,CAAC;QAEF,gBAAgB;QAChB,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,uBAAuB,EACvB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,eAAe,CAC/B,sBAAsB,EACtB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,UAAU,GAAG,CAAC,UAAU,CAAC,yBAAyB,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1E,KAAK,CAAC,UAAU,GAAG,eAAe,CAChC,uBAAuB,EACvB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,eAAe,GAAG,eAAe,CACrC,4BAA4B,EAC5B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,uBAAuB,EACvB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,uBAAuB,EACvB,CAAC,CAAC,CAAC,EACH,IAAI,EACJ,CAAC,CACF,CAAC;QAEF,gBAAgB;QAChB,KAAK,CAAC,eAAe,GAAG,UAAU,CAChC,gCAAgC,EAChC,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,uBAAuB,EACvB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QAEF,qBAAqB;QACrB,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,qBAAqB,EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,gBAAgB,GAAG,eAAe,CACtC,qBAAqB,EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,kBAAkB,GAAG,UAAU,CACnC,0BAA0B,EAC1B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,cAAc,GAAG,UAAU,CAC/B,6BAA6B,EAC7B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,aAAa,GAAG,UAAU,CAC9B,4BAA4B,EAC5B,IAAI,EACJ,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,yBAAyB,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACxE,KAAK,CAAC,WAAW,GAAG,UAAU,CAC5B,0BAA0B,EAC1B,IAAI,EACJ,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,UAAU,CAC1B,8BAA8B,EAC9B,IAAI,EACJ,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,UAAU,CAC5B,6BAA6B,EAC7B,IAAI,EACJ,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,WAAW,GAAG,eAAe,CACjC,uBAAuB,EACvB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QACF,gBAAgB;QAChB,KAAK,CAAC,YAAY,GAAG,eAAe,CAClC,2BAA2B,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,cAAc,GAAG,UAAU,CAC/B,iCAAiC,EACjC,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QAEF,cAAc;QACd,KAAK,CAAC,YAAY,GAAG,eAAe,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzE,KAAK,CAAC,cAAc,GAAG,eAAe,CACpC,mBAAmB,EACnB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QAEF,gBAAgB;QAChB,KAAK,CAAC,cAAc,GAAG,eAAe,CACpC,0BAA0B,EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,UAAU,GAAG,eAAe,CAChC,0BAA0B,EAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,IAAI,EACJ,CAAC,CACF,CAAC;QACF,KAAK,CAAC,UAAU,GAAG,eAAe,CAChC,sBAAsB,EACtB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,iBAAiB,GAAG,eAAe,CACvC,sBAAsB,EACtB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,gBAAgB,GAAG,UAAU,CACjC,2BAA2B,EAC3B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,kBAAkB,GAAG,eAAe,CACxC,wBAAwB,EACxB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,IAAI,EACJ,CAAC,CACF,CAAC;QACF,cAAc;QACd,KAAK,CAAC,UAAU,GAAG,eAAe,CAChC,yBAAyB,EACzB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,GAAG,EACH,CAAC,CACF,CAAC;QACF,KAAK,CAAC,aAAa,GAAG,UAAU,CAC9B,0BAA0B,EAC1B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,aAAa,GAAG,UAAU,CAC9B,8BAA8B,EAC9B,GAAG,EACH,IAAI,EACJ,CAAC,CACF,CAAC;QACF,KAAK,CAAC,cAAc,GAAG,UAAU,CAC/B,+BAA+B,EAC/B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QAEF,uCAAuC;QACvC,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,uBAAuB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACvE,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,qBAAqB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACnE,KAAK,CAAC,UAAU,GAAG,UAAU,CAC3B,gCAAgC,EAChC,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QACF,KAAK,CAAC,YAAY,GAAG,UAAU,CAC7B,kCAAkC,EAClC,GAAG,EACH,IAAI,EACJ,CAAC,CACF,CAAC,CAAC,iBAAiB;QACpB,KAAK,CAAC,SAAS,GAAG,UAAU,CAC1B,+BAA+B,EAC/B,GAAG,EACH,KAAK,EACL,CAAC,CACF,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;KAC/C;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KAC/C;AACH,CAAC,CAAC;AA+CK,yBAAmB,GAAG,CAAC,WAAmB,EAAE,EAAE;IACnD,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,oBAAoB,CAAC;IACvC,IAAI,WAAW,KAAK,CAAC;QAAE,KAAK,GAAG,KAAK,CAAC,oBAAoB,CAAC;IAC1D,IAAI,WAAW,KAAK,CAAC;QAAE,KAAK,GAAG,KAAK,CAAC,mBAAmB,CAAC;IAEzD,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnD,CAAC,CAAC;AAEK,mBAAa,GAAG,GAAG,EAAE;IAC1B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC1D,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnD,CAAC,CAAC;AAEK,WAAK,GAAG,GAAG,EAAE;IAClB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACvD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,SAAG,GAAG,CAAC,OAAgB,KAAK,EAAE,EAAE;IACrC,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAE7B,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/D,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC;AAEK,UAAI,GAAG,GAAG,EAAE;IACjB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACtD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClD,CAAC,CAAC;AAEK,gBAAU,GAAG,GAAG,EAAE;IACvB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACtE,CAAC,CAAC;AAEK,WAAK,GAAG,GAAG,EAAE;IAClB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACvD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC1D,EAAI,CAAC,SAAS,CACZ,GAAG,EAAE,CAAC,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EACzD,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAEK,gBAAU,GAAG,GAAG,EAAE;IACvB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC5D,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,UAAI,GAAG,GAAG,EAAE;IACjB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACxD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,UAAU,CAAC,GAAG,EAAE;QACd,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACzE,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC;AAEK,UAAI,GAAG,GAAG,EAAE;IACjB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChE,CAAC,CAAC;AAEK,mBAAa,GAAG,GAAG,EAAE;IAC1B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACzE,CAAC,CAAC;AAEK,UAAI,GAAG,GAAG,EAAE;IACjB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACtD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,gBAAU,GAAG,GAAG,EAAE;IACvB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,sEAAsE;IACtE,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACjE,CAAC,CAAC;AAEK,YAAM,GAAG,GAAG,EAAE;IACnB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACxD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,mBAAa,GAAG,CAAC,QAAgB,CAAC,EAAE,EAAE;IAC3C,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAE7B,IAAI;QACF,iCAAiC;QACjC,IAAI,KAAK,CAAC,WAAW,EAAE;YACrB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACzC;QAED,oBAAoB;QACpB,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAE3C,8BAA8B;QAC9B,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE;YAChD,KAAK,CAAC,oBAAoB,EAAE,CAAC;SAC9B;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;KACnD;AACH,CAAC,CAAC;AAEK,qBAAe,GAAG,CAAC,QAAgB,CAAC,EAAE,EAAE;IAC7C,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAE7B,IAAI;QACF,iCAAiC;QACjC,IAAI,KAAK,CAAC,aAAa,EAAE;YACvB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SAC7C;QAED,oBAAoB;QACpB,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAE/C,8BAA8B;QAC9B,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE;YAChD,KAAK,CAAC,oBAAoB,EAAE,CAAC;SAC9B;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;KACrD;AACH,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC1D,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,iBAAW,GAAG,GAAG,EAAE;IACxB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAE7B,IAAI;QACF,mCAAmC;QACnC,IACE,CAAC,KAAK,CAAC,cAAc;YACrB,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,EACjD;YACA,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAClD;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;KACtD;AACH,CAAC,CAAC;AAEK,iBAAW,GAAG,GAAG,EAAE;IACxB,IAAI,KAAK,CAAC,cAAc,EAAE;QACxB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9C,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;KAC7B;AACH,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAE7B,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAE5B,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE;QACpC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC3B,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AAC9B,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9D,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACtD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClD,CAAC,CAAC;AAEK,mBAAa,GAAG,GAAG,EAAE;IAC1B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,SAAS,CAAC,GAAG,EAAE;QAClB,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACjE,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7D,IAAI,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACtD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,oBAAc,GAAG,GAAG,EAAE;IAC3B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC3D,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,kBAAY,GAAG,GAAG,EAAE;IACzB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACxE,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACrE,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACtD,EAAI,CAAC,SAAS,CACZ,GAAG,EAAE,CAAC,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EACzD,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACvD,EAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEK,aAAO,GAAG,GAAG,EAAE;IACpB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACrD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IACvD,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,gBAAU,GAAG,GAAG,EAAE;IACvB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtE,CAAC,CAAC;AAEK,cAAQ,GAAG,GAAG,EAAE;IACrB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,SAAS,CAAC,GAAG,EAAE;QAClB,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACpE,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC;AAEK,gBAAU,GAAG,GAAG,EAAE;IACvB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtE,CAAC,CAAC;AAEK,qBAAe,GAAG,GAAG,EAAE;IAC5B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC7D,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEK,qBAAe,GAAG,GAAG,EAAE;IAC5B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,EAAI,CAAC,cAAc,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC3E,CAAC,CAAC;AAEK,sBAAgB,GAAG,GAAG,EAAE;IAC7B,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,WAAI,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC;IAC9D,EAAI,CAAC,SAAS,CACZ,GAAG,EAAE,CAAC,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EACzD,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAEK,eAAS,GAAG,GAAG,EAAE;IACtB,IAAI,KAAK,CAAC,UAAU;QAAE,OAAO;IAC7B,IAAI,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9C,EAAI,CAAC,SAAS,CAAC,GAAG,EAAE;QAClB,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC,EAAE,GAAG,CAAC,CAAC;IACR,EAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,eAAS,GAAG,CAAC,MAAkB,EAAE,KAAa,EAAE,EAAE;IACvD,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC5B,CAAC,CAAC;;;;;;;;;;;;;;;ACxyBJ,mEAA+B;AAC/B,0EAAgC;AAEhC,MAAa,KAAM,SAAQ,aAAK;IAAhC;;QACE,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAfD,sBAeC;;;;;;;;;;;;;;;AClBD,mEAA+B;AAC/B,uEAAwC;AAOxC,MAAa,MAAO,SAAQ,WAAI;IAQ9B,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,UAA2B;QACvE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAUpB,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAY,EAAE,EAAE;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtC,IACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBAEtC,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;oBAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACpD;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,IAAI,IAAI,CAAC,OAAO;gBACd,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;;gBAEF,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACN,CAAC,CAAC;QAhFA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;CA0EF;AA3FD,wBA2FC;;;;;;;;;;;;;;;AClGD,mEAA+B;AAC/B,wGAAsD;AACtD,uEAA8B;AAE9B,MAAa,KAAM,SAAQ,WAAI;IAM7B,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,QAAiB,EACjB,SAAkB,EAClB,OAAgB,EAChB,UAAmB;QAEnB,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAapB,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,MAAM,EAAE,GAAG,6BAAa,CAAC,QAAQ,CAAC;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,mDAAmD;YACnD,IACE,CAAC,IAAI,CAAC,OAAO;gBACb,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;gBACzB,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,EAAE,EACtC;gBACA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,CAAC;aACtC;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAEhE,oEAAoE;YACpE,MAAM,OAAO,GAAG,WAAI,CAAC,GAAG,CAAC;YACzB,MAAM,QAAQ,GACZ,MAAM,CAAC,wBAAoD,CAAC;YAC7D,WAAY,CAAC,GAAG,GAAG,MAAM,CAAC;YAE3B,UAAU;YACV,MAAM,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAChD,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,0BAA0B;YAC1B,MAAM,CAAC,wBAAwB,GAAG,WAAW,CAAC;YAC9C,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,4EAA4E;YAC5E,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,CAAC,wBAAwB,GAAG,kBAAkB,CAAC;gBACrD,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YAED,mBAAmB;YAClB,WAAY,CAAC,GAAG,GAAG,OAAO,CAAC;YAC5B,MAAM,CAAC,wBAAwB,GAAG,QAAQ,CAAC;YAE3C,wCAAwC;YACxC,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,WAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAClD,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC3D,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAlGA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,QAAQ;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACtB,IAAI,SAAS;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,OAAO;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACrB,IAAI,UAAU;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CA0FF;AApHD,sBAoHC;;;;;;;;;;;;;;;ACtHD,oGAAmD;AACnD,2GAAyD;AACzD,sEAAkC;AAGlC,MAAsB,UAAW,SAAQ,mBAAQ;IAS/C,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS;QAC1C,KAAK,EAAE,CAAC;QAWV,gBAAW,GAAG,CAAC,UAAkB,CAAC,EAAE,UAAkB,CAAC,EAAE,EAAE;YACzD,IAAI,6BAAa,CAAC,eAAe;gBAAE,OAAO,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE,GAAE,CAAC,CAAC;QACnC,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QACvC,SAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAChB,YAAO,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAEnB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAC7B,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,SAAS;gBAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YAEtC,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,KAAK,EACL,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QACF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QACxC,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAhDvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;CAyCF;AA5DD,gCA4DC;;;;;;;;;;;;;;;ACnED,mEAA0C;AAE1C,wGAAsD;AAEtD,8HAAgE;AAEhE,0EAAkC;AAClC,kFAAuC;AACvC,0GAAsD;AACtD,iHAA4D;AAC5D,yFAA0C;AAE1C,IAAY,OAKX;AALD,WAAY,OAAO;IACjB,0BAAe;IACf,wBAAa;IACb,0BAAe;IACf,wBAAa;AACf,CAAC,EALW,OAAO,GAAP,eAAO,KAAP,eAAO,QAKlB;AAED,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,uCAAI;IACJ,mDAAU;IACV,qDAAW;IACX,mDAAU;AACZ,CAAC,EALW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAKnB;AAED,MAAa,IAAK,SAAQ,uBAAU;IA0BlC,YACE,IAAU,EACV,IAAU,EACV,CAAS,EACT,CAAS,EACT,OAAkB,EAClB,QAAkB;QAElB,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAsD1B,gBAAW,GAAG,CACZ,UAAkB,CAAC,EACnB,UAAkB,CAAC,EACnB,UAAmB,IAAI,EACvB,EAAE;YACF,IAAI,6BAAa,CAAC,eAAe,IAAI,OAAO;gBAAE,OAAO,CAAC,CAAC;YACvD,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;YAClE,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO,GAAG,GAAG,CAAC,CAAC;;gBAC3B,OAAO,GAAG,CAAC;QAClB,CAAC,CAAC;QAEF,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,OAAO,CAAC,CAAC;iBACV;qBAAM;oBACL,OAAO,CAAC,CAAC,CAAC;iBACX;aACF;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,UAAK,GAAG,GAAG,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEF,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;gBAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACjE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC;QAEF,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;wBACpC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,qCAAqC,CAAC,CAAC;wBAE7D,OAAO,IAAI,CAAC;qBACb;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;wBACvD,OAAO,KAAK,CAAC;qBACd;iBACF;;oBACC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,6CAA6C,CAAC,CAAC;gBACvE,OAAO,KAAK,CAAC;aACd;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,sDAAsD,CACvD,CAAC;gBACF,OAAO,KAAK,CAAC;aACd;YAED,IACE,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU;gBACjC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EACzC;gBACA,IACE,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU;oBACvD,IAAI,CAAC,SAAS,EACd;oBACA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,2CAA2C,CAAC,CAAC;oBACnE,OAAO,KAAK,CAAC;iBACd;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,kDAAkD,CACnD,CAAC;oBACF,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,MAAc,EAAE,EAAE;YAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,aAAa;oBACb,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC/B,aAAK,CAAC,MAAM,EAAE,CAAC;oBACf,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;aACF;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU,EAAE;gBAC5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW,EAAE;gBACtC,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,aAAK,CAAC,MAAM,EAAE,CAAC;gBAEf,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAClC;YACD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAW,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC;QAEF,gFAAgF;QAChF,gEAAgE;QAChE,iBAAY,GAAG,GAAY,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI;gBAAE,OAAO,KAAK,CAAC;YAC5D,IAAI;gBACF,MAAM,aAAa,GAAI,IAAI,CAAC,IAAY,CAAC,aAAa,CAAC;gBACvD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CACxC,CAAC,CAAC,EAAE,EAAE,CAAE,CAAS,CAAC,MAAM,KAAK,aAAa,CAC3C,CAAC;gBACF,MAAM,MAAM,GAAG,WAAW;qBACvB,KAAK,EAAE;qBACP,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvE,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAW,CAAC,CAAC;gBACjD,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAW,CAAC,CAAC;gBAC7D,IAAI,OAAO,KAAK,CAAC,CAAC,IAAI,QAAQ,KAAK,CAAC,CAAC;oBAAE,OAAO,KAAK,CAAC;gBACpD,OAAO,OAAO,GAAG,QAAQ,CAAC;aAC3B;YAAC,MAAM;gBACN,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;;gBAAM,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,aAAK,CAAC,QAAQ,EAAE,CAAC;gBACjB,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;oBACnC,IAAI,CAAC,WAAW,GAAG,gBAAS,CAAC,IAAI,CAAC;oBAClC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,gBAAS,CAAC,IAAI,CAAC;iBAC9C;gBACD,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,KAAK,EAAE;oBACpC,IAAI,CAAC,WAAW,GAAG,gBAAS,CAAC,KAAK,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,gBAAS,CAAC,KAAK,CAAC;iBAC/C;aACF;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;YAE9B,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;gBACpE,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3D;;gBACC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAC9B,MAAM,EACN,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;YACJ,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,yCAAyC,CAAC,CAAC;aAClE;YACD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI,EAAE;gBACnC,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YAED,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE,EAAE;gBACjC,aAAa;gBACb,IAAI,IAAI,CAAC,MAAM;oBACb,WAAI,CAAC,QAAQ,CACX,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAC/C,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CACvB,CAAC;;oBAEF,WAAI,CAAC,QAAQ,CACX,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAC/C,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACL;YAED,IACE,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE;gBAC7B,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACrC,oDAAoD;;gBAEpD,iBAAiB;gBACjB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACJ,0DAA0D;YAC1D,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE,EAAE;gBACjC,aAAa;gBACb,IAAI,CAAC,IAAI,CAAC,SAAS;oBAAE,OAAO;gBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM;oBACd,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAC9B,CAAC;;oBAEF,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAC9B,CAAC;aACL;YACD,WAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAExC,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,gDAAgD;YAChD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;gBAC3B,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,KAAK,CAAC;gBAChC,IAAI,CAAC,WAAW,IAAI,KAAK,GAAG,KAAK,CAAC;gBAClC,UAAU,GAAG,CAAC,CAAC;gBACf,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;aACF;YACD,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,EAAE,EAAE;gBACjC,aAAa;gBACb,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,SAAS,EACd,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EACzB,IAAI,CAAC,CAAC;oBACJ,IAAI;oBACJ,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAClD,IAAI,CAAC,WAAW,EAClB,CAAC,EACD,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAS,CAAC,KAAK;oBACrE,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC;gBAC1B,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,SAAS,EACd,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EACzB,IAAI,CAAC,CAAC;oBACJ,IAAI;oBACJ,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAClD,IAAI,CAAC,WAAW,EAClB,CAAC,EACD,CAAC,CACF,CAAC,CAAC,iBAAiB;aACrB;YACD,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;QAtYA,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,QAAQ,IAAI,CAAC,OAAO,EAAE;YACpB,KAAK,gBAAS,CAAC,EAAE;gBACf,YAAY,GAAG,CAAC,GAAG,CAAC;YACtB,KAAK,gBAAS,CAAC,IAAI;gBACjB,YAAY,GAAG,GAAG,CAAC;YACrB,KAAK,gBAAS,CAAC,IAAI;gBACjB,YAAY,GAAG,CAAC,GAAG,CAAC;YACtB,KAAK,gBAAS,CAAC,KAAK;gBAClB,YAAY,GAAG,GAAG,CAAC;SACtB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9C,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,QAAQ,CAAC,WAAW;gBACvB,IAAI,mCAAgB,CAAC,UAAU;oBAAE,MAAM;gBACvC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,MAAM;YACR,KAAK,QAAQ,CAAC,UAAU;gBACtB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,MAAM;YACR,KAAK,QAAQ,CAAC,IAAI;gBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,QAAQ,CAAC,UAAU;gBACtB,8CAA8C;gBAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;gBAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,MAAM;SACT;IACH,CAAC;CAoVF;AA1aD,oBA0aC;;;;;;;;;;;;;;;ACpcD,mEAA4C;AAE5C,wGAAsD;AAGtD,qFAAyC;AAEzC,2FAAmD;AAEnD,2HAAwD;AAExD,mFAAgD;AAEhD,yFAA0C;AAC1C,gHAA4E;AAE5E,MAAa,UAAW,SAAQ,uBAAU;IAUxC,YACE,IAAU,EACV,IAAU,EACV,CAAS,EACT,CAAS,EACT,aAAsB,KAAK,EAC3B,cAAuB,0BAAO,CAAC,OAAO,EACtC,WAAqB,mBAAQ,CAAC,IAAI,EAClC,IAAsB,EACtB,iBAA0D;QAE1D,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAnB1B,eAAU,GAAG,KAAK,CAAC;QA4CnB,YAAO,GAAG,GAAG,EAAE;YACb,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAC1D,CAAC,CAAC;QAEF,aAAQ,GAAG,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC9C;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC;QAEF,8CAA8C;QAE9C,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,cAAc,GAAG,IAAI,CAAC;YAC1B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,MAAM,GAAI,EAAU,CAAC,OAAO;oBAChC,CAAC,CAAE,EAAU,CAAC,OAAO,EAAE;oBACvB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;gBACjD,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;oBAC9D,cAAc,GAAG,KAAK,CAAC;iBACxB;aACF;YACD,IAAI,cAAc,EAAE;gBAClB,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxB,yBAAc,CAAC,IAAI,CAAC,eAAM,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;oBAC3D,oEAAoE;oBACpE,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;oBACxD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;wBACjC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;qBAChE;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBACvD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC;aACxD;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,EAAE,GAAG,EAAE,CAAC;gBACR,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBAAE,EAAE,GAAG,EAAE,CAAC;aACvC;YACD,mDAAmD;YAEnD,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EAAE,YAAY;YACf,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,4BAA4B;YAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE5B,iBAAiB;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE9C,mCAAmC;YACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QA9GtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,CAAC;QAEjD,uFAAuF;QACvF,MAAM,iBAAiB,GAAG,iBAAiB;YACzC,CAAC,CAAC,iBAAiB,CAAC,QAAQ;YAC5B,CAAC,CAAC,UAAU,IAAI,CAAC,6BAAa,CAAC,cAAc;gBAC3C,CAAC,CAAC,mBAAQ,CAAC,MAAM;gBACjB,CAAC,CAAC,QAAQ,CAAC;QAEf,8EAA8E;QAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE;YACjC,QAAQ,EAAE,iBAAiB;YAC3B,KAAK,EAAE,iBAAiB,EAAE,KAAK;YAC/B,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IA0FD,QAAQ;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;CACF;AAzID,gCAyIC;;;;;;;;;;;;;;;AC1JD,mEAA+B;AAC/B,uEAAwC;AAExC,yFAA2C;AAG3C,MAAa,KAAM,SAAQ,WAAI;IAI7B,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS;QAC1C,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAyCpB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QArDA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,OAAO;YAC/B,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,IAAI;YAC5B,2EAA2E;YAC3E,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,MAAM;YAC9B,2EAA2E;YAC3E,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,MAAM;YAC9B,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,UAAU,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;YACF,IACE,IAAI,CAAC,SAAS,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,KAAK,EAAE,EACrB;gBACA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC7B;SACF;IACH,CAAC;CAgBF;AA5DD,sBA4DC;;;;;;;;;;;;;;;ACjED,mEAA+B;AAG/B,uEAAwC;AAExC,MAAa,eAAgB,SAAQ,WAAI;IAIvC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAKpB,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,IAAI,IAAI,CAAC,MAAM;gBACb,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;;gBAEF,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACN,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM;gBACd,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;;gBAEF,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACN,CAAC,CAAC;QAlFA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;CAiFF;AAzFD,0CAyFC;;;;;;;;;;;;;;;AC9FD,mEAA+B;AAC/B,0EAAkC;AAClC,kFAAuC;AAIvC,yFAA2C;AAC3C,wGAAsD;AAEtD,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,uCAAQ;IACR,2CAAU;IACV,6CAAW;IACX,2CAAU;AACZ,CAAC,EALW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAKnB;AAUD,MAAa,QAAQ;IAanB,YAAY,IAAU,EAAE,MAAsB;QAZtC,WAAM,GAAY,KAAK,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAW,CAAC,CAAC;QACtB,gBAAW,GAAW,CAAC,CAAC;QACxB,UAAK,GAAW,CAAC,CAAC;QAE1B,UAAK,GAAW,CAAC,CAAC;QAOhB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC;QAE3C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,mBAAmB;QACzB,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,QAAQ,CAAC,MAAM;gBAClB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,MAAM;YACR,KAAK,QAAQ,CAAC,OAAO;gBACnB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,MAAM;YACR,KAAK,QAAQ,CAAC,MAAM;gBAClB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;gBAC1B,MAAM;YACR,KAAK,QAAQ,CAAC,IAAI;gBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,MAAM;SACT;IACH,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,6BAAa,CAAC,cAAc;YAAE,OAAO,IAAI,CAAC;QAC9C,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,EAAE;YACrC,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,GAAG,KAAK,IAAI,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChE,OAAO,IAAI,CAAC;aACb;YAED,yDAAyD;YACzD,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAG,CAAC,CAAC;YAChD,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;aACxD;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,sCAAsC,CAAC,CAAC;aAC/D;YACD,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE;YACtC,0DAA0D;YAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC7C,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CACtE,CAAC;YACF,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,iDAAiD,CAClD,CAAC;gBACF,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,MAAc;QACnB,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,EAAE;YACrC,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAClD,IAAI,GAAG,KAAK,IAAI,IAAI,6BAAa,CAAC,cAAc,EAAE;gBAChD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjC,aAAK,CAAC,MAAM,EAAE,CAAC;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;SACF;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,YAAY,CAAC,KAAa,EAAE,MAAc;QACxC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;YAClC,IAAI,IAAI,YAAY,SAAG,EAAE;gBACvB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE;YACtC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,aAAK,CAAC,MAAM,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAClC;QACD,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;YAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAS,EAAE,KAAa;QAC1C,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;QAEtC,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,KAAK,CAAC;YAChC,IAAI,CAAC,WAAW,IAAI,KAAK,GAAG,KAAK,CAAC;YAClC,UAAU,GAAG,CAAC,CAAC;YACf,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAEnD,4DAA4D;QAC5D,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACtD,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAC7D,CAAC,EACD,CAAC,CACF,CAAC;YACF,OAAO;SACR;QAED,uEAAuE;QACvE,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,SAAS,EACd,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,GAAG,IAAI,CAAC,WAAW,EACpB,KAAK;YACH,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YAClD,IAAI,CAAC,WAAW,EAClB,CAAC,EACD,CAAC,CACF,CAAC;QAEF,WAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,GAAQ;QACb,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QACnC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC;IAC7C,CAAC;CACF;AApND,4BAoNC;;;;;;;;;;;;;;;AC5OD,mEAA+B;AAC/B,uEAA8B;AAE9B,0GAAsD;AAEtD,MAAa,SAAU,SAAQ,WAAI;IAKjC,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,QAAiB,EACjB,SAAkB,EAClB,OAAgB,EAChB,UAAmB;QAEnB,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAwBpB,aAAQ,GAAG,GAAS,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,IAAI,IAAI,CAAC,OAAO;gBACd,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACJ,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAvEA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,QAAQ;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACtB,IAAI,SAAS;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,OAAO;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACrB,IAAI,UAAU;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,yBAAW,CACjC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,GAAG,EACH,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EACZ,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;CAoDF;AAxFD,8BAwFC;;;;;;;;;;;;;;;AC3FD,uEAA8B;AAC9B,0GAAsD;AACtD,2HAAwD;AAGxD,MAAsB,UAAW,SAAQ,WAAI;IAO3C,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAiBpB,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,IAAI,CAAC,WAAW,KAAK,0BAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE;gBACpE,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CACd,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC/C;QACH,CAAC,CAAC;QA1BA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,+BAA+B;IACrB,WAAW,CAAC,KAAa;QACjC,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;YAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,wCAAwC;IAC9B,iBAAiB;QACzB,OAAO,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACvD,CAAC;CAaF;AApCD,gCAoCC;;;;;;;;;;;;;;;AC3CD,mEAA+B;AAC/B,uEAA8B;AAC9B,oHAA2D;AAE3D,MAAa,IAAK,SAAQ,WAAI;IAK5B,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,QAAiB,EACjB,SAAkB,EAClB,OAAgB,EAChB,UAAmB;QAEnB,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAkBpB,aAAQ,GAAG,GAAS,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,IAAI,IAAI,CAAC,OAAO;gBACd,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACJ,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAjEA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,QAAQ;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACtB,IAAI,SAAS;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,OAAO;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACrB,IAAI,UAAU;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,UAAU,EAAE;YAClD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,IAAI,yBAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAC3D,CAAC;SACH;IACH,CAAC;CAoDF;AAlFD,oBAkFC;;;;;;;;;;;;;;;ACvFD,mEAA+B;AAC/B,uEAAwC;AAExC,yFAA2C;AAE3C,MAAa,UAAW,SAAQ,WAAI;IAIlC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS;QAC1C,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAepB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QA3BA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,OAAO;YAC/B,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,eAAQ,CAAC,IAAI;YAC5B,2EAA2E;YAC3E,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC,SAAS,CAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,eAAM,CAAC,IAAI,CACZ,CAAC;IACN,CAAC;CAgBF;AAlCD,gCAkCC;;;;;;;;;;;;;;;ACtCD,mEAA+B;AAC/B,uEAA8B;AAE9B,MAAa,KAAM,SAAQ,WAAI;IAA/B;;QACE,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAnBD,sBAmBC;;;;;;;;;;;;;;;ACtBD,mEAA+B;AAG/B,uEAA8B;AAE9B,kGAA+C;AAC/C,qGAAiD;AACjD,uGAAoD;AAEpD,MAAa,SAAU,SAAQ,WAAI;IAMjC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,SAAkB;QAC9D,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASpB,SAAI,GAAG,GAAG,EAAE;YACV,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;gBAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;YAE/B,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACtC,IACE,IAAI,CAAC,IAAI;wBACP,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;wBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;wBAEtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;iBACrD;aACF;YAED,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CACxB,IAAI,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CACtE,CAAC;QACN,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;wBACpC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;qBACjB;iBACF;aACF;QACH,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,YAAY,aAAK,IAAI,KAAK,YAAY,eAAM,CAAC;gBACjE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,iCAAiC;YACjC,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YAEF,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;gBACpC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;oBAAE,aAAa,GAAG,MAAM,CAAC;gBACzD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;oBAAE,aAAa,GAAG,CAAC,MAAM,CAAC;aAC3D;YACD,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3C,IACE,IAAI,CAAC,SAAS,KAAK,CAAC;gBACpB,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAC9D;gBACA,CAAC,GAAG,CAAC,CAAC;aACP;YACD,WAAI,CAAC,OAAO,CACV,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,aAAa,EACtB,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,WAAI,CAAC,OAAO,CACV,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,GAAG,aAAa,EACtB,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAC9B,CAAC;YAEF,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7C,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;;oBAC7D,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;aAChC;YACD,IAAI,CAAC,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;QAzGA,IAAI,SAAS;YAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;YACrC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;IAC3B,CAAC;CAoGF;AAlHD,8BAkHC;;;;;;;;;;;;;;;ACzHD,iGAAgD;AAChD,wGAAsD;AACtD,8HAAgE;AAEhE,IAAY,QAUX;AAVD,WAAY,QAAQ;IAClB,6CAAW;IACX,uCAAQ;IACR,2CAAU;IACV,2CAAU;IACV,6CAAW;IACX,qDAAe;IACf,qDAAe;IACf,2CAAU;IACV,mDAAc;AAChB,CAAC,EAVW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAUnB;AAED,MAAsB,IAAK,SAAQ,mBAAQ;IAUzC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS;QAC1C,KAAK,EAAE,CAAC;QAHV,SAAI,GAAW,EAAE,CAAC;QAclB,YAAO,GAAG,GAAG,EAAE;YACb,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC;;gBACvD,OAAO,KAAK,CAAC;QACpB,CAAC,CAAC;QAEF,gBAAW,GAAG,CACZ,UAAkB,CAAC,EACnB,UAAkB,CAAC,EACnB,UAAmB,IAAI,EACvB,EAAE;YACF,IAAI,6BAAa,CAAC,eAAe,IAAI,OAAO;gBAAE,OAAO,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC;QAEF,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE,GAAE,CAAC,CAAC;QACnC,mBAAc,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QACvC,SAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAChB,YAAO,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAEnB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QAC7B,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QACxC,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QACxC,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE,GAAE,CAAC,CAAC;QA7CvC,IAAI,CAAC,QAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;CAsCF;AA1DD,oBA0DC;;;;;;;;;;;;;;;AC7ED,mEAA+B;AAI/B,uEAA8B;AAE9B,MAAa,QAAS,SAAQ,WAAI;IAGhC,YAAY,IAAU,EAAE,IAAU,EAAE,CAAS,EAAE,CAAS;QACtD,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAIpB,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,OAAO;QACT,CAAC,CAAC;QApBA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CAoBF;AA1BD,4BA0BC;;;;;;;;;;;;;;;AC/BD,mEAA+B;AAI/B,yFAA0C;AAC1C,kFAAuC;AACvC,mFAAgD;AAChD,yFAA0C;AAC1C,2FAA4C;AAE5C,MAAa,QAAS,SAAQ,uBAAU;IAOtC,YACE,IAAU,EACV,IAAU,EACV,CAAS,EACT,CAAS,EACT,WAAqB,mBAAQ,CAAC,IAAI;QAElC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAZ1B,WAAM,GAAG,KAAK,CAAC;QAGf,eAAU,GAAG,KAAK,CAAC;QAmBnB,cAAS,GAAG,CAAC,MAAc,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,IAAI,CAAC,CAAC;gBAC/D,OAAO;aACR;YAED,kBAAkB;YAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE;gBAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC9B;gBACD,OAAO;aACR;YAED,IAAI;gBACF,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,0FAA0F;gBAC1F,MAAM,OAAO,GAAI,IAAY,CAAC,iBAEjB,CAAC;gBACd,uFAAuF;gBACvF,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjC,IAAI,CAAC,IAAY,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC;iBACrE;gBACD,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACjD,IAAI,OAAO,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC7B,IAAI,CAAC,UAAkB,CAAC,yBAAyB,GAAG,OAAO,CAAC;oBAC7D,IAAI;wBACF,OAAO,CAAC,GAAG,CACT,wDAAwD,OAAO,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,0BAA2B,IAAI,CAAC,UAAkB,EAAE,QAAQ,EAAE,CAC9I,CAAC;qBACH;oBAAC,MAAM,GAAE;iBACX;gBACD,aAAK,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBAC1B,aAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACzB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;aAChE;QACH,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC;QAClD,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,2EAA2E;YAC3E,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACnC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,KAAK,EAAE;oBACT,6EAA6E;oBAC7E,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,KAAK,EAAE;wBACnC,IAAI,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAC3C,KACE,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,EACvB,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,EACrC,CAAC,EAAE,EACH;gCACA,KACE,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,EACvB,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EACtC,CAAC,EAAE,EACH;oCACA,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oCACtC,IAAI,CAAC,YAAY,uBAAU,IAAI,CAAC,CAAC,UAAU,EAAE;wCAC3C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;wCAC5B,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;wCACzB,OAAO;qCACR;iCACF;6BACF;yBACF;qBACF;oBACD,6CAA6C;oBAC7C,0CAA0C;oBAC1C,MAAM,OAAO,GAAI,KAAa,CAAC,SAAS;wBACtC,CAAC,CAAE,KAAa,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;wBAChD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,IAAI,OAAO,CAAC;oBAC7C,OAAO;iBACR;aACF;YACD,yCAAyC;YACzC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;gBAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;aAC7D;QACH,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,EAAE,GAAG,EAAE,CAAC;YACZ,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,CAAC,CAAC;aACR;YAED,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,EAAE,EACF,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAC/B,CAAC;aACH;iBAAM;gBACL,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,EAAE,GAAG,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAC/B,CAAC;aACH;YACD,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,EAAE,GAAG,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;YACF,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,4BAA4B;YAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE5B,iBAAiB;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE9C,8BAA8B;YAC9B,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC;YACxB,IAAI,UAAU,GAAG,KAAK,CAAC;YAEvB,WAAI,CAAC,MAAM,CACT,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAClE,CAAC,EACD,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,KAAa,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,MAAM;gBACb,WAAI,CAAC,QAAQ,CACX,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACN,CAAC,CAAC;QAtMA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAExB,0CAA0C;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE;YACjC,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;IAiMD,QAAQ;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;CACF;AA1ND,4BA0NC;;;;;;;;;;;;;;;ACrOD,mEAA0C;AAE1C,uEAAuC;AACvC,uEAA8B;AAE9B,wGAAsD;AAEtD,MAAa,IAAK,SAAQ,WAAI;IAK5B,YACE,IAAU,EACV,CAAS,EACT,CAAS,EACT,cAAqC;QAErC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAQpB,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YAC5B,OAAO,CACL,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAC9C,QAAQ,CAAC,UAAU;gBACnB,QAAQ,CAAC,WAAW,CACrB,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAY,EAAE;YAC1B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjC,OAAO,QAAQ,EAAE,WAAW,IAAI,KAAK,CAAC;QACxC,CAAC,CAAC;QAqCF,aAAQ,GAAG,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC;QAEF,6DAA6D;QAC7D,2EAA2E;QAC3E,YAAO,GAAG,GAAqB,EAAE;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe;gBAAE,OAAO,SAAS,CAAC;YACrD,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxD,OAAO,KAAK,YAAY,WAAI,CAAC,CAAC,CAAE,KAAc,CAAC,CAAC,CAAC,SAAS,CAAC;QAC7D,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAE;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAEtB,2CAA2C;YAC3C,IAAI,CAAC,WAAW;gBACd,QAAQ,CAAC,aAAa,KAAK,aAAa;oBACxC,QAAQ,CAAC,aAAa,KAAK,iBAAiB;oBAC1C,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,EAAE,CAAC;YAET,mFAAmF;YACnF,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,YAAY,EAAE,CAAC;YACpD,IACE,QAAQ,CAAC,UAAU;gBACnB,QAAQ,CAAC,eAAe;gBACxB,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBACrE,QAAQ,CAAC,WAAW,EACpB;gBACA,IACE,QAAQ,CAAC,eAAe;oBACxB,CAAC,YAAY;oBACb,6BAAa,CAAC,eAAe;oBAE7B,OAAO;gBACT,MAAM,WAAW,GAAG,6BAAa,CAAC,eAAe;oBAC/C,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;oBACpB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE1C,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,WAAW,CACZ,CAAC;aACH;YAED,WAAI,CAAC,QAAQ,CACX,CAAC,GAAG,IAAI,CAAC,WAAW,EACpB,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACJ,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI;gBAAE,OAAO;YAC/B,IAAI,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM;gBACtC,WAAI,CAAC,QAAQ,CACX,CAAC,GAAG,IAAI,CAAC,WAAW,EACpB,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,EACV,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;QACN,CAAC,CAAC;QA1JA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,cAAc,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAuBD,IAAI,SAAS;QACX,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI;YAClD,UAAU,CAAC,IAAI,CAAC,gBAAS,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI;YAClD,UAAU,CAAC,IAAI,CAAC,gBAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;YAClD,UAAU,CAAC,IAAI,CAAC,gBAAS,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;YAClD,UAAU,CAAC,IAAI,CAAC,gBAAS,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACjD,IACE,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,EAAE,CAAC;YACjC,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,IAAI,CAAC,EACnC;YACA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,OAAO,gBAAS,CAAC,OAAO,CAAC;SAC1B;QACD,IACE,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,EAAE,CAAC;YACjC,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,KAAK,CAAC,EACpC;YACA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,OAAO,gBAAS,CAAC,QAAQ,CAAC;SAC3B;QACD,IACE,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,IAAI,CAAC;YACnC,UAAU,CAAC,QAAQ,CAAC,gBAAS,CAAC,IAAI,CAAC,EACnC;YACA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,OAAO,gBAAS,CAAC,SAAS,CAAC;SAC5B;QACD,OAAO,gBAAS,CAAC,UAAU,CAAC;IAC9B,CAAC;CA8FF;AAvKD,oBAuKC;;;;;;;;;;;;;;;AC9KD,mEAA+B;AAG/B,0GAAsD;AACtD,6GAAyD;AACzD,uEAA8B;AAC9B,yFAA2C;AAE3C,MAAa,SAAU,SAAQ,WAAI;IAOjC,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,YAAsB;QAClE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAoBpB,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ;gBAAE,OAAO,IAAI,CAAC;YAC3B,OAAO,CACL,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAC9C,QAAQ,CAAC,UAAU;gBACnB,QAAQ,CAAC,WAAW,CACrB,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAErC,IAAI,CAAC,WAAW;gBACd,QAAQ,EAAE,aAAa,KAAK,aAAa;oBACzC,QAAQ,EAAE,aAAa,KAAK,iBAAiB;oBAC3C,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YAED,WAAI,CAAC,MAAM,CACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EACtB,EAAE,EACF,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,EAC7B,CAAC,EACD,CAAC,CACF,CAAC;YAEF,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QAtFA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAC/B,CAAC,EACD,+BAAc,CAAC,iBAAiB,EAChC,GAAG,CACJ,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC1B,CAAC;CAuEF;AAjGD,8BAiGC;;;;;;;;;;;;;;;ACzGD,mEAA+B;AAG/B,0GAAsD;AAEtD,uEAA8B;AAG9B,MAAa,MAAO,SAAQ,WAAI;IAO9B,YAAY,IAAU,EAAE,CAAS,EAAE,CAAS,EAAE,YAAsB;QAClE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAoBpB,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,kBAAa,GAAG,GAAY,EAAE;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,aAAQ,GAAG,GAAY,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ;gBAAE,OAAO,IAAI,CAAC;YAC3B,OAAO,CACL,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAC9C,QAAQ,CAAC,UAAU;gBACnB,QAAQ,CAAC,WAAW,CACrB,CAAC;QACJ,CAAC,CAAC;QAEF,SAAI,GAAG,CAAC,KAAa,EAAE,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;gBAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAErC,IAAI,CAAC,WAAW;gBACd,QAAQ,EAAE,aAAa,KAAK,aAAa;oBACzC,QAAQ,EAAE,aAAa,KAAK,iBAAiB;oBAC3C,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;aACH;YAED,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,WAAI,CAAC,QAAQ,CACX,CAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,EACD,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,CAAC,EACD,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QA3EA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,0CAA0C;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,CAChC,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,IAAI,CAAC,CAAC,GAAG,GAAG,EACZ,EAAE,EACF,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,qBAAqB;QACtC,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,kCAAkC;QAClC,uBAAuB;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,MAAM;QACnC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC1B,CAAC;CA4DF;AAtFD,wBAsFC;;;;;;;;;;;;;;;AC9FD,wFAA0C;AAE1C,MAAM,IAAI,GAAG;IACX,iEAAiE;IAEjE,wEAAwE;IAExE,0DAA0D;IAE1D,+DAA+D;IAE/D,mEAAmE;IAEnE,qCAAqC;IAErC,+DAA+D;IAE/D,wEAAwE;IAExE,kFAAkF;IAElF,uEAAuE;IAEvE,sDAAsD;IAEtD,iEAAiE;IAEjE,yFAAyF;IAEzF,0DAA0D;IAE1D,gEAAgE;IAEhE,kFAAkF;IAElF,4FAA4F;IAE5F,kGAAkG;IAElG,oFAAoF;IAEpF,iFAAiF;IAEjF,oFAAoF;IAEpF,oFAAoF;IAEpF,iCAAiC;IAEjC,+FAA+F;IAE/F,+EAA+E;IAE/E,uGAAuG;IAEvG,8EAA8E;IAE9E,0DAA0D;IAE1D,0EAA0E;IAE1E,2BAA2B;IAE3B,wBAAwB;IAExB,8BAA8B;IAE9B,kCAAkC;IAElC,+BAA+B;IAE/B,wBAAwB;IAExB,gCAAgC;IAEhC,0CAA0C;IAE1C,yCAAyC;IAEzC,sCAAsC;IAEtC,+BAA+B;IAE/B,uCAAuC;IAEvC,8BAA8B;IAE9B,oCAAoC;IAEpC,+BAA+B;IAE/B,mCAAmC;IAEnC,2BAA2B;IAE3B,uCAAuC;IAEvC,yCAAyC;IAEzC,sCAAsC;IAEtC,sBAAsB;IAEtB,kCAAkC;IAElC,6BAA6B;IAE7B,8BAA8B;IAE9B,gCAAgC;IAEhC,qCAAqC;IAErC,6BAA6B;IAE7B,wCAAwC;IAExC,qCAAqC;CACtC,CAAC;AAEF,MAAa,IAAI;IACf,MAAM,CAAC,YAAY;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;CACF;AAJD,oBAIC;;;;;;;;;;;;;;;AC3HD,mEAAoC;AACpC,+FAAgD;AAGhD,gFAAkC;AAElC,IAAiB,KAAK,CAmjBrB;AAnjBD,WAAiB,OAAK;IACpB,mCAAmC;IACnC;;;;;;;MAOE;IAOF,IAAY,aAGX;IAHD,WAAY,aAAa;QACvB,iDAAI;QACJ,iDAAI;IACN,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;IAED,IAAI,WAAW,GAAG,CAAC,IAAI,EAAE,EAAE;QACzB,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,YAAY,uBAAU;gBAChE,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,GAAG,CAAC;;YACL,OAAO,QAAQ,CAAC;IACvB,CAAC,CAAC;IAEF,MAAa,KAAK;QAIhB,YAAY,IAAgB;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,KAAK,GAAkB,EAAE,CAAC;YAC9B,IAAI,GAAa,EACf,SAAiB,EACjB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;gBAC5B,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;gBACvB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,0BAA0B;gBAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;oBAClC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;aACF;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;QAED,QAAQ;YACN,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACvB,IAAI,QAAgB,EAAE,GAAgB,EAAE,CAAS,EAAE,CAAS,CAAC;YAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,GAAI;gBAC7C,QAAQ,GAAG,EAAE,CAAC;gBACd,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;gBACjB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAI;oBACnC,QAAQ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;iBACjC;gBACD,WAAW,GAAG,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC;aAC7C;YACD,OAAO,WAAW,CAAC;QACrB,CAAC;KACF;IAnCY,aAAK,QAmCjB;IAED,MAAa,SAAS;QAOpB,YAAY,CAAS,EAAE,CAAS,EAAE,IAAmB;YACnD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QAED,QAAQ;YACN,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QAC3C,CAAC;QAED,MAAM;YACJ,OAAO,IAAI,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC;QACzC,CAAC;KACF;IAtBY,iBAAS,YAsBrB;IAED,MAAa,UAAU;QAIrB,YAAY,aAAoC;YAC9C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,IAAS;YACZ,4CAA4C;YAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,yBAAyB;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,GAAG;YACD,kDAAkD;YAClD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7B,wCAAwC;YACxC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAC7B,0DAA0D;YAC1D,+BAA+B;YAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAS;YACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEnC,0DAA0D;YAC1D,uBAAuB;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACtB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACpD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;oBACd,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACvB;QACH,CAAC;QAED,IAAI;YACF,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC7B,CAAC;QAED,cAAc,CAAC,IAAS;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5C,CAAC;QAED,QAAQ,CAAC,CAAS;YAChB,yCAAyC;YACzC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,kDAAkD;YAClD,OAAO,CAAC,GAAG,CAAC,EAAE;gBACZ,oDAAoD;gBACpD,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAC9B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACjC,8CAA8C;gBAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;oBAC5D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;oBAChC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;oBACzB,8CAA8C;oBAC9C,CAAC,GAAG,OAAO,CAAC;iBACb;qBAAM;oBACL,4DAA4D;oBAC5D,MAAM;iBACP;aACF;QACH,CAAC;QAED,QAAQ,CAAC,CAAS;YAChB,4CAA4C;YAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAC9B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EACzB,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAE1C,OAAO,IAAI,EAAE;gBACX,6CAA6C;gBAC7C,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EACxB,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;gBACxB,yDAAyD;gBACzD,UAAU;gBACV,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,qDAAqD;gBACrD,IAAI,OAAO,GAAG,MAAM,EAAE;oBACpB,oCAAoC;oBACpC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAChC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBAC3C,4DAA4D;oBAC5D,IAAI,WAAW,GAAG,SAAS;wBAAE,IAAI,GAAG,OAAO,CAAC;iBAC7C;gBACD,0CAA0C;gBAC1C,IAAI,OAAO,GAAG,MAAM,EAAE;oBACpB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAChC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBAC3C,IAAI,WAAW,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC;wBACzD,IAAI,GAAG,OAAO,CAAC;iBAClB;gBAED,2DAA2D;gBAC3D,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;oBAC7B,CAAC,GAAG,IAAI,CAAC;iBACV;qBAAM;oBACL,0BAA0B;oBAC1B,MAAM;iBACP;aACF;QACH,CAAC;KACF;IAjHY,kBAAU,aAiHtB;IAmBD,MAAa,KAAK;QAGhB,YACE,IAAa,EACb,aAA0B,EAC1B,kBAA6B,EAC7B,UAAoB;YAEpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;wBAChB,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACf,CAAC,EAAE,CAAC;wBACJ,CAAC,EAAE,CAAC;wBACJ,CAAC,EAAE,CAAC;wBACJ,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,KAAK;wBACd,MAAM,EAAE,KAAK;wBACb,GAAG,EAAE;4BACH,CAAC,EAAE,CAAC;4BACJ,CAAC,EAAE,CAAC;yBACL;wBACD,MAAM,EAAE,IAAI;qBACb,CAAC;iBACH;aACF;YACD,IAAI,aAAa,KAAK,SAAS,EAAE;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IACE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBACvB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;wBACrC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBACvB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;wBAExC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC;iBACrE;aACF;YACD,IAAI,kBAAkB,EAAE;gBACtB,IACE,kBAAkB,CAAC,CAAC,IAAI,CAAC;oBACzB,kBAAkB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;oBACvC,kBAAkB,CAAC,CAAC,IAAI,CAAC;oBACzB,kBAAkB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;oBAE1C,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;aACpE;QACH,CAAC;QAED,IAAI;YACF,OAAO,IAAI,UAAU,CAAC,UAAU,IAAe;gBAC7C,OAAO,IAAI,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,KAAK,CAAC,GAAQ;YACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;oBAC1C,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG;wBAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC;QAED,OAAO,CACL,KAAU,EACV,GAAQ,EACR,QAAkB,EAClB,aAAuB,EACvB,cAAwB,EACxB,aAAyB,EACzB,SAAoB,EACpB,aAAuB,EACvB,kBAA6B;YAE7B,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;YACxC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACtB,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;YAChC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;YAClC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;YAEhC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAE3B,IAAI,MAAiB,EAAE,IAAe,CAAC;YACvC,IAAI,KAAK,CAAC,CAAC,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,KAAK,SAAS;gBAChD,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;gBAClC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEhC,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS;gBAC5C,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;gBAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,IAAI,KAAK,CAAC,oBAAoB,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;gBAAE,OAAO,EAAE,CAAC;YAEvE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEtB,OAAO,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBAC1B,wEAAwE;gBACxE,IAAI,WAAW,GAAc,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAE5C,6DAA6D;gBAC7D,IAAI,WAAW,KAAK,IAAI,EAAE;oBACxB,IAAI,IAAI,GAAG,WAAW,CAAC;oBACvB,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,OAAO,IAAI,CAAC,MAAM,EAAE;wBAClB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACf,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;qBACpB;oBACD,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;iBACtB;gBAED,sFAAsF;gBACtF,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAE1B,0GAA0G;gBAC1G,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAC5B,WAAW,EACX,QAAQ,EACR,aAAa,EACb,aAAa,CACd,CAAC;gBAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;oBAClD,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;oBAE5B,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC,EAAE;wBACzC,sDAAsD;wBACtD,SAAS;qBACV;oBAED,mEAAmE;oBACnE,sGAAsG;oBAEtG,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC3C,IAAI,cAAc,EAAE;wBAClB,IAAI,MAAM,GAAG,KAAK,CAAC;wBACnB,IAAI,WAAW,CAAC,MAAM;4BACpB,MAAM,GAAG,CAAC,CACR,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC;gCAC7C,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gCACvC,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC;oCAC7C,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CACxC,CAAC;6BACC;4BACH,eAAe;4BACf,MAAM,GAAG,IAAI,CAAC;4BACd,IACE,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gCACzC,aAAa,KAAK,gBAAS,CAAC,EAAE;gCAE9B,MAAM,GAAG,KAAK,CAAC;4BACjB,IACE,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,aAAa,KAAK,gBAAS,CAAC,IAAI;gCAEhC,MAAM,GAAG,KAAK,CAAC;4BACjB,IACE,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,aAAa,KAAK,gBAAS,CAAC,KAAK;gCAEjC,MAAM,GAAG,KAAK,CAAC;4BACjB,IACE,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gCACzC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gCACxC,aAAa,KAAK,gBAAS,CAAC,IAAI;gCAEhC,MAAM,GAAG,KAAK,CAAC;yBAClB;wBACD,IAAI,MAAM;4BAAE,MAAM,EAAE,CAAC;qBACtB;oBACD,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAEnC,IAAI,CAAC,WAAW,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAAE;wBACvC,2FAA2F;wBAC3F,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;wBACxB,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;wBAC9B,QAAQ,CAAC,CAAC;4BACR,QAAQ,CAAC,CAAC;gCACV,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;wBACxD,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;wBACpB,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;wBAErC,IAAI,CAAC,WAAW,EAAE;4BAChB,sEAAsE;4BACtE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBACzB;6BAAM;4BACL,0FAA0F;4BAC1F,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;yBACnC;qBACF;iBACF;aACF;YAED,oEAAoE;YACpE,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,CAAC,MAAM,CACX,IAAa,EACb,KAAU,EACV,GAAQ,EACR,aAA0B,EAC1B,QAAkB,EAClB,aAAuB,EACvB,cAAwB,EACxB,aAAyB,EACzB,SAAoB,EACpB,aAAuB,EACvB,kBAA6B;YAE7B,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAC/D,OAAO,KAAK,CAAC,OAAO,CAClB,KAAK,EACL,GAAG,EACH,QAAQ,EACR,aAAa,EACb,cAAc,EACd,aAAa,EACb,SAAS,EACT,aAAa,CACd,CAAC;QACJ,CAAC;QAED,SAAS,CAAC,IAAc,EAAE,IAAc;YACtC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC;YAExB,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,SAAS,CACP,IAAe,EACf,SAAmB,EACnB,aAAuB,EACvB,aAAuB;YAEvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACrB,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAEnB,IAAI,CAAC,aAAa,EAAE;gBAClB,OAAO;gBACP,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1B;gBAED,OAAO;gBACP,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1B;gBAED,QAAQ;gBACR,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC7B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC1B;gBAED,QAAQ;gBACR,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC7B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC1B;aACF;YAED,IAAI,SAAS,EAAE;gBACb,YAAY;gBACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC9B;gBAED,YAAY;gBACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC9B;gBAED,YAAY;gBACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC9B;gBAED,YAAY;gBACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACF;YACD,SAAS,gBAAgB;gBACvB,OAAO,eAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;YAC7B,CAAC;YACD,IAAI,aAAa,EAAE;gBACjB,MAAM,UAAU,GAAY,gBAAgB,EAAE,CAAC;gBAC/C,OAAO;gBACP,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,kEAAkE;oBAClE,IAAI,UAAU,IAAI,IAAI,EAAE;wBACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;yBAAM;wBACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;iBACF;gBACD,OAAO;gBACP,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,IAAI,UAAU,IAAI,IAAI,EAAE;wBACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;yBAAM;wBACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;iBACF;gBACD,QAAQ;gBACR,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC7B,IAAI,UAAU,IAAI,IAAI,EAAE;wBACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;yBAAM;wBACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;iBACF;gBACD,QAAQ;gBACR,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC7B,IAAI,UAAU,IAAI,IAAI,EAAE;wBACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;yBAAM;wBACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,OAAO;qBACR;iBACF;qBAAM;oBACL,OAAO;iBACR;aACF;YAED,OAAO,GAAG,CAAC;QACb,CAAC;;IAlVM,0BAAoB,GAAY,KAAK,CAAC;IADlC,aAAK,QAoVjB;AACH,CAAC,EAnjBgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAmjBrB;;;;;;;;;;;;;AC1jBD,2DAA2D;;;AAE3D,MAAM,GAAG,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACvD,MAAM,GAAG,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAElD,MAAM,SAAS,GAAG,CAAC,IAAY,EAAE,KAAa,EAAE,UAAU,GAAG,GAAG,EAAE,EAAE;IACzE,IAAI;QACF,MAAM,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACzC,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,qBAAqB,MAAM,EAAE,CAAC;QAC1E,iFAAiF;QACjF,MAAM,EAAE,GAAG,qBAAS,EAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACnC;KACF;IAAC,MAAM;QACN,IAAI;YACF,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACnC;QAAC,MAAM,GAAE;KACX;AACH,CAAC,CAAC;AAdW,iBAAS,aAcpB;AAEK,MAAM,SAAS,GAAG,CAAC,IAAY,EAAiB,EAAE;IACvD,IAAI;QACF,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAC5B,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACxB,OAAO,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;aACvD;SACF;KACF;IAAC,MAAM,GAAE;IACV,2BAA2B;IAC3B,IAAI;QACF,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9B;IAAC,MAAM;QACN,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAjBW,iBAAS,aAiBpB;AAEK,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,EAAE;IAC3C,IAAI;QACF,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;KACtD;IAAC,MAAM,GAAE;IACV,IAAI;QACF,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC/B;IAAC,MAAM,GAAE;AACZ,CAAC,CAAC;AAPW,oBAAY,gBAOvB;AAEF,8CAA8C;AAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,sCAAsC;AAExD,MAAM,eAAe,GAAG,CAC7B,MAAc,EACd,KAAa,EACb,UAAU,GAAG,EAAE,EACf,EAAE;IACF,8BAA8B;IAC9B,MAAM,IAAI,GAAG,qBAAS,EAAC,GAAG,MAAM,OAAO,CAAC,CAAC;IACzC,IAAI,IAAI,EAAE;QACR,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;gBAAE,wBAAY,EAAC,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC;SAChE;QACD,wBAAY,EAAC,GAAG,MAAM,OAAO,CAAC,CAAC;KAChC;IAED,mBAAmB;IACnB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;QAChE,qBAAS,EAAC,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;KAChD;IACD,qBAAS,EAAC,GAAG,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;AACzD,CAAC,CAAC;AAtBW,uBAAe,mBAsB1B;AAEK,MAAM,eAAe,GAAG,CAAC,MAAc,EAAiB,EAAE;IAC/D,MAAM,IAAI,GAAG,qBAAS,EAAC,GAAG,MAAM,OAAO,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;IACvD,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,KAAK,GAAG,qBAAS,EAAC,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,KAAK,KAAK,IAAI;YAAE,OAAO,IAAI,CAAC;QAChC,GAAG,IAAI,KAAK,CAAC;KACd;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAZW,uBAAe,mBAY1B;;;;;;;;;;;;;;;ACxFF,8GAAyC;AASlC,MAAM,aAAa,GAAG,GAAe,EAAE;IAC5C,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1D,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;IAClC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;IAEvC,OAAO;QACL,EAAE;QACF,OAAO;QACP,MAAM;QACN,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI;KACrC,CAAC;AACJ,CAAC,CAAC;AAXW,qBAAa,iBAWxB;;;;;;;;;;;;;;;ACpBF,MAAa,MAAM;;AAAnB,wBA8BC;AA3BQ,eAAQ,GAAG,CAAC,KAAa,EAAE,EAAE;IAClC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;GAgBG;AACI,WAAI,GAAG,GAAG,EAAE;IACjB,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC;IACpC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;IAClC,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,UAAU,CAAC;AAC3C,CAAC,CAAC;AAGJ,sCAAsC;AACtC,aAAa;AACb,kIAAkI;;;;;;;;;;;;;;;AClClI,mEAA+B;AAC/B,gFAAkC;AAElC,MAAa,KAAK;;AAAlB,sBAkOC;AAjOQ,cAAQ,GAAG,CAChB,MAAc,EACd,MAAc,EACd,IAAY,EACZ,IAAY,EACZ,EAAE;IACF,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC;AAEK,iCAA2B,GAAG,CACnC,QAAgB,EAChB,WAAmB,EACX,EAAE;IACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,kCAAkC;AAC3B,cAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE;IAC5D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,CAAC,EACP,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CAAC;IAER,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE;QACpB,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;QAC7B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM;QACL,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;IAED,wBAAwB;IACxB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACzC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACzC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAEzC,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAChD,CAAC,CAAC;AAEF,wBAAwB;AACjB,cAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE;IAC5D,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,EAAE;QAC5B,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9C,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;;GAiBG;AACI,mBAAa,GAAG,CACrB,GAAW,EACX,GAAW,EACX,UAEI,EAAE,EACE,EAAE;IACV,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,KAAK,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC;IAE1C,MAAM,EAAE,MAAM,GAAG,UAAU,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;IAE1D,kCAAkC;IAClC,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;IAEzE,kEAAkE;IAClE,MAAM,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IACvC,MAAM,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAEvC,yEAAyE;IACzE,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAEpD,wDAAwD;IACxD,MAAM,cAAc,GAAG,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAElE,4CAA4C;IAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,0CAA0C;IAC9D,MAAM,WAAW,GACf,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QACpB,CAAC,KAAK,GAAG,GAAG;YACV,CAAC,CAAC,KAAK,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC;YAChC,CAAC,CAAC,cAAc,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC;YAC5D,MAAM,CAAC;IAEX,yDAAyD;IACzD,MAAM,OAAO,GAAG,KAAK,CAAC;IACtB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;IAE3E,uBAAuB;IACvB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC;IAE7D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEK,uBAAiB,GAAG,CAAC,KAAY,EAAO,EAAE;IAC/C,iCAAiC;IACjC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAE9C,sCAAsC;IACtC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAC3B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAClD,CAAC;IAEF,IAAI,CAAC,UAAU,EAAE;QACf,0CAA0C;QAC1C,OAAO,KAAK,CAAC,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3D;IAED,yBAAyB;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC7C,OAAO,GAAG,GAAG,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,IAAI,WAAW,IAAI,CAAC,EAAE;QACpB,qDAAqD;QACrD,OAAO,KAAK,CAAC,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3D;IAED,mDAAmD;IACnD,IAAI,WAAW,GAAG,eAAM,CAAC,IAAI,EAAE,GAAG,WAAW,CAAC;IAE9C,sDAAsD;IACtD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACxB,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YAC3C,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,WAAW,IAAI,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC;aACb;SACF;KACF;IAED,kEAAkE;IAClE,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;;GAiBG;AACI,qBAAe,GAAG,CACvB,GAAW,EACX,GAAW,EACX,UAEI,EAAE,EACE,EAAE;IACV,MAAM,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;IAEnD,8EAA8E;IAC9E,MAAM,iBAAiB,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAE1C,uDAAuD;IACvD,sCAAsC;IACtC,IAAI,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;IACvB,IAAI,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;IAEvB,qCAAqC;IACrC,OAAO,EAAE,KAAK,CAAC,EAAE;QACf,EAAE,GAAG,eAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAED,4BAA4B;IAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAErE,yDAAyD;IACzD,MAAM,WAAW,GAAG,EAAE,GAAG,iBAAiB,GAAG,MAAM,CAAC;IAEpD,6BAA6B;IAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IAE9C,mBAAmB;IACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClC,CAAC,CAAC;;;;;;;UCpOJ;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA,8B;;;;;WCAA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC,I;;;;;WCPD,iC;;;;;UEAA;UACA;UACA;UACA","sources":["webpack://Turnarchist/./node_modules/axios/dist/browser/axios.cjs","webpack://Turnarchist/./node_modules/howler/dist/howler.js","webpack://Turnarchist/./node_modules/ua-parser-js/src/main/ua-parser.js","webpack://Turnarchist/./src/api/index.ts","webpack://Turnarchist/./src/api/utils.ts","webpack://Turnarchist/./src/constants/environmentTypes.ts","webpack://Turnarchist/./src/drawable/drawable.ts","webpack://Turnarchist/./src/drawable/healthbar.ts","webpack://Turnarchist/./src/drawable/hitWarning.ts","webpack://Turnarchist/./src/drawable/shadow.ts","webpack://Turnarchist/./src/entity/downladderMaker.ts","webpack://Turnarchist/./src/entity/enemy/armoredSkullEnemy.ts","webpack://Turnarchist/./src/entity/enemy/armoredzombieEnemy.ts","webpack://Turnarchist/./src/entity/enemy/beetleEnemy.ts","webpack://Turnarchist/./src/entity/enemy/bigFrogEnemy.ts","webpack://Turnarchist/./src/entity/enemy/bigKnightEnemy.ts","webpack://Turnarchist/./src/entity/enemy/bigSkullEnemy.ts","webpack://Turnarchist/./src/entity/enemy/bigZombieEnemy.ts","webpack://Turnarchist/./src/entity/enemy/bishopEnemy.ts","webpack://Turnarchist/./src/entity/enemy/chargeEnemy.ts","webpack://Turnarchist/./src/entity/enemy/crabEnemy.ts","webpack://Turnarchist/./src/entity/enemy/crusherEnemy.ts","webpack://Turnarchist/./src/entity/enemy/enemy.ts","webpack://Turnarchist/./src/entity/enemy/energyWizard.ts","webpack://Turnarchist/./src/entity/enemy/exalterEnemy.ts","webpack://Turnarchist/./src/entity/enemy/fireWizard.ts","webpack://Turnarchist/./src/entity/enemy/frogEnemy.ts","webpack://Turnarchist/./src/entity/enemy/glowBugEnemy.ts","webpack://Turnarchist/./src/entity/enemy/knightEnemy.ts","webpack://Turnarchist/./src/entity/enemy/mummyEnemy.ts","webpack://Turnarchist/./src/entity/enemy/occultistEnemy.ts","webpack://Turnarchist/./src/entity/enemy/pawnEnemy.ts","webpack://Turnarchist/./src/entity/enemy/queenEnemy.ts","webpack://Turnarchist/./src/entity/enemy/rookEnemy.ts","webpack://Turnarchist/./src/entity/enemy/skullEnemy.ts","webpack://Turnarchist/./src/entity/enemy/spawner.ts","webpack://Turnarchist/./src/entity/enemy/spiderEnemy.ts","webpack://Turnarchist/./src/entity/enemy/wardenEnemy.ts","webpack://Turnarchist/./src/entity/enemy/wizardEnemy.ts","webpack://Turnarchist/./src/entity/enemy/zombieEnemy.ts","webpack://Turnarchist/./src/entity/entity.ts","webpack://Turnarchist/./src/entity/object/barrel.ts","webpack://Turnarchist/./src/entity/object/block.ts","webpack://Turnarchist/./src/entity/object/bomb.ts","webpack://Turnarchist/./src/entity/object/bush.ts","webpack://Turnarchist/./src/entity/object/chest.ts","webpack://Turnarchist/./src/entity/object/chestLayer.ts","webpack://Turnarchist/./src/entity/object/crate.ts","webpack://Turnarchist/./src/entity/object/decoBlock.ts","webpack://Turnarchist/./src/entity/object/fishingSpot.ts","webpack://Turnarchist/./src/entity/object/furnace.ts","webpack://Turnarchist/./src/entity/object/mushrooms.ts","webpack://Turnarchist/./src/entity/object/pot.ts","webpack://Turnarchist/./src/entity/object/pottedPlant.ts","webpack://Turnarchist/./src/entity/object/pumpkin.ts","webpack://Turnarchist/./src/entity/object/sprout.ts","webpack://Turnarchist/./src/entity/object/tombStone.ts","webpack://Turnarchist/./src/entity/object/tree.ts","webpack://Turnarchist/./src/entity/object/vendingMachine.ts","webpack://Turnarchist/./src/entity/resource/amberResource.ts","webpack://Turnarchist/./src/entity/resource/coalResource.ts","webpack://Turnarchist/./src/entity/resource/emeraldResource.ts","webpack://Turnarchist/./src/entity/resource/garnetResource.ts","webpack://Turnarchist/./src/entity/resource/goldResource.ts","webpack://Turnarchist/./src/entity/resource/obsidianResource.ts","webpack://Turnarchist/./src/entity/resource/resource.ts","webpack://Turnarchist/./src/entity/resource/rockResource.ts","webpack://Turnarchist/./src/entity/resource/zirconResource.ts","webpack://Turnarchist/./src/event/eventBus.ts","webpack://Turnarchist/./src/event/eventEmitter.ts","webpack://Turnarchist/./src/event/events.ts","webpack://Turnarchist/./src/game.ts","webpack://Turnarchist/./src/game/bestiary.ts","webpack://Turnarchist/./src/game/cameraAnimation.ts","webpack://Turnarchist/./src/game/gameConstants.ts","webpack://Turnarchist/./src/game/gameState.ts","webpack://Turnarchist/./src/game/gameplaySettings.ts","webpack://Turnarchist/./src/game/input.ts","webpack://Turnarchist/./src/game/replayManager.ts","webpack://Turnarchist/./src/game/savePersistence.ts","webpack://Turnarchist/./src/game/settingsPersistence.ts","webpack://Turnarchist/./src/game/stats.ts","webpack://Turnarchist/./src/game/textbox.ts","webpack://Turnarchist/./src/globalStateManager/IdGenerator.ts","webpack://Turnarchist/./src/gui/feedbackButton.ts","webpack://Turnarchist/./src/gui/guiButton.ts","webpack://Turnarchist/./src/gui/hoverText.ts","webpack://Turnarchist/./src/gui/linkButton.ts","webpack://Turnarchist/./src/gui/map.ts","webpack://Turnarchist/./src/gui/menu.ts","webpack://Turnarchist/./src/gui/mouseCursor.ts","webpack://Turnarchist/./src/gui/muteButton.ts","webpack://Turnarchist/./src/gui/postProcess.ts","webpack://Turnarchist/./src/gui/webglBlurRenderer.ts","webpack://Turnarchist/./src/gui/xpCounter.ts","webpack://Turnarchist/./src/inventory/inventory.ts","webpack://Turnarchist/./src/item/armor.ts","webpack://Turnarchist/./src/item/backpack.ts","webpack://Turnarchist/./src/item/bestiaryBook.ts","webpack://Turnarchist/./src/item/bombItem.ts","webpack://Turnarchist/./src/item/coin.ts","webpack://Turnarchist/./src/item/dropTable.ts","webpack://Turnarchist/./src/item/entitySpawner.ts","webpack://Turnarchist/./src/item/equippable.ts","webpack://Turnarchist/./src/item/godStone.ts","webpack://Turnarchist/./src/item/goldenKey.ts","webpack://Turnarchist/./src/item/item.ts","webpack://Turnarchist/./src/item/itemGroup.ts","webpack://Turnarchist/./src/item/jewelry/amberRing.ts","webpack://Turnarchist/./src/item/jewelry/emeraldRing.ts","webpack://Turnarchist/./src/item/jewelry/garnetRing.ts","webpack://Turnarchist/./src/item/jewelry/goldRing.ts","webpack://Turnarchist/./src/item/jewelry/zirconRing.ts","webpack://Turnarchist/./src/item/key.ts","webpack://Turnarchist/./src/item/light/candle.ts","webpack://Turnarchist/./src/item/light/glowBugs.ts","webpack://Turnarchist/./src/item/light/lantern.ts","webpack://Turnarchist/./src/item/light/light.ts","webpack://Turnarchist/./src/item/light/torch.ts","webpack://Turnarchist/./src/item/resource/bluegem.ts","webpack://Turnarchist/./src/item/resource/coal.ts","webpack://Turnarchist/./src/item/resource/geode.ts","webpack://Turnarchist/./src/item/resource/goldBar.ts","webpack://Turnarchist/./src/item/resource/goldOre.ts","webpack://Turnarchist/./src/item/resource/greengem.ts","webpack://Turnarchist/./src/item/resource/ironBar.ts","webpack://Turnarchist/./src/item/resource/ironOre.ts","webpack://Turnarchist/./src/item/resource/orangegem.ts","webpack://Turnarchist/./src/item/resource/redgem.ts","webpack://Turnarchist/./src/item/resource/stone.ts","webpack://Turnarchist/./src/item/tool/fishingRod.ts","webpack://Turnarchist/./src/item/tool/hammer.ts","webpack://Turnarchist/./src/item/tool/pickaxe.ts","webpack://Turnarchist/./src/item/usable/apple.ts","webpack://Turnarchist/./src/item/usable/bluePotion.ts","webpack://Turnarchist/./src/item/usable/fish.ts","webpack://Turnarchist/./src/item/usable/greenPotion.ts","webpack://Turnarchist/./src/item/usable/heart.ts","webpack://Turnarchist/./src/item/usable/hourglass.ts","webpack://Turnarchist/./src/item/usable/shrooms.ts","webpack://Turnarchist/./src/item/usable/spellbookPage.ts","webpack://Turnarchist/./src/item/usable/usable.ts","webpack://Turnarchist/./src/item/usable/weaponBlood.ts","webpack://Turnarchist/./src/item/usable/weaponFragments.ts","webpack://Turnarchist/./src/item/usable/weaponPoison.ts","webpack://Turnarchist/./src/item/weapon/dagger.ts","webpack://Turnarchist/./src/item/weapon/dualdagger.ts","webpack://Turnarchist/./src/item/weapon/greataxe.ts","webpack://Turnarchist/./src/item/weapon/scythe.ts","webpack://Turnarchist/./src/item/weapon/scytheBlade.ts","webpack://Turnarchist/./src/item/weapon/scytheHandle.ts","webpack://Turnarchist/./src/item/weapon/shieldLeftFragment.ts","webpack://Turnarchist/./src/item/weapon/shieldRightFragment.ts","webpack://Turnarchist/./src/item/weapon/shotgun.ts","webpack://Turnarchist/./src/item/weapon/slingshot.ts","webpack://Turnarchist/./src/item/weapon/spear.ts","webpack://Turnarchist/./src/item/weapon/spellbook.ts","webpack://Turnarchist/./src/item/weapon/sword.ts","webpack://Turnarchist/./src/item/weapon/warhammer.ts","webpack://Turnarchist/./src/item/weapon/weapon.ts","webpack://Turnarchist/./src/level/environment.ts","webpack://Turnarchist/./src/level/generationVisualizer.ts","webpack://Turnarchist/./src/level/level.ts","webpack://Turnarchist/./src/level/levelConstants.ts","webpack://Turnarchist/./src/level/levelGenerator.ts","webpack://Turnarchist/./src/level/levelImageGenerator.ts","webpack://Turnarchist/./src/level/levelParametersGenerator.ts","webpack://Turnarchist/./src/level/levelValidator.ts","webpack://Turnarchist/./src/level/partitionGenerator.ts","webpack://Turnarchist/./src/level/pngPartitionGenerator.ts","webpack://Turnarchist/./src/level/sidePathManager.ts","webpack://Turnarchist/./src/lighting/lightSource.ts","webpack://Turnarchist/./src/lighting/lighting.ts","webpack://Turnarchist/./src/particle/attackAnimation.ts","webpack://Turnarchist/./src/particle/damageNumber.ts","webpack://Turnarchist/./src/particle/genericParticle.ts","webpack://Turnarchist/./src/particle/imageParticle.ts","webpack://Turnarchist/./src/particle/keyPathParticle.ts","webpack://Turnarchist/./src/particle/particle.ts","webpack://Turnarchist/./src/particle/wizardTeleportParticle.ts","webpack://Turnarchist/./src/particle/xpPopup.ts","webpack://Turnarchist/./src/player/player.ts","webpack://Turnarchist/./src/player/playerActionProcessor.ts","webpack://Turnarchist/./src/player/playerInputHandler.ts","webpack://Turnarchist/./src/player/playerMovement.ts","webpack://Turnarchist/./src/player/playerRenderer.ts","webpack://Turnarchist/./src/projectile/beamEffect.ts","webpack://Turnarchist/./src/projectile/enemyShield.ts","webpack://Turnarchist/./src/projectile/enemySpawnAnimation.ts","webpack://Turnarchist/./src/projectile/explosion.ts","webpack://Turnarchist/./src/projectile/playerFireball.ts","webpack://Turnarchist/./src/projectile/projectile.ts","webpack://Turnarchist/./src/projectile/stunAnimation.ts","webpack://Turnarchist/./src/projectile/wizardFireball.ts","webpack://Turnarchist/./src/room/propClusterer.ts","webpack://Turnarchist/./src/room/room.ts","webpack://Turnarchist/./src/room/roomBuilder.ts","webpack://Turnarchist/./src/room/roomPopulator.ts","webpack://Turnarchist/./src/sound/reverb.ts","webpack://Turnarchist/./src/sound/sound.ts","webpack://Turnarchist/./src/tile/bones.ts","webpack://Turnarchist/./src/tile/button.ts","webpack://Turnarchist/./src/tile/chasm.ts","webpack://Turnarchist/./src/tile/decorations/decoration.ts","webpack://Turnarchist/./src/tile/door.ts","webpack://Turnarchist/./src/tile/downLadder.ts","webpack://Turnarchist/./src/tile/floor.ts","webpack://Turnarchist/./src/tile/insideLevelDoor.ts","webpack://Turnarchist/./src/tile/lockable.ts","webpack://Turnarchist/./src/tile/magmaPool.ts","webpack://Turnarchist/./src/tile/passageway.ts","webpack://Turnarchist/./src/tile/pool.ts","webpack://Turnarchist/./src/tile/spawnfloor.ts","webpack://Turnarchist/./src/tile/spike.ts","webpack://Turnarchist/./src/tile/spiketrap.ts","webpack://Turnarchist/./src/tile/tile.ts","webpack://Turnarchist/./src/tile/trapdoor.ts","webpack://Turnarchist/./src/tile/upLadder.ts","webpack://Turnarchist/./src/tile/wall.ts","webpack://Turnarchist/./src/tile/wallTorch.ts","webpack://Turnarchist/./src/tile/window.ts","webpack://Turnarchist/./src/tips.ts","webpack://Turnarchist/./src/utility/astarclass.ts","webpack://Turnarchist/./src/utility/cookies.ts","webpack://Turnarchist/./src/utility/deviceDetector.ts","webpack://Turnarchist/./src/utility/random.ts","webpack://Turnarchist/./src/utility/utils.ts","webpack://Turnarchist/webpack/bootstrap","webpack://Turnarchist/webpack/runtime/amd options","webpack://Turnarchist/webpack/runtime/global","webpack://Turnarchist/webpack/runtime/publicPath","webpack://Turnarchist/webpack/before-startup","webpack://Turnarchist/webpack/startup","webpack://Turnarchist/webpack/after-startup"],"sourcesContent":["/*! Axios v1.12.2 Copyright (c) 2025 Matt Zabriskie and contributors */\n'use strict';\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction$1(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction$1 = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n};\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n\n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction$1(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction$1(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction$1(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless, skipUndefined} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else if (!skipUndefined || !isUndefined(val)) {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction$1(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction$1(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction$1(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\n\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction$1(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction$1(thing)) && isFunction$1(thing.then) && isFunction$1(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction$1(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction$1(thing[iterator]);\n\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction: isFunction$1,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  const msg = error && error.message ? error.message : 'Error';\n\n  // Prefer explicit code; otherwise copy the low-level error's code (e.g. ECONNREFUSED)\n  const errCode = code == null && error ? error.code : code;\n  AxiosError.call(axiosError, msg, errCode, config, request, response);\n\n  // Chain the original error on the standard field; non-enumerable to avoid JSON noise\n  if (error && axiosError.cause == null) {\n    Object.defineProperty(axiosError, 'cause', { value: error, configurable: true });\n  }\n\n  axiosError.name = (error && error.name) || 'Error';\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils$1.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils$1.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv,\n  navigator: _navigator,\n  origin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data, this.parseReviver);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isObject(header) && utils$1.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils$1.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils$1.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  };\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n};\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\n\nconst asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils$1.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders$1.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // browser handles it\n    } else if (utils$1.isFunction(data.getHeaders)) {\n      // Node.js FormData (like form-data package)\n      const formHeaders = data.getHeaders();\n      // Only set safe headers to avoid overwriting security headers\n      const allowedHeaders = ['content-type', 'content-length'];\n      Object.entries(formHeaders).forEach(([key, val]) => {\n        if (allowedHeaders.includes(key.toLowerCase())) {\n          headers.set(key, val);\n        }\n      });\n    }\n  }  \n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n  request.onerror = function handleError(event) {\n       // Browsers deliver a ProgressEvent in XHR onerror\n       // (message may be empty; when present, surface it)\n       // See https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/error_event\n       const msg = event && event.message ? event.message : 'Network Error';\n       const err = new AxiosError(msg, AxiosError.ERR_NETWORK, config, request);\n       // attach the underlying event for consumers who want details\n       err.event = event || null;\n       reject(err);\n       request = null;\n    };\n    \n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    };\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n    }, timeout);\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils$1.asap(unsubscribe);\n\n    return signal;\n  }\n};\n\nvar composeSignals$1 = composeSignals;\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst {isFunction} = utils$1;\n\nconst globalFetchAPI = (({Request, Response}) => ({\n  Request, Response\n}))(utils$1.global);\n\nconst {\n  ReadableStream: ReadableStream$1, TextEncoder\n} = utils$1.global;\n\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n};\n\nconst factory = (env) => {\n  env = utils$1.merge.call({\n    skipUndefined: true\n  }, globalFetchAPI, env);\n\n  const {fetch: envFetch, Request, Response} = env;\n  const isFetchSupported = envFetch ? isFunction(envFetch) : typeof fetch === 'function';\n  const isRequestSupported = isFunction(Request);\n  const isResponseSupported = isFunction(Response);\n\n  if (!isFetchSupported) {\n    return false;\n  }\n\n  const isReadableStreamSupported = isFetchSupported && isFunction(ReadableStream$1);\n\n  const encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n      ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n      async (str) => new Uint8Array(await new Request(str).arrayBuffer())\n  );\n\n  const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {\n    let duplexAccessed = false;\n\n    const hasContentType = new Request(platform.origin, {\n      body: new ReadableStream$1(),\n      method: 'POST',\n      get duplex() {\n        duplexAccessed = true;\n        return 'half';\n      },\n    }).headers.has('Content-Type');\n\n    return duplexAccessed && !hasContentType;\n  });\n\n  const supportsResponseStream = isResponseSupported && isReadableStreamSupported &&\n    test(() => utils$1.isReadableStream(new Response('').body));\n\n  const resolvers = {\n    stream: supportsResponseStream && ((res) => res.body)\n  };\n\n  isFetchSupported && ((() => {\n    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n      !resolvers[type] && (resolvers[type] = (res, config) => {\n        let method = res && res[type];\n\n        if (method) {\n          return method.call(res);\n        }\n\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n    });\n  })());\n\n  const getBodyLength = async (body) => {\n    if (body == null) {\n      return 0;\n    }\n\n    if (utils$1.isBlob(body)) {\n      return body.size;\n    }\n\n    if (utils$1.isSpecCompliantForm(body)) {\n      const _request = new Request(platform.origin, {\n        method: 'POST',\n        body,\n      });\n      return (await _request.arrayBuffer()).byteLength;\n    }\n\n    if (utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {\n      return body.byteLength;\n    }\n\n    if (utils$1.isURLSearchParams(body)) {\n      body = body + '';\n    }\n\n    if (utils$1.isString(body)) {\n      return (await encodeText(body)).byteLength;\n    }\n  };\n\n  const resolveBodyLength = async (headers, body) => {\n    const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n    return length == null ? getBodyLength(body) : length;\n  };\n\n  return async (config) => {\n    let {\n      url,\n      method,\n      data,\n      signal,\n      cancelToken,\n      timeout,\n      onDownloadProgress,\n      onUploadProgress,\n      responseType,\n      headers,\n      withCredentials = 'same-origin',\n      fetchOptions\n    } = resolveConfig(config);\n\n    let _fetch = envFetch || fetch;\n\n    responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n    let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n    let request = null;\n\n    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n    });\n\n    let requestContentLength;\n\n    try {\n      if (\n        onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n        (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n      ) {\n        let _request = new Request(url, {\n          method: 'POST',\n          body: data,\n          duplex: \"half\"\n        });\n\n        let contentTypeHeader;\n\n        if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n          headers.setContentType(contentTypeHeader);\n        }\n\n        if (_request.body) {\n          const [onProgress, flush] = progressEventDecorator(\n            requestContentLength,\n            progressEventReducer(asyncDecorator(onUploadProgress))\n          );\n\n          data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n        }\n      }\n\n      if (!utils$1.isString(withCredentials)) {\n        withCredentials = withCredentials ? 'include' : 'omit';\n      }\n\n      // Cloudflare Workers throws when credentials are defined\n      // see https://github.com/cloudflare/workerd/issues/902\n      const isCredentialsSupported = isRequestSupported && \"credentials\" in Request.prototype;\n\n      const resolvedOptions = {\n        ...fetchOptions,\n        signal: composedSignal,\n        method: method.toUpperCase(),\n        headers: headers.normalize().toJSON(),\n        body: data,\n        duplex: \"half\",\n        credentials: isCredentialsSupported ? withCredentials : undefined\n      };\n\n      request = isRequestSupported && new Request(url, resolvedOptions);\n\n      let response = await (isRequestSupported ? _fetch(request, fetchOptions) : _fetch(url, resolvedOptions));\n\n      const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n      if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n        const options = {};\n\n        ['status', 'statusText', 'headers'].forEach(prop => {\n          options[prop] = response[prop];\n        });\n\n        const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n        const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n          responseContentLength,\n          progressEventReducer(asyncDecorator(onDownloadProgress), true)\n        ) || [];\n\n        response = new Response(\n          trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n            flush && flush();\n            unsubscribe && unsubscribe();\n          }),\n          options\n        );\n      }\n\n      responseType = responseType || 'text';\n\n      let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n      !isStreamResponse && unsubscribe && unsubscribe();\n\n      return await new Promise((resolve, reject) => {\n        settle(resolve, reject, {\n          data: responseData,\n          headers: AxiosHeaders$1.from(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          config,\n          request\n        });\n      })\n    } catch (err) {\n      unsubscribe && unsubscribe();\n\n      if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n        throw Object.assign(\n          new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n          {\n            cause: err.cause || err\n          }\n        )\n      }\n\n      throw AxiosError.from(err, err && err.code, config, request);\n    }\n  }\n};\n\nconst seedCache = new Map();\n\nconst getFetch = (config) => {\n  let env = config ? config.env : {};\n  const {fetch, Request, Response} = env;\n  const seeds = [\n    Request, Response, fetch\n  ];\n\n  let len = seeds.length, i = len,\n    seed, target, map = seedCache;\n\n  while (i--) {\n    seed = seeds[i];\n    target = map.get(seed);\n\n    target === undefined && map.set(seed, target = (i ? new Map() : factory(env)));\n\n    map = target;\n  }\n\n  return target;\n};\n\ngetFetch();\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: {\n    get: getFetch,\n  }\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters, config) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter && (utils$1.isFunction(adapter) || (adapter = adapter.get(config)))) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter, config);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.12.2\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators$1.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) ; else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v2.0.4\n   Copyright © 2012-2025 Faisal Salman <f@faisalman.com>\n   AGPLv3 License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://uaparser.dev\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n/* jshint esversion: 3 */ \n/* globals window */\n\n(function (window, undefined) {\n\n    'use strict';\n    \n    //////////////\n    // Constants\n    /////////////\n\n    var LIBVERSION  = '2.0.4',\n        UA_MAX_LENGTH = 500,\n        USER_AGENT  = 'user-agent',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n\n        // typeof\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n\n        // properties\n        UA_BROWSER  = 'browser',\n        UA_CPU      = 'cpu',\n        UA_DEVICE   = 'device',\n        UA_ENGINE   = 'engine',\n        UA_OS       = 'os',\n        UA_RESULT   = 'result',\n        \n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n\n        // device types\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        XR          = 'xr',\n        EMBEDDED    = 'embedded',\n\n        // browser types\n        INAPP       = 'inapp',\n\n        // client hints\n        BRANDS      = 'brands',\n        FORMFACTORS = 'formFactors',\n        FULLVERLIST = 'fullVersionList',\n        PLATFORM    = 'platform',\n        PLATFORMVER = 'platformVersion',\n        BITNESS     = 'bitness',\n        CH_HEADER   = 'sec-ch-ua',\n        CH_HEADER_FULL_VER_LIST = CH_HEADER + '-full-version-list',\n        CH_HEADER_ARCH      = CH_HEADER + '-arch',\n        CH_HEADER_BITNESS   = CH_HEADER + '-' + BITNESS,\n        CH_HEADER_FORM_FACTORS = CH_HEADER + '-form-factors',\n        CH_HEADER_MOBILE    = CH_HEADER + '-' + MOBILE,\n        CH_HEADER_MODEL     = CH_HEADER + '-' + MODEL,\n        CH_HEADER_PLATFORM  = CH_HEADER + '-' + PLATFORM,\n        CH_HEADER_PLATFORM_VER = CH_HEADER_PLATFORM + '-version',\n        CH_ALL_VALUES       = [BRANDS, FULLVERLIST, MOBILE, MODEL, PLATFORM, PLATFORMVER, ARCHITECTURE, FORMFACTORS, BITNESS],\n\n        // device vendors\n        AMAZON      = 'Amazon',\n        APPLE       = 'Apple',\n        ASUS        = 'ASUS',\n        BLACKBERRY  = 'BlackBerry',\n        GOOGLE      = 'Google',\n        HUAWEI      = 'Huawei',\n        LENOVO      = 'Lenovo',\n        HONOR       = 'Honor',\n        LG          = 'LG',\n        MICROSOFT   = 'Microsoft',\n        MOTOROLA    = 'Motorola',\n        NVIDIA      = 'Nvidia',\n        ONEPLUS     = 'OnePlus',\n        OPPO        = 'OPPO',\n        SAMSUNG     = 'Samsung',\n        SHARP       = 'Sharp',\n        SONY        = 'Sony',\n        XIAOMI      = 'Xiaomi',\n        ZEBRA       = 'Zebra',\n\n        // browsers\n        CHROME      = 'Chrome',\n        CHROMIUM    = 'Chromium',\n        CHROMECAST  = 'Chromecast',\n        EDGE        = 'Edge',\n        FIREFOX     = 'Firefox',\n        OPERA       = 'Opera',\n        FACEBOOK    = 'Facebook',\n        SOGOU       = 'Sogou',\n\n        PREFIX_MOBILE  = 'Mobile ',\n        SUFFIX_BROWSER = ' Browser',\n\n        // os\n        WINDOWS     = 'Windows';\n   \n    var isWindow            = typeof window !== UNDEF_TYPE,\n        NAVIGATOR           = (isWindow && window.navigator) ? \n                                window.navigator : \n                                undefined,\n        NAVIGATOR_UADATA    = (NAVIGATOR && NAVIGATOR.userAgentData) ? \n                                NAVIGATOR.userAgentData : \n                                undefined;\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (defaultRgx, extensions) {\n            var mergedRgx = {};\n            var extraRgx = extensions;\n            if (!isExtensions(extensions)) {\n                extraRgx = {};\n                for (var i in extensions) {\n                    for (var j in extensions[i]) {\n                        extraRgx[j] = extensions[i][j].concat(extraRgx[j] ? extraRgx[j] : []);\n                    }\n                }\n            }\n            for (var k in defaultRgx) {\n                mergedRgx[k] = extraRgx[k] && extraRgx[k].length % 2 === 0 ? extraRgx[k].concat(defaultRgx[k]) : defaultRgx[k];\n            }\n            return mergedRgx;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            if (typeof str1 === OBJ_TYPE && str1.length > 0) {\n                for (var i in str1) {\n                    if (lowerize(str2) == lowerize(str1[i])) return true;\n                }\n                return false;\n            }\n            return isString(str1) ? lowerize(str2) == lowerize(str1) : false;\n        },\n        isExtensions = function (obj, deep) {\n            for (var prop in obj) {\n                return /^(browser|cpu|device|engine|os)$/.test(prop) || (deep ? isExtensions(obj[prop]) : false);\n            }\n        },\n        isString = function (val) {\n            return typeof val === STR_TYPE;\n        },\n        itemListToArray = function (header) {\n            if (!header) return undefined;\n            var arr = [];\n            var tokens = strip(/\\\\?\\\"/g, header).split(',');\n            for (var i = 0; i < tokens.length; i++) {\n                if (tokens[i].indexOf(';') > -1) {\n                    var token = trim(tokens[i]).split(';v=');\n                    arr[i] = { brand : token[0], version : token[1] };\n                } else {\n                    arr[i] = trim(tokens[i]);\n                }\n            }\n            return arr;\n        },\n        lowerize = function (str) {\n            return isString(str) ? str.toLowerCase() : str;\n        },\n        majorize = function (version) {\n            return isString(version) ? strip(/[^\\d\\.]/g, version).split('.')[0] : undefined;\n        },\n        setProps = function (arr) {\n            for (var i in arr) {\n                var propName = arr[i];\n                if (typeof propName == OBJ_TYPE && propName.length == 2) {\n                    this[propName[0]] = propName[1];\n                } else {\n                    this[propName] = undefined;\n                }\n            }\n            return this;\n        },\n        strip = function (pattern, str) {\n            return isString(str) ? str.replace(pattern, EMPTY) : str;\n        },\n        stripQuotes = function (str) {\n            return strip(/\\\\?\\\"/g, str); \n        },\n        trim = function (str, len) {\n            if (isString(str)) {\n                str = strip(/^\\s\\s*/, str);\n                return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            if(!ua || !arrays) return;\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length >= 3) {\n                                    // Check whether q[1] FUNCTION or REGEX\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        if (q.length > 3) {\n                                            this[q[0]] = match ? q[1].apply(this, q.slice(2)) : undefined;\n                                        } else {\n                                            // call function (usually string mapper)\n                                            this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                        }\n                                    } else {\n                                        if (q.length == 3) {\n                                            // sanitize match using given regex\n                                            this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                        } else if (q.length == 4) {\n                                            this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                        } else if (q.length > 4) {\n                                            this[q[0]] = match ? q[3].apply(this, [match.replace(q[1], q[2])].concat(q.slice(4))) : undefined;\n                                        }\n                                    }\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    var windowsVersionMap = {\n            'ME'    : '4.90',\n            'NT 3.51': '3.51',\n            'NT 4.0': '4.0',\n            '2000'  : ['5.0', '5.01'],\n            'XP'    : ['5.1', '5.2'],\n            'Vista' : '6.0',\n            '7'     : '6.1',\n            '8'     : '6.2',\n            '8.1'   : '6.3',\n            '10'    : ['6.4', '10.0'],\n            'NT'    : ''\n        },\n        \n        formFactorsMap = {\n            'embedded'  : 'Automotive',\n            'mobile'    : 'Mobile',\n            'tablet'    : ['Tablet', 'EInk'],\n            'smarttv'   : 'TV',\n            'wearable'  : 'Watch',\n            'xr'        : ['VR', 'XR'],\n            '?'         : ['Desktop', 'Unknown'],\n            '*'         : undefined\n        },\n\n        browserHintsMap = {\n            'Chrome'        : 'Google Chrome',\n            'Edge'          : 'Microsoft Edge',\n            'Edge WebView2' : 'Microsoft Edge WebView2',\n            'Chrome WebView': 'Android WebView',\n            'Chrome Headless':'HeadlessChrome',\n            'Huawei Browser': 'HuaweiBrowser',\n            'MIUI Browser'  : 'Miui Browser',\n            'Opera Mobi'    : 'OperaMobile',\n            'Yandex'        : 'YaBrowser'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var defaultRegexes = {\n\n        browser : [[\n\n            // Most common regardless engine\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, PREFIX_MOBILE + 'Chrome']], [\n            /webview.+edge\\/([\\w\\.]+)/i                                         // Microsoft Edge\n            ], [VERSION, [NAME, EDGE+' WebView']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       \n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i                       // Maxthon\n            ], [VERSION, [NAME, 'Maxthon']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,        // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon/LG Browser/Otter/qutebrowser/Dooble\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon|otter|dooble|(?:lg |qute)browser)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n            /(heytap|ovi|115|surf)browser\\/([\\d\\.]+)/i,                         // HeyTap/Ovi/115/Surf\n            /(ecosia|weibo)(?:__| \\w+@)([\\d\\.]+)/i                              // Ecosia/Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UCBrowser']], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart ' + LENOVO + SUFFIX_BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure' + SUFFIX_BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, PREFIX_MOBILE + FIREFOX]], [\n            /\\bqihoobrowser\\/?([\\w\\.]*)/i                                       // 360\n            ], [VERSION, [NAME, '360']], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, SOGOU + ' Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, SOGOU + ' Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i   // QQ/2345\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i                                               // LieBao Browser/Rekonq\n            ], [NAME], [\n            /ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,                                  // Iron\n            /ome\\/([\\w\\.]+).+qihu (360)[es]e/i                                  // 360\n            ], [VERSION, NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION, [TYPE, INAPP]], [\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /(daum)apps[\\/ ]([\\w\\.]+)/i,                                        // Daum App\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(instagram|snapchat|klarna)[\\/ ]([-\\w\\.]+)/i                       // Instagram/Snapchat/Klarna\n            ], [NAME, VERSION, [TYPE, INAPP]], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA'], [TYPE, INAPP]], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok'], [TYPE, INAPP]], [\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME, [TYPE, INAPP]], [\n\n            /(chromium)[\\/ ]([-\\w\\.]+)/i                                        // Chromium\n            ], [NAME, VERSION], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            /wv\\).+chrome\\/([\\w\\.]+).+edgw\\//i                                  // Edge WebView2\n            ], [VERSION, [NAME, EDGE+' WebView2']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android' + SUFFIX_BROWSER]], [\n\n            /chrome\\/([\\w\\.]+) mobile/i                                         // Chrome Mobile\n            ], [VERSION, [NAME, PREFIX_MOBILE + 'Chrome']], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile(?:\\/\\w+ | ?)safari/i                 // Safari Mobile\n            ], [VERSION, [NAME, PREFIX_MOBILE + 'Safari']], [\n            /iphone .*mobile(?:\\/\\w+ | ?)safari/i\n            ], [[NAME, PREFIX_MOBILE + 'Safari']], [\n            /version\\/([\\w\\.\\,]+) .*(safari)/i                                  // Safari\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, '1']], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(?:mobile|tablet);.*(firefox)\\/([\\w\\.-]+)/i                        // Firefox Mobile\n            ], [[NAME, PREFIX_MOBILE + FIREFOX], VERSION], [\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic|librewolf)\\/([\\w\\.]+)/i                                    // Wolvic/LibreWolf\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(amaya|dillo|doris|icab|ladybird|lynx|mosaic|netsurf|obigo|polaris|w3m|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser/Ladybird\n            /\\b(links) \\(([\\w\\.]+)/i                                            // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /[^\\d\\.]+./, EMPTY]]\n        ],\n\n        cpu : [[\n\n            /\\b((amd|x|x86[-_]?|wow|win)64)\\b/i                                 // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i,                                                     // IA32 (quicktime)\n            /\\b((i[346]|x)86)(pc)?\\b/i                                          // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?[89]e?l?|_?64))\\b/i                               // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(v[67])?ht?n?[fl]p?)\\b/i                                     // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /( (ce|mobile); ppc;|\\/[\\w\\.]+arm\\b)/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((ppc|powerpc)(64)?)( mac|;|\\))/i                                  // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            / sun4\\w[;\\)]/i                                                     // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /\\b(avr32|ia64(?=;)|68k(?=\\))|\\barm(?=v([1-7]|[5-7]1)l?|;|eabi)|(irix|mips|sparc)(64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr]|browser)[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Honor\n            /\\b((?:brt|eln|hey2?|gdi|jdn)-a?[lnw]09|(?:ag[rm]3?|jdn2|kob2)-a?[lw]0[09]hn)(?: bui|\\)|;)/i\n            ], [MODEL, [VENDOR, HONOR], [TYPE, TABLET]], [\n            /honor([-\\w ]+)[;\\)]/i\n            ], [MODEL, [VENDOR, HONOR], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][2356]?k?|bah[234]?|bg[2o]|bt[kv]|cmr|cpn|db[ry]2?|jdn2|got|kob2?k?|mon|pce|scm|sht?|[tw]gr|vrd)-[ad]?[lw][0125][09]b?|605hw|bg2-u03|(?:gem|fdr|m2|ple|t1)-[7a]0[1-4][lu]|t1-a2[13][lw]|mediapad[\\w\\. ]*(?= bui|\\)))\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /oid[^\\)]+; (2[\\dbc]{4}(182|283|rp\\w{2})[cgl]|m2105k81a?c)(?: bui|\\))/i,\n            /\\b((?:red)?mi[-_ ]?pad[\\w- ]*)(?: bui|\\))/i                                // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i, // Xiaomi Mi\n            / ([\\w ]+) miui\\/v?\\d/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n\n            // OnePlus\n            /droid.+; (cph2[3-6]\\d[13579]|((gm|hd)19|(ac|be|in|kb)20|(d[en]|eb|le|mt)21|ne22)[0-2]\\d|p[g-k]\\w[1m]10)\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, ONEPLUS], [TYPE, MOBILE]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, OPPO], [TYPE, MOBILE]], [\n            /\\b(opd2(\\d{3}a?))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, strMapper, { 'OnePlus' : ['203', '304', '403', '404', '413', '415'], '*' : OPPO }], [TYPE, TABLET]], [\n\n            // BLU\n            /(vivo (5r?|6|8l?|go|one|s|x[il]?[2-4]?)[\\w\\+ ]*)(?: bui|\\))/i  // Vivo series\n            ], [MODEL, [VENDOR, 'BLU'], [TYPE, MOBILE]], [    \n\n            // Vivo\n            /; vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+|602lv|d-42a|a101lv|a2109a|a3500-hv|s[56]000|pb-6505[my]|tb-?x?\\d{3,4}(?:f[cu]|xu|[av])|yt\\d?-[jx]?\\d+[lfmx])( bui|;|\\)|\\/)/i,\n            /lenovo ?(b[68]0[08]0-?[hf]?|tab(?:[\\w- ]+?)|tb[\\w-]{6,7})( bui|;|\\)|\\/)/i\n            ], [MODEL, [VENDOR, LENOVO], [TYPE, TABLET]], [            \n            /lenovo[-_ ]?([-\\w ]+?)(?: bui|\\)|\\/)/i\n            ], [MODEL, [VENDOR, LENOVO], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ]([\\w\\s]+)(\\)| bui)/i,\n            /((?:moto(?! 360)[-\\w\\(\\) ]+|xt\\d{3,4}[cgkosw\\+]?[-\\d]*|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+(?!.*(?:browser|netcast|android tv|watch|webos))(\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Nokia\n            /(nokia) (t[12][01])/i\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n            /(?:maemo|nokia).*(n900|lumia \\d+|rm-\\d+)/i,\n            /nokia[-_ ]?(([-\\w\\. ]*))/i\n            ], [[MODEL, /_/g, ' '], [TYPE, MOBILE], [VENDOR, 'Nokia']], [\n\n            // Google\n            /(pixel (c|tablet))\\b/i                                             // Google Pixel C/Tablet\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n                                                                                // Google Pixel\n            /droid.+;(?: google)? (g(01[13]a|020[aem]|025[jn]|1b60|1f8f|2ybb|4s1m|576d|5nz6|8hhn|8vou|a02099|c15s|d1yq|e2ae|ec77|gh2x|kv4x|p4bc|pj41|r83y|tt9q|ur25|wvk6)|pixel[\\d ]*a?( pro)?( xl)?( fold)?( \\(5g\\))?)( bui|\\))/i\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n            /(google) (pixelbook( go)?)/i\n            ], [VENDOR, MODEL], [\n\n            // Sony\n            /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-\\w\\w\\d\\d)(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /tcl (xess p17aa)/i,\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])(_\\w(\\w|\\w\\w))?(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n            /droid [\\w\\.]+; (418(?:7d|8v)|5087z|5102l|61(?:02[dh]|25[adfh]|27[ai]|56[dh]|59k|65[ah])|a509dl|t(?:43(?:0w|1[adepqu])|50(?:6d|7[adju])|6(?:09dl|10k|12b|71[efho]|76[hjk])|7(?:66[ahju]|67[hw]|7[045][bh]|71[hk]|73o|76[ho]|79w|81[hks]?|82h|90[bhsy]|99b)|810[hs]))(_\\w(\\w|\\w\\w))?(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, MOBILE]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Energizer\n            /; (energy ?\\w+)(?: bui|\\))/i,\n            /; energizer ([\\w ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n\n            // Cat\n            /; cat (b35);/i,\n            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n\n            // Smartfren\n            /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(in)?(0(15|59|6[35])|142)p?)/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // Archos\n            /; (x67 5g|tikeasy \\w+|ac[1789]\\d\\w+)( b|\\))/i,\n            /archos ?(5|gamepad2?|([\\w ]*[t1789]|hello) ?\\d+[\\w ]*)( b|\\))/i\n            ], [MODEL, [VENDOR, 'Archos'], [TYPE, TABLET]], [\n            /archos ([\\w ]+)( b|\\))/i,\n            /; (ac[3-6]\\d\\w{2,8})( b|\\))/i \n            ], [MODEL, [VENDOR, 'Archos'], [TYPE, MOBILE]], [\n\n            // HMD\n            /; (n159v)/i\n            ], [MODEL, [VENDOR, 'HMD'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(imo) (tab \\w+)/i,                                                 // IMO\n            /(infinix|tecno) (x1101b?|p904|dp(7c|8d|10a)( pro)?|p70[1-3]a?|p904|t1101)/i                     // Infinix XPad / Tecno\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus(?! zenw)|dell|jolla|meizu|motorola|polytron|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Tecno/Micromax/Advan\n            /; (blu|hmd|imo|infinix|lava|oneplus|tcl)[_ ]([\\w\\+ ]+?)(?: bui|\\)|; r)/i,  // BLU/HMD/IMO/Infinix/Lava/OnePlus/TCL\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i                                              // Kindle\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /((?:tegranote|shield t(?!.+d tv))[\\w- ]*?)(?: b|\\))/i              // Nvidia Tablets\n            ], [MODEL, [VENDOR, NVIDIA], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; ([c6]+|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i               // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(vizio)(?: |.+model\\/)(\\w+-\\w+)/i,                                 // Vizio\n            /tcast.+(lg)e?. ([-\\w]+)/i                                          // LG SmartTV\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey.*devicetype\\/chromecast/i                                    // Google Chromecast Third Generation\n            ], [[MODEL, CHROMECAST+' Third Generation'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /crkey.*devicetype\\/([^/]*)/i                                       // Google Chromecast with specific device type\n            ], [[MODEL, /^/, 'Chromecast '], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /fuchsia.*crkey/i                                                   // Google Chromecast Nest Hub\n            ], [[MODEL, CHROMECAST+' Nest Hub'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast, Linux-based or unknown\n            ], [[MODEL, CHROMECAST], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /(portaltv)/i                                                       // Facebook Portal TV\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /(shield \\w+ tv)/i                                                  // Nvidia Shield TV\n            ], [MODEL, [VENDOR, NVIDIA], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                          // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mi(tv|box)-?\\w+) bui/i                                            // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, /.+\\/(\\w+)/, '$1', strMapper, {'LG':'lge'}], [MODEL, trim], [TYPE, SMARTTV]], [\n                                                                                // SmartTV from Unidentified Vendors\n            /droid.+; ([\\w- ]+) (?:android tv|smart[- ]?tv)/i\n            ], [MODEL, [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:|large screen[\\w ]+safari)\\b/i\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(playstation \\w+)/i                                                // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) (\\w+)/i,                                                // Nintendo\n            /(retroid) (pocket ([^\\)]+))/i                                      // Retroid Pocket\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield)( bui|\\))/i                                       // Nvidia Portable\n            ], [MODEL, [VENDOR, NVIDIA], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[0156][fnuw]?s?|gear live)\\b/i                       // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i,                                                   // Pebble\n            /(asus|google|lg|oppo) ((pixel |zen)?watch[\\w ]*)( bui|\\))/i        // Asus ZenWatch / LG Watch / Pixel Watch\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(ow(?:19|20)?we?[1-3]{1,3})/i                                      // Oppo Watch\n            ], [MODEL, [VENDOR, OPPO], [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /(opwwe\\d{3})/i                                                     // OnePlus Watch\n            ], [MODEL, [VENDOR, ONEPLUS], [TYPE, WEARABLE]], [\n            /(moto 360)/i                                                       // Motorola 360\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, WEARABLE]], [\n            /(smartwatch 3)/i                                                   // Sony SmartWatch\n            ], [MODEL, [VENDOR, SONY], [TYPE, WEARABLE]], [\n            /(g watch r)/i                                                      // LG G Watch R\n            ], [MODEL, [VENDOR, LG], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // XR\n            ///////////////////\n\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, XR]], [\n            /(pico) (4|neo3(?: link|pro)?)/i                                    // Pico\n            ], [VENDOR, MODEL, [TYPE, XR]], [\n            /(quest( \\d| pro)?s?).+vr/i                                         // Meta Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, XR]], [\n            /mobile vr; rv.+firefox/i                                           // Unidentifiable VR device using Firefox Reality / Wolvic\n            ], [[TYPE, XR]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n            /(homepod).+mac os/i                                                // Apple HomePod\n            ], [MODEL, [VENDOR, APPLE], [TYPE, EMBEDDED]], [\n            /windows iot/i                                                      // Unidentifiable embedded device using Windows IoT\n            ], [[TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+?(mobile|vr|\\d) safari/i\n            ], [MODEL, [TYPE, strMapper, { 'mobile' : 'Mobile', 'xr' : 'VR', '*' : TABLET }]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /droid .+?; ([\\w\\. -]+)( bui|\\))/i                                  // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /(arkweb)\\/([\\w\\.]+)/i                                              // ArkWeb\n            ], [NAME, VERSION], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n\n            /\\b(libweb)/i                                                       // LibWeb\n            ], [NAME, VERSION], [\n            /ladybird\\//i\n            ], [[NAME, 'LibWeb']], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /(windows nt) (6\\.[23]); arm/i                                      // Windows RT\n            ], [[NAME, /N/, 'R'], [VERSION, strMapper, windowsVersionMap]], [\n            /(windows (?:phone|mobile|iot))(?: os)?[\\/ ]?([\\d\\.]*( se)?)/i,     // Windows IoT/Mobile/Phone\n                                                                                // Windows NT/3.1/95/98/ME/2000/XP/Vista/7/8/8.1/10/11\n            /(windows)[\\/ ](1[01]|2000|3\\.1|7|8(\\.1)?|9[58]|me|server 20\\d\\d( r2)?|vista|xp)/i\n            ], [NAME, VERSION], [\n            /windows nt ?([\\d\\.\\)]*)(?!.+xbox)/i,\n            /\\bwin(?=3| ?9|n)(?:nt| 9x )?([\\d\\.;]*)/i\n            ], [[VERSION, /(;|\\))/g, '', strMapper, windowsVersionMap], [NAME, WINDOWS]], [\n            /(windows ce)\\/?([\\d\\.]*)/i                                         // Windows CE\n            ], [NAME, VERSION], [\n\n            // iOS/macOS\n            /[adehimnop]{4,7}\\b(?:.*os ([\\w]+) like mac|; opera)/i,             // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+(haiku|morphos))/i                   // Mac OS\n            ], [[NAME, 'macOS'], [VERSION, /_/g, '.']], [\n\n            // Google Chromecast\n            /android ([\\d\\.]+).*crkey/i                                         // Google Chromecast, Android-based\n            ], [VERSION, [NAME, CHROMECAST + ' Android']], [\n            /fuchsia.*crkey\\/([\\d\\.]+)/i                                        // Google Chromecast, Fuchsia-based\n            ], [VERSION, [NAME, CHROMECAST + ' Fuchsia']], [\n            /crkey\\/([\\d\\.]+).*devicetype\\/smartspeaker/i                       // Google Chromecast, Linux-based Smart Speaker\n            ], [VERSION, [NAME, CHROMECAST + ' SmartSpeaker']], [\n            /linux.*crkey\\/([\\d\\.]+)/i                                          // Google Chromecast, Legacy Linux-based\n            ], [VERSION, [NAME, CHROMECAST + ' Linux']], [\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast, unknown\n            ], [VERSION, [NAME, CHROMECAST]], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86)/i                              // Android-x86\n            ], [VERSION, NAME], [                                               \n            /(ubuntu) ([\\w\\.]+) like android/i                                  // Ubuntu Touch\n            ], [[NAME, /(.+)/, '$1 Touch'], VERSION], [\n            /(harmonyos)[\\/ ]?([\\d\\.]*)/i,                                      // HarmonyOS\n                                                                                // Android/Blackberry/WebOS/QNX/Bada/RIM/KaiOS/Maemo/MeeGo/S40/Sailfish OS/OpenHarmony/Tizen\n            /(android|bada|blackberry|kaios|maemo|meego|openharmony|qnx|rim tablet os|sailfish|series40|symbian|tizen)\\w*[-\\/\\.; ]?([\\d\\.]*)/i\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series ?60)[-\\/ ]?([\\w\\.]*)/i       // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i,                             // WebOS\n            /webos(?:[ \\/]?|\\.tv-20(?=2[2-9]))(\\d[\\d\\.]*)/i\n            ], [VERSION, [NAME, 'webOS']], [\n            /web0s;.+?(?:chr[o0]me|safari)\\/(\\d+)/i\n                                                                                // https://webostv.developer.lge.com/develop/specifications/web-api-and-web-engine\n            ], [[VERSION, strMapper, {'25':'120','24':'108','23':'94','22':'87','6':'79','5':'68','4':'53','3':'38','2':'538','1':'537','*':'TV'}], [NAME, 'webOS']], [                   \n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google ChromeOS\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, \"Chrome OS\"], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) (\\w+)/i,                                    // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n            /(pico) .+os([\\w\\.]+)/i,                                            // Pico\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /linux.+(mint)[\\/\\(\\) ]?([\\w\\.]*)/i,                                // Mint\n            /(mageia|vectorlinux|fuchsia|arcaos|arch(?= ?linux))[;l ]([\\d\\.]*)/i,  // Mageia/VectorLinux/Fuchsia/ArcaOS/Arch\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire|knoppix)(?: gnu[\\/ ]linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire/Knoppix\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /\\b(aix)[; ]([1-9\\.]{0,4})/i,                                       // AIX\n            /(hurd|linux|morphos)(?: (?:arm|x86|ppc)\\w*| ?)([\\w\\.]*)/i,         // Hurd/Linux/MorphOS\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) ?(r\\d)?/i                                                  // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\d\\.]*)/i                                               // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /\\b(beos|os\\/2|amigaos|openvms|hp-ux|serenityos)/i,                 // BeOS/OS2/AmigaOS/OpenVMS/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Factories\n    ////////////////\n\n    var defaultProps = (function () {\n            var props = { init : {}, isIgnore : {}, isIgnoreRgx : {}, toString : {}};\n            setProps.call(props.init, [\n                [UA_BROWSER, [NAME, VERSION, MAJOR, TYPE]],\n                [UA_CPU, [ARCHITECTURE]],\n                [UA_DEVICE, [TYPE, MODEL, VENDOR]],\n                [UA_ENGINE, [NAME, VERSION]],\n                [UA_OS, [NAME, VERSION]]\n            ]);\n            setProps.call(props.isIgnore, [\n                [UA_BROWSER, [VERSION, MAJOR]],\n                [UA_ENGINE, [VERSION]],\n                [UA_OS, [VERSION]]\n            ]);\n            setProps.call(props.isIgnoreRgx, [\n                [UA_BROWSER, / ?browser$/i],\n                [UA_OS, / ?os$/i]\n            ]);\n            setProps.call(props.toString, [\n                [UA_BROWSER, [NAME, VERSION]],\n                [UA_CPU, [ARCHITECTURE]],\n                [UA_DEVICE, [VENDOR, MODEL]],\n                [UA_ENGINE, [NAME, VERSION]],\n                [UA_OS, [NAME, VERSION]]\n            ]);\n            return props;\n    })();\n\n    var createIData = function (item, itemType) {\n\n        var init_props = defaultProps.init[itemType],\n            is_ignoreProps = defaultProps.isIgnore[itemType] || 0,\n            is_ignoreRgx = defaultProps.isIgnoreRgx[itemType] || 0,\n            toString_props = defaultProps.toString[itemType] || 0;\n\n        function IData () {\n            setProps.call(this, init_props);\n        }\n\n        IData.prototype.getItem = function () {\n            return item;\n        };\n\n        IData.prototype.withClientHints = function () {\n\n            // nodejs / non-client-hints browsers\n            if (!NAVIGATOR_UADATA) {\n                return item\n                        .parseCH()\n                        .get();\n            }\n\n            // browsers based on chromium 85+\n            return NAVIGATOR_UADATA\n                    .getHighEntropyValues(CH_ALL_VALUES)\n                    .then(function (res) {\n                        return item\n                                .setCH(new UACHData(res, false))\n                                .parseCH()\n                                .get();\n            });\n        };\n\n        IData.prototype.withFeatureCheck = function () {\n            return item.detectFeature().get();\n        };\n\n        if (itemType != UA_RESULT) {\n            IData.prototype.is = function (strToCheck) {\n                var is = false;\n                for (var i in this) {\n                    if (this.hasOwnProperty(i) && !has(is_ignoreProps, i) && lowerize(is_ignoreRgx ? strip(is_ignoreRgx, this[i]) : this[i]) == lowerize(is_ignoreRgx ? strip(is_ignoreRgx, strToCheck) : strToCheck)) {\n                        is = true;\n                        if (strToCheck != UNDEF_TYPE) break;\n                    } else if (strToCheck == UNDEF_TYPE && is) {\n                        is = !is;\n                        break;\n                    }\n                }\n                return is;\n            };\n            IData.prototype.toString = function () {\n                var str = EMPTY;\n                for (var i in toString_props) {\n                    if (typeof(this[toString_props[i]]) !== UNDEF_TYPE) {\n                        str += (str ? ' ' : EMPTY) + this[toString_props[i]];\n                    }\n                }\n                return str || UNDEF_TYPE;\n            };\n        }\n\n        if (!NAVIGATOR_UADATA) {\n            IData.prototype.then = function (cb) { \n                var that = this;\n                var IDataResolve = function () {\n                    for (var prop in that) {\n                        if (that.hasOwnProperty(prop)) {\n                            this[prop] = that[prop];\n                        }\n                    }\n                };\n                IDataResolve.prototype = {\n                    is : IData.prototype.is,\n                    toString : IData.prototype.toString\n                };\n                var resolveData = new IDataResolve();\n                cb(resolveData);\n                return resolveData;\n            };\n        }\n\n        return new IData();\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    function UACHData (uach, isHttpUACH) {\n        uach = uach || {};\n        setProps.call(this, CH_ALL_VALUES);\n        if (isHttpUACH) {\n            setProps.call(this, [\n                [BRANDS, itemListToArray(uach[CH_HEADER])],\n                [FULLVERLIST, itemListToArray(uach[CH_HEADER_FULL_VER_LIST])],\n                [MOBILE, /\\?1/.test(uach[CH_HEADER_MOBILE])],\n                [MODEL, stripQuotes(uach[CH_HEADER_MODEL])],\n                [PLATFORM, stripQuotes(uach[CH_HEADER_PLATFORM])],\n                [PLATFORMVER, stripQuotes(uach[CH_HEADER_PLATFORM_VER])],\n                [ARCHITECTURE, stripQuotes(uach[CH_HEADER_ARCH])],\n                [FORMFACTORS, itemListToArray(uach[CH_HEADER_FORM_FACTORS])],\n                [BITNESS, stripQuotes(uach[CH_HEADER_BITNESS])]\n            ]);\n        } else {\n            for (var prop in uach) {\n                if(this.hasOwnProperty(prop) && typeof uach[prop] !== UNDEF_TYPE) this[prop] = uach[prop];\n            }\n        }\n    }\n\n    function UAItem (itemType, ua, rgxMap, uaCH) {\n\n        this.get = function (prop) {\n            if (!prop) return this.data;\n            return this.data.hasOwnProperty(prop) ? this.data[prop] : undefined;\n        };\n\n        this.set = function (prop, val) {\n            this.data[prop] = val;\n            return this;\n        };\n\n        this.setCH = function (ch) {\n            this.uaCH = ch;\n            return this;\n        };\n\n        this.detectFeature = function () {\n            if (NAVIGATOR && NAVIGATOR.userAgent == this.ua) {\n                switch (this.itemType) {\n                    case UA_BROWSER:\n                        // Brave-specific detection\n                        if (NAVIGATOR.brave && typeof NAVIGATOR.brave.isBrave == FUNC_TYPE) {\n                            this.set(NAME, 'Brave');\n                        }\n                        break;\n                    case UA_DEVICE:\n                        // Chrome-specific detection: check for 'mobile' value of navigator.userAgentData\n                        if (!this.get(TYPE) && NAVIGATOR_UADATA && NAVIGATOR_UADATA[MOBILE]) {\n                            this.set(TYPE, MOBILE);\n                        }\n                        // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n                        if (this.get(MODEL) == 'Macintosh' && NAVIGATOR && typeof NAVIGATOR.standalone !== UNDEF_TYPE && NAVIGATOR.maxTouchPoints && NAVIGATOR.maxTouchPoints > 2) {\n                            this.set(MODEL, 'iPad')\n                                .set(TYPE, TABLET);\n                        }\n                        break;\n                    case UA_OS:\n                        // Chrome-specific detection: check for 'platform' value of navigator.userAgentData\n                        if (!this.get(NAME) && NAVIGATOR_UADATA && NAVIGATOR_UADATA[PLATFORM]) {\n                            this.set(NAME, NAVIGATOR_UADATA[PLATFORM]);\n                        }\n                        break;\n                    case UA_RESULT:\n                        var data = this.data;\n                        var detect = function (itemType) {\n                            return data[itemType]\n                                    .getItem()\n                                    .detectFeature()\n                                    .get();\n                        };\n                        this.set(UA_BROWSER, detect(UA_BROWSER))\n                            .set(UA_CPU, detect(UA_CPU))\n                            .set(UA_DEVICE, detect(UA_DEVICE))\n                            .set(UA_ENGINE, detect(UA_ENGINE))\n                            .set(UA_OS, detect(UA_OS));\n                }\n            }\n            return this;\n        };\n\n        this.parseUA = function () {\n            if (this.itemType != UA_RESULT) {\n                rgxMapper.call(this.data, this.ua, this.rgxMap);\n            }\n            if (this.itemType == UA_BROWSER) {\n                this.set(MAJOR, majorize(this.get(VERSION)));\n            }\n            return this;\n        };\n\n        this.parseCH = function () {\n            var uaCH = this.uaCH,\n                rgxMap = this.rgxMap;\n    \n            switch (this.itemType) {\n                case UA_BROWSER:\n                case UA_ENGINE:\n                    var brands = uaCH[FULLVERLIST] || uaCH[BRANDS], prevName;\n                    if (brands) {\n                        for (var i in brands) {\n                            var brandName = brands[i].brand || brands[i],\n                                brandVersion = brands[i].version;\n                            if (this.itemType == UA_BROWSER && \n                                !/not.a.brand/i.test(brandName) && \n                                (!prevName || \n                                    (/Chrom/.test(prevName) && brandName != CHROMIUM) || \n                                    (prevName == EDGE && /WebView2/.test(brandName))\n                                )) {\n                                    brandName = strMapper(brandName, browserHintsMap);\n                                    prevName = this.get(NAME);\n                                    if (!(prevName && !/Chrom/.test(prevName) && /Chrom/.test(brandName))) {\n                                        this.set(NAME, brandName)\n                                            .set(VERSION, brandVersion)\n                                            .set(MAJOR, majorize(brandVersion));\n                                    }\n                                    prevName = brandName;\n                            }\n                            if (this.itemType == UA_ENGINE && brandName == CHROMIUM) {\n                                this.set(VERSION, brandVersion);\n                            }\n                        }\n                    }\n                    break;\n                case UA_CPU:\n                    var archName = uaCH[ARCHITECTURE];\n                    if (archName) {\n                        if (archName && uaCH[BITNESS] == '64') archName += '64';\n                        rgxMapper.call(this.data, archName + ';', rgxMap);\n                    }\n                    break;\n                case UA_DEVICE:\n                    if (uaCH[MOBILE]) {\n                        this.set(TYPE, MOBILE);\n                    }\n                    if (uaCH[MODEL]) {\n                        this.set(MODEL, uaCH[MODEL]);\n                        if (!this.get(TYPE) || !this.get(VENDOR)) {\n                            var reParse = {};\n                            rgxMapper.call(reParse, 'droid 9; ' + uaCH[MODEL] + ')', rgxMap);\n                            if (!this.get(TYPE) && !!reParse.type) {\n                                this.set(TYPE, reParse.type);\n                            }\n                            if (!this.get(VENDOR) && !!reParse.vendor) {\n                                this.set(VENDOR, reParse.vendor);\n                            }\n                        }\n                    }\n                    if (uaCH[FORMFACTORS]) {\n                        var ff;\n                        if (typeof uaCH[FORMFACTORS] !== 'string') {\n                            var idx = 0;\n                            while (!ff && idx < uaCH[FORMFACTORS].length) {\n                                ff = strMapper(uaCH[FORMFACTORS][idx++], formFactorsMap);\n                            }\n                        } else {\n                            ff = strMapper(uaCH[FORMFACTORS], formFactorsMap);\n                        }\n                        this.set(TYPE, ff);\n                    }\n                    break;\n                case UA_OS:\n                    var osName = uaCH[PLATFORM];\n                    if(osName) {\n                        var osVersion = uaCH[PLATFORMVER];\n                        if (osName == WINDOWS) osVersion = (parseInt(majorize(osVersion), 10) >= 13 ? '11' : '10');\n                        this.set(NAME, osName)\n                            .set(VERSION, osVersion);\n                    }\n                    // Xbox-Specific Detection\n                    if (this.get(NAME) == WINDOWS && uaCH[MODEL] == 'Xbox') {\n                        this.set(NAME, 'Xbox')\n                            .set(VERSION, undefined);\n                    }           \n                    break;\n                case UA_RESULT:\n                    var data = this.data;\n                    var parse = function (itemType) {\n                        return data[itemType]\n                                .getItem()\n                                .setCH(uaCH)\n                                .parseCH()\n                                .get();\n                    };\n                    this.set(UA_BROWSER, parse(UA_BROWSER))\n                        .set(UA_CPU, parse(UA_CPU))\n                        .set(UA_DEVICE, parse(UA_DEVICE))\n                        .set(UA_ENGINE, parse(UA_ENGINE))\n                        .set(UA_OS, parse(UA_OS));\n            }\n            return this;\n        };\n\n        setProps.call(this, [\n            ['itemType', itemType],\n            ['ua', ua],\n            ['uaCH', uaCH],\n            ['rgxMap', rgxMap],\n            ['data', createIData(this, itemType)]\n        ]);\n\n        return this;\n    }\n\n    function UAParser (ua, extensions, headers) {\n\n        if (typeof ua === OBJ_TYPE) {\n            if (isExtensions(ua, true)) {\n                if (typeof extensions === OBJ_TYPE) {\n                    headers = extensions;               // case UAParser(extensions, headers)           \n                }\n                extensions = ua;                        // case UAParser(extensions)\n            } else {\n                headers = ua;                           // case UAParser(headers)\n                extensions = undefined;\n            }\n            ua = undefined;\n        } else if (typeof ua === STR_TYPE && !isExtensions(extensions, true)) {\n            headers = extensions;                       // case UAParser(ua, headers)\n            extensions = undefined;\n        }\n\n        // Convert Headers object into a plain object\n        if (headers && typeof headers.append === FUNC_TYPE) {\n            var kv = {};\n            headers.forEach(function (v, k) { kv[k] = v; });\n            headers = kv;\n        }\n        \n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions, headers).getResult();\n        }\n\n        var userAgent = typeof ua === STR_TYPE ? ua :                                       // Passed user-agent string\n                                (headers && headers[USER_AGENT] ? headers[USER_AGENT] :     // User-Agent from passed headers\n                                ((NAVIGATOR && NAVIGATOR.userAgent) ? NAVIGATOR.userAgent : // navigator.userAgent\n                                    EMPTY)),                                                // empty string\n\n            httpUACH = new UACHData(headers, true),\n            regexMap = extensions ? \n                        extend(defaultRegexes, extensions) : \n                        defaultRegexes,\n\n            createItemFunc = function (itemType) {\n                if (itemType == UA_RESULT) {\n                    return function () {\n                        return new UAItem(itemType, userAgent, regexMap, httpUACH)\n                                    .set('ua', userAgent)\n                                    .set(UA_BROWSER, this.getBrowser())\n                                    .set(UA_CPU, this.getCPU())\n                                    .set(UA_DEVICE, this.getDevice())\n                                    .set(UA_ENGINE, this.getEngine())\n                                    .set(UA_OS, this.getOS())\n                                    .get();\n                    };\n                } else {\n                    return function () {\n                        return new UAItem(itemType, userAgent, regexMap[itemType], httpUACH)\n                                    .parseUA()\n                                    .get();\n                    };\n                }\n            };\n            \n        // public methods\n        setProps.call(this, [\n            ['getBrowser', createItemFunc(UA_BROWSER)],\n            ['getCPU', createItemFunc(UA_CPU)],\n            ['getDevice', createItemFunc(UA_DEVICE)],\n            ['getEngine', createItemFunc(UA_ENGINE)],\n            ['getOS', createItemFunc(UA_OS)],\n            ['getResult', createItemFunc(UA_RESULT)],\n            ['getUA', function () { return userAgent; }],\n            ['setUA', function (ua) {\n                if (isString(ua))\n                    userAgent = ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;\n                return this;\n            }]\n        ])\n        .setUA(userAgent);\n\n        return this;\n    }\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR, TYPE]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof exports !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof define === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (isWindow) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = isWindow && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","import axios from \"axios\";\r\nimport type { GameStats as GameStatsType } from \"@server/http/schema\";\r\nimport { getEnvironmentApiUrl } from \"./utils\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: getEnvironmentApiUrl(),\r\n});\r\n\r\n// The `GameStats` type exported by the server has optional fields by default, because the parent\r\n// project doesnt have `strictNullChecks` enabled. We wrap it in `Required` to make fields non-optional.\r\ntype GameStats = Required<GameStatsType>;\r\n\r\nexport const recordGameStats = async (gameStats: GameStats) => {\r\n  const response = await apiClient.post(\"/game/stats\", gameStats);\r\n  return response.data;\r\n};\r\n\r\nexport const safeRecordGameStats = async (gameStats: GameStats) => {\r\n  try {\r\n    return await recordGameStats(gameStats);\r\n  } catch (error) {\r\n    console.error(\"API request failed:\", error);\r\n  }\r\n};\r\n\r\nexport const fetchGameStats = async () => {\r\n  const response = await apiClient.get(\"/game/stats\");\r\n  return response.data;\r\n};\r\n","// Returns the API URL based on the environment.\r\n// In development, it returns the local server URL.\r\n// In production, it returns the same domain as the current page.\r\nexport const getEnvironmentApiUrl = () => {\r\n  const isDevelopment =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\" ||\r\n    window.location.hostname.includes(\"localhost\") ||\r\n    window.location.protocol === \"file:\";\r\n\r\n  if (isDevelopment) {\r\n    return \"http://localhost:3000/api/v1\";\r\n  } else {\r\n    return `https://turnarchist.onrender.com/api/v1`;\r\n  }\r\n};\r\n","export enum EnvType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  CASTLE = 3,\r\n  GLACIER = 4,\r\n  DARK_CASTLE = 5,\r\n  PLACEHOLDER = 6,\r\n  DESERT = 7,\r\n  MAGMA_CAVE = 8,\r\n}\r\n\r\nexport const getEnvTypeName = (envType: EnvType): string => {\r\n  switch (envType) {\r\n    case EnvType.DUNGEON:\r\n      return \"DUNGEON\";\r\n    case EnvType.CAVE:\r\n      return \"CAVE\";\r\n    case EnvType.FOREST:\r\n      return \"FOREST\";\r\n    case EnvType.CASTLE:\r\n      return \"CASTLE\";\r\n    case EnvType.GLACIER:\r\n      return \"GLACIER\";\r\n    case EnvType.DARK_CASTLE:\r\n      return \"DARK_CASTLE\";\r\n    case EnvType.PLACEHOLDER:\r\n      return \"PLACEHOLDER\";\r\n    case EnvType.DESERT:\r\n      return \"DESERT\";\r\n    case EnvType.MAGMA_CAVE:\r\n      return \"MAGMA_CAVE\";\r\n  }\r\n};\r\n","export class Drawable {\r\n  drawableY = 0;\r\n  // When true, this drawable should be rendered above the Player\r\n  shouldDrawAbovePlayer: boolean = false;\r\n\r\n  draw = (delta: number) => {};\r\n\r\n  hasBloom: boolean = false;\r\n  bloomColor: string = \"#FFFFFF\";\r\n  bloomAlpha: number = 1;\r\n  softBloomAlpha: number = 0;\r\n  updateBloom = (delta: number) => {\r\n    if (this.hasBloom) {\r\n      let diff = this.softBloomAlpha - this.bloomAlpha;\r\n      if (Math.abs(diff) > 0.001) {\r\n        this.softBloomAlpha = this.softBloomAlpha - diff * 0.1 * delta;\r\n      } else {\r\n        this.softBloomAlpha = this.bloomAlpha;\r\n      }\r\n    } else {\r\n      this.softBloomAlpha = 0;\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\n\r\nexport class HealthBar {\r\n  hurtTimer: number;\r\n  shouldDraw: boolean;\r\n\r\n  constructor() {\r\n    this.hurtTimer = 0;\r\n  }\r\n\r\n  hurt = () => {\r\n    this.hurtTimer = Date.now();\r\n  };\r\n\r\n  draw = (\r\n    delta: number,\r\n    hearts: number,\r\n    maxHearts: number,\r\n    x: number,\r\n    y: number,\r\n    flashing: boolean,\r\n  ) => {\r\n    let t = Math.min(\r\n      LevelConstants.HEALTH_BAR_TOTALTIME,\r\n      Math.max(Date.now() - this.hurtTimer, 0),\r\n    );\r\n    if (t <= LevelConstants.HEALTH_BAR_TOTALTIME) {\r\n      let fullHearts = Math.floor(hearts);\r\n\r\n      let halfHearts = Math.ceil(hearts - fullHearts);\r\n\r\n      let emptyHearts = maxHearts - fullHearts - halfHearts;\r\n\r\n      // I wouldn't normally use magic numbers here, but these are hardcoded based on the tileset\r\n      //   (which isn't really parameterizable)\r\n      let drawWidth = Math.round(\r\n        Math.min(\r\n          9,\r\n          Math.min(0.05 * (LevelConstants.HEALTH_BAR_TOTALTIME - t), 0.05 * t),\r\n        ),\r\n      );\r\n      let drawHeight =\r\n        Math.round(\r\n          Math.min(\r\n            0.5,\r\n            Math.min(\r\n              0.003 * (LevelConstants.HEALTH_BAR_TOTALTIME - t),\r\n              0.003 * t,\r\n            ),\r\n          ) * 16,\r\n        ) / 16.0;\r\n      let width = (drawWidth * (maxHearts - 1) + 8) / 16.0;\r\n      let xxStart = 0.5 + -width / 2;\r\n      for (let i = 0; i < Math.ceil(0.5 * maxHearts); i++) {\r\n        let tileX = 0;\r\n        if (!flashing) tileX = 1.5;\r\n        else if (i < fullHearts) tileX = 0;\r\n        else if (i < fullHearts + halfHearts) tileX = 0.5;\r\n        else tileX = 1;\r\n        let xx = (drawWidth * i) / 16.0 + xxStart;\r\n        Game.drawFX(\r\n          tileX,\r\n          8,\r\n          0.5,\r\n          0.5,\r\n          x + xx,\r\n          y - 1 - drawHeight / 2,\r\n          0.5,\r\n          drawHeight,\r\n        );\r\n        xx += 9.0 / 16.0;\r\n\r\n        let j = maxHearts - i - 1;\r\n        if (j !== i) {\r\n          let tileX = 0;\r\n          if (!flashing) tileX = 1.5;\r\n          else if (j < fullHearts) tileX = 0;\r\n          else if (j < fullHearts + halfHearts) tileX = 0.5;\r\n          else tileX = 1;\r\n          let xx = (drawWidth * j) / 16.0 + xxStart;\r\n          Game.drawFX(\r\n            tileX,\r\n            8,\r\n            0.5,\r\n            0.5,\r\n            x + xx,\r\n            y - 1 - drawHeight / 2,\r\n            0.5,\r\n            drawHeight,\r\n          );\r\n          xx += 9.0 / 16.0;\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Drawable } from \"./drawable\";\r\nimport { Room } from \"../room/room\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Utils } from \"../utility/utils\";\r\n\r\nexport enum HitWarningDirection {\r\n  North,\r\n  NorthEast,\r\n  East,\r\n  SouthEast,\r\n  South,\r\n  SouthWest,\r\n  West,\r\n  NorthWest,\r\n  Center,\r\n}\r\n\r\nexport class HitWarning extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  static frame = 0;\r\n  private game: Game;\r\n  parent: Entity | null = null;\r\n  private _pointerDir: HitWarningDirection | null = null;\r\n  private _pointerOffset: { x: number; y: number } | null = null;\r\n  private tileX: number;\r\n  private tileY: number;\r\n  private eX: number;\r\n  private eY: number;\r\n  private offsetY: number;\r\n  private pointerOffset: { x: number; y: number };\r\n  private isEnemy: Boolean;\r\n  private dirOnly: Boolean;\r\n  private alpha: number = 0;\r\n  private ticks: number;\r\n  private tickedForDeath = false;\r\n\r\n  constructor(\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    eX?: number,\r\n    eY?: number,\r\n    isEnemy?: Boolean,\r\n    dirOnly: Boolean = false,\r\n    parent: Entity | null = null,\r\n  ) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.game = game;\r\n    this.parent = parent;\r\n    this.tileX = 0;\r\n    this.tileY = 22;\r\n    this.eX = eX;\r\n    this.eY = eY;\r\n    this.offsetY = 0.2;\r\n    this.dirOnly = dirOnly;\r\n\r\n    this.isEnemy = isEnemy !== undefined ? isEnemy : true;\r\n    this.pointerOffset = this.getPointerOffset();\r\n    this.removeOverlapping();\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.tickedForDeath) this.dead = true;\r\n    this.tickedForDeath = true;\r\n  };\r\n\r\n  static updateFrame = (delta: number) => {\r\n    HitWarning.frame += 0.125 * delta;\r\n    if (HitWarning.frame >= 2) HitWarning.frame = 0;\r\n  };\r\n\r\n  removeOverlapping = () => {\r\n    for (const entity of this.game.room.entities) {\r\n      if (\r\n        entity.x === this.x &&\r\n        entity.y === this.y &&\r\n        entity.pushable === false\r\n      ) {\r\n        this.dead = true;\r\n        break;\r\n      }\r\n    }\r\n    for (const door of this.game.room.doors) {\r\n      if (door.x === this.x && door.y === this.y) {\r\n        this.dead = true;\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  getPointerDir(): HitWarningDirection {\r\n    if (this._pointerDir === null) {\r\n      const dx = this.eX - this.x;\r\n      const dy = this.eY - this.y;\r\n\r\n      if (dx === 0 && dy === 0) {\r\n        this._pointerDir = HitWarningDirection.Center;\r\n      } else if (dx === 0) {\r\n        this._pointerDir =\r\n          dy < 0 ? HitWarningDirection.South : HitWarningDirection.North;\r\n      } else if (dy === 0) {\r\n        this._pointerDir =\r\n          dx < 0 ? HitWarningDirection.East : HitWarningDirection.West;\r\n      } else if (dx < 0) {\r\n        this._pointerDir =\r\n          dy < 0\r\n            ? HitWarningDirection.SouthEast\r\n            : HitWarningDirection.NorthEast;\r\n      } else {\r\n        this._pointerDir =\r\n          dy < 0\r\n            ? HitWarningDirection.SouthWest\r\n            : HitWarningDirection.NorthWest;\r\n      }\r\n\r\n      this.tileX = 0 + 2 * this._pointerDir;\r\n    }\r\n    return this._pointerDir;\r\n  }\r\n\r\n  private getPointerOffset(): { x: number; y: number } {\r\n    if (this._pointerOffset === null) {\r\n      const offsets = {\r\n        [HitWarningDirection.North]: { x: 0, y: 0.5 },\r\n        [HitWarningDirection.South]: { x: 0, y: -0.6 },\r\n        [HitWarningDirection.West]: { x: 0.6, y: 0 },\r\n        [HitWarningDirection.East]: { x: -0.6, y: 0 },\r\n        [HitWarningDirection.NorthEast]: { x: -0.5, y: 0.5 },\r\n        [HitWarningDirection.NorthWest]: { x: 0.5, y: 0.5 },\r\n        [HitWarningDirection.SouthEast]: { x: -0.5, y: -0.5 },\r\n        [HitWarningDirection.SouthWest]: { x: 0.5, y: -0.5 },\r\n        [HitWarningDirection.Center]: { x: 0, y: -0.25 },\r\n      };\r\n\r\n      this._pointerOffset = offsets[this.getPointerDir()];\r\n    }\r\n    return this._pointerOffset;\r\n  }\r\n\r\n  fadeHitwarnings = (delta: number) => {\r\n    if (!this.tickedForDeath) {\r\n      if (this.alpha < 1) this.alpha += 0.03 * delta;\r\n      if (this.alpha > 1) this.alpha = 1;\r\n    } else {\r\n      if (this.alpha > 0) this.alpha -= 0.03 * delta;\r\n      if (this.alpha < 0) this.alpha = 0;\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.fadeHitwarnings(delta);\r\n    if (\r\n      Math.abs(this.x - this.game.players[this.game.localPlayerID].x) <= 1 &&\r\n      Math.abs(this.y - this.game.players[this.game.localPlayerID].y) <= 1\r\n    ) {\r\n      Game.ctx.globalAlpha = this.alpha;\r\n      if (\r\n        this.isEnemy &&\r\n        Utils.distance(\r\n          this.x,\r\n          this.y,\r\n          this.game.players[this.game.localPlayerID].x,\r\n          this.game.players[this.game.localPlayerID].y,\r\n        ) <= 1\r\n      ) {\r\n        // Red Arrow that only renders one square away\r\n\r\n        Game.drawFX(\r\n          this.tileX + Math.floor(HitWarning.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x + this.pointerOffset.x,\r\n          this.y + this.pointerOffset.y - this.offsetY,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n      if (false) {\r\n        // removed for now because unneeded and overlaps poorly with top layer x\r\n        // Red X that only renders one square away\r\n        Game.drawFX(\r\n          18 + Math.floor(HitWarning.frame),\r\n          5,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - this.offsetY + 0,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n      Game.ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.fadeHitwarnings(delta);\r\n\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (this.isEnemy && this.getPointerDir() !== HitWarningDirection.North) {\r\n      //white arrow top layer\r\n      Game.drawFX(\r\n        this.tileX + Math.floor(HitWarning.frame),\r\n        this.tileY + 1,\r\n        1,\r\n        1,\r\n        this.x + this.pointerOffset.x,\r\n        this.y + this.pointerOffset.y - this.offsetY,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n    if (\r\n      Utils.distance(\r\n        this.x,\r\n        this.y,\r\n        this.game.players[this.game.localPlayerID].x,\r\n        this.game.players[this.game.localPlayerID].y,\r\n      ) <= 1\r\n    ) {\r\n      if (!this.dirOnly) {\r\n        // Red X that renders 1 square away for top layer\r\n        Game.drawFX(\r\n          18 + Math.floor(HitWarning.frame),\r\n          6,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - this.offsetY + 0,\r\n          1,\r\n          1,\r\n        );\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\n\nexport class Shadow {\n  // Shared offscreen resources for shadow rendering\n  private static _canvas?: HTMLCanvasElement;\n  private static _ctx?: CanvasRenderingContext2D;\n  private static _blurRenderer?: any;\n\n  /**\n   * Draw a soft blurred shadow at the given tile-space coordinates.\n   * - x, y: world coordinates in tiles (e.g., entity.x - entity.drawX)\n   * - width, height: footprint size in tiles; default 1x1. Larger values scale the shadow ellipse.\n   * - radiusPx: optional blur radius in pixels; defaults to current behavior (~3px).\n   */\n  static draw(x: number, y: number, width: number = 1, height: number = 1) {\n    const tileSize = GameConstants.TILESIZE;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = 0.3;\n    if (width > 1 || height > 1) {\n      Game.drawFX(30, 3, 2, 2, x, y + 0.5, 2, 2, \"black\");\n    } else {\n      Game.drawFX(30, 1, 2, 2, x - 0.5, y - 0.5, 2, 2, \"black\");\n    }\n    Game.ctx.restore();\n  }\n}\n","import { Entity } from \"./entity\";\r\nimport { Room } from \"../room/room\";\r\nimport { Game } from \"../game\";\r\nimport { Heart } from \"../item/usable/heart\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\nimport { Shrooms } from \"../item/usable/shrooms\";\r\nimport { EntityType } from \"./entity\";\r\nimport { ImageParticle } from \"../particle/imageParticle\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Tile } from \"../tile/tile\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { LockType } from \"../tile/lockable\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class DownladderMaker extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.name = \"DownladderMaker\";\r\n    this.dead = true;\r\n  }\r\n\r\n  createDownladder = () => {\r\n    let environment = this.room.depth < 1 ? EnvType.FOREST : EnvType.CAVE;\r\n    if (this.room.depth > 1) {\r\n      environment = Random.rand() < 0.5 ? EnvType.FOREST : EnvType.CAVE;\r\n    }\r\n    let newTile = new DownLadder(\r\n      this.room,\r\n      this.game,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n      environment,\r\n      LockType.NONE,\r\n    );\r\n\r\n    if (newTile.lockable.isLocked()) {\r\n      console.log(\"adding key to downladder\");\r\n\r\n      this.game.levels[this.room.depth].distributeKey(newTile);\r\n    }\r\n    this.room.roomArray[this.x][this.y] = newTile;\r\n  };\r\n\r\n  draw = (delta: number) => {};\r\n\r\n  drawTopLayer = (delta: number) => {};\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class ArmoredSkullEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  readonly REGEN_TICKS = 5;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 5;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    if (this.cloned) return;\r\n\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 3;\r\n    this.maxHealth = 3;\r\n    this.defaultMaxHealth = 3;\r\n    this.tileX = 17;\r\n    this.tileY = 16;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.name = \"armored skeleton\";\r\n    this.forwardOnlyAttack = true;\r\n    this.armored = true;\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    this.ticksSinceFirstHit = 0;\r\n    if (this.health == 2) this.unconscious = false;\r\n    this.health -= damage;\r\n    this.maxHealth -= shieldHealth;\r\n    this.startHurting();\r\n\r\n    this.healthBar.hurt();\r\n    this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n    if (this.health === 2) Sound.playParry();\r\n\r\n    if (this.health === 1) {\r\n      this.unconscious = true;\r\n\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\r\n    } else if (this.health === 2) {\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 6, 26);\r\n    } else this.healthBar.hurt();\r\n\r\n    if (this.health <= 0) {\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\r\n      this.kill();\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.health <= 1) {\r\n        this.unconscious = true;\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.healthBar.hurt();\r\n          this.health = 2;\r\n          this.unconscious = false;\r\n        }\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n            undefined,\r\n            undefined,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            this.facePlayer(player);\r\n\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 27;\r\n      this.tileY = 16;\r\n      if (this.health <= 2) {\r\n        this.tileX = 5;\r\n        this.tileY = 8;\r\n      }\r\n\r\n      if (this.health <= 1 || this.dying) {\r\n        this.tileX = 3;\r\n        this.tileY = 0;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileX = 2;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX +\r\n          (this.tileX % 5 && !this.unconscious && !this.dying\r\n            ? Math.floor(this.frame)\r\n            : 0),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","// src/entity/enemy/armoredzombieEnemy.ts\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\n\r\nexport class ArmoredzombieEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 17;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.defaultMaxHealth = 2;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.name = \"armored zombie\";\r\n    this.forwardOnlyAttack = true;\r\n    this.armored = true;\r\n\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n            this.facePlayer(player);\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY &&\r\n                  oldDir == this.direction\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 27;\r\n      this.tileY = 8;\r\n      if (this.health <= 1 || this.dying) {\r\n        this.tileX = 17;\r\n        this.tileY = 8;\r\n      }\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\n\r\nexport class BeetleEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n  revealTick: number;\r\n  jumpDistance: number;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 13;\r\n    this.tileY = 4;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"beetle\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = false;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 1.2;\r\n    this.revealTick = 0;\r\n    this.hasShadow = true;\r\n    this.jumpHeight = 1;\r\n    this.jumpDistance = 1;\r\n    this.attackRange = 1;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Beetle \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  toggleReveal = () => {\r\n    let ticksSince = this.ticks - this.revealTick;\r\n\r\n    this.revealTick = this.ticks;\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    if (j > 2) {\r\n      this.jumpDistance = 3;\r\n    } else if (j > 1) {\r\n      this.jumpDistance = 2;\r\n    }\r\n    this.jumpY = Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\r\n    if (this.jumpY < 0.01 && this.jumpY > -0.01) {\r\n      this.jumpY = 0;\r\n      this.jumpDistance = 1;\r\n    }\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n\r\n  // Helpers to keep movement logic concise\r\n  private isTileFree = (x: number, y: number): boolean => {\r\n    if (!this.room.roomArray[x] || !this.room.roomArray[x][y]) return false;\r\n    const t = this.room.roomArray[x][y];\r\n    if (t.isSolid()) return false;\r\n    if (t instanceof SpikeTrap && (t as SpikeTrap).on) return false;\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && e.x === x && e.y === y) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  private getTwoTileCandidates = (\r\n    startX: number,\r\n    startY: number,\r\n  ): Array<{\r\n    endX: number;\r\n    endY: number;\r\n    axis: \"x\" | \"y\";\r\n    dx: number;\r\n    dy: number;\r\n  }> => {\r\n    const directions = [\r\n      { dx: 1, dy: 0, axis: \"x\" as const },\r\n      { dx: -1, dy: 0, axis: \"x\" as const },\r\n      { dx: 0, dy: 1, axis: \"y\" as const },\r\n      { dx: 0, dy: -1, axis: \"y\" as const },\r\n    ];\r\n    const candidates = [] as Array<{\r\n      endX: number;\r\n      endY: number;\r\n      axis: \"x\" | \"y\";\r\n      dx: number;\r\n      dy: number;\r\n    }>;\r\n    for (const d of directions) {\r\n      const midX = startX + d.dx;\r\n      const midY = startY + d.dy;\r\n      const endX = startX + 2 * d.dx;\r\n      const endY = startY + 2 * d.dy;\r\n      if (this.isTileFree(midX, midY) && this.isTileFree(endX, endY)) {\r\n        candidates.push({ endX, endY, axis: d.axis, dx: d.dx, dy: d.dy });\r\n      }\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  private getThreeTileCandidates = (\r\n    startX: number,\r\n    startY: number,\r\n  ): Array<{\r\n    endX: number;\r\n    endY: number;\r\n    axis: \"x\" | \"y\";\r\n    dx: number;\r\n    dy: number;\r\n  }> => {\r\n    const directions = [\r\n      { dx: 1, dy: 0, axis: \"x\" as const },\r\n      { dx: -1, dy: 0, axis: \"x\" as const },\r\n      { dx: 0, dy: 1, axis: \"y\" as const },\r\n      { dx: 0, dy: -1, axis: \"y\" as const },\r\n    ];\r\n    const candidates = [] as Array<{\r\n      endX: number;\r\n      endY: number;\r\n      axis: \"x\" | \"y\";\r\n      dx: number;\r\n      dy: number;\r\n    }>;\r\n    for (const d of directions) {\r\n      const mid1X = startX + d.dx;\r\n      const mid1Y = startY + d.dy;\r\n      const mid2X = startX + 2 * d.dx;\r\n      const mid2Y = startY + 2 * d.dy;\r\n      const endX = startX + 3 * d.dx;\r\n      const endY = startY + 3 * d.dy;\r\n      if (\r\n        this.isTileFree(mid1X, mid1Y) &&\r\n        this.isTileFree(mid2X, mid2Y) &&\r\n        this.isTileFree(endX, endY)\r\n      ) {\r\n        candidates.push({ endX, endY, axis: d.axis, dx: d.dx, dy: d.dy });\r\n      }\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  private pickBestCandidate = (\r\n    candidates: Array<{\r\n      endX: number;\r\n      endY: number;\r\n      axis: \"x\" | \"y\";\r\n      dx: number;\r\n      dy: number;\r\n    }>,\r\n    targetX: number,\r\n    targetY: number,\r\n    preferXAxis: boolean,\r\n    dxToTarget: number,\r\n    dyToTarget: number,\r\n  ) => {\r\n    const signX = dxToTarget === 0 ? 0 : dxToTarget > 0 ? 1 : -1;\r\n    const signY = dyToTarget === 0 ? 0 : dyToTarget > 0 ? 1 : -1;\r\n    candidates.sort((a, b) => {\r\n      const da = Math.abs(a.endX - targetX) + Math.abs(a.endY - targetY);\r\n      const db = Math.abs(b.endX - targetX) + Math.abs(b.endY - targetY);\r\n      if (da !== db) return da - db;\r\n      if (preferXAxis) {\r\n        if (a.axis !== b.axis) return a.axis === \"x\" ? -1 : 1;\r\n      } else {\r\n        if (a.axis !== b.axis) return a.axis === \"y\" ? -1 : 1;\r\n      }\r\n      const aTowards = (a.dx !== 0 ? a.dx === signX : a.dy === signY) ? -1 : 1;\r\n      const bTowards = (b.dx !== 0 ? b.dx === signX : b.dy === signY) ? -1 : 1;\r\n      if (aTowards !== bTowards) return aTowards - bTowards;\r\n      return 0;\r\n    });\r\n    return candidates[0];\r\n  };\r\n\r\n  private getOneTileCandidates = (\r\n    startX: number,\r\n    startY: number,\r\n  ): Array<{ x: number; y: number }> => {\r\n    const directions = [\r\n      { dx: 1, dy: 0 },\r\n      { dx: -1, dy: 0 },\r\n      { dx: 0, dy: 1 },\r\n      { dx: 0, dy: -1 },\r\n    ];\r\n    const candidates: Array<{ x: number; y: number }> = [];\r\n\r\n    for (const d of directions) {\r\n      const newX = startX + d.dx;\r\n      const newY = startY + d.dy;\r\n      if (this.isTileFree(newX, newY)) {\r\n        candidates.push({ x: newX, y: newY });\r\n      }\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  private pickBestOneTileCandidate = (\r\n    candidates: Array<{ x: number; y: number }>,\r\n    targetX: number,\r\n    targetY: number,\r\n    preferXAxis: boolean,\r\n    dxToTarget: number,\r\n    dyToTarget: number,\r\n  ) => {\r\n    const signX = dxToTarget === 0 ? 0 : dxToTarget > 0 ? 1 : -1;\r\n    const signY = dyToTarget === 0 ? 0 : dyToTarget > 0 ? 1 : -1;\r\n\r\n    candidates.sort((a, b) => {\r\n      const da = Math.abs(a.x - targetX) + Math.abs(a.y - targetY);\r\n      const db = Math.abs(b.x - targetX) + Math.abs(b.y - targetY);\r\n      if (da !== db) return da - db;\r\n\r\n      // Prefer movement along the preferred axis\r\n      const aAxis =\r\n        Math.abs(a.x - targetX) > Math.abs(a.y - targetY) ? \"x\" : \"y\";\r\n      const bAxis =\r\n        Math.abs(b.x - targetX) > Math.abs(b.y - targetY) ? \"x\" : \"y\";\r\n\r\n      if (preferXAxis) {\r\n        if (aAxis !== bAxis) return aAxis === \"x\" ? -1 : 1;\r\n      } else {\r\n        if (aAxis !== bAxis) return aAxis === \"y\" ? -1 : 1;\r\n      }\r\n\r\n      // Prefer moving toward the target\r\n      const aTowards = (\r\n        a.x > targetX\r\n          ? dxToTarget < 0\r\n          : a.x < targetX\r\n            ? dxToTarget > 0\r\n            : a.y > targetY\r\n              ? dyToTarget < 0\r\n              : a.y < targetY\r\n                ? dyToTarget > 0\r\n                : 0\r\n      )\r\n        ? -1\r\n        : 1;\r\n      const bTowards = (\r\n        b.x > targetX\r\n          ? dxToTarget < 0\r\n          : b.x < targetX\r\n            ? dxToTarget > 0\r\n            : b.y > targetY\r\n              ? dyToTarget < 0\r\n              : b.y < targetY\r\n                ? dyToTarget > 0\r\n                : 0\r\n      )\r\n        ? -1\r\n        : 1;\r\n      if (aTowards !== bTowards) return aTowards - bTowards;\r\n\r\n      return 0;\r\n    });\r\n    return candidates[0];\r\n  };\r\n\r\n  private attackOrMoveTo = (\r\n    destX: number,\r\n    destY: number,\r\n    oldX: number,\r\n    oldY: number,\r\n  ): void => {\r\n    const stepDist = Math.abs(destX - oldX) + Math.abs(destY - oldY);\r\n    let hitPlayer = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n        this.game.players[i].x === destX &&\r\n        this.game.players[i].y === destY\r\n      ) {\r\n        // Only allow attacks when moving 2-3 tiles in a single action\r\n        if (stepDist >= 2 && stepDist <= 3) {\r\n          this.game.players[i].hurt(this.hit(), this.name);\r\n          this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n          this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n          if (\r\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\r\n          )\r\n            this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n        }\r\n        hitPlayer = true;\r\n      }\r\n    }\r\n    if (!hitPlayer) {\r\n      this.tryMove(destX, destY);\r\n      this.setDrawXY(oldX, oldY);\r\n      if (this.x > oldX) this.direction = Direction.RIGHT;\r\n      else if (this.x < oldX) this.direction = Direction.LEFT;\r\n      else if (this.y > oldY) this.direction = Direction.DOWN;\r\n      else if (this.y < oldY) this.direction = Direction.UP;\r\n    }\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n\r\n            // Determine target position: prioritize direct attack if player is adjacent\r\n            let targetPosition = {\r\n              x: this.targetPlayer.x,\r\n              y: this.targetPlayer.y,\r\n            };\r\n\r\n            // Check player Manhattan distance\r\n            const playerDistance =\r\n              Math.abs(this.targetPlayer.x - this.x) +\r\n              Math.abs(this.targetPlayer.y - this.y);\r\n\r\n            if (this.target === this.targetPlayer && playerDistance === 2) {\r\n              // Only consider jumping over if player is not adjacent\r\n              let dx = this.targetPlayer.lastX - this.x;\r\n              let dy = this.targetPlayer.lastY - this.y;\r\n              // constrain to orthogonal intent\r\n              if (dx !== 0 && dy !== 0) {\r\n                if (Math.abs(dx) >= Math.abs(dy)) dy = 0;\r\n                else dx = 0;\r\n              }\r\n              if (\r\n                (dx === 0 && Math.abs(dy) <= 1) ||\r\n                (dy === 0 && Math.abs(dx) <= 1)\r\n              ) {\r\n                const jumpOverX = this.targetPlayer.x + Math.sign(dx);\r\n                const jumpOverY = this.targetPlayer.y + Math.sign(dy);\r\n                if (\r\n                  this.room.roomArray[jumpOverX] &&\r\n                  this.room.roomArray[jumpOverX][jumpOverY] &&\r\n                  !this.room.roomArray[jumpOverX][jumpOverY].isSolid()\r\n                ) {\r\n                  targetPosition = { x: jumpOverX, y: jumpOverY };\r\n                }\r\n              }\r\n            } else if (this.target !== this.targetPlayer) {\r\n              targetPosition = { x: this.target.x, y: this.target.y } as any;\r\n            }\r\n\r\n            // Compute 2-tile jump plans\r\n            const dxToTarget = targetPosition.x - oldX;\r\n            const dyToTarget = targetPosition.y - oldY;\r\n            const preferXAxis = Math.abs(dxToTarget) >= Math.abs(dyToTarget);\r\n\r\n            // First, try to use A* first/second step and extend up to length 3 if possible\r\n            let finalX = this.x;\r\n            let finalY = this.y;\r\n            const moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              targetPosition,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              false,\r\n              undefined,\r\n              undefined,\r\n              false,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let step = moves[0];\r\n              const candidate2 = moves[1];\r\n              const candidate3 = moves[2];\r\n              if (candidate3) {\r\n                const preservesLine3 =\r\n                  candidate3.pos.x === oldX || candidate3.pos.y === oldY;\r\n                const alignsAxis3 = preferXAxis\r\n                  ? candidate3.pos.y === oldY\r\n                  : candidate3.pos.x === oldX;\r\n                if (preservesLine3 && alignsAxis3) step = candidate3;\r\n              } else if (candidate2) {\r\n                const preservesLine2 =\r\n                  candidate2.pos.x === oldX || candidate2.pos.y === oldY;\r\n                const alignsAxis2 = preferXAxis\r\n                  ? candidate2.pos.y === oldY\r\n                  : candidate2.pos.x === oldX;\r\n                if (preservesLine2 && alignsAxis2) step = candidate2;\r\n              }\r\n              finalX = step.pos.x;\r\n              finalY = step.pos.y;\r\n              const manhattanFromStart =\r\n                Math.abs(finalX - oldX) + Math.abs(finalY - oldY);\r\n              if (manhattanFromStart === 1 || manhattanFromStart === 2) {\r\n                const dirX = finalX - oldX;\r\n                const dirY = finalY - oldY;\r\n                const stepX = dirX !== 0 ? Math.sign(dirX) : 0;\r\n                const stepY = dirY !== 0 ? Math.sign(dirY) : 0;\r\n                const extX = finalX + stepX;\r\n                const extY = finalY + stepY;\r\n                if (this.isTileFree(extX, extY)) {\r\n                  finalX = extX;\r\n                  finalY = extY;\r\n                }\r\n              }\r\n            }\r\n\r\n            // Execute movement: avoid 1-tile attack; prefer 2-3 range\r\n            if (playerDistance <= 1) {\r\n              // If too close, try to reposition using 2-tile jump plan or fallback\r\n              const finalDist =\r\n                Math.abs(finalX - oldX) + Math.abs(finalY - oldY);\r\n              if (finalDist >= 2) {\r\n                this.attackOrMoveTo(finalX, finalY, oldX, oldY);\r\n              } else {\r\n                const candidates = this.getTwoTileCandidates(oldX, oldY);\r\n                if (candidates.length > 0) {\r\n                  const best = this.pickBestCandidate(\r\n                    candidates,\r\n                    targetPosition.x,\r\n                    targetPosition.y,\r\n                    preferXAxis,\r\n                    dxToTarget,\r\n                    dyToTarget,\r\n                  );\r\n                  this.attackOrMoveTo(best.endX, best.endY, oldX, oldY);\r\n                } else {\r\n                  // last resort, move 1 tile but won't be able to attack\r\n                  const oneTileCandidates = this.getOneTileCandidates(\r\n                    oldX,\r\n                    oldY,\r\n                  );\r\n                  if (oneTileCandidates.length > 0) {\r\n                    const best = this.pickBestOneTileCandidate(\r\n                      oneTileCandidates,\r\n                      targetPosition.x,\r\n                      targetPosition.y,\r\n                      preferXAxis,\r\n                      dxToTarget,\r\n                      dyToTarget,\r\n                    );\r\n                    this.attackOrMoveTo(best.x, best.y, oldX, oldY);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              // Player is not adjacent - use computed movement (A* + extension up to 3 tiles)\r\n              const finalDist =\r\n                Math.abs(finalX - oldX) + Math.abs(finalY - oldY);\r\n              if (finalDist >= 1) {\r\n                this.attackOrMoveTo(finalX, finalY, oldX, oldY);\r\n              } else {\r\n                // Fall back to 3-tile or 2-tile jump candidates if A* didn't find a path\r\n                const candidates3 = this.getThreeTileCandidates(oldX, oldY);\r\n                if (candidates3.length > 0) {\r\n                  const best = this.pickBestCandidate(\r\n                    candidates3,\r\n                    targetPosition.x,\r\n                    targetPosition.y,\r\n                    preferXAxis,\r\n                    dxToTarget,\r\n                    dyToTarget,\r\n                  );\r\n                  this.attackOrMoveTo(best.endX, best.endY, oldX, oldY);\r\n                } else {\r\n                  const candidates2 = this.getTwoTileCandidates(oldX, oldY);\r\n                  if (candidates2.length > 0) {\r\n                    const best = this.pickBestCandidate(\r\n                      candidates2,\r\n                      targetPosition.x,\r\n                      targetPosition.y,\r\n                      preferXAxis,\r\n                      dxToTarget,\r\n                      dyToTarget,\r\n                    );\r\n                    this.attackOrMoveTo(best.endX, best.endY, oldX, oldY);\r\n                  } else {\r\n                    // Fall back to 1-tile movement if no longer jumps available\r\n                    const oneTileCandidates = this.getOneTileCandidates(\r\n                      oldX,\r\n                      oldY,\r\n                    );\r\n                    if (oneTileCandidates.length > 0) {\r\n                      const best = this.pickBestOneTileCandidate(\r\n                        oneTileCandidates,\r\n                        targetPosition.x,\r\n                        targetPosition.y,\r\n                        preferXAxis,\r\n                        dxToTarget,\r\n                        dyToTarget,\r\n                      );\r\n                      this.attackOrMoveTo(best.x, best.y, oldX, oldY);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            /*\r\n            if (\r\n              (this.target.x === this.targetPlayer.x &&\r\n                this.target.y === this.targetPlayer.y) ||\r\n              Utils.distance(\r\n                this.targetPlayer.x,\r\n                this.targetPlayer.y,\r\n                this.x,\r\n                this.y,\r\n              ) <= 2\r\n            )\r\n              */ {\r\n              this.makeHitWarnings();\r\n            }\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  /*\r\n                  if (\r\n                    (this.target.x === this.targetPlayer.x &&\r\n                      this.target.y === this.targetPlayer.y) ||\r\n                    Utils.distance(\r\n                      this.targetPlayer.x,\r\n                      this.targetPlayer.y,\r\n                      this.x,\r\n                      this.y,\r\n                    ) <= 2\r\n                  ) */ {\r\n                    this.makeHitWarnings();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.25;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-3, 0],\r\n            [3, 0],\r\n            [0, -3],\r\n            [0, 3],\r\n            [-2, 0],\r\n            [2, 0],\r\n            [0, -2],\r\n            [0, 2],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = this.x + x;\r\n      const targetY = this.y + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          this.x,\r\n          this.y,\r\n          true,\r\n          false,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 13;\r\n        this.tileY = 4;\r\n      } else {\r\n        this.tileX = 13;\r\n        this.tileY = 4;\r\n      }\r\n      switch (this.direction) {\r\n        case Direction.UP:\r\n          //this.tileX = 13;\r\n          break;\r\n        case Direction.LEFT:\r\n          //this.tileX = 13;\r\n          //this.tileY = 6;\r\n          break;\r\n        case Direction.RIGHT:\r\n          //this.tileY = 6;\r\n          break;\r\n      }\r\n      let rumble = Math.max(\r\n        this.rumble(this.rumbling, this.frame, this.direction).x,\r\n        Math.max(this.rumble(this.rumbling, this.frame, this.direction).y),\r\n      );\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      //only draw when visible\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY, // + this.direction,\r\n        2,\r\n        2,\r\n        this.x - this.drawX + rumble - 0.5,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        2 * this.crushX,\r\n        2 * this.crushY,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { HitWarning, HitWarningDirection } from \"../../drawable/hitWarning\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { DownLadder } from \"../../tile/downLadder\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\n\r\nexport class BigFrogEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  frameLength: number;\r\n  startFrame: number;\r\n  animationSpeed: number;\r\n  tickCount: number;\r\n  rumbling: boolean;\r\n  jumping: boolean;\r\n  jumpDistance: number;\r\n  halfJumped: boolean;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 37;\r\n  static tileY: number = 24;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.defaultMaxHealth = 4;\r\n    this.tileX = 37;\r\n    this.tileY = 24;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.frameLength = 3;\r\n    this.startFrame = 0;\r\n    this.animationSpeed = 0.1;\r\n    this.tickCount = 0;\r\n    this.jumping = false;\r\n    this.jumpDistance = 1;\r\n    this.drop = drop ? drop : new Coin(this.room, this.x, this.y);\r\n    this.name = \"bigfrog\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 2;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 30;\r\n    this.canDestroyOthers = true;\r\n    this.halfJumped = false;\r\n    this.canCrushOthers = true;\r\n    this.dropChance = 1;\r\n    //if (drop) this.drop = drop;\r\n    this.h = 2;\r\n    this.w = 2;\r\n    this.getDrop([\"frog\"], true);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  poison = () => {};\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (this.cloned) return;\r\n\r\n    this.tileX = 37;\r\n    this.frameLength = 3;\r\n    this.animationSpeed = 0.1;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.tileX = 37;\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        this.tileX = 37;\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this && !e.destroyable) {\r\n                // Block all tiles occupied by entities (supports multi-tile entities)\r\n                for (let ex = 0; ex < (e.w || 1); ex++) {\r\n                  for (let ey = 0; ey < (e.h || 1); ey++) {\r\n                    disablePositions.push({\r\n                      x: e.x + ex,\r\n                      y: e.y + ey,\r\n                    } as astar.Position);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            // Account for this enemy's 2x2 footprint when avoiding active spike traps\r\n            for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx] &&\r\n                  this.room.roomArray[xx][yy] &&\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let targetPosition = {\r\n              x: this.targetPlayer.x,\r\n              y: this.targetPlayer.y,\r\n            };\r\n\r\n            // 2x2-aware jump-over logic\r\n            const px = this.targetPlayer.x;\r\n            const py = this.targetPlayer.y;\r\n            const sharesRow = py >= this.y && py < this.y + this.h;\r\n            const sharesCol = px >= this.x && px < this.x + this.w;\r\n\r\n            const isRightAdjacent = sharesRow && px === this.x + this.w; // x + 2\r\n            const isLeftAdjacent = sharesRow && px === this.x - 1;\r\n            const isBelowAdjacent = sharesCol && py === this.y + this.h; // y + 2\r\n            const isAboveAdjacent = sharesCol && py === this.y - 1;\r\n\r\n            // Track whether we attempted a jump-over and whether it succeeded\r\n            let triedAdjacentJump = false;\r\n            let performedJump = false;\r\n\r\n            const isAreaClear = (\r\n              tx: number,\r\n              ty: number,\r\n              w: number,\r\n              h: number,\r\n            ): boolean => {\r\n              for (let xx = 0; xx < w; xx++) {\r\n                for (let yy = 0; yy < h; yy++) {\r\n                  const ax = tx + xx;\r\n                  const ay = ty + yy;\r\n                  if (!this.room.roomArray[ax] || !this.room.roomArray[ax][ay])\r\n                    return false;\r\n                  const tile = this.room.roomArray[ax][ay];\r\n                  if (\r\n                    tile.isSolid() ||\r\n                    tile.isDoor ||\r\n                    tile instanceof DownLadder\r\n                  )\r\n                    return false;\r\n                  // prevent entity overlap\r\n                  for (const e of this.room.entities) {\r\n                    if (e !== this && !e.destroyable) {\r\n                      if (\r\n                        !(\r\n                          e.x >= tx + w ||\r\n                          e.x + (e.w || 1) <= tx ||\r\n                          e.y >= ty + h ||\r\n                          e.y + (e.h || 1) <= ty\r\n                        )\r\n                      ) {\r\n                        return false;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              return true;\r\n            };\r\n\r\n            if (isRightAdjacent) {\r\n              triedAdjacentJump = true;\r\n              const tx = px + 1;\r\n              const ty = this.y;\r\n              if (isAreaClear(tx, ty, this.w, this.h)) {\r\n                this.tryMove(tx, ty);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.jumping) {\r\n                  this.frame = 8;\r\n                  this.animationSpeed = 1;\r\n                }\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n                this.rumbling = false;\r\n                performedJump = true;\r\n                return;\r\n              }\r\n            } else if (isLeftAdjacent) {\r\n              triedAdjacentJump = true;\r\n              const tx = px - this.w;\r\n              const ty = this.y;\r\n              if (isAreaClear(tx, ty, this.w, this.h)) {\r\n                this.tryMove(tx, ty);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.jumping) {\r\n                  this.frame = 8;\r\n                  this.animationSpeed = 1;\r\n                }\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n                this.rumbling = false;\r\n                performedJump = true;\r\n                return;\r\n              }\r\n            } else if (isBelowAdjacent) {\r\n              triedAdjacentJump = true;\r\n              const tx = this.x;\r\n              const ty = py + 1;\r\n              if (isAreaClear(tx, ty, this.w, this.h)) {\r\n                this.tryMove(tx, ty);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.jumping) {\r\n                  this.frame = 8;\r\n                  this.animationSpeed = 1;\r\n                }\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n                this.rumbling = false;\r\n                performedJump = true;\r\n                return;\r\n              }\r\n            } else if (isAboveAdjacent) {\r\n              triedAdjacentJump = true;\r\n              const tx = this.x;\r\n              const ty = py - this.h;\r\n              if (isAreaClear(tx, ty, this.w, this.h)) {\r\n                this.tryMove(tx, ty);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.jumping) {\r\n                  this.frame = 8;\r\n                  this.animationSpeed = 1;\r\n                }\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n                this.rumbling = false;\r\n                performedJump = true;\r\n                return;\r\n              }\r\n            }\r\n            // If adjacent and attempted to jump but destination was blocked, do nothing this turn\r\n            if (triedAdjacentJump && !performedJump) {\r\n              this.rumbling = false;\r\n              return;\r\n            }\r\n            // Build pathfinding grid only if we didn't jump over\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              targetPosition,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              false,\r\n              undefined,\r\n              undefined,\r\n              false,\r\n              this.lastPlayerPos,\r\n            );\r\n            console.log(moves); //DON'T REMOVE THIS\r\n\r\n            if (moves[1]) {\r\n              const wouldHit = (\r\n                player: Player,\r\n                moveX: number,\r\n                moveY: number,\r\n              ) => {\r\n                return (\r\n                  player.x >= moveX &&\r\n                  player.x < moveX + this.w &&\r\n                  player.y >= moveY &&\r\n                  player.y < moveY + this.h\r\n                );\r\n              };\r\n\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (this.game.rooms[this.game.players[i].levelID] !== this.room)\r\n                  continue;\r\n                if (\r\n                  wouldHit(this.game.players[i], moves[1].pos.x, moves[1].pos.y)\r\n                ) {\r\n                  const closestTile = this.closestTile(this.game.players[i]);\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX += 1.5 * (closestTile.x - this.game.players[i].x);\r\n                  this.drawY += 1.5 * (closestTile.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(5 * this.drawX, 5 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                if (moves.length > 1) {\r\n                  let moveX = moves[1].pos.x;\r\n                  let moveY = moves[1].pos.y;\r\n                  this.tryMove(moveX, moveY);\r\n                  this.setDrawXY(oldX, oldY);\r\n\r\n                  if (this.jumping) {\r\n                    this.frame = 8;\r\n                    this.animationSpeed = 1;\r\n                  }\r\n                  if (this.x > moveX) this.direction = Direction.RIGHT;\r\n                  else if (this.x < moveX) this.direction = Direction.LEFT;\r\n                  else if (this.y > moveY) this.direction = Direction.DOWN;\r\n                  else if (this.y < moveY) this.direction = Direction.UP;\r\n                }\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.makeBigHitWarnings();\r\n            this.rumbling = true;\r\n            this.tileX = 43;\r\n            this.frame = 0;\r\n            this.frameLength = 2;\r\n            this.animationSpeed = 0.2;\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.makeBigHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\r\n    if (this.jumping && !this.cloned) {\r\n      let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n      if (j >= 1) {\r\n        this.jumpDistance = 2;\r\n      }\r\n      this.jumpY =\r\n        Math.sin((j / (this.jumpDistance + 1)) * Math.PI) * this.jumpHeight;\r\n      if (this.jumpY < 0.01 && this.jumpY > -0.01) {\r\n        this.jumpY = 0;\r\n        this.jumpDistance = 1;\r\n      }\r\n      if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n    }\r\n  };\r\n\r\n  bigEnemyShake = () => {\r\n    if (this.w > 1 || this.h > 1) {\r\n      setTimeout(() => {\r\n        this.game.shakeScreen(0 * this.drawX, 5);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.25;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-2, 0],\r\n            [2, 0],\r\n            [0, -2],\r\n            [0, 2],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const positions = [\r\n        { x: this.x, y: this.y },\r\n        { x: this.x + 1, y: this.y },\r\n        { x: this.x, y: this.y + 1 },\r\n        { x: this.x + 1, y: this.y + 1 },\r\n      ];\r\n      for (const position of positions) {\r\n        const targetX = position.x + x;\r\n        const targetY = position.y + y;\r\n        if (this.isWithinRoomBounds(targetX, targetY)) {\r\n          const hitWarning = new HitWarning(\r\n            this.game,\r\n            targetX,\r\n            targetY,\r\n            position.x,\r\n            position.y,\r\n            true,\r\n            false,\r\n            this,\r\n          );\r\n\r\n          const dir = hitWarning.getPointerDir();\r\n          const ox = position.x - this.x; // 0 or 1\r\n          const oy = position.y - this.y; // 0 or 1\r\n\r\n          let allowed: HitWarningDirection[] = [];\r\n          if (ox === 1 && oy === 1) {\r\n            // bottom-right tile: allow only south/east/southeast\r\n            allowed = [\r\n              HitWarningDirection.South,\r\n              HitWarningDirection.East,\r\n              HitWarningDirection.SouthEast,\r\n            ];\r\n          } else if (ox === 1 && oy === 0) {\r\n            // top-right tile: allow north/east/northeast\r\n            allowed = [\r\n              HitWarningDirection.North,\r\n              HitWarningDirection.East,\r\n              HitWarningDirection.NorthEast,\r\n            ];\r\n          } else if (ox === 0 && oy === 1) {\r\n            // bottom-left tile: allow south/west/southwest\r\n            allowed = [\r\n              HitWarningDirection.South,\r\n              HitWarningDirection.West,\r\n              HitWarningDirection.SouthWest,\r\n            ];\r\n          } else {\r\n            // top-left tile: allow north/west/northwest\r\n            allowed = [\r\n              HitWarningDirection.North,\r\n              HitWarningDirection.West,\r\n              HitWarningDirection.NorthWest,\r\n            ];\r\n          }\r\n\r\n          if (allowed.includes(dir)) {\r\n            this.room.hitwarnings.push(hitWarning);\r\n          }\r\n\r\n          //this.hitWarnings.push(hitWarning);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += this.animationSpeed * delta;\r\n      if (this.frame >= this.frameLength) {\r\n        this.frame = 0;\r\n      }\r\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame).y;\r\n      if (this.drawX !== 0 || this.drawY !== 0) {\r\n        this.jumping = true;\r\n      } else {\r\n        this.jumping = false;\r\n      }\r\n      if (this.jumping) {\r\n        if (this.frame < 4) this.frame = 4;\r\n        this.frameLength = 11;\r\n        this.animationSpeed = 0.2;\r\n      } else {\r\n        this.frameLength = 3;\r\n        this.animationSpeed = 0.1;\r\n      }\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX +\r\n          (this.tileX !== 59 && !this.rumbling && !this.cloned\r\n            ? Math.floor(this.frame)\r\n            : 0) *\r\n            2,\r\n        this.tileY /*+ this.direction * 2,*/,\r\n        2,\r\n        3,\r\n        this.x + rumbleX - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        2,\r\n        3,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0.5 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0.5 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\n\r\nexport class BigKnightEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  readonly REGEN_TICKS = 5;\r\n  drops: Array<Item>;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 29;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 2;\r\n    this.h = 2;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 6;\r\n    this.maxHealth = 6;\r\n    this.defaultMaxHealth = 6;\r\n    this.tileX = 29;\r\n    this.tileY = 0;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.chainPushable = false;\r\n    this.name = \"giant knight\";\r\n    this.orthogonalAttack = true;\r\n\r\n    this.drops = [];\r\n    if (drop) this.drops.push(drop);\r\n    while (this.drops.length < 4) {\r\n      let dropProb = Random.rand();\r\n      if (dropProb < 0.005)\r\n        this.drops.push(new Spear(this.room, this.x, this.y));\r\n      else if (dropProb < 0.04)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.075)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else if (dropProb < 0.1)\r\n        this.drops.push(new RedGem(this.room, this.x, this.y));\r\n      else this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  bleed = () => {};\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (this.health === 1) {\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.health++;\r\n          this.ticksSinceFirstHit = 0;\r\n        }\r\n      } else {\r\n        if (!this.seenPlayer) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (distance <= 4) {\r\n              this.targetPlayer = player;\r\n              this.facePlayer(player);\r\n              this.seenPlayer = true;\r\n              if (player === this.game.players[this.game.localPlayerID])\r\n                this.alertTicks = 1;\r\n              this.makeBigHitWarnings();\r\n            }\r\n          }\r\n        } else if (this.seenPlayer) {\r\n          if (this.room.playerTicked === this.targetPlayer) {\r\n            this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n            this.ticks++;\r\n\r\n            // Knight cadence: warn on even ticks, move on odd ticks\r\n            if (this.ticks % 2 === 0) {\r\n              this.rumbling = true;\r\n              this.makeBigHitWarnings();\r\n              return;\r\n            }\r\n\r\n            const oldX = this.x;\r\n            const oldY = this.y;\r\n\r\n            // Build disabled positions (entities and active spike traps)\r\n            let disablePositions = Array<astar.Position>();\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                for (let dx = 0; dx < e.w; dx++) {\r\n                  for (let dy = 0; dy < e.h; dy++) {\r\n                    disablePositions.push({\r\n                      x: e.x + dx,\r\n                      y: e.y + dy,\r\n                    } as astar.Position);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx] &&\r\n                  this.room.roomArray[xx][yy] &&\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Build grid\r\n            let grid = [] as any[];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n\r\n            // A* pathfinding like BigZombieEnemy\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.targetPlayer,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              true,\r\n              this.direction,\r\n            );\r\n\r\n            if (moves.length > 0) {\r\n              const moveX = moves[0].pos.x;\r\n              const moveY = moves[0].pos.y;\r\n              if (moveX > oldX) this.direction = Direction.RIGHT;\r\n              else if (moveX < oldX) this.direction = Direction.LEFT;\r\n              else if (moveY > oldY) this.direction = Direction.DOWN;\r\n              else if (moveY < oldY) this.direction = Direction.UP;\r\n              let hitPlayer = false;\r\n              if (this.health >= 3) {\r\n                for (const i in this.game.players) {\r\n                  if (\r\n                    this.game.rooms[this.game.players[i].levelID] === this.room\r\n                  ) {\r\n                    let playerHit = false;\r\n                    for (let dx = 0; dx < this.w; dx++) {\r\n                      for (let dy = 0; dy < this.h; dy++) {\r\n                        if (\r\n                          this.game.players[i].x === moveX + dx &&\r\n                          this.game.players[i].y === moveY + dy\r\n                        ) {\r\n                          playerHit = true;\r\n                          break;\r\n                        }\r\n                      }\r\n                      if (playerHit) break;\r\n                    }\r\n                    if (playerHit) {\r\n                      this.game.players[i].hurt(this.hit(), this.name);\r\n                      this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                      this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                      if (\r\n                        this.game.players[i] ===\r\n                        this.game.players[this.game.localPlayerID]\r\n                      )\r\n                        this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                      hitPlayer = true;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            } else {\r\n              this.facePlayer(this.targetPlayer);\r\n            }\r\n\r\n            // Handle regeneration while damaged\r\n            if (this.health < this.maxHealth) {\r\n              this.ticksSinceFirstHit++;\r\n              if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n                this.health++;\r\n                this.ticksSinceFirstHit = 0;\r\n              }\r\n            }\r\n          }\r\n\r\n          let targetPlayerOffline =\r\n            Object.values(this.game.offlinePlayers).indexOf(\r\n              this.targetPlayer,\r\n            ) !== -1;\r\n          if (!this.aggro || targetPlayerOffline) {\r\n            let p = this.nearestPlayer();\r\n            if (p !== false) {\r\n              let [distance, player] = p;\r\n              if (\r\n                distance <= 4 &&\r\n                (targetPlayerOffline ||\r\n                  distance < this.playerDistance(this.targetPlayer))\r\n              ) {\r\n                if (player !== this.targetPlayer) {\r\n                  this.targetPlayer = player;\r\n                  this.facePlayer(player);\r\n                  if (player === this.game.players[this.game.localPlayerID])\r\n                    this.alertTicks = 1;\r\n                  if (this.health >= 3 && this.ticks % 2 === 0)\r\n                    this.rumbling = true;\r\n                  this.makeBigHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      const tileX =\r\n        this.ticks % 2 === 0\r\n          ? 2 * Math.floor((this.tileX + this.frame) / 2) + 1\r\n          : this.tileX;\r\n      const tileY = this.ticks % 2 === 0 ? this.tileY : this.tileY + 4;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        tileX,\r\n        tileY,\r\n        2,\r\n        4,\r\n        this.x - this.drawX + rumbleX,\r\n        this.y - 2.5 - this.drawY,\r\n        2,\r\n        4,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { DownLadder } from \"../../tile/downLadder\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { Entity } from \"../entity\";\r\n\r\nexport class BigSkullEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  unconscious: boolean;\r\n  readonly REGEN_TICKS = 5;\r\n  drops: Array<Item>;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 21;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 2;\r\n    this.h = 2;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 6;\r\n    this.maxHealth = 6;\r\n    this.defaultMaxHealth = 6;\r\n    this.tileX = 33;\r\n    this.tileY = 12;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.unconscious = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.chainPushable = false;\r\n    this.name = \"giant skeleton\";\r\n    this.dropChance = 1;\r\n    this.drops = [];\r\n    this.direction = Direction.DOWN;\r\n    this.forwardOnlyAttack = true;\r\n\r\n    this.drawMoveSpeed = 0.9;\r\n    this.canDestroyOthers = true;\r\n    if (drop) this.drops.push(drop);\r\n    const dropAmount = Math.floor(Random.rand() * 3) + 2;\r\n    while (this.drops.length < dropAmount && !this.cloned) {\r\n      this.getDrop();\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    this.ticksSinceFirstHit = 0;\r\n    if (this.health == 4) this.unconscious = false;\r\n    this.health -= damage;\r\n    this.maxHealth -= shieldHealth;\r\n    this.startHurting();\r\n\r\n    this.healthBar.hurt();\r\n    this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n\r\n    if (this.health == 2) {\r\n      this.unconscious = true;\r\n      ImageParticle.spawnCluster(this.room, this.x + 1, this.y + 1, 3, 28);\r\n    } else {\r\n      this.healthBar.hurt();\r\n    }\r\n    if (this.health <= 0) {\r\n      ImageParticle.spawnCluster(this.room, this.x + 1, this.y + 1, 0, 24);\r\n      this.kill();\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  bleed = () => {};\r\n  poison = () => {};\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        this.ticks++;\r\n        return;\r\n      }\r\n\r\n      if (this.health <= 2) {\r\n        this.unconscious = true;\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.healthBar.hurt();\r\n          this.health = 4;\r\n          this.unconscious = false;\r\n        }\r\n        this.ticks++;\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // If aligned with the player on a row/column, turn toward the player instead of moving this turn\r\n          const p = this.targetPlayer;\r\n          const sharesRow = p.y >= this.y && p.y < this.y + this.h;\r\n          const sharesColumn = p.x >= this.x && p.x < this.x + this.w;\r\n          if (sharesRow !== sharesColumn) {\r\n            let desiredDir = this.direction;\r\n            if (sharesRow) {\r\n              desiredDir = p.x < this.x ? Direction.LEFT : Direction.RIGHT;\r\n            } else if (sharesColumn) {\r\n              desiredDir = p.y < this.y ? Direction.UP : Direction.DOWN;\r\n            }\r\n            if (desiredDir !== this.direction) {\r\n              this.direction = desiredDir;\r\n              this.makeBigHitWarnings();\r\n              this.ticks++;\r\n              return;\r\n            }\r\n          }\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              // For 2x2 enemy, block all tiles the entity occupies\r\n              for (let ex = 0; ex < (e.w || 1); ex++) {\r\n                for (let ey = 0; ey < (e.h || 1); ey++) {\r\n                  disablePositions.push({\r\n                    x: e.x + ex,\r\n                    y: e.y + ey,\r\n                  } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // Check for spike traps around the 2x2 area\r\n          for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\r\n              if (\r\n                this.room.roomArray[xx] &&\r\n                this.room.roomArray[xx][yy] &&\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n            undefined,\r\n            undefined,\r\n          );\r\n\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            //this.facePlayer(player);\r\n\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            if (oldDir === this.direction) {\r\n              let hitPlayer = false;\r\n              let wouldHit = (player: Player, moveX: number, moveY: number) => {\r\n                return (\r\n                  player.x >= moveX &&\r\n                  player.x < moveX + this.w &&\r\n                  player.y >= moveY &&\r\n                  player.y < moveY + this.h\r\n                );\r\n              };\r\n\r\n              for (const i in this.game.players) {\r\n                const closestTile = this.closestTile(this.game.players[i]);\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  wouldHit(this.game.players[i], moveX, moveY)\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (closestTile.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (closestTile.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          } else {\r\n            this.facePlayer(this.targetPlayer);\r\n          }\r\n\r\n          // Add directional disable positions for forward-only attack\r\n          if (this.direction == Direction.LEFT) {\r\n            for (let i = 0; i < this.h; i++) {\r\n              disablePositions.push({\r\n                x: this.x,\r\n                y: this.y + i + 1,\r\n              } as astar.Position);\r\n              disablePositions.push({\r\n                x: this.x,\r\n                y: this.y + i - 1,\r\n              } as astar.Position);\r\n            }\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            for (let i = 0; i < this.h; i++) {\r\n              disablePositions.push({\r\n                x: this.x + this.w - 1,\r\n                y: this.y + i + 1,\r\n              } as astar.Position);\r\n              disablePositions.push({\r\n                x: this.x + this.w - 1,\r\n                y: this.y + i - 1,\r\n              } as astar.Position);\r\n            }\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            for (let i = 0; i < this.w; i++) {\r\n              disablePositions.push({\r\n                x: this.x + i + 1,\r\n                y: this.y + this.h - 1,\r\n              } as astar.Position);\r\n              disablePositions.push({\r\n                x: this.x + i - 1,\r\n                y: this.y + this.h - 1,\r\n              } as astar.Position);\r\n            }\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            for (let i = 0; i < this.w; i++) {\r\n              disablePositions.push({\r\n                x: this.x + i + 1,\r\n                y: this.y,\r\n              } as astar.Position);\r\n              disablePositions.push({\r\n                x: this.x + i - 1,\r\n                y: this.y,\r\n              } as astar.Position);\r\n            }\r\n          }\r\n          this.makeBigHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeBigHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 33;\r\n      this.tileY = 12;\r\n\r\n      if (this.health <= 2 || this.cloned) {\r\n        this.tileX = 35;\r\n        this.tileY = 12;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileX = 33;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY + this.direction * 3,\r\n        2,\r\n        3,\r\n        this.x - this.drawX,\r\n        this.y - 1.5 - this.drawY - this.jumpY,\r\n        2,\r\n        3,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(\r\n            delta,\r\n            GameConstants.TILESIZE * 0.5,\r\n            GameConstants.TILESIZE * -1,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y - 0.5,\r\n      true,\r\n    );\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class BigZombieEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  dir: Direction;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 21;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 2;\r\n    this.h = 2;\r\n\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.defaultMaxHealth = 4;\r\n    this.tileX = 31;\r\n    this.tileY = 12;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.dir = Direction.DOWN;\r\n    this.name = \"bigzombie\";\r\n    this.chainPushable = false;\r\n\r\n    this.forwardOnlyAttack = true;\r\n    this.drawMoveSpeed = 0.9;\r\n    this.jumpHeight = 0.35;\r\n    this.drawYOffset = 1.5;\r\n    this.canDestroyOthers = true;\r\n\r\n    if (drop) this.drop = drop;\r\n    const dropAmount = Math.floor(Random.rand() * 3) + 2;\r\n    while (this.drops.length < dropAmount && !this.cloned) {\r\n      this.getDrop();\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  bleed = () => {};\r\n  poison = () => {};\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          const p = this.targetPlayer;\r\n          const sharesRow = p.y >= this.y && p.y < this.y + this.h;\r\n          const sharesColumn = p.x >= this.x && p.x < this.x + this.w;\r\n          if (sharesRow !== sharesColumn) {\r\n            let desiredDir = this.direction;\r\n            if (sharesRow) {\r\n              desiredDir = p.x < this.x ? Direction.LEFT : Direction.RIGHT;\r\n            } else if (sharesColumn) {\r\n              desiredDir = p.y < this.y ? Direction.UP : Direction.DOWN;\r\n            }\r\n            if (desiredDir !== this.direction) {\r\n              this.direction = desiredDir;\r\n              this.makeBigHitWarnings();\r\n              this.ticks++;\r\n              return;\r\n            }\r\n          }\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              // For 2x2 entity, block all positions the entity occupies\r\n              for (let dx = 0; dx < e.w; dx++) {\r\n                for (let dy = 0; dy < e.h; dy++) {\r\n                  disablePositions.push({\r\n                    x: e.x + dx,\r\n                    y: e.y + dy,\r\n                  } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // Check spike traps in a larger area for 2x2 entity\r\n          for (let xx = this.x - 1; xx <= this.x + this.w; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + this.h; yy++) {\r\n              if (\r\n                this.room.roomArray[xx] &&\r\n                this.room.roomArray[xx][yy] &&\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            //this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room\r\n                ) {\r\n                  // Check if player is within any of the 2x2 positions we're moving to\r\n                  let playerHit = false;\r\n                  for (let dx = 0; dx < this.w; dx++) {\r\n                    for (let dy = 0; dy < this.h; dy++) {\r\n                      if (\r\n                        this.game.players[i].x === moveX + dx &&\r\n                        this.game.players[i].y === moveY + dy\r\n                      ) {\r\n                        playerHit = true;\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (playerHit) break;\r\n                  }\r\n\r\n                  if (playerHit) {\r\n                    this.game.players[i].hurt(this.hit(), this.name);\r\n                    this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                    this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                    if (\r\n                      this.game.players[i] ===\r\n                      this.game.players[this.game.localPlayerID]\r\n                    )\r\n                      this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                    hitPlayer = true;\r\n                  }\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          } else {\r\n            this.facePlayer(this.targetPlayer);\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeBigHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeBigHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x + 0.5,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n    Game.drawMob(\r\n      this.tileX, // + Math.floor(this.frame),\r\n      this.tileY + this.direction * 3,\r\n      2,\r\n      3,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n      2,\r\n      3,\r\n      this.softShadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class BishopEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 31;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.defaultMaxHealth = 2;\r\n    this.tileX = 31;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"bishop\";\r\n    this.jumpHeight = 1;\r\n    this.diagonalAttackRange = 1;\r\n    this.diagonalAttack = true;\r\n    this.orthogonalAttack = false;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 26;\r\n    if (drop) this.drop = drop;\r\n    this.armored = true;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  tryMove = (x: number, y: number) => {\r\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\r\n      return (\r\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\r\n      );\r\n    };\r\n    let enemyCollide = (enemy: Entity): boolean => {\r\n      if (enemy.x >= x + this.w || enemy.x + enemy.w <= x) return false;\r\n      if (enemy.y >= y + this.h || enemy.y + enemy.h <= y) return false;\r\n      return true;\r\n    };\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && enemyCollide(e)) {\r\n        return;\r\n      }\r\n    }\r\n    for (const i in this.game.players) {\r\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\r\n        return;\r\n      }\r\n    }\r\n    let tiles = [];\r\n    for (let xx = 0; xx < this.w; xx++) {\r\n      for (let yy = 0; yy < this.h; yy++) {\r\n        if (!this.room.roomArray[x + xx][y + yy].isSolid()) {\r\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    for (let tile of tiles) {\r\n      tile.onCollideEnemy(this);\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n\r\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (jumpY < 0.01) jumpY = 0;\r\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\r\n    this.jumpY = jumpY;\r\n  };\r\n\r\n  behavior = () => {\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n              if (this.room.roomArray[xx][yy] instanceof Door) {\r\n                // don't walk into doorways (normally wouldn't be an issue without diagonals)\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          disablePositions.push({ x: this.x + 1, y: this.y } as astar.Position);\r\n          disablePositions.push({ x: this.x - 1, y: this.y } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y + 1 } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y - 1 } as astar.Position);\r\n          disablePositions.push({ x: this.x, y: this.y } as astar.Position);\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            true, //diagonals\r\n          );\r\n          moves = moves.filter((move) => {\r\n            const dx = Math.abs(move.pos.x - this.x);\r\n            const dy = Math.abs(move.pos.y - this.y);\r\n            return dx === 1 && dy === 1;\r\n          });\r\n          if (this.justHurt) {\r\n            this.retreat(oldX, oldY);\r\n          } else if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                hitPlayer = true;\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    let offsetTileY = this.health <= 1 || this.cloned === true ? 2 : 0;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + offsetTileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount() * (1 + this.jumpY / 3),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport enum ChargeEnemyState {\r\n  IDLE,\r\n  ALERTED,\r\n  CHARGING,\r\n}\r\n\r\nexport class ChargeEnemy extends Enemy {\r\n  startX: number;\r\n  startY: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  visualTargetX: number;\r\n  visualTargetY: number;\r\n  ticks: number;\r\n  frame: number;\r\n  state: ChargeEnemyState;\r\n  trailFrame: number;\r\n  drop: Item;\r\n  maxChargeDistance: number = 3;\r\n  static difficulty: number = 5;\r\n  static tileX: number = 13;\r\n  static tileY: number = 8;\r\n  trailAlpha: number = 1;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 13;\r\n    this.tileY = 8;\r\n    this.trailFrame = 0;\r\n    this.alertTicks = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.name = \"charge knight\";\r\n\r\n    this.state = ChargeEnemyState.IDLE;\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  canMoveOver = (x: number, y: number): boolean => {\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && x === e.x && y === e.y) return false;\r\n    }\r\n    let t = this.room.roomArray[x][y];\r\n    return !(t.isSolid() || t instanceof Door);\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (this.state === ChargeEnemyState.IDLE) {\r\n        let blocked = false;\r\n        let dx = 0;\r\n        let dy = 0;\r\n        for (const i in this.game.players) {\r\n          // Check if player is within detection range (maxChargeDistance)\r\n          const playerX = this.game.players[i].x;\r\n          const playerY = this.game.players[i].y;\r\n          const distanceX = Math.abs(this.x - playerX);\r\n          const distanceY = Math.abs(this.y - playerY);\r\n\r\n          // Only detect players in straight lines and within maxChargeDistance\r\n          if (\r\n            (this.x === playerX && distanceY <= this.maxChargeDistance) ||\r\n            (this.y === playerY && distanceX <= this.maxChargeDistance)\r\n          ) {\r\n            if (this.x === playerX) {\r\n              if (this.y < playerY) dy = 1;\r\n              else dy = -1;\r\n              for (let yy = this.y; yy !== playerY; yy += dy) {\r\n                if (!this.canMoveOver(this.x, yy)) blocked = true;\r\n              }\r\n            } else if (this.y === playerY) {\r\n              if (this.x < playerX) dx = 1;\r\n              else dx = -1;\r\n              for (let xx = this.x; xx !== playerX; xx += dx) {\r\n                if (!this.canMoveOver(xx, this.y)) blocked = true;\r\n              }\r\n            }\r\n\r\n            if ((dx !== 0 || dy !== 0) && !blocked) {\r\n              this.state = ChargeEnemyState.ALERTED;\r\n              this.targetX = this.x;\r\n              this.targetY = this.y;\r\n              let distanceMoved = 0;\r\n              while (\r\n                this.canMoveOver(this.targetX + dx, this.targetY + dy) &&\r\n                distanceMoved < this.maxChargeDistance\r\n              ) {\r\n                this.targetX += dx;\r\n                this.targetY += dy;\r\n                distanceMoved++;\r\n                if (\r\n                  (this.targetX === playerX && this.targetY === playerY) ||\r\n                  (this.targetX === playerX - 1 && this.targetY === playerY) ||\r\n                  (this.targetX === playerX + 1 && this.targetY === playerY) ||\r\n                  (this.targetX === playerX && this.targetY === playerY - 1) ||\r\n                  (this.targetX === playerX && this.targetY === playerY + 1)\r\n                )\r\n                  this.room.hitwarnings.push(\r\n                    new HitWarning(\r\n                      this.game,\r\n                      this.targetX,\r\n                      this.targetY,\r\n                      this.x,\r\n                      this.y,\r\n                    ),\r\n                  );\r\n              }\r\n              this.visualTargetX = this.targetX + 0.5 * dx;\r\n              this.visualTargetY = this.targetY + 0.5 * dy;\r\n              if (dy === 1) this.visualTargetY += 0.65;\r\n              if (dx > 0) this.direction = Direction.RIGHT;\r\n              else if (dx < 0) this.direction = Direction.LEFT;\r\n              else if (dy < 0) this.direction = Direction.UP;\r\n              else if (dy > 0) this.direction = Direction.DOWN;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else if (this.state === ChargeEnemyState.ALERTED) {\r\n        this.state = ChargeEnemyState.CHARGING;\r\n        this.trailFrame = 0;\r\n\r\n        for (const i in this.game.players) {\r\n          if (\r\n            (this.y === this.game.players[i].y &&\r\n              ((this.x < this.game.players[i].x &&\r\n                this.game.players[i].x <= this.targetX) ||\r\n                (this.targetX <= this.game.players[i].x &&\r\n                  this.game.players[i].x < this.x))) ||\r\n            (this.x === this.game.players[i].x &&\r\n              ((this.y < this.game.players[i].y &&\r\n                this.game.players[i].y <= this.targetY) ||\r\n                (this.targetY <= this.game.players[i].y &&\r\n                  this.game.players[i].y < this.y)))\r\n          ) {\r\n            this.game.players[i].hurt(this.hit(), this.name);\r\n          }\r\n        }\r\n\r\n        this.startX = this.x;\r\n        this.startY = this.y;\r\n        this.drawX = this.targetX - this.x;\r\n        this.drawY = this.targetY - this.y;\r\n        this.x = this.targetX;\r\n        this.y = this.targetY;\r\n      } else if (this.state === ChargeEnemyState.CHARGING) {\r\n        this.state = ChargeEnemyState.IDLE;\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (\r\n        (this.state === ChargeEnemyState.CHARGING &&\r\n          Math.abs(this.drawX) > 0.1) ||\r\n        Math.abs(this.drawY) > 0.1\r\n      ) {\r\n        GenericParticle.spawnCluster(\r\n          this.room,\r\n          this.x - this.drawX + 0.5,\r\n          this.y - this.drawY + 0.5,\r\n          \"black\",\r\n        );\r\n        GenericParticle.spawnCluster(\r\n          this.room,\r\n          this.x - this.drawX + 0.5,\r\n          this.y - this.drawY + 0.5,\r\n          \"white\",\r\n        );\r\n      }\r\n\r\n      if (this.state === ChargeEnemyState.CHARGING || this.trailAlpha < 1) {\r\n        this.trailFrame += 0.03 * delta;\r\n        let t = this.trailFrame;\r\n\r\n        if (t >= 0 && t <= 1) {\r\n          Game.ctx.strokeStyle = \"white\";\r\n          if (GameConstants.ALPHA_ENABLED) {\r\n            this.trailAlpha = 1 - t;\r\n            Game.ctx.globalAlpha = this.trailAlpha;\r\n          }\r\n\r\n          Game.ctx.lineWidth = GameConstants.TILESIZE * 0.25;\r\n          Game.ctx.beginPath();\r\n          Game.ctx.moveTo(\r\n            (this.startX + 0.5) * GameConstants.TILESIZE,\r\n            (this.startY + 0.5) * GameConstants.TILESIZE,\r\n          );\r\n          Game.ctx.lineCap = \"round\";\r\n          Game.ctx.lineTo(\r\n            (this.x - this.drawX + 0.5) * GameConstants.TILESIZE,\r\n            (this.y - this.drawY + 0.5) * GameConstants.TILESIZE,\r\n          );\r\n          Game.ctx.stroke();\r\n          Game.ctx.globalAlpha = 1;\r\n        }\r\n        if (this.trailAlpha <= 0) this.trailAlpha = 1;\r\n      }\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (!this.cloned) {\r\n        if (this.state === ChargeEnemyState.IDLE) {\r\n          this.drawSleepingZs(delta);\r\n        } else if (this.state === ChargeEnemyState.ALERTED) {\r\n          this.drawExclamation(delta);\r\n        }\r\n      }\r\n    }\r\n    this.drawChargeBeam(delta);\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawChargeBeam = (delta: number) => {\r\n    if (this.dying) return;\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n    );\r\n    this.drawX += -0.1 * this.drawX;\r\n    this.drawY += -0.1 * this.drawY;\r\n\r\n    if (this.state === ChargeEnemyState.ALERTED) {\r\n      this.trailFrame += 0.2 * delta;\r\n\r\n      if (Math.floor(this.trailFrame) % 2 === 0) {\r\n        let startX = (this.x + 0.5) * GameConstants.TILESIZE;\r\n        let startY = (this.y - 0.25) * GameConstants.TILESIZE;\r\n        if (this.direction === Direction.LEFT) startX -= 3;\r\n        else if (this.direction === Direction.RIGHT) startX += 3;\r\n        else if (this.direction === Direction.DOWN) startY += 2;\r\n        else if (this.direction === Direction.UP) startY -= 8;\r\n\r\n        // Calculate end coordinates based on direction and max distance\r\n        let endX = this.visualTargetX;\r\n        let endY = this.visualTargetY;\r\n\r\n        // Cap the beam length to maxChargeDistance\r\n        const dx =\r\n          this.direction === Direction.LEFT\r\n            ? -1\r\n            : this.direction === Direction.RIGHT\r\n              ? 1\r\n              : 0;\r\n        const dy =\r\n          this.direction === Direction.UP\r\n            ? -1\r\n            : this.direction === Direction.DOWN\r\n              ? 1\r\n              : 0;\r\n\r\n        const distance = Math.max(\r\n          Math.abs(this.visualTargetX - this.x),\r\n          Math.abs(this.visualTargetY - this.y),\r\n        );\r\n\r\n        if (distance > this.maxChargeDistance) {\r\n          endX = this.x + dx * this.maxChargeDistance;\r\n          endY = this.y + dy * this.maxChargeDistance;\r\n          if (dy === 1) endY += 0.65;\r\n          if (dx > 0) endX += 0.5;\r\n          else if (dx < 0) endX -= 0.5;\r\n        }\r\n\r\n        Game.ctx.strokeStyle = \"white\";\r\n        Game.ctx.lineWidth = GameConstants.TILESIZE * 0.1;\r\n        Game.ctx.beginPath();\r\n        Game.ctx.moveTo(Math.round(startX), Math.round(startY));\r\n        Game.ctx.lineCap = \"round\";\r\n        Game.ctx.lineTo(\r\n          Math.round((endX + 0.5) * GameConstants.TILESIZE),\r\n          Math.round((endY - 0.25) * GameConstants.TILESIZE),\r\n        );\r\n        Game.ctx.stroke();\r\n        Game.ctx.globalAlpha = 1;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\n\r\nexport class CrabEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 8;\r\n    this.tileY = 4;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"crab\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    this.baseDamage = 0.5;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 0.25;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Crab \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0 // 0.8\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.target,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[0].pos.x &&\r\n                  this.game.players[i].y === moves[0].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n\r\n              if (!hitPlayer) {\r\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            /*\r\n            if (\r\n              (this.target.x === this.targetPlayer.x &&\r\n                this.target.y === this.targetPlayer.y) ||\r\n              Utils.distance(\r\n                this.targetPlayer.x,\r\n                this.targetPlayer.y,\r\n                this.x,\r\n                this.y,\r\n              ) <= 2\r\n            )\r\n              */ {\r\n              this.makeHitWarnings();\r\n            }\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  /*\r\n                  if (\r\n                    (this.target.x === this.targetPlayer.x &&\r\n                      this.target.y === this.targetPlayer.y) ||\r\n                    Utils.distance(\r\n                      this.targetPlayer.x,\r\n                      this.targetPlayer.y,\r\n                      this.x,\r\n                      this.y,\r\n                    ) <= 2\r\n                  ) */ {\r\n                    this.makeHitWarnings();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 9;\r\n        this.tileY = 4;\r\n      } else {\r\n        this.tileX = 8;\r\n        this.tileY = 4;\r\n      }\r\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY + this.direction,\r\n        1,\r\n        1,\r\n        this.x - this.drawX + rumbleX,\r\n        this.y - this.drawYOffset - this.drawY + rumbleY,\r\n        1 * this.crushX,\r\n        1 * this.crushY,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Entity } from \"../entity\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { DownLadder } from \"../../tile/downLadder\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\n\r\nexport class CrusherEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n  animateY: number = 0;\r\n  softAnimateY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 3;\r\n    this.tileY = 4;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"crusher\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 2.5;\r\n    this.shouldDrawAbovePlayer = true;\r\n    this.collidable = false;\r\n    this.destroyable = false;\r\n\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Crab \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  applyShield = () => {};\r\n  applyBuff = () => {};\r\n\r\n  // Allow crushers to move onto a player's tile\r\n  readonly tryMove = (x: number, y: number, collide: boolean = true) => {\r\n    const entityCollide = (entity: Entity): boolean => {\r\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) return false;\r\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) return false;\r\n      return true;\r\n    };\r\n\r\n    // Keep collisions with other entities unless disabled\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && entityCollide(e) && collide) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // DIFFERENCE from base: do NOT block moving into players\r\n    // (crushers can overlap players to crush them)\r\n\r\n    const tiles = [] as any[];\r\n    for (let xx = 0; xx < this.w; xx++) {\r\n      for (let yy = 0; yy < this.h; yy++) {\r\n        const targetTile = this.room.roomArray[x + xx][y + yy];\r\n        if (\r\n          targetTile &&\r\n          !targetTile.isSolid() &&\r\n          !(targetTile instanceof Door) &&\r\n          !(targetTile instanceof DownLadder)\r\n        ) {\r\n          tiles.push(targetTile);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    for (let tile of tiles) {\r\n      tile.onCollideEnemy(this);\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  tryCrush = () => {\r\n    let flag = false;\r\n    for (const i in this.game.players) {\r\n      const p = this.game.players[i];\r\n      if (\r\n        this.game.rooms[p.levelID] === this.room &&\r\n        p.x === this.x &&\r\n        p.y === this.y\r\n      ) {\r\n        p.hurt(this.hit(), this.name, 400);\r\n        this.drawX += 0.5 * (this.x - p.x);\r\n        this.drawY += 0.5 * (this.y - p.y);\r\n        if (p === this.game.players[this.game.localPlayerID]) {\r\n          //this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n          //this.animateCrush();\r\n        }\r\n        flag = true;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0 // 0.8\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.target,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n              this.setDrawXY(oldX, oldY);\r\n              if (this.x > oldX) this.direction = Direction.RIGHT;\r\n              else if (this.x < oldX) this.direction = Direction.LEFT;\r\n              else if (this.y > oldY) this.direction = Direction.DOWN;\r\n              else if (this.y < oldY) this.direction = Direction.UP;\r\n\r\n              // If we ended up overlapping a player after moving, crush immediately\r\n              const crushed = this.tryCrush();\r\n              this.animateCrush();\r\n              //if (crushed) this.ticks++;\r\n\r\n              this.animateCrush();\r\n            } else {\r\n              const crushed = this.tryCrush();\r\n              //if (crushed) this.animateCrush();\r\n              //if (crushed) this.ticks++;\r\n\r\n              this.animateCrush();\r\n              //if (crushed) this.makeHitWarnings();\r\n            }\r\n\r\n            this.makeHitWarning();\r\n\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            /*\r\n            if (\r\n              (this.target.x === this.targetPlayer.x &&\r\n                this.target.y === this.targetPlayer.y) ||\r\n              Utils.distance(\r\n                this.targetPlayer.x,\r\n                this.targetPlayer.y,\r\n                this.x,\r\n                this.y,\r\n              ) <= 2\r\n            )\r\n              */ {\r\n              // Only attack when stationary: if overlapping the player now, crush them\r\n\r\n              this.makeHitWarnings();\r\n              this.makeHitWarning();\r\n            }\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  /*\r\n                  if (\r\n                    (this.target.x === this.targetPlayer.x &&\r\n                      this.target.y === this.targetPlayer.y) ||\r\n                    Utils.distance(\r\n                      this.targetPlayer.x,\r\n                      this.targetPlayer.y,\r\n                      this.x,\r\n                      this.y,\r\n                    ) <= 2\r\n                  ) */ {\r\n                    //this.makeHitWarnings();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.makeHitWarning();\r\n    }\r\n  };\r\n\r\n  makeHitWarning = () => {\r\n    this.room.hitwarnings.push(\r\n      new HitWarning(\r\n        this.room.game,\r\n        this.x,\r\n        this.y,\r\n        this.x - 1,\r\n        this.y - 1,\r\n        false,\r\n        false,\r\n      ),\r\n    );\r\n  };\r\n\r\n  animateCrush = () => {\r\n    this.animateY = -1;\r\n    setTimeout(() => {\r\n      this.animateY = 3;\r\n      Sound.playCrush();\r\n      setTimeout(() => {\r\n        this.game.shakeScreen(2 * this.x, 2 * this.y, true);\r\n      }, 100);\r\n      setTimeout(() => {\r\n        this.animateY = 0;\r\n      }, 500);\r\n    }, 150);\r\n  };\r\n\r\n  updateAnimateY = (delta: number) => {\r\n    const diff = this.animateY - this.softAnimateY;\r\n    if (diff > 0.001) {\r\n      this.softAnimateY = this.softAnimateY + diff * 0.2 * delta;\r\n    } else if (diff < -0.001) {\r\n      this.softAnimateY = this.softAnimateY + diff * 0.2 * delta;\r\n    } else {\r\n      this.softAnimateY = this.animateY;\r\n    }\r\n    if (this.softAnimateY > 1.25) {\r\n      this.softAnimateY = 1.25;\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawableY = this.y + 0.1;\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.updateAnimateY(delta);\r\n\r\n      let rumbleX = this.rumble(this.rumbling, this.frame, this.direction).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        2,\r\n        2,\r\n        this.x - this.drawX + rumbleX - 0.5,\r\n        this.y - this.drawYOffset - this.drawY + rumbleY + this.softAnimateY,\r\n        2 * this.crushX,\r\n        2 * this.crushY,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { globalEventBus } from \"../../event/eventBus\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { Door } from \"../../tile/door\";\r\nimport { StunAnimation } from \"../../projectile/stunAnimation\";\r\nimport { DownLadder } from \"../../tile/downLadder\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { GameplaySettings } from \"../../game/gameplaySettings\";\r\n\r\nenum EnemyState {\r\n  SLEEP,\r\n  AGGRO,\r\n  ATTACK,\r\n  DEAD,\r\n  IDLE,\r\n}\r\n\r\ninterface EnemyStatus {\r\n  poison: {\r\n    active: boolean;\r\n    hitCount: number;\r\n    startTick: number;\r\n    effectTick: number;\r\n  };\r\n  bleed: {\r\n    active: boolean;\r\n    hitCount: number;\r\n    startTick: number;\r\n    effectTick: number;\r\n  };\r\n}\r\n\r\nexport abstract class Enemy extends Entity {\r\n  seenPlayer: boolean;\r\n  heardPlayer: boolean;\r\n  frame: number;\r\n  ticks: number;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  status: EnemyStatus;\r\n  protected jumpY: number;\r\n  protected jumpHeight: number;\r\n  static difficulty: number = 1;\r\n  private effectStartTick: number;\r\n  private startTick: number;\r\n  private poisonHitCount: number;\r\n  private bleedHitCount: number;\r\n  protected alertRange: number;\r\n  justHurt: boolean = false;\r\n  orthogonalAttack: boolean;\r\n  diagonalAttack: boolean;\r\n  buffed: boolean;\r\n  buffedBefore: boolean;\r\n  baseDamage: number;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.drawYOffset = 1.5;\r\n    this.name = \"\";\r\n    this.seenPlayer = false;\r\n    this.heardPlayer = false;\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.aggro = false;\r\n    this.jumpY = 0;\r\n    this.jumpHeight = 0.3;\r\n    //this.dir = Direction.South;\r\n    this.name = \"generic enemy\";\r\n    this.dropChance = 10;\r\n    this.status = {\r\n      poison: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\r\n      bleed: { active: false, hitCount: 0, startTick: 0, effectTick: 0 },\r\n    };\r\n    this.alertRange = GameplaySettings.BASE_ENEMY_ALERT_RANGE;\r\n    this.effectStartTick = 1;\r\n    this.startTick = 1;\r\n    this.isEnemy = true;\r\n    this.poisonHitCount = 0;\r\n    this.bleedHitCount = 0;\r\n    this.drawMoveSpeed = 0.85; //lower is faster\r\n    this.justHurt = false;\r\n    this.orthogonalAttack = false;\r\n    this.diagonalAttack = false;\r\n    this.baseDamage = 1;\r\n    //this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"gem\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  alertNearbyEnemies = () => {\r\n    if (!this.seenPlayer) return;\r\n    const p = this.nearestPlayer();\r\n    if (p === false) return;\r\n    const enemies = this.room.entities.filter((e) => e instanceof Enemy);\r\n    for (const e of enemies) {\r\n      if (e === this) continue;\r\n      const distance = Utils.distance(this.x, this.y, e.x, e.y);\r\n      if (\r\n        distance <= GameplaySettings.BASE_ENEMY_ALERT_NEARBY_RANGE &&\r\n        e instanceof Enemy &&\r\n        !e.seenPlayer\r\n      ) {\r\n        e.handleSeenPlayer(p[1], false);\r\n        e.alertTicks = 2;\r\n      }\r\n    }\r\n  };\r\n\r\n  get damage() {\r\n    return this.buffed ? 2 * this.baseDamage : this.baseDamage;\r\n  }\r\n\r\n  handleEnemyCase = (playerHitBy?: Player) => {\r\n    if (!playerHitBy) return;\r\n    if (playerHitBy) {\r\n      this.aggro = true;\r\n      this.targetPlayer = playerHitBy;\r\n      //this.facePlayer(playerHitBy);\r\n      if (playerHitBy === this.game.players[this.game.localPlayerID])\r\n        this.alertTicks = 2; // this is really 1 tick, it will be decremented immediately in tick()\r\n    }\r\n  };\r\n\r\n  poison = () => {\r\n    if (!this.status.poison.active) {\r\n      this.status.poison = {\r\n        active: true,\r\n        hitCount: 0,\r\n        startTick: this.ticks,\r\n        effectTick: this.ticks % 3,\r\n      };\r\n      this.shadeColor = \"#00FF00\";\r\n    }\r\n  };\r\n\r\n  bleed = () => {\r\n    if (!this.status.bleed.active) {\r\n      this.status.bleed = {\r\n        active: true,\r\n        hitCount: 0,\r\n        startTick: this.ticks,\r\n        effectTick: this.ticks % 1,\r\n      };\r\n    }\r\n  };\r\n\r\n  tickPoison = () => {\r\n    if (this.status.poison.active && this.targetPlayer) {\r\n      if (\r\n        this.ticks % 3 === this.status.poison.effectTick &&\r\n        this.ticks !== this.status.poison.startTick &&\r\n        this.health >= 1\r\n      ) {\r\n        this.hurt(this.targetPlayer, 1, \"poison\");\r\n        this.shadeColor = \"#00FF00\";\r\n        //this.status.poison.hitCount++;\r\n\r\n        /*\r\n        if (this.status.poison.hitCount >= 2) {\r\n          this.status.poison = {\r\n            active: false,\r\n            hitCount: 0,\r\n            startTick: 0,\r\n            effectTick: 0,\r\n          };\r\n        }\r\n        */\r\n      }\r\n    }\r\n  };\r\n\r\n  tickBleed = () => {\r\n    if (this.status.bleed.active && this.targetPlayer) {\r\n      if (\r\n        this.ticks % 1 === this.status.bleed.effectTick &&\r\n        this.ticks !== this.status.bleed.startTick\r\n      ) {\r\n        this.hurt(this.targetPlayer, 0.5, \"blood\");\r\n        //this.targetPlayer.heal(0.5);\r\n        this.shadeColor = \"#FF0000\";\r\n        this.status.bleed.hitCount++;\r\n\r\n        if (this.status.bleed.hitCount >= 4) {\r\n          this.status.bleed = {\r\n            active: false,\r\n            hitCount: 0,\r\n            startTick: 0,\r\n            effectTick: 0,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    this.tickPoison();\r\n    this.tickBleed();\r\n    this.behavior();\r\n    if (this.x !== this.lastX || this.y !== this.lastY) {\r\n      this.emitEntityData();\r\n    }\r\n    if (this.shielded) this.shield.updateLightSourcePos();\r\n    this.alertNearbyEnemies();\r\n  };\r\n\r\n  lookForPlayer = (face: boolean = true) => {\r\n    if (this.seenPlayer) return;\r\n\r\n    const p = this.nearestPlayer();\r\n    if (p === false) return;\r\n\r\n    const [distance, player] = p;\r\n    if (distance > this.alertRange) return;\r\n\r\n    this.handleSeenPlayer(player, face);\r\n\r\n    this.makeHitWarnings();\r\n  };\r\n\r\n  handleSeenPlayer = (player: Player, face: boolean = true) => {\r\n    this.targetPlayer = player;\r\n    if (face) this.facePlayer(player);\r\n    this.seenPlayer = true;\r\n\r\n    globalEventBus.emit(\"EnemySeenPlayer\", {\r\n      enemyType: this.constructor.name,\r\n      enemyName: this.name,\r\n    });\r\n\r\n    if (player === this.game.players[this.game.localPlayerID]) {\r\n      this.alertTicks = 1;\r\n    }\r\n  };\r\n\r\n  getDisablePositions = (): Array<astar.Position> => {\r\n    let disablePositions = Array<astar.Position>();\r\n    for (const e of this.room.entities) {\r\n      if (e !== this) {\r\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n      }\r\n    }\r\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n        if (\r\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n        ) {\r\n          // Don't walk on active spike traps\r\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n        }\r\n      }\r\n    }\r\n    return disablePositions;\r\n  };\r\n\r\n  findPath = () => {\r\n    let disablePositions = Array<astar.Position>();\r\n    for (const e of this.room.entities) {\r\n      if (e !== this) {\r\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n      }\r\n    }\r\n    for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n      for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n        if (\r\n          this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n          (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n        ) {\r\n          // Don't walk on active spike traps\r\n          disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n        }\r\n      }\r\n    }\r\n    // Create a grid of the room\r\n    let grid = [];\r\n    for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n      grid[x] = [];\r\n      for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n        if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n          grid[x][y] = this.room.roomArray[x][y];\r\n        else grid[x][y] = false;\r\n      }\r\n    }\r\n\r\n    // Find a path to the target player\r\n    let moves = astar.AStar.search(\r\n      grid,\r\n      this,\r\n      this.targetPlayer,\r\n      disablePositions,\r\n      false,\r\n      false,\r\n      true,\r\n      this.direction,\r\n    );\r\n  };\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // Don't walk on active spike traps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  // Attack the player if they are in the way\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(moveX, moveY);\r\n                if (this.x > moveX) this.direction = Direction.RIGHT;\r\n                else if (this.x < moveX) this.direction = Direction.LEFT;\r\n                else if (this.y > moveY) this.direction = Direction.DOWN;\r\n                else if (this.y < moveY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onHurt = (\r\n    damage: number = 1,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    if (this.health > 0) {\r\n      if (type === \"none\") {\r\n        this.justHurt = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  stun = () => {\r\n    if (this.stunned) return;\r\n    this.stunned = true;\r\n    this.unconscious = true;\r\n    new StunAnimation(this, this.x, this.y);\r\n  };\r\n\r\n  retreat = (oldX: number, oldY: number) => {\r\n    // Calculate direction vector from player to enemy\r\n    let dx = this.x - this.targetPlayer.x;\r\n    let dy = this.y - this.targetPlayer.y;\r\n\r\n    // Normalize the direction vector\r\n    let length = Math.sqrt(dx * dx + dy * dy);\r\n    if (length > 0) {\r\n      dx = Math.round(dx / length);\r\n      dy = Math.round(dy / length);\r\n    }\r\n\r\n    let retreatX = this.x;\r\n    let retreatY = this.y;\r\n    let foundValidRetreat = false;\r\n\r\n    // Determine retreat behavior based on attack properties\r\n    if (this.orthogonalAttack && this.diagonalAttack) {\r\n      // Both enabled: use current behavior (try orthogonal first, then diagonal)\r\n      retreatX = this.x + dx;\r\n      retreatY = this.y + dy;\r\n\r\n      if (this.room.isTileEmpty(retreatX, retreatY)) {\r\n        foundValidRetreat = true;\r\n      } else {\r\n        // Try diagonal positions\r\n        if (dy === 0) dy = Random.rand() < 0.5 ? 1 : -1;\r\n        if (dx === 0) dx = Random.rand() < 0.5 ? 1 : -1;\r\n        let diagonal1X = this.x - dy;\r\n        let diagonal1Y = this.y + dx;\r\n        let diagonal2X = this.x + dy;\r\n        let diagonal2Y = this.y - dx;\r\n\r\n        // Randomly choose which diagonal to check first\r\n        let checkFirst = Random.rand() < 0.5;\r\n        let firstX = checkFirst ? diagonal1X : diagonal2X;\r\n        let firstY = checkFirst ? diagonal1Y : diagonal2Y;\r\n        let secondX = checkFirst ? diagonal2X : diagonal1X;\r\n        let secondY = checkFirst ? diagonal2Y : diagonal1Y;\r\n\r\n        // Check first diagonal\r\n        if (this.room.isTileEmpty(firstX, firstY)) {\r\n          retreatX = firstX;\r\n          retreatY = firstY;\r\n          foundValidRetreat = true;\r\n        }\r\n        // Check second diagonal if first is blocked\r\n        else if (this.room.isTileEmpty(secondX, secondY)) {\r\n          retreatX = secondX;\r\n          retreatY = secondY;\r\n          foundValidRetreat = true;\r\n        }\r\n      }\r\n    } else if (this.orthogonalAttack) {\r\n      // Only orthogonal retreat allowed\r\n      retreatX = this.x + dx;\r\n      retreatY = this.y + dy;\r\n\r\n      if (this.room.isTileEmpty(retreatX, retreatY)) {\r\n        foundValidRetreat = true;\r\n      }\r\n    } else if (this.diagonalAttack) {\r\n      if (dy === 0) dy = Random.rand() < 0.5 ? 1 : -1;\r\n      if (dx === 0) dx = Random.rand() < 0.5 ? 1 : -1;\r\n      // Only diagonal retreat allowed\r\n      let diagonal1X = this.x - dy;\r\n      let diagonal1Y = this.y + dx;\r\n      let diagonal2X = this.x + dy;\r\n      let diagonal2Y = this.y - dx;\r\n\r\n      // Randomly choose which diagonal to check first\r\n      let checkFirst = Random.rand() < 0.5;\r\n      let firstX = checkFirst ? diagonal1X : diagonal2X;\r\n      let firstY = checkFirst ? diagonal1Y : diagonal2Y;\r\n      let secondX = checkFirst ? diagonal2X : diagonal1X;\r\n      let secondY = checkFirst ? diagonal2Y : diagonal1Y;\r\n\r\n      // Check first diagonal\r\n      if (this.room.isTileEmpty(firstX, firstY)) {\r\n        retreatX = firstX;\r\n        retreatY = firstY;\r\n        foundValidRetreat = true;\r\n      }\r\n      // Check second diagonal if first is blocked\r\n      else if (this.room.isTileEmpty(secondX, secondY)) {\r\n        retreatX = secondX;\r\n        retreatY = secondY;\r\n        foundValidRetreat = true;\r\n      }\r\n    }\r\n    // If neither orthogonalAttack nor diagonalAttack is true, don't retreat\r\n\r\n    // Only move if we found a valid retreat position\r\n    if (foundValidRetreat) {\r\n      this.tryMove(retreatX, retreatY);\r\n      this.setDrawXY(oldX, oldY);\r\n    }\r\n\r\n    this.justHurt = false;\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    this.jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (this.jumpY < 0.01) this.jumpY = 0;\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    //putting this here bc i'm lazy\r\n    this.updateHurtFrame(delta);\r\n    this.animateDying(delta);\r\n\r\n    if (!this.doneMoving()) {\r\n      this.drawX *= this.drawMoveSpeed ** delta;\r\n      this.drawY *= this.drawMoveSpeed ** delta;\r\n\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n      this.jump(delta);\r\n    }\r\n\r\n    this.updateShadeColor(delta);\r\n  };\r\n\r\n  setDrawXY = (x: number, y: number) => {\r\n    this.drawX += this.x - x;\r\n    this.drawY += this.y - y;\r\n  };\r\n\r\n  get lastPlayerPos() {\r\n    return {\r\n      x: this.targetPlayer.lastX,\r\n      y: this.targetPlayer.lastY,\r\n    };\r\n  }\r\n\r\n  teleport = () => {\r\n    let newTile = this.findFarTile();\r\n    if (newTile) {\r\n      this.drawX = newTile.x - this.x;\r\n      this.drawY = newTile.y - this.y;\r\n\r\n      this.x = newTile.x;\r\n      this.y = newTile.y;\r\n      this.lightSource?.updatePosition(this.x + 0.5, this.y + 0.5);\r\n      this.room.updateLighting();\r\n    }\r\n  };\r\n\r\n  findFarTile = () => {\r\n    // Get all empty tiles\r\n    const emptyTiles = this.room.getEmptyTiles();\r\n    const player = this.getPlayer();\r\n    // Early return if no player or no empty tiles\r\n    if (!player || emptyTiles.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Calculate distances from player\r\n    const tilesWithDistances = emptyTiles.map((tile) => {\r\n      const distance = Utils.distance(tile.x, tile.y, player.x, player.y);\r\n      return { tile, distance };\r\n    });\r\n\r\n    // Sort by distance (farthest first)\r\n    tilesWithDistances.sort((a, b) => b.distance - a.distance);\r\n\r\n    // Take only the 50% farthest tiles\r\n    const farTiles = tilesWithDistances.slice(\r\n      0,\r\n      Math.floor(tilesWithDistances.length / 2),\r\n    );\r\n\r\n    // If no far tiles available, return null\r\n    if (farTiles.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Choose a random tile from the far tiles\r\n    const randomIndex = Math.floor(Random.rand() * farTiles.length);\r\n    return farTiles[randomIndex].tile;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.dying) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n  };\r\n\r\n  get type() {\r\n    return EntityType.ENEMY;\r\n  }\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { WizardEnemy } from \"./wizardEnemy\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport class EnergyWizardEnemy extends WizardEnemy {\r\n  static difficulty: number = 3;\r\n  static tileX: number = 6;\r\n  static tileY: number = 0;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"wizard bomber\";\r\n    this.projectileColor = [0, 50, 150];\r\n\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.state === WizardState.attack) this.tileX = 7;\r\n      else this.tileX = 6;\r\n\r\n      if (this.hasShadow && this.state !== WizardState.teleport)\r\n        this.drawShadow(delta);\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          Math.floor(this.frame) + 6,\r\n          2,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.3,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        this.frame += 0.4 * delta;\r\n        if (this.frame > 12) this.frame = -1;\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(delta);\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(delta);\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Direction } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\n\r\nimport { Enemy } from \"./enemy\";\r\n\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { BeamEffect } from \"../../projectile/beamEffect\";\r\nimport { Player } from \"../../player/player\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Lighting } from \"../../lighting/lighting\";\r\nimport { Entity } from \"../entity\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { GameplaySettings } from \"../../game/gameplaySettings\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\n\r\nexport class ExalterEnemy extends Enemy {\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  buffedEnemies: Enemy[];\r\n  range: number;\r\n  static tileX: number = 59;\r\n  static tileY: number = 8;\r\n  lastHealth: number;\r\n  buffedBefore: boolean;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 4;\r\n    this.lastHealth = this.health;\r\n    this.maxHealth = 4;\r\n    this.tileX = 59;\r\n    this.tileY = 8;\r\n    this.seenPlayer = true;\r\n    this.name = \"exalter\";\r\n    this.range = 6;\r\n    this.aggro = false;\r\n    this.frame = 0;\r\n    this.hasShadow = true;\r\n    this.buffedBefore = false;\r\n    this.buffedEnemies = [];\r\n    this.shadeColor = \"#000000\";\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [1, 20, 30],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.room.updateLighting();\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#00FFFF\"; //cyan;\r\n    this.bloomAlpha = 0.5;\r\n    this.softBloomAlpha = 0;\r\n    this.dropChance = 1;\r\n    this.getDrop([\"exalter\"], false);\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n  bleed = () => {};\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.unbuffEnemies();\r\n    this.removeLightSource(this.lightSource);\r\n    this.lightSource = null;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    let enemiesToBuff = this.enemyBuffCandidates();\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n\r\n      //if (this.ticks % 2 === 0) {\r\n      this.buffEnemies(enemiesToBuff);\r\n      this.updateBuffedEnemies();\r\n      if (this.buffedEnemies.length > 0) {\r\n        // Choose the farthest buffed enemy\r\n        let targetEnemy = this.buffedEnemies.reduce((farthest, current) => {\r\n          const dF = Utils.distance(this.x, this.y, farthest.x, farthest.y);\r\n          const dC = Utils.distance(this.x, this.y, current.x, current.y);\r\n          return dC > dF ? current : farthest;\r\n        });\r\n\r\n        // Build disable positions (other entities and nearby active spike traps)\r\n        let disablePositions = Array<astar.Position>();\r\n        for (const e of this.room.entities) {\r\n          if (e !== this) {\r\n            disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n          }\r\n        }\r\n        for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n          for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n            if (\r\n              this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n              (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n            ) {\r\n              disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Build grid\r\n        let grid = [] as any[];\r\n        for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n          grid[x] = [];\r\n          for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n            if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n              grid[x][y] = this.room.roomArray[x][y];\r\n            else grid[x][y] = false;\r\n          }\r\n        }\r\n\r\n        // A* toward the target enemy\r\n        const moves = astar.AStar.search(\r\n          grid,\r\n          this,\r\n          targetEnemy,\r\n          disablePositions,\r\n          false,\r\n          false,\r\n          true,\r\n          this.direction,\r\n        );\r\n\r\n        if (moves.length > 0) {\r\n          const oldX = this.x;\r\n          const oldY = this.y;\r\n          const moveX = moves[0].pos.x;\r\n          const moveY = moves[0].pos.y;\r\n\r\n          // Move one step toward target enemy\r\n          this.tryMove(moveX, moveY);\r\n          this.setDrawXY(oldX, oldY);\r\n\r\n          if (this.x > oldX) this.direction = Direction.RIGHT;\r\n          else if (this.x < oldX) this.direction = Direction.LEFT;\r\n          else if (this.y > oldY) this.direction = Direction.DOWN;\r\n          else if (this.y < oldY) this.direction = Direction.UP;\r\n        }\r\n      } else {\r\n        this.runAway();\r\n      }\r\n      //}\r\n    }\r\n\r\n    if (this.buffedEnemies.length > 0) {\r\n      this.shadeColor = \"#306082\";\r\n    } else {\r\n      this.shadeColor = \"#000000\";\r\n    }\r\n    if (this.lightSource) {\r\n      this.lightSource.updatePosition(this.x + 0.5, this.y + 0.5);\r\n    }\r\n  };\r\n\r\n  onHurt = (damage: number = 1) => {\r\n    if (\r\n      this.health < this.lastHealth &&\r\n      this.health % 2 === 0 &&\r\n      this.health > 0\r\n    ) {\r\n      this.teleport();\r\n    }\r\n    this.lastHealth = this.health;\r\n  };\r\n\r\n  updateBuffedEnemies = () => {\r\n    this.buffedEnemies.forEach((enemy) => {\r\n      if (enemy.dead) {\r\n        this.buffedEnemies = this.buffedEnemies.filter((e) => e !== enemy);\r\n      }\r\n    });\r\n  };\r\n\r\n  buffEnemies = (enemiesToBuff: Entity[]) => {\r\n    if (enemiesToBuff.length > 0) {\r\n      enemiesToBuff.forEach((enemy) => {\r\n        const distance = Utils.distance(this.x, this.y, enemy.x, enemy.y);\r\n        if (Random.rand() * 10 > distance) {\r\n          this.applyBuffTo(enemy as Enemy);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  enemyBuffCandidates = () => {\r\n    const uncappedCandidates = this.room.entities.filter(\r\n      (entity) =>\r\n        entity instanceof Enemy &&\r\n        Utils.distance(this.x, this.y, entity.x, entity.y) <= this.range &&\r\n        !entity.buffed &&\r\n        !entity.dead &&\r\n        entity !== this &&\r\n        !entity.buffedBefore,\r\n    );\r\n    return uncappedCandidates.slice(0, GameplaySettings.MAX_EXALTER_BUFFS);\r\n  };\r\n\r\n  unbuffEnemies = () => {\r\n    if (this.buffedEnemies.length > 0) {\r\n      for (let enemy of this.buffedEnemies) {\r\n        if (!enemy.cloned) {\r\n          enemy.removeBuff();\r\n        }\r\n      }\r\n      this.buffedEnemies = [];\r\n    }\r\n  };\r\n\r\n  applyBuffTo = (enemy: Enemy) => {\r\n    //this.shadeColor = \"#2E0854\";\r\n    if (!enemy.destroyable) return;\r\n    this.shadeMultiplier = 1.5;\r\n    enemy.applyBuff();\r\n    this.buffedEnemies.push(enemy);\r\n    if (enemy.buffed) {\r\n      for (let i = 0; i < 3; i++) {\r\n        let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\r\n        beam.compositeOperation = \"source-over\";\r\n        beam.color = \"#00FFFF\";\r\n        beam.turbulence = 1;\r\n        beam.gravity = 0;\r\n        beam.iterations = 3;\r\n        beam.segments = 10;\r\n        beam.angleChange = 3;\r\n        beam.springDamping = 0.4;\r\n        beam.drawableY = enemy.drawableY;\r\n        beam.type = \"buff\";\r\n        this.room.projectiles.push(beam);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateBeam = (delta: number) => {\r\n    for (let beam of this.room.projectiles) {\r\n      if (beam instanceof BeamEffect) {\r\n        if (\r\n          !this.buffedEnemies.includes(beam.parent as Enemy) ||\r\n          beam.type !== \"buff\"\r\n        )\r\n          continue;\r\n        beam.setTarget(\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          beam.parent.x - beam.parent.drawX,\r\n          beam.parent.y - beam.parent.drawY,\r\n        );\r\n        beam.drawableY = beam.parent.drawableY;\r\n\r\n        switch (Math.floor(this.frame)) {\r\n          case 0:\r\n            beam.color = \"#00FFFF\";\r\n            break;\r\n          case 1:\r\n            beam.color = \"#00a1dc\"; //darker cyan;\r\n            break;\r\n          case 2:\r\n            beam.color = \"#008ea7\"; //darker cyan;\r\n            break;\r\n          case 3:\r\n            beam.color = \"#00a1dc\"; //darker cyan;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    this.drawableY = this.y;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.updateBeam(delta);\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Item } from \"../../item/item\";\r\nimport { WizardEnemy } from \"./wizardEnemy\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport class FireWizardEnemy extends WizardEnemy {\r\n  static difficulty: number = 3;\r\n  static tileX: number = 35;\r\n  static tileY: number = 8;\r\n  readonly ATTACK_RADIUS = 5;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 35;\r\n    this.tileY = 8;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"fire wizard\";\r\n    this.projectileColor = [200, 20, 0];\r\n    if (drop) this.drop = drop;\r\n    this.jumpHeight = 0.5;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  withinAttackingRangeOfPlayer = (): boolean => {\r\n    let withinRange = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        (this.x - this.game.players[i].x) ** 2 +\r\n          (this.y - this.game.players[i].y) ** 2 <=\r\n        this.ATTACK_RADIUS ** 2\r\n      ) {\r\n        withinRange = true;\r\n      }\r\n    }\r\n    return withinRange;\r\n  };\r\n\r\n  shuffle = (a) => {\r\n    let j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Random.rand() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n        switch (this.state) {\r\n          case WizardState.attack:\r\n            const nearestPlayerInfo = this.nearestPlayer();\r\n            if (nearestPlayerInfo !== false) {\r\n              const [distance, targetPlayer] = nearestPlayerInfo;\r\n              const attackLength = 20;\r\n\r\n              const offsets = this.calculateProjectileOffsets(\r\n                targetPlayer.x,\r\n                targetPlayer.y,\r\n                10,\r\n              );\r\n\r\n              this.attemptProjectilePlacement(\r\n                [\r\n                  { x: -1, y: 0 },\r\n                  { x: 1, y: 0 },\r\n                  { x: 0, y: -1 },\r\n                  { x: 0, y: 1 },\r\n                ],\r\n                WizardFireball,\r\n                false,\r\n              );\r\n            }\r\n            this.state = WizardState.justAttacked;\r\n            break;\r\n          case WizardState.justAttacked:\r\n            this.attemptProjectilePlacement(\r\n              [\r\n                { x: -1, y: -1 },\r\n                { x: 1, y: 1 },\r\n                { x: 1, y: -1 },\r\n                { x: -1, y: 1 },\r\n              ],\r\n              WizardFireball,\r\n              false,\r\n            );\r\n            this.state = WizardState.idle;\r\n            break;\r\n          case WizardState.teleport:\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let min = 100000;\r\n            let bestPos;\r\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\r\n            emptyTiles = emptyTiles.filter(\r\n              (tile) =>\r\n                !this.room.projectiles.some(\r\n                  (projectile) =>\r\n                    projectile.x === tile.x && projectile.y === tile.y,\r\n                ),\r\n            );\r\n\r\n            if (\r\n              emptyTiles.length === 0 ||\r\n              Object.keys(this.game.players).length === 0\r\n            ) {\r\n              this.state = WizardState.idle;\r\n              break;\r\n            }\r\n\r\n            let optimalDist = Game.randTable(\r\n              [2, 2, 3, 3, 3, 3, 3],\r\n              Random.rand,\r\n            );\r\n            let player_ids = [];\r\n            for (const i in this.game.players) player_ids.push(i);\r\n            let target_player_id = Game.randTable(player_ids, Random.rand);\r\n\r\n            if (!this.game.players[target_player_id]) {\r\n              this.state = WizardState.idle;\r\n              break;\r\n            }\r\n\r\n            for (let t of emptyTiles) {\r\n              let newPos = t;\r\n              let dist =\r\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\r\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\r\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\r\n                min = dist;\r\n                bestPos = newPos;\r\n              }\r\n            }\r\n\r\n            if (!bestPos) {\r\n              bestPos = emptyTiles[0];\r\n            }\r\n\r\n            this.tryMove(bestPos.x, bestPos.y);\r\n            this.drawX = this.x - oldX;\r\n            this.drawY = this.y - oldY;\r\n            this.frame = 0;\r\n            this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\r\n            if (this.withinAttackingRangeOfPlayer()) {\r\n              this.state = WizardState.attack;\r\n            } else {\r\n              this.state = WizardState.idle;\r\n            }\r\n            break;\r\n          case WizardState.idle:\r\n            this.state = WizardState.teleport;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.state === WizardState.attack) this.tileX = 36;\r\n      else this.tileX = 35;\r\n\r\n      if (this.hasShadow && this.state !== WizardState.idle)\r\n        this.drawShadow(delta);\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          Math.floor(this.frame) + 5,\r\n          18,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.3,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        this.frame += 0.4 * delta;\r\n        if (this.frame > 12) this.frame = -1;\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.cloned) {\r\n        if (!this.seenPlayer) {\r\n          this.drawSleepingZs(delta);\r\n        }\r\n        if (this.alertTicks > 0) {\r\n          this.drawExclamation(delta);\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\n\r\nexport class FrogEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  frameLength: number;\r\n  startFrame: number;\r\n  animationSpeed: number;\r\n  tickCount: number;\r\n  rumbling: boolean;\r\n  jumping: boolean;\r\n  jumpDistance: number;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 12;\r\n  static tileY: number = 16;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 12;\r\n    this.tileY = 16;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.frameLength = 3;\r\n    this.startFrame = 0;\r\n    this.animationSpeed = 0.1;\r\n    this.tickCount = 0;\r\n    this.jumping = false;\r\n    this.jumpDistance = 1;\r\n    this.drop = drop ? drop : new Coin(this.room, this.x, this.y);\r\n    this.name = \"frog\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 1;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 30;\r\n    this.baseDamage = 0.5;\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\", \"poison\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.tileX = 1;\r\n    this.frameLength = 3;\r\n    this.animationSpeed = 0.1;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.tileX = 12;\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        this.tileX = 1;\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            let targetPosition = {\r\n              x: this.targetPlayer.x,\r\n              y: this.targetPlayer.y,\r\n            };\r\n            let dx = this.targetPlayer.x - this.x;\r\n            let dy = this.targetPlayer.y - this.y;\r\n            if (\r\n              (dx === 0 && dy <= 1) ||\r\n              (dx <= 1 && dy === 0) ||\r\n              (dx === 0 && dy >= -1) ||\r\n              (dx >= -1 && dy === 0)\r\n            ) {\r\n              let jumpOverX = this.targetPlayer.x + dx;\r\n              let jumpOverY = this.targetPlayer.y + dy;\r\n              if (\r\n                this.room.roomArray[jumpOverX] &&\r\n                this.room.roomArray[jumpOverX][jumpOverY]\r\n              ) {\r\n                if (!this.room.roomArray[jumpOverX][jumpOverY].isSolid()) {\r\n                  targetPosition = {\r\n                    x: jumpOverX,\r\n                    y: jumpOverY,\r\n                  };\r\n                }\r\n              }\r\n            }\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              targetPosition,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              false,\r\n              undefined,\r\n              undefined,\r\n              false,\r\n              this.lastPlayerPos,\r\n            );\r\n            //console.log(moves); //DON'T REMOVE THIS\r\n\r\n            if (moves[1]) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[1].pos.x &&\r\n                  this.game.players[i].y === moves[1].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX += 1.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY += 1.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(5 * this.drawX, 5 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                if (moves.length > 1) {\r\n                  let moveX = moves[1].pos.x;\r\n                  let moveY = moves[1].pos.y;\r\n                  this.tryMove(moveX, moveY);\r\n                  this.setDrawXY(this.lastX, this.lastY);\r\n\r\n                  if (this.jumping) {\r\n                    this.frame = 8;\r\n                    this.animationSpeed = 1;\r\n                  }\r\n                  if (this.x > moveX) this.direction = Direction.RIGHT;\r\n                  else if (this.x < moveX) this.direction = Direction.LEFT;\r\n                  else if (this.y > moveY) this.direction = Direction.DOWN;\r\n                  else if (this.y < moveY) this.direction = Direction.UP;\r\n                }\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.makeHitWarnings();\r\n            this.rumbling = true;\r\n            this.tileX = 3;\r\n            this.frame = 0;\r\n            this.frameLength = 2;\r\n            this.animationSpeed = 0.2;\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.makeHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\r\n    if (this.jumping) {\r\n      let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n      if (j > 1) {\r\n        this.jumpDistance = 2;\r\n      }\r\n      this.jumpY =\r\n        Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\r\n      if (this.jumpY < 0.01 && this.jumpY > -0.01) {\r\n        this.jumpY = 0;\r\n        this.jumpDistance = 1;\r\n      }\r\n      if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.25;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-2, 0],\r\n            [2, 0],\r\n            [0, -2],\r\n            [0, 2],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = this.x + x;\r\n      const targetY = this.y + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          this.x,\r\n          this.y,\r\n          true,\r\n          false,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += this.animationSpeed * delta;\r\n      if (this.frame >= this.frameLength) {\r\n        this.frame = 0;\r\n      }\r\n      let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n      let rumbleY = this.rumble(this.rumbling, this.frame).y;\r\n      if (this.drawX !== 0 || this.drawY !== 0) {\r\n        this.jumping = true;\r\n      } else {\r\n        this.jumping = false;\r\n      }\r\n      if (this.jumping) {\r\n        this.frameLength = 10;\r\n        this.animationSpeed = 0.4;\r\n      } else {\r\n        this.frameLength = 3;\r\n        this.animationSpeed = 0.1;\r\n      }\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX +\r\n          (this.tileX !== 12 && !this.rumbling ? Math.floor(this.frame) : 0),\r\n        this.tileY /*+ this.direction * 2,*/,\r\n        1,\r\n        2,\r\n        this.x + rumbleX - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { GlowBugs } from \"../../item/light/glowBugs\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\nimport { Entity } from \"../entity\";\r\n\r\nexport class GlowBugEnemy extends Entity {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 8;\r\n    this.tileY = 0;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"glowbug\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 1;\r\n    this.hasShadow = true;\r\n    this.hasHitParticles = false;\r\n    this.hasDamageNumbers = false;\r\n    this.hasBloom = true;\r\n    this.bloomAlpha = 1;\r\n    this.bloomColor = \"#054B4B\";\r\n\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      6,\r\n      [5, 75, 75],\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.drops = [new GlowBugs(this.room, this.x, this.y)]; //this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Crab \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 0.5;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.seenPlayer = true;\r\n    this.aggro = true;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.wander();\r\n\r\n      this.lightSource.x = this.x + 0.5;\r\n      this.lightSource.y = this.y + 0.5;\r\n      this.room.updateLighting();\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n\r\n      this.frame += 0.15 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      this.tileX = 8 + this.frame;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        Math.floor(this.tileX),\r\n        this.tileY,\r\n        1,\r\n        1,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        1,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class KnightEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  targetPlayer: Player;\r\n  aggro: boolean;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 9;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.defaultMaxHealth = 2;\r\n    this.tileX = 9;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    this.name = \"burrow knight\";\r\n    this.orthogonalAttack = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 29;\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\r\n      \"weapon\",\r\n      \"warhammer\",\r\n      \"equipment\",\r\n      \"consumable\",\r\n      \"tool\",\r\n      \"coin\",\r\n    ]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) {\r\n        const result = this.nearestPlayer();\r\n        if (result !== false) {\r\n          let [distance, p] = result;\r\n          if (distance < 4) {\r\n            this.rumbling = true;\r\n            this.seenPlayer = true;\r\n            this.targetPlayer = p;\r\n            this.facePlayer(p);\r\n            if (p === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.targetPlayer,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[0].pos.x &&\r\n                  this.game.players[i].y === moves[0].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.rumbling = true;\r\n                  this.makeHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    let rumbleX = this.rumble(this.rumbling, this.frame).x;\r\n    let rumbleY = this.rumble(this.rumbling, this.frame, this.direction).y;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 9;\r\n        this.tileY = 8;\r\n      } else {\r\n        this.tileX = 4;\r\n        this.tileY = 0;\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 4 ? 0 : Math.floor(this.frame)),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX + rumbleX,\r\n        this.y -\r\n          this.drawYOffset -\r\n          this.drawY +\r\n          (this.tileX === 4 ? 0.1875 : 0),\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class MummyEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  dir: Direction;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 17;\r\n  static tileY: number = 16;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 16;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.dir = Direction.DOWN;\r\n    this.name = \"mummy\";\r\n    this.forwardOnlyAttack = true;\r\n    this.jumpHeight = 0.35;\r\n    this.alertRange = 2; // very small alert range\r\n    this.baseDamage = 0.5;\r\n\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  // Immunities\r\n  poison = () => {\r\n    // immune to poison\r\n    return;\r\n  };\r\n\r\n  bleed = () => {\r\n    // immune to bleed\r\n    return;\r\n  };\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // Don't walk on active spike traps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  // Attack the player if they are in the way\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n    Game.drawMob(\r\n      this.tileX + Math.floor(this.frame),\r\n      this.tileY + this.direction * 2,\r\n      1,\r\n      2,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n      1,\r\n      2,\r\n      this.softShadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Direction } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\n\r\nimport { Enemy } from \"./enemy\";\r\n\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { BeamEffect } from \"../../projectile/beamEffect\";\r\nimport { Player } from \"../../player/player\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Lighting } from \"../../lighting/lighting\";\r\nimport { Entity } from \"../entity\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { GameplaySettings } from \"../../game/gameplaySettings\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\n\r\nexport class OccultistEnemy extends Enemy {\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  shieldedEnemies: Enemy[];\r\n  range: number;\r\n  static tileX: number = 55;\r\n  static tileY: number = 8;\r\n  lastHealth: number;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 4;\r\n    this.lastHealth = this.health;\r\n    this.maxHealth = 4;\r\n    this.tileX = 55;\r\n    this.tileY = 8;\r\n    this.seenPlayer = true;\r\n    this.name = \"occultist\";\r\n    this.range = 6;\r\n    this.aggro = false;\r\n    this.frame = 0;\r\n    this.hasShadow = true;\r\n    this.shieldedBefore = false;\r\n    this.shieldedEnemies = [];\r\n    this.shadeColor = \"#000000\";\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [20, 0, 40],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.room.updateLighting();\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#2E0854\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.dropChance = 1;\r\n    this.getDrop([\"occultist\"], false);\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  bleed = () => {};\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.unshieldEnemies();\r\n    this.removeLightSource(this.lightSource);\r\n    this.lightSource = null;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    let enemiesToShield = this.enemyShieldCandidates();\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n\r\n      //if (this.ticks % 2 === 0) {\r\n      this.shieldEnemies(enemiesToShield);\r\n      this.updateShieldedEnemies();\r\n      if (this.shieldedEnemies.length > 0) {\r\n        // Choose the farthest shielded enemy\r\n        let targetEnemy = this.shieldedEnemies.reduce((farthest, current) => {\r\n          const dF = Utils.distance(this.x, this.y, farthest.x, farthest.y);\r\n          const dC = Utils.distance(this.x, this.y, current.x, current.y);\r\n          return dC > dF ? current : farthest;\r\n        });\r\n\r\n        // Build disable positions (other entities and nearby active spike traps)\r\n        let disablePositions = Array<astar.Position>();\r\n        for (const e of this.room.entities) {\r\n          if (e !== this) {\r\n            disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n          }\r\n        }\r\n        for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n          for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n            if (\r\n              this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n              (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n            ) {\r\n              disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Build grid\r\n        let grid = [] as any[];\r\n        for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n          grid[x] = [];\r\n          for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n            if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n              grid[x][y] = this.room.roomArray[x][y];\r\n            else grid[x][y] = false;\r\n          }\r\n        }\r\n\r\n        // A* toward the target enemy\r\n        const moves = astar.AStar.search(\r\n          grid,\r\n          this,\r\n          targetEnemy,\r\n          disablePositions,\r\n          false,\r\n          false,\r\n          true,\r\n          this.direction,\r\n        );\r\n\r\n        if (moves.length > 0) {\r\n          const oldX = this.x;\r\n          const oldY = this.y;\r\n          const moveX = moves[0].pos.x;\r\n          const moveY = moves[0].pos.y;\r\n\r\n          // Move one step toward target enemy\r\n          this.tryMove(moveX, moveY);\r\n          this.setDrawXY(oldX, oldY);\r\n\r\n          if (this.x > oldX) this.direction = Direction.RIGHT;\r\n          else if (this.x < oldX) this.direction = Direction.LEFT;\r\n          else if (this.y > oldY) this.direction = Direction.DOWN;\r\n          else if (this.y < oldY) this.direction = Direction.UP;\r\n        }\r\n      } else {\r\n        this.runAway();\r\n      }\r\n      //}\r\n    }\r\n\r\n    if (this.shieldedEnemies.length > 0) {\r\n      this.shadeColor = \"#2E0854\";\r\n    } else {\r\n      this.shadeColor = \"#000000\";\r\n    }\r\n    if (this.lightSource) {\r\n      this.lightSource.updatePosition(this.x + 0.5, this.y + 0.5);\r\n    }\r\n  };\r\n\r\n  onHurt = (damage: number = 1) => {\r\n    if (\r\n      this.health < this.lastHealth &&\r\n      this.health % 2 === 0 &&\r\n      this.health > 0\r\n    ) {\r\n      this.teleport();\r\n    }\r\n    this.lastHealth = this.health;\r\n  };\r\n\r\n  updateShieldedEnemies = () => {\r\n    this.shieldedEnemies.forEach((enemy) => {\r\n      if (enemy.dead) {\r\n        this.shieldedEnemies = this.shieldedEnemies.filter((e) => e !== enemy);\r\n      }\r\n    });\r\n  };\r\n\r\n  shieldEnemies = (enemiesToShield: Entity[]) => {\r\n    if (enemiesToShield.length > 0) {\r\n      enemiesToShield.forEach((enemy) => {\r\n        const distance = Utils.distance(this.x, this.y, enemy.x, enemy.y);\r\n        if (Random.rand() * 10 > distance) {\r\n          this.applyShieldTo(enemy as Enemy);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  enemyShieldCandidates = () => {\r\n    const uncappedCandidates = this.room.entities.filter(\r\n      (entity) =>\r\n        entity instanceof Enemy &&\r\n        Utils.distance(this.x, this.y, entity.x, entity.y) <= this.range &&\r\n        !entity.shielded &&\r\n        !entity.dead &&\r\n        entity !== this &&\r\n        !entity.shieldedBefore,\r\n    );\r\n    return uncappedCandidates.slice(0, GameplaySettings.MAX_OCCULTIST_SHIELDS);\r\n  };\r\n\r\n  unshieldEnemies = () => {\r\n    if (this.shieldedEnemies.length > 0) {\r\n      for (let enemy of this.shieldedEnemies) {\r\n        if (!enemy.cloned) {\r\n          enemy.removeShield();\r\n        }\r\n      }\r\n      this.shieldedEnemies = [];\r\n    }\r\n  };\r\n\r\n  applyShieldTo = (enemy: Enemy) => {\r\n    //this.shadeColor = \"#2E0854\";\r\n    this.shadeMultiplier = 1.5;\r\n    enemy.applyShield();\r\n    this.shieldedEnemies.push(enemy);\r\n    if (enemy.shielded && enemy.shield) {\r\n      let beam = new BeamEffect(enemy.x, enemy.y, this.x, this.y, enemy);\r\n      beam.compositeOperation = \"source-over\";\r\n      beam.color = \"#2E0854\";\r\n      beam.turbulence = 0.4;\r\n      beam.gravity = 0.1;\r\n      beam.iterations = 1;\r\n      beam.segments = 100;\r\n      beam.angleChange = 0.001;\r\n      beam.springDamping = 0.01;\r\n      beam.drawableY = enemy.drawableY;\r\n      beam.type = \"shield\";\r\n      this.room.projectiles.push(beam);\r\n    }\r\n  };\r\n\r\n  updateBeam = (delta: number) => {\r\n    for (let beam of this.room.projectiles) {\r\n      if (beam instanceof BeamEffect) {\r\n        if (\r\n          !this.shieldedEnemies.includes(beam.parent as Enemy) ||\r\n          beam.type !== \"shield\"\r\n        )\r\n          continue;\r\n        beam.setTarget(\r\n          this.x - this.drawX,\r\n          this.y - this.drawY,\r\n          beam.parent.x - beam.parent.drawX,\r\n          beam.parent.y - beam.parent.drawY,\r\n        );\r\n        beam.drawableY = beam.parent.drawableY;\r\n\r\n        switch (Math.floor(this.frame)) {\r\n          case 0:\r\n            beam.color = \"#2e0854\";\r\n            break;\r\n          case 1:\r\n            beam.color = \"#331988\";\r\n            break;\r\n          case 2:\r\n            beam.color = \"#4729db\";\r\n            break;\r\n          case 3:\r\n            beam.color = \"#331988\";\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    this.drawableY = this.y;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.updateBeam(delta);\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { StunAnimation } from \"../../projectile/stunAnimation\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { globalEventBus } from \"../../event/eventBus\";\r\n\r\nexport class PawnEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 23 + 28;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 23;\r\n    this.tileY = 12;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"pawn\";\r\n    // Pawns show only diagonal attack telegraphs\r\n    this.orthogonalAttack = false;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 0.5;\r\n    if (drop) this.drop = drop;\r\n    this.armored = true;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  lookForPlayer = (face: boolean = true) => {\r\n    if (this.seenPlayer) return;\r\n\r\n    const p = this.nearestPlayer();\r\n    if (p === false) return;\r\n\r\n    const [distance, player] = p;\r\n    if (distance > this.alertRange) return;\r\n\r\n    this.targetPlayer = player;\r\n    if (face) this.facePlayer(player);\r\n    this.seenPlayer = true;\r\n\r\n    globalEventBus.emit(\"EnemySeenPlayer\", {\r\n      enemyType: this.constructor.name,\r\n      enemyName: this.name,\r\n    });\r\n\r\n    if (player === this.game.players[this.game.localPlayerID]) {\r\n      this.alertTicks = 1;\r\n    }\r\n\r\n    this.conditionalHitWarnings();\r\n  };\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        let p = this.nearestPlayer();\r\n        if (p !== false) {\r\n          let [distance, player] = p;\r\n          if (distance <= 4) {\r\n            this.targetPlayer = player;\r\n            this.facePlayer(player);\r\n            this.seenPlayer = true;\r\n            if (player === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.conditionalHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          // Diagonal-only attack: if player is diagonally adjacent, attack without moving\r\n          const dxToPlayer = this.targetPlayer.x - this.x;\r\n          const dyToPlayer = this.targetPlayer.y - this.y;\r\n\r\n          if (\r\n            Math.abs(dxToPlayer) === 1 &&\r\n            Math.abs(dyToPlayer) === 1 &&\r\n            !this.unconscious\r\n          ) {\r\n            this.targetPlayer.hurt(this.hit(), this.name);\r\n            this.drawX = 0.5 * (this.x - this.targetPlayer.x);\r\n            this.drawY = 0.5 * (this.y - this.targetPlayer.y);\r\n            if (\r\n              this.targetPlayer === this.game.players[this.game.localPlayerID]\r\n            )\r\n              this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n\r\n            this.conditionalHitWarnings();\r\n            return;\r\n          }\r\n\r\n          if (this.justHurt) {\r\n            // do nothing special when just hurt\r\n          } else if (!this.unconscious) {\r\n            // Build grid like rookEnemy and use A* with orthogonal-only movement\r\n            let grid = [] as any[];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n\r\n            const moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.targetPlayer,\r\n              disablePositions,\r\n              false, // diagonals\r\n              false, // diagonalsOnly\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              false, // diagonalsOmni\r\n              this.lastPlayerPos,\r\n            );\r\n\r\n            if (moves.length > 0) {\r\n              const moveX = moves[0].pos.x;\r\n              const moveY = moves[0].pos.y;\r\n\r\n              // Pawns cannot attack forward: if the next step is the player's tile, skip it\r\n              const stepIsPlayer =\r\n                this.targetPlayer.x === moveX && this.targetPlayer.y === moveY;\r\n\r\n              // Avoid stepping onto active spike traps even if A* allowed it\r\n              const targetTile = this.room.roomArray[moveX]?.[moveY];\r\n              const isActiveSpike =\r\n                targetTile instanceof SpikeTrap && (targetTile as SpikeTrap).on;\r\n\r\n              if (!stepIsPlayer && !isActiveSpike) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n              }\r\n            }\r\n\r\n            this.conditionalHitWarnings();\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.conditionalHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  conditionalHitWarnings = () => {\r\n    const distance = Utils.distance(\r\n      this.x,\r\n      this.y,\r\n      this.targetPlayer.x,\r\n      this.targetPlayer.y,\r\n    );\r\n    if (distance >= 2 || !this.targetPlayer)\r\n      this.makeHitWarnings(undefined, undefined, true, \"orthogonal\");\r\n    if (distance < 3 && this.targetPlayer) this.makeHitWarnings();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    //let offsetTileY = this.health <= 1 || this.cloned === true ? 2 : 0;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class QueenEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 23;\r\n  static tileY: number = 8;\r\n  justHurt: boolean = false;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.defaultMaxHealth = 2;\r\n    this.tileX = 23;\r\n    this.tileY = 10;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"queen\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = true;\r\n    this.jumpHeight = 1;\r\n    this.imageParticleX = 6;\r\n    this.imageParticleY = 28; //includes crown particle\r\n    if (drop) this.drop = drop;\r\n    this.armored = true;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (this.health <= 1) this.imageParticleY = 29; //no crown particle\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        this.justHurt = false;\r\n\r\n        let p = this.nearestPlayer();\r\n        if (p !== false) {\r\n          let [distance, player] = p;\r\n          if (distance <= 4) {\r\n            this.targetPlayer = player;\r\n            this.facePlayer(player);\r\n            this.seenPlayer = true;\r\n            if (player === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            true, //diagonals\r\n            false, //diagonalsOnly\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            false, //diagonalsOmni\r\n          );\r\n          if (this.justHurt) {\r\n            this.retreat(oldX, oldY);\r\n          } else if (moves.length > 0) {\r\n            disablePositions.push({ x: oldX + 1, y: oldY } as astar.Position);\r\n            disablePositions.push({ x: oldX - 1, y: oldY } as astar.Position);\r\n            disablePositions.push({ x: oldX, y: oldY + 1 } as astar.Position);\r\n            disablePositions.push({ x: oldX, y: oldY - 1 } as astar.Position);\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n            if (!hitPlayer) {\r\n              //if ()\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n\r\n    let jumpY = Math.abs(Math.sin(j * Math.PI)) * this.jumpHeight;\r\n    if (jumpY < 0.01) jumpY = 0;\r\n    if (jumpY > this.jumpHeight) jumpY = this.jumpHeight;\r\n    this.jumpY = jumpY;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let offsetTileY = this.health <= 1 ? 0 : -2;\r\n    if (this.cloned) offsetTileY = 0;\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY + offsetTileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount() * (1 + this.jumpY / 3),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { StunAnimation } from \"../../projectile/stunAnimation\";\r\n\r\nexport class RookEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 4;\r\n  static tileX: number = 23 + 28;\r\n  static tileY: number = 8;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 23 + 28;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"rook\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = false;\r\n    this.jumpHeight = 0.5;\r\n    if (drop) this.drop = drop;\r\n    this.armored = true;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        let p = this.nearestPlayer();\r\n        if (p !== false) {\r\n          let [distance, player] = p;\r\n          if (distance <= 4) {\r\n            this.targetPlayer = player;\r\n            this.facePlayer(player);\r\n            this.seenPlayer = true;\r\n            if (player === this.game.players[this.game.localPlayerID])\r\n              this.alertTicks = 1;\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // don't walk on active spiketraps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false, //diagonals\r\n            false, //diagonalsOnly\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            false, //diagonalsOmni\r\n            this.lastPlayerPos,\r\n          );\r\n          if (this.justHurt) {\r\n            //this.retreat(oldX, oldY);\r\n            //this.stun();\r\n            this.justHurt = false;\r\n          } else if (moves.length > 0 && !this.unconscious) {\r\n            let moveX = moves[0].pos.x;\r\n\r\n            let moveY = moves[0].pos.y;\r\n\r\n            let hitPlayer = false;\r\n            for (const i in this.game.players) {\r\n              if (\r\n                this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                this.game.players[i].x === moveX &&\r\n                this.game.players[i].y === moveY\r\n              ) {\r\n                this.game.players[i].hurt(this.hit(), this.name);\r\n                this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                if (\r\n                  this.game.players[i] ===\r\n                  this.game.players[this.game.localPlayerID]\r\n                )\r\n                  this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n              }\r\n            }\r\n\r\n            if (!hitPlayer) {\r\n              this.tryMove(moveX, moveY);\r\n              this.setDrawXY(oldX, oldY);\r\n            }\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    let offsetTileY = this.health <= 1 || this.cloned === true ? 2 : 0;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + Math.floor(this.frame),\r\n        this.tileY, // + offsetTileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class SkullEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  ticksSinceFirstHit: number;\r\n  flashingFrame: number;\r\n  targetPlayer: Player;\r\n  readonly REGEN_TICKS = 5;\r\n  drop: Item;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 5;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.defaultMaxHealth = 2;\r\n    this.tileX = 5;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.ticksSinceFirstHit = 0;\r\n    this.flashingFrame = 0;\r\n    this.deathParticleColor = \"#ffffff\";\r\n    this.name = \"skeleton\";\r\n    this.forwardOnlyAttack = true;\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    this.ticksSinceFirstHit = 0;\r\n    if (this.health == 2) this.unconscious = false;\r\n    this.health -= damage;\r\n    this.maxHealth -= shieldHealth;\r\n    this.startHurting();\r\n\r\n    this.healthBar.hurt();\r\n    this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n\r\n    if (this.health == 1) {\r\n      this.unconscious = true;\r\n\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 3, 28);\r\n    } else {\r\n      this.healthBar.hurt();\r\n    }\r\n    if (this.health <= 0) {\r\n      ImageParticle.spawnCluster(this.room, this.x + 0.5, this.y + 0.5, 0, 24);\r\n      this.kill();\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.health <= 1) {\r\n        this.unconscious = true;\r\n        this.ticksSinceFirstHit++;\r\n        if (this.ticksSinceFirstHit >= this.REGEN_TICKS) {\r\n          this.healthBar.hurt();\r\n          this.health = 2;\r\n          this.unconscious = false;\r\n        }\r\n        this.ticks++;\r\n\r\n        return;\r\n      }\r\n\r\n      this.ticks++;\r\n      if (!this.seenPlayer) {\r\n        this.lookForPlayer();\r\n      } else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n            undefined,\r\n            undefined,\r\n          );\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            this.facePlayer(player);\r\n\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.tileX = 5;\r\n      this.tileY = 8;\r\n\r\n      if (this.health <= 1 || this.dying) {\r\n        this.tileX = 3;\r\n        this.tileY = 0;\r\n        if (this.ticksSinceFirstHit >= 3) {\r\n          this.flashingFrame += 0.1 * delta;\r\n          if (Math.floor(this.flashingFrame) % 2 === 0) {\r\n            this.tileX = 2;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX + (this.tileX === 5 ? Math.floor(this.frame) : 0),\r\n        this.tileY + this.direction * 2,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { SkullEnemy } from \"./skullEnemy\";\r\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\r\nimport { KnightEnemy } from \"./knightEnemy\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { EnergyWizardEnemy } from \"./energyWizard\";\r\nimport { ZombieEnemy } from \"./zombieEnemy\";\r\nimport { BishopEnemy } from \"./bishopEnemy\";\r\nimport { CrabEnemy } from \"./crabEnemy\";\r\nimport { ChargeEnemy } from \"./chargeEnemy\";\r\nimport { BigKnightEnemy } from \"./bigKnightEnemy\";\r\nimport { BigSkullEnemy } from \"./bigSkullEnemy\";\r\nimport { FrogEnemy } from \"./frogEnemy\";\r\nimport { FireWizardEnemy } from \"./fireWizard\";\r\nimport { QueenEnemy } from \"./queenEnemy\";\r\nimport { ArmoredzombieEnemy } from \"./armoredzombieEnemy\";\r\nimport { RookEnemy } from \"./rookEnemy\";\r\nimport { RoomType } from \"../../room/room\";\r\nimport { ArmoredSkullEnemy } from \"./armoredSkullEnemy\";\r\nimport { GameplaySettings } from \"../../game/gameplaySettings\";\r\nimport { SpiderEnemy } from \"./spiderEnemy\";\r\nimport { MummyEnemy } from \"./mummyEnemy\";\r\nimport { PawnEnemy } from \"./pawnEnemy\";\r\nimport { BeetleEnemy } from \"./beetleEnemy\";\r\nimport { BigFrogEnemy } from \"./bigFrogEnemy\";\r\nimport { Wall } from \"../../tile/wall\";\r\n\r\nexport class Spawner extends Enemy {\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  enemySpawnType: number;\r\n  enemyTable: number[];\r\n  spawnFrequency: number;\r\n  spawnOffset: number;\r\n  static tileX: number = 6;\r\n  static tileY: number = 4;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    enemyTable: number[] = [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20,\r\n    ],\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 4;\r\n    this.maxHealth = 4;\r\n    this.defaultMaxHealth = 4;\r\n    this.tileX = 6;\r\n    this.tileY = 4;\r\n    this.seenPlayer = true;\r\n    this.spawnFrequency = 4;\r\n    this.room.currentSpawnerCount++;\r\n    this.enemyTable = enemyTable; //enemyTable.filter((t) => t !== 7);\r\n    const randSpawnType = Game.randTable(this.enemyTable, Random.rand);\r\n    this.enemySpawnType = randSpawnType;\r\n    this.spawnOffset = 0;\r\n    this.dropChance = 1;\r\n    this.chainPushable = false;\r\n    this.getDrop([\"reaper\"], false);\r\n    /*\r\n    switch (this.enemySpawnType) {\r\n      case 0:\r\n        this.getDrop([\"consumable\"], true);\r\n        break;\r\n      case 1:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 2:\r\n        this.getDrop([\"consumable\"], true);\r\n        break;\r\n      case 3:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 4:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 5:\r\n        this.getDrop([\"consumable\"], true);\r\n        break;\r\n      case 6:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 7:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 8:\r\n        this.getDrop([\"gem\"], true);\r\n        break;\r\n      case 9:\r\n        this.getDrop([\"equipment\", \"weapon\", \"tool\"], true);\r\n        break;\r\n      case 10:\r\n        this.getDrop([\"weapon\"], true);\r\n        break;\r\n      case 11:\r\n        this.getDrop([\"weapon\"], true);\r\n        break;\r\n      case 12:\r\n        this.getDrop([\"weapon\"], true);\r\n        break;\r\n      case 13:\r\n        this.getDrop([\"weapon\"], true);\r\n        break;\r\n      case 14:\r\n        this.getDrop([\"weapon\"], true);\r\n        break;\r\n      case 16:\r\n        this.getDrop([\"weapon\", \"equipment\"], true);\r\n        break;\r\n    }*/\r\n    this.name = \"reaper\";\r\n    console.log(\"spawner created spawner type\", this.enemySpawnType);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  setSpawnFrequency = (maxHealth: number = 1) => {\r\n    if (GameplaySettings.UNLIMITED_SPAWNERS) {\r\n      this.spawnFrequency = 4;\r\n    } else {\r\n      this.spawnFrequency = Math.min(12, 4 * this.room.currentSpawnerCount);\r\n    }\r\n    if (GameplaySettings.THROTTLE_SPAWNERS) {\r\n      this.spawnFrequency = 3 + maxHealth;\r\n    }\r\n\r\n    const spawners = this.room.entities.filter((e) => e instanceof Spawner);\r\n    this.spawnOffset = (spawners.indexOf(this) + 1) * 4;\r\n  };\r\n\r\n  bleed = () => {};\r\n  poison = () => {};\r\n\r\n  behavior = () => {\r\n    let shouldSpawn = true;\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      this.tileX = 6;\r\n      if ((this.ticks + this.spawnOffset) % this.spawnFrequency === 0) {\r\n        let positions = this.room\r\n          .getEmptyTiles()\r\n          .filter(\r\n            (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\r\n          );\r\n        if (this.enemySpawnType === 8) {\r\n          const offLimits = [\r\n            { x: this.x, y: this.y },\r\n            { x: this.x + 1, y: this.y + 1 },\r\n            { x: this.x - 1, y: this.y - 1 },\r\n            { x: this.x + 1, y: this.y - 1 },\r\n            { x: this.x - 1, y: this.y + 1 },\r\n          ];\r\n          positions = positions.filter(\r\n            (t) => !offLimits.some((o) => o.x === t.x && o.y === t.y),\r\n          );\r\n        }\r\n        if (positions.length > 0) {\r\n          this.tileX = 7;\r\n\r\n          const position = Game.randTable(positions, Random.rand);\r\n\r\n          let spawned: Enemy;\r\n\r\n          const spawnPos = this.mutatePositionForBigEnemy(\r\n            position.x,\r\n            position.y,\r\n          );\r\n\r\n          switch (this.enemySpawnType) {\r\n            case 0: // legacy Pawn mapping\r\n              spawned = new PawnEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 1:\r\n              spawned = new CrabEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 2:\r\n              spawned = new FrogEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 3:\r\n              spawned = new ZombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 4:\r\n              spawned = new SkullEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 5:\r\n              spawned = new EnergyWizardEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 6:\r\n              spawned = new ChargeEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 7:\r\n              spawned = new RookEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 8:\r\n              spawned = new BishopEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 9:\r\n              spawned = new ArmoredzombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 10:\r\n              spawned = new BigSkullEnemy(\r\n                this.room,\r\n                this.game,\r\n                spawnPos.x,\r\n                spawnPos.y,\r\n              );\r\n              this.clearSpaceForBigEnemy(spawnPos.x, spawnPos.y);\r\n              break;\r\n            case 11:\r\n              spawned = new QueenEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 12:\r\n              spawned = new KnightEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 13:\r\n              spawned = new BigKnightEnemy(\r\n                this.room,\r\n                this.game,\r\n                spawnPos.x,\r\n                spawnPos.y,\r\n              );\r\n              this.clearSpaceForBigEnemy(spawnPos.x, spawnPos.y);\r\n              break;\r\n            case 14:\r\n              spawned = new FireWizardEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 15:\r\n              spawned = new ArmoredSkullEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 16:\r\n              spawned = new MummyEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 17:\r\n              spawned = new SpiderEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 18:\r\n              spawned = new PawnEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            case 19:\r\n              spawned = new BigFrogEnemy(\r\n                this.room,\r\n                this.game,\r\n                spawnPos.x,\r\n                spawnPos.y,\r\n              );\r\n              this.clearSpaceForBigEnemy(spawnPos.x, spawnPos.y);\r\n              break;\r\n            case 20:\r\n              spawned = new BeetleEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n            default:\r\n              console.warn(\r\n                \"spawner tried to spawn unknown enemy type\",\r\n                this.enemySpawnType,\r\n              );\r\n              spawned = new ZombieEnemy(\r\n                this.room,\r\n                this.game,\r\n                position.x,\r\n                position.y,\r\n              );\r\n              break;\r\n          }\r\n\r\n          this.setSpawnFrequency(spawned?.maxHealth ?? 1);\r\n\r\n          if (shouldSpawn) {\r\n            this.room.projectiles.push(\r\n              new EnemySpawnAnimation(\r\n                this.room,\r\n                spawned,\r\n                position.x,\r\n                position.y,\r\n              ),\r\n            );\r\n            this.room.hitwarnings.push(\r\n              new HitWarning(this.game, position.x, position.y, this.x, this.y),\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      this.ticks++;\r\n    }\r\n  };\r\n\r\n  mutatePositionForBigEnemy = (x: number, y: number) => {\r\n    // Evaluate the full 2x2 footprint: (x,y), (x+1,y), (x,y+1), (x+1,y+1)\r\n    const tiles = [\r\n      { x, y },\r\n      { x: x + 1, y },\r\n      { x, y: y + 1 },\r\n      { x: x + 1, y: y + 1 },\r\n    ];\r\n\r\n    // If none of the 2x2 tiles are walls, keep position\r\n    const hasAnyWall = tiles.some(\r\n      (p) => this.room.roomArray[p.x]?.[p.y] instanceof Wall,\r\n    );\r\n    if (!hasAnyWall) return { x, y };\r\n\r\n    // Determine inward nudge based on any wall on room edges or outer walls\r\n    let nx = x;\r\n    let ny = y;\r\n    const leftEdge = this.room.roomX;\r\n    const rightEdge = this.room.roomX + this.room.width - 1;\r\n    const topEdge = this.room.roomY;\r\n    const bottomEdge = this.room.roomY + this.room.height - 1;\r\n\r\n    const anyLeftWall = tiles.some((p) => {\r\n      const t = this.room.roomArray[p.x]?.[p.y];\r\n      if (p.x === leftEdge) return true;\r\n      if (t instanceof Wall) return t.wallInfo?.()?.isLeftWall === true;\r\n      return false;\r\n    });\r\n    const anyRightWall = tiles.some((p) => {\r\n      const t = this.room.roomArray[p.x]?.[p.y];\r\n      if (p.x === rightEdge) return true;\r\n      if (t instanceof Wall) return t.wallInfo?.()?.isRightWall === true;\r\n      return false;\r\n    });\r\n    const anyTopWall = tiles.some((p) => {\r\n      const t = this.room.roomArray[p.x]?.[p.y];\r\n      if (p.y === topEdge) return true;\r\n      if (t instanceof Wall) return t.wallInfo?.()?.isTopWall === true;\r\n      return false;\r\n    });\r\n    const anyBottomWall = tiles.some((p) => {\r\n      const t = this.room.roomArray[p.x]?.[p.y];\r\n      if (p.y === bottomEdge) return true;\r\n      if (t instanceof Wall) return t.wallInfo?.()?.isBottomWall === true;\r\n      return false;\r\n    });\r\n\r\n    if (anyLeftWall) nx = Math.min(x + 1, rightEdge - 1);\r\n    if (anyRightWall) nx = Math.max(x - 1, leftEdge + 1);\r\n    if (anyTopWall) ny = Math.min(y + 1, bottomEdge - 1);\r\n    if (anyBottomWall) ny = Math.max(y - 1, topEdge + 1);\r\n\r\n    // Validate 2x2 stays inside room interior bounds\r\n    nx = Math.max(nx, leftEdge);\r\n    nx = Math.min(nx, rightEdge - 1);\r\n    ny = Math.max(ny, topEdge);\r\n    ny = Math.min(ny, bottomEdge - 1);\r\n\r\n    // Prefer non-solid top-left if available\r\n    const topLeft = this.room.roomArray[nx]?.[ny];\r\n    if (!topLeft || (topLeft as any).isSolid?.() !== true) {\r\n      return { x: nx, y: ny };\r\n    }\r\n    return { x, y };\r\n  };\r\n\r\n  clearSpaceForBigEnemy = (x: number, y: number) => {\r\n    for (let xx = 0; xx < 2; xx++) {\r\n      for (let yy = 0; yy < 2; yy++) {\r\n        let tile = this.room.roomArray[x + xx][y + yy];\r\n        if (tile instanceof Wall) {\r\n          const wallInfo = tile.wallInfo();\r\n          if (wallInfo?.isInnerWall) {\r\n            this.room.roomArray[x + xx][y + yy] = new Floor(\r\n              this.room,\r\n              x + xx,\r\n              y + yy,\r\n            ); // remove any walls\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.room.currentSpawnerCount--;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      Game.drawMob(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.softShadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    if (!this.dying) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\n\r\nenum SpiderState {\r\n  VISIBLE,\r\n  HIDING,\r\n  HIDDEN,\r\n}\r\n\r\nexport class SpiderEnemy extends Enemy {\r\n  ticks: number;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 8;\r\n  static tileY: number = 4;\r\n  state: SpiderState;\r\n  revealTick: number;\r\n  jumpDistance: number;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 11;\r\n    this.tileY = 4;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.name = \"spider\";\r\n    this.orthogonalAttack = true;\r\n    this.diagonalAttack = false;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 24;\r\n    this.state = SpiderState.VISIBLE;\r\n    //if (drop) this.drop = drop;\r\n    this.drawYOffset = 1.2;\r\n    this.revealTick = 0;\r\n    this.hasShadow = true;\r\n    this.jumpHeight = 1;\r\n    this.jumpDistance = 1;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  get alertText() {\r\n    return `New Enemy Spotted: Spider \r\n    Health: ${this.health}\r\n    Attack Pattern: Omnidirectional\r\n    Moves every other turn`;\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  toggleReveal = () => {\r\n    let ticksSince = this.ticks - this.revealTick;\r\n    if (this.state === SpiderState.HIDDEN && ticksSince > 8)\r\n      this.state = SpiderState.HIDING;\r\n    this.revealTick = this.ticks;\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    //console.log(`this.drawX, this.drawY: ${this.drawX}, ${this.drawY}`);\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    if (j > 1) {\r\n      this.jumpDistance = 2;\r\n    }\r\n    this.jumpY = Math.sin((j / this.jumpDistance) * Math.PI) * this.jumpHeight;\r\n    if (this.jumpY < 0.01 && this.jumpY > -0.01) {\r\n      this.jumpY = 0;\r\n      this.jumpDistance = 1;\r\n    }\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n\r\n  // Helpers to keep movement logic concise\r\n  private isTileFree = (x: number, y: number): boolean => {\r\n    if (!this.room.roomArray[x] || !this.room.roomArray[x][y]) return false;\r\n    const t = this.room.roomArray[x][y];\r\n    if (t.isSolid()) return false;\r\n    if (t instanceof SpikeTrap && (t as SpikeTrap).on) return false;\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && e.x === x && e.y === y) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  private getTwoTileCandidates = (\r\n    startX: number,\r\n    startY: number,\r\n  ): Array<{\r\n    endX: number;\r\n    endY: number;\r\n    axis: \"x\" | \"y\";\r\n    dx: number;\r\n    dy: number;\r\n  }> => {\r\n    const directions = [\r\n      { dx: 1, dy: 0, axis: \"x\" as const },\r\n      { dx: -1, dy: 0, axis: \"x\" as const },\r\n      { dx: 0, dy: 1, axis: \"y\" as const },\r\n      { dx: 0, dy: -1, axis: \"y\" as const },\r\n    ];\r\n    const candidates = [] as Array<{\r\n      endX: number;\r\n      endY: number;\r\n      axis: \"x\" | \"y\";\r\n      dx: number;\r\n      dy: number;\r\n    }>;\r\n    for (const d of directions) {\r\n      const midX = startX + d.dx;\r\n      const midY = startY + d.dy;\r\n      const endX = startX + 2 * d.dx;\r\n      const endY = startY + 2 * d.dy;\r\n      if (this.isTileFree(midX, midY) && this.isTileFree(endX, endY)) {\r\n        candidates.push({ endX, endY, axis: d.axis, dx: d.dx, dy: d.dy });\r\n      }\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  private pickBestCandidate = (\r\n    candidates: Array<{\r\n      endX: number;\r\n      endY: number;\r\n      axis: \"x\" | \"y\";\r\n      dx: number;\r\n      dy: number;\r\n    }>,\r\n    targetX: number,\r\n    targetY: number,\r\n    preferXAxis: boolean,\r\n    dxToTarget: number,\r\n    dyToTarget: number,\r\n  ) => {\r\n    const signX = dxToTarget === 0 ? 0 : dxToTarget > 0 ? 1 : -1;\r\n    const signY = dyToTarget === 0 ? 0 : dyToTarget > 0 ? 1 : -1;\r\n    candidates.sort((a, b) => {\r\n      const da = Math.abs(a.endX - targetX) + Math.abs(a.endY - targetY);\r\n      const db = Math.abs(b.endX - targetX) + Math.abs(b.endY - targetY);\r\n      if (da !== db) return da - db;\r\n      if (preferXAxis) {\r\n        if (a.axis !== b.axis) return a.axis === \"x\" ? -1 : 1;\r\n      } else {\r\n        if (a.axis !== b.axis) return a.axis === \"y\" ? -1 : 1;\r\n      }\r\n      const aTowards = (a.dx !== 0 ? a.dx === signX : a.dy === signY) ? -1 : 1;\r\n      const bTowards = (b.dx !== 0 ? b.dx === signX : b.dy === signY) ? -1 : 1;\r\n      if (aTowards !== bTowards) return aTowards - bTowards;\r\n      return 0;\r\n    });\r\n    return candidates[0];\r\n  };\r\n\r\n  private getOneTileCandidates = (\r\n    startX: number,\r\n    startY: number,\r\n  ): Array<{ x: number; y: number }> => {\r\n    const directions = [\r\n      { dx: 1, dy: 0 },\r\n      { dx: -1, dy: 0 },\r\n      { dx: 0, dy: 1 },\r\n      { dx: 0, dy: -1 },\r\n    ];\r\n    const candidates: Array<{ x: number; y: number }> = [];\r\n\r\n    for (const d of directions) {\r\n      const newX = startX + d.dx;\r\n      const newY = startY + d.dy;\r\n      if (this.isTileFree(newX, newY)) {\r\n        candidates.push({ x: newX, y: newY });\r\n      }\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  private pickBestOneTileCandidate = (\r\n    candidates: Array<{ x: number; y: number }>,\r\n    targetX: number,\r\n    targetY: number,\r\n    preferXAxis: boolean,\r\n    dxToTarget: number,\r\n    dyToTarget: number,\r\n  ) => {\r\n    const signX = dxToTarget === 0 ? 0 : dxToTarget > 0 ? 1 : -1;\r\n    const signY = dyToTarget === 0 ? 0 : dyToTarget > 0 ? 1 : -1;\r\n\r\n    candidates.sort((a, b) => {\r\n      const da = Math.abs(a.x - targetX) + Math.abs(a.y - targetY);\r\n      const db = Math.abs(b.x - targetX) + Math.abs(b.y - targetY);\r\n      if (da !== db) return da - db;\r\n\r\n      // Prefer movement along the preferred axis\r\n      const aAxis =\r\n        Math.abs(a.x - targetX) > Math.abs(a.y - targetY) ? \"x\" : \"y\";\r\n      const bAxis =\r\n        Math.abs(b.x - targetX) > Math.abs(b.y - targetY) ? \"x\" : \"y\";\r\n\r\n      if (preferXAxis) {\r\n        if (aAxis !== bAxis) return aAxis === \"x\" ? -1 : 1;\r\n      } else {\r\n        if (aAxis !== bAxis) return aAxis === \"y\" ? -1 : 1;\r\n      }\r\n\r\n      // Prefer moving toward the target\r\n      const aTowards = (\r\n        a.x > targetX\r\n          ? dxToTarget < 0\r\n          : a.x < targetX\r\n            ? dxToTarget > 0\r\n            : a.y > targetY\r\n              ? dyToTarget < 0\r\n              : a.y < targetY\r\n                ? dyToTarget > 0\r\n                : 0\r\n      )\r\n        ? -1\r\n        : 1;\r\n      const bTowards = (\r\n        b.x > targetX\r\n          ? dxToTarget < 0\r\n          : b.x < targetX\r\n            ? dxToTarget > 0\r\n            : b.y > targetY\r\n              ? dyToTarget < 0\r\n              : b.y < targetY\r\n                ? dyToTarget > 0\r\n                : 0\r\n      )\r\n        ? -1\r\n        : 1;\r\n      if (aTowards !== bTowards) return aTowards - bTowards;\r\n\r\n      return 0;\r\n    });\r\n    return candidates[0];\r\n  };\r\n\r\n  private attackOrMoveTo = (\r\n    destX: number,\r\n    destY: number,\r\n    oldX: number,\r\n    oldY: number,\r\n  ): void => {\r\n    let hitPlayer = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n        this.game.players[i].x === destX &&\r\n        this.game.players[i].y === destY\r\n      ) {\r\n        this.game.players[i].hurt(this.hit(), this.name);\r\n        this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n        this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n        if (this.game.players[i] === this.game.players[this.game.localPlayerID])\r\n          this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n        hitPlayer = true;\r\n      }\r\n    }\r\n    if (!hitPlayer) {\r\n      this.tryMove(destX, destY);\r\n      this.setDrawXY(oldX, oldY);\r\n      if (this.x > oldX) this.direction = Direction.RIGHT;\r\n      else if (this.x < oldX) this.direction = Direction.LEFT;\r\n      else if (this.y > oldY) this.direction = Direction.DOWN;\r\n      else if (this.y < oldY) this.direction = Direction.UP;\r\n    }\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      this.rumbling = this.ticks % 2 === 1;\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n\r\n            // Determine target position: prioritize direct attack if player is adjacent\r\n            let targetPosition = {\r\n              x: this.targetPlayer.x,\r\n              y: this.targetPlayer.y,\r\n            };\r\n\r\n            // Check if player is adjacent (Manhattan distance 1)\r\n            const playerDistance =\r\n              Math.abs(this.targetPlayer.x - this.x) +\r\n              Math.abs(this.targetPlayer.y - this.y);\r\n\r\n            if (this.target === this.targetPlayer && playerDistance === 2) {\r\n              // Only consider jumping over if player is not adjacent\r\n              let dx = this.targetPlayer.lastX - this.x;\r\n              let dy = this.targetPlayer.lastY - this.y;\r\n              // constrain to orthogonal intent\r\n              if (dx !== 0 && dy !== 0) {\r\n                if (Math.abs(dx) >= Math.abs(dy)) dy = 0;\r\n                else dx = 0;\r\n              }\r\n              if (\r\n                (dx === 0 && Math.abs(dy) <= 1) ||\r\n                (dy === 0 && Math.abs(dx) <= 1)\r\n              ) {\r\n                const jumpOverX = this.targetPlayer.x + Math.sign(dx);\r\n                const jumpOverY = this.targetPlayer.y + Math.sign(dy);\r\n                if (\r\n                  this.room.roomArray[jumpOverX] &&\r\n                  this.room.roomArray[jumpOverX][jumpOverY] &&\r\n                  !this.room.roomArray[jumpOverX][jumpOverY].isSolid()\r\n                ) {\r\n                  targetPosition = { x: jumpOverX, y: jumpOverY };\r\n                }\r\n              }\r\n            } else if (this.target !== this.targetPlayer) {\r\n              targetPosition = { x: this.target.x, y: this.target.y } as any;\r\n            }\r\n\r\n            // Compute 2-tile jump plans\r\n            const dxToTarget = targetPosition.x - oldX;\r\n            const dyToTarget = targetPosition.y - oldY;\r\n            const preferXAxis = Math.abs(dxToTarget) >= Math.abs(dyToTarget);\r\n\r\n            // First, try to use A* first/second step and extend to length 2 if possible\r\n            let finalX = this.x;\r\n            let finalY = this.y;\r\n            const moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              targetPosition,\r\n              disablePositions,\r\n              false,\r\n              false,\r\n              false,\r\n              undefined,\r\n              undefined,\r\n              false,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let step = moves[0];\r\n              const candidate2 = moves[1];\r\n              if (candidate2) {\r\n                const preservesLine =\r\n                  candidate2.pos.x === oldX || candidate2.pos.y === oldY;\r\n                const alignsAxis = preferXAxis\r\n                  ? candidate2.pos.y === oldY\r\n                  : candidate2.pos.x === oldX;\r\n                if (preservesLine && alignsAxis) step = candidate2;\r\n              }\r\n              finalX = step.pos.x;\r\n              finalY = step.pos.y;\r\n              const manhattanFromStart =\r\n                Math.abs(finalX - oldX) + Math.abs(finalY - oldY);\r\n              if (manhattanFromStart === 1) {\r\n                const dirX = finalX - oldX;\r\n                const dirY = finalY - oldY;\r\n                const extX = finalX + (dirX !== 0 ? Math.sign(dirX) : 0);\r\n                const extY = finalY + (dirY !== 0 ? Math.sign(dirY) : 0);\r\n                if (this.isTileFree(extX, extY)) {\r\n                  finalX = extX;\r\n                  finalY = extY;\r\n                }\r\n              }\r\n            }\r\n\r\n            // Execute movement: prioritize attacking when adjacent, otherwise prefer 2-tile jumps\r\n            if (playerDistance === 1) {\r\n              // Player is adjacent - prioritize 1-tile movement for direct attack\r\n              const oneTileCandidates = this.getOneTileCandidates(oldX, oldY);\r\n              if (oneTileCandidates.length > 0) {\r\n                const best = this.pickBestOneTileCandidate(\r\n                  oneTileCandidates,\r\n                  targetPosition.x,\r\n                  targetPosition.y,\r\n                  preferXAxis,\r\n                  dxToTarget,\r\n                  dyToTarget,\r\n                );\r\n                this.attackOrMoveTo(best.x, best.y, oldX, oldY);\r\n              }\r\n            } else {\r\n              // Player is not adjacent - use computed movement (A* + 2-tile extension)\r\n              const finalDist =\r\n                Math.abs(finalX - oldX) + Math.abs(finalY - oldY);\r\n              if (finalDist >= 1) {\r\n                this.attackOrMoveTo(finalX, finalY, oldX, oldY);\r\n              } else {\r\n                // Fall back to 2-tile jump candidates if A* didn't find a path\r\n                const candidates = this.getTwoTileCandidates(oldX, oldY);\r\n                if (candidates.length > 0) {\r\n                  const best = this.pickBestCandidate(\r\n                    candidates,\r\n                    targetPosition.x,\r\n                    targetPosition.y,\r\n                    preferXAxis,\r\n                    dxToTarget,\r\n                    dyToTarget,\r\n                  );\r\n                  this.attackOrMoveTo(best.endX, best.endY, oldX, oldY);\r\n                } else {\r\n                  // Fall back to 1-tile movement if no 2-tile options available\r\n                  const oneTileCandidates = this.getOneTileCandidates(\r\n                    oldX,\r\n                    oldY,\r\n                  );\r\n                  if (oneTileCandidates.length > 0) {\r\n                    const best = this.pickBestOneTileCandidate(\r\n                      oneTileCandidates,\r\n                      targetPosition.x,\r\n                      targetPosition.y,\r\n                      preferXAxis,\r\n                      dxToTarget,\r\n                      dyToTarget,\r\n                    );\r\n                    this.attackOrMoveTo(best.x, best.y, oldX, oldY);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n\r\n            this.makeHitWarnings();\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  this.rumbling = true;\r\n                  this.makeHitWarnings();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = () => {\r\n    const cullFactor = 0.25;\r\n    const player: Player = this.getPlayer();\r\n    const orthogonal = this.orthogonalAttack;\r\n    const diagonal = this.diagonalAttack;\r\n    const forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-2, 0],\r\n            [2, 0],\r\n            [0, -2],\r\n            [0, 2],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [0, 1],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - this.x, player.y - this.y),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = this.x + x;\r\n      const targetY = this.y + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          this.x,\r\n          this.y,\r\n          true,\r\n          false,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.ticks % 2 === 0) {\r\n        this.tileX = 11;\r\n        this.tileY = 4;\r\n      } else {\r\n        this.tileX = 11;\r\n        this.tileY = 4;\r\n      }\r\n      switch (this.direction) {\r\n        case Direction.UP:\r\n          //this.tileX = 13;\r\n          break;\r\n        case Direction.LEFT:\r\n          //this.tileX = 13;\r\n          //this.tileY = 6;\r\n          break;\r\n        case Direction.RIGHT:\r\n          //this.tileY = 6;\r\n          break;\r\n      }\r\n      let rumble = Math.max(\r\n        this.rumble(this.rumbling, this.frame, this.direction).x,\r\n        Math.max(this.rumble(this.rumbling, this.frame, this.direction).y),\r\n      );\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      if (this.state === SpiderState.VISIBLE) {\r\n        //only draw when visible\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY, // + this.direction,\r\n          2,\r\n          2,\r\n          this.x - this.drawX + rumble - 0.5,\r\n          this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n          2 * this.crushX,\r\n          2 * this.crushY,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (this.crushed) {\r\n        this.crushAnim(delta);\r\n      }\r\n    }\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta, 0, 0.75 * GameConstants.TILESIZE);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { BeamEffect } from \"../../projectile/beamEffect\";\r\nimport { ZombieEnemy } from \"./zombieEnemy\";\r\nimport { CrusherEnemy } from \"./crusherEnemy\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\n\r\nexport class WardenEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  dir: Direction;\r\n  static difficulty: number = 2;\r\n  static tileX: number = 21;\r\n  static tileY: number = 0;\r\n  crusherPositions: { x: number; y: number }[] = [];\r\n  crusherCount: number = 0;\r\n  crushers: CrusherEnemy[] = [];\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.w = 1;\r\n    this.h = 1;\r\n\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 6;\r\n    this.maxHealth = 6;\r\n    this.defaultMaxHealth = 6;\r\n    this.tileX = 43;\r\n    this.tileY = 10;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.dir = Direction.DOWN;\r\n    this.name = \"warden\";\r\n    this.chainPushable = false;\r\n\r\n    this.forwardOnlyAttack = false;\r\n    this.drawMoveSpeed = 0.9;\r\n    this.jumpHeight = 0.35;\r\n    this.drawYOffset = 1.5;\r\n    this.alertRange = 10;\r\n    this.orthogonalAttack = true;\r\n    this.crusherPositions = [];\r\n    this.crusherCount = 0;\r\n    this.crushers = [];\r\n    this.baseDamage = 2;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      10,\r\n      [255, 10, 10],\r\n      1.5,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#ff0a0a\";\r\n    this.bloomAlpha = 1;\r\n\r\n    this.room.updateLighting();\r\n\r\n    if (drop) this.drop = drop;\r\n    const dropAmount = Math.floor(Random.rand() * 3) + 2;\r\n    while (this.drops.length < dropAmount && !this.cloned) {\r\n      this.getDrop();\r\n    }\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  bleed = () => {};\r\n  poison = () => {};\r\n\r\n  createCrusherBlocks = (crusherPositions: { x: number; y: number }[]) => {\r\n    for (const position of crusherPositions) {\r\n      const crusher = new CrusherEnemy(\r\n        this.room,\r\n        this.game,\r\n        position.x,\r\n        position.y,\r\n      );\r\n      this.room.entities.push(crusher);\r\n      this.crusherCount++;\r\n      this.crushers.push(crusher);\r\n    }\r\n  };\r\n\r\n  createCrusherChains = () => {\r\n    for (const crusher of this.crushers) {\r\n      let beam = new BeamEffect(crusher.x, crusher.y, this.x, this.y, crusher);\r\n      beam.compositeOperation = \"source-over\";\r\n      beam.color = \"#800000\"; //dark red\r\n      beam.turbulence = 0.4;\r\n      beam.gravity = 0.5;\r\n      beam.iterations = 1;\r\n      beam.segments = 100;\r\n      beam.angleChange = 0.001;\r\n      beam.springDamping = 0.01;\r\n      beam.drawableY = this.drawableY - 0.1;\r\n      this.room.projectiles.push(beam);\r\n    }\r\n  };\r\n\r\n  getCrusherPositions = () => {\r\n    return [\r\n      { x: this.x - 1, y: this.y },\r\n      { x: this.x + 1, y: this.y },\r\n    ];\r\n  };\r\n\r\n  setCrusherDrawableY = () => {\r\n    for (const crusher of this.crushers) {\r\n      if (this.y > crusher.y) {\r\n        this.drawableY = this.drawableY - 0.1;\r\n      } else {\r\n        crusher.drawableY = this.drawableY - 0.1;\r\n      }\r\n    }\r\n  };\r\n\r\n  initializeCrushers = () => {\r\n    // Seed default positions on first run\r\n    if (this.crusherPositions.length === 0) {\r\n      this.crusherPositions = this.getCrusherPositions();\r\n    }\r\n    // Create crushers if not yet created for all positions\r\n    if (this.crusherPositions.length > this.crusherCount) {\r\n      this.createCrusherBlocks(this.crusherPositions);\r\n      this.createCrusherChains();\r\n    }\r\n  };\r\n\r\n  removeCrusherChains = () => {\r\n    for (let beam of this.room.projectiles) {\r\n      if (beam instanceof BeamEffect) {\r\n        if (\r\n          beam.parent instanceof CrusherEnemy &&\r\n          this.crushers.includes(beam.parent as CrusherEnemy) &&\r\n          beam.parent.dead\r\n        ) {\r\n          this.room.projectiles = this.room.projectiles.filter(\r\n            (b) => b !== beam,\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.removeCrusherChains();\r\n    for (const crusher of this.crushers) {\r\n      if (!crusher.dead) {\r\n        crusher.kill();\r\n      }\r\n    }\r\n    this.removeLightSource(this.lightSource);\r\n  };\r\n\r\n  updateCrusherChains = (delta: number) => {\r\n    for (let beam of this.room.projectiles) {\r\n      if (beam instanceof BeamEffect) {\r\n        if (\r\n          beam.parent !== this.crushers[0] &&\r\n          beam.parent !== this.crushers[1]\r\n        )\r\n          continue;\r\n        beam.setTarget(\r\n          this.x - this.drawX,\r\n          this.y - this.drawY - 0.5,\r\n          beam.parent.x - beam.parent.drawX,\r\n          beam.parent.y -\r\n            beam.parent.drawY -\r\n            1.25 +\r\n            (beam.parent as CrusherEnemy).softAnimateY,\r\n        );\r\n        beam.drawableY = this.drawableY - 0.1;\r\n\r\n        switch (Math.floor(this.frame)) {\r\n          case 0:\r\n            beam.color = \"#800000\"; //dark red\r\n            break;\r\n          case 1:\r\n            beam.color = \"#ff0000\"; //medium red\r\n            break;\r\n          case 2:\r\n            beam.color = \"#ff0000\"; //light red\r\n            break;\r\n          case 3:\r\n            beam.color = \"#800000\"; //dark red\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  behavior = () => {\r\n    this.initializeCrushers();\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n          this.ticks++;\r\n          if (this.ticks % 2 === 1) {\r\n            this.rumbling = true;\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let disablePositions = Array<astar.Position>();\r\n\r\n            for (const e of this.room.entities) {\r\n              if (e !== this) {\r\n                disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n              }\r\n            }\r\n\r\n            for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n              for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n                if (\r\n                  this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                  (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n                ) {\r\n                  // don't walk on active spiketraps\r\n                  disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n                }\r\n              }\r\n            }\r\n\r\n            let grid = [];\r\n            for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n              grid[x] = [];\r\n              for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n                if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                  grid[x][y] = this.room.roomArray[x][y];\r\n                else grid[x][y] = false;\r\n              }\r\n            }\r\n            this.target =\r\n              this.getAverageLuminance() > 0 // 0.8\r\n                ? this.targetPlayer\r\n                : this.room.getExtremeLuminanceFromPoint(this.x, this.y)\r\n                    .darkest;\r\n            let moves = astar.AStar.search(\r\n              grid,\r\n              this,\r\n              this.target,\r\n              disablePositions,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              undefined,\r\n              this.lastPlayerPos,\r\n            );\r\n            if (moves.length > 0) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moves[0].pos.x &&\r\n                  this.game.players[i].y === moves[0].pos.y\r\n                ) {\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                  hitPlayer = true;\r\n                }\r\n              }\r\n\r\n              if (!hitPlayer) {\r\n                this.tryMove(moves[0].pos.x, moves[0].pos.y);\r\n                this.setDrawXY(oldX, oldY);\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n            this.rumbling = false;\r\n          } else {\r\n            this.rumbling = true;\r\n            /*\r\n            if (\r\n              (this.target.x === this.targetPlayer.x &&\r\n                this.target.y === this.targetPlayer.y) ||\r\n              Utils.distance(\r\n                this.targetPlayer.x,\r\n                this.targetPlayer.y,\r\n                this.x,\r\n                this.y,\r\n              ) <= 2\r\n            )\r\n              */ {\r\n              this.makeHitWarnings();\r\n            }\r\n          }\r\n        }\r\n\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                if (this.ticks % 2 === 0) {\r\n                  /*\r\n                  if (\r\n                    (this.target.x === this.targetPlayer.x &&\r\n                      this.target.y === this.targetPlayer.y) ||\r\n                    Utils.distance(\r\n                      this.targetPlayer.x,\r\n                      this.targetPlayer.y,\r\n                      this.x,\r\n                      this.y,\r\n                    ) <= 2\r\n                  ) */ {\r\n                    this.makeHitWarnings();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.lightSource) {\r\n        this.lightSource.updatePosition(this.x + 0.5, this.y + 0.5);\r\n      }\r\n    }\r\n\r\n    this.removeCrusherChains();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    this.setCrusherDrawableY();\r\n    this.updateCrusherChains(delta);\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n    Game.drawMob(\r\n      this.tileX + 2 * Math.floor(this.frame),\r\n      this.tileY,\r\n      2,\r\n      2,\r\n      this.x - this.drawX - 0.5,\r\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n      2,\r\n      2,\r\n      this.softShadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Floor } from \"../../tile/floor\";\r\nimport { Bones } from \"../../tile/bones\";\r\nimport { DeathParticle } from \"../../particle/deathParticle\";\r\nimport { WizardTeleportParticle } from \"../../particle/wizardTeleportParticle\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\n\r\nexport enum WizardState {\r\n  idle,\r\n  attack,\r\n  justAttacked,\r\n  teleport,\r\n}\r\n\r\nexport abstract class WizardEnemy extends Enemy {\r\n  static difficulty: number = 3;\r\n  ticks: number;\r\n  state: WizardState;\r\n  frame: number;\r\n  seenPlayer: boolean;\r\n  projectileColor: [number, number, number];\r\n  readonly ATTACK_RADIUS = 5;\r\n  static tileX: number = 6;\r\n  static tileY: number = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.ticks = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.state = WizardState.attack;\r\n    this.seenPlayer = false;\r\n    this.alertTicks = 0;\r\n    this.name = \"wizard bomber\";\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"weapon\", \"equipment\", \"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  newLightSource = (\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    brightness: number,\r\n  ) => {\r\n    this.lightSource = new LightSource(x, y, radius, color, brightness);\r\n  };\r\n\r\n  addLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources.push(lightSource);\r\n  };\r\n\r\n  removeLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources = this.room.lightSources.filter(\r\n      (ls) => ls !== lightSource,\r\n    );\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  withinAttackingRangeOfPlayer = (): boolean => {\r\n    let withinRange = false;\r\n    for (const i in this.game.players) {\r\n      if (\r\n        (this.x - this.game.players[i].x) ** 2 +\r\n          (this.y - this.game.players[i].y) ** 2 <=\r\n        this.ATTACK_RADIUS ** 2\r\n      ) {\r\n        withinRange = true;\r\n      }\r\n    }\r\n    return withinRange;\r\n  };\r\n\r\n  shuffle = (a) => {\r\n    let j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Random.rand() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  };\r\n\r\n  behavior = () => {\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n    if (!this.dead) {\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n        switch (this.state) {\r\n          case WizardState.attack:\r\n            const nearestPlayerInfo = this.nearestPlayer();\r\n            if (nearestPlayerInfo !== false) {\r\n              const [distance, targetPlayer] = nearestPlayerInfo;\r\n              const attackLength = 20;\r\n\r\n              const offsets = this.calculateProjectileOffsets(\r\n                targetPlayer.x,\r\n                targetPlayer.y,\r\n                10,\r\n              );\r\n\r\n              this.attemptProjectilePlacement(\r\n                [\r\n                  { x: -1, y: 0 },\r\n                  { x: -2, y: 0 },\r\n                  { x: 1, y: 0 },\r\n                  { x: 2, y: 0 },\r\n                  { x: 0, y: -1 },\r\n                  { x: 0, y: -2 },\r\n                  { x: 0, y: 1 },\r\n                  { x: 0, y: 2 },\r\n                ],\r\n                WizardFireball,\r\n                false,\r\n              );\r\n            }\r\n            this.state = WizardState.justAttacked;\r\n            break;\r\n          case WizardState.justAttacked:\r\n            this.state = WizardState.idle;\r\n            break;\r\n          case WizardState.teleport:\r\n            let oldX = this.x;\r\n            let oldY = this.y;\r\n            let min = 100000;\r\n            let bestPos;\r\n            let emptyTiles = this.shuffle(this.room.getEmptyTiles());\r\n            emptyTiles = emptyTiles.filter(\r\n              (tile) =>\r\n                !this.room.projectiles.some(\r\n                  (projectile) =>\r\n                    projectile.x === tile.x && projectile.y === tile.y,\r\n                ),\r\n            );\r\n\r\n            let optimalDist = Game.randTable(\r\n              [2, 2, 3, 3, 3, 3, 3],\r\n              Random.rand,\r\n            );\r\n            // pick a random player to target\r\n            let player_ids = [];\r\n            for (const i in this.game.players) player_ids.push(i);\r\n            let target_player_id = Game.randTable(player_ids, Random.rand);\r\n            for (let t of emptyTiles) {\r\n              let newPos = t;\r\n              let dist =\r\n                Math.abs(newPos.x - this.game.players[target_player_id].x) +\r\n                Math.abs(newPos.y - this.game.players[target_player_id].y);\r\n              if (Math.abs(dist - optimalDist) < Math.abs(min - optimalDist)) {\r\n                min = dist;\r\n                bestPos = newPos;\r\n              }\r\n            }\r\n            if (bestPos) {\r\n              this.tryMove(bestPos.x, bestPos.y);\r\n              this.drawX = this.x - oldX;\r\n              this.drawY = this.y - oldY;\r\n              this.frame = 0; // trigger teleport animation\r\n              this.room.particles.push(new WizardTeleportParticle(oldX, oldY));\r\n              if (this.withinAttackingRangeOfPlayer()) {\r\n                this.state = WizardState.attack;\r\n              } else {\r\n                this.state = WizardState.idle;\r\n              }\r\n            }\r\n            break;\r\n          case WizardState.idle:\r\n            this.state = WizardState.teleport;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n\r\n      if (this.state === WizardState.attack) this.tileX = 7;\r\n      else this.tileX = 6;\r\n\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      if (this.frame >= 0) {\r\n        Game.drawMob(\r\n          Math.floor(this.frame) + 6,\r\n          2,\r\n          1,\r\n          2,\r\n          this.x,\r\n          this.y - 1.5,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        this.frame += 0.2 * delta;\r\n        if (this.frame > 11) this.frame = -1;\r\n      } else {\r\n        Game.drawMob(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - 1.3 - this.drawY,\r\n          1,\r\n          2,\r\n          this.softShadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Entity, EntityDirection } from \"../entity\";\r\nimport { Direction, Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { HitWarning } from \"../../drawable/hitWarning\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { astar } from \"../../utility/astarclass\";\r\nimport { SpikeTrap } from \"../../tile/spiketrap\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nexport class ZombieEnemy extends Enemy {\r\n  frame: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  aggro: boolean;\r\n  targetPlayer: Player;\r\n  drop: Item;\r\n  dir: Direction;\r\n  static difficulty: number = 1;\r\n  static tileX: number = 17;\r\n  static tileY: number = 8;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n\r\n    this.ticks = 0;\r\n    this.frame = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 8;\r\n    this.seenPlayer = false;\r\n    this.aggro = false;\r\n    this.dir = Direction.DOWN;\r\n    this.name = \"zombie\";\r\n    this.forwardOnlyAttack = true;\r\n    this.jumpHeight = 0.35;\r\n\r\n    if (drop) this.drop = drop;\r\n    this.getDrop([\"consumable\", \"tool\", \"coin\"]);\r\n  }\r\n\r\n  hit = (): number => {\r\n    return this.damage;\r\n  };\r\n\r\n  behavior = () => {\r\n    // Store the current position\r\n    this.lastX = this.x;\r\n    this.lastY = this.y;\r\n\r\n    // If the enemy is not dead\r\n    if (!this.dead) {\r\n      // Skip turns if necessary\r\n      if (this.skipNextTurns > 0) {\r\n        this.skipNextTurns--;\r\n        return;\r\n      }\r\n\r\n      // Increment the tick counter\r\n      this.ticks++;\r\n\r\n      // If the enemy has not seen the player yet\r\n      if (!this.seenPlayer) this.lookForPlayer();\r\n      else if (this.seenPlayer) {\r\n        // If the target player has taken their turn\r\n        if (this.room.playerTicked === this.targetPlayer) {\r\n          // Decrement alert ticks\r\n          this.alertTicks = Math.max(0, this.alertTicks - 1);\r\n\r\n          // Store the old position\r\n          let oldX = this.x;\r\n          let oldY = this.y;\r\n\r\n          // Create a list of positions to avoid\r\n          let disablePositions = Array<astar.Position>();\r\n          for (const e of this.room.entities) {\r\n            if (e !== this) {\r\n              disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n            }\r\n          }\r\n          for (let xx = this.x - 1; xx <= this.x + 1; xx++) {\r\n            for (let yy = this.y - 1; yy <= this.y + 1; yy++) {\r\n              if (\r\n                this.room.roomArray[xx][yy] instanceof SpikeTrap &&\r\n                (this.room.roomArray[xx][yy] as SpikeTrap).on\r\n              ) {\r\n                // Don't walk on active spike traps\r\n                disablePositions.push({ x: xx, y: yy } as astar.Position);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Create a grid of the room\r\n          let grid = [];\r\n          for (let x = 0; x < this.room.roomX + this.room.width; x++) {\r\n            grid[x] = [];\r\n            for (let y = 0; y < this.room.roomY + this.room.height; y++) {\r\n              if (this.room.roomArray[x] && this.room.roomArray[x][y])\r\n                grid[x][y] = this.room.roomArray[x][y];\r\n              else grid[x][y] = false;\r\n            }\r\n          }\r\n\r\n          // Find a path to the target player\r\n          let moves = astar.AStar.search(\r\n            grid,\r\n            this,\r\n            this.targetPlayer,\r\n            disablePositions,\r\n            false,\r\n            false,\r\n            true,\r\n            this.direction,\r\n          );\r\n\r\n          // If there are moves available\r\n          if (moves.length > 0) {\r\n            let moveX = moves[0].pos.x;\r\n            let moveY = moves[0].pos.y;\r\n            let oldDir = this.direction;\r\n            let player = this.targetPlayer;\r\n\r\n            // Face the target player\r\n            this.facePlayer(player);\r\n\r\n            // Determine the new direction based on the move\r\n            if (moveX > oldX) this.direction = Direction.RIGHT;\r\n            else if (moveX < oldX) this.direction = Direction.LEFT;\r\n            else if (moveY > oldY) this.direction = Direction.DOWN;\r\n            else if (moveY < oldY) this.direction = Direction.UP;\r\n\r\n            // If the direction hasn't changed, attempt to move or attack\r\n            if (oldDir == this.direction) {\r\n              let hitPlayer = false;\r\n              for (const i in this.game.players) {\r\n                if (\r\n                  this.game.rooms[this.game.players[i].levelID] === this.room &&\r\n                  this.game.players[i].x === moveX &&\r\n                  this.game.players[i].y === moveY\r\n                ) {\r\n                  // Attack the player if they are in the way\r\n                  this.game.players[i].hurt(this.hit(), this.name);\r\n                  this.drawX = 0.5 * (this.x - this.game.players[i].x);\r\n                  this.drawY = 0.5 * (this.y - this.game.players[i].y);\r\n                  if (\r\n                    this.game.players[i] ===\r\n                    this.game.players[this.game.localPlayerID]\r\n                  )\r\n                    this.game.shakeScreen(10 * this.drawX, 10 * this.drawY);\r\n                }\r\n              }\r\n              if (!hitPlayer) {\r\n                // Move to the new position\r\n                this.tryMove(moveX, moveY);\r\n                this.setDrawXY(oldX, oldY);\r\n\r\n                if (this.x > oldX) this.direction = Direction.RIGHT;\r\n                else if (this.x < oldX) this.direction = Direction.LEFT;\r\n                else if (this.y > oldY) this.direction = Direction.DOWN;\r\n                else if (this.y < oldY) this.direction = Direction.UP;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Add positions to avoid based on the current direction\r\n          if (this.direction == Direction.LEFT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.RIGHT) {\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y + 1,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x,\r\n              y: this.y - 1,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.DOWN) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          if (this.direction == Direction.UP) {\r\n            disablePositions.push({\r\n              x: this.x + 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n            disablePositions.push({\r\n              x: this.x - 1,\r\n              y: this.y,\r\n            } as astar.Position);\r\n          }\r\n          // Make hit warnings\r\n          this.makeHitWarnings();\r\n        }\r\n\r\n        // Check if the target player is offline\r\n        let targetPlayerOffline =\r\n          Object.values(this.game.offlinePlayers).indexOf(this.targetPlayer) !==\r\n          -1;\r\n        // If the enemy is not aggro or the target player is offline, find a new target player\r\n        if (!this.aggro || targetPlayerOffline) {\r\n          let p = this.nearestPlayer();\r\n          if (p !== false) {\r\n            let [distance, player] = p;\r\n            if (\r\n              distance <= 4 &&\r\n              (targetPlayerOffline ||\r\n                distance < this.playerDistance(this.targetPlayer))\r\n            ) {\r\n              if (player !== this.targetPlayer) {\r\n                this.targetPlayer = player;\r\n                this.facePlayer(player);\r\n                if (player === this.game.players[this.game.localPlayerID])\r\n                  this.alertTicks = 1;\r\n                this.makeHitWarnings();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    //this.updateShadeColor(delta);\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n\r\n    Game.drawMob(\r\n      this.tileX + Math.floor(this.frame),\r\n      this.tileY + this.direction * 2,\r\n      1,\r\n      2,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY - this.jumpY,\r\n      1,\r\n      2,\r\n      this.softShadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    if (!this.cloned) {\r\n      if (!this.seenPlayer) {\r\n        this.drawSleepingZs(delta);\r\n      }\r\n      if (this.alertTicks > 0) {\r\n        this.drawExclamation(delta);\r\n      }\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { Player } from \"../player/player\";\r\nimport { HealthBar } from \"../drawable/healthbar\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { Item } from \"../item/item\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Projectile } from \"../projectile/projectile\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport type { LightSource } from \"../lighting/lightSource\";\r\nimport { DamageNumber } from \"../particle/damageNumber\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { Door } from \"../tile/door\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\nimport { Shadow } from \"../drawable/shadow\";\r\n\r\nimport { DropTable } from \"../item/dropTable\";\r\nimport { Weapon } from \"../item/weapon/weapon\";\r\nimport { EnemyShield } from \"../projectile/enemyShield\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { ImageParticle } from \"../particle/imageParticle\";\r\nimport { Coin } from \"../item/coin\";\r\nimport { Random } from \"../utility/random\";\r\nimport { XPPopup } from \"../particle/xpPopup\";\r\nimport { Tile } from \"../tile/tile\";\r\nimport { BeamEffect } from \"../projectile/beamEffect\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\n\r\nexport enum EntityDirection {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n}\r\n\r\nexport enum EntityType {\r\n  ENEMY,\r\n  FRIENDLY,\r\n  RESOURCE,\r\n  PROP,\r\n  CHEST,\r\n}\r\n\r\nexport interface entityData {\r\n  name: string;\r\n  location: { x: number; y: number };\r\n}\r\n\r\nexport interface bloomData {\r\n  blurAmount: number;\r\n  color: string;\r\n  xOffset: number;\r\n  yOffset: number;\r\n  size: number;\r\n  alpha: number;\r\n}\r\n\r\nexport class Entity extends Drawable {\r\n  globalId: string;\r\n  room: Room;\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  direction: Direction;\r\n  drawX: number;\r\n  drawY: number;\r\n  dead: boolean;\r\n  game: Game;\r\n  health: number;\r\n  maxHealth: number;\r\n  defaultMaxHealth: number;\r\n  protected tileX: number;\r\n  protected tileY: number;\r\n  protected hasShadow: boolean;\r\n  skipNextTurns: number;\r\n  //TODO: change these to functions? for enemies that switch states\r\n  destroyable: boolean; // can the player destroy this enemy?\r\n  pushable: boolean; // can the player push this enemy? (true for crates/barrels, false for regular mobs)\r\n  chainPushable: boolean; // can the player pushing another enemy push this enemy? (default true)\r\n  interactable: boolean; // can the player interact\r\n  protected deathParticleColor: string;\r\n  healthBar: HealthBar;\r\n  drop: Item;\r\n  protected sleepingZFrame = 0;\r\n  alertTicks: number;\r\n  protected exclamationFrame: number;\r\n  lastX: number;\r\n  lastY: number;\r\n  protected hitBy: Player;\r\n  protected crushX: number;\r\n  protected crushY: number;\r\n  protected crushVertical: boolean;\r\n  protected crushed: boolean;\r\n  rumbling: boolean;\r\n  protected animationSpeed: number;\r\n  drawYOffset: number;\r\n  name: string;\r\n  protected orthogonalAttack: boolean;\r\n  protected diagonalAttack: boolean;\r\n  protected forwardOnlyAttack: boolean;\r\n  protected attackRange: number;\r\n  protected diagonalAttackRange: number;\r\n  lightSource: LightSource;\r\n  drawMoveSpeed: number;\r\n  unconscious: boolean;\r\n  hitWarnings: HitWarning[];\r\n  imageParticleX: number = 0;\r\n  imageParticleY: number = 26;\r\n  dropChance: number = 1;\r\n  isEnemy: boolean;\r\n  shielded: boolean;\r\n  buffed: boolean;\r\n  buffedBefore: boolean;\r\n  //shieldHealth: number;\r\n  frame: number;\r\n  shield: EnemyShield;\r\n  shieldedBefore: boolean;\r\n  //shadeColor: string;\r\n  shadeMultiplier: number = 1;\r\n  hurting: boolean;\r\n  hurtFrame: number;\r\n  softShadeColor: string;\r\n  shadeColor: string;\r\n  dying: boolean;\r\n  dyingFrame: number;\r\n  alpha: number;\r\n  cloned: boolean;\r\n  hasBloom: boolean;\r\n  bloomColor: string = \"#FFFFFF\";\r\n  bloomAlpha: number = 1;\r\n  softBloomAlpha: number = 1;\r\n  bloomSize: number = 1;\r\n  bloomOffsetY: number = 0;\r\n  target: { x: number; y: number };\r\n  moving: boolean;\r\n  dropTable: string[];\r\n  drops: Item[];\r\n  opaque: boolean = false;\r\n  opacity: number = 0;\r\n  hasHitParticles: boolean = true;\r\n  hasDamageNumbers: boolean = true;\r\n  armored: boolean = false;\r\n  justHurt: boolean = false;\r\n  stunned: boolean = false;\r\n  collidable: boolean = true;\r\n  canDestroyOthers: boolean = false;\r\n  canCrushOthers: boolean = false;\r\n  beamIds: string[] = [];\r\n  // Shadow rendering resources moved to Shadow class\r\n\r\n  private _imageParticleTiles: { x: number; y: number };\r\n  hitSound: () => void;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super();\r\n    this.globalId = IdGenerator.generate(\"EN\");\r\n\r\n    // Check if we're in cloning mode\r\n    const isCloning = (this.constructor as any).__isCloning;\r\n\r\n    // Set cloned status immediately if we're cloning\r\n    if (isCloning) {\r\n      this.cloned = true;\r\n    } else this.cloned = false;\r\n\r\n    // Only set the absolute minimum required properties if cloning\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.game = game;\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.defaultMaxHealth = 1;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.hasShadow = true;\r\n    this.skipNextTurns = 0;\r\n    this.direction = Direction.DOWN;\r\n    this.destroyable = true;\r\n    this.pushable = false;\r\n    this.chainPushable = true;\r\n    this.interactable = false;\r\n    this.healthBar = new HealthBar();\r\n    this.alertTicks = 0;\r\n    this.exclamationFrame = 0;\r\n    this.lastX = x;\r\n    this.lastY = y;\r\n    this.hitBy = null;\r\n    this.crushX = 1;\r\n    this.crushY = 1;\r\n    this.crushVertical = false;\r\n    this.crushed = false;\r\n    this.rumbling = false;\r\n    this.animationSpeed = 0.1;\r\n    this.drawYOffset = 1.175;\r\n    this.hitWarnings = [];\r\n    this.orthogonalAttack = false;\r\n    this.diagonalAttack = false;\r\n    this.forwardOnlyAttack = false;\r\n    this.attackRange = 1;\r\n    this.diagonalAttackRange = 1;\r\n    this.drawMoveSpeed = 0.9;\r\n    this.unconscious = false;\r\n    this.dropChance = 0.02;\r\n    this.isEnemy = false;\r\n    this.shielded = false;\r\n    this.shield = null;\r\n    this.frame = 0;\r\n    this.shieldedBefore = false;\r\n    this._imageParticleTiles = { x: 0, y: 0 };\r\n    this.hitSound = null;\r\n    this.shadeColor = this.room.shadeColor;\r\n    this.hurting = false;\r\n    this.hurtFrame = 0;\r\n    this.softShadeColor = \"#000000\";\r\n    this.dying = false;\r\n    this.dyingFrame = 30;\r\n    this.alpha = 1;\r\n    this.dead = false;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"#FFFFFF\";\r\n    this.moving = false;\r\n    this.dropTable = [];\r\n    this.drops = [];\r\n    this.canDestroyOthers = false;\r\n    this.canCrushOthers = false;\r\n    this.beamIds = [];\r\n    if (this.drop) this.drops.push(this.drop);\r\n  }\r\n\r\n  static add<\r\n    T extends new (\r\n      room: Room,\r\n      game: Game,\r\n      x: number,\r\n      y: number,\r\n      ...rest: any[]\r\n    ) => Entity,\r\n  >(this: T, room: Room, game: Game, x: number, y: number, ...rest: any[]) {\r\n    // Safety checks: verify tile exists and is not solid\r\n    if (!room.roomArray[x] || !room.roomArray[x][y]) {\r\n      console.warn(`Cannot add entity: tile at (${x}, ${y}) does not exist`);\r\n      return null;\r\n    }\r\n\r\n    if (room.roomArray[x][y].isSolid()) {\r\n      console.warn(`Cannot add entity: tile at (${x}, ${y}) is solid`);\r\n      return null;\r\n    }\r\n\r\n    const entity = new this(room, game, x, y, ...rest);\r\n    room.entities.push(entity);\r\n    return entity;\r\n  }\r\n\r\n  static cloneEntity(original: Entity): Entity {\r\n    // Set a temporary flag on the constructor to indicate we're cloning\r\n    (original.constructor as any).__isCloning = true;\r\n\r\n    // Create minimal clone\r\n    const cloned = new (original.constructor as typeof Entity)(\r\n      original.room,\r\n      original.game,\r\n      original.x,\r\n      original.y,\r\n    );\r\n\r\n    // Remove the temporary flag\r\n    delete (original.constructor as any).__isCloning;\r\n\r\n    // Copy only properties needed for death animation\r\n    Object.assign(cloned, {\r\n      cloned: true,\r\n      dead: false,\r\n      dying: true,\r\n      drawableY: original.drawableY,\r\n      tileX: original.tileX,\r\n      tileY: original.tileY,\r\n      frame: original.frame,\r\n      direction: original.direction,\r\n      drawX: original.drawX,\r\n      drawY: original.drawY,\r\n      alpha: original.alpha,\r\n      shadeColor: original.shadeColor,\r\n      shadeMultiplier: original.shadeMultiplier,\r\n      softShadeColor: original.softShadeColor,\r\n      hasBloom: original.hasBloom,\r\n      bloomColor: original.bloomColor,\r\n      bloomAlpha: 1,\r\n      softBloomAlpha: 1,\r\n      dyingFrame: 30,\r\n    });\r\n\r\n    // Add to room's dead entities\r\n    original.room.deadEntities.push(cloned);\r\n\r\n    return cloned;\r\n  }\r\n\r\n  /**\r\n   * Clones the current entity without adding it to deadEntities.\r\n   */\r\n  clone(): Entity {\r\n    const cloned = Entity.cloneEntity(this);\r\n    cloned.dead = false; // Explicitly set as not dead\r\n    cloned.dying = true; // Ensure the clone is in a dying state\r\n\r\n    return cloned;\r\n  }\r\n\r\n  hoverText = (): string => {\r\n    return this.name;\r\n  };\r\n\r\n  get imageParticleTiles() {\r\n    return this._imageParticleTiles;\r\n  }\r\n\r\n  applyShield = (shieldHealth: number = 1, loading: boolean = false) => {\r\n    if (!this.shieldedBefore || loading) {\r\n      this.shield = new EnemyShield(this, this.x, this.y, shieldHealth);\r\n      this.shielded = true;\r\n      this.shieldedBefore = true;\r\n      if (!loading) {\r\n        this.health += shieldHealth;\r\n        this.maxHealth = this.defaultMaxHealth + shieldHealth;\r\n      }\r\n\r\n      this.shadeColor = \"purple\";\r\n      this.shadeMultiplier = 0.5;\r\n      this.hasBloom = true;\r\n      this.bloomColor = \"#2E0854\";\r\n      this.bloomAlpha = 1;\r\n    }\r\n  };\r\n\r\n  removeShield = () => {\r\n    if (this.shield) {\r\n      this.health -= this.shield.health;\r\n      this.maxHealth -= this.shield.health;\r\n      this.shield.remove();\r\n      this.shadeColor = this.room.shadeColor;\r\n      this.shadeMultiplier = 1;\r\n      this.hasBloom = false;\r\n      this.bloomAlpha = 0;\r\n    }\r\n  };\r\n\r\n  applyBuff = () => {\r\n    this.buffed = true;\r\n    this.buffedBefore = true;\r\n    this.shadeColor = \"cyan\";\r\n    this.shadeMultiplier = 0.5;\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#00FFFF\";\r\n    this.bloomAlpha = 0.5;\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [0, 40, 40],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.room.updateLighting();\r\n  };\r\n\r\n  removeBuff = () => {\r\n    let beams = this.room.projectiles.filter(\r\n      (projectile) =>\r\n        projectile instanceof BeamEffect && projectile.parent === this,\r\n    );\r\n    if (beams) {\r\n      beams.forEach((beam) => {\r\n        beam.dead = true;\r\n      });\r\n    }\r\n    //this.shadeColor = \"black\";\r\n    //this.lightSource = null;\r\n    //this.shield = null;\r\n    this.shadeColor = this.room.shadeColor;\r\n    this.shadeMultiplier = 1;\r\n    this.hasBloom = false;\r\n    this.bloomAlpha = 0;\r\n    this.removeLightSource(this.lightSource);\r\n    this.lightSource = null;\r\n    this.room.updateLighting();\r\n  };\r\n\r\n  getDrop = (useCategory: string[] = [], force: boolean = false) => {\r\n    if (this.cloned) return;\r\n    const drops =\r\n      this.dropTable && this.dropTable.length > 0\r\n        ? this.dropTable\r\n        : useCategory;\r\n    DropTable.getDrop(this, drops, force, 3);\r\n    //make monsters drop degraded weapons\r\n    if (this.drop instanceof Weapon && this.type === EntityType.ENEMY) {\r\n      this.drop.durability = Math.floor(\r\n        Random.rand() * 0.31 * this.drop.durabilityMax,\r\n      );\r\n      this.drop.durabilityMax;\r\n    }\r\n  };\r\n\r\n  addLightSource = (lightSource: LightSource) => {\r\n    if (!this.cloned) this.room.lightSources.push(lightSource);\r\n  };\r\n\r\n  removeLightSource = (lightSource: LightSource) => {\r\n    this.room.lightSources = this.room.lightSources.filter(\r\n      (ls) => ls !== lightSource,\r\n    );\r\n    //this.lightSource = null;\r\n    this.room.updateLighting();\r\n  };\r\n\r\n  addBeamId = (beamId: string) => {\r\n    this.beamIds.push(beamId);\r\n  };\r\n\r\n  removeBeamId = (beamId: string) => {\r\n    this.beamIds = this.beamIds.filter((id) => id !== beamId);\r\n  };\r\n\r\n  behavior = () => {};\r\n\r\n  hit = (): number => {\r\n    return 0;\r\n  };\r\n\r\n  hurtCallback = () => {};\r\n\r\n  get type() {\r\n    return EntityType.ENEMY;\r\n  }\r\n\r\n  pointIn = (x: number, y: number): boolean => {\r\n    return (\r\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\r\n    );\r\n  };\r\n\r\n  createDamageNumber = (\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    let color = \"red\";\r\n    let outlineColor = GameConstants.OUTLINE;\r\n    if (type === \"poison\") color = \"green\";\r\n    if (type === \"blood\") {\r\n      color = \"#8B0000\";\r\n      outlineColor = \"red\";\r\n    }\r\n    if (type === \"heal\") {\r\n      color = \"#B8A4FF\";\r\n      outlineColor = GameConstants.OUTLINE;\r\n    }\r\n    this.room.particles.push(\r\n      new DamageNumber(this.room, this.x, this.y, damage, color, outlineColor),\r\n    );\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    //putting this here bc i'm lazy\r\n    this.updateHurtFrame(delta);\r\n    this.animateDying(delta);\r\n    this.updateShadeColor(delta);\r\n    //this.updateBloom(delta);\r\n\r\n    if (!this.doneMoving()) {\r\n      this.drawX *= this.drawMoveSpeed ** delta;\r\n      this.drawY *= this.drawMoveSpeed ** delta;\r\n\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n    }\r\n  };\r\n\r\n  setDrawXY = (x: number, y: number) => {\r\n    this.drawX += this.x - x;\r\n    this.drawY += this.y - y;\r\n  };\r\n\r\n  readonly tryMove = (x: number, y: number, collide: boolean = true) => {\r\n    const canDestroyOthers = this.canDestroyOthers;\r\n    let pointWouldBeIn = (someX: number, someY: number): boolean => {\r\n      return (\r\n        someX >= x && someX < x + this.w && someY >= y && someY < y + this.h\r\n      );\r\n    };\r\n\r\n    let entityCollide = (entity: Entity): boolean => {\r\n      let flag = true;\r\n      if (entity.x >= x + this.w || entity.x + entity.w <= x) flag = false;\r\n      if (entity.y >= y + this.h || entity.y + entity.h <= y) flag = false;\r\n      if (\r\n        canDestroyOthers &&\r\n        entity.destroyable &&\r\n        entity.w <= 1 &&\r\n        entity.h <= 1 &&\r\n        flag === true\r\n      ) {\r\n        entity.hurt(this as any, entity.health);\r\n        if (!this.canCrushOthers) {\r\n          const closestTile = this.closestTile(entity as any);\r\n          this.drawX += 1 * (closestTile.x - entity.x);\r\n          this.drawY += 1 * (closestTile.y - entity.y);\r\n        }\r\n        this.game.shakeScreen(5 * this.drawX, 5 * this.drawY);\r\n\r\n        flag = this.canCrushOthers ? false : true;\r\n      }\r\n\r\n      return flag;\r\n    };\r\n\r\n    let flag = false;\r\n    for (const e of this.room.entities) {\r\n      if (e !== this && entityCollide(e) && collide) {\r\n        flag = true;\r\n      }\r\n    }\r\n    if (flag) return;\r\n\r\n    for (const i in this.game.players) {\r\n      if (pointWouldBeIn(this.game.players[i].x, this.game.players[i].y)) {\r\n        return;\r\n      }\r\n    }\r\n    let tiles: Tile[] = [];\r\n    for (let xx = 0; xx < this.w; xx++) {\r\n      for (let yy = 0; yy < this.h; yy++) {\r\n        if (\r\n          !this.room.roomArray[x + xx][y + yy].isSolid() &&\r\n          !(this.room.roomArray[x + xx][y + yy] instanceof Door) &&\r\n          !(this.room.roomArray[x + xx][y + yy] instanceof DownLadder)\r\n        ) {\r\n          tiles.push(this.room.roomArray[x + xx][y + yy]);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    for (let tile of tiles) {\r\n      tile.onCollideEnemy(this);\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n    this.bigEnemyShake();\r\n  };\r\n\r\n  bigEnemyShake = () => {\r\n    if (this.w > 1 || this.h > 1) {\r\n      setTimeout(() => {\r\n        this.game.shakeScreen(0 * this.drawX, 5);\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  readonly getPlayer = () => {\r\n    const maxDistance = 138291380921; // pulled this straight outta my ass\r\n    let closestDistance = maxDistance;\r\n    let closestPlayer = null;\r\n    for (const i in this.game.players) {\r\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\r\n        let distance = this.playerDistance(this.game.players[i]);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestPlayer = this.game.players[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closestDistance === maxDistance) return false;\r\n    else return closestPlayer;\r\n  };\r\n\r\n  onHurt = (\r\n    damage: number = 1,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {};\r\n\r\n  hurt = (\r\n    playerHitBy: Player,\r\n    damage: number,\r\n    type: \"none\" | \"poison\" | \"blood\" | \"heal\" = \"none\",\r\n  ) => {\r\n    this.handleEnemyCase(playerHitBy);\r\n\r\n    let hitShield = false;\r\n    let shieldHealth = 0;\r\n    if (this.shielded) {\r\n      shieldHealth = this.shield.health;\r\n      if (shieldHealth > 0) {\r\n        this.shield.hurt(damage);\r\n        hitShield = true;\r\n      }\r\n    }\r\n    /*\r\n    this.shadeColor = \"red\";\r\n    setTimeout(() => {\r\n      this.shadeColor = this.room.shadeColor;\r\n    }, 100);\r\n    */\r\n\r\n    if (this.armored && this.health === this.defaultMaxHealth)\r\n      Sound.playParry();\r\n\r\n    this.health -= damage;\r\n    //this.maxHealth -= shieldHealth;\r\n    this.onHurt(damage, type);\r\n\r\n    this.startHurting();\r\n    if (this.hasDamageNumbers) this.createDamageNumber(damage, type);\r\n    this.playHitSound();\r\n\r\n    this.healthBar.hurt();\r\n\r\n    // Emit damage done event for statistics tracking (only for enemies)\r\n    if (this.isEnemy && playerHitBy) {\r\n      globalEventBus.emit(EVENTS.DAMAGE_DONE, { amount: damage });\r\n    }\r\n\r\n    if (type === \"none\" || this.health <= 0 || !this.isEnemy) {\r\n      this.createHitParticles();\r\n    }\r\n\r\n    if (this.health <= 0) {\r\n      this.kill();\r\n      this.bloomAlpha = 0;\r\n    } else this.hurtCallback();\r\n  };\r\n\r\n  wander = () => {\r\n    // Store old position to check if move was successful\r\n    const oldX = this.x;\r\n    const oldY = this.y;\r\n\r\n    // Try up to 4 times to find a valid move\r\n    for (let attempts = 0; attempts < 4; attempts++) {\r\n      // Choose a random direction\r\n      const directions = [\r\n        Direction.UP,\r\n        Direction.DOWN,\r\n        Direction.LEFT,\r\n        Direction.RIGHT,\r\n      ];\r\n      const randomDirection =\r\n        directions[Math.floor(Random.rand() * directions.length)];\r\n\r\n      // Calculate target position based on direction\r\n      let targetX = this.x;\r\n      let targetY = this.y;\r\n\r\n      switch (randomDirection) {\r\n        case Direction.UP:\r\n          targetY = this.y - 1;\r\n          break;\r\n        case Direction.DOWN:\r\n          targetY = this.y + 1;\r\n          break;\r\n        case Direction.LEFT:\r\n          targetX = this.x - 1;\r\n          break;\r\n        case Direction.RIGHT:\r\n          targetX = this.x + 1;\r\n          break;\r\n      }\r\n\r\n      // Try to move to the target position\r\n      this.tryMove(targetX, targetY);\r\n      this.setDrawXY(oldX, oldY);\r\n\r\n      // If the move was successful, update direction and drawing, then break\r\n      if (this.x !== oldX || this.y !== oldY) {\r\n        this.direction = randomDirection;\r\n        this.setDrawXY(targetX, targetY);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  runAway = () => {\r\n    const player = this.getPlayer();\r\n    if (!player) {\r\n      this.wander();\r\n      return;\r\n    }\r\n\r\n    const distance = Utils.distance(this.x, this.y, player.x, player.y);\r\n    if (distance > 10) {\r\n      this.wander();\r\n      return;\r\n    }\r\n\r\n    // Store old position to check if move was successful\r\n    const oldX = this.x;\r\n    const oldY = this.y;\r\n\r\n    // Calculate all possible positions with their distances\r\n    const newPositions = [\r\n      { x: this.x - 1, y: this.y },\r\n      { x: this.x + 1, y: this.y },\r\n      { x: this.x, y: this.y - 1 },\r\n      { x: this.x, y: this.y + 1 },\r\n    ].map((position) => ({\r\n      position,\r\n      distance: Utils.distance(player.x, player.y, position.x, position.y),\r\n    }));\r\n\r\n    // Sort by distance (furthest first)\r\n    newPositions.sort((a, b) => b.distance - a.distance);\r\n\r\n    // Choose either furthest or second furthest\r\n    const chooseSecondFurthest = Random.rand() < 0.3;\r\n    const chosenPosition =\r\n      chooseSecondFurthest && newPositions.length > 1\r\n        ? newPositions[1].position\r\n        : newPositions[0].position;\r\n\r\n    const targetX = chosenPosition.x;\r\n    const targetY = chosenPosition.y;\r\n\r\n    // Try to move to the target position\r\n    this.tryMove(targetX, targetY);\r\n    this.setDrawXY(oldX, oldY);\r\n\r\n    // If the move was successful, update direction and drawing\r\n    if (this.x !== oldX || this.y !== oldY) {\r\n      // Set direction based on actual movement\r\n      const dx = this.x - oldX;\r\n      const dy = this.y - oldY;\r\n\r\n      if (dx > 0) {\r\n        this.direction = Direction.RIGHT;\r\n      } else if (dx < 0) {\r\n        this.direction = Direction.LEFT;\r\n      } else if (dy > 0) {\r\n        this.direction = Direction.DOWN;\r\n      } else if (dy < 0) {\r\n        this.direction = Direction.UP;\r\n      }\r\n\r\n      this.setDrawXY(targetX, targetY);\r\n    } else {\r\n      // If we couldn't move away, just wander\r\n      this.wander();\r\n    }\r\n  };\r\n\r\n  startHurting = () => {\r\n    this.hurting = true;\r\n    this.hurtFrame += 15;\r\n    this.shadeColor = \"#FF0000\";\r\n    this.shadeMultiplier = 1.5;\r\n  };\r\n\r\n  stopHurting = () => {\r\n    this.hurting = false;\r\n    this.hurtFrame = 0;\r\n    this.shadeColor = \"#000000\";\r\n  };\r\n\r\n  interact = (player: Player) => {};\r\n\r\n  handleEnemyCase = (playerHitBy?: Player) => {};\r\n\r\n  playHitSound = () => {\r\n    if (this.hitSound) Sound.delayPlay(this.hitSound, 50);\r\n  };\r\n\r\n  createHitParticles = (particleX?: number, particleY?: number) => {\r\n    if (this.cloned) return;\r\n    if (!this.hasHitParticles) return;\r\n    if (!particleX) particleX = this.imageParticleX;\r\n    if (!particleY) particleY = this.imageParticleY;\r\n    ImageParticle.spawnCluster(\r\n      this.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      particleX,\r\n      particleY,\r\n    );\r\n  };\r\n\r\n  protected dropLoot = () => {\r\n    let coordX: number;\r\n    let coordY: number;\r\n    if (this.crushed) {\r\n      coordX = this.lastX;\r\n      coordY = this.lastY;\r\n    } else {\r\n      coordX = this.x;\r\n      coordY = this.y;\r\n    }\r\n\r\n    if (this.drops.length === 0 && this.isEnemy) {\r\n      this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n    if (this.drops.length > 0) {\r\n      // Consider all non-solid tiles within the entity's footprint (handles big enemies)\r\n      const candidates: { x: number; y: number }[] = [];\r\n      for (let dx = 0; dx < this.w; dx++) {\r\n        for (let dy = 0; dy < this.h; dy++) {\r\n          const tx = coordX + dx;\r\n          const ty = coordY + dy;\r\n          if (\r\n            this.room.roomArray[tx] &&\r\n            this.room.roomArray[tx][ty] &&\r\n            !this.room.roomArray[tx][ty].isSolid()\r\n          ) {\r\n            candidates.push({ x: tx, y: ty });\r\n          }\r\n        }\r\n      }\r\n\r\n      // If no valid candidate tiles found, fall back to origin if it's valid\r\n      if (\r\n        candidates.length === 0 &&\r\n        this.room.roomArray[coordX] &&\r\n        this.room.roomArray[coordX][coordY] &&\r\n        !this.room.roomArray[coordX][coordY].isSolid()\r\n      ) {\r\n        candidates.push({ x: coordX, y: coordY });\r\n      }\r\n\r\n      const used = new Set<string>();\r\n\r\n      // Choose a random starting tile among candidates, then place subsequent drops on the next tiles\r\n      const startIndex =\r\n        candidates.length > 0\r\n          ? Math.floor(Random.rand() * candidates.length)\r\n          : 0;\r\n\r\n      this.drops.forEach((drop, index) => {\r\n        drop.level = this.room;\r\n        if (candidates.length > 0) {\r\n          const pos = candidates[(startIndex + index) % candidates.length];\r\n          drop.x = pos.x;\r\n          drop.y = pos.y;\r\n          used.add(`${pos.x},${pos.y}`);\r\n        } else if (\r\n          this.room.roomArray[coordX] &&\r\n          this.room.roomArray[coordX][coordY] &&\r\n          !this.room.roomArray[coordX][coordY].isSolid()\r\n        ) {\r\n          drop.x = coordX;\r\n          drop.y = coordY;\r\n          used.add(`${coordX},${coordY}`);\r\n        }\r\n        this.room.items.push(drop);\r\n        drop.onDrop();\r\n        if (this.name !== \"chest\") drop.autoPickup();\r\n      });\r\n\r\n      // For big enemies, drop coins on any remaining footprint tiles not chosen above\r\n      if (this.isEnemy && (this.w > 1 || this.h > 1) && candidates.length > 0) {\r\n        const remaining = candidates.filter((p) => !used.has(`${p.x},${p.y}`));\r\n        remaining.forEach((p) => {\r\n          const coin = new Coin(this.room, p.x, p.y);\r\n          coin.level = this.room;\r\n          this.room.items.push(coin);\r\n          coin.onDrop();\r\n          if (this.name !== \"chest\") coin.autoPickup();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  kill = (player?: Player) => {\r\n    this.dead = true;\r\n\r\n    if (this.cloned) return;\r\n\r\n    this.emitEnemyKilled();\r\n    this.dropLoot();\r\n\r\n    const deadEntity = this.clone();\r\n\r\n    this.room.deadEntities.push(deadEntity);\r\n    //this.room.entities = this.room.entities.filter((e) => e !== this);\r\n    this.removeLightSource(this.lightSource);\r\n\r\n    this.uniqueKillBehavior();\r\n  };\r\n\r\n  uniqueKillBehavior = () => {};\r\n\r\n  updateHurtFrame = (delta: number) => {\r\n    if (this.hurting) {\r\n      this.hurtFrame -= delta;\r\n      if (this.hurtFrame < 0) {\r\n        this.stopHurting();\r\n      }\r\n    }\r\n  };\r\n\r\n  shadeAmount = () => {\r\n    if (\r\n      GameConstants.SMOOTH_LIGHTING &&\r\n      !GameConstants.SHADE_INLINE_IN_ENTITY_LAYER\r\n    )\r\n      return 0;\r\n    if (!this.room.softVis[this.x]) return 0;\r\n    let softVis = this.room.softVis[this.x][this.y] * 1;\r\n    if (this.shadeMultiplier > 1) return Math.min(1, softVis);\r\n    return softVis;\r\n  };\r\n\r\n  updateShadeColor = (delta: number) => {\r\n    if (this.shadeMultiplier > 1) this.shadeMultiplier -= 0.01 * delta;\r\n    if (this.shadeMultiplier < 1) this.shadeMultiplier = 1;\r\n    let updated = false;\r\n\r\n    // Convert hex color to RGB\r\n    const hexToRgb = (hex: string): [number, number, number] => {\r\n      const bigint = parseInt(hex.slice(1), 16);\r\n      const r = (bigint >> 16) & 255;\r\n      const g = (bigint >> 8) & 255;\r\n      const b = bigint & 255;\r\n      return [r, g, b];\r\n    };\r\n    // Convert RGB to hex color\r\n    const rgbToHex = (rgb: [number, number, number]): string => {\r\n      const [r, g, b] = rgb;\r\n      return (\r\n        \"#\" +\r\n        ((1 << 24) + (r << 16) + (g << 8) + b)\r\n          .toString(16)\r\n          .slice(1)\r\n          .toUpperCase()\r\n      );\r\n    };\r\n\r\n    const [softR, softG, softB] = hexToRgb(this.softShadeColor);\r\n    const [targetR, targetG, targetB] = hexToRgb(this.shadeColor);\r\n\r\n    // Calculate differences\r\n    let diffR = softR - targetR;\r\n    let diffG = softG - targetG;\r\n    let diffB = softB - targetB;\r\n\r\n    let flagR = false;\r\n    let flagG = false;\r\n    let flagB = false;\r\n    if (Math.abs(diffR) > 1) flagR = true;\r\n    if (Math.abs(diffG) > 1) flagG = true;\r\n    if (Math.abs(diffB) > 1) flagB = true;\r\n\r\n    if (!flagR && !flagG && !flagB) {\r\n      return this.softShadeColor;\r\n    }\r\n\r\n    let softShadeRgb = [softR, softG, softB];\r\n\r\n    // Apply smoothing similar to fadeLighting\r\n    if (flagR) {\r\n      diffR *= 0.1 * delta;\r\n      softShadeRgb[0] = this.room.clamp(Math.round(softR - diffR), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (flagG) {\r\n      diffG *= 0.1 * delta;\r\n      softShadeRgb[1] = this.room.clamp(Math.round(softG - diffG), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (flagB) {\r\n      diffB *= 0.1 * delta;\r\n      softShadeRgb[2] = this.room.clamp(Math.round(softB - diffB), 0, 255);\r\n      updated = true;\r\n    }\r\n\r\n    if (updated) {\r\n      this.softShadeColor = rgbToHex(softShadeRgb as [number, number, number]);\r\n    }\r\n\r\n    return this.softShadeColor;\r\n  };\r\n\r\n  emitEnemyKilled = () => {\r\n    let depthMultiplier = 1.5 ** this.room.depth; //Math.log((this.room.depth + 1) * 5);\r\n    console.log(depthMultiplier);\r\n\r\n    let multiplier = 1;\r\n    if (this.isEnemy) multiplier = 5;\r\n    const xp = Math.ceil(this.defaultMaxHealth * multiplier * depthMultiplier);\r\n    if (!this.isEnemy) return;\r\n    globalEventBus.emit(EVENTS.ENEMY_KILLED, {\r\n      enemyId: this.name,\r\n      xp: xp,\r\n    });\r\n    const player = this.getPlayer();\r\n    if (!player) return;\r\n\r\n    if (GameConstants.XP_POPUP_ENABLED) {\r\n      setTimeout(() => {\r\n        this.room.particles.push(new XPPopup(this.room, this.x, this.y, xp));\r\n      }, 350);\r\n    }\r\n  };\r\n\r\n  doneMoving = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\r\n  };\r\n\r\n  nearestPlayer = (): [number, Player] | false => {\r\n    const maxDistance = 138291380921; // pulled this straight outta my ass\r\n    let closestDistance = maxDistance;\r\n    let closestPlayer = null;\r\n    for (const i in this.game.players) {\r\n      if (this.game.rooms[this.game.players[i].levelID] === this.room) {\r\n        let distance = this.playerDistance(this.game.players[i]);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestPlayer = this.game.players[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closestDistance === maxDistance) return false;\r\n    else return [closestDistance, closestPlayer];\r\n  };\r\n\r\n  playerDistance = (player: Player): number => {\r\n    return Math.max(Math.abs(this.x - player.x), Math.abs(this.y - player.y));\r\n  };\r\n\r\n  closestTile = (player: Player) => {\r\n    let closestTile = { x: 0, y: 0 };\r\n    let closestDistance = 1000000;\r\n    for (let x = 0; x < this.w; x++) {\r\n      for (let y = 0; y < this.h; y++) {\r\n        let distance =\r\n          Math.abs(player.x - (this.x + x)) + Math.abs(player.y - (this.y + y));\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestTile = { x: this.x + x, y: this.y + y };\r\n        }\r\n      }\r\n    }\r\n    return closestTile;\r\n  };\r\n\r\n  facePlayer = (player: Player) => {\r\n    // For 1x1 entities, use the existing perfect logic\r\n    if (this.w === 1 && this.h === 1) {\r\n      const entityCenterX = this.x + 0.5;\r\n      const entityCenterY = this.y + 0.5;\r\n\r\n      let dx = player.x - entityCenterX;\r\n      let dy = player.y - entityCenterY;\r\n\r\n      if (Math.abs(dx) === Math.abs(dy)) {\r\n        // just moved, already facing player\r\n      } else if (Math.abs(dx) > Math.abs(dy)) {\r\n        if (dx > 0) this.direction = Direction.RIGHT;\r\n        if (dx < 0) this.direction = Direction.LEFT;\r\n      } else {\r\n        if (dy > 0) this.direction = Direction.DOWN;\r\n        if (dy < 0) this.direction = Direction.UP;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // For bigger entities, check if player shares any row or column\r\n    const sharesRow = player.y >= this.y && player.y < this.y + this.h;\r\n    const sharesColumn = player.x >= this.x && player.x < this.x + this.w;\r\n\r\n    // If sharing both row and column, player is overlapping - don't change direction\r\n    if (sharesRow && sharesColumn) {\r\n      return;\r\n    }\r\n    const closestTile = this.closestTile(player);\r\n\r\n    let dx = player.x - closestTile.x;\r\n    let dy = player.y - closestTile.y;\r\n\r\n    if (Math.abs(dx) > Math.abs(dy)) {\r\n      if (dx > 0) this.direction = Direction.RIGHT;\r\n      if (dx < 0) this.direction = Direction.LEFT;\r\n    } else {\r\n      if (dy > 0) this.direction = Direction.DOWN;\r\n      if (dy < 0) this.direction = Direction.UP;\r\n    }\r\n  };\r\n\r\n  animateDying = (delta: number) => {\r\n    if (this.cloned) {\r\n      //this.frame = 0;\r\n      this.dyingFrame -= delta / 3;\r\n      this.alpha = Math.max(0, this.alpha - delta / 50);\r\n\r\n      if (this.dyingFrame <= 0) {\r\n        this.dead = true;\r\n        this.dying = false;\r\n        this.uniqueKillBehavior();\r\n        this.room.clearDeadStuff();\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    this.updateDrawXY(delta);\r\n    if (this.hasShadow) {\r\n      this.drawShadow(delta);\r\n    }\r\n    /*\r\n    Game.drawMob(\r\n      0,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x - this.drawX,\r\n      this.y - this.drawY,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    */\r\n    Game.drawMob(\r\n      this.tileX,\r\n      this.tileY + this.direction * 2,\r\n      1,\r\n      2,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY,\r\n      1,\r\n      2,\r\n      this.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    /*if (this.crushed) {\r\n      this.crushAnim(delta);\r\n    }*/\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n\r\n  // Draw a soft blurred shadow under the entity using the shared Shadow utility\r\n  drawShadow = (delta: number) => {\r\n    if (this.cloned) return;\r\n    Shadow.draw(this.x - this.drawX, this.y - this.drawY, this.w, this.h);\r\n  };\r\n\r\n  tick = () => {\r\n    this.behavior();\r\n    if (this.shielded) this.shield.updateLightSourcePos();\r\n  };\r\n\r\n  emitEntityData = (): void => {\r\n    globalEventBus.emit(\"EntityData\", {\r\n      name: this.name,\r\n      location: { x: this.x, y: this.y },\r\n    });\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    //this.updateDrawXY(delta);\r\n\r\n    this.drawableY = this.y - this.drawY;\r\n\r\n    this.healthBar.draw(\r\n      delta,\r\n      this.health,\r\n      this.maxHealth,\r\n      this.x,\r\n      this.y,\r\n      true,\r\n    );\r\n  };\r\n\r\n  drawSleepingZs = (delta: number, offsetX = 0, offsetY = 0) => {\r\n    this.sleepingZFrame += delta;\r\n\r\n    let numZs = 2;\r\n    let t = this.sleepingZFrame * 0.01; // 0 <= t < 1\r\n    t -= Math.floor(t);\r\n    //let whichway = Math.floor(this.sleepingZFrame * 0.02 / numZs) % 2;\r\n    for (let off = numZs - 1; off >= 0; off--) {\r\n      let yoff = (t + off) * 7;\r\n      let alpha = Math.min(1 - (t + off) / numZs, (2 * (t + off)) / numZs);\r\n\r\n      let xoff = 0;\r\n      if (off === 0) xoff = 1;\r\n      if (t >= 0.33 && t < 0.66) xoff = off;\r\n      if (t >= 0.33 && t < 0.66) xoff = off;\r\n\r\n      let width = Game.measureText(\"Z\").width;\r\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = alpha;\r\n      Game.fillTextOutline(\r\n        \"Z\",\r\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + xoff + offsetX,\r\n        (this.y - 0.6) * GameConstants.TILESIZE - yoff + offsetY,\r\n        GameConstants.OUTLINE,\r\n        \"white\",\r\n      );\r\n      Game.ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  drawExclamation = (delta: number, offsetX = 0, offsetY = 0) => {\r\n    this.exclamationFrame += delta;\r\n\r\n    let yoff: number | false = 0;\r\n    let yoffs: Array<number | false> = [0, -1, -2, -3, -5, -7, -4];\r\n    if (this.exclamationFrame > yoffs.length) yoff = yoffs[yoffs.length - 1];\r\n    else yoff = yoffs[this.exclamationFrame];\r\n\r\n    let width = Game.measureText(\"!\").width;\r\n    Game.ctx.globalAlpha = 1;\r\n    if (yoff !== false) {\r\n      Game.fillTextOutline(\r\n        \"!\",\r\n        (this.x + 0.5) * GameConstants.TILESIZE - width / 2 + offsetX,\r\n        (this.y - 0.75) * GameConstants.TILESIZE + yoff + offsetY,\r\n        GameConstants.OUTLINE,\r\n        GameConstants.WARNING_RED,\r\n      );\r\n    }\r\n  };\r\n\r\n  crush = () => {\r\n    this.crushed = true;\r\n    let player: Player;\r\n    for (let i in this.game.players) {\r\n      player = this.game.players[i];\r\n    }\r\n    if (this.x == player.x) {\r\n      this.crushVertical = true;\r\n    }\r\n    this.kill();\r\n  };\r\n\r\n  crushAnim = (delta: number) => {\r\n    if (this.crushVertical && this.crushY >= 0) {\r\n      this.crushY *= 0.95;\r\n    } else if (this.crushX >= 0) {\r\n      this.crushX *= 0.95;\r\n    }\r\n  };\r\n  //set rumbling in the tick function for the enemies\r\n  //create variables for the rumbling x and y offsets\r\n  //return the rumbling x and y offsets\r\n  //add the rumbling x and y offsets to the enemy's x and y in the draw function\r\n  rumble = (rumbling: boolean, frame: number, direction?: Direction) => {\r\n    let rumbleOffset = { x: 0, y: 0 };\r\n\r\n    if (rumbling) {\r\n      const isOddFrame = Math.floor(frame) % 2 === 1;\r\n      const offset = isOddFrame ? 0.0325 : 0;\r\n\r\n      if (direction === Direction.LEFT || direction === Direction.RIGHT) {\r\n        rumbleOffset.y = offset;\r\n      } else if (\r\n        direction === Direction.UP ||\r\n        direction === Direction.DOWN ||\r\n        !direction\r\n      ) {\r\n        rumbleOffset.x = offset;\r\n      }\r\n      this.animationSpeed = 0.2;\r\n    }\r\n    return rumbleOffset;\r\n  };\r\n\r\n  attemptProjectilePlacement = (\r\n    offsets: { x: number; y: number }[],\r\n    projectileClass: new (parent: Entity, x: number, y: number) => Projectile,\r\n    collide: boolean = false,\r\n    clearPath: boolean = true,\r\n    targetingPlayer: boolean = false,\r\n  ) => {\r\n    for (const offset of offsets) {\r\n      const targetX = this.x + offset.x;\r\n      const targetY = this.y + offset.y;\r\n\r\n      if (\r\n        !this.isValidProjectilePosition(targetX, targetY, collide, clearPath)\r\n      ) {\r\n        if (targetingPlayer) break;\r\n        continue;\r\n      }\r\n\r\n      this.placeProjectile(projectileClass, targetX, targetY);\r\n\r\n      if (targetingPlayer) break;\r\n    }\r\n  };\r\n\r\n  private isValidProjectilePosition = (\r\n    x: number,\r\n    y: number,\r\n    collide: boolean,\r\n    clearPath: boolean,\r\n  ): boolean => {\r\n    if (!this.isWithinRoomBounds(x, y)) return false;\r\n    if (clearPath && !this.isPathClear(this.x, this.y, x, y)) return false;\r\n    if (collide && this.isEntityColliding(x, y)) return false;\r\n\r\n    const targetTile = this.room.roomArray[x][y];\r\n    return targetTile && !targetTile.isSolid() && !targetTile.isDoor;\r\n  };\r\n\r\n  private isEntityColliding = (x: number, y: number): boolean => {\r\n    return this.room.entities.some(\r\n      (entity) => entity.x === x && entity.y === y,\r\n    );\r\n  };\r\n\r\n  private placeProjectile = (\r\n    projectileClass: new (\r\n      parent: Entity,\r\n      x: number,\r\n      y: number,\r\n      color?: [number, number, number],\r\n    ) => Projectile,\r\n    x: number,\r\n    y: number,\r\n    color?: [number, number, number],\r\n  ) => {\r\n    this.room.projectiles.push(new projectileClass(this, x, y, color));\r\n  };\r\n\r\n  isPathClear = (\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ): boolean => {\r\n    const dx = Math.sign(endX - startX);\r\n    const dy = Math.sign(endY - startY);\r\n    let x = startX;\r\n    let y = startY;\r\n\r\n    while (x !== endX || y !== endY) {\r\n      x += dx;\r\n      y += dy;\r\n      if (\r\n        !this.isWithinRoomBounds(x, y) ||\r\n        this.room.roomArray[x][y]?.isSolid()\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  calculateProjectileOffsets(\r\n    targetX: number,\r\n    targetY: number,\r\n    attackLength: number,\r\n  ): { x: number; y: number }[] {\r\n    const dx = targetX - this.x;\r\n    const dy = targetY - this.y;\r\n    let offsets = [];\r\n\r\n    // Normalize the direction\r\n    const stepX = dx !== 0 ? Math.sign(dx) : 0;\r\n    const stepY = dy !== 0 ? Math.sign(dy) : 0;\r\n\r\n    // Generate offsets for the full attackLength\r\n    for (let i = 1; i <= attackLength; i++) {\r\n      offsets.push({ x: i * stepX, y: i * stepY });\r\n    }\r\n\r\n    return offsets;\r\n  }\r\n\r\n  getLuminance = (): number => {\r\n    if (this.room.roomArray[this.x][this.y]) {\r\n      return this.room.vis[this.x][this.y];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  getAverageLuminance = (): number => {\r\n    let total = 0;\r\n    let count = 0;\r\n    for (let x = this.x - 2; x <= this.x + 2; x++) {\r\n      if (this.room.roomArray[x] && this.room.roomArray[x][this.y]) {\r\n        for (let y = this.y - 2; y <= this.y + 2; y++) {\r\n          if (this.room.vis[x][y]) {\r\n            total += this.room.vis[x][y];\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return total / count;\r\n  };\r\n\r\n  getOpenTile = (): { x: number; y: number } => {\r\n    let x, y;\r\n    do {\r\n      x = Math.floor(Random.rand() * 3 + this.x - 1);\r\n      y = Math.floor(Random.rand() * 3 + this.y - 1);\r\n    } while (\r\n      (x === this.x && y === this.y) ||\r\n      this.room.roomArray[x][y].isSolid() ||\r\n      this.room.roomArray[x][y] instanceof DownLadder ||\r\n      this.room.roomArray[x][y] instanceof Door ||\r\n      this.room.roomArray[x][y] instanceof Wall ||\r\n      this.room.entities.some((e) => e.x === x && e.y === y)\r\n    );\r\n\r\n    if (!x || !y) return { x: this.x, y: this.y };\r\n    return { x, y };\r\n  };\r\n\r\n  makeBigHitWarnings = () => {\r\n    switch (this.direction) {\r\n      case Direction.LEFT:\r\n        this.makeHitWarnings(this.x, this.y);\r\n        this.makeHitWarnings(this.x, this.y + 1);\r\n        break;\r\n      case Direction.RIGHT:\r\n        this.makeHitWarnings(this.x + 1, this.y);\r\n        this.makeHitWarnings(this.x + 1, this.y + 1);\r\n        break;\r\n      case Direction.UP:\r\n        this.makeHitWarnings(this.x, this.y);\r\n        this.makeHitWarnings(this.x + 1, this.y);\r\n        break;\r\n      case Direction.DOWN:\r\n        this.makeHitWarnings(this.x, this.y + 1);\r\n        this.makeHitWarnings(this.x + 1, this.y + 1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  makeHitWarnings = (\r\n    hx: number = this.x,\r\n    hy: number = this.y,\r\n    arrowsOnly: boolean = false,\r\n    directionOverride: null | \"diagonal\" | \"orthogonal\" | \"forward\" = null,\r\n  ) => {\r\n    if (this.unconscious) return;\r\n    const player: Player = this.getPlayer();\r\n    const isPlayerOnTile = player.x === hx && player.y === hy;\r\n    const cullFactor = isPlayerOnTile ? 0 : 0.45;\r\n\r\n    let orthogonal = this.orthogonalAttack;\r\n    let diagonal = this.diagonalAttack;\r\n    let forwardOnly = this.forwardOnlyAttack;\r\n    const direction = this.direction;\r\n    const orthoRange = this.attackRange;\r\n    const diagRange = this.diagonalAttackRange;\r\n\r\n    switch (directionOverride) {\r\n      case \"diagonal\":\r\n        diagonal = true;\r\n        orthogonal = false;\r\n        forwardOnly = false;\r\n        break;\r\n      case \"orthogonal\":\r\n        orthogonal = true;\r\n        diagonal = false;\r\n        forwardOnly = false;\r\n        break;\r\n      case \"forward\":\r\n        forwardOnly = true;\r\n        orthogonal = true;\r\n        diagonal = false;\r\n        break;\r\n    }\r\n\r\n    const generateOffsets = (\r\n      isOrthogonal: boolean,\r\n      range: number,\r\n    ): number[][] => {\r\n      const baseOffsets = isOrthogonal\r\n        ? [\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [0, 1],\r\n          ]\r\n        : [\r\n            [-1, -1],\r\n            [1, 1],\r\n            [1, -1],\r\n            [-1, 1],\r\n          ];\r\n      return baseOffsets.flatMap(([dx, dy]) =>\r\n        Array.from({ length: range }, (_, i) => [(i + 1) * dx, (i + 1) * dy]),\r\n      );\r\n    };\r\n\r\n    const directionOffsets = {\r\n      [Direction.LEFT]: [-1, 0],\r\n      [Direction.RIGHT]: [1, 0],\r\n      [Direction.UP]: [0, -1],\r\n      [Direction.DOWN]: [0, 1],\r\n    };\r\n\r\n    let offsets: number[][] = [];\r\n    if (forwardOnly) {\r\n      const [dx, dy] = directionOffsets[direction];\r\n      offsets = Array.from({ length: orthoRange }, (_, i) => [\r\n        (i + 1) * dx,\r\n        (i + 1) * dy,\r\n      ]);\r\n    } else {\r\n      if (orthogonal) offsets.push(...generateOffsets(true, orthoRange));\r\n      if (diagonal) offsets.push(...generateOffsets(false, diagRange));\r\n    }\r\n\r\n    const warningCoordinates = offsets\r\n      .map(([dx, dy]) => ({\r\n        x: dx,\r\n        y: dy,\r\n        distance: Utils.distance(dx, dy, player.x - hx, player.y - hy),\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance);\r\n\r\n    const keepCount = Math.ceil(warningCoordinates.length * (1 - cullFactor));\r\n    const culledWarnings = warningCoordinates.slice(0, keepCount);\r\n\r\n    culledWarnings.forEach(({ x, y }) => {\r\n      const targetX = hx + x;\r\n      const targetY = hy + y;\r\n      if (this.isWithinRoomBounds(targetX, targetY)) {\r\n        const hitWarning = new HitWarning(\r\n          this.game,\r\n          targetX,\r\n          targetY,\r\n          hx,\r\n          hy,\r\n          true,\r\n          arrowsOnly,\r\n          this,\r\n        );\r\n        this.room.hitwarnings.push(hitWarning);\r\n        //this.hitWarnings.push(hitWarning);\r\n      }\r\n    });\r\n  };\r\n\r\n  isWithinRoomBounds = (x: number, y: number): boolean => {\r\n    const xInBounds =\r\n      x >= this.room.roomX && x < this.room.roomX + this.room.width;\r\n    const yInBounds =\r\n      y >= this.room.roomY && y < this.room.roomY + this.room.height;\r\n    const tileExists =\r\n      this.room.roomArray[x] && this.room.roomArray[x][y] !== undefined;\r\n\r\n    return xInBounds && yInBounds && tileExists;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { WeaponFragments } from \"../../item/usable/weaponFragments\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class Barrel extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 1;\r\n    this.tileY = 0;\r\n    this.hasShadow = true;\r\n    this.pushable = true;\r\n    this.name = \"barrel\";\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 25;\r\n    if (Random.rand() < 0.1) {\r\n      this.drops.push(new WeaponFragments(this.room, this.x, this.y));\r\n    } else {\r\n      this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\nexport class Block extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 10;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    //this.pushable = true;\r\n    this.name = \"block\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n    this.opaque = true;\r\n    //this.hitSound = Sound.breakRock;\r\n    if (Random.rand() < 0.01)\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n    Sound.delayPlay(Sound.breakRock, 50);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\nimport { WizardFireball } from \"../../projectile/wizardFireball\";\r\nimport { WizardEnemy } from \"../enemy/wizardEnemy\";\r\nimport { Lighting } from \"../../lighting/lighting\";\r\nimport { PlayerFireball } from \"../../projectile/playerFireball\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Explosion } from \"../../projectile/explosion\";\r\nimport { Utils } from \"../../utility/utils\";\r\n\r\nexport class Bomb extends Entity {\r\n  fuseLength: number = 4;\r\n  lit: boolean = false;\r\n  playerHitBy: Player | null = null;\r\n  fuseSound: HTMLAudioElement;\r\n  soundPaused: boolean = false;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 15;\r\n    this.tileY = 4;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"bomb\";\r\n    this.frame = 0;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"yellow\";\r\n    this.bloomAlpha = 0;\r\n    this.bloomSize = 1;\r\n    this.bloomOffsetY = -1;\r\n    this.health = 1;\r\n    this.hitSound = Sound.potSmash;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 29;\r\n    this.createLightSource();\r\n    this.playerHitBy = null;\r\n    this.fuseSound = Sound.fuseLoopSound;\r\n    this.soundPaused = false;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n\r\n    //this.room.addEntity(new Explosion(this.room, this.game, this.x, this.y));\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.lit) {\r\n      this.fuseLength--;\r\n      //if (this.fuseLength < 3 && this.fuseLength > 0)\r\n      if (this.fuseLength <= 0) {\r\n        // Sound.playFuse();\r\n        this.fuseLength = 0;\r\n        Sound.stopSound(this.fuseSound);\r\n        this.explode();\r\n        Sound.playBomb();\r\n      }\r\n    }\r\n  };\r\n\r\n  createLightSource = () => {\r\n    if (!this.lit) return;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      3,\r\n      [200, 200, 30],\r\n      0.75,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n    this.bloomAlpha = 1;\r\n    this.hasBloom = true;\r\n  };\r\n\r\n  hurt = (playerHitBy: Player, damage: number) => {\r\n    if (!this.lit) {\r\n      this.lit = true;\r\n      this.createLightSource();\r\n      this.playerHitBy = playerHitBy;\r\n      Sound.playFuse();\r\n    }\r\n  };\r\n\r\n  explode = () => {\r\n    Sound.stopSound(this.fuseSound);\r\n    for (let x = this.x - 2; x < this.x + 3; x++) {\r\n      for (let y = this.y - 2; y < this.y + 3; y++) {\r\n        if (\r\n          this.room.pointExists(x, y) &&\r\n          !this.room.roomArray[x][y].isSolid() &&\r\n          Utils.distance(this.x, this.y, x, y) < 2.5\r\n        ) {\r\n          const explosion = new Explosion(this, x, y, this.playerHitBy);\r\n          this.room.projectiles.push(explosion);\r\n        }\r\n      }\r\n    }\r\n    this.health = 0;\r\n    Lighting.momentaryLight(\r\n      this.room,\r\n      this.x,\r\n      this.y,\r\n      7,\r\n      [200, 200, 50],\r\n      250,\r\n      50,\r\n      0,\r\n    );\r\n\r\n    GenericParticle.spawnCluster(\r\n      this.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      \"white\",\r\n    );\r\n    this.kill();\r\n\r\n    setTimeout(() => {\r\n      this.game.shakeScreen(\r\n        (Random.rand() - 0.5) * 5,\r\n        (Random.rand() - 0.5) * 0,\r\n        false,\r\n      );\r\n    }, 100);\r\n\r\n    this.game.shakeScreen(0, 20, false);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    this.frame += delta;\r\n    if (this.health === 0) {\r\n      this.frame = 0;\r\n    }\r\n    if (this.frame > 20) this.frame = 0;\r\n    this.bloomAlpha = (this.frame / 10) % 2 === 0 ? 1 : 0.5;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      if (this.lit) {\r\n        Game.drawObj(\r\n          this.tileX +\r\n            6 -\r\n            Math.min(3, this.fuseLength) * 2 +\r\n            (Math.floor(this.frame / 10) % 2),\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawYOffset - this.drawY,\r\n          1,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      } else {\r\n        Game.drawObj(\r\n          this.tileX - 1,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          this.x - this.drawX,\r\n          this.y - this.drawYOffset - this.drawY,\r\n          1,\r\n          2,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n      }\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Bush extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 19;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"bush\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 28;\r\n    this.opaque = true;\r\n    this.hitSound = Sound.playBush;\r\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        2,\r\n        2,\r\n        this.x - this.drawX - 0.5,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        2,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Entity } from \"../entity\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Player } from \"../../player/player\";\r\nimport { ChestLayer } from \"./chestLayer\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Chest extends Entity {\r\n  frame: number;\r\n  opening: boolean;\r\n  dropX: number;\r\n  dropY: number;\r\n  layer: ChestLayer;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 4;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"chest\";\r\n    this.frame = 0;\r\n    this.opening = false;\r\n    this.dropX = 0;\r\n    this.dropY = 0;\r\n    this.drop = null;\r\n    this.destroyable = false;\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n    this.interactable = true;\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 26;\r\n    /*\r\n    this.layer = new ChestLayer(\r\n      this.room,\r\n      this.game,\r\n      this.x,\r\n      this.y,\r\n    );\r\n    this.room.entities.push(this.layer);\r\n    */\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.CHEST;\r\n  }\r\n\r\n  interact = (playerHitBy: Player) => {\r\n    if (this.health === 3 && !this.opening) {\r\n      this.health -= 1;\r\n      this.open();\r\n      return;\r\n    }\r\n\r\n    if (this.health !== 2) return;\r\n\r\n    // Try to pick up items\r\n    const pickedUpDrop = this.drops.find((drop) => {\r\n      drop.onPickup(playerHitBy);\r\n      return drop.pickedUp;\r\n    });\r\n\r\n    if (pickedUpDrop) {\r\n      this.drops = this.drops.filter((d) => d !== pickedUpDrop);\r\n    }\r\n\r\n    const full = playerHitBy.inventory.isFull();\r\n    if (this.drops.length === 0 || full) {\r\n      this.health -= 1;\r\n      this.destroyable = true;\r\n    }\r\n  };\r\n\r\n  private open = () => {\r\n    this.tileX = 0;\r\n    this.tileY = 2;\r\n\r\n    this.opening = true;\r\n    Sound.chest();\r\n\r\n    if (this.drop === null)\r\n      this.getDrop(\r\n        [\"consumable\", \"gem\", \"coin\", \"tool\", \"light\", \"weapon\"],\r\n        true,\r\n      );\r\n\r\n    this.drops.forEach((drop) => {\r\n      if (drop.name === \"coin\") {\r\n        let stack = Game.randTable(\r\n          [\r\n            1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6,\r\n            6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10, 11, 12, 13, 14, 15,\r\n            100,\r\n          ],\r\n          Random.rand,\r\n        );\r\n        if (Random.rand() < 0.01) stack *= Math.ceil(Random.rand() * 10);\r\n        drop.stackCount = stack;\r\n        //drop.stack = stack;\r\n      }\r\n    });\r\n    this.dropLoot();\r\n    this.drops.forEach((drop) => {\r\n      drop.animateFromChest();\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (this.opening) {\r\n      if (this.tileX <= 6) {\r\n        this.tileX += 0.15 * delta;\r\n      } else {\r\n        this.opening = false;\r\n      }\r\n    }\r\n\r\n    if (!this.dead) {\r\n      this.updateDrawXY(delta);\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      Game.drawObj(\r\n        Math.floor(this.tileX),\r\n        Math.floor(this.tileY),\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y - 1;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Entity } from \"../entity\";\r\nimport { Item } from \"../../item/item\";\r\n\r\nexport class ChestLayer extends Entity {\r\n  frame: number;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.x = x;\r\n    this.y = y;\r\n    this.game = game;\r\n    this.room = room;\r\n\r\n    this.frame = 0;\r\n  }\r\n\r\n  setDrawableY = () => {\r\n    for (let i of this.room.items)\r\n      if (i.x === this.x && i.y === this.y)\r\n        this.drawableY ===\r\n          this.room.roomArray[this.x][this.y].drawableY + 0.001;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawableY = this.y - 0.01;\r\n    this.setDrawableY;\r\n    if (!this.dead) {\r\n      Game.drawObj(\r\n        0,\r\n        4,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { WeaponFragments } from \"../../item/usable/weaponFragments\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class Crate extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.maxHealth = 1;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.hasShadow = true;\r\n    this.pushable = true;\r\n    this.name = \"crate\";\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 26;\r\n    if (Random.rand() < 0.1) {\r\n      this.drops.push(new WeaponFragments(this.room, this.x, this.y, 10));\r\n    } else {\r\n      this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { WeaponFragments } from \"../../item/usable/weaponFragments\";\r\nimport { Coin } from \"../../item/coin\";\r\n\r\nexport class DecoBlock extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 1;\r\n    this.tileY = 4;\r\n    this.hasShadow = true;\r\n    this.pushable = true;\r\n    this.name = \"deco block\";\r\n    this.imageParticleX = 3;\r\n    this.imageParticleY = 25;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Fish } from \"../../item/usable/fish\";\r\nimport { statsTracker } from \"../../game/stats\";\r\nimport { XPPopup } from \"../../particle/xpPopup\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\n\r\nexport class FishingSpot extends Entity {\r\n  fishCount: number = 0;\r\n  active: boolean = false;\r\n  startFrame: number = 0;\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 11;\r\n    this.tileY = 0;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"fishing spot\";\r\n    this.fishCount = Math.floor(Random.rand() * 6) - 3;\r\n    this.active = this.fishCount > 0;\r\n    this.startFrame = Math.floor(Random.rand() * 9);\r\n\r\n    //this.hitSound = Sound.potSmash;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 29;\r\n    this.destroyable = false;\r\n    this.interactable = true;\r\n    let dropProb = Random.rand();\r\n    if (dropProb < 0.025) this.drops.push(new Heart(this.room, this.x, this.y));\r\n    else this.drops.push(new Coin(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  fish = (player: Player): void => {\r\n    if (!player.inventory.canFish()) {\r\n      this.game.pushMessage(\"You need a fishing rod to fish.\");\r\n      return;\r\n    }\r\n    if (!this.active) {\r\n      this.game.pushMessage(\"There aren't any fish here.\");\r\n      return;\r\n    }\r\n    this.game.pushMessage(\"Fishing...\");\r\n\r\n    player.busyAnimating = true;\r\n    player.setHitXY(this.x, this.y, 0.5);\r\n    Sound.playFishingCast();\r\n    setTimeout(() => {\r\n      let message = \"\";\r\n      Sound.playFishingReel();\r\n\r\n      if (this.tryFish()) {\r\n        let added = player.inventory.addItem(\r\n          new Fish(this.room, this.x, this.y),\r\n        );\r\n        if (added === false) {\r\n          this.room.items.push(new Fish(this.room, player.x, player.y));\r\n        }\r\n        message = \"You catch a fish.\";\r\n        Sound.playFishingCatch();\r\n        let depthMultiplier = 1.5 ** this.room.depth; //Math.log((this.room.depth + 1) * 5);\r\n        let xp = Math.ceil((Random.rand() * 50 + 100) * depthMultiplier);\r\n        statsTracker.increaseXp(xp);\r\n\r\n        if (GameConstants.XP_POPUP_ENABLED) {\r\n          this.room.particles.push(new XPPopup(this.room, this.x, this.y, xp));\r\n        }\r\n        this.fishCount--;\r\n        if (this.fishCount <= 0) {\r\n          this.active = false;\r\n        }\r\n      } else {\r\n        message = \"You don't catch anything.\";\r\n      }\r\n      this.room.game.pushMessage(message);\r\n      player.busyAnimating = false;\r\n    }, 1200);\r\n\r\n    this.room.tick(player);\r\n  };\r\n\r\n  tryFish = (): boolean => {\r\n    if (Random.rand() < 0.3) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  interact = (player: Player): void => {\r\n    this.fish(player);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead || !this.active) return;\r\n    if (this.startFrame !== 0) {\r\n      this.frame = this.startFrame;\r\n      this.startFrame = 0;\r\n    }\r\n    this.frame += 0.12 * delta;\r\n    if (this.frame >= 9) this.frame = 0;\r\n    Game.drawFX(\r\n      23 + Math.floor(this.frame),\r\n      0,\r\n      1,\r\n      1,\r\n      this.x - this.drawX,\r\n      this.y - this.drawY,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\nimport { Spellbook } from \"../../item/weapon/spellbook\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Torch } from \"../../item/light/torch\";\r\n\r\nexport class Furnace extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 2;\r\n    this.tileY = 4;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"furnace\";\r\n    this.drops.push(new Torch(this.room, this.x, this.y));\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n    this.bloomColor = \"#FFA500\";\r\n    this.hasBloom = true;\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      7,\r\n      [200, 30, 1],\r\n      4,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Mushrooms extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 9;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"mushrooms\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 30;\r\n    this.drops.push(new Shrooms(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Pot extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 11;\r\n    this.tileY = 0;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"pot\";\r\n\r\n    this.hitSound = Sound.potSmash;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 29;\r\n\r\n    let dropProb = Random.rand();\r\n    if (dropProb < 0.025) this.drops.push(new Heart(this.room, this.x, this.y));\r\n    else this.drops.push(new Coin(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class PottedPlant extends Entity {\r\n  drop: Item;\r\n  constructor(room: Room, game: Game, x: number, y: number, drop?: Item) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.tileX = 3;\r\n    this.tileY = 0;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"plant\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 28;\r\n    if (drop) this.drop = drop;\r\n    else {\r\n      let dropProb = Random.rand();\r\n      if (dropProb < 0.025)\r\n        this.drops.push(new Heart(this.room, this.x, this.y));\r\n      else this.drops.push(new Coin(this.room, this.x, this.y));\r\n    }\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  uniqueKillBehavior = () => {\r\n    this.createHitParticles(0, 29);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      if (this.health <= 1 || this.dying) this.tileX = 2;\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\nimport { Spellbook } from \"../../item/weapon/spellbook\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Pumpkin extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 15;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"pumpkin\";\r\n    this.drops.push(new Candle(this.room, this.x, this.y));\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n    this.bloomColor = \"#FFA500\";\r\n    this.hasBloom = true;\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      5,\r\n      [200, 30, 1],\r\n      3,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\n\r\nexport class Sprout extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 1;\r\n    this.tileX = 17;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"sprout\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 28;\r\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - this.drawYOffset - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { EntityType } from \"../entity\";\r\nimport { SkullEnemy } from \"../enemy/skullEnemy\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { EnemySpawnAnimation } from \"../../projectile/enemySpawnAnimation\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Spellbook } from \"../../item/weapon/spellbook\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { LightSource } from \"../../lighting/lightSource\";\r\n\r\nexport class TombStone extends Entity {\r\n  skinType: number;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    skinType: number = 0,\r\n    drop?: Item,\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.skinType = skinType;\r\n    this.room = room;\r\n    this.health = 2;\r\n    //this.maxHealth = 2;\r\n    this.tileX = 11 + this.skinType;\r\n    this.tileY = 2;\r\n    this.hasShadow = true;\r\n    //this.pushable = false;\r\n    //this.destroyable = true;\r\n    //this.skinType = skinType;\r\n    this.chainPushable = false;\r\n    this.name = \"tombstone\";\r\n    let dropProb = Random.rand();\r\n    if (dropProb < 0.25)\r\n      this.drops.push(new Spellbook(this.room, this.x, this.y));\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#05FF05\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      7,\r\n      [5, 150, 5],\r\n      1,\r\n    );\r\n    this.addLightSource(this.lightSource);\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n    Sound.delayPlay(Sound.breakRock, 50);\r\n  };\r\n\r\n  onHurt = (damage: number = 1) => {\r\n    if (this.health === 1) {\r\n      const positions = this.room\r\n        .getEmptyTiles()\r\n        .filter(\r\n          (t) => Math.abs(t.x - this.x) <= 1 && Math.abs(t.y - this.y) <= 1,\r\n        );\r\n      if (positions.length > 0) {\r\n        for (let position of positions) {\r\n          for (const i in this.game.players) {\r\n            const playerX = this.game.players[i].x;\r\n            const playerY = this.game.players[i].y;\r\n            if (\r\n              (playerX !== position.x && playerY === position.y) ||\r\n              (playerX === position.x && playerY !== position.y)\r\n            ) {\r\n              this.room.entities.push(\r\n                new SkullEnemy(this.room, this.game, position.x, position.y),\r\n              );\r\n            }\r\n          }\r\n        }\r\n        Sound.delayPlay(Sound.skeleSpawn, 50);\r\n      }\r\n      this.tileX += 2;\r\n      //draw half broken tombstone based on skintype after it takes one damage\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    this.updateDrawXY(delta);\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    //if (!this.dead || !this.cloned) {{}\r\n    Game.drawObj(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      2,\r\n      this.x - this.drawX,\r\n      this.y - this.drawYOffset - this.drawY,\r\n      1,\r\n      2,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Shrooms } from \"../../item/usable/shrooms\";\r\nimport { EntityType } from \"../entity\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Apple } from \"../../item/usable/apple\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class Tree extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n\r\n    this.tileX = 14;\r\n    this.tileY = 6;\r\n    this.hasShadow = true;\r\n    this.chainPushable = false;\r\n    this.name = \"tree\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 28;\r\n    this.opaque = true;\r\n    this.hitSound = Sound.playBush;\r\n    if (Random.rand() < 0.5)\r\n      this.drops.push(new Apple(this.room, this.x, this.y));\r\n    //this.drawableY = 0.1;\r\n    //this.drops.push(new Shrooms(this.room, this.x, this.y));\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n    Sound.playWood();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.tileX = this.health === 2 ? 14 : 16;\r\n    if (this.cloned === true) this.tileX = 16;\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        2,\r\n        3,\r\n        this.x - this.drawX - 0.5,\r\n        this.y - this.drawYOffset - this.drawY - 1,\r\n        2,\r\n        3,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Entity } from \"../entity\";\r\nimport { Item } from \"../../item/item\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Coin } from \"../../item/coin\";\r\nimport { Coal } from \"../../item/resource/coal\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Shotgun } from \"../../item/weapon/shotgun\";\r\nimport { Dagger } from \"../../item/weapon/dagger\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Spear } from \"../../item/weapon/spear\";\r\nimport { BlueGem } from \"../../item/resource/bluegem\";\r\nimport { DualDagger } from \"../../item/weapon/dualdagger\";\r\nimport { Lantern } from \"../../item/light/lantern\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { Warhammer } from \"../../item/weapon/warhammer\";\r\nimport { Torch } from \"../../item/light/torch\";\r\nimport { Spellbook } from \"../../item/weapon/spellbook\";\r\nimport { Candle } from \"../../item/light/candle\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { FishingRod } from \"../../item/tool/fishingRod\";\r\nimport { Hammer } from \"../../item/tool/hammer\";\r\n\r\nlet OPEN_TIME = 150;\r\nlet FILL_COLOR = \"#5a595b\";\r\nlet OUTLINE_COLOR = \"#292c36\";\r\nlet FULL_OUTLINE = \"white\";\r\n\r\nexport class VendingMachine extends Entity {\r\n  playerOpened: Player;\r\n  open = false;\r\n  openTime = 0;\r\n  costItems: Array<Item>;\r\n  item: Item;\r\n  isInf = false;\r\n  quantity = 1;\r\n  buyAnimAmount = 0;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number, item: Item) {\r\n    super(room, game, x, y);\r\n\r\n    this.destroyable = false;\r\n    this.pushable = false;\r\n    this.chainPushable = false;\r\n    this.interactable = true;\r\n\r\n    this.costItems = [];\r\n    this.item = item;\r\n    this.name = \"vending machine\";\r\n\r\n    if (this.item instanceof Shotgun) {\r\n      this.setCost(3);\r\n    } else if (this.item instanceof Heart) {\r\n      this.setCost(1, [new Coin(room, 0, 0)], [9, 10, 11], 2); // Uses default random cost\r\n    } else if (this.item instanceof Spear) {\r\n      this.setCost(2); // Uses default random cost\r\n    } else if (this.item instanceof Armor) {\r\n      this.setCost(3); // Uses default random cost\r\n    } else if (this.item instanceof DualDagger) {\r\n      this.setCost(3); // Uses default random cost\r\n    } else if (this.item instanceof Lantern) {\r\n      this.setCost(2); // Uses default random cost\r\n    } else if (this.item instanceof Warhammer) {\r\n      this.setCost(2); // Uses default random cost\r\n    } else if (this.item instanceof Spellbook) {\r\n      this.setCost(3); // Uses default random cost\r\n    } else if (this.item instanceof Torch) {\r\n      this.setCost(2); // Uses default random cost\r\n    } else if (this.item instanceof Candle) {\r\n      this.setCost(1, [new Coin(room, 0, 0)], [9, 10, 11], 2);\r\n    } else if (this.item instanceof Pickaxe) {\r\n      this.setCost(1, [new Coin(room, 0, 0)], [Utils.randomNormalInt(15, 25)]);\r\n    } else if (this.item instanceof FishingRod) {\r\n      this.setCost(1, [new Coin(room, 0, 0)], [Utils.randomNormalInt(25, 40)]);\r\n    } else if (this.item instanceof Hammer) {\r\n      this.setCost(1, [new Coin(room, 0, 0)], [Utils.randomNormalInt(15, 25)]);\r\n    }\r\n  }\r\n\r\n  setCost = (\r\n    value: number = 1,\r\n    costItems?: Item[],\r\n    counts?: number[],\r\n    quantity: number = 1,\r\n  ) => {\r\n    //value is arbitrary multiplies the stackcount to adapt to the item\r\n    if (!costItems || !counts) {\r\n      // Default behavior: randomly choose between gems and coins\r\n      const possibleItems = [\r\n        new BlueGem(this.room, 0, 0),\r\n        new GreenGem(this.room, 0, 0),\r\n        new RedGem(this.room, 0, 0),\r\n        new Coin(this.room, 0, 0),\r\n      ];\r\n      const costItem = Game.randTable(possibleItems, Random.rand);\r\n\r\n      if (costItem instanceof Coin) {\r\n        costItem.stackCount = Game.randTable([20, 25, 30], Random.rand);\r\n      } else {\r\n        costItem.stackCount = Game.randTable([1, 2, 3], Random.rand);\r\n      }\r\n      costItem.stackCount *= value;\r\n\r\n      this.costItems = [costItem];\r\n    } else {\r\n      // Original behavior for custom costs\r\n      const randCount = Game.randTable(counts, Random.rand);\r\n      const costItem = Game.randTable(costItems, Random.rand);\r\n      costItem.stackCount = randCount;\r\n      //if (costItem instanceof Coin) {\r\n      //costItem.stackCount *= Game.randTable([9, 10, 11], Random.rand);\r\n      //}\r\n      this.costItems = [costItem];\r\n    }\r\n\r\n    this.quantity = quantity;\r\n  };\r\n\r\n  hoverText = (): string => {\r\n    if (!this.open) return \"Vending Machine\";\r\n    if (this.quantity > 0) return `Buy ${this.item.name}`;\r\n    return `Out of stock`;\r\n  };\r\n\r\n  static isPointInVendingMachineBounds = (\r\n    x: number,\r\n    y: number,\r\n    shop: VendingMachine,\r\n  ): boolean => {\r\n    // First check if this is the currently open vending machine\r\n    if (!shop.open || shop !== shop.playerOpened?.openVendingMachine)\r\n      return false;\r\n\r\n    // Get screen center coordinates\r\n    const screenCenterX = GameConstants.WIDTH / 2;\r\n    const screenCenterY = GameConstants.HEIGHT / 2;\r\n\r\n    // Calculate the offset between player and shop in tile coordinates\r\n    const offsetX = (shop.x - shop.playerOpened.x) * GameConstants.TILESIZE;\r\n    const offsetY = (shop.y - shop.playerOpened.y) * GameConstants.TILESIZE;\r\n\r\n    // Calculate shop's position on screen relative to the centered player\r\n    const shopScreenX = screenCenterX + offsetX;\r\n    const shopScreenY = screenCenterY + offsetY;\r\n\r\n    // Use the same calculations as in drawTopLayer to determine bounds\r\n    let s = 18; // size of box\r\n    let b = 2; // border\r\n    let g = -2; // gap\r\n    let width = (shop.costItems.length + 2) * (s + 2 * b + g) - g;\r\n    let height = s + 2 * b + g - g;\r\n\r\n    // Calculate the center of the vending machine interface\r\n    // Note: The -1.5 adjustment for Y matches what's in drawTopLayer\r\n    let cx = shopScreenX;\r\n    let cy = shopScreenY - 2 * GameConstants.TILESIZE;\r\n\r\n    const leftBound = Math.round(cx - 0.5 * width);\r\n    const rightBound = leftBound + Math.round(width);\r\n    const topBound = Math.round(cy - 0.5 * height);\r\n    const bottomBound = topBound + Math.round(height);\r\n\r\n    // Check if the point is within the bounds of the vending machine UI\r\n    return (\r\n      x >= leftBound && x <= rightBound && y >= topBound && y <= bottomBound\r\n    );\r\n  };\r\n\r\n  get type() {\r\n    return EntityType.PROP;\r\n  }\r\n\r\n  interact = (player: Player) => {\r\n    if (this.isInf || this.quantity > 0) {\r\n      if (this.open) this.playerOpened.openVendingMachine = null;\r\n      this.open = true;\r\n      this.playerOpened = player;\r\n      this.openTime = Date.now();\r\n      if (\r\n        this.playerOpened.openVendingMachine &&\r\n        this.playerOpened.openVendingMachine !== this\r\n      )\r\n        this.playerOpened.openVendingMachine.close();\r\n      this.playerOpened.openVendingMachine = this;\r\n    }\r\n  };\r\n\r\n  close = () => {\r\n    this.open = false;\r\n    this.playerOpened.openVendingMachine = null;\r\n  };\r\n\r\n  space = () => {\r\n    if (this.open) {\r\n      // Check if player can pay\r\n      for (const i of this.costItems) {\r\n        if (!this.playerOpened.inventory.hasItemCount(i)) {\r\n          let numOfItem = 0;\r\n\r\n          if (i instanceof Coin) {\r\n            numOfItem = this.playerOpened.inventory.coinCount();\r\n          } else {\r\n            this.playerOpened.inventory.items.forEach((item) => {\r\n              if (item instanceof i.constructor) {\r\n                numOfItem += item.stackCount;\r\n              }\r\n            });\r\n          }\r\n\r\n          const difference = this.costItems[0].stackCount - numOfItem;\r\n\r\n          const pluralLetter = this.costItems[0].stackCount > 1 ? \"s\" : \"\";\r\n\r\n          this.game.pushMessage(\r\n            `You need ${difference} more ${(this.costItems[0].constructor as any).itemName}${pluralLetter} to buy that. `,\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create the new item instance\r\n      let newItem = new (this.item.constructor as any)(\r\n        this.room,\r\n        this.x,\r\n        this.y,\r\n      );\r\n      //     newItem = newItem.constructor(this.room, this.x, this.y);\r\n\r\n      // **Attempt to add the item directly to the player's inventory**\r\n      const addedSuccessfully = this.playerOpened.inventory.addItem(newItem);\r\n\r\n      if (!addedSuccessfully) {\r\n        // If adding the item failed, refund the cost items\r\n        //for (const i of this.costItems) {\r\n        //this.playerOpened.inventory.addItem(i);\r\n        //}\r\n        this.game.pushMessage(\r\n          \"Your inventory is full. Cannot purchase the item.\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Subtract the cost items from player's inventory\r\n      for (const i of this.costItems) {\r\n        this.playerOpened.inventory.subtractItemCount(i);\r\n      }\r\n\r\n      const cost = this.costItems[0].stackCount;\r\n      const pluralLetter = cost > 1 ? \"s\" : \"\";\r\n\r\n      // Decrement the quantity of items available in the vending machine, if not infinite\r\n      if (!this.isInf) {\r\n        this.quantity--;\r\n        if (this.quantity <= 0) this.close();\r\n      }\r\n\r\n      // Notify the player of the successful purchase\r\n      this.game.pushMessage(\r\n        `Purchased ${(newItem.constructor as any).itemName} for ${cost} ${(this.costItems[0].constructor as any).itemName}${pluralLetter}`,\r\n      );\r\n      this.game.pushMessage(`${this.quantity} available to buy.`);\r\n\r\n      // Handle visual feedback and screen shake\r\n      this.buyAnimAmount = 0.99;\r\n      if (this.playerOpened === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(0, 4);\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let tileX = 19;\r\n    if (!this.isInf && this.quantity === 0) tileX = 20;\r\n    if (this.hasShadow) this.drawShadow(delta);\r\n\r\n    Game.drawObj(\r\n      tileX,\r\n      0,\r\n      1,\r\n      2,\r\n      this.x,\r\n      this.y - 1,\r\n      1,\r\n      2,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.open && this.playerOpened.inventory.isOpen) {\r\n      this.close();\r\n      return;\r\n    }\r\n    this.drawableY = this.y;\r\n\r\n    if (\r\n      this.open &&\r\n      this.playerOpened === this.game.players[this.game.localPlayerID]\r\n    ) {\r\n      let s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\r\n      let b = 2; // border\r\n      let g = -2; // gap\r\n      let hg = 3; // highlighted growth\r\n      let ob = 1; // outer border\r\n      let width = (this.costItems.length + 2) * (s + 2 * b + g) - g;\r\n      let height = s + 2 * b + g - g;\r\n\r\n      let cx = (this.x + 0.5) * GameConstants.TILESIZE;\r\n      let cy = (this.y - 1.5) * GameConstants.TILESIZE;\r\n\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      Game.ctx.fillRect(\r\n        Math.round(cx - 0.5 * width) - ob,\r\n        Math.round(cy - 0.5 * height) - ob,\r\n        Math.round(width + 2 * ob),\r\n        Math.round(height + 2 * ob),\r\n      );\r\n      for (let x = 0; x < this.costItems.length + 2; x++) {\r\n        Game.ctx.fillStyle = OUTLINE_COLOR;\r\n        Game.ctx.fillRect(\r\n          Math.round(cx - 0.5 * width + x * (s + 2 * b + g)),\r\n          Math.round(cy - 0.5 * height),\r\n          Math.round(s + 2 * b),\r\n          Math.round(s + 2 * b),\r\n        );\r\n        if (x !== this.costItems.length) {\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(\r\n            Math.round(cx - 0.5 * width + x * (s + 2 * b + g) + b),\r\n            Math.round(cy - 0.5 * height + b),\r\n            Math.round(s),\r\n            Math.round(s),\r\n          );\r\n        }\r\n      }\r\n\r\n      if (Date.now() - this.openTime >= OPEN_TIME) {\r\n        for (let i = 0; i < this.costItems.length + 2; i++) {\r\n          let drawX = Math.round(\r\n            cx -\r\n              0.5 * width +\r\n              i * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n          let drawY = Math.round(\r\n            cy -\r\n              0.5 * height +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n\r\n          let drawXScaled = drawX / GameConstants.TILESIZE;\r\n          let drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n          if (i < this.costItems.length) {\r\n            let a = 1;\r\n            if (!this.playerOpened.inventory.hasItemCount(this.costItems[i]))\r\n              a = 0.15;\r\n            this.costItems[i].drawIcon(delta, drawXScaled, drawYScaled, a);\r\n          } else if (i === this.costItems.length) {\r\n            Game.drawFX(2, 0, 1, 1, drawXScaled, drawYScaled, 1, 1);\r\n          } else if (i === this.costItems.length + 1) {\r\n            this.item.drawIcon(\r\n              delta,\r\n              drawXScaled,\r\n              drawYScaled,\r\n              1,\r\n              this.quantity,\r\n            );\r\n          }\r\n        }\r\n      }\r\n      this.buyAnimAmount *= this.buyAnimAmount;\r\n      if (GameConstants.ALPHA_ENABLED)\r\n        Game.ctx.globalAlpha = this.buyAnimAmount;\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      Game.ctx.fillRect(\r\n        Math.round(cx - 0.5 * width) - ob,\r\n        Math.round(cy - 0.5 * height) - ob,\r\n        Math.round(width + 2 * ob),\r\n        Math.round(height + 2 * ob),\r\n      );\r\n      Game.ctx.globalAlpha = 1.0;\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { BlueGem } from \"../../item/resource/bluegem\";\r\nimport { OrangeGem } from \"../../item/resource/orangegem\";\r\n\r\nexport class AmberResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 17;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"amber\";\r\n    if (Random.rand() < 0.025) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    this.drops.push(new OrangeGem(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Resource } from \"./resource\";\r\nimport { Coal } from \"../../item/resource/coal\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class CoalResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n    this.health = 1;\r\n    this.name = \"coal\";\r\n    if (Random.rand() < 0.1) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    this.drops.push(new Coal(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class EmeraldResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 14;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"emerald\";\r\n    if (Random.rand() < 0.025) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    this.drops.push(new GreenGem(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\n\r\nexport class GarnetResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 15;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"garnet\";\r\n    if (Random.rand() < 0.025) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    this.drops.push(new RedGem(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\n\r\nimport { Resource } from \"./resource\";\r\nimport { GoldOre } from \"../../item/resource/goldOre\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\nexport class GoldResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 13;\r\n    this.tileY = 0;\r\n    this.health = 2;\r\n    this.name = \"gold\";\r\n    if (Random.rand() < 0.2) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n\r\n    this.drops.push(new GoldOre(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Stone } from \"../../item/resource/stone\";\r\nimport { Resource } from \"./resource\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class ObsidianResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.tileX = 8;\r\n    this.tileY = 4;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"obsidian\";\r\n    if (Random.rand() < 0.025) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    //this.drops.push(new Stone(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { Entity } from \"../entity\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Pickaxe } from \"../../item/tool/pickaxe\";\r\nimport { Spellbook } from \"../../item/weapon/spellbook\";\r\nimport { EntityType } from \"../entity\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Resource extends Entity {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n    this.health = 1;\r\n    this.chainPushable = false;\r\n    this.name = \"resource\";\r\n    this.imageParticleX = 0;\r\n    this.imageParticleY = 25;\r\n  }\r\n\r\n  get type() {\r\n    return EntityType.RESOURCE;\r\n  }\r\n\r\n  hurt = (playerHitBy: Player, damage: number) => {\r\n    if (!playerHitBy.inventory?.getWeapon().canMine) return;\r\n    this.healthBar.hurt();\r\n    this.health -= damage;\r\n    Sound.mine();\r\n    this.hurtCallback();\r\n    this.createHitParticles();\r\n\r\n    if (this.health <= 0) {\r\n      this.kill(playerHitBy);\r\n    }\r\n  };\r\n\r\n  uniqueKillBehavior = () => {\r\n    if (this.cloned) return;\r\n    Sound.delayPlay(Sound.breakRock, 50);\r\n  };\r\n\r\n  kill = (player?: Player) => {\r\n    this.dead = true;\r\n    if (this.cloned) return;\r\n\r\n    this.emitEnemyKilled();\r\n    const deadEntity = this.clone();\r\n    this.room.deadEntities.push(deadEntity);\r\n    this.removeLightSource(this.lightSource);\r\n\r\n    if ((player !== null && player.inventory?.canMine()) || player === null) {\r\n      this.dropLoot();\r\n      //this.game.pushMessage(\"You use your pickaxe to collect the resource.\");\r\n    }\r\n    this.uniqueKillBehavior();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    if (!this.dead) {\r\n      if (this.hasShadow) this.drawShadow(delta);\r\n\r\n      this.updateDrawXY(delta);\r\n\r\n      Game.drawObj(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x - this.drawX,\r\n        this.y - 1.25 - this.drawY,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    this.drawableY = this.y;\r\n  };\r\n}\r\n","import { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Stone } from \"../../item/resource/stone\";\r\nimport { Resource } from \"./resource\";\r\nimport { ImageParticle } from \"../../particle/imageParticle\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class Rock extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n    this.room = room;\r\n    this.health = 2;\r\n    this.tileX = 8;\r\n    this.tileY = 2;\r\n    this.hasShadow = false;\r\n    this.chainPushable = false;\r\n    this.name = \"rock\";\r\n    if (Random.rand() < 0.05) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    //this.drops.push(new Stone(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { Item } from \"../../item/item\";\r\nimport { Game } from \"../../game\";\r\nimport { Key } from \"../../item/key\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Heart } from \"../../item/usable/heart\";\r\nimport { Armor } from \"../../item/armor\";\r\nimport { GreenGem } from \"../../item/resource/greengem\";\r\nimport { Resource } from \"./resource\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Geode } from \"../../item/resource/geode\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { RedGem } from \"../../item/resource/redgem\";\r\nimport { BlueGem } from \"../../item/resource/bluegem\";\r\n\r\nexport class ZirconResource extends Resource {\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, game, x, y);\r\n\r\n    this.tileX = 16;\r\n    this.tileY = 0;\r\n    this.health = 3;\r\n    this.name = \"zircon\";\r\n    if (Random.rand() < 0.025) {\r\n      this.drops.push(new Geode(this.room, this.x, this.y));\r\n    }\r\n    this.drops.push(new BlueGem(this.room, this.x, this.y));\r\n  }\r\n}\r\n","import { EventEmitter } from \"./eventEmitter\";\r\n\r\nclass EventBus {\r\n  private static instance: EventBus;\r\n  private eventEmitter: EventEmitter;\r\n\r\n  private constructor() {\r\n    this.eventEmitter = new EventEmitter();\r\n  }\r\n\r\n  public static getInstance(): EventBus {\r\n    if (!EventBus.instance) {\r\n      EventBus.instance = new EventBus();\r\n    }\r\n    return EventBus.instance;\r\n  }\r\n\r\n  public emit<T>(event: string, data: T): void {\r\n    this.eventEmitter.emit(event, data);\r\n  }\r\n\r\n  public on<T>(event: string, callback: (data: T) => void): void {\r\n    this.eventEmitter.on(event, callback);\r\n  }\r\n\r\n  public off<T>(event: string, callback: (data: T) => void): void {\r\n    this.eventEmitter.off(event, callback);\r\n  }\r\n}\r\n\r\nexport const globalEventBus = EventBus.getInstance();\r\n","type EventCallback<T = any> = (data: T) => void;\r\n\r\nexport class EventEmitter {\r\n  private events: Record<string, EventCallback[]> = {};\r\n\r\n  on<T>(event: string, listener: EventCallback<T>): void {\r\n    if (!this.events[event]) {\r\n      this.events[event] = [];\r\n    }\r\n    this.events[event].push(listener);\r\n  }\r\n\r\n  off<T>(event: string, listener: EventCallback<T>): void {\r\n    if (!this.events[event]) return;\r\n    this.events[event] = this.events[event].filter((l) => l !== listener);\r\n  }\r\n\r\n  emit<T>(event: string, data: T): void {\r\n    if (!this.events[event]) return;\r\n    this.events[event].forEach((listener) => listener(data));\r\n  }\r\n\r\n  // New method to remove all listeners for an event\r\n  removeAllListeners(event: string): void {\r\n    delete this.events[event];\r\n  }\r\n}\r\n","export const EVENTS = {\r\n  KEY_DOWN: \"KEY_DOWN\",\r\n  KEY_UP: \"KEY_UP\",\r\n  MOUSE_LEFT_CLICK: \"MOUSE_LEFT_CLICK\",\r\n  MOUSE_RIGHT_CLICK: \"MOUSE_RIGHT_CLICK\",\r\n  MOUSE_MOVE: \"MOUSE_MOVE\",\r\n  TOUCH_START: \"TOUCH_START\",\r\n  TOUCH_MOVE: \"TOUCH_MOVE\",\r\n  TOUCH_END: \"TOUCH_END\",\r\n  TAP: \"TAP\",\r\n  TAP_HOLD: \"TAP_HOLD\",\r\n  MOUSE_DOWN: \"MOUSE_DOWN\",\r\n  MOUSE_UP: \"MOUSE_UP\",\r\n\r\n  // **Additional Custom Events:**\r\n  CHAT_MESSAGE: \"ChatMessage\",\r\n  ENEMY_SEEN_PLAYER: \"EnemySeenPlayer\",\r\n  ENEMY_KILLED: \"ENEMY_KILLED\",\r\n  DAMAGE_DONE: \"DAMAGE_DONE\",\r\n  DAMAGE_TAKEN: \"DAMAGE_TAKEN\",\r\n  TURN_PASSED: \"TURN_PASSED\",\r\n  COIN_COLLECTED: \"COIN_COLLECTED\",\r\n  ITEM_COLLECTED: \"ITEM_COLLECTED\",\r\n  LEVEL_GENERATION_STARTED: \"LEVEL_GENERATION_STARTED\",\r\n  LEVEL_GENERATION_COMPLETED: \"LEVEL_GENERATION_COMPLETED\",\r\n  // Add other custom events as needed\r\n} as const;\r\n\r\n// **TypeScript Interfaces for Event Payloads:**\r\n\r\nexport interface MouseClickEvent {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface MouseMoveEvent {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface KeyEvent {\r\n  key: string;\r\n}\r\n\r\nexport interface TouchEventData {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ChatMessageEvent {\r\n  message: string;\r\n}\r\n\r\nexport interface EnemySeenPlayerEvent {\r\n  enemyId: string;\r\n  playerId: string;\r\n  // Add other relevant properties\r\n}\r\n\r\nexport interface EnemyKilledEvent {\r\n  enemyId: string;\r\n  xp: number;\r\n}\r\n\r\nexport interface DamageDoneEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface DamageTakenEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface CoinCollectedEvent {\r\n  amount: number;\r\n}\r\n\r\nexport interface ItemCollectedEvent {\r\n  itemId: string;\r\n}\r\n\r\n// **Union Type for Events:**\r\nexport type AppEvents =\r\n  | typeof EVENTS.KEY_DOWN\r\n  | typeof EVENTS.KEY_UP\r\n  | typeof EVENTS.MOUSE_LEFT_CLICK\r\n  | typeof EVENTS.MOUSE_RIGHT_CLICK\r\n  | typeof EVENTS.MOUSE_MOVE\r\n  | typeof EVENTS.TOUCH_START\r\n  | typeof EVENTS.TOUCH_MOVE\r\n  | typeof EVENTS.TOUCH_END\r\n  | typeof EVENTS.TAP\r\n  | typeof EVENTS.TAP_HOLD\r\n  | typeof EVENTS.MOUSE_DOWN\r\n  | typeof EVENTS.MOUSE_UP\r\n  | typeof EVENTS.CHAT_MESSAGE\r\n  | typeof EVENTS.ENEMY_SEEN_PLAYER\r\n  | typeof EVENTS.ENEMY_KILLED\r\n  | typeof EVENTS.DAMAGE_DONE\r\n  | typeof EVENTS.DAMAGE_TAKEN\r\n  | typeof EVENTS.TURN_PASSED\r\n  | typeof EVENTS.COIN_COLLECTED\r\n  | typeof EVENTS.ITEM_COLLECTED\r\n  | typeof EVENTS.LEVEL_GENERATION_STARTED\r\n  | typeof EVENTS.LEVEL_GENERATION_COMPLETED;\r\n// | Add other events as needed\r\n\r\n// **Type Mapping for Event Payloads:**\r\nexport type EventPayloads = {\r\n  [EVENTS.KEY_DOWN]: string; // key identifier\r\n  [EVENTS.KEY_UP]: string;\r\n  [EVENTS.MOUSE_LEFT_CLICK]: MouseClickEvent;\r\n  [EVENTS.MOUSE_RIGHT_CLICK]: MouseClickEvent;\r\n  [EVENTS.MOUSE_MOVE]: MouseMoveEvent;\r\n  [EVENTS.TOUCH_START]: TouchEventData;\r\n  [EVENTS.TOUCH_MOVE]: TouchEventData;\r\n  [EVENTS.TOUCH_END]: TouchEventData;\r\n  [EVENTS.TAP]: MouseClickEvent;\r\n  [EVENTS.TAP_HOLD]: MouseClickEvent;\r\n  [EVENTS.MOUSE_DOWN]: MouseClickEvent;\r\n  [EVENTS.MOUSE_UP]: MouseClickEvent;\r\n\r\n  [EVENTS.CHAT_MESSAGE]: ChatMessageEvent;\r\n  [EVENTS.ENEMY_SEEN_PLAYER]: EnemySeenPlayerEvent;\r\n  [EVENTS.ENEMY_KILLED]: EnemyKilledEvent;\r\n  [EVENTS.DAMAGE_DONE]: DamageDoneEvent;\r\n  [EVENTS.DAMAGE_TAKEN]: DamageTakenEvent;\r\n  [EVENTS.TURN_PASSED]: void;\r\n  [EVENTS.COIN_COLLECTED]: CoinCollectedEvent;\r\n  [EVENTS.ITEM_COLLECTED]: ItemCollectedEvent;\r\n  [EVENTS.LEVEL_GENERATION_STARTED]: void;\r\n  [EVENTS.LEVEL_GENERATION_COMPLETED]: void;\r\n  // | Add other event payloads as needed\r\n};\r\n","import { GameConstants } from \"./game/gameConstants\";\r\nimport { EnemyType, Room, RoomType } from \"./room/room\";\r\nimport { Player } from \"./player/player\";\r\nimport { Door, DoorType } from \"./tile/door\";\r\nimport { Sound } from \"./sound/sound\";\r\nimport { LevelConstants } from \"./level/levelConstants\";\r\nimport { LevelGenerator } from \"./level/levelGenerator\";\r\nimport { Input, InputEnum } from \"./game/input\";\r\nimport { DownLadder } from \"./tile/downLadder\";\r\nimport { TextBox } from \"./game/textbox\";\r\nimport {\r\n  createGameState,\r\n  GameState,\r\n  loadGameState,\r\n  TileType,\r\n} from \"./game/gameState\";\r\nimport { DoorDir } from \"./tile/door\";\r\nimport { LevelImageGenerator } from \"./level/levelImageGenerator\";\r\nimport { Enemy } from \"./entity/enemy/enemy\";\r\nimport { TutorialListener } from \"./game/tutorialListener\";\r\nimport { MouseCursor } from \"./gui/mouseCursor\";\r\nimport { PostProcessor } from \"./gui/postProcess\";\r\nimport { globalEventBus } from \"./event/eventBus\";\r\nimport { ReverbEngine } from \"./sound/reverb\";\r\nimport { Level } from \"./level/level\";\r\nimport { statsTracker } from \"./game/stats\";\r\nimport { EVENTS } from \"./event/events\";\r\nimport { UpLadder } from \"./tile/upLadder\";\r\nimport { CameraAnimation } from \"./game/cameraAnimation\";\r\nimport { Tips } from \"./tips\";\r\nimport { GameplaySettings } from \"./game/gameplaySettings\";\r\nimport { Random } from \"./utility/random\";\r\nimport { IdGenerator } from \"./globalStateManager/IdGenerator\";\r\nimport { ReplayManager } from \"./game/replayManager\";\r\nimport { PlayerAction } from \"./player/playerAction\";\r\nimport tilesetUrl = require(\"../res/tileset.png\");\r\nimport objsetUrl = require(\"../res/objset.png\");\r\nimport mobsetUrl = require(\"../res/mobset.png\");\r\nimport itemsetUrl = require(\"../res/itemset.png\");\r\nimport fxsetUrl = require(\"../res/fxset.png\");\r\nimport fontUrl = require(\"../res/font.png\");\r\nimport { FeedbackButton } from \"./gui/feedbackButton\";\r\n\r\nexport enum LevelState {\r\n  IN_LEVEL,\r\n  TRANSITIONING,\r\n  TRANSITIONING_LADDER,\r\n  LEVEL_GENERATION,\r\n}\r\n\r\nexport enum Direction {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n  DOWN_RIGHT,\r\n  UP_LEFT,\r\n  UP_RIGHT,\r\n  DOWN_LEFT,\r\n  CENTER,\r\n}\r\n\r\nexport class ChatMessage {\r\n  message: string;\r\n  timestamp: number;\r\n  private cachedLines: string[] | null = null;\r\n  private cachedWidth: number = -1;\r\n\r\n  constructor(message: string) {\r\n    this.message = message;\r\n    this.timestamp = Date.now();\r\n  }\r\n\r\n  // Get wrapped lines for the given max width, with caching\r\n  getWrappedLines(maxWidth: number): string[] {\r\n    if (this.cachedLines && this.cachedWidth === maxWidth) {\r\n      return this.cachedLines;\r\n    }\r\n\r\n    this.cachedLines = this.wrapText(this.message, maxWidth);\r\n    this.cachedWidth = maxWidth;\r\n    return this.cachedLines;\r\n  }\r\n\r\n  private wrapText(text: string, maxWidth: number): string[] {\r\n    if (text === \"\") return [\"\"];\r\n\r\n    const words = text.split(\" \");\r\n    const lines: string[] = [];\r\n    let currentLine = \"\";\r\n\r\n    for (const word of words) {\r\n      const testLine = currentLine === \"\" ? word : currentLine + \" \" + word;\r\n\r\n      if (Game.measureText(testLine).width <= maxWidth) {\r\n        currentLine = testLine;\r\n      } else {\r\n        if (currentLine !== \"\") {\r\n          lines.push(currentLine);\r\n          currentLine = word;\r\n        } else {\r\n          // Single word is too long, just add it anyway\r\n          lines.push(word);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentLine !== \"\") {\r\n      lines.push(currentLine);\r\n    }\r\n\r\n    return lines.length > 0 ? lines : [\"\"];\r\n  }\r\n\r\n  // Clear cache when screen resizes\r\n  clearCache(): void {\r\n    this.cachedLines = null;\r\n    this.cachedWidth = -1;\r\n  }\r\n}\r\n\r\nlet getShadeCanvasKey = (\r\n  set: HTMLImageElement,\r\n  sX: number,\r\n  sY: number,\r\n  sW: number,\r\n  sH: number,\r\n  opacity: number,\r\n  shadeColor: string,\r\n  fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n): string => {\r\n  return (\r\n    set.src +\r\n    \",\" +\r\n    sX +\r\n    \",\" +\r\n    sY +\r\n    \",\" +\r\n    sW +\r\n    \",\" +\r\n    sH +\r\n    \",\" +\r\n    opacity +\r\n    \",\" +\r\n    shadeColor +\r\n    \",fade=\" +\r\n    (fadeDir || \"none\")\r\n  );\r\n};\r\n\r\n// fps counter\r\nconst times = [];\r\nlet fps = 60;\r\n\r\nexport class Game {\r\n  // Replay manager singleton\r\n  private static _replayManager: ReplayManager | null = null;\r\n  get replayManager(): ReplayManager {\r\n    if (!Game._replayManager) Game._replayManager = new ReplayManager();\r\n    return Game._replayManager;\r\n  }\r\n  globalId: string;\r\n  static ctx: CanvasRenderingContext2D;\r\n  static shade_canvases: Record<string, HTMLCanvasElement>;\r\n  prevLevel: Room; // for transitions\r\n  room: Room;\r\n  rooms: Array<Room>;\r\n  level: Level;\r\n  levels: Array<Level>;\r\n  roomsById: Map<string, Room>;\r\n  levelsById: Map<string, Level>;\r\n  // Active path identifier for filtering draw/update\r\n  currentPathId: string = \"main\";\r\n  levelgen: LevelGenerator;\r\n  readonly localPlayerID = \"localplayer\";\r\n  players: Record<string, Player>;\r\n  offlinePlayers: Record<string, Player>;\r\n  levelState: LevelState;\r\n  transitionStartTime: number;\r\n  transitionX: number;\r\n  transitionY: number;\r\n  upwardTransition: boolean;\r\n  sideTransition: boolean;\r\n  sideTransitionDirection: number;\r\n  transition: boolean;\r\n  transitioningLadder: UpLadder | DownLadder;\r\n  screenShakeX: number;\r\n  screenShakeY: number;\r\n  shakeAmountX: number;\r\n  shakeAmountY: number;\r\n  shakeFrame: number;\r\n  screenShakeCutoff: number;\r\n  chat: Array<ChatMessage>;\r\n  chatOpen: boolean;\r\n  chatTextBox: TextBox;\r\n  previousFrameTimestamp: number;\r\n  player: Player;\r\n  gameStartTimeMs: number;\r\n  hasRecordedStats: boolean = false;\r\n  loadedFromSaveFile: boolean = false;\r\n  // Reference package.json\r\n  version = \"1.2.0\";\r\n\r\n  static inputReceived = false;\r\n\r\n  loginMessage: string = \"\";\r\n  username: string;\r\n  usernameTextBox: TextBox;\r\n  passwordTextBox: TextBox;\r\n  worldCodes: Array<string>;\r\n  private selectedWorldCode: number;\r\n  tutorialActive: boolean;\r\n  static scale: number;\r\n  static interpolatedScale: number;\r\n  static tileset: HTMLImageElement;\r\n  static objset: HTMLImageElement;\r\n  static mobset: HTMLImageElement;\r\n  static itemset: HTMLImageElement;\r\n  static fxset: HTMLImageElement;\r\n  static fontsheet: HTMLImageElement;\r\n  isMobile: boolean;\r\n  started: boolean;\r\n  startedFadeOut: boolean;\r\n  screenShakeActive: boolean;\r\n  encounteredEnemies: Array<number>;\r\n  paused: boolean;\r\n  private startScreenAlpha = 1;\r\n  static delta: number;\r\n  currentDepth: number;\r\n  //previousDepth: number;\r\n  private ellipsisFrame: number = 0;\r\n  private ellipsisStartTime: number = 0;\r\n  cameraAnimation: CameraAnimation;\r\n\r\n  cameraTargetX: number;\r\n  cameraTargetY: number;\r\n  cameraX: number;\r\n  cameraY: number;\r\n  justTransitioned: boolean = false;\r\n  lastDroppedScythePiece: \"handle\" | \"blade\" | null = null;\r\n  lastDroppedShieldPiece: \"left\" | \"right\" | null = null;\r\n\r\n  tip: string = Tips.getRandomTip();\r\n  private currentLevelGenerator: LevelImageGenerator | null = null;\r\n  static text_rendering_canvases: Record<string, HTMLCanvasElement>;\r\n  static readonly letters =\r\n    \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/+\";\r\n  static readonly letter_widths = [\r\n    4, 4, 4, 4, 3, 3, 4, 4, 1, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5,\r\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 5, 3, 3, 3,\r\n  ];\r\n  static readonly letter_height = 6;\r\n  static letter_positions = [];\r\n\r\n  // [min, max] inclusive\r\n  static rand = (min: number, max: number, rand): number => {\r\n    if (max < min) return min;\r\n    return Math.floor(rand() * (max - min + 1) + min);\r\n  };\r\n\r\n  static randTable = (table: any[], rand): any => {\r\n    return table[Game.rand(0, table.length - 1, rand)];\r\n  };\r\n  tutorialListener: TutorialListener;\r\n\r\n  private focusTimeout: number | null = null;\r\n  private readonly FOCUS_TIMEOUT_DURATION = 15000; // 5 seconds\r\n  private wasMuted = false;\r\n  private wasStarted = false;\r\n\r\n  private lastChatWidth: number = 0;\r\n  private savedGameState: GameState | null = null;\r\n  // Start screen menu (optional)\r\n  startMenu: any = null;\r\n  startMenuActive: boolean = false;\r\n\r\n  feedbackButton: FeedbackButton = null;\r\n\r\n  constructor() {\r\n    this.globalId = IdGenerator.generate(\"G\");\r\n    this.roomsById = new Map();\r\n    this.levelsById = new Map();\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      let canvas = document.getElementById(\"gameCanvas\");\r\n      Game.ctx = (canvas as HTMLCanvasElement).getContext(\"2d\", {\r\n        alpha: false,\r\n      }) as CanvasRenderingContext2D;\r\n\r\n      // Create TextBox instances and associate them with HTML elements\r\n      const usernameElement = document.createElement(\"input\");\r\n      usernameElement.type = \"text\";\r\n      usernameElement.autocomplete = \"off\";\r\n      usernameElement.autocapitalize = \"off\";\r\n      usernameElement.style.position = \"absolute\";\r\n      usernameElement.style.left = \"-1000px\"; // Position off-screen\r\n      //const passwordElement = document.createElement(\"input\");\r\n      //passwordElement.type = \"password\";\r\n      //passwordElement.style.position = \"absolute\";\r\n      //passwordElement.style.left = \"-1000px\"; // Position off-screen\r\n      const chatElement = document.createElement(\"input\");\r\n      chatElement.type = \"text\";\r\n      chatElement.style.position = \"absolute\";\r\n      chatElement.style.left = \"-1000px\"; // Position off-screen\r\n      //document.body.appendChild(usernameElement);\r\n      //document.body.appendChild(passwordElement);\r\n      document.body.appendChild(chatElement);\r\n\r\n      document.addEventListener(\r\n        \"click\",\r\n        () => {\r\n          usernameElement.focus();\r\n        },\r\n        { once: true },\r\n      );\r\n\r\n      this.chat = [];\r\n      this.chatTextBox = new TextBox(chatElement);\r\n      this.chatTextBox.setEnterCallback(() => {\r\n        if (this.chatTextBox.text.length > 0) {\r\n          this.chat.push(new ChatMessage(this.chatTextBox.text));\r\n          this.chatTextBox.clear();\r\n        } else {\r\n          this.chatOpen = false;\r\n        }\r\n      });\r\n      this.chatTextBox.setEscapeCallback(() => {\r\n        this.chatOpen = false;\r\n      });\r\n      this.worldCodes = [];\r\n      this.selectedWorldCode = 0;\r\n\r\n      Game.shade_canvases = {};\r\n      Game.text_rendering_canvases = {};\r\n\r\n      let resourcesLoaded = 0;\r\n      const NUM_RESOURCES = 6;\r\n\r\n      Game.tileset = new Image();\r\n      Game.tileset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.tileset.src = tilesetUrl;\r\n      Game.objset = new Image();\r\n      Game.objset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.objset.src = objsetUrl;\r\n      Game.mobset = new Image();\r\n      Game.mobset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.mobset.src = mobsetUrl;\r\n      Game.itemset = new Image();\r\n      Game.itemset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.itemset.src = itemsetUrl;\r\n      Game.fxset = new Image();\r\n      Game.fxset.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.fxset.src = fxsetUrl;\r\n      Game.fontsheet = new Image();\r\n      Game.fontsheet.onload = () => {\r\n        resourcesLoaded++;\r\n      };\r\n      Game.fontsheet.src = fontUrl;\r\n\r\n      this.levelState = LevelState.LEVEL_GENERATION;\r\n\r\n      // Initialize camera properties\r\n      this.cameraX = 0;\r\n      this.cameraY = 0;\r\n      this.cameraTargetX = 0;\r\n      this.cameraTargetY = 0;\r\n\r\n      let checkResourcesLoaded = () => {\r\n        if (resourcesLoaded < NUM_RESOURCES) {\r\n          window.setTimeout(checkResourcesLoaded, 500);\r\n        } else {\r\n          // proceed with constructor\r\n\r\n          Game.scale = GameConstants.SCALE;\r\n\r\n          document.addEventListener(\r\n            \"touchstart\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n          document.addEventListener(\r\n            \"touchend\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n          document.addEventListener(\r\n            \"touchmove\",\r\n            function (e) {\r\n              if (e.target == canvas) {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            false,\r\n          );\r\n\r\n          document.addEventListener(\"touchstart\", Input.handleTouchStart, {\r\n            passive: false,\r\n          });\r\n          document.addEventListener(\"touchmove\", Input.handleTouchMove, {\r\n            passive: false,\r\n          });\r\n          document.addEventListener(\"touchend\", Input.handleTouchEnd, {\r\n            passive: false,\r\n          });\r\n\r\n          Input.keyDownListener = (key: string) => {\r\n            this.keyDownListener(key);\r\n          };\r\n\r\n          window.requestAnimationFrame(this.run);\r\n          this.onResize();\r\n          window.addEventListener(\"resize\", this.onResize);\r\n          window.addEventListener(\"orientationchange\", () => {\r\n            // Small delay to ensure new dimensions are available\r\n            setTimeout(this.onResize, 100);\r\n          });\r\n\r\n          //Sound.playMusic(); // loops forever\r\n\r\n          this.players = {};\r\n          this.offlinePlayers = {};\r\n          this.chatOpen = false;\r\n          this.cameraAnimation = new CameraAnimation(0, 0, 1000, 1, 0, false);\r\n          this.feedbackButton = new FeedbackButton();\r\n\r\n          // Enable tap-to-open chat on mobile: tap bottom-left region to focus chat input\r\n          Input.mouseDownListeners.push((x: number, y: number) => {\r\n            if (!this.isMobile) return;\r\n            if (this.isPointInChatHotspot(x, y)) {\r\n              this.chatOpen = true;\r\n              this.chatTextBox.focus();\r\n              Input.mouseDownHandled = true;\r\n            }\r\n          });\r\n\r\n          this.screenShakeX = 0;\r\n          this.screenShakeY = 0;\r\n          this.shakeAmountX = 0;\r\n          this.shakeAmountY = 0;\r\n          this.shakeFrame = (3 * Math.PI) / 2;\r\n          this.screenShakeCutoff = 0;\r\n          this.tutorialActive = false;\r\n          this.screenShakeActive = false;\r\n          this.levels = [];\r\n          this.encounteredEnemies = [];\r\n\r\n          this.newGame();\r\n          // If a save exists, build a start-screen menu to choose Continue/New\r\n          try {\r\n            const { getCookie } = require(\"./utility/cookies\");\r\n            const hasSave = !!getCookie(\"wr_save_meta\");\r\n            if (hasSave) {\r\n              const { Menu } = require(\"./gui/menu\");\r\n              this.startMenu = new Menu({ game: this, showCloseButton: false });\r\n              this.startMenu.buildStartMenu();\r\n              this.startMenu.openMenu();\r\n              this.startMenuActive = true;\r\n            }\r\n          } catch {}\r\n        }\r\n      };\r\n      checkResourcesLoaded();\r\n    });\r\n    ReverbEngine.initialize();\r\n\r\n    Sound.loadSounds();\r\n\r\n    this.started = false;\r\n    this.tutorialListener = null;\r\n\r\n    this.setupEventListeners();\r\n\r\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_STARTED, () => {\r\n      this.levelState = LevelState.LEVEL_GENERATION;\r\n    });\r\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, () => {\r\n      this.levelState = LevelState.IN_LEVEL;\r\n    });\r\n\r\n    // Add focus/blur event listeners\r\n    //window.addEventListener(\"blur\", this.handleWindowBlur);\r\n    //window.addEventListener(\"focus\", this.handleWindowFocus);\r\n  }\r\n\r\n  updateDepth = (depth: number) => {\r\n    //this.previousDepth = this.currentDepth;\r\n    this.currentDepth = depth;\r\n    this.players[this.localPlayerID].depth = depth;\r\n  };\r\n\r\n  updateLevel = (room: Room) => {\r\n    if (room && room.level) {\r\n      this.level = room.level;\r\n    }\r\n    if (this.level.rooms.length > 0) {\r\n      this.rooms = this.level.rooms;\r\n      this.roomsById = new Map(this.rooms.map((r) => [r.globalId, r]));\r\n    }\r\n  };\r\n\r\n  getRoomById = (id: string): Room | undefined => {\r\n    return this.roomsById?.get(id);\r\n  };\r\n\r\n  getLevelById = (id: string): Level | undefined => {\r\n    return this.levelsById?.get(id);\r\n  };\r\n\r\n  registerLevel = (level: Level) => {\r\n    this.levelsById.set(level.globalId, level);\r\n  };\r\n\r\n  registerRooms = (rooms: Room[]) => {\r\n    this.rooms = rooms;\r\n    this.roomsById = new Map(rooms.map((r) => [r.globalId, r]));\r\n  };\r\n\r\n  setCurrentRoomById = (id: string): Room | undefined => {\r\n    const room = this.roomsById.get(id);\r\n    if (room) {\r\n      this.room = room;\r\n      this.updateLevel(room);\r\n    }\r\n    return room;\r\n  };\r\n\r\n  setPlayer = () => {\r\n    this.player = this.players[this.localPlayerID];\r\n  };\r\n\r\n  newGame = (seed?: number) => {\r\n    // Clear all input listeners to prevent duplicates from previous game instances\r\n    Input.mouseDownListeners.length = 0;\r\n    Input.mouseUpListeners.length = 0;\r\n    Input.mouseMoveListeners.length = 0;\r\n    Input.mouseLeftClickListeners.length = 0;\r\n    Input.mouseRightClickListeners.length = 0;\r\n    Input.touchStartListeners.length = 0;\r\n    Input.touchEndListeners.length = 0;\r\n\r\n    statsTracker.resetStats();\r\n    this.currentDepth = 0;\r\n    this.encounteredEnemies = [];\r\n    this.levels = [];\r\n    this.hasRecordedStats = false;\r\n    this.loadedFromSaveFile = false;\r\n\r\n    // In some cases, this starts the timer when a player views the start menu rather than when\r\n    // the gameplay starts. This field is only used for analytics, so approximate timing is acceptable.\r\n    this.gameStartTimeMs = Date.now();\r\n\r\n    // Reset path context to main for a fresh world\r\n    (this as any).currentPathId = \"main\";\r\n    // Attempt auto-load from cookies/localStorage if a save exists\r\n    // Auto-load disabled\r\n\r\n    // No cookie save found: start a fresh world\r\n    this.startFreshWorld(seed);\r\n    // Load settings from cookies after basic init\r\n    try {\r\n      const { loadSettings } = require(\"./game/settingsPersistence\");\r\n      loadSettings(this);\r\n    } catch {}\r\n\r\n    this.levelState = LevelState.LEVEL_GENERATION;\r\n    // Begin replay recording with this seed and capture a base state when ready\r\n    this.replayManager.beginRecording(gs.seed, this);\r\n  };\r\n\r\n  private startFreshWorld(seed?: number) {\r\n    //gs = new GameState();\r\n    gs.seed = seed ?? (Math.random() * 4294967296) >>> 0;\r\n    gs.randomState = gs.seed;\r\n    loadGameState(this, [this.localPlayerID], gs, true);\r\n\r\n    try {\r\n      const { loadSettings } = require(\"./game/settingsPersistence\");\r\n      loadSettings(this);\r\n    } catch {}\r\n    this.levelState = LevelState.LEVEL_GENERATION;\r\n    this.replayManager.beginRecording(gs.seed, this);\r\n  }\r\n\r\n  keyDownListener = (key: string) => {\r\n    Game.inputReceived = true;\r\n\r\n    if (!this.started) {\r\n      // If a start menu is active, ignore the default start behavior\r\n      if (this.startMenuActive) {\r\n        return;\r\n      }\r\n      this.startedFadeOut = true;\r\n      return;\r\n    }\r\n\r\n    // Handle global keys\r\n    if (!this.chatOpen) {\r\n      switch (key.toUpperCase()) {\r\n        case \"M\":\r\n          Sound.toggleMute();\r\n          this.pushMessage(Sound.audioMuted ? \"Audio muted\" : \"Audio unmuted\");\r\n          return;\r\n\r\n        case \"C\":\r\n          this.chatOpen = true;\r\n          return;\r\n\r\n        case \"/\":\r\n          this.chatOpen = true;\r\n          this.chatTextBox.clear();\r\n          this.chatTextBox.handleKeyPress(key);\r\n          return;\r\n\r\n        case \"1\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 1;\r\n          return;\r\n        case \"2\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 2;\r\n          return;\r\n        case \"3\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 5;\r\n          return;\r\n        case \"4\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 10000;\r\n          return;\r\n        case \"0\":\r\n          LevelGenerator.ANIMATION_CONSTANT = 0;\r\n          return;\r\n      }\r\n\r\n      // Forward all player input\r\n      const player = this.players[this.localPlayerID];\r\n      player.inputHandler.handleKeyboardKey(key);\r\n    } else {\r\n      this.chatTextBox.handleKeyPress(key);\r\n    }\r\n  };\r\n\r\n  changeLevelThroughLadder = (\r\n    player: Player,\r\n    ladder: UpLadder | DownLadder,\r\n  ) => {\r\n    player.map.saveOldMap();\r\n    if (ladder instanceof DownLadder && !ladder.linkedRoom) ladder.generate();\r\n\r\n    const newRoom = ladder.linkedRoom;\r\n    // If downladder provided an entry up-ladder position, pass it through transition\r\n    let entryPosition: { x: number; y: number } | undefined = undefined;\r\n    if ((ladder as any).entryUpLadderPos) {\r\n      entryPosition = { ...(ladder as any).entryUpLadderPos };\r\n      console.log(\r\n        `changeLevelThroughLadder: captured entryPosition (${entryPosition.x}, ${entryPosition.y}) for newRoom gid=${(newRoom as any)?.globalId}`,\r\n      );\r\n    }\r\n\r\n    if (this.players[this.localPlayerID] === player) {\r\n      player.levelID = newRoom.id;\r\n      (player as any).roomGID = newRoom.globalId;\r\n\r\n      // Immediately deactivate the old room like door transitions do\r\n      this.prevLevel = this.room;\r\n      this.prevLevel.exitLevel();\r\n    }\r\n\r\n    if (newRoom.envType === 2) Sound.playForestMusic();\r\n    if (newRoom.envType === 1) Sound.playCaveMusic();\r\n\r\n    this.updateDepth(newRoom.depth);\r\n\r\n    this.levelState = LevelState.TRANSITIONING_LADDER;\r\n    this.transitionStartTime = Date.now();\r\n    this.transitioningLadder = ladder;\r\n    // Attach desired entry position onto the target room so enterLevel can read it\r\n    if (entryPosition) {\r\n      (newRoom as any).__entryPositionFromLadder = entryPosition;\r\n      console.log(\r\n        `changeLevelThroughLadder: wrote __entryPositionFromLadder to room gid=${(newRoom as any)?.globalId}`,\r\n      );\r\n    } else {\r\n      console.log(\r\n        `changeLevelThroughLadder: no entryPosition available for room gid=${(newRoom as any)?.globalId}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  changeLevelThroughDoor = (player: Player, door: Door, side?: number) => {\r\n    door.linkedDoor.room.entered = true;\r\n    // Prefer stable roomGID; maintain legacy levelID for compatibility\r\n    (player as any).roomGID = door.room.globalId;\r\n    try {\r\n      // Compute index defensively instead of trusting door.room.id\r\n      const idx = this.rooms?.indexOf(door.room);\r\n      if (idx !== undefined && idx >= 0) player.levelID = idx;\r\n    } catch {}\r\n\r\n    if (this.players[this.localPlayerID] === player) {\r\n      this.levelState = LevelState.TRANSITIONING;\r\n      this.transitionStartTime = Date.now();\r\n      const hasDir = door.doorDir !== door.linkedDoor.doorDir;\r\n\r\n      let oldX = this.players[this.localPlayerID].x;\r\n      let oldY = this.players[this.localPlayerID].y;\r\n\r\n      this.prevLevel = this.room;\r\n      this.prevLevel.exitLevel();\r\n\r\n      //this.level.exitLevel();\r\n      this.room = door.room;\r\n\r\n      door.room.enterLevelThroughDoor(player, door, side);\r\n\r\n      this.transitionX =\r\n        (this.players[this.localPlayerID].x - oldX) * GameConstants.TILESIZE;\r\n      this.transitionY =\r\n        (this.players[this.localPlayerID].y - oldY) * GameConstants.TILESIZE;\r\n\r\n      this.upwardTransition = false;\r\n      this.sideTransition = false;\r\n      this.sideTransitionDirection = side;\r\n      if (\r\n        door instanceof Door &&\r\n        [Direction.RIGHT, Direction.LEFT].includes(door.doorDir) &&\r\n        hasDir\r\n      )\r\n        this.sideTransition = true;\r\n      else if (\r\n        door instanceof Door &&\r\n        door.doorDir === Direction.DOWN &&\r\n        hasDir\r\n      )\r\n        this.upwardTransition = true;\r\n    } else {\r\n      door.room.enterLevelThroughDoor(player, door, side);\r\n    }\r\n    player.map.saveMapData();\r\n  };\r\n\r\n  run = (timestamp: number) => {\r\n    if (this.paused) {\r\n      // Still request next frame even when paused to maintain loop\r\n      window.requestAnimationFrame(this.run);\r\n      return;\r\n    }\r\n\r\n    if (!this.previousFrameTimestamp) {\r\n      this.previousFrameTimestamp = timestamp;\r\n      window.requestAnimationFrame(this.run);\r\n      return;\r\n    }\r\n\r\n    // Calculate elapsed time in milliseconds\r\n    let elapsed = timestamp - this.previousFrameTimestamp;\r\n\r\n    // Normalize delta to 60 FPS\r\n    let delta = (elapsed * 60) / 1000.0;\r\n\r\n    // Define minimum and maximum delta values\r\n    const deltaMin = 1 / 10; // 600fps\r\n    const deltaMax = 8; //7.5fps\r\n    // Cap delta within [deltaMin, deltaMax]\r\n    if (Game.delta) delta = Game.delta;\r\n    if (delta < deltaMin) {\r\n      delta = deltaMin;\r\n    } else if (delta > deltaMax) {\r\n      delta = deltaMax;\r\n    }\r\n    //delta = 0.025;\r\n    // Update FPS tracking\r\n    while (times.length > 0 && times[0] <= timestamp - 1000) {\r\n      times.shift();\r\n    }\r\n    times.push(timestamp);\r\n    fps = times.length;\r\n    // Update game logic\r\n    if (\r\n      Math.floor(timestamp / (1000 / 60)) >\r\n      Math.floor(this.previousFrameTimestamp / (1000 / 60))\r\n    ) {\r\n      this.update();\r\n    }\r\n\r\n    if (\r\n      Math.floor(timestamp) >\r\n      Math.floor(this.previousFrameTimestamp) + 1000\r\n    ) {\r\n      this.refreshDimensions();\r\n    }\r\n    //delta = 0.1;\r\n    // Render the frame with capped delta\r\n\r\n    this.draw(delta * GameConstants.ANIMATION_SPEED * 1);\r\n\r\n    // Request the next frame\r\n    window.requestAnimationFrame(this.run);\r\n\r\n    // Update the previous frame timestamp\r\n    this.previousFrameTimestamp = timestamp;\r\n  };\r\n\r\n  update = () => {\r\n    this.refreshDimensions();\r\n    Input.checkIsTapHold();\r\n\r\n    // Existing key repeat (disabled during replay)\r\n    if (!this.replayManager.isReplaying()) {\r\n      if (\r\n        Input.lastPressTime !== 0 &&\r\n        Date.now() - Input.lastPressTime > GameConstants.KEY_REPEAT_TIME\r\n      ) {\r\n        Input.onKeydown({\r\n          repeat: false,\r\n          key: Input.lastPressKey,\r\n        } as KeyboardEvent);\r\n      }\r\n    }\r\n\r\n    // Add mouse repeat for movement (disabled during replay)\r\n    if (!this.replayManager.isReplaying()) {\r\n      if (\r\n        Input.mouseDown &&\r\n        Input.mouseDownHandled &&\r\n        Input.lastMouseDownTime !== 0 &&\r\n        Date.now() - Input.lastMouseDownTime > GameConstants.KEY_REPEAT_TIME\r\n      ) {\r\n        // Re-trigger mouse movement\r\n        const player = this.players[this.localPlayerID];\r\n        if (\r\n          player &&\r\n          player.game.levelState === LevelState.IN_LEVEL &&\r\n          !player.dead &&\r\n          !player.menu.open &&\r\n          !player.busyAnimating &&\r\n          !player.game.cameraAnimation.active\r\n        ) {\r\n          // Update mouse position and trigger movement\r\n          player.moveWithMouse();\r\n          Input.lastMouseDownTime = Date.now(); // Reset timer for next repeat\r\n        }\r\n      }\r\n    }\r\n\r\n    // Swipe hold repeat with initial delay\r\n    if (Input.swipeHoldActive && Input.lastSwipeTime !== 0) {\r\n      const timeSinceSwipe = Date.now() - Input.lastSwipeTime;\r\n\r\n      if (!Input.swipeHoldRepeating) {\r\n        // Check if we've waited long enough for initial delay\r\n        if (timeSinceSwipe > GameConstants.SWIPE_HOLD_INITIAL_DELAY) {\r\n          Input.swipeHoldRepeating = true;\r\n          Input.lastSwipeTime = Date.now(); // Reset timer for repeat timing\r\n        }\r\n      } else {\r\n        // We're in repeat mode, check if it's time to repeat\r\n        if (timeSinceSwipe > GameConstants.SWIPE_HOLD_REPEAT_TIME) {\r\n          // Trigger the swipe listener again based on last direction\r\n          switch (Input.lastSwipeDirection) {\r\n            case Direction.LEFT:\r\n              Input.leftSwipeListener();\r\n              break;\r\n            case Direction.RIGHT:\r\n              Input.rightSwipeListener();\r\n              break;\r\n            case Direction.UP:\r\n              Input.upSwipeListener();\r\n              break;\r\n            case Direction.DOWN:\r\n              Input.downSwipeListener();\r\n              break;\r\n          }\r\n          Input.lastSwipeTime = Date.now(); // Reset timer for next repeat\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.levelState === LevelState.TRANSITIONING) {\r\n      if (\r\n        Date.now() - this.transitionStartTime >=\r\n        LevelConstants.LEVEL_TRANSITION_TIME\r\n      ) {\r\n        this.levelState = LevelState.IN_LEVEL;\r\n      }\r\n    }\r\n    if (this.levelState === LevelState.TRANSITIONING_LADDER) {\r\n      if (\r\n        Date.now() - this.transitionStartTime >=\r\n        LevelConstants.LEVEL_TRANSITION_TIME_LADDER\r\n      ) {\r\n        this.levelState = LevelState.IN_LEVEL;\r\n        this.players[this.localPlayerID].map.saveMapData();\r\n      }\r\n    }\r\n    if (this.levelState !== LevelState.LEVEL_GENERATION) {\r\n      for (const i in this.players) {\r\n        this.players[i].update();\r\n\r\n        // Don't update rooms during level transitions\r\n        if (\r\n          this.levelState !== LevelState.TRANSITIONING &&\r\n          this.levelState !== LevelState.TRANSITIONING_LADDER\r\n        ) {\r\n          const player = this.players[i];\r\n          const room = (player as any).getRoom\r\n            ? (player as any).getRoom()\r\n            : this.levels[player.depth].rooms[player.levelID];\r\n          room.update();\r\n        }\r\n\r\n        if (this.players[i].dead) {\r\n          for (const j in this.players) {\r\n            this.players[j].dead = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  lerp = (a: number, b: number, t: number): number => {\r\n    return (1 - t) * a + t * b;\r\n  };\r\n\r\n  pushMessage = (message: string) => {\r\n    this.chat.push(new ChatMessage(message));\r\n  };\r\n\r\n  // Add this helper function before the commandHandler\r\n  private convertSeedToNumber = (seed: string): number => {\r\n    // If it's already a number, parse and return it\r\n    if (/^\\d+$/.test(seed)) {\r\n      return parseInt(seed);\r\n    }\r\n\r\n    // Convert letters to numbers using character codes\r\n    let hash = 0;\r\n    for (let i = 0; i < seed.length; i++) {\r\n      const char = seed.charCodeAt(i);\r\n      hash = (hash << 5) - hash + char;\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n\r\n    // Ensure positive number\r\n    return Math.abs(hash);\r\n  };\r\n\r\n  commandHandler = (command: string): void => {\r\n    command = command.toLowerCase();\r\n    let enabled = \"\";\r\n\r\n    // Handle \"new\" command with optional seed parameter\r\n\r\n    if (command.startsWith(\"new\")) {\r\n      if (command.startsWith(\"new \")) {\r\n        const seedInput = command.slice(4).trim();\r\n        const seedNumber = this.convertSeedToNumber(seedInput);\r\n        this.pushMessage(\r\n          `Starting new game with seed: ${seedInput} (${seedNumber})`,\r\n        );\r\n        this.newGame(seedNumber);\r\n      } else if (command === \"new\") {\r\n        this.newGame();\r\n      }\r\n      return;\r\n    }\r\n\r\n    switch (command) {\r\n      case \"ladder\":\r\n        this.pushMessage(\r\n          `Distance to nearest up ladder: ${this.room.getDistanceToNearestLadder(\"up\")}`,\r\n        );\r\n        break;\r\n      case \"encounter\":\r\n        this.pushMessage(\r\n          \"Encountering enemies...\" + this.encounteredEnemies.length,\r\n        );\r\n        break;\r\n      case \"key\":\r\n        const keyRoom = this.level.getKeyRoom(this.room);\r\n        if (keyRoom) {\r\n          this.pushMessage(`Key room: ${keyRoom.id}`);\r\n          keyRoom.entered = true;\r\n          keyRoom.calculateWallInfo();\r\n          this.changeLevelThroughDoor(\r\n            this.players[this.localPlayerID],\r\n            keyRoom.doors[0],\r\n            1,\r\n          );\r\n          const tile = keyRoom.getRandomEmptyPosition(keyRoom.getEmptyTiles());\r\n          this.players[this.localPlayerID].x = tile.x;\r\n          this.players[this.localPlayerID].y = tile.y;\r\n          keyRoom.updateLighting();\r\n          this.pushMessage(\"Downladder located\");\r\n        }\r\n        break;\r\n\r\n      case \"level\":\r\n        this.pushMessage(`Level: ${this.level.globalId}`);\r\n        break;\r\n      case \"down\":\r\n        let downladder: DownLadder;\r\n        for (const room of this.level.rooms) {\r\n          if (room.type !== RoomType.DOWNLADDER) {\r\n            for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n              for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n                if (room.roomArray[x][y] instanceof DownLadder) {\r\n                  downladder = room.roomArray[x][y] as DownLadder;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (downladder) {\r\n          downladder.room.entered = true;\r\n          downladder.room.calculateWallInfo();\r\n          this.changeLevelThroughDoor(\r\n            this.players[this.localPlayerID],\r\n            downladder.room.doors[0],\r\n            1,\r\n          );\r\n          downladder.lockable.removeLock();\r\n          this.players[this.localPlayerID].x = downladder.x;\r\n          this.players[this.localPlayerID].y = downladder.y;\r\n          downladder.room.updateLighting();\r\n          this.pushMessage(\"Downladder located\");\r\n        }\r\n        break;\r\n      case \"lightup\":\r\n        LevelConstants.LIGHTING_ANGLE_STEP += 1;\r\n        this.pushMessage(\r\n          `Lighting angle step is now ${LevelConstants.LIGHTING_ANGLE_STEP}`,\r\n        );\r\n        break;\r\n      case \"lightdown\":\r\n        if (LevelConstants.LIGHTING_ANGLE_STEP > 1) {\r\n          LevelConstants.LIGHTING_ANGLE_STEP -= 1;\r\n        }\r\n        this.pushMessage(\r\n          `Lighting angle step is now ${LevelConstants.LIGHTING_ANGLE_STEP}`,\r\n        );\r\n        break;\r\n      case \"savec\": {\r\n        try {\r\n          const { saveToCookies } = require(\"./game/savePersistence\");\r\n          saveToCookies(this);\r\n          this.pushMessage(\r\n            \"Attempted cookie save (cookies/localStorage fallback).\",\r\n          );\r\n        } catch (e) {\r\n          this.pushMessage(\"Cookie save failed.\");\r\n        }\r\n        break;\r\n      }\r\n      case \"loadc\": {\r\n        try {\r\n          const { loadFromCookies } = require(\"./game/savePersistence\");\r\n          loadFromCookies(this);\r\n          this.pushMessage(\r\n            \"Attempted cookie load (cookies/localStorage fallback).\",\r\n          );\r\n        } catch (e) {\r\n          this.pushMessage(\"Cookie load failed.\");\r\n        }\r\n        break;\r\n      }\r\n      case \"replay\":\r\n        this.pushMessage(\"Starting replay...\");\r\n        this.replayManager.replay(this);\r\n        break;\r\n      case \"replayinfo\": {\r\n        const s = (this.replayManager as any).getStats?.();\r\n        this.pushMessage(\r\n          s\r\n            ? `Replay stats: actions=${s.count}, seed=${s.seed}, recording=${s.recording}, replaying=${s.replaying}`\r\n            : \"No replay stats available.\",\r\n        );\r\n        break;\r\n      }\r\n      case \"replayclear\":\r\n        (this.replayManager as any).clearRecording?.();\r\n        this.pushMessage(\"Replay buffer cleared.\");\r\n        break;\r\n      case \"devmode\":\r\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\r\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\r\n        break;\r\n      case \"dev\":\r\n        GameConstants.DEVELOPER_MODE = !GameConstants.DEVELOPER_MODE;\r\n        console.log(`Developer mode is now ${GameConstants.DEVELOPER_MODE}`);\r\n        this.newGame();\r\n        break;\r\n      case \"kill\":\r\n        for (const i in this.players) {\r\n          this.players[i].dead = true;\r\n        }\r\n        break;\r\n      case \"killall\":\r\n        for (const i in this.players) {\r\n          this.players[i].game.room.entities.forEach((e) => {\r\n            e.kill();\r\n          });\r\n        }\r\n        break;\r\n      case \"bomb\":\r\n        this.room.addBombs(1, () => Random.rand());\r\n        break;\r\n      case \"col\":\r\n        GameConstants.SET_COLOR_LAYER_COMPOSITE_OPERATION(false);\r\n        break;\r\n      case \"scl\":\r\n        GameConstants.SET_SCALE();\r\n        this.onResize();\r\n        break;\r\n      case \"shd\":\r\n        //GameConstants.SHADE_ENABLED = !GameConstants.SHADE_ENABLED;\r\n        //enabled = GameConstants.SHADE_ENABLED ? \"enabled\" : \"disabled\";\r\n        //this.pushMessage(`Shade is now ${enabled}`);\r\n        break;\r\n      case \"shdop\":\r\n        GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(false);\r\n        break;\r\n      case \"smooth\":\r\n        GameConstants.SMOOTH_LIGHTING = !GameConstants.SMOOTH_LIGHTING;\r\n        enabled = GameConstants.SMOOTH_LIGHTING ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Smooth lighting is now ${enabled}`);\r\n        try {\r\n          const { saveSettings } = require(\"./game/settingsPersistence\");\r\n          saveSettings(this);\r\n        } catch {}\r\n        break;\r\n      case \"rooms\":\r\n        GameConstants.drawOtherRooms = !GameConstants.drawOtherRooms;\r\n        enabled = GameConstants.drawOtherRooms ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Drawing other rooms is now ${enabled}`);\r\n        break;\r\n      case \"opq\":\r\n        GameConstants.ENEMIES_BLOCK_LIGHT = !GameConstants.ENEMIES_BLOCK_LIGHT;\r\n        enabled = GameConstants.ENEMIES_BLOCK_LIGHT ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Enemies block light is now ${enabled}`);\r\n        break;\r\n      case \"peace\":\r\n        GameplaySettings.NO_ENEMIES = !GameplaySettings.NO_ENEMIES;\r\n        this.newGame();\r\n        enabled = GameplaySettings.NO_ENEMIES ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Peaceful mode is now ${enabled}`);\r\n        break;\r\n      case \"equip\":\r\n        GameplaySettings.EQUIP_USES_TURN = !GameplaySettings.EQUIP_USES_TURN;\r\n        enabled = GameplaySettings.EQUIP_USES_TURN ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Equipping an item takes a turn is now ${enabled}`);\r\n        break;\r\n      case \"inline\":\r\n        GameConstants.SHADE_INLINE_IN_ENTITY_LAYER =\r\n          !GameConstants.SHADE_INLINE_IN_ENTITY_LAYER;\r\n        enabled = GameConstants.SHADE_INLINE_IN_ENTITY_LAYER\r\n          ? \"enabled\"\r\n          : \"disabled\";\r\n        this.pushMessage(`Inline tile shading ${enabled}`);\r\n        break;\r\n\r\n      case \"webgl\": {\r\n        // Toggle WebGL blur and initialize renderer if enabling\r\n        GameConstants.TOGGLE_USE_WEBGL_BLUR();\r\n        if (GameConstants.USE_WEBGL_BLUR) {\r\n          try {\r\n            const { WebGLBlurRenderer } = require(\"./gui/webglBlurRenderer\");\r\n            WebGLBlurRenderer.getInstance();\r\n            this.pushMessage(\"WebGL blur enabled and initialized.\");\r\n          } catch (e) {\r\n            this.pushMessage(\r\n              \"Failed to initialize WebGL blur. Falling back to Canvas blur.\",\r\n            );\r\n            GameConstants.USE_WEBGL_BLUR = false;\r\n          }\r\n        } else {\r\n          // Optional: clear any cached results when disabling\r\n          try {\r\n            const { WebGLBlurRenderer } = require(\"./gui/webglBlurRenderer\");\r\n            WebGLBlurRenderer.getInstance().clearCache?.();\r\n          } catch {}\r\n          this.pushMessage(\"WebGL blur disabled.\");\r\n        }\r\n        break;\r\n      }\r\n      case \"hq\":\r\n        GameConstants.TOGGLE_HIGH_QUALITY_BLUR();\r\n        break;\r\n      case \"genroom\":\r\n        this.generateAndShowRoomLayout();\r\n        break;\r\n      case \"cleargen\":\r\n        this.currentLevelGenerator = null;\r\n        this.pushMessage(\"Cleared generated level display\");\r\n        break;\r\n      case \"post\":\r\n        PostProcessor.settings.enabled = !PostProcessor.settings.enabled;\r\n        enabled = PostProcessor.settings.enabled ? \"enabled\" : \"disabled\";\r\n        this.pushMessage(`Post processor is now ${enabled}`);\r\n        break;\r\n      case \"save\":\r\n        try {\r\n          if (this.replayManager.isReplaying()) {\r\n            this.pushMessage(\"Cannot save during replay.\");\r\n          } else {\r\n            this.savedGameState = createGameState(this);\r\n            this.pushMessage(\"Game state saved successfully!\");\r\n            console.log(\"Saved game state:\", this.savedGameState);\r\n          }\r\n        } catch (error) {\r\n          this.pushMessage(\"Error saving game state: \" + error.message);\r\n          console.error(\"Save error:\", error);\r\n        }\r\n        break;\r\n\r\n      case \"load\":\r\n        if (!this.savedGameState) {\r\n          this.pushMessage(\r\n            \"No saved game state found. Use 'save' command first.\",\r\n          );\r\n          return;\r\n        }\r\n        try {\r\n          // Get current active usernames (for multiplayer support)\r\n          const activeUsernames = Object.keys(this.players);\r\n          loadGameState(this, activeUsernames, this.savedGameState, false);\r\n          this.pushMessage(\"Game state loaded successfully!\");\r\n          console.log(\"Loaded game state\");\r\n        } catch (error) {\r\n          this.pushMessage(\"Error loading game state: \" + error.message);\r\n          console.error(\"Load error:\", error);\r\n        }\r\n        break;\r\n\r\n      case \"saveinfo\":\r\n        if (!this.savedGameState) {\r\n          this.pushMessage(\"No saved game state found.\");\r\n          return;\r\n        }\r\n        this.pushMessage(\r\n          `Saved state - Seed: ${this.savedGameState.seed}, Depth: ${this.savedGameState.level.depth}, Players: ${Object.keys(this.savedGameState.players).length}`,\r\n        );\r\n        console.log(\"Saved game state details:\", this.savedGameState);\r\n        break;\r\n\r\n      case \"currentinfo\":\r\n        this.pushMessage(\r\n          `Current state - Seed: ${this.levelgen.seed}, Depth: ${this.level.depth}, Players: ${Object.keys(this.players).length}`,\r\n        );\r\n        console.log(\"Current game state details:\", {\r\n          seed: this.levelgen.seed,\r\n          depth: this.level.depth,\r\n          players: Object.keys(this.players),\r\n          rooms: this.rooms.length,\r\n        });\r\n        break;\r\n\r\n      case \"testsave\":\r\n        // Save current state, make some changes, then load to verify\r\n        try {\r\n          if (this.replayManager.isReplaying()) {\r\n            this.pushMessage(\"Cannot save during replay.\");\r\n            break;\r\n          }\r\n          this.savedGameState = createGameState(this);\r\n          const originalHealth = this.players[this.localPlayerID].health;\r\n          const originalX = this.players[this.localPlayerID].x;\r\n          const originalY = this.players[this.localPlayerID].y;\r\n\r\n          // Make some changes\r\n          this.players[this.localPlayerID].health = Math.max(\r\n            1,\r\n            this.players[this.localPlayerID].health - 1,\r\n          );\r\n          this.players[this.localPlayerID].x += 1;\r\n          this.players[this.localPlayerID].y += 1;\r\n\r\n          this.pushMessage(\r\n            `Changes made - Health: ${originalHealth} -> ${this.players[this.localPlayerID].health}, Pos: (${originalX},${originalY}) -> (${this.players[this.localPlayerID].x},${this.players[this.localPlayerID].y})`,\r\n          );\r\n          this.pushMessage(\"Use 'load' to restore the saved state\");\r\n        } catch (error) {\r\n          this.pushMessage(\"Error in test save: \" + error.message);\r\n          console.error(\"Test save error:\", error);\r\n        }\r\n        break;\r\n      default:\r\n        if (command.startsWith(\"spawn \")) {\r\n          this.room.addNewEnemy(command.slice(6) as EnemyType);\r\n        } else if (command.startsWith(\"fill\")) {\r\n          while (this.room.getEmptyTiles().length > 0) {\r\n            this.room.addNewEnemy(command.slice(5) as EnemyType);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  private setupEventListeners(): void {\r\n    //console.log(\"Setting up event listeners\");\r\n    globalEventBus.on(\"ChatCommand\", this.commandHandler.bind(this));\r\n    try {\r\n      // Save on tab close/refresh and when page becomes hidden\r\n      const saveOnExit = () => {\r\n        try {\r\n          const { saveToCookies } = require(\"./game/savePersistence\");\r\n          // Avoid heavy work in beforeunload; keep it minimal\r\n          saveToCookies(this);\r\n        } catch {}\r\n      };\r\n      window.addEventListener(\"beforeunload\", saveOnExit);\r\n      document.addEventListener(\"visibilitychange\", () => {\r\n        if (document.visibilityState === \"hidden\") saveOnExit();\r\n      });\r\n      window.addEventListener(\"pagehide\", saveOnExit);\r\n      window.addEventListener(\"unload\", () => {\r\n        try {\r\n          const { Sound } = require(\"./sound/sound\");\r\n          Sound.cleanup?.();\r\n        } catch {}\r\n      });\r\n      // Save on back/forward navigation\r\n      window.addEventListener(\"popstate\", saveOnExit);\r\n      window.addEventListener(\"hashchange\", saveOnExit);\r\n    } catch {}\r\n  }\r\n\r\n  private generateAndShowRoomLayout(): void {\r\n    // Generate different patterns\r\n    const patterns: (\"center\" | \"split\" | \"corners\")[] = [\r\n      \"center\",\r\n      \"split\",\r\n      \"corners\",\r\n    ];\r\n    const pattern = patterns[Math.floor(Random.rand() * patterns.length)];\r\n\r\n    // Generate level with random parameters\r\n    const numRooms = 8 + Math.floor(Random.rand() * 12); // 8-20 rooms\r\n    const width = 60 + Math.floor(Random.rand() * 40); // 60-100 width\r\n    const height = 50 + Math.floor(Random.rand() * 30); // 50-80 height\r\n\r\n    const generator = LevelImageGenerator.generateRandomLevel(\r\n      width,\r\n      height,\r\n      numRooms,\r\n      Random.rand,\r\n      pattern,\r\n    );\r\n\r\n    // Check accessibility\r\n    const accessible = generator.areRoomsAccessible();\r\n    const accessibilityText = accessible\r\n      ? \"✓ All rooms accessible\"\r\n      : \"✗ Some rooms inaccessible\";\r\n\r\n    // Store generator for drawing\r\n    this.currentLevelGenerator = generator;\r\n\r\n    this.pushMessage(\r\n      `Generated ${numRooms} rooms (${pattern} pattern) - ${accessibilityText}`,\r\n    );\r\n    this.pushMessage(\"Level layout shown on screen. Use '/cleargen' to clear.\");\r\n\r\n    // Save PNG with organized filename\r\n    const timestamp = new Date()\r\n      .toISOString()\r\n      .slice(0, 19)\r\n      .replace(/[T:]/g, \"_\");\r\n    const filename = `${pattern}_${width}x${height}_${numRooms}rooms_${timestamp}.png`;\r\n\r\n    generator.savePNG(filename);\r\n    this.pushMessage(`PNG saved as: generated_levels/${filename}`);\r\n    this.pushMessage(\"Check browser downloads or console for data URL\");\r\n\r\n    // Log detailed info for developers\r\n    if (GameConstants.DEVELOPER_MODE) {\r\n      console.log(\"Generated level details:\", {\r\n        pattern,\r\n        dimensions: `${width}x${height}`,\r\n        numRooms,\r\n        accessible,\r\n        rooms: generator.getRooms(),\r\n      });\r\n    }\r\n  }\r\n\r\n  maxScale = () => {\r\n    let dimension = window.innerWidth;\r\n    let measure = 130;\r\n\r\n    for (let i = GameConstants.MIN_SCALE; i <= GameConstants.MAX_SCALE; i++) {\r\n      if (dimension / i < measure) {\r\n        return i;\r\n      }\r\n    }\r\n    return GameConstants.MAX_SCALE;\r\n  };\r\n\r\n  increaseScale = () => {\r\n    GameConstants.INCREASE_SCALE();\r\n    this.onResize();\r\n    // Recalculate mouse position for new scale\r\n    Input.recalculateMousePosition();\r\n  };\r\n\r\n  decreaseScale = () => {\r\n    GameConstants.DECREASE_SCALE();\r\n    this.onResize();\r\n    // Recalculate mouse position for new scale\r\n    Input.recalculateMousePosition();\r\n  };\r\n\r\n  updateScale = (delta: number) => {\r\n    if (GameConstants.smoothScaling) {\r\n      if (\r\n        GameConstants.SOFT_SCALE < GameConstants.SCALE &&\r\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) >= 0.1\r\n      ) {\r\n        GameConstants.SOFT_SCALE +=\r\n          ((GameConstants.SCALE - GameConstants.SOFT_SCALE) * delta) / 10;\r\n      }\r\n      if (\r\n        GameConstants.SOFT_SCALE > GameConstants.SCALE &&\r\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) >= 0.1\r\n      ) {\r\n        GameConstants.SOFT_SCALE -=\r\n          ((GameConstants.SOFT_SCALE - GameConstants.SCALE) * delta) / 10;\r\n      }\r\n\r\n      if (\r\n        GameConstants.SOFT_SCALE < GameConstants.SCALE &&\r\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.1\r\n      ) {\r\n        GameConstants.SOFT_SCALE += delta / 25;\r\n      }\r\n      if (\r\n        GameConstants.SOFT_SCALE > GameConstants.SCALE &&\r\n        Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.1\r\n      ) {\r\n        GameConstants.SOFT_SCALE -= delta / 25;\r\n      }\r\n      if (Math.abs(GameConstants.SOFT_SCALE - GameConstants.SCALE) <= 0.01) {\r\n        GameConstants.SOFT_SCALE = GameConstants.SCALE;\r\n      }\r\n    } else {\r\n      //GameConstants.SCALE = Math.floor(GameConstants.SCALE);\r\n      GameConstants.SOFT_SCALE = GameConstants.SCALE;\r\n    }\r\n\r\n    this.onResize();\r\n    // Recalculate mouse position for new scale\r\n    Input.recalculateMousePosition();\r\n  };\r\n\r\n  refreshDimensions = () => {\r\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\r\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\r\n  };\r\n\r\n  onResize = () => {\r\n    if (\r\n      this.localPlayerID !== undefined &&\r\n      this.players?.[this.localPlayerID] &&\r\n      this.players?.[this.localPlayerID]?.menu\r\n    ) {\r\n      this.players[this.localPlayerID].menu.positionButtons();\r\n    }\r\n    this.isMobile =\r\n      /iPhone|iPad|iPod|Android|webOS|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(\r\n        navigator.userAgent,\r\n      );\r\n\r\n    GameConstants.isIOS =\r\n      /iPhone|iPad|iPod/i.test(navigator.userAgent) &&\r\n      !navigator.userAgent.includes(\"Chrome DevTools\");\r\n\r\n    // Detect Safari browser and enable WebGL blur\r\n    const isSafari =\r\n      /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);\r\n    if (isSafari) {\r\n      GameConstants.USE_WEBGL_BLUR = true;\r\n      // Only set default once at initialization; do not override user choice during resize/scale changes\r\n      if (GameConstants.SCALE === null) {\r\n        GameConstants.SMOOTH_LIGHTING = false;\r\n      }\r\n    }\r\n\r\n    // Define scale adjustment based on device pixel ratio\r\n    if (GameConstants.SCALE === null) {\r\n      GameConstants.SCALE = GameConstants.FIND_SCALE(this.isMobile);\r\n      GameConstants.SOFT_SCALE = GameConstants.SCALE;\r\n    }\r\n    let scaleOffset = 0;\r\n\r\n    // Calculate maximum possible scale based on window size\r\n    let maxWidthScale = Math.floor(\r\n      window.innerWidth / GameConstants.DEFAULTWIDTH,\r\n    );\r\n    let maxHeightScale = Math.floor(\r\n      window.innerHeight / GameConstants.DEFAULTHEIGHT,\r\n    );\r\n\r\n    if (this.isMobile) {\r\n      if (this.isMobile) console.log(\"Mobile detected\");\r\n      GameConstants.SHADE_LEVELS = 35;\r\n      GameConstants.isMobile = true;\r\n      LevelConstants.LIGHTING_ANGLE_STEP = 8;\r\n      LevelConstants.LIGHTING_MAX_DISTANCE = 7;\r\n      GameConstants.USE_WEBGL_BLUR = true;\r\n\r\n      // Use smaller scale for mobile devices based on screen size\r\n      // Adjust max scale with scaleOffset\r\n      const integerScale = GameConstants.SOFT_SCALE + scaleOffset;\r\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale); // Cap at 3 + offset for mobile\r\n    } else {\r\n      GameConstants.isMobile = false;\r\n      // For desktop, use standard scaling logic\r\n      // Ensure GameConstants.SCALE is an integer. If not, round it.\r\n      const integerScale = GameConstants.SOFT_SCALE + scaleOffset;\r\n      Game.scale = Math.min(maxWidthScale, maxHeightScale, integerScale);\r\n    }\r\n\r\n    // Handle case where scale would be 0\r\n    if (Game.scale === 0) {\r\n      // Recalculate max scales without flooring to check for minimum scale\r\n      maxWidthScale = window.innerWidth / GameConstants.DEFAULTWIDTH;\r\n      maxHeightScale = window.innerHeight / GameConstants.DEFAULTHEIGHT;\r\n      // Ensure Game.scale is at least 1 and an integer\r\n      Game.scale = Math.max(\r\n        1,\r\n        Math.min(maxWidthScale, maxHeightScale, 1 + scaleOffset),\r\n      );\r\n    }\r\n\r\n    // Apply device pixel ratio negation by setting scale to compensate for DPI\r\n    const NEGATE_DPR_FACTOR = 1;\r\n    Game.scale *= NEGATE_DPR_FACTOR / window.devicePixelRatio;\r\n\r\n    // Calculate screen width and height in tiles, ensuring integer values\r\n    LevelConstants.SCREEN_W = Math.floor(\r\n      window.innerWidth / Game.scale / GameConstants.TILESIZE,\r\n    );\r\n    LevelConstants.SCREEN_H = Math.floor(\r\n      window.innerHeight / Game.scale / GameConstants.TILESIZE,\r\n    );\r\n\r\n    // Calculate canvas width and height in pixels\r\n    GameConstants.WIDTH = Math.floor(window.innerWidth / Game.scale);\r\n    GameConstants.HEIGHT = Math.floor(window.innerHeight / Game.scale);\r\n\r\n    // Set canvas width and height attributes\r\n    Game.ctx.canvas.setAttribute(\"width\", `${GameConstants.WIDTH}`);\r\n    Game.ctx.canvas.setAttribute(\"height\", `${GameConstants.HEIGHT}`);\r\n\r\n    // Set CSS styles for scaling, applying negated DPR factor\r\n    Game.ctx.canvas.setAttribute(\r\n      \"style\",\r\n      `width: ${GameConstants.WIDTH * Game.scale}px; height: ${\r\n        GameConstants.HEIGHT * Game.scale\r\n      }px;\r\n      display: block;\r\n      margin: 0 auto;\r\n      image-rendering: optimizeSpeed; /* Older versions of FF */\r\n      image-rendering: -moz-crisp-edges; /* FF 6.0+ */\r\n      image-rendering: -webkit-optimize-contrast; /* Safari */\r\n      image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\r\n      image-rendering: pixelated; /* Future-browsers */\r\n      -ms-interpolation-mode: nearest-neighbor; /* IE */\r\n      `,\r\n    );\r\n\r\n    // Clear chat cache if width changed\r\n    const newChatWidth = GameConstants.WIDTH - 20; // Account for margins\r\n    if (newChatWidth !== this.lastChatWidth) {\r\n      this.chat.forEach((msg) => msg.clearCache());\r\n      this.lastChatWidth = newChatWidth;\r\n    }\r\n  };\r\n\r\n  shakeScreen = (shakeX: number, shakeY: number, clamp: boolean = false) => {\r\n    let finalX = clamp ? Math.max(-3, Math.min(3, shakeX)) : shakeX;\r\n    let finalY = clamp ? Math.max(-3, Math.min(3, shakeY)) : shakeY;\r\n\r\n    this.screenShakeActive = true;\r\n    this.screenShakeX += finalX;\r\n    this.screenShakeY += finalY;\r\n    this.shakeAmountX += Math.abs(finalX);\r\n    this.shakeAmountY += Math.abs(finalY);\r\n    if (finalX < 0 || finalY < 0) this.shakeFrame = (3 * Math.PI) / 2;\r\n    if (finalX > 0 || finalY > 0) this.shakeFrame = Math.PI / 2;\r\n    this.screenShakeCutoff = Date.now();\r\n  };\r\n\r\n  drawRooms = (delta: number, skipLocalPlayer: boolean = false) => {\r\n    if (!GameConstants.drawOtherRooms) {\r\n      // Ensure current room is drawn even if flags are stale\r\n      if (!this.room || this.room.pathId !== this.currentPathId) return;\r\n      this.room.draw(delta);\r\n      this.room.drawEntities(delta, true);\r\n    } else if (GameConstants.drawOtherRooms) {\r\n      // Create a sorted copy of the rooms array based on roomY + height\r\n      const sortedRooms = this.rooms\r\n        .filter((r) => r.pathId === this.currentPathId)\r\n        .slice()\r\n        .sort((a, b) => {\r\n          const aPosition = a.roomY + a.height;\r\n          const bPosition = b.roomY + b.height;\r\n          return aPosition - bPosition; // Ascending order\r\n        });\r\n\r\n      for (const room of sortedRooms) {\r\n        const shouldDraw =\r\n          room === this.room || room.active || (room.entered && room.onScreen);\r\n        if (shouldDraw) {\r\n          room.draw(delta);\r\n\r\n          room.drawEntities(delta, skipLocalPlayer);\r\n          //room.drawShade(delta); // this used to come after the color layer\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  drawRoomShadeAndColor = (delta: number) => {\r\n    for (const room of this.rooms) {\r\n      if (room.pathId !== this.currentPathId) continue;\r\n      const shouldDraw = room === this.room || room.active || room.entered;\r\n      if (shouldDraw) {\r\n        if (\r\n          GameConstants.SMOOTH_LIGHTING &&\r\n          !GameConstants.SHADE_INLINE_IN_ENTITY_LAYER\r\n        )\r\n          room.drawShadeLayer();\r\n        room.drawColorLayer();\r\n        room.drawBloomLayer(delta);\r\n      }\r\n    }\r\n    for (const room of this.rooms) {\r\n      if (room.pathId !== this.currentPathId) continue;\r\n      const shouldDrawOver =\r\n        room === this.room || (room.active && room.entered);\r\n      if (shouldDrawOver) {\r\n        room.drawOverShade(delta);\r\n      }\r\n    }\r\n  };\r\n\r\n  static measureText = (text: string): { width: number; height: number } => {\r\n    let w = 0;\r\n    for (const letter of text.toLowerCase()) {\r\n      if (letter === \" \") w += 4;\r\n      else\r\n        for (let i = 0; i < Game.letters.length; i++) {\r\n          if (Game.letters[i] === letter) {\r\n            w += Game.letter_widths[i] + 1;\r\n          }\r\n        }\r\n    }\r\n    return { width: w, height: Game.letter_height };\r\n  };\r\n\r\n  static fillText = (text: string, x: number, y: number, maxWidth?: number) => {\r\n    x = Math.round(x);\r\n    y = Math.round(y);\r\n\r\n    if (Game.letter_positions.length === 0) {\r\n      // calculate letter positions\r\n      for (let i = 0; i < Game.letter_widths.length; i++) {\r\n        if (i === 0) Game.letter_positions[0] = 0;\r\n        else\r\n          Game.letter_positions[i] =\r\n            Game.letter_positions[i - 1] + Game.letter_widths[i - 1] + 2;\r\n      }\r\n    } else {\r\n      let dimensions = Game.measureText(text);\r\n      if (dimensions.width > 0) {\r\n        let key = text + Game.ctx.fillStyle;\r\n\r\n        if (!Game.text_rendering_canvases[key]) {\r\n          Game.text_rendering_canvases[key] = document.createElement(\"canvas\");\r\n          Game.text_rendering_canvases[key].width = dimensions.width;\r\n          Game.text_rendering_canvases[key].height = dimensions.height;\r\n          let bx = Game.text_rendering_canvases[key].getContext(\"2d\");\r\n\r\n          let letter_x = 0;\r\n          for (const letter of text.toLowerCase()) {\r\n            if (letter === \" \") letter_x += 4;\r\n            else\r\n              for (let i = 0; i < Game.letters.length; i++) {\r\n                if (Game.letters[i] === letter) {\r\n                  bx.drawImage(\r\n                    Game.fontsheet,\r\n                    Game.letter_positions[i] + 1,\r\n                    0,\r\n                    Game.letter_widths[i],\r\n                    Game.letter_height,\r\n                    letter_x,\r\n                    0,\r\n                    Game.letter_widths[i],\r\n                    Game.letter_height,\r\n                  );\r\n                  letter_x += Game.letter_widths[i] + 1;\r\n                }\r\n              }\r\n          }\r\n          bx.fillStyle = Game.ctx.fillStyle;\r\n          bx.globalCompositeOperation = \"source-in\";\r\n          bx.fillRect(\r\n            0,\r\n            0,\r\n            Game.text_rendering_canvases[key].width,\r\n            Game.text_rendering_canvases[key].height,\r\n          );\r\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\r\n        } else {\r\n          Game.ctx.drawImage(Game.text_rendering_canvases[key], x, y);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  static fillTextOutline = (\r\n    text: string,\r\n    x: number,\r\n    y: number,\r\n    outlineColor: string,\r\n    fillColor: string,\r\n  ) => {\r\n    Game.ctx.fillStyle = outlineColor;\r\n    for (let xx = -1; xx <= 1; xx++) {\r\n      for (let yy = -1; yy <= 1; yy++) {\r\n        Game.fillText(text, x + xx, y + yy);\r\n      }\r\n    }\r\n    Game.ctx.fillStyle = fillColor;\r\n    Game.fillText(text, x, y);\r\n  };\r\n\r\n  drawStartScreen = (delta: number) => {\r\n    let startString = \"Welcome to Turnarchist\";\r\n\r\n    Game.ctx.globalAlpha = this.startScreenAlpha;\r\n    if (!this.started && !this.startedFadeOut) {\r\n      this.startScreenAlpha = 1;\r\n      if (this.startScreenAlpha <= 0) this.startScreenAlpha = 0;\r\n    } else if (!this.started && this.startedFadeOut) {\r\n      this.startScreenAlpha -= delta * 0.025;\r\n      if (this.startScreenAlpha <= 0) {\r\n        this.startScreenAlpha = 0;\r\n        this.started = true;\r\n        Sound.playAmbient();\r\n      }\r\n    }\r\n\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n\r\n    // Draw CTA or menu buttons depending on startMenuActive\r\n    if (!this.startMenuActive && !this.startedFadeOut) {\r\n      Game.fillText(\r\n        startString,\r\n        GameConstants.WIDTH / 2 - Game.measureText(startString).width / 2,\r\n        GameConstants.HEIGHT / 2 - Game.letter_height + 2,\r\n      );\r\n      let restartButton = \"Press space or click to start\";\r\n      if (this.isMobile) restartButton = \"Tap to start\";\r\n      Game.fillText(\r\n        restartButton,\r\n        GameConstants.WIDTH / 2 - Game.measureText(restartButton).width / 2,\r\n        GameConstants.HEIGHT / 2 + Game.letter_height + 5,\r\n      );\r\n    } else {\r\n      // Draw the start screen menu buttons (Continue/New Game)\r\n      this.startMenu?.draw();\r\n    }\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n\r\n  drawTipScreen = (delta: number) => {\r\n    let tip = this.tip;\r\n\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n\r\n    Game.fillText(\r\n      tip,\r\n      GameConstants.WIDTH / 2 - Game.measureText(tip).width / 2,\r\n      GameConstants.HEIGHT / 2 - Game.letter_height + 2,\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (GameConstants.SOFT_SCALE !== GameConstants.SCALE) {\r\n      this.updateScale(delta);\r\n      this.onResize();\r\n    }\r\n    //Game.ctx.canvas.setAttribute(\"role\", \"presentation\");\r\n\r\n    Game.ctx.clearRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    // Reset transformations to ensure the black background covers the entire canvas\r\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    //if (this.room) Game.ctx.fillStyle = this.room.shadeColor;\r\n    //else Game.ctx.fillStyle = \"black\";\r\n    //Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    if (this.levelState === LevelState.TRANSITIONING) {\r\n      this.screenShakeX = 0;\r\n      this.screenShakeY = 0;\r\n      this.screenShakeActive = false;\r\n\r\n      let levelOffsetX = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          -this.transitionX,\r\n        ),\r\n      );\r\n      let levelOffsetY = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          -this.transitionY,\r\n        ),\r\n      );\r\n      let playerOffsetX = levelOffsetX - this.transitionX;\r\n      let playerOffsetY = levelOffsetY - this.transitionY;\r\n\r\n      let playerCX =\r\n        (this.players[this.localPlayerID].x -\r\n          this.players[this.localPlayerID].drawX +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n      let playerCY =\r\n        (this.players[this.localPlayerID].y -\r\n          this.players[this.localPlayerID].drawY +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n\r\n      Game.ctx.translate(\r\n        -Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\r\n        -Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      let extraTileLerp = Math.floor(\r\n        this.lerp(\r\n          (Date.now() - this.transitionStartTime) /\r\n            LevelConstants.LEVEL_TRANSITION_TIME,\r\n          0,\r\n          GameConstants.TILESIZE,\r\n        ),\r\n      );\r\n\r\n      let newLevelOffsetX = playerOffsetX;\r\n      let newLevelOffsetY = playerOffsetY;\r\n\r\n      if (this.sideTransition) {\r\n        if (this.sideTransitionDirection > 0) {\r\n          levelOffsetX += extraTileLerp;\r\n          newLevelOffsetX += extraTileLerp + GameConstants.TILESIZE;\r\n        } else {\r\n          levelOffsetX -= extraTileLerp;\r\n          newLevelOffsetX -= extraTileLerp + GameConstants.TILESIZE;\r\n        }\r\n      } else if (this.upwardTransition) {\r\n        levelOffsetY -= extraTileLerp;\r\n        newLevelOffsetY -= extraTileLerp + GameConstants.TILESIZE;\r\n      } else {\r\n        levelOffsetY += extraTileLerp;\r\n        newLevelOffsetY += extraTileLerp + GameConstants.TILESIZE;\r\n      }\r\n\r\n      let ditherFrame = Math.floor(\r\n        (7 * (Date.now() - this.transitionStartTime)) /\r\n          LevelConstants.LEVEL_TRANSITION_TIME,\r\n      );\r\n\r\n      Game.ctx.translate(levelOffsetX, levelOffsetY);\r\n      if (!GameConstants.drawOtherRooms) {\r\n        this.prevLevel.draw(delta);\r\n        this.prevLevel.drawEntities(delta);\r\n        this.prevLevel.drawColorLayer();\r\n        this.prevLevel.drawShade(delta);\r\n        this.prevLevel.drawOverShade(delta);\r\n\r\n        /*\r\n        for (\r\n          let x = this.prevLevel.roomX - 1;\r\n          x <= this.prevLevel.roomX + this.prevLevel.width;\r\n          x++\r\n        ) {\r\n          for (\r\n            let y = this.prevLevel.roomY - 1;\r\n            y <= this.prevLevel.roomY + this.prevLevel.height;\r\n            y++\r\n          ) {\r\n            Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n          }\r\n        }\r\n\r\n      */\r\n      }\r\n      Game.ctx.translate(-levelOffsetX, -levelOffsetY);\r\n\r\n      Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\r\n\r\n      if (GameConstants.drawOtherRooms) {\r\n        this.drawRooms(delta, true);\r\n\r\n        Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\r\n        Game.ctx.translate(playerOffsetX, playerOffsetY);\r\n        this.players[this.localPlayerID].draw(delta); // draw the translation\r\n\r\n        Game.ctx.translate(-playerOffsetX, -playerOffsetY);\r\n        Game.ctx.translate(newLevelOffsetX, newLevelOffsetY);\r\n\r\n        this.drawRoomShadeAndColor(delta);\r\n      }\r\n\r\n      for (\r\n        let x = this.room.roomX - 1;\r\n        x <= this.room.roomX + this.room.width;\r\n        x++\r\n      ) {\r\n        for (\r\n          let y = this.room.roomY - 1;\r\n          y <= this.room.roomY + this.room.height;\r\n          y++\r\n        ) {\r\n          //Game.drawFX(ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n        }\r\n      }\r\n\r\n      //this.drawStuff(delta);\r\n\r\n      Game.ctx.translate(-newLevelOffsetX, -newLevelOffsetY);\r\n\r\n      Game.ctx.translate(\r\n        Math.round(playerCX + playerOffsetX - 0.5 * GameConstants.WIDTH),\r\n        Math.round(playerCY + playerOffsetY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      this.players[this.localPlayerID].drawGUI(delta);\r\n      this.justTransitioned = true;\r\n\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n    } else if (this.levelState === LevelState.TRANSITIONING_LADDER) {\r\n      let playerCX =\r\n        (this.players[this.localPlayerID].x -\r\n          this.players[this.localPlayerID].drawX +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n      let playerCY =\r\n        (this.players[this.localPlayerID].y -\r\n          this.players[this.localPlayerID].drawY +\r\n          0.5) *\r\n        GameConstants.TILESIZE;\r\n\r\n      Game.ctx.translate(\r\n        -Math.round(playerCX - 0.5 * GameConstants.WIDTH),\r\n        -Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      let deadFrames = 6;\r\n      let ditherFrame = Math.floor(\r\n        ((7 * 2 + deadFrames) * (Date.now() - this.transitionStartTime)) /\r\n          LevelConstants.LEVEL_TRANSITION_TIME_LADDER,\r\n      );\r\n\r\n      Game.ctx.translate(\r\n        Math.round(playerCX - 0.5 * GameConstants.WIDTH),\r\n        Math.round(playerCY - 0.5 * GameConstants.HEIGHT),\r\n      );\r\n\r\n      if (ditherFrame < 7) {\r\n        this.drawRooms(delta);\r\n        this.drawRoomShadeAndColor(delta);\r\n\r\n        if (!GameConstants.drawOtherRooms) {\r\n          for (\r\n            let x = this.room.roomX - 1;\r\n            x <= this.room.roomX + this.room.width;\r\n            x++\r\n          ) {\r\n            for (\r\n              let y = this.room.roomY - 1;\r\n              y <= this.room.roomY + this.room.height;\r\n              y++\r\n            ) {\r\n              Game.drawFX(7 - ditherFrame, 10, 1, 1, x, y, 1, 1);\r\n            }\r\n          }\r\n        }\r\n      } else if (ditherFrame >= 7 + deadFrames) {\r\n        if (this.transitioningLadder) {\r\n          // this.prevLevel = this.room;\r\n          // this.room.exitLevel();\r\n          this.room = this.transitioningLadder.linkedRoom;\r\n\r\n          // this.players[this.localPlayerID].levelID = this.room.id;\r\n          this.room.enterLevel(this.players[this.localPlayerID]);\r\n          this.transitioningLadder = null;\r\n        }\r\n\r\n        this.drawRooms(delta);\r\n        this.drawRoomShadeAndColor(delta);\r\n\r\n        //        this.room.draw(delta);\r\n        //        this.room.drawEntities(delta);\r\n        //        this.drawStuff(delta);\r\n        if (!GameConstants.drawOtherRooms) {\r\n          for (\r\n            let x = this.room.roomX - 1;\r\n            x <= this.room.roomX + this.room.width;\r\n            x++\r\n          ) {\r\n            for (\r\n              let y = this.room.roomY - 1;\r\n              y <= this.room.roomY + this.room.height;\r\n              y++\r\n            ) {\r\n              Game.drawFX(ditherFrame - (7 + deadFrames), 10, 1, 1, x, y, 1, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //this.players[this.localPlayerID].drawGUI(delta);  // removed this to prevent drawing gui during level transition\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n      this.drawTextScreen(\"loading level\");\r\n    } else if (this.levelState === LevelState.LEVEL_GENERATION) {\r\n      this.levelgen.draw(delta);\r\n    } else if (this.levelState === LevelState.IN_LEVEL) {\r\n      // Start of Selection\r\n\r\n      this.drawScreenShake(delta);\r\n\r\n      const { cameraX, cameraY } = this.applyCamera(delta);\r\n\r\n      Game.ctx.translate(-cameraX, -cameraY);\r\n      this.drawRooms(delta);\r\n      this.drawRoomShadeAndColor(delta);\r\n\r\n      //      this.room.draw(delta);\r\n      //      this.room.drawEntities(delta);\r\n\r\n      // this.drawStuff(delta);\r\n\r\n      Game.ctx.translate(cameraX, cameraY);\r\n\r\n      this.room.drawTopLayer(delta);\r\n      this.players[this.localPlayerID].drawGUI(delta);\r\n      //for (const i in this.players) this.players[i].updateDrawXY(delta);\r\n    }\r\n    this.drawChat(delta);\r\n\r\n    // game version\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(\r\n      GameConstants.VERSION,\r\n      GameConstants.WIDTH - Game.measureText(GameConstants.VERSION).width - 1,\r\n      1,\r\n    );\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    // fps\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.1;\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(fps + \"fps\", 1, 1);\r\n    Game.ctx.globalAlpha = 1;\r\n    if (!this.started && this.levelState !== LevelState.LEVEL_GENERATION) {\r\n      this.drawStartScreen(delta * 10);\r\n    }\r\n\r\n    // Draw level generator if active\r\n    if (this.currentLevelGenerator) {\r\n      this.currentLevelGenerator.draw(10, 10, 3);\r\n    }\r\n\r\n    MouseCursor.getInstance().draw(delta, this.isMobile);\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawChat = (delta: number) => {\r\n    const CHAT_X = 5;\r\n    const CHAT_BOTTOM_Y = GameConstants.HEIGHT - Game.letter_height - 38;\r\n    const CHAT_OPACITY = this.players?.[this.localPlayerID]?.inventory.isOpen\r\n      ? 0.05\r\n      : 1;\r\n    const CHAT_MAX_WIDTH = GameConstants.WIDTH - 5; // Leave some margin\r\n    const LINE_HEIGHT = Game.letter_height + 1;\r\n    const MAX_LINES_WHEN_CLOSED = 4;\r\n    let linesRemaining = MAX_LINES_WHEN_CLOSED;\r\n\r\n    if (this.chatOpen) {\r\n      Game.ctx.fillStyle = \"black\";\r\n      if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = 0.75;\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      Game.ctx.globalAlpha = 1;\r\n      Game.ctx.fillStyle = \"white\";\r\n      Game.fillText(this.chatTextBox.text, CHAT_X, CHAT_BOTTOM_Y);\r\n      const cursorX = Game.measureText(\r\n        this.chatTextBox.text.substring(0, this.chatTextBox.cursor),\r\n      ).width;\r\n      Game.ctx.fillRect(CHAT_X + cursorX, CHAT_BOTTOM_Y, 1, Game.letter_height);\r\n    }\r\n\r\n    // Calculate total height needed for all visible messages\r\n    let totalHeight = 0;\r\n    const messageHeights: number[] = [];\r\n\r\n    for (let i = 0; i < this.chat.length; i++) {\r\n      const lines = this.chat[i].getWrappedLines(CHAT_MAX_WIDTH);\r\n      const messageHeight = lines.length * LINE_HEIGHT;\r\n      messageHeights.push(messageHeight);\r\n      totalHeight += messageHeight;\r\n    }\r\n\r\n    // Draw messages from bottom to top\r\n    let currentY = CHAT_BOTTOM_Y;\r\n    if (this.chatOpen) {\r\n      currentY -= LINE_HEIGHT; // Account for input line\r\n    }\r\n\r\n    for (let i = this.chat.length - 1; i >= 0; i--) {\r\n      const message = this.chat[i];\r\n      const lines = message.getWrappedLines(CHAT_MAX_WIDTH);\r\n      const messageHeight = messageHeights[i];\r\n\r\n      // Calculate opacity based on age\r\n      const age = Date.now() - message.timestamp;\r\n      let alpha = 1;\r\n\r\n      if (!this.chatOpen) {\r\n        if (age <= GameConstants.CHAT_APPEAR_TIME) {\r\n          alpha = GameConstants.ALPHA_ENABLED ? CHAT_OPACITY : 1;\r\n        } else if (\r\n          age <=\r\n          GameConstants.CHAT_APPEAR_TIME + GameConstants.CHAT_FADE_TIME\r\n        ) {\r\n          alpha = GameConstants.ALPHA_ENABLED\r\n            ? CHAT_OPACITY *\r\n              (1 -\r\n                (age - GameConstants.CHAT_APPEAR_TIME) /\r\n                  GameConstants.CHAT_FADE_TIME)\r\n            : 1;\r\n        } else {\r\n          alpha = 0;\r\n        }\r\n      }\r\n\r\n      let linesDrawnThisMessage = 0;\r\n      if (alpha > 0) {\r\n        // Set message color\r\n        Game.ctx.fillStyle = \"white\";\r\n        //if (message.message[0] === \"/\") {\r\n        //  Game.ctx.fillStyle = GameConstants.GREEN;\r\n        //}\r\n        Game.ctx.globalAlpha = alpha;\r\n\r\n        // Draw lines (respect max when chat is closed)\r\n        let lineY = currentY;\r\n        if (this.chatOpen) {\r\n          for (let lineIndex = lines.length - 1; lineIndex >= 0; lineIndex--) {\r\n            Game.fillText(lines[lineIndex], CHAT_X, lineY);\r\n            lineY -= LINE_HEIGHT;\r\n          }\r\n          linesDrawnThisMessage = lines.length;\r\n        } else {\r\n          const allowed = Math.max(0, linesRemaining);\r\n          const drawCount = Math.min(lines.length, allowed);\r\n          const startIndex = lines.length - drawCount;\r\n          for (\r\n            let lineIndex = lines.length - 1;\r\n            lineIndex >= startIndex;\r\n            lineIndex--\r\n          ) {\r\n            Game.fillText(lines[lineIndex], CHAT_X, lineY);\r\n            lineY -= LINE_HEIGHT;\r\n          }\r\n          linesDrawnThisMessage = drawCount;\r\n          linesRemaining -= drawCount;\r\n        }\r\n      }\r\n\r\n      // Move up by the height that was actually drawn\r\n      if (this.chatOpen) {\r\n        currentY -= messageHeight;\r\n      } else {\r\n        currentY -= linesDrawnThisMessage * LINE_HEIGHT;\r\n      }\r\n\r\n      if (!this.chatOpen && linesRemaining <= 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Reset alpha\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n\r\n  private isPointInChatHotspot(x: number, y: number): boolean {\r\n    // Define a bottom-left tap area for opening chat\r\n    const margin = 5;\r\n    const hotspotWidth = Math.min(300, Math.floor(GameConstants.WIDTH * 0.6));\r\n    const hotspotHeight = Math.min(64, Math.floor(GameConstants.HEIGHT * 0.25));\r\n    const left = margin;\r\n    const top = GameConstants.HEIGHT - hotspotHeight - margin;\r\n    const right = left + hotspotWidth;\r\n    const bottom = GameConstants.HEIGHT - margin;\r\n    return x >= left && x <= right && y >= top && y <= bottom;\r\n  }\r\n\r\n  targetCamera = (targetX: number, targetY: number) => {\r\n    let cameraX = Math.round(\r\n      (targetX + 0.5) * GameConstants.TILESIZE - 0.5 * GameConstants.WIDTH,\r\n    );\r\n    let cameraY = Math.round(\r\n      (targetY + 0.5) * GameConstants.TILESIZE - 0.5 * GameConstants.HEIGHT,\r\n    );\r\n    this.cameraTargetX = cameraX;\r\n    this.cameraTargetY = cameraY;\r\n  };\r\n\r\n  updateCamera = (delta: number) => {\r\n    const dx = this.cameraTargetX - this.cameraX;\r\n    const dy = this.cameraTargetY - this.cameraY;\r\n\r\n    let speed = GameConstants.CAMERA_SPEED;\r\n\r\n    if (this.justTransitioned) {\r\n      speed = 1;\r\n      this.justTransitioned = false;\r\n    }\r\n\r\n    if (this.cameraAnimation.active) {\r\n      speed = 0.075;\r\n    }\r\n\r\n    if (Math.abs(dx) > 250 || Math.abs(dy) > 250) {\r\n      speed = 1;\r\n    }\r\n\r\n    if ((Math.abs(dx) > 1 || Math.abs(dy) > 1) && speed !== 1) {\r\n      this.cameraX += dx * speed * delta;\r\n      this.cameraY += dy * speed * delta;\r\n    } else {\r\n      this.cameraX = this.cameraTargetX;\r\n      this.cameraY = this.cameraTargetY;\r\n    }\r\n    //console.log(\"camera\", this.cameraX, this.cameraY);\r\n  };\r\n\r\n  applyCamera = (delta: number) => {\r\n    let player = this.players[this.localPlayerID];\r\n\r\n    this.targetCamera(player.x - player.drawX, player.y - player.drawY);\r\n    this.updateCameraAnimation(delta);\r\n    this.updateCamera(delta);\r\n\r\n    const roundedCameraX = Math.round(this.cameraX - this.screenShakeX);\r\n    const roundedCameraY = Math.round(this.cameraY - this.screenShakeY);\r\n\r\n    return {\r\n      cameraX: roundedCameraX,\r\n      cameraY: roundedCameraY,\r\n    };\r\n  };\r\n\r\n  drawScreenShake = (delta: number) => {\r\n    if (!this.screenShakeActive) {\r\n      this.resetScreenShake();\r\n      return;\r\n    }\r\n\r\n    this.shakeAmountX *= 0.8 ** delta;\r\n    this.shakeAmountY *= 0.8 ** delta;\r\n    this.screenShakeX = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountX;\r\n    this.screenShakeY = Math.sin(this.shakeFrame * Math.PI) * this.shakeAmountY;\r\n    this.shakeFrame += 0.15 * delta;\r\n\r\n    if (\r\n      Math.abs(this.shakeAmountX) < 0.5 &&\r\n      Math.abs(this.shakeAmountY) < 0.5\r\n    ) {\r\n      this.resetScreenShake();\r\n    }\r\n  };\r\n\r\n  private resetScreenShake = () => {\r\n    this.shakeAmountX = 0;\r\n    this.shakeAmountY = 0;\r\n    this.shakeFrame = 0;\r\n    this.screenShakeX = 0;\r\n    this.screenShakeY = 0;\r\n    this.screenShakeActive = false;\r\n  };\r\n\r\n  updateCameraAnimation = (delta: number) => {\r\n    //console.log(\"updating camera animation\", this.cameraAnimation.active);\r\n    if (!this.cameraAnimation.active) return;\r\n    const elapsed = this.cameraAnimation.frame / this.cameraAnimation.duration;\r\n\r\n    if (elapsed < 0.6)\r\n      this.targetCamera(this.cameraAnimation.x, this.cameraAnimation.y);\r\n    this.cameraAnimation.frame += delta;\r\n    if (this.cameraAnimation.frame > this.cameraAnimation.duration)\r\n      this.cameraAnimation.active = false;\r\n  };\r\n\r\n  startCameraAnimation = (x: number, y: number, duration: number) => {\r\n    //console.log(\"starting camera animation\", x, y, duration);\r\n    this.cameraAnimation.active = true;\r\n    this.cameraAnimation.x = x;\r\n    this.cameraAnimation.y = y;\r\n    this.cameraAnimation.duration = duration;\r\n    this.cameraAnimation.frame = 0;\r\n  };\r\n\r\n  drawTextScreen = (text: string, bg: boolean = true) => {\r\n    if (bg) {\r\n      Game.ctx.fillStyle = \"rgb(0, 0, 0)\";\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    }\r\n    const ellipsis = this.animateEllipsis();\r\n    const dimensions = Game.measureText(text + ellipsis);\r\n\r\n    Game.ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n    Game.fillText(\r\n      text + ellipsis,\r\n      GameConstants.WIDTH / 2 - dimensions.width / 2,\r\n      GameConstants.HEIGHT / 2 - dimensions.height / 2,\r\n    );\r\n  };\r\n\r\n  animateEllipsis = () => {\r\n    if (Date.now() - this.ellipsisStartTime > 150) {\r\n      this.ellipsisStartTime = Date.now();\r\n      this.ellipsisFrame = (this.ellipsisFrame + 1) % 4;\r\n    }\r\n    return \".\".repeat(this.ellipsisFrame);\r\n  };\r\n\r\n  /**\r\n   * Draw a sub-rectangle from a spritesheet onto the main canvas with optional shading and fade.\r\n   *\r\n   * How it works (high level):\r\n   * - Quantizes the shade opacity to a fixed number of steps (reduces cache churn)\r\n   * - Builds a cache key from the source sprite + shade settings\r\n   * - If not cached, renders the shaded sprite once into an offscreen canvas and stores it\r\n   * - Blits the cached shaded sprite to the destination on the main canvas\r\n   *\r\n   * Notes on units:\r\n   * - sX/sY/sW/sH are in tile units within the spritesheet\r\n   * - dX/dY/dW/dH are in world tile units on the destination\r\n   * - Internally we multiply by TILESIZE when drawing to actual pixels\r\n   *\r\n   * @param set Image sheet to sample from (tileset/objset/mobset/itemset/fxset)\r\n   * @param sX Source X in tiles within the sheet\r\n   * @param sY Source Y in tiles within the sheet\r\n   * @param sW Source width in tiles\r\n   * @param sH Source height in tiles\r\n   * @param dX Destination X in world tiles\r\n   * @param dY Destination Y in world tiles\r\n   * @param dW Destination width in world tiles\r\n   * @param dH Destination height in world tiles\r\n   * @param shadeColor Overlay color applied atop the sprite (default: black)\r\n   * @param shadeOpacity Opacity of the overlay [0..1] (quantized internally)\r\n   * @param entity If true, uses entity shade quantization levels\r\n   * @param fadeDir Optional directional fade mask (left/right/up/down)\r\n   */\r\n  static drawHelper = (\r\n    set: HTMLImageElement,\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    entity: boolean = false,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.ctx.save(); // Save current canvas state so we can safely modify it\r\n\r\n    // Snap to nearest shading increment\r\n    const shadeLevel = entity\r\n      ? GameConstants.ENTITY_SHADE_LEVELS\r\n      : GameConstants.SHADE_LEVELS;\r\n    shadeOpacity =\r\n      // Round shadeOpacity to nearest increment based on shade levels (min 12 increments)\r\n      // e.g. if shadeLevel=8, uses 12 increments, so opacity rounds to multiples of 1/12\r\n      Math.round(shadeOpacity * Math.max(shadeLevel, 12)) /\r\n      Math.max(shadeLevel, 12);\r\n\r\n    // Build a cache key that includes shade amount, color and optional fade direction\r\n    let key = getShadeCanvasKey(\r\n      set,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      shadeOpacity,\r\n      shadeColor,\r\n      fadeDir,\r\n    );\r\n\r\n    if (!Game.shade_canvases[key]) {\r\n      // First time for this shaded sprite: render it into an offscreen canvas and cache it\r\n      Game.shade_canvases[key] = document.createElement(\"canvas\");\r\n      Game.shade_canvases[key].width = Math.round(sW * GameConstants.TILESIZE);\r\n      Game.shade_canvases[key].height = Math.round(sH * GameConstants.TILESIZE);\r\n      let shCtx = Game.shade_canvases[key].getContext(\"2d\");\r\n\r\n      shCtx.clearRect(\r\n        0,\r\n        0,\r\n        Game.shade_canvases[key].width,\r\n        Game.shade_canvases[key].height,\r\n      );\r\n\r\n      // 1) Draw the base sprite\r\n      shCtx.globalCompositeOperation = \"source-over\";\r\n      shCtx.drawImage(\r\n        set,\r\n        Math.round(sX * GameConstants.TILESIZE),\r\n        Math.round(sY * GameConstants.TILESIZE),\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n        0,\r\n        0,\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n      );\r\n\r\n      // 2) Tint overlay (shadeColor at shadeOpacity) over the sprite area\r\n      shCtx.globalAlpha = shadeOpacity;\r\n      shCtx.fillStyle = shadeColor;\r\n      shCtx.fillRect(\r\n        0,\r\n        0,\r\n        Game.shade_canvases[key].width,\r\n        Game.shade_canvases[key].height,\r\n      );\r\n      shCtx.globalAlpha = 1.0;\r\n\r\n      // 3) Keep only the sprite’s opaque pixels by masking with the sprite alpha\r\n      shCtx.globalCompositeOperation = \"destination-in\";\r\n      // Base alpha mask from sprite bounds\r\n      shCtx.drawImage(\r\n        set,\r\n        Math.round(sX * GameConstants.TILESIZE),\r\n        Math.round(sY * GameConstants.TILESIZE),\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n        0,\r\n        0,\r\n        Math.round(sW * GameConstants.TILESIZE),\r\n        Math.round(sH * GameConstants.TILESIZE),\r\n      );\r\n\r\n      // 4) Optional directional fade: multiplies in a 1→0 gradient (feathered edge)\r\n      if (fadeDir) {\r\n        const w = Math.round(sW * GameConstants.TILESIZE);\r\n        const h = Math.round(sH * GameConstants.TILESIZE);\r\n        let grad: CanvasGradient | null = null;\r\n        switch (fadeDir) {\r\n          case \"left\":\r\n            grad = shCtx.createLinearGradient(0, 0, w, 0);\r\n            grad.addColorStop(0, \"rgba(0,0,0,0)\");\r\n            grad.addColorStop(1, \"rgba(0,0,0,1)\");\r\n            break;\r\n          case \"right\":\r\n            grad = shCtx.createLinearGradient(0, 0, w, 0);\r\n            grad.addColorStop(0, \"rgba(0,0,0,1)\");\r\n            grad.addColorStop(1, \"rgba(0,0,0,0)\");\r\n            break;\r\n          case \"up\":\r\n            grad = shCtx.createLinearGradient(0, 0, 0, h);\r\n            grad.addColorStop(0, \"rgba(0,0,0,0)\");\r\n            grad.addColorStop(1, \"rgba(0,0,0,1)\");\r\n            break;\r\n          case \"down\":\r\n            grad = shCtx.createLinearGradient(0, 0, 0, h);\r\n            grad.addColorStop(0, \"rgba(0,0,0,1)\");\r\n            grad.addColorStop(1, \"rgba(0,0,0,0)\");\r\n            break;\r\n        }\r\n        if (grad) {\r\n          shCtx.globalCompositeOperation = \"destination-in\"; // multiply existing alpha\r\n          shCtx.fillStyle = grad;\r\n          shCtx.fillRect(0, 0, w, h);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Blit the pre-shaded sprite to the main canvas at the destination position/size\r\n    Game.ctx.drawImage(\r\n      Game.shade_canvases[key],\r\n      Math.round(dX * GameConstants.TILESIZE),\r\n      Math.round(dY * GameConstants.TILESIZE),\r\n      Math.round(dW * GameConstants.TILESIZE),\r\n      Math.round(dH * GameConstants.TILESIZE),\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas to the previous state\r\n  };\r\n\r\n  /**\r\n   * Draw a tile from the main tileset. Convenience wrapper around drawHelper.\r\n   * Uses entity=false so the tile shade uses world/tile shade quantization.\r\n   */\r\n  static drawTile = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.tileset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n      false,\r\n      fadeDir,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draw an object (props, decorations) from the object sheet. Convenience wrapper.\r\n   * Uses entity=true so objects use entity shade quantization.\r\n   */\r\n  static drawObj = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.objset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n      true,\r\n      fadeDir,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draw a mob (enemies, player parts) from the mob sheet. Convenience wrapper.\r\n   * Uses entity=true so mobs use entity shade quantization.\r\n   */\r\n  static drawMob = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.mobset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n      true,\r\n      fadeDir,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draw an item from the item sheet. Convenience wrapper.\r\n   * Uses entity=true so items use entity shade quantization.\r\n   */\r\n  static drawItem = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.itemset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n      true,\r\n      fadeDir,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draw an FX frame from the FX sheet. Convenience wrapper.\r\n   * Uses entity=true so FX uses entity shade quantization.\r\n   */\r\n  static drawFX = (\r\n    sX: number,\r\n    sY: number,\r\n    sW: number,\r\n    sH: number,\r\n    dX: number,\r\n    dY: number,\r\n    dW: number,\r\n    dH: number,\r\n    shadeColor = \"black\",\r\n    shadeOpacity = 0,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    Game.drawHelper(\r\n      Game.fxset,\r\n      sX,\r\n      sY,\r\n      sW,\r\n      sH,\r\n      dX,\r\n      dY,\r\n      dW,\r\n      dH,\r\n      shadeColor,\r\n      shadeOpacity,\r\n      true,\r\n      fadeDir,\r\n    );\r\n  };\r\n\r\n  private handleWindowBlur = () => {\r\n    // Start a timeout when window loses focus\r\n    this.focusTimeout = window.setTimeout(() => {\r\n      // Store current state\r\n      this.wasMuted = Sound.audioMuted;\r\n      this.wasStarted = this.started;\r\n\r\n      // Mute audio and pause game\r\n      Sound.audioMuted = true;\r\n      //this.started = false;\r\n      this.paused = true;\r\n\r\n      // Optional: Show a message in chat\r\n      this.pushMessage(\"Game paused - window inactive\");\r\n    }, this.FOCUS_TIMEOUT_DURATION);\r\n  };\r\n\r\n  private handleWindowFocus = () => {\r\n    // Clear the timeout if it exists\r\n    if (this.focusTimeout) {\r\n      clearTimeout(this.focusTimeout);\r\n      this.focusTimeout = null;\r\n    }\r\n\r\n    // If game was paused due to inactivity, restore previous state\r\n    if (this.paused) {\r\n      Sound.audioMuted = this.wasMuted;\r\n      this.started = this.wasStarted;\r\n      this.paused = false;\r\n\r\n      // Optional: Show a message in chat\r\n      this.pushMessage(\"Game resumed\");\r\n    }\r\n  };\r\n\r\n  destroy() {\r\n    window.removeEventListener(\"blur\", this.handleWindowBlur);\r\n    window.removeEventListener(\"focus\", this.handleWindowFocus);\r\n    if (this.focusTimeout) {\r\n      clearTimeout(this.focusTimeout);\r\n    }\r\n  }\r\n}\r\nexport let game = new Game();\r\nexport let gs = new GameState();\r\n","import { Game } from \"../game\";\r\nimport { Player } from \"../player/player\";\r\nimport { Input } from \"./input\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { Spawner } from \"../entity/enemy/spawner\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\n\r\n//enemy typeof to class map\r\nconst enemyClassMap = {\r\n  CrabEnemy: CrabEnemy,\r\n  FrogEnemy: FrogEnemy,\r\n  ZombieEnemy: ZombieEnemy,\r\n  SkullEnemy: SkullEnemy,\r\n  EnergyWizardEnemy: EnergyWizardEnemy,\r\n  ChargeEnemy: ChargeEnemy,\r\n  RookEnemy: RookEnemy,\r\n  BishopEnemy: BishopEnemy,\r\n  ArmoredzombieEnemy: ArmoredzombieEnemy,\r\n  BigSkullEnemy: BigSkullEnemy,\r\n  QueenEnemy: QueenEnemy,\r\n  KnightEnemy: KnightEnemy,\r\n  BigKnightEnemy: BigKnightEnemy,\r\n  FireWizardEnemy: FireWizardEnemy,\r\n  Spawner: Spawner,\r\n  OccultistEnemy: OccultistEnemy,\r\n};\r\n\r\ninterface BestiaryEntry {\r\n  name: string;\r\n  description: string;\r\n  tileX: number;\r\n  tileY: number;\r\n}\r\n\r\nexport class Bestiary {\r\n  game: Game;\r\n  player: Player;\r\n  isOpen: boolean = false;\r\n  openTime: number = Date.now();\r\n  entries: Array<BestiaryEntry>;\r\n  seenEnemies: Set<typeof Enemy>;\r\n  frame: number = 0;\r\n  activeEntryIndex: number = 0;\r\n  // Static variables for logbook button position\r\n  private buttonY: number;\r\n  private buttonX: number;\r\n\r\n  constructor(game: Game, player: Player) {\r\n    this.game = game;\r\n    this.player = player;\r\n    this.entries = [];\r\n    this.activeEntryIndex = 0;\r\n    this.buttonX = Math.round(\r\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE,\r\n    );\r\n    this.buttonY = Math.round(10);\r\n    this.seenEnemies = new Set();\r\n  }\r\n\r\n  /**\r\n   * Opens the logbook window.\r\n   */\r\n  open = () => {\r\n    if (this.seenEnemies.size === 0)\r\n      this.seenEnemies = this.game.tutorialListener.seenEnemies;\r\n    this.isOpen = true;\r\n    this.openTime = Date.now();\r\n  };\r\n\r\n  /**\r\n   * Closes the logbook window.\r\n   */\r\n  close = () => {\r\n    this.isOpen = false;\r\n  };\r\n\r\n  entryUp = () => {\r\n    this.activeEntryIndex =\r\n      (this.activeEntryIndex - 1 + this.entries.length) % this.entries.length;\r\n  };\r\n\r\n  entryDown = () => {\r\n    this.activeEntryIndex = (this.activeEntryIndex + 1) % this.entries.length;\r\n  };\r\n\r\n  /**\r\n   * Toggles the logbook window's open state.\r\n   */\r\n  toggleOpen = () => {\r\n    this.isOpen ? this.close() : this.open();\r\n  };\r\n\r\n  /**\r\n   * Adds a new entry to the logbook.\r\n   * @param enemy The enemy to add.\r\n   */\r\n  addEntry = (enemy: typeof Enemy) => {\r\n    const enemyClass = enemyClassMap[enemy.name];\r\n    this.entries.push({\r\n      name: enemy.name,\r\n      description: enemyClass.prototype.description,\r\n      tileX: enemyClass.prototype.tileX,\r\n      tileY: enemyClass.prototype.tileY,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the logbook interface.\r\n   * @param delta The time delta since the last frame.\r\n   */\r\n  draw = (delta: number) => {\r\n    if (!this.isOpen) return;\r\n    Game.ctx.save();\r\n\r\n    // Draw semi-transparent background\r\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    // Define dimensions similar to Inventory\r\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / 100); // example scaling\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const ob = 1; // outer border\r\n    const width = 5 * (s + 2 * b + g) - g; // assuming 5 columns\r\n    const height = 4 * (s + 2 * b + g) - g; // assuming 4 rows\r\n\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n    const startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\r\n\r\n    // Draw main logbook background\r\n    Game.ctx.fillStyle = \"white\";\r\n    Game.ctx.fillRect(startX, startY, width + 2 * ob, height + 2 * ob);\r\n\r\n    // Draw logbook entries\r\n    Game.ctx.fillStyle = \"black\";\r\n    const padding = 10;\r\n\r\n    if (this.entries.length === 0) {\r\n      Game.fillText(\"No enemies seen yet\", startX + padding, startY + padding);\r\n    } else {\r\n      this.entries.forEach((entry, index) => {\r\n        Game.fillText(\r\n          entry.name,\r\n          startX + padding,\r\n          startY + padding + index * 20,\r\n        );\r\n      });\r\n\r\n      this.drawEnemySprite(\r\n        this.entries[this.activeEntryIndex].tileX,\r\n        this.entries[this.activeEntryIndex].tileY,\r\n        delta,\r\n      );\r\n    }\r\n    // Draw logbook button\r\n    this.drawLogbookButton(delta);\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawEnemySprite = (tileX: number, tileY: number, delta: number) => {\r\n    this.frame += Math.round(0.1 * delta * 10) / 10;\r\n    if (this.frame >= 4) this.frame = 0;\r\n\r\n    Game.drawMob(tileX, tileY, 1, 1, 1, 1, 1, 1, \"Black\", 0);\r\n  };\r\n\r\n  /**\r\n   * Draws the logbook button on the screen.\r\n   * @param delta The time delta since the last frame.\r\n   */\r\n  drawLogbookButton = (delta: number) => {\r\n    Game.ctx.save();\r\n    this.buttonX = LevelConstants.SCREEN_W - 2;\r\n    this.buttonY = LevelConstants.SCREEN_H - 2.25;\r\n    Game.drawFX(0, 0, 2, 2, this.buttonX, this.buttonY, 2, 2);\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  /**\r\n   * Handles mouse down events.\r\n   * @param x The x-coordinate of the mouse.\r\n   * @param y The y-coordinate of the mouse.\r\n   * @param button The mouse button pressed.\r\n   */\r\n  handleMouseDown = (x: number, y: number, button: number) => {\r\n    if (button !== 0) return; // Only respond to left click\r\n\r\n    if (this.isPointInLogbookButton(x, y)) {\r\n      this.toggleOpen();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles mouse up events.\r\n   * @param x The x-coordinate of the mouse.\r\n   * @param y The y-coordinate of the mouse.\r\n   * @param button The mouse button released.\r\n   */\r\n  handleMouseUp = (x: number, y: number, button: number) => {\r\n    // Implement if needed\r\n  };\r\n\r\n  /**\r\n   * Handles hold detection.\r\n   */\r\n  onHoldDetected = () => {\r\n    // Implement if needed\r\n  };\r\n\r\n  /**\r\n   * Checks if a point is within the logbook button bounds.\r\n   * @param x The x-coordinate to check.\r\n   * @param y The y-coordinate to check.\r\n   * @returns True if the point is within the button bounds, else false.\r\n   */\r\n  isPointInLogbookButton = (x: number, y: number): boolean => {\r\n    const tX = x / GameConstants.TILESIZE;\r\n    const tY = y / GameConstants.TILESIZE;\r\n    return (\r\n      tX >= this.buttonX &&\r\n      tX <= this.buttonX + 2 &&\r\n      tY >= this.buttonY &&\r\n      tY <= this.buttonY + 2\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Updates the logbook state each game tick.\r\n   */\r\n  tick = () => {\r\n    if (this.isOpen) {\r\n      // Update logbook-related logic here\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\n\r\nexport class CameraAnimation {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public duration: number,\r\n    public speed: number,\r\n    public frame: number,\r\n    public active: boolean,\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.frame = 0;\r\n    this.active = false;\r\n  }\r\n}\r\n","import { Armor } from \"../item/armor\";\r\nimport { Backpack } from \"../item/backpack\";\r\nimport { Candle } from \"../item/light/candle\";\r\nimport { Coal } from \"../item/resource/coal\";\r\nimport { EntitySpawner } from \"../item/entitySpawner\";\r\nimport { GodStone } from \"../item/godStone\";\r\nimport { Heart } from \"../item/usable/heart\";\r\nimport { Key } from \"../item/key\";\r\nimport { Lantern } from \"../item/light/lantern\";\r\nimport { Torch } from \"../item/light/torch\";\r\nimport { WeaponBlood } from \"../item/usable/weaponBlood\";\r\nimport { WeaponFragments } from \"../item/usable/weaponFragments\";\r\nimport { WeaponPoison } from \"../item/usable/weaponPoison\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Dagger } from \"../item/weapon/dagger\";\r\nimport { DualDagger } from \"../item/weapon/dualdagger\";\r\nimport { Spear } from \"../item/weapon/spear\";\r\nimport { Spellbook } from \"../item/weapon/spellbook\";\r\nimport { Warhammer } from \"../item/weapon/warhammer\";\r\nimport { Hammer } from \"../item/tool/hammer\";\r\nimport { SpellbookPage } from \"../item/usable/spellbookPage\";\r\nimport { BombItem } from \"../item/bombItem\";\r\nimport { BestiaryBook } from \"../item/bestiaryBook\";\r\nimport { Greataxe } from \"../item/weapon/greataxe\";\r\nimport { BlueGem } from \"../item/resource/bluegem\";\r\nimport { RedGem } from \"../item/resource/redgem\";\r\nimport { GreenGem } from \"../item/resource/greengem\";\r\nimport { Pickaxe } from \"../item/tool/pickaxe\";\r\nimport { Geode } from \"../item/resource/geode\";\r\nimport { GlowBugs } from \"../item/light/glowBugs\";\r\nimport { Shotgun } from \"../item/weapon/shotgun\";\r\nimport { Scythe } from \"../item/weapon/scythe\";\r\nimport { Hourglass } from \"../item/usable/hourglass\";\r\nimport { GoldOre } from \"../item/resource/goldOre\";\r\nimport { Sword } from \"../item/weapon/sword\";\r\nimport { Apple } from \"../item/usable/apple\";\r\nimport { WebGLBlurRenderer } from \"../gui/webglBlurRenderer\";\r\nimport { ScytheBlade } from \"../item/weapon/scytheBlade\";\r\nimport { ScytheHandle } from \"../item/weapon/scytheHandle\";\r\nimport { OrangeGem } from \"../item/resource/orangegem\";\r\nimport { GoldRing } from \"../item/jewelry/goldRing\";\r\nimport { FishingRod } from \"../item/tool/fishingRod\";\r\nimport { Coin } from \"../item/coin\";\r\nimport { Fish } from \"../item/usable/fish\";\r\nimport { IronOre } from \"../item/resource/ironOre\";\r\n\r\nexport class GameConstants {\r\n  static readonly VERSION = \"Alpha v1.2.0\"; //\"v0.6.3\";\r\n  static DEVELOPER_MODE = false;\r\n  static isMobile = false;\r\n  static isIOS = false;\r\n  static CAMERA_SPEED = 1; // 1 is instant 0.1 is slow\r\n\r\n  static readonly FPS = 120;\r\n  static readonly ALPHA_ENABLED = true;\r\n  static SHADE_LEVELS = 50; //25\r\n  static ENTITY_SHADE_LEVELS = 40; //10\r\n\r\n  static readonly TILESIZE = 16;\r\n  static SCALE = null;\r\n  static SOFT_SCALE = 6;\r\n  static readonly MAX_SCALE = 16;\r\n  static readonly MIN_SCALE = 1;\r\n  static smoothScaling = false;\r\n\r\n  static readonly SWIPE_THRESH = 25 ** 2; // (size of swipe threshold circle)^2\r\n  static readonly HOLD_THRESH = 250; // milliseconds\r\n\r\n  static KEY_REPEAT_TIME = 250; // millseconds\r\n  static SWIPE_HOLD_REPEAT_TIME = 200;\r\n  static SWIPE_HOLD_INITIAL_DELAY = 10;\r\n  static MOVEMENT_COOLDOWN = 200; // milliseconds\r\n  static MOVEMENT_QUEUE_COOLDOWN = 100; // milliseconds\r\n  static readonly MOVE_WITH_MOUSE = true;\r\n  static SLOW_INPUTS_NEAR_ENEMIES = false;\r\n\r\n  static readonly CHAT_APPEAR_TIME = 1000;\r\n  static readonly CHAT_FADE_TIME = 2000;\r\n  static ANIMATION_SPEED = 1;\r\n  static readonly REPLAY_STEP_MS = 10; // base time between replayed inputs\r\n  static readonly REPLAY_COMPUTER_TURN_DELAY = 10; // extra wait after computer turn completes during replay\r\n  static REPLAY_DEBUG = false; // enable verbose replay logging\r\n\r\n  static readonly DEFAULTWIDTH = GameConstants.TILESIZE;\r\n  static readonly DEFAULTHEIGHT = GameConstants.TILESIZE;\r\n  static WIDTH = LevelConstants.SCREEN_W * GameConstants.TILESIZE;\r\n  static HEIGHT = LevelConstants.SCREEN_H * GameConstants.TILESIZE;\r\n\r\n  static drawOtherRooms = true;\r\n\r\n  static readonly SCRIPT_FONT_SIZE = 16;\r\n  static readonly FONT_SIZE = 7;\r\n  static readonly BIG_FONT_SIZE = 15;\r\n\r\n  static readonly RED = \"#ac3232\";\r\n  static readonly WARNING_RED = \"#ff0000\";\r\n  static readonly GREEN = \"#6abe30\";\r\n  static readonly ARMOR_GREY = \"#9badb7\";\r\n  static readonly OUTLINE = \"#222034\";\r\n  static readonly HIT_ENEMY_TEXT_COLOR = \"#76428a\";\r\n  static readonly HEALTH_BUFF_COLOR = \"#d77bba\";\r\n  static readonly MISS_COLOR = \"#639bff\";\r\n  static readonly XP_POPUP_ENABLED = true;\r\n\r\n  static readonly COIN_ANIMATION = true;\r\n  static readonly COIN_AUTO_PICKUP = true;\r\n  static readonly ITEM_AUTO_PICKUP = true;\r\n\r\n  static readonly AUTO_PICKUP_ITEMS = [\r\n    Coal,\r\n    GoldOre,\r\n    IronOre,\r\n    RedGem,\r\n    BlueGem,\r\n    GreenGem,\r\n    OrangeGem,\r\n    Coin,\r\n    Fish,\r\n  ];\r\n\r\n  static readonly PERSISTENT_HEALTH_BAR = false; //not implemented\r\n\r\n  static HOVER_TEXT_ENABLED = true;\r\n  static readonly INVENTORY_HOVER_TEXT_ENABLED = true;\r\n  static readonly IN_GAME_HOVER_TEXT_ENABLED = false;\r\n  static readonly VENDING_MACHINE_HOVER_TEXT_ENABLED = true;\r\n  static readonly HOVER_TEXT_FOLLOWS_MOUSE = true;\r\n  static readonly INVENTORY_HOVER_TEXT_FOLLOWS_MOUSE = true;\r\n  static readonly IN_GAME_HOVER_TEXT_FOLLOWS_MOUSE = true;\r\n  static readonly VENDING_MACHINE_HOVER_TEXT_FOLLOWS_MOUSE = true;\r\n\r\n  static CUSTOM_SHADER_COLOR_ENABLED = false;\r\n  static get SHADE_ENABLED() {\r\n    return GameConstants.SMOOTH_LIGHTING;\r\n  }\r\n  static COLOR_LAYER_COMPOSITE_OPERATION = \"soft-light\"; //\"soft-light\";\r\n  static SHADE_LAYER_COMPOSITE_OPERATION = \"source-over\"; //\"soft-light\";\r\n  // When true, draw shade as sliced tiles inline within drawEntities instead of a single layer\r\n  static SHADE_INLINE_IN_ENTITY_LAYER = true;\r\n  static USE_OPTIMIZED_SHADING = false;\r\n  static SMOOTH_LIGHTING = false;\r\n  static ctxBlurEnabled = true;\r\n  static BLUR_ENABLED = true;\r\n  static USE_WEBGL_BLUR = false;\r\n  static HIGH_QUALITY_BLUR = false; // true = 49 samples, false = 13 samples for performance\r\n  static BLUR_DOWNSAMPLE_FACTOR = 8; // Blur at 1/4 size for performance (1 = full size, 4 = quarter size)\r\n  static ENEMIES_BLOCK_LIGHT = false;\r\n\r\n  static USE_PNG_LEVELS = true;\r\n\r\n  static readonly SHADE_LAYER_COMPOSITE_OPERATIONS = [\r\n    \"source-over\",\r\n    \"screen\",\r\n    \"multiply\",\r\n    \"overlay\",\r\n    \"darken\",\r\n    \"lighten\",\r\n  ];\r\n\r\n  static readonly COLOR_LAYER_COMPOSITE_OPERATIONS = [\r\n    \"soft-light\",\r\n    //\"addition\",\r\n    //\"darken\",\r\n    \"overlay\",\r\n    //\"hue\",\r\n    //\"source-over\",\r\n    //\"screen\",\r\n    \"multiply\",\r\n    //\"difference\",\r\n    //\"exclusion\",\r\n    //\"luminosity\",\r\n    //\"color-dodge\",\r\n    //\"color-burn\",\r\n    //\"hard-light\",\r\n    //\"soft-light\",\r\n    //\"lighten\",\r\n  ];\r\n\r\n  static readonly SET_COLOR_LAYER_COMPOSITE_OPERATION = (\r\n    back: boolean = false,\r\n  ) => {\r\n    const currentIndex = GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.indexOf(\r\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATION,\r\n    );\r\n    let nextIndex;\r\n\r\n    if (back) {\r\n      // Decrement the index to move backward in the operations array\r\n      nextIndex =\r\n        (currentIndex -\r\n          1 +\r\n          GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length) %\r\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\r\n    } else {\r\n      // Increment the index to move forward in the operations array\r\n      nextIndex =\r\n        (currentIndex + 1) %\r\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS.length;\r\n    }\r\n\r\n    GameConstants.COLOR_LAYER_COMPOSITE_OPERATION =\r\n      GameConstants.COLOR_LAYER_COMPOSITE_OPERATIONS[nextIndex];\r\n\r\n    console.log(\r\n      `Color layer composite operation set to ${GameConstants.COLOR_LAYER_COMPOSITE_OPERATION}`,\r\n    );\r\n  };\r\n\r\n  static readonly SET_SHADE_LAYER_COMPOSITE_OPERATION = (\r\n    back: boolean = false,\r\n  ) => {\r\n    const currentIndex = GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.indexOf(\r\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATION,\r\n    );\r\n    let nextIndex;\r\n\r\n    if (back) {\r\n      // Decrement the index to move backward in the operations array\r\n      nextIndex =\r\n        (currentIndex -\r\n          1 +\r\n          GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length) %\r\n        GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length;\r\n    } else {\r\n      // Increment the index to move forward in the operations array\r\n      nextIndex =\r\n        (currentIndex + 1) %\r\n        GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS.length;\r\n    }\r\n\r\n    GameConstants.SHADE_LAYER_COMPOSITE_OPERATION =\r\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATIONS[nextIndex];\r\n\r\n    console.log(\r\n      `Shade layer composite operation set to ${GameConstants.SHADE_LAYER_COMPOSITE_OPERATION}`,\r\n    );\r\n  };\r\n\r\n  static readonly TOGGLE_USE_OPTIMIZED_SHADING = () => {\r\n    GameConstants.USE_OPTIMIZED_SHADING = !GameConstants.USE_OPTIMIZED_SHADING;\r\n  };\r\n\r\n  static readonly TOGGLE_ENEMIES_BLOCK_LIGHT = () => {\r\n    GameConstants.ENEMIES_BLOCK_LIGHT = !GameConstants.ENEMIES_BLOCK_LIGHT;\r\n  };\r\n\r\n  static readonly TOGGLE_USE_WEBGL_BLUR = () => {\r\n    GameConstants.USE_WEBGL_BLUR = !GameConstants.USE_WEBGL_BLUR;\r\n    console.log(\r\n      `WebGL blur is now ${GameConstants.USE_WEBGL_BLUR ? \"enabled\" : \"disabled\"}`,\r\n    );\r\n  };\r\n\r\n  static readonly TOGGLE_HIGH_QUALITY_BLUR = () => {\r\n    GameConstants.HIGH_QUALITY_BLUR = !GameConstants.HIGH_QUALITY_BLUR;\r\n    console.log(\r\n      `High quality blur: ${GameConstants.HIGH_QUALITY_BLUR ? \"ON (49 samples)\" : \"OFF (13 samples)\"}`,\r\n    );\r\n  };\r\n\r\n  static readonly SET_SCALE = () => {\r\n    GameConstants.SCALE++;\r\n    if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\r\n      GameConstants.SCALE = GameConstants.MAX_SCALE;\r\n    }\r\n  };\r\n\r\n  static readonly INCREASE_SCALE = () => {\r\n    if (GameConstants.SCALE < GameConstants.MAX_SCALE) {\r\n      GameConstants.SCALE++;\r\n      if (GameConstants.SCALE > GameConstants.MAX_SCALE) {\r\n        GameConstants.SCALE = GameConstants.MAX_SCALE;\r\n      }\r\n    }\r\n  };\r\n\r\n  static readonly DECREASE_SCALE = () => {\r\n    if (GameConstants.SCALE > GameConstants.MIN_SCALE) {\r\n      GameConstants.SCALE--;\r\n      if (GameConstants.SCALE < GameConstants.MIN_SCALE) {\r\n        GameConstants.SCALE = GameConstants.MIN_SCALE;\r\n      }\r\n    }\r\n  };\r\n\r\n  static readonly FIND_SCALE = (isMobile: boolean) => {\r\n    let bestScale = GameConstants.MIN_SCALE;\r\n    let bestDifference = Infinity;\r\n    const measure =\r\n      !isMobile || screen.orientation.type === \"landscape-primary\"\r\n        ? window.innerHeight\r\n        : window.innerWidth;\r\n    const dimension = measure * window.devicePixelRatio;\r\n    const tileMeasure = isMobile ? 8 : 12;\r\n\r\n    for (let i = GameConstants.MIN_SCALE; i <= GameConstants.MAX_SCALE; i++) {\r\n      const tiles = dimension / (i * GameConstants.TILESIZE);\r\n      const difference = Math.abs(tiles - tileMeasure);\r\n\r\n      if (difference < bestDifference) {\r\n        bestDifference = difference;\r\n        bestScale = i;\r\n      }\r\n    }\r\n\r\n    return bestScale;\r\n  };\r\n\r\n  static readonly STARTING_INVENTORY = [Dagger, Candle];\r\n  static readonly STARTING_DEV_INVENTORY = [\r\n    Dagger,\r\n    Torch,\r\n    Sword,\r\n    Spear,\r\n    GodStone,\r\n    Spellbook,\r\n    FishingRod,\r\n    Armor,\r\n    Backpack,\r\n    Hammer,\r\n    Pickaxe,\r\n    Pickaxe,\r\n    BlueGem,\r\n    OrangeGem,\r\n    RedGem,\r\n    GreenGem,\r\n    GoldRing,\r\n    GoldOre,\r\n    IronOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    IronOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n    GoldOre,\r\n  ];\r\n}\r\n","import { Barrel } from \"../entity/object/barrel\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { ChargeEnemy, ChargeEnemyState } from \"../entity/enemy/chargeEnemy\";\r\nimport { CoalResource } from \"../entity/resource/coalResource\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\r\nimport { Entity, EntityDirection } from \"../entity/entity\";\r\nimport { GoldResource } from \"../entity/resource/goldResource\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\r\nimport { Pot } from \"../entity/object/pot\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { Spawner } from \"../entity/enemy/spawner\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\nimport { WizardEnemy, WizardState } from \"../entity/enemy/wizardEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { Direction, Game } from \"../game\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Inventory } from \"../inventory/inventory\";\r\nimport { Armor } from \"../item/armor\";\r\nimport { BlueGem } from \"../item/resource/bluegem\";\r\nimport { Candle } from \"../item/light/candle\";\r\nimport { Coal } from \"../item/resource/coal\";\r\nimport { Coin } from \"../item/coin\";\r\nimport { Equippable } from \"../item/equippable\";\r\nimport { GoldOre } from \"../item/resource/goldOre\";\r\nimport { GoldenKey } from \"../item/goldenKey\";\r\nimport { GreenGem } from \"../item/resource/greengem\";\r\nimport { Heart } from \"../item/usable/heart\";\r\nimport { Item } from \"../item/item\";\r\nimport { Key } from \"../item/key\";\r\nimport { Lantern } from \"../item/light/lantern\";\r\nimport { RedGem } from \"../item/resource/redgem\";\r\nimport { Torch } from \"../item/light/torch\";\r\nimport { Room } from \"../room/room\";\r\nimport { LevelGenerator } from \"../level/levelGenerator\";\r\nimport { Player, PlayerDirection } from \"../player/player\";\r\nimport { EnemySpawnAnimation } from \"../projectile/enemySpawnAnimation\";\r\nimport { Projectile } from \"../projectile/projectile\";\r\nimport { WizardFireball } from \"../projectile/wizardFireball\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Dagger } from \"../item/weapon/dagger\";\r\nimport { DualDagger } from \"../item/weapon/dualdagger\";\r\nimport { Shotgun } from \"../item/weapon/shotgun\";\r\nimport { Spear } from \"../item/weapon/spear\";\r\nimport { Weapon } from \"../item/weapon/weapon\";\r\nimport { Pickaxe } from \"../item/tool/pickaxe\";\r\nimport { Backpack } from \"../item/backpack\";\r\nimport { TutorialListener } from \"./tutorialListener\";\r\nimport { DoorType } from \"../tile/door\";\r\nimport { Mushrooms } from \"../entity/object/mushrooms\";\r\nimport { Pumpkin } from \"../entity/object/pumpkin\";\r\nimport { Block } from \"../entity/object/block\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { Level } from \"../level/level\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { BigZombieEnemy } from \"../entity/enemy/bigZombieEnemy\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { GlowBugEnemy } from \"../entity/enemy/glowBugEnemy\";\r\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\r\nimport { Apple } from \"../item/usable/apple\";\r\nimport { BestiaryBook } from \"../item/bestiaryBook\";\r\nimport { BombItem } from \"../item/bombItem\";\r\nimport { EntitySpawner } from \"../item/entitySpawner\";\r\nimport { Fish } from \"../item/usable/fish\";\r\nimport { FishingRod } from \"../item/tool/fishingRod\";\r\nimport { Geode } from \"../item/resource/geode\";\r\nimport { GlowBugs } from \"../item/light/glowBugs\";\r\nimport { GodStone } from \"../item/godStone\";\r\nimport { GoldBar } from \"../item/resource/goldBar\";\r\nimport { GoldRing } from \"../item/jewelry/goldRing\";\r\nimport { GarnetRing } from \"../item/jewelry/garnetRing\";\r\nimport { ZirconRing } from \"../item/jewelry/zirconRing\";\r\nimport { EmeraldRing } from \"../item/jewelry/emeraldRing\";\r\nimport { AmberRing } from \"../item/jewelry/amberRing\";\r\nimport { GreenPotion } from \"../item/usable/greenPotion\";\r\nimport { Greataxe } from \"../item/weapon/greataxe\";\r\nimport { Hourglass } from \"../item/usable/hourglass\";\r\nimport { OrangeGem } from \"../item/resource/orangegem\";\r\nimport { Scythe } from \"../item/weapon/scythe\";\r\nimport { ScytheHandle } from \"../item/weapon/scytheHandle\";\r\nimport { ScytheBlade } from \"../item/weapon/scytheBlade\";\r\nimport { Shrooms } from \"../item/usable/shrooms\";\r\nimport { Slingshot } from \"../item/weapon/slingshot\";\r\nimport { Spellbook } from \"../item/weapon/spellbook\";\r\nimport { SpellbookPage } from \"../item/usable/spellbookPage\";\r\nimport { Stone } from \"../item/resource/stone\";\r\nimport { Sword } from \"../item/weapon/sword\";\r\nimport { Warhammer } from \"../item/weapon/warhammer\";\r\nimport { WeaponBlood } from \"../item/usable/weaponBlood\";\r\nimport { WeaponPoison } from \"../item/usable/weaponPoison\";\r\nimport { WeaponFragments } from \"../item/usable/weaponFragments\";\r\nimport { BluePotion } from \"../item/usable/bluePotion\";\r\nimport { Bush } from \"../entity/object/bush\";\r\nimport { FishingSpot } from \"../entity/object/fishingSpot\";\r\nimport { Furnace } from \"../entity/object/furnace\";\r\nimport { Sprout } from \"../entity/object/sprout\";\r\nimport { TombStone } from \"../entity/object/tombStone\";\r\nimport { DecoBlock } from \"../entity/object/decoBlock\";\r\nimport { Tree } from \"../entity/object/tree\";\r\nimport { ChestLayer } from \"../entity/object/chestLayer\";\r\nimport { Bomb } from \"../entity/object/bomb\";\r\nimport { DownladderMaker } from \"../entity/downladderMaker\";\r\nimport { Rock } from \"../entity/resource/rockResource\";\r\nimport { Hammer } from \"../item/tool/hammer\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { SkinType } from \"../tile/tile\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { Chest } from \"../entity/object/chest\";\r\n\r\n// Add tile imports\r\nimport { Tile } from \"../tile/tile\";\r\nimport { Floor } from \"../tile/floor\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { WallTorch } from \"../tile/wallTorch\";\r\nimport { Door } from \"../tile/door\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { UpLadder } from \"../tile/upLadder\";\r\nimport { Pool } from \"../tile/pool\";\r\nimport { Chasm } from \"../tile/chasm\";\r\nimport { SpawnFloor } from \"../tile/spawnfloor\";\r\nimport { SpikeTrap } from \"../tile/spiketrap\";\r\nimport { Spike } from \"../tile/spike\";\r\nimport { Trapdoor } from \"../tile/trapdoor\";\r\nimport { InsideLevelDoor } from \"../tile/insideLevelDoor\";\r\nimport { GoldenDoor } from \"../tile/goldenDoor\";\r\nimport { FountainTile } from \"../tile/fountainTile\";\r\nimport { Button } from \"../tile/button\";\r\nimport { CoffinTile } from \"../tile/coffinTile\";\r\nimport { Bones } from \"../tile/bones\";\r\nimport { Puddle } from \"../tile/decorations/puddle\";\r\nimport { Decoration } from \"../tile/decorations/decoration\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { WardenEnemy } from \"../entity/enemy/wardenEnemy\";\r\nimport { EnemyShield } from \"../projectile/enemyShield\";\r\nimport { ObsidianResource } from \"../entity/resource/obsidianResource\";\r\nimport { CrusherEnemy } from \"../entity/enemy/crusherEnemy\";\r\nimport { ShieldLeftFragment } from \"../item/weapon/shieldLeftFragment\";\r\nimport { ShieldRightFragment } from \"../item/weapon/shieldRightFragment\";\r\nimport { Stats } from \"./stats\";\r\nimport { statsTracker } from \"./stats\";\r\nimport { PawnEnemy } from \"../entity/enemy/pawnEnemy\";\r\nimport { BigFrogEnemy } from \"../entity/enemy/bigFrogEnemy\";\r\nimport { BeetleEnemy } from \"../entity/enemy/beetleEnemy\";\r\nimport { ExalterEnemy } from \"../entity/enemy/exalterEnemy\";\r\nimport { IronOre } from \"../item/resource/ironOre\";\r\nimport { IronBar } from \"../item/resource/ironBar\";\r\n\r\nexport class HitWarningState {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n\r\n  constructor(hw: HitWarning) {\r\n    this.x = hw.x;\r\n    this.y = hw.y;\r\n    this.dead = hw.dead;\r\n  }\r\n}\r\n\r\nlet loadHitWarning = (hws: HitWarningState, game: Game): HitWarning => {\r\n  let hw = new HitWarning(game, hws.x, hws.y, hws.x, hws.y);\r\n  hw.dead = hws.dead;\r\n  return hw;\r\n};\r\n\r\nexport enum ProjectileType {\r\n  SPAWN,\r\n  WIZARD,\r\n}\r\n\r\nexport class ProjectileState {\r\n  type: ProjectileType;\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  roomID: number;\r\n  roomGID?: string;\r\n  enemySpawn: EnemyState;\r\n  wizardState: number;\r\n  wizardParentID: number;\r\n  wizardParentGID?: string;\r\n  state: number;\r\n  // enemy shields are not persisted anymore\r\n\r\n  constructor(projectile: Projectile, game: Game) {\r\n    this.x = projectile.x;\r\n    this.y = projectile.y;\r\n    this.dead = projectile.dead;\r\n    if (projectile instanceof EnemySpawnAnimation) {\r\n      this.type = ProjectileType.SPAWN;\r\n      this.roomID = game.rooms.indexOf(projectile.room);\r\n      this.roomGID = projectile.room?.globalId;\r\n      this.enemySpawn = new EnemyState(projectile.enemy, game);\r\n    }\r\n    if (projectile instanceof WizardFireball) {\r\n      this.type = ProjectileType.WIZARD;\r\n      this.wizardState = projectile.state;\r\n      this.roomID = game.rooms.indexOf(projectile.parent.room);\r\n      this.roomGID = projectile.parent.room?.globalId;\r\n      this.wizardParentID = projectile.parent.room.entities.indexOf(\r\n        projectile.parent,\r\n      );\r\n      this.wizardParentGID = (projectile.parent as any).globalId;\r\n      this.state = projectile.state;\r\n    }\r\n  }\r\n}\r\n\r\nlet loadProjectile = (ps: ProjectileState, game: Game): Projectile => {\r\n  if (ps.type === ProjectileType.SPAWN) {\r\n    let room =\r\n      (ps.roomGID && game.roomsById?.get(ps.roomGID)) || game.rooms[ps.roomID];\r\n    let enemy = loadEnemy(ps.enemySpawn, game);\r\n    let p = new EnemySpawnAnimation(room, enemy, ps.x, ps.y);\r\n    p.dead = ps.dead;\r\n    return p;\r\n  }\r\n  if (ps.type === ProjectileType.WIZARD) {\r\n    const wizardRoom =\r\n      (ps.roomGID && game.roomsById?.get(ps.roomGID)) || game.rooms[ps.roomID];\r\n\r\n    // Try to resolve parent by globalId first (best effort), then fall back to index\r\n    let wizardCandidate: WizardEnemy | undefined = undefined;\r\n    if (ps.wizardParentGID) {\r\n      const byGid = wizardRoom.entities.find(\r\n        (e) => (e as any).globalId === ps.wizardParentGID,\r\n      );\r\n      if (byGid && byGid instanceof WizardEnemy) wizardCandidate = byGid;\r\n    }\r\n\r\n    if (!wizardCandidate) {\r\n      const byIndex = wizardRoom.entities[ps.wizardParentID];\r\n      if (byIndex && byIndex instanceof WizardEnemy)\r\n        wizardCandidate = byIndex as WizardEnemy;\r\n    }\r\n\r\n    if (!wizardCandidate) {\r\n      // Parent could not be resolved; skip loading this projectile safely\r\n      return undefined as unknown as Projectile;\r\n    }\r\n\r\n    const p = new WizardFireball(wizardCandidate, ps.x, ps.y);\r\n    p.state = ps.wizardState;\r\n    return p;\r\n  }\r\n};\r\n\r\nexport enum EnemyType {\r\n  BARREL,\r\n  BIGSKULL,\r\n  CHARGE,\r\n  CHEST,\r\n  COAL,\r\n  CRATE,\r\n  EMERALD,\r\n  GOLD,\r\n  KNIGHT,\r\n  PLANT,\r\n  POT,\r\n  SKULL,\r\n  CRAB,\r\n  SPAWNER,\r\n  VENDINGMACHINE,\r\n  WIZARD,\r\n  ZOMBIE,\r\n  ARMOREDSKULL,\r\n  ARMOREDZOMBIE,\r\n  BIGKNIGHT,\r\n  BIGZOMBIE,\r\n  BISHOP,\r\n  ENERGYWIZARD,\r\n  FIREWIZARD,\r\n  FROG,\r\n  GLOWBUG,\r\n  MUMMY,\r\n  OCCULTIST,\r\n  QUEEN,\r\n  ROOK,\r\n  SPIDER,\r\n  BUSH,\r\n  FISHING_SPOT,\r\n  FURNACE,\r\n  PUMPKIN,\r\n  SPROUT,\r\n  TOMBSTONE,\r\n  DECO_BLOCK,\r\n  TREE,\r\n  CHEST_LAYER,\r\n  BOMB,\r\n  BLOCK,\r\n  DOWNLADDER_MAKER,\r\n  ROCK,\r\n  MUSHROOMS,\r\n  WARDEN,\r\n  OBSIDIAN,\r\n  CRUSHER,\r\n  PAWN,\r\n  BIGFROG,\r\n  BEETLE,\r\n  EXALTER,\r\n}\r\n\r\nexport class EnemyState {\r\n  type: EnemyType;\r\n  roomID: number;\r\n  roomGID?: string;\r\n  x: number;\r\n  y: number;\r\n  health: number;\r\n  maxHealth: number;\r\n  isShielded?: boolean;\r\n  shieldHealth?: number;\r\n  shieldedBefore?: boolean;\r\n  unconscious: boolean;\r\n  direction: Direction;\r\n  dead: boolean;\r\n  skipNextTurns: number;\r\n  destroyable: boolean;\r\n  hasDrop: boolean;\r\n  drop: ItemState;\r\n  alertTicks: number;\r\n  ticks: number;\r\n  seenPlayer: boolean;\r\n  targetPlayerID: string;\r\n  ticksSinceFirstHit: number;\r\n  drops: Array<ItemState>;\r\n  startX: number;\r\n  startY: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  visualTargetX: number;\r\n  visualTargetY: number;\r\n  chargeEnemyState: ChargeEnemyState;\r\n  enemySpawnType: number;\r\n  isPlayerOpened: boolean;\r\n  playerOpenedID: string;\r\n  open: boolean;\r\n  costItems: Array<ItemState>;\r\n  item: ItemState;\r\n  isInf: boolean;\r\n  quantity: number;\r\n  wizardState: WizardState;\r\n  rumbling: boolean;\r\n  isEnemy: boolean;\r\n  buffed?: boolean;\r\n  buffedBefore?: boolean;\r\n  // Persist explicit opened state for chests for clarity/forward-compatibility\r\n  chestOpened?: boolean;\r\n\r\n  constructor(enemy: Entity, game: Game) {\r\n    this.roomID = game.rooms.indexOf(enemy.room);\r\n    this.roomGID = enemy.room?.globalId;\r\n    this.x = enemy.x;\r\n    this.y = enemy.y;\r\n    this.health = enemy.health;\r\n    this.maxHealth = enemy.maxHealth;\r\n    this.rumbling = enemy.rumbling;\r\n    this.isEnemy = enemy.isEnemy;\r\n\r\n    // Persist shield state on the enemy rather than saving EnemyShield projectile\r\n    try {\r\n      this.isShielded = (enemy as any).shielded === true;\r\n      this.shieldHealth = (enemy as any).shield?.health ?? undefined;\r\n    } catch {}\r\n\r\n    try {\r\n      this.buffed = (enemy as any).buffed === true;\r\n    } catch {}\r\n    try {\r\n      this.buffedBefore = (enemy as any).buffedBefore === true;\r\n    } catch {}\r\n\r\n    this.shieldedBefore = (enemy as any).shieldedBefore;\r\n    this.unconscious = (enemy as Enemy).unconscious;\r\n    this.direction = enemy.direction;\r\n    this.dead = enemy.dead;\r\n    this.skipNextTurns = enemy.skipNextTurns;\r\n    this.destroyable = enemy.destroyable;\r\n    this.hasDrop = false;\r\n    if (enemy.drop) {\r\n      this.hasDrop = true;\r\n      this.drop = new ItemState(enemy.drop, game);\r\n    }\r\n    this.alertTicks = enemy.alertTicks;\r\n    // Common Enemy fields\r\n    if (enemy instanceof Enemy) {\r\n      this.ticks = enemy.ticks;\r\n      this.seenPlayer = enemy.seenPlayer;\r\n      if (enemy.seenPlayer) {\r\n        this.targetPlayerID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.targetPlayer,\r\n        );\r\n        if (!this.targetPlayerID)\r\n          this.targetPlayerID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.targetPlayer,\r\n          );\r\n      }\r\n    }\r\n    if (enemy instanceof Barrel) this.type = EnemyType.BARREL;\r\n    if (enemy instanceof BigSkullEnemy) {\r\n      this.type = EnemyType.BIGSKULL;\r\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\r\n      this.drops = [];\r\n      for (const d of enemy.drops) {\r\n        if (d) {\r\n          this.drops.push(new ItemState(d, game));\r\n        }\r\n      }\r\n    }\r\n    if (enemy instanceof ChargeEnemy) {\r\n      this.type = EnemyType.CHARGE;\r\n      this.chargeEnemyState = enemy.state;\r\n      this.startX = enemy.startX;\r\n      this.startY = enemy.startY;\r\n      this.targetX = enemy.targetX;\r\n      this.targetY = enemy.targetY;\r\n      this.visualTargetX = enemy.visualTargetX;\r\n      this.visualTargetY = enemy.visualTargetY;\r\n    }\r\n    if (enemy instanceof Chest) this.type = EnemyType.CHEST;\r\n    // Explicitly persist whether a chest has been opened (derived from health)\r\n    if (enemy instanceof Chest) {\r\n      this.chestOpened = enemy.health <= 2;\r\n    }\r\n    if (enemy instanceof CoalResource) this.type = EnemyType.COAL;\r\n    if (enemy instanceof Crate) this.type = EnemyType.CRATE;\r\n    if (enemy instanceof EmeraldResource) this.type = EnemyType.EMERALD;\r\n    if (enemy instanceof GoldResource) this.type = EnemyType.GOLD;\r\n    if (enemy instanceof KnightEnemy) {\r\n      this.type = EnemyType.KNIGHT;\r\n    }\r\n    if (enemy instanceof PottedPlant) this.type = EnemyType.PLANT;\r\n    if (enemy instanceof Pot) this.type = EnemyType.POT;\r\n    if (enemy instanceof SkullEnemy) {\r\n      this.type = EnemyType.SKULL;\r\n      this.ticksSinceFirstHit = enemy.ticksSinceFirstHit;\r\n    }\r\n    if (enemy instanceof CrabEnemy) {\r\n      this.type = EnemyType.CRAB;\r\n    }\r\n    if (enemy instanceof Spawner) {\r\n      this.type = EnemyType.SPAWNER;\r\n      this.enemySpawnType = enemy.enemySpawnType;\r\n    }\r\n    if (enemy instanceof VendingMachine) {\r\n      this.type = EnemyType.VENDINGMACHINE;\r\n      this.isPlayerOpened = false;\r\n      if (enemy.playerOpened) {\r\n        this.isPlayerOpened = true;\r\n        this.playerOpenedID = Object.keys(game.players).find(\r\n          (key) => game.players[key] === enemy.playerOpened,\r\n        );\r\n        if (!this.playerOpenedID)\r\n          this.playerOpenedID = Object.keys(game.offlinePlayers).find(\r\n            (key) => game.offlinePlayers[key] === enemy.playerOpened,\r\n          );\r\n      }\r\n      this.open = enemy.open;\r\n      this.costItems = [];\r\n      for (const item of enemy.costItems) {\r\n        if (item) {\r\n          this.costItems.push(new ItemState(item, game));\r\n        }\r\n      }\r\n      if (enemy.item) {\r\n        this.item = new ItemState(enemy.item, game);\r\n      }\r\n      this.isInf = enemy.isInf;\r\n      this.quantity = enemy.quantity;\r\n    }\r\n    if (enemy instanceof WizardEnemy) {\r\n      this.type = EnemyType.WIZARD;\r\n      this.wizardState = enemy.state;\r\n    }\r\n    if (enemy instanceof ZombieEnemy) {\r\n      this.type = EnemyType.ZOMBIE;\r\n    }\r\n    if (enemy instanceof ArmoredSkullEnemy) this.type = EnemyType.ARMOREDSKULL;\r\n    if (enemy instanceof ArmoredzombieEnemy)\r\n      this.type = EnemyType.ARMOREDZOMBIE;\r\n    if (enemy instanceof BigKnightEnemy) this.type = EnemyType.BIGKNIGHT;\r\n    if (enemy instanceof BigZombieEnemy) this.type = EnemyType.BIGZOMBIE;\r\n    if (enemy instanceof BishopEnemy) this.type = EnemyType.BISHOP;\r\n    if (enemy instanceof EnergyWizardEnemy) this.type = EnemyType.ENERGYWIZARD;\r\n    if (enemy instanceof FireWizardEnemy) this.type = EnemyType.FIREWIZARD;\r\n    if (enemy instanceof FrogEnemy) this.type = EnemyType.FROG;\r\n    if (enemy instanceof GlowBugEnemy) this.type = EnemyType.GLOWBUG;\r\n    if (enemy instanceof MummyEnemy) this.type = EnemyType.MUMMY;\r\n    if (enemy instanceof OccultistEnemy) {\r\n      this.type = EnemyType.OCCULTIST;\r\n      // No extra data needed; beams/shields handled at projectile level\r\n    }\r\n    if (enemy instanceof QueenEnemy) this.type = EnemyType.QUEEN;\r\n    if (enemy instanceof RookEnemy) this.type = EnemyType.ROOK;\r\n    if (enemy instanceof SpiderEnemy) this.type = EnemyType.SPIDER;\r\n    if (enemy instanceof Bush) this.type = EnemyType.BUSH;\r\n    if (enemy instanceof FishingSpot) this.type = EnemyType.FISHING_SPOT;\r\n    if (enemy instanceof Furnace) this.type = EnemyType.FURNACE;\r\n    if (enemy instanceof Pumpkin) this.type = EnemyType.PUMPKIN;\r\n    if (enemy instanceof Sprout) this.type = EnemyType.SPROUT;\r\n    if (enemy instanceof TombStone) this.type = EnemyType.TOMBSTONE;\r\n    if (enemy instanceof DecoBlock) this.type = EnemyType.DECO_BLOCK;\r\n    if (enemy instanceof Tree) this.type = EnemyType.TREE;\r\n    if (enemy instanceof ChestLayer) this.type = EnemyType.CHEST_LAYER;\r\n    if (enemy instanceof Bomb) this.type = EnemyType.BOMB;\r\n    if (enemy instanceof Block) this.type = EnemyType.BLOCK;\r\n    if (enemy instanceof DownladderMaker)\r\n      this.type = EnemyType.DOWNLADDER_MAKER;\r\n    if (enemy instanceof Rock) this.type = EnemyType.ROCK;\r\n    if (enemy instanceof Mushrooms) this.type = EnemyType.MUSHROOMS;\r\n    if (enemy instanceof WardenEnemy) this.type = EnemyType.WARDEN;\r\n    if (enemy instanceof ObsidianResource) this.type = EnemyType.OBSIDIAN;\r\n    if (enemy instanceof CrusherEnemy) this.type = EnemyType.CRUSHER;\r\n    if (enemy instanceof PawnEnemy) this.type = EnemyType.PAWN;\r\n    if (enemy instanceof BeetleEnemy) this.type = EnemyType.BEETLE;\r\n    if (enemy instanceof BigFrogEnemy) this.type = EnemyType.BIGFROG;\r\n    if (enemy instanceof ExalterEnemy) this.type = EnemyType.EXALTER;\r\n  }\r\n}\r\n\r\nlet loadEnemy = (es: EnemyState, game: Game): Entity => {\r\n  let enemy;\r\n  let room =\r\n    (es.roomGID && game.roomsById?.get(es.roomGID)) || game.rooms[es.roomID];\r\n\r\n  if (es.type === EnemyType.BARREL) enemy = new Barrel(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BIGSKULL) {\r\n    enemy = new BigSkullEnemy(room, game, es.x, es.y);\r\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\r\n    enemy.drops = [];\r\n    for (const d of es.drops) {\r\n      if (d) {\r\n        enemy.drops.push(loadItem(d, game));\r\n      }\r\n    }\r\n  }\r\n  if (es.type === EnemyType.CHARGE) {\r\n    enemy = new ChargeEnemy(room, game, es.x, es.y);\r\n    enemy.state = es.chargeEnemyState;\r\n    enemy.startX = es.startX;\r\n    enemy.startY = es.startY;\r\n    enemy.targetX = es.targetX;\r\n    enemy.targetY = es.targetY;\r\n    enemy.visualTargetX = es.visualTargetX;\r\n    enemy.visualTargetY = es.visualTargetY;\r\n  }\r\n  if (es.type === EnemyType.CHEST) enemy = new Chest(room, game, es.x, es.y);\r\n  // Restore chest open visuals based on saved health only; do not regenerate loot\r\n  if (enemy instanceof Chest) {\r\n    const shouldBeOpen = es.health <= 2;\r\n    if (shouldBeOpen) {\r\n      (enemy as any).tileX = 6; // final opened frame\r\n      (enemy as any).tileY = 2;\r\n      (enemy as any).opening = false;\r\n    }\r\n  }\r\n  if (es.type === EnemyType.COAL)\r\n    enemy = new CoalResource(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.CRATE) enemy = new Crate(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.EMERALD)\r\n    enemy = new EmeraldResource(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.GOLD)\r\n    enemy = new GoldResource(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.KNIGHT) {\r\n    enemy = new KnightEnemy(room, game, es.x, es.y);\r\n  }\r\n  if (es.type === EnemyType.PLANT)\r\n    enemy = new PottedPlant(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.POT) enemy = new Pot(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.SKULL) {\r\n    enemy = new SkullEnemy(room, game, es.x, es.y);\r\n    enemy.ticksSinceFirstHit = es.ticksSinceFirstHit;\r\n  }\r\n  if (es.type === EnemyType.CRAB) {\r\n    enemy = new CrabEnemy(room, game, es.x, es.y);\r\n  }\r\n  if (es.type === EnemyType.SPAWNER) {\r\n    enemy = new Spawner(room, game, es.x, es.y, [es.enemySpawnType]);\r\n    enemy.enemySpawnType = es.enemySpawnType;\r\n  }\r\n  if (es.type === EnemyType.VENDINGMACHINE) {\r\n    let item = loadItem(es.item, game);\r\n    enemy = new VendingMachine(room, game, es.x, es.y, item);\r\n    if (es.isPlayerOpened) {\r\n      enemy.playerOpened = game.players[es.playerOpenedID];\r\n      if (!enemy.playerOpened)\r\n        enemy.playerOpened = game.offlinePlayers[es.playerOpenedID];\r\n    }\r\n    enemy.open = es.open;\r\n    enemy.costItems = [];\r\n    for (const item of es.costItems) {\r\n      if (item) {\r\n        enemy.costItems.push(loadItem(item, game));\r\n      }\r\n    }\r\n    enemy.isInf = es.isInf;\r\n    enemy.quantity = es.quantity;\r\n  }\r\n\r\n  if (es.type === EnemyType.ZOMBIE) {\r\n    enemy = new ZombieEnemy(room, game, es.x, es.y);\r\n  }\r\n  if (es.type === EnemyType.ARMOREDSKULL)\r\n    enemy = new ArmoredSkullEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.ARMOREDZOMBIE)\r\n    enemy = new ArmoredzombieEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BIGKNIGHT)\r\n    enemy = new BigKnightEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BIGZOMBIE)\r\n    enemy = new BigZombieEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BISHOP)\r\n    enemy = new BishopEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.ENERGYWIZARD)\r\n    enemy = new EnergyWizardEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.FIREWIZARD)\r\n    enemy = new FireWizardEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.FROG) enemy = new FrogEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.GLOWBUG)\r\n    enemy = new GlowBugEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.MUMMY)\r\n    enemy = new MummyEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.OCCULTIST)\r\n    enemy = new OccultistEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.WARDEN)\r\n    enemy = new WardenEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.CRUSHER)\r\n    enemy = new CrusherEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.QUEEN)\r\n    enemy = new QueenEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.ROOK) enemy = new RookEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.SPIDER)\r\n    enemy = new SpiderEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BUSH) enemy = new Bush(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.FISHING_SPOT)\r\n    enemy = new FishingSpot(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.FURNACE)\r\n    enemy = new Furnace(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.PUMPKIN)\r\n    enemy = new Pumpkin(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.SPROUT) enemy = new Sprout(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.TOMBSTONE)\r\n    enemy = new TombStone(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.DECO_BLOCK)\r\n    enemy = new DecoBlock(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.TREE) enemy = new Tree(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.CHEST_LAYER)\r\n    enemy = new ChestLayer(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BOMB) enemy = new Bomb(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BLOCK) enemy = new Block(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.DOWNLADDER_MAKER)\r\n    enemy = new DownladderMaker(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.ROCK) enemy = new Rock(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.MUSHROOMS)\r\n    enemy = new Mushrooms(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.OBSIDIAN)\r\n    enemy = new ObsidianResource(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.PAWN) enemy = new PawnEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BIGFROG)\r\n    enemy = new BigFrogEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.BEETLE)\r\n    enemy = new BeetleEnemy(room, game, es.x, es.y);\r\n  if (es.type === EnemyType.EXALTER)\r\n    enemy = new ExalterEnemy(room, game, es.x, es.y);\r\n\r\n  if (es.isEnemy) {\r\n    enemy.ticks = es.ticks;\r\n    enemy.seenPlayer = es.seenPlayer;\r\n    if (es.seenPlayer) {\r\n      enemy.targetPlayer = game.players[es.targetPlayerID];\r\n      if (!enemy.targetPlayer)\r\n        enemy.targetPlayer = game.offlinePlayers[es.targetPlayerID];\r\n    }\r\n  }\r\n\r\n  if (!enemy) {\r\n    console.error(\r\n      \"Unknown enemy type:\",\r\n      es.type,\r\n      \"EnemyType enum value:\",\r\n      EnemyType[es.type],\r\n      \"Falling back to barrel\",\r\n    );\r\n    enemy = new Barrel(room, game, es.x, es.y);\r\n  }\r\n\r\n  enemy.x = es.x;\r\n  enemy.y = es.y;\r\n  enemy.health = es.health;\r\n  enemy.maxHealth = es.maxHealth;\r\n  (enemy as any).shieldedBefore = es.shieldedBefore;\r\n  (enemy as any).buffed = es.buffed;\r\n  (enemy as any).buffedBefore = es.buffedBefore;\r\n  try {\r\n    if ((es as any).isBuffed) {\r\n      (enemy as any).applyBuff();\r\n    }\r\n  } catch {}\r\n\r\n  // Rebuild shields if needed\r\n  try {\r\n    if ((es as any).isShielded) {\r\n      const sh = (es as any).shieldHealth ?? 1;\r\n      if (!(enemy as any).shielded) {\r\n        (enemy as any).applyShield(sh, true);\r\n      }\r\n    }\r\n  } catch {}\r\n  (enemy as Enemy).unconscious = es.unconscious;\r\n  enemy.direction = es.direction;\r\n  enemy.dead = es.dead;\r\n  enemy.skipNextTurns = es.skipNextTurns;\r\n  enemy.rumbling = es.rumbling;\r\n  // Restore destroyable so chests can be broken after opened\r\n  if (typeof (es as any).destroyable === \"boolean\") {\r\n    enemy.destroyable = (es as any).destroyable;\r\n  }\r\n  if (es.hasDrop) enemy.drop = loadItem(es.drop, game);\r\n  enemy.alertTicks = es.alertTicks;\r\n  // Restore wizard-specific state so they don't immediately attack on load\r\n  try {\r\n    if (enemy instanceof WizardEnemy) {\r\n      (enemy as WizardEnemy).ticks = (es as any).ticks ?? 0;\r\n      (enemy as WizardEnemy).state =\r\n        (es as any).wizardState ?? (enemy as WizardEnemy).state;\r\n      (enemy as WizardEnemy).seenPlayer = (es as any).seenPlayer ?? false;\r\n    }\r\n  } catch {}\r\n\r\n  return enemy;\r\n};\r\n\r\nexport class RoomState {\r\n  roomID: number;\r\n  roomGID?: string;\r\n  pathId?: string;\r\n  entered: boolean;\r\n  envType?: EnvType;\r\n  skin?: SkinType;\r\n  enemies: Array<EnemyState>;\r\n  items: Array<ItemState>;\r\n  projectiles: Array<ProjectileState>;\r\n  hitwarnings: Array<HitWarningState>;\r\n  active: boolean;\r\n  onScreen: boolean;\r\n  lightingUpdateInProgress?: boolean;\r\n  mapGroup: number;\r\n  tiles: Array<Array<TileState | null>>; // Only save specific tile types\r\n\r\n  constructor(room: Room, game: Game) {\r\n    this.roomID = game.rooms.indexOf(room);\r\n    this.roomGID = room.globalId;\r\n    this.pathId = (room as any).pathId || \"main\";\r\n    this.entered = room.entered;\r\n    this.envType = room.envType;\r\n    this.skin = room.skin;\r\n    this.active = room.active;\r\n    this.onScreen = room.onScreen;\r\n    this.mapGroup = room.mapGroup;\r\n    this.enemies = [];\r\n    this.items = [];\r\n    this.projectiles = [];\r\n    this.hitwarnings = [];\r\n\r\n    // Save only chasms, pools, and walls\r\n    this.tiles = [];\r\n    for (let x = room.roomX - 1; x < room.roomX + room.width + 1; x++) {\r\n      this.tiles[x] = [];\r\n      for (let y = room.roomY - 1; y < room.roomY + room.height + 1; y++) {\r\n        const tile = room.roomArray[x]?.[y];\r\n        if (tile && this.shouldSaveTile(tile)) {\r\n          this.tiles[x][y] = new TileState(tile, game);\r\n        } else {\r\n          this.tiles[x][y] = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const enemy of room.entities)\r\n      this.enemies.push(new EnemyState(enemy, game));\r\n    for (const item of room.items) {\r\n      if (item) {\r\n        this.items.push(new ItemState(item, game));\r\n      }\r\n    }\r\n    for (const projectile of room.projectiles) {\r\n      if (projectile instanceof EnemyShield) continue; // do not save shields\r\n      this.projectiles.push(new ProjectileState(projectile, game));\r\n    }\r\n    for (const hw of room.hitwarnings)\r\n      this.hitwarnings.push(new HitWarningState(hw));\r\n  }\r\n\r\n  // Helper method to determine which tiles should be saved\r\n  private shouldSaveTile(tile: Tile): boolean {\r\n    return (\r\n      tile instanceof Chasm ||\r\n      tile instanceof Pool ||\r\n      tile instanceof Wall ||\r\n      tile instanceof DownLadder ||\r\n      tile instanceof UpLadder ||\r\n      tile instanceof Floor ||\r\n      tile instanceof WallTorch ||\r\n      tile instanceof SpawnFloor ||\r\n      tile instanceof Door ||\r\n      tile instanceof SpikeTrap\r\n    );\r\n  }\r\n}\r\n\r\nlet loadRoom = (room: Room, roomState: RoomState, game: Game) => {\r\n  if (roomState.pathId) (room as any).pathId = roomState.pathId;\r\n  room.entered = roomState.entered;\r\n  if (roomState.envType !== undefined) {\r\n    room.envType = roomState.envType as EnvType;\r\n    room.skin = room.envType as unknown as SkinType;\r\n  }\r\n  room.active = roomState.active;\r\n  room.onScreen = roomState.onScreen;\r\n  room.skin = roomState.skin;\r\n\r\n  // Load only saved tiles (chasms, pools, walls), overwriting generated tiles\r\n  if (roomState.tiles) {\r\n    // Reset lights before reconstructing tiles that add their own light sources\r\n    try {\r\n      (room as any).lightSources = [];\r\n    } catch {}\r\n    for (let x = room.roomX - 1; x < room.roomX + room.width + 1; x++) {\r\n      for (let y = room.roomY - 1; y < room.roomY + room.height + 1; y++) {\r\n        const tileState = roomState.tiles[x]?.[y];\r\n        if (tileState) {\r\n          // Only overwrite if we have a saved tile; defer door linking until after grid load\r\n          const loadedTile = loadTile(tileState, room, game);\r\n          room.roomArray[x][y] = loadedTile;\r\n        }\r\n        // If no saved tile state, keep the generated tile as-is\r\n      }\r\n    }\r\n\r\n    // Second pass: link doors by saved linkedDoorGID\r\n    try {\r\n      const gidToDoor = new Map<string, Door>();\r\n      for (let x = room.roomX - 1; x < room.roomX + room.width + 1; x++) {\r\n        for (let y = room.roomY - 1; y < room.roomY + room.height + 1; y++) {\r\n          const ts = roomState.tiles[x]?.[y];\r\n          const t = room.roomArray[x]?.[y];\r\n          if (ts && ts.type === TileType.DOOR && t instanceof Door) {\r\n            const gid = ts.properties.globalId as string | undefined;\r\n            if (gid) gidToDoor.set(gid, t);\r\n          }\r\n          // Re-add light sources for tiles that carry lights\r\n          if (\r\n            t &&\r\n            (t as any).lightSource &&\r\n            !(room as any).lightSources?.includes((t as any).lightSource)\r\n          ) {\r\n            (room as any).lightSources.push((t as any).lightSource);\r\n          }\r\n        }\r\n      }\r\n      for (let x = room.roomX - 1; x < room.roomX + room.width + 1; x++) {\r\n        for (let y = room.roomY - 1; y < room.roomY + room.height + 1; y++) {\r\n          const ts = roomState.tiles[x]?.[y];\r\n          const t = room.roomArray[x]?.[y];\r\n          if (ts && ts.type === TileType.DOOR && t instanceof Door) {\r\n            const linkedGid = ts.properties.linkedDoorGID as string | null;\r\n            if (linkedGid && gidToDoor.has(linkedGid)) {\r\n              t.link(gidToDoor.get(linkedGid));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch {}\r\n\r\n    // Rebuild room.doors array from reconstructed tiles to support door-light propagation\r\n    try {\r\n      const doorsInRoom: Door[] = [];\r\n      for (let x = room.roomX - 1; x < room.roomX + room.width + 1; x++) {\r\n        for (let y = room.roomY - 1; y < room.roomY + room.height + 1; y++) {\r\n          const t = room.roomArray[x]?.[y];\r\n          if (t instanceof Door) doorsInRoom.push(t);\r\n        }\r\n      }\r\n      (room as any).doors = doorsInRoom;\r\n    } catch {}\r\n  }\r\n\r\n  room.entities = [];\r\n  room.items = [];\r\n  room.projectiles = [];\r\n  room.hitwarnings = [];\r\n  // Defer Occultist loading until after other entities so shields can reattach reliably\r\n  const nonOccultists = roomState.enemies.filter(\r\n    (es) => es.type !== EnemyType.OCCULTIST,\r\n  );\r\n  const occultists = roomState.enemies.filter(\r\n    (es) => es.type === EnemyType.OCCULTIST,\r\n  );\r\n  for (const enemy of nonOccultists) room.entities.push(loadEnemy(enemy, game));\r\n  for (const enemy of occultists) room.entities.push(loadEnemy(enemy, game));\r\n  for (const item of roomState.items) {\r\n    if (item) {\r\n      room.items.push(loadItem(item, game, undefined, room));\r\n    }\r\n  }\r\n  // Link chest drop references to existing room items for opened chests\r\n  try {\r\n    // First pass: group items by potential chest source tag if present\r\n    const byChestKey = new Map<string, Item[]>();\r\n    for (const it of room.items) {\r\n      const sx = (it as any)?.sourceChestX as number | undefined;\r\n      const sy = (it as any)?.sourceChestY as number | undefined;\r\n      if (sx !== undefined && sy !== undefined) {\r\n        const key = `${sx},${sy}`;\r\n        const arr = byChestKey.get(key) || [];\r\n        arr.push(it);\r\n        byChestKey.set(key, arr);\r\n      }\r\n    }\r\n    for (const e of room.entities) {\r\n      if (e instanceof Chest && e.health <= 2) {\r\n        const key = `${e.x},${e.y}`;\r\n        const tagged = byChestKey.get(key);\r\n        if (tagged && tagged.length) {\r\n          (e as any).drops = tagged.slice();\r\n          continue;\r\n        }\r\n        // Fallback: associate items sitting on the chest tile\r\n        (e as any).drops = room.items.filter(\r\n          (it) => it && it.x === e.x && it.y === e.y,\r\n        );\r\n      }\r\n    }\r\n  } catch {}\r\n  for (const projectile of roomState.projectiles) {\r\n    const loaded = loadProjectile(projectile, game);\r\n    if (loaded && !(loaded as any).dead) {\r\n      room.projectiles.push(loaded);\r\n    }\r\n  }\r\n  for (const hw of roomState.hitwarnings)\r\n    room.hitwarnings.push(loadHitWarning(hw, game));\r\n\r\n  try {\r\n    const exalters = room.entities.filter(\r\n      (e) => e instanceof ExalterEnemy,\r\n    ) as ExalterEnemy[];\r\n    for (const exalter of exalters) {\r\n      for (const enemy of exalter.buffedEnemies) {\r\n        if (\r\n          enemy instanceof Enemy &&\r\n          !enemy.dead &&\r\n          !enemy.buffed &&\r\n          !enemy.buffedBefore\r\n        ) {\r\n          exalter.applyBuffTo(enemy as Enemy);\r\n        }\r\n      }\r\n    }\r\n  } catch {}\r\n\r\n  // After entities and projectiles are in place, recreate occultist beams without duplicates/self-beams\r\n  try {\r\n    const occultists = room.entities.filter(\r\n      (e) => e instanceof OccultistEnemy,\r\n    ) as OccultistEnemy[];\r\n    const shielded = room.entities.filter(\r\n      (e) => e instanceof Enemy && (e as Enemy).shielded && !e.dead,\r\n    ) as Enemy[];\r\n\r\n    // Clear prior lists\r\n    for (const oc of occultists) (oc as any).shieldedEnemies = [];\r\n\r\n    // Assign each shielded enemy to its nearest other occultist (if any)\r\n    const assignments = new Map<OccultistEnemy, Enemy[]>();\r\n    for (const s of shielded) {\r\n      let nearest: OccultistEnemy | null = null;\r\n      let best = Number.POSITIVE_INFINITY;\r\n      for (const oc of occultists) {\r\n        if (oc === (s as any)) continue; // no self-beam\r\n        const dist = Math.max(Math.abs(oc.x - s.x), Math.abs(oc.y - s.y));\r\n        if (dist < best) {\r\n          best = dist;\r\n          nearest = oc;\r\n        }\r\n      }\r\n      if (nearest) {\r\n        const arr = assignments.get(nearest) || [];\r\n        arr.push(s);\r\n        assignments.set(nearest, arr);\r\n      }\r\n    }\r\n\r\n    // Create beams per occultist for its assigned shielded allies, and set shieldedEnemies\r\n    for (const [oc, allies] of assignments.entries()) {\r\n      (oc as any).shieldedEnemies = allies.slice();\r\n      if ((oc as any).createBeam && allies.length) {\r\n        (oc as any).createBeam(allies);\r\n      }\r\n    }\r\n  } catch {}\r\n\r\n  // Recreate Exalter buffs and beams based on saved buff flags\r\n  try {\r\n    const exalters = room.entities.filter(\r\n      (e) => e instanceof ExalterEnemy,\r\n    ) as ExalterEnemy[];\r\n    if (exalters.length) {\r\n      const buffedTargets = room.entities.filter(\r\n        (e) => e instanceof Enemy && (e as any).buffed && !e.dead,\r\n      ) as Enemy[];\r\n\r\n      // Clear any previous tracking just in case\r\n      for (const ex of exalters) {\r\n        (ex as any).buffedEnemies = [];\r\n      }\r\n\r\n      // Assign each buffed enemy to the nearest exalter and recreate beams\r\n      for (const target of buffedTargets) {\r\n        let nearest: ExalterEnemy | null = null;\r\n        let best = Number.POSITIVE_INFINITY;\r\n        for (const ex of exalters) {\r\n          const dist = Math.max(\r\n            Math.abs(ex.x - target.x),\r\n            Math.abs(ex.y - target.y),\r\n          );\r\n          if (dist < best) {\r\n            best = dist;\r\n            nearest = ex;\r\n          }\r\n        }\r\n        if (nearest) {\r\n          // applyBuffTo will push into buffedEnemies and create the beam effect\r\n          nearest.applyBuffTo(target);\r\n        }\r\n      }\r\n    }\r\n  } catch {}\r\n\r\n  // Reset lighting state to prevent recursion issues\r\n  room.calculateWallInfo();\r\n  room.updateLighting();\r\n};\r\n\r\nexport enum ItemType {\r\n  ARMOR,\r\n  BLUEGEM,\r\n  CANDLE,\r\n  COAL,\r\n  COIN,\r\n  GOLD,\r\n  GOLDENKEY,\r\n  GREENGEM,\r\n  KEY,\r\n  LANTERN,\r\n  REDGEM,\r\n  TORCH,\r\n  DAGGER,\r\n  DUALDAGGER,\r\n  SHOTGUN,\r\n  SPEAR,\r\n  PICKAXE,\r\n  BACKPACK,\r\n  SPELLBOOK,\r\n  WEAPON_FRAGMENTS,\r\n  WARHAMMER,\r\n  HAMMER,\r\n  WEAPON_POISON,\r\n  WEAPON_BLOOD,\r\n  HEART,\r\n  MUSHROOMS,\r\n  STONE,\r\n  BLUE_POTION,\r\n  APPLE,\r\n  BESTIARY_BOOK,\r\n  BOMB_ITEM,\r\n  ENTITY_SPAWNER,\r\n  FISH,\r\n  FISHING_ROD,\r\n  GEODE,\r\n  GLOW_BUGS,\r\n  GOD_STONE,\r\n  GOLD_BAR,\r\n  GOLD_RING,\r\n  GARNET_RING,\r\n  ZIRCON_RING,\r\n  EMERALD_RING,\r\n  AMBER_RING,\r\n  GREEN_POTION,\r\n  GREATAXE,\r\n  HOURGLASS,\r\n  ORANGE_GEM,\r\n  SCYTHE,\r\n  SCYTHE_HANDLE,\r\n  SCYTHE_BLADE,\r\n  SLINGSHOT,\r\n  SPELLBOOK_PAGE,\r\n  SWORD,\r\n  SHIELD_LEFT_FRAGMENT,\r\n  SHIELD_RIGHT_FRAGMENT,\r\n  IRON_ORE,\r\n  IRON_BAR,\r\n}\r\n\r\nexport class ItemState {\r\n  type: ItemType;\r\n  x: number;\r\n  y: number;\r\n  roomID: number;\r\n  roomGID?: string;\r\n  stackCount: number;\r\n  pickedUp: boolean;\r\n  // Optional metadata to support chest-drop persistence\r\n  sourceChestX?: number;\r\n  sourceChestY?: number;\r\n  equipped: boolean;\r\n\r\n  constructor(item: Item, game: Game) {\r\n    // Add null check at the beginning\r\n    if (!item) {\r\n      throw new Error(\"Cannot create ItemState from null item\");\r\n    }\r\n\r\n    if (item instanceof Armor) this.type = ItemType.ARMOR;\r\n    if (item instanceof BlueGem) this.type = ItemType.BLUEGEM;\r\n    if (item instanceof Candle) this.type = ItemType.CANDLE;\r\n    if (item instanceof Coal) this.type = ItemType.COAL;\r\n    if (item instanceof Coin) this.type = ItemType.COIN;\r\n    if (item instanceof GoldOre) this.type = ItemType.GOLD;\r\n    if (item instanceof GoldenKey) this.type = ItemType.GOLDENKEY;\r\n    if (item instanceof GreenGem) this.type = ItemType.GREENGEM;\r\n    if (item instanceof Heart) this.type = ItemType.HEART;\r\n    if (item instanceof Key) this.type = ItemType.KEY;\r\n    if (item instanceof Lantern) this.type = ItemType.LANTERN;\r\n    if (item instanceof RedGem) this.type = ItemType.REDGEM;\r\n    if (item instanceof Torch) this.type = ItemType.TORCH;\r\n    if (item instanceof Dagger) this.type = ItemType.DAGGER;\r\n    if (item instanceof DualDagger) this.type = ItemType.DUALDAGGER;\r\n    if (item instanceof Shotgun) this.type = ItemType.SHOTGUN;\r\n    if (item instanceof Spear) this.type = ItemType.SPEAR;\r\n    if (item instanceof Pickaxe) this.type = ItemType.PICKAXE;\r\n    if (item instanceof Backpack) this.type = ItemType.BACKPACK;\r\n    // Add new item type checks:\r\n    if (item instanceof Apple) this.type = ItemType.APPLE;\r\n    if (item instanceof BestiaryBook) this.type = ItemType.BESTIARY_BOOK;\r\n    if (item instanceof BombItem) this.type = ItemType.BOMB_ITEM;\r\n    if (item instanceof EntitySpawner) this.type = ItemType.ENTITY_SPAWNER;\r\n    if (item instanceof Fish) this.type = ItemType.FISH;\r\n    if (item instanceof FishingRod) this.type = ItemType.FISHING_ROD;\r\n    if (item instanceof Geode) this.type = ItemType.GEODE;\r\n    if (item instanceof GlowBugs) this.type = ItemType.GLOW_BUGS;\r\n    if (item instanceof GodStone) this.type = ItemType.GOD_STONE;\r\n    if (item instanceof GoldBar) this.type = ItemType.GOLD_BAR;\r\n    if (item instanceof GoldRing) this.type = ItemType.GOLD_RING;\r\n    if (item instanceof GarnetRing) this.type = ItemType.GARNET_RING;\r\n    if (item instanceof ZirconRing) this.type = ItemType.ZIRCON_RING;\r\n    if (item instanceof EmeraldRing) this.type = ItemType.EMERALD_RING;\r\n    if (item instanceof AmberRing) this.type = ItemType.AMBER_RING;\r\n    if (item instanceof GreenPotion) this.type = ItemType.GREEN_POTION;\r\n    if (item instanceof Greataxe) this.type = ItemType.GREATAXE;\r\n    if (item instanceof Hourglass) this.type = ItemType.HOURGLASS;\r\n    if (item instanceof OrangeGem) this.type = ItemType.ORANGE_GEM;\r\n    if (item instanceof Scythe) this.type = ItemType.SCYTHE;\r\n    if (item instanceof ScytheHandle) this.type = ItemType.SCYTHE_HANDLE;\r\n    if (item instanceof ScytheBlade) this.type = ItemType.SCYTHE_BLADE;\r\n    if (item instanceof Shrooms) this.type = ItemType.MUSHROOMS; // Maps to existing MUSHROOMS\r\n    if (item instanceof Slingshot) this.type = ItemType.SLINGSHOT;\r\n    if (item instanceof Spellbook) this.type = ItemType.SPELLBOOK; // Maps to existing SPELLBOOK\r\n    if (item instanceof SpellbookPage) this.type = ItemType.SPELLBOOK_PAGE;\r\n    if (item instanceof Stone) this.type = ItemType.STONE; // Maps to existing STONE\r\n    if (item instanceof Sword) this.type = ItemType.SWORD;\r\n    if (item instanceof Warhammer) this.type = ItemType.WARHAMMER; // Maps to existing WARHAMMER\r\n    if (item instanceof WeaponBlood) this.type = ItemType.WEAPON_BLOOD; // Maps to existing WEAPON_BLOOD\r\n    if (item instanceof WeaponPoison) this.type = ItemType.WEAPON_POISON; // Maps to existing WEAPON_POISON\r\n    if (item instanceof WeaponFragments) this.type = ItemType.WEAPON_FRAGMENTS; // Maps to existing WEAPON_FRAGMENTS\r\n    if (item instanceof BluePotion) this.type = ItemType.BLUE_POTION; // Maps to existing BLUE_POTION\r\n    if (item instanceof Hammer) this.type = ItemType.HAMMER;\r\n    if (item instanceof ShieldLeftFragment)\r\n      this.type = ItemType.SHIELD_LEFT_FRAGMENT;\r\n    if (item instanceof ShieldRightFragment)\r\n      this.type = ItemType.SHIELD_RIGHT_FRAGMENT;\r\n    if (item instanceof IronOre) this.type = ItemType.IRON_ORE;\r\n    if (item instanceof IronBar) this.type = ItemType.IRON_BAR;\r\n    this.equipped = item instanceof Equippable && item.equipped;\r\n    this.x = item.x;\r\n    this.y = item.y;\r\n    this.roomID = game.rooms.indexOf(item.level);\r\n    this.roomGID = item.level?.globalId;\r\n    this.stackCount = item.stackCount;\r\n    this.pickedUp = item.pickedUp;\r\n    try {\r\n      // Tag items spawned by an opened chest to allow re-association on load\r\n      const levelRoom = item.level;\r\n      const candidateChest = levelRoom?.entities?.find(\r\n        (e) =>\r\n          e instanceof Chest &&\r\n          e.health <= 2 &&\r\n          e.x === item.x &&\r\n          e.y === item.y,\r\n      ) as any;\r\n      if (candidateChest) {\r\n        this.sourceChestX = candidateChest.x;\r\n        this.sourceChestY = candidateChest.y;\r\n      }\r\n    } catch {}\r\n  }\r\n}\r\n\r\nlet loadItem = (\r\n  i: ItemState,\r\n  game: Game,\r\n  player?: Player,\r\n  targetRoom?: Room,\r\n): Item => {\r\n  let room =\r\n    targetRoom ||\r\n    (i.roomGID && game.roomsById?.get(i.roomGID)) ||\r\n    (i.roomID !== -1 ? game.rooms[i.roomID] : null);\r\n  let item;\r\n  if (i.type === ItemType.ARMOR) item = new Armor(room, i.x, i.y);\r\n  if (i.type === ItemType.BLUEGEM) item = new BlueGem(room, i.x, i.y);\r\n  if (i.type === ItemType.CANDLE) item = new Candle(room, i.x, i.y);\r\n  if (i.type === ItemType.COAL) item = new Coal(room, i.x, i.y);\r\n  if (i.type === ItemType.COIN) item = new Coin(room, i.x, i.y);\r\n  if (i.type === ItemType.GOLD) item = new GoldOre(room, i.x, i.y);\r\n  if (i.type === ItemType.GOLDENKEY) item = new GoldenKey(room, i.x, i.y);\r\n  if (i.type === ItemType.GREENGEM) item = new GreenGem(room, i.x, i.y);\r\n  if (i.type === ItemType.HEART) item = new Heart(room, i.x, i.y);\r\n  if (i.type === ItemType.KEY) item = new Key(room, i.x, i.y);\r\n  if (i.type === ItemType.LANTERN) item = new Lantern(room, i.x, i.y);\r\n  if (i.type === ItemType.REDGEM) item = new RedGem(room, i.x, i.y);\r\n  if (i.type === ItemType.TORCH) item = new Torch(room, i.x, i.y);\r\n  if (i.type === ItemType.DAGGER) item = new Dagger(room, i.x, i.y);\r\n  if (i.type === ItemType.DUALDAGGER) item = new DualDagger(room, i.x, i.y);\r\n  if (i.type === ItemType.SHOTGUN) item = new Shotgun(room, i.x, i.y);\r\n  if (i.type === ItemType.SPEAR) item = new Spear(room, i.x, i.y);\r\n  if (i.type === ItemType.PICKAXE) item = new Pickaxe(room, i.x, i.y);\r\n  if (i.type === ItemType.BACKPACK) item = new Backpack(room, i.x, i.y);\r\n  // Add new item loading cases:\r\n  if (i.type === ItemType.APPLE) item = new Apple(room, i.x, i.y);\r\n  if (i.type === ItemType.BESTIARY_BOOK)\r\n    item = new BestiaryBook(room, i.x, i.y);\r\n  if (i.type === ItemType.BOMB_ITEM) item = new BombItem(room, i.x, i.y);\r\n  if (i.type === ItemType.ENTITY_SPAWNER)\r\n    item = new EntitySpawner(room, i.x, i.y);\r\n  if (i.type === ItemType.FISH) item = new Fish(room, i.x, i.y);\r\n  if (i.type === ItemType.FISHING_ROD) item = new FishingRod(room, i.x, i.y);\r\n  if (i.type === ItemType.GEODE) item = new Geode(room, i.x, i.y);\r\n  if (i.type === ItemType.GLOW_BUGS) item = new GlowBugs(room, i.x, i.y);\r\n  if (i.type === ItemType.GOD_STONE) item = new GodStone(room, i.x, i.y);\r\n  if (i.type === ItemType.GOLD_BAR) item = new GoldBar(room, i.x, i.y);\r\n  if (i.type === ItemType.GOLD_RING) item = new GoldRing(room, i.x, i.y);\r\n  if (i.type === ItemType.GARNET_RING) item = new GarnetRing(room, i.x, i.y);\r\n  if (i.type === ItemType.ZIRCON_RING) item = new ZirconRing(room, i.x, i.y);\r\n  if (i.type === ItemType.EMERALD_RING) item = new EmeraldRing(room, i.x, i.y);\r\n  if (i.type === ItemType.AMBER_RING) item = new AmberRing(room, i.x, i.y);\r\n  if (i.type === ItemType.GREEN_POTION) item = new GreenPotion(room, i.x, i.y);\r\n  if (i.type === ItemType.GREATAXE) item = new Greataxe(room, i.x, i.y);\r\n  if (i.type === ItemType.HOURGLASS) item = new Hourglass(room, i.x, i.y);\r\n  if (i.type === ItemType.ORANGE_GEM) item = new OrangeGem(room, i.x, i.y);\r\n  if (i.type === ItemType.SCYTHE) item = new Scythe(room, i.x, i.y);\r\n  if (i.type === ItemType.SCYTHE_HANDLE)\r\n    item = new ScytheHandle(room, i.x, i.y);\r\n  if (i.type === ItemType.SCYTHE_BLADE) item = new ScytheBlade(room, i.x, i.y);\r\n  if (i.type === ItemType.MUSHROOMS) item = new Shrooms(room, i.x, i.y);\r\n  if (i.type === ItemType.SLINGSHOT) item = new Slingshot(room, i.x, i.y);\r\n  if (i.type === ItemType.SPELLBOOK) item = new Spellbook(room, i.x, i.y);\r\n  if (i.type === ItemType.SPELLBOOK_PAGE)\r\n    item = new SpellbookPage(room, i.x, i.y);\r\n  if (i.type === ItemType.STONE) item = new Stone(room, i.x, i.y);\r\n  if (i.type === ItemType.SWORD) item = new Sword(room, i.x, i.y);\r\n  if (i.type === ItemType.BLUE_POTION) item = new BluePotion(room, i.x, i.y);\r\n  if (i.type === ItemType.WEAPON_FRAGMENTS)\r\n    item = new WeaponFragments(room, i.x, i.y);\r\n  if (i.type === ItemType.WARHAMMER) item = new Warhammer(room, i.x, i.y);\r\n  if (i.type === ItemType.HAMMER) item = new Hammer(room, i.x, i.y);\r\n  if (i.type === ItemType.WEAPON_POISON)\r\n    item = new WeaponPoison(room, i.x, i.y);\r\n  if (i.type === ItemType.WEAPON_BLOOD) item = new WeaponBlood(room, i.x, i.y);\r\n  if (i.type === ItemType.HAMMER) item = new Hammer(room, i.x, i.y);\r\n  if (i.type === ItemType.SHIELD_LEFT_FRAGMENT)\r\n    item = new ShieldLeftFragment(room, i.x, i.y);\r\n  if (i.type === ItemType.SHIELD_RIGHT_FRAGMENT)\r\n    item = new ShieldRightFragment(room, i.x, i.y);\r\n  if (i.type === ItemType.IRON_ORE) item = new IronOre(room, i.x, i.y);\r\n  if (i.type === ItemType.IRON_BAR) item = new IronBar(room, i.x, i.y);\r\n  if (!item) {\r\n    console.error(\r\n      \"Unknown item type:\",\r\n      i.type,\r\n      \"ItemType enum value:\",\r\n      ItemType[i.type],\r\n      \"Falling back to coal\",\r\n    );\r\n    item = new Coal(room, i.x, i.y);\r\n  }\r\n\r\n  // Ensure game reference always exists\r\n  if (item && !(item as any).game) {\r\n    (item as any).game = game;\r\n  }\r\n  // Ensure level reference exists for inventory-only items\r\n  if (!room && item && !item.level) {\r\n    const savedLocal = game.players?.[game.localPlayerID];\r\n    const fallbackRoom = (savedLocal as any)?.getRoom\r\n      ? (savedLocal as any).getRoom()\r\n      : game.rooms[game.players[game.localPlayerID].levelID];\r\n    item.level = fallbackRoom;\r\n  }\r\n\r\n  if (i.equipped) item.equipped = true;\r\n  if (item instanceof Equippable) item.setWielder(player);\r\n  // Ensure all items have a valid game reference\r\n  if (item && !(item as any).game) {\r\n    (item as any).game = game;\r\n  }\r\n  item.stackCount = i.stackCount;\r\n  item.pickedUp = i.pickedUp;\r\n  return item;\r\n};\r\n\r\nexport class InventoryState {\r\n  isOpen: boolean;\r\n  cols: number;\r\n  rows: number;\r\n  selX: number;\r\n  selY: number;\r\n  equipAnimAmount: Array<number>;\r\n  isWeaponEquipped: boolean;\r\n  weaponI: number;\r\n  coins: number;\r\n  items: Array<ItemState | null>;\r\n  expansion: number;\r\n\r\n  constructor(inventory: Inventory, game: Game) {\r\n    this.isOpen = inventory.isOpen;\r\n    this.cols = inventory.cols;\r\n    this.rows = inventory.rows;\r\n    this.equipAnimAmount = inventory.equipAnimAmount.map((x) => x);\r\n    this.isWeaponEquipped = false;\r\n    if (inventory.weapon) {\r\n      this.isWeaponEquipped = true;\r\n      this.weaponI = inventory.items.indexOf(inventory.weapon);\r\n    }\r\n    this.coins = inventory.coins;\r\n    this.selX = inventory.selX;\r\n    this.selY = inventory.selY;\r\n    this.items = Array<ItemState | null>(inventory.cols * inventory.rows);\r\n    this.expansion = inventory.expansion;\r\n    for (let idx = 0; idx < inventory.cols * inventory.rows; idx++) {\r\n      this.items[idx] = null;\r\n    }\r\n    for (const item of inventory.items) {\r\n      if (item) {\r\n        this.items[inventory.items.indexOf(item)] = new ItemState(item, game);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nlet loadInventory = (inventory: Inventory, i: InventoryState, game: Game) => {\r\n  inventory.clear(); // keeps correct length\r\n  for (let idx = 0; idx < i.items.length; idx++) {\r\n    const itemState = i.items[idx];\r\n    if (itemState) {\r\n      const loadedItem = loadItem(itemState, game, inventory.player);\r\n      // Ensure inventory items reference the player's current room and game\r\n      if (!loadedItem.level) {\r\n        const playerRoom = game.rooms[inventory.player.levelID];\r\n        loadedItem.level = playerRoom;\r\n      }\r\n      if (!(loadedItem as any).game) {\r\n        (loadedItem as any).game = game;\r\n      }\r\n      inventory.items[idx] = loadedItem;\r\n      if (loadedItem instanceof Weapon && inventory.weapon === null) {\r\n        loadedItem.toggleEquip();\r\n        inventory.weapon = loadedItem;\r\n      }\r\n    } else {\r\n      inventory.items[idx] = null;\r\n    }\r\n  }\r\n\r\n  inventory.isOpen = i.isOpen;\r\n  inventory.cols = i.cols;\r\n  inventory.rows = i.rows;\r\n  inventory.selX = i.selX;\r\n  inventory.selY = i.selY;\r\n  inventory.equipAnimAmount = i.equipAnimAmount.map((x) => x);\r\n  inventory.coins = i.coins;\r\n  inventory.expansion = i.expansion;\r\n  // Set weapon reference after all items are loaded\r\n  if (i.isWeaponEquipped && i.weaponI < inventory.items.length) {\r\n    inventory.weapon = inventory.items[i.weaponI] as Weapon;\r\n  }\r\n};\r\n\r\nexport class PlayerState {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  roomID: number;\r\n  roomGID?: string;\r\n  mapGroup?: number;\r\n  roomIndexInGroup?: number;\r\n  direction: Direction;\r\n  health: number;\r\n  maxHealth: number;\r\n  lastTickHealth: number;\r\n  inventory: InventoryState;\r\n  hasOpenVendingMachine: boolean;\r\n  openVendingMachineRoomID: number;\r\n  openVendingMachineRoomGID?: string;\r\n  openVendingMachineID: number;\r\n  openVendingMachineGID?: string;\r\n  sightRadius: number;\r\n  lightEquipped?: boolean;\r\n  lightColor?: [number, number, number];\r\n  lightBrightness?: number;\r\n\r\n  constructor(player: Player, game: Game) {\r\n    this.x = player.x;\r\n    this.y = player.y;\r\n    this.dead = player.dead;\r\n    const resolvedRoom = (player as any)?.getRoom\r\n      ? (player as any).getRoom()\r\n      : game.rooms[player.levelID];\r\n    this.roomGID = resolvedRoom?.globalId;\r\n    this.roomID = resolvedRoom\r\n      ? game.rooms.indexOf(resolvedRoom)\r\n      : player.levelID;\r\n    this.mapGroup = resolvedRoom?.mapGroup;\r\n    const playerRoom = resolvedRoom;\r\n    if (playerRoom) {\r\n      const groupRooms = game.rooms\r\n        .filter((r) => r.mapGroup === playerRoom.mapGroup)\r\n        .sort((a, b) => a.id - b.id);\r\n      this.roomIndexInGroup = groupRooms.findIndex((r) => r === playerRoom);\r\n    }\r\n    this.direction = player.direction;\r\n    this.health = player.health;\r\n    this.maxHealth = player.maxHealth;\r\n    this.lastTickHealth = player.lastTickHealth;\r\n    this.inventory = new InventoryState(player.inventory, game);\r\n    this.hasOpenVendingMachine = false;\r\n    if (player.openVendingMachine) {\r\n      this.hasOpenVendingMachine = true;\r\n      this.openVendingMachineRoomID = game.rooms.indexOf(\r\n        player.openVendingMachine.room,\r\n      );\r\n      this.openVendingMachineRoomGID = player.openVendingMachine.room?.globalId;\r\n      this.openVendingMachineID =\r\n        player.openVendingMachine.room.entities.indexOf(\r\n          player.openVendingMachine,\r\n        );\r\n      this.openVendingMachineGID = (player.openVendingMachine as any).globalId;\r\n    }\r\n    this.sightRadius = player.sightRadius;\r\n    // Persist player light settings used by room.updateLighting()\r\n    this.lightEquipped = (player as any).lightEquipped;\r\n    this.lightColor = (player as any).lightColor;\r\n    this.lightBrightness = (player as any).lightBrightness;\r\n  }\r\n}\r\n\r\nlet loadPlayer = (id: string, p: PlayerState, game: Game): Player => {\r\n  let player = new Player(game, p.x, p.y, id === game.localPlayerID);\r\n  player.dead = p.dead;\r\n\r\n  // Prefer GID if available\r\n  if (p.roomGID && game.roomsById?.has(p.roomGID)) {\r\n    const room = game.roomsById.get(p.roomGID);\r\n    (player as any).roomGID = p.roomGID;\r\n    player.levelID = game.rooms.indexOf(room);\r\n  } else {\r\n    // Sidepath-aware resolution: prefer group match and relative order\r\n    let resolvedRoom: Room | undefined;\r\n    if (p.mapGroup !== undefined) {\r\n      const groupRooms = game.rooms\r\n        .filter((r) => r.mapGroup === p.mapGroup)\r\n        .sort((a, b) => a.id - b.id);\r\n      if (groupRooms.length) {\r\n        if (\r\n          p.roomIndexInGroup !== undefined &&\r\n          p.roomIndexInGroup < groupRooms.length\r\n        ) {\r\n          resolvedRoom = groupRooms[p.roomIndexInGroup];\r\n        } else {\r\n          resolvedRoom =\r\n            groupRooms.find((r) => r.id === p.roomID) || groupRooms[0];\r\n        }\r\n      }\r\n    }\r\n    if (!resolvedRoom) {\r\n      const coord = game.rooms.find((r) => r.tileInside(p.x, p.y));\r\n      if (coord) {\r\n        resolvedRoom = coord;\r\n      }\r\n    }\r\n    if (!resolvedRoom) {\r\n      resolvedRoom = game.rooms[p.roomID];\r\n    }\r\n    (player as any).roomGID = resolvedRoom?.globalId;\r\n    player.levelID = resolvedRoom ? game.rooms.indexOf(resolvedRoom) : 0;\r\n  }\r\n  // Ensure player depth matches the currently generated level depth\r\n  if (game.level) {\r\n    player.depth = game.level.depth;\r\n  }\r\n  player.direction = p.direction;\r\n  player.health = p.health;\r\n  player.maxHealth = p.maxHealth;\r\n  player.lastTickHealth = p.lastTickHealth;\r\n  loadInventory(player.inventory, p.inventory, game);\r\n  if (p.hasOpenVendingMachine) {\r\n    const vmRoom =\r\n      (p.openVendingMachineRoomGID &&\r\n        game.roomsById?.get(p.openVendingMachineRoomGID)) ||\r\n      game.rooms[p.openVendingMachineRoomID];\r\n    player.openVendingMachine = p.openVendingMachineGID\r\n      ? (vmRoom.entities.find(\r\n          (e) => (e as any).globalId === p.openVendingMachineGID,\r\n        ) as VendingMachine)\r\n      : (vmRoom.entities[p.openVendingMachineID] as VendingMachine);\r\n  }\r\n  player.sightRadius = p.sightRadius;\r\n  // Restore player light settings (used by room.updateLighting)\r\n  if (typeof p.lightEquipped === \"boolean\")\r\n    (player as any).lightEquipped = p.lightEquipped;\r\n  if (Array.isArray(p.lightColor))\r\n    (player as any).lightColor = p.lightColor as any;\r\n  if (typeof p.lightBrightness === \"number\")\r\n    (player as any).lightBrightness = p.lightBrightness as any;\r\n\r\n  // Set the player's room reference (this might be needed by some player methods)\r\n  // Note: This will be set properly when the game.room is assigned in loadGameState\r\n  // but we can set it here for consistency\r\n  // player.room = game.rooms[player.levelID]; // Only if Player class has a room property\r\n\r\n  return player;\r\n};\r\n\r\nexport class LevelState {\r\n  depth: number;\r\n  width: number;\r\n  height: number;\r\n  isMainPath: boolean;\r\n  mapGroup: number;\r\n  envType: EnvType;\r\n  levelGID?: string;\r\n\r\n  constructor(level: Level) {\r\n    this.depth = level.depth;\r\n    this.width = level.width;\r\n    this.height = level.height;\r\n    this.isMainPath = level.isMainPath;\r\n    this.mapGroup = level.mapGroup;\r\n    this.envType = level.environment.type;\r\n    this.levelGID = (level as any).globalId;\r\n  }\r\n}\r\n\r\nconst loadLevel = (level: Level, levelState: LevelState) => {\r\n  level.depth = levelState.depth;\r\n  level.width = levelState.width;\r\n  level.height = levelState.height;\r\n  level.isMainPath = levelState.isMainPath;\r\n  level.mapGroup = levelState.mapGroup;\r\n  level.environment.type = levelState.envType;\r\n  level.environment.skin = levelState.envType as unknown as SkinType;\r\n};\r\n\r\nexport class GameState {\r\n  seed: number;\r\n  randomState: number;\r\n  players: Record<string, PlayerState>;\r\n  offlinePlayers: Record<string, PlayerState>;\r\n  level: LevelState;\r\n  rooms: Array<RoomState>;\r\n  levelGID?: string;\r\n  roomGIDs?: string[];\r\n  currentPathId?: string;\r\n  sidepathMeta?: Array<{ pathId: string; rooms: number }>;\r\n  lastDroppedScythePiece: \"handle\" | \"blade\" | null = null;\r\n  lastDroppedShieldPiece: \"left\" | \"right\" | null = null;\r\n  stats: Stats;\r\n\r\n  constructor() {\r\n    this.seed = 0;\r\n    this.randomState = 0;\r\n    this.players = {};\r\n    this.offlinePlayers = {};\r\n    this.level = null;\r\n    this.rooms = [];\r\n    //this.statsTracker = statsTracker;\r\n  }\r\n}\r\n\r\nexport const createGameState = (game: Game): GameState => {\r\n  // Prevent saving while replaying to avoid corrupting baseState or user saves\r\n  try {\r\n    if ((game as any).replayManager?.isReplaying?.()) {\r\n      console.warn(\"🔄 SAVE: Skipped createGameState during replay\");\r\n      return null as any;\r\n    }\r\n  } catch {}\r\n\r\n  try {\r\n    let gs = new GameState();\r\n    gs.stats = statsTracker.getStats();\r\n\r\n    // Save basic game properties\r\n    gs.seed = game.levelgen.seed;\r\n    gs.randomState = Random.state;\r\n    gs.lastDroppedScythePiece = game.lastDroppedScythePiece;\r\n    gs.lastDroppedShieldPiece = game.lastDroppedShieldPiece;\r\n\r\n    // Save level state\r\n    if (game.level) {\r\n      gs.level = new LevelState(game.level);\r\n      gs.levelGID = (game.level as any).globalId;\r\n    } else {\r\n      console.warn(\"🔄 SAVE: No game.level found!\");\r\n    }\r\n\r\n    // Save players\r\n\r\n    for (const i in game.players) {\r\n      try {\r\n        const pr = game.players[i];\r\n        const playerRoom = game.rooms[pr.levelID];\r\n\r\n        gs.players[i] = new PlayerState(game.players[i], game);\r\n      } catch (error) {\r\n        console.error(`❌ SAVE: Error saving player ${i}:`, error);\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    // Save offline players\r\n    for (const i in game.offlinePlayers) {\r\n      try {\r\n        gs.offlinePlayers[i] = new PlayerState(game.offlinePlayers[i], game);\r\n      } catch (error) {\r\n        console.error(`❌ SAVE: Error saving offline player ${i}:`, error);\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    // Persist current path\r\n    try {\r\n      (gs as any).currentPathId = (game as any).currentPathId || \"main\";\r\n    } catch {}\r\n\r\n    // Save rooms\r\n    try {\r\n      const groupCounts: Record<number, number> = {};\r\n      for (const r of game.rooms) {\r\n        groupCounts[r.mapGroup] = (groupCounts[r.mapGroup] || 0) + 1;\r\n      }\r\n    } catch {}\r\n    for (let roomIndex = 0; roomIndex < game.rooms.length; roomIndex++) {\r\n      const room = game.rooms[roomIndex];\r\n      try {\r\n        room.catchUp();\r\n        const roomState = new RoomState(room, game);\r\n        gs.rooms.push(roomState);\r\n        (gs.roomGIDs ||= []).push(room.globalId);\r\n      } catch (error) {\r\n        console.error(`❌ SAVE: Error saving room ${roomIndex}:`, error);\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    // Save sidepath metadata: count rooms per non-main pathId\r\n    try {\r\n      const byPid = new Map<string, number>();\r\n      for (const rs of gs.rooms) {\r\n        const pid = ((rs as any).pathId as string) || \"main\";\r\n        if (pid === \"main\") continue;\r\n        byPid.set(pid, (byPid.get(pid) || 0) + 1);\r\n      }\r\n      (gs as any).sidepathMeta = Array.from(byPid.entries()).map(\r\n        ([pathId, rooms]) => ({ pathId, rooms }),\r\n      );\r\n    } catch {}\r\n\r\n    return gs;\r\n  } catch (error) {\r\n    console.error(\"❌ SAVE: Fatal error in createGameState:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loadGameState = (\r\n  game: Game,\r\n  activeUsernames: Array<string>,\r\n  gameState: GameState,\r\n  newWorld: boolean,\r\n) => {\r\n  try {\r\n    // game.loadedFromSaveFile = true;\r\n\r\n    // Clear existing rooms\r\n    if (statsTracker && gameState.stats) statsTracker.setStats(gameState.stats);\r\n\r\n    game.rooms = []; // Use standard array syntax\r\n    game.roomsById = new Map();\r\n    game.levels = [];\r\n    game.levelsById = new Map();\r\n    // Also reset input listener arrays to avoid duplicate mouse handlers after load\r\n    try {\r\n      const InputMod = require(\"./input\");\r\n      (InputMod.Input.mouseDownListeners as any).length = 0;\r\n      (InputMod.Input.mouseRightClickListeners as any).length = 0;\r\n      (InputMod.Input.mouseLeftClickListeners as any).length = 0;\r\n      (InputMod.Input.mouseMoveListeners as any).length = 0;\r\n      (InputMod.Input.mouseUpListeners as any).length = 0;\r\n    } catch {}\r\n\r\n    // Initialize level generator\r\n\r\n    game.levelgen = new LevelGenerator();\r\n    game.levelgen.setSeed(gameState.seed);\r\n\r\n    // Handle missing level state\r\n    if (!gameState.level) {\r\n      console.warn(\"🔄 LOAD: No level state found, creating default\");\r\n      const tempLevel = new Level(game, 0, 1, 1, true, 0, EnvType.DUNGEON);\r\n      gameState.level = new LevelState(tempLevel);\r\n    } else {\r\n    }\r\n\r\n    if (newWorld) {\r\n      gameState.level.depth = 0;\r\n    } else {\r\n      // Restore random state BEFORE level generation for existing worlds\r\n\r\n      Random.setState(gameState.randomState);\r\n    }\r\n\r\n    globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\r\n\r\n    return game.levelgen\r\n      .generateFirstNFloors(game, gameState.level.depth, !newWorld)\r\n      .then(async () => {\r\n        // Ensure seed and Random.state remain as in the save\r\n        try {\r\n          game.levelgen.setSeed(gameState.seed);\r\n          Random.setState(gameState.randomState);\r\n        } catch {}\r\n\r\n        globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\r\n\r\n        // Pre-generate sidepaths deterministically by saved pathIds (avoids coordinate mismatch)\r\n        try {\r\n          const roomStates = gameState.rooms || [];\r\n          // Collect unique non-main pathIds and their smallest saved mapGroup to preserve ordering\r\n          const pathIdToMinGroup = new Map<string, number>();\r\n          for (const rs of roomStates) {\r\n            const pid = (rs as any).pathId as string | undefined;\r\n            if (!pid || pid === \"main\") continue;\r\n            const mg = (rs as any).mapGroup as number | undefined;\r\n            if (typeof mg !== \"number\") continue;\r\n            const prev = pathIdToMinGroup.get(pid);\r\n            if (prev === undefined || mg < prev) pathIdToMinGroup.set(pid, mg);\r\n          }\r\n          const sidepaths = Array.from(pathIdToMinGroup.entries())\r\n            .map(([pid, mg]) => ({ pid, mg }))\r\n            .sort((a, b) => a.mg - b.mg);\r\n\r\n          // Collect rooms for all generated sidepaths, since generate() replaces game.rooms each time\r\n          const collectedSideRooms: Room[] = [];\r\n\r\n          for (const sp of sidepaths) {\r\n            const alreadyExists = game.rooms.some(\r\n              (r) => (r as any).pathId === sp.pid,\r\n            );\r\n            if (alreadyExists) continue;\r\n            const beforeCount = game.rooms.length;\r\n\r\n            await game.levelgen.generate(\r\n              game,\r\n              gameState.level.depth,\r\n              true,\r\n              () => {},\r\n              gameState.level.envType,\r\n              !newWorld,\r\n              sp.pid,\r\n              // Use saved sidepath room count if available for determinism\r\n              (gameState as any).sidepathMeta\r\n                ? {\r\n                    caveRooms:\r\n                      (gameState as any).sidepathMeta.find(\r\n                        (m) => m.pathId === sp.pid,\r\n                      )?.rooms ?? undefined,\r\n                  }\r\n                : undefined,\r\n            );\r\n            const afterCount = game.rooms.length;\r\n            const added = game.rooms.filter(\r\n              (r) => (r as any).pathId === sp.pid,\r\n            );\r\n            // Stash now because subsequent generate() calls will overwrite game.rooms\r\n            for (const r of added) collectedSideRooms.push(r);\r\n          }\r\n\r\n          // Merge any newly generated rooms into the active level\r\n          const activeLevel = game.levels[gameState.level.depth];\r\n          if (activeLevel) {\r\n            const existingGids = new Set(\r\n              activeLevel.rooms.map((r) => r.globalId),\r\n            );\r\n            const newRooms = collectedSideRooms\r\n              .filter((r) => !existingGids.has(r.globalId))\r\n              // Preserve path grouping order from save: sort by (pathId, mapGroup, id)\r\n              .sort((a, b) => {\r\n                const pa = (a as any).pathId || \"main\";\r\n                const pb = (b as any).pathId || \"main\";\r\n                if (pa !== pb) return pa < pb ? -1 : 1;\r\n                if (a.mapGroup !== b.mapGroup) return a.mapGroup - b.mapGroup;\r\n                return a.id - b.id;\r\n              });\r\n            let merged = 0;\r\n            let startId = activeLevel.rooms.length;\r\n            for (const r of newRooms) {\r\n              r.id = startId + merged;\r\n              activeLevel.rooms.push(r);\r\n              merged++;\r\n            }\r\n            game.rooms = activeLevel.rooms;\r\n            game.roomsById = new Map(game.rooms.map((r) => [r.globalId, r]));\r\n\r\n            try {\r\n              const byPath: Record<string, number> = {} as any;\r\n              const byGroup: Record<number, number> = {} as any;\r\n              for (const r of game.rooms) {\r\n                const pid = (r as any).pathId || \"main\";\r\n                byPath[pid] = (byPath[pid] || 0) + 1;\r\n                byGroup[r.mapGroup] = (byGroup[r.mapGroup] || 0) + 1;\r\n              }\r\n            } catch {}\r\n          }\r\n        } catch (e) {\r\n          console.warn(\"⚠️ LOAD: Sidepath generation by pathId failed\", e);\r\n        }\r\n\r\n        if (!newWorld) {\r\n          // Pre-pass: align generated room GIDs with saved roomGIDs so GID-based linking works\r\n          try {\r\n            const newRoomsByGid = new Map<string, Room>();\r\n            for (const rs of gameState.rooms) {\r\n              if (!rs?.roomGID) continue;\r\n              // Try to find the intended generated room using the same resolution we use later\r\n              let candidate =\r\n                (rs.roomGID && game.getRoomById(rs.roomGID)) ||\r\n                game.rooms.find(\r\n                  (r) =>\r\n                    r.mapGroup === (rs as any).mapGroup &&\r\n                    (r as any).pathId === ((rs as any).pathId || \"main\") &&\r\n                    r.id === rs.roomID,\r\n                ) ||\r\n                game.rooms.find(\r\n                  (r) =>\r\n                    r.mapGroup === (rs as any).mapGroup && r.id === rs.roomID,\r\n                ) ||\r\n                game.rooms.find((r) => r.id === rs.roomID);\r\n              if (candidate && (candidate as any).globalId !== rs.roomGID) {\r\n                try {\r\n                  IdGenerator.reserve(rs.roomGID);\r\n                  (candidate as any).globalId = rs.roomGID;\r\n                } catch {}\r\n              }\r\n            }\r\n            // Rebuild roomsById map with possibly updated GIDs\r\n            game.roomsById = new Map(game.rooms.map((r) => [r.globalId, r]));\r\n          } catch {}\r\n\r\n          // Load players\r\n\r\n          for (const playerId in gameState.players) {\r\n            try {\r\n              const player = loadPlayer(\r\n                playerId,\r\n                gameState.players[playerId],\r\n                game,\r\n              );\r\n              game.players[playerId] = player;\r\n            } catch (error) {\r\n              console.error(\r\n                `❌ LOAD: Error loading player ${playerId}:`,\r\n                error,\r\n              );\r\n              throw error;\r\n            }\r\n          }\r\n\r\n          // Load offline players\r\n\r\n          for (const playerId in gameState.offlinePlayers) {\r\n            try {\r\n              const offlinePlayer = loadPlayer(\r\n                playerId,\r\n                gameState.offlinePlayers[playerId],\r\n                game,\r\n              );\r\n              game.offlinePlayers[playerId] = offlinePlayer;\r\n            } catch (error) {\r\n              console.error(\r\n                `❌ LOAD: Error loading offline player ${playerId}:`,\r\n                error,\r\n              );\r\n              throw error;\r\n            }\r\n          }\r\n\r\n          // Load room states\r\n\r\n          try {\r\n            for (const roomState of gameState.rooms) {\r\n              let resolvedBy = \"\";\r\n              let room: Room | undefined = undefined;\r\n              const wantedPid = (roomState as any).pathId || \"main\";\r\n              if (roomState.roomGID) {\r\n                const r0 = game.getRoomById(roomState.roomGID);\r\n                if (r0) {\r\n                  room = r0;\r\n                  resolvedBy = \"gid\";\r\n                }\r\n              }\r\n              if (!room) {\r\n                const r1 = game.rooms.find(\r\n                  (r) =>\r\n                    r.mapGroup === roomState.mapGroup &&\r\n                    (r as any).pathId === wantedPid &&\r\n                    r.id === roomState.roomID,\r\n                );\r\n                if (r1) {\r\n                  room = r1;\r\n                  resolvedBy = \"group+path+id\";\r\n                }\r\n              }\r\n              if (!room) {\r\n                const r2 = game.rooms.find(\r\n                  (r) =>\r\n                    r.mapGroup === roomState.mapGroup &&\r\n                    r.id === roomState.roomID,\r\n                );\r\n                if (r2) {\r\n                  room = r2;\r\n                  resolvedBy = \"group+id\";\r\n                }\r\n              }\r\n              if (!room) {\r\n                const r3 = game.rooms.find((r) => r.id === roomState.roomID);\r\n                if (r3) {\r\n                  room = r3;\r\n                  resolvedBy = \"id\";\r\n                }\r\n              }\r\n\r\n              const roomCandidate = room;\r\n              // use the resolved candidate\r\n              const roomFinal = roomCandidate;\r\n              const roomRef = roomFinal;\r\n              if (roomRef) {\r\n                // Ensure pathId is restored\r\n                if ((roomState as any).pathId)\r\n                  (roomRef as any).pathId = (roomState as any).pathId;\r\n                // Temporarily set context so any loaders that reference game.room are safe\r\n                const prevRoom = game.room;\r\n                try {\r\n                  game.room = roomRef;\r\n                  loadRoom(roomRef, roomState, game);\r\n                } finally {\r\n                  game.room = prevRoom;\r\n                }\r\n              } else {\r\n              }\r\n            }\r\n            // Global post-pass to link doors across rooms by GID\r\n            try {\r\n              const allDoorsByGid = new Map<string, Door>();\r\n              const pending: Array<Door> = [];\r\n              const byCoord = new Map<string, Door[]>();\r\n              for (const r of game.rooms) {\r\n                for (let x = r.roomX - 1; x < r.roomX + r.width + 1; x++) {\r\n                  for (let y = r.roomY - 1; y < r.roomY + r.height + 1; y++) {\r\n                    const t = r.roomArray[x]?.[y];\r\n                    if (t instanceof Door) {\r\n                      const gid = (t as any).globalId as string | undefined;\r\n                      if (gid) allDoorsByGid.set(gid, t);\r\n                      if ((t as any)._pendingLinkedDoorGID) pending.push(t);\r\n                      const key = `${x},${y}`;\r\n                      const arr = byCoord.get(key) || [];\r\n                      arr.push(t);\r\n                      byCoord.set(key, arr);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              // Link by explicit GID first\r\n              for (const d of pending) {\r\n                const targetGid = (d as any)._pendingLinkedDoorGID as\r\n                  | string\r\n                  | null;\r\n                if (targetGid && allDoorsByGid.has(targetGid)) {\r\n                  d.link(allDoorsByGid.get(targetGid));\r\n                }\r\n                (d as any)._pendingLinkedDoorGID = null;\r\n              }\r\n              // Fallback: link doors sharing the same world coordinate\r\n              for (const [key, doors] of byCoord.entries()) {\r\n                if (doors.length === 2) {\r\n                  const [a, b] = doors;\r\n                  if (!(a as any).linkedDoor) a.link(b as Door);\r\n                  if (!(b as any).linkedDoor) b.link(a as Door);\r\n                }\r\n              }\r\n            } catch (e) {\r\n              console.warn(\"⚠️ LOAD: Global door linking failed\", e);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ LOAD: Error loading room states:\", error);\r\n            throw error;\r\n          }\r\n\r\n          // Set local player and current room\r\n\r\n          if (activeUsernames.includes(game.localPlayerID)) {\r\n            const localPlayer = game.players[game.localPlayerID];\r\n            if (localPlayer) {\r\n              if (game.rooms.length > 0) {\r\n                // Resolve via roomGID (stable), else by saved mapGroup+roomID where available (sidepaths),\r\n                // else spatial by coordinates, else fallback by index or first room\r\n                const savedLocal = gameState.players[game.localPlayerID];\r\n                const gidRoom = savedLocal?.roomGID\r\n                  ? game.getRoomById(savedLocal.roomGID)\r\n                  : undefined;\r\n                // Prefer sidepath grouping + relative order if present\r\n                let groupAndIdRoom: Room | undefined = undefined;\r\n                if (savedLocal?.mapGroup !== undefined) {\r\n                  const groupRooms = game.rooms\r\n                    .filter((r) => r.mapGroup === savedLocal.mapGroup)\r\n                    .sort((a, b) => a.id - b.id);\r\n\r\n                  if (groupRooms.length) {\r\n                    if (\r\n                      savedLocal?.roomIndexInGroup !== undefined &&\r\n                      savedLocal.roomIndexInGroup < groupRooms.length\r\n                    ) {\r\n                      groupAndIdRoom = groupRooms[savedLocal.roomIndexInGroup];\r\n                    } else if (savedLocal?.roomID !== undefined) {\r\n                      groupAndIdRoom =\r\n                        groupRooms.find((r) => r.id === savedLocal.roomID) ||\r\n                        groupRooms[0];\r\n                    }\r\n                  }\r\n                }\r\n                const coordRoom = game.rooms.find((r) =>\r\n                  r.tileInside(localPlayer.x, localPlayer.y),\r\n                );\r\n                if (!gidRoom && !groupAndIdRoom && coordRoom) {\r\n                }\r\n                const indexRoom =\r\n                  localPlayer.levelID < game.rooms.length\r\n                    ? game.rooms[localPlayer.levelID]\r\n                    : undefined;\r\n                const resolvedRoom =\r\n                  gidRoom ||\r\n                  groupAndIdRoom ||\r\n                  coordRoom ||\r\n                  indexRoom ||\r\n                  game.rooms[0];\r\n\r\n                game.room = resolvedRoom;\r\n                localPlayer.levelID = game.rooms.indexOf(resolvedRoom);\r\n                // Restore active path\r\n                try {\r\n                  (game as any).currentPathId =\r\n                    (gameState as any).currentPathId ||\r\n                    resolvedRoom.pathId ||\r\n                    \"main\";\r\n                } catch {}\r\n\r\n                // Force-correct depth/level mapping on load\r\n                game.updateLevel(game.room);\r\n                game.currentDepth = game.level.depth;\r\n                localPlayer.depth = game.level.depth;\r\n                if (!resolvedRoom.tileInside(localPlayer.x, localPlayer.y)) {\r\n                  const center = resolvedRoom.getRoomCenter();\r\n                  localPlayer.moveSnap(center.x, center.y);\r\n                }\r\n                game.room.enterLevel(localPlayer, {\r\n                  x: localPlayer.x,\r\n                  y: localPlayer.y,\r\n                });\r\n                localPlayer.map.updateSeenTiles();\r\n                // Refresh lighting to include player's equipped light source immediately after placement\r\n                try {\r\n                  game.room.updateLighting();\r\n                } catch {}\r\n\r\n                // Validate player position\r\n                const tile =\r\n                  game.room.roomArray[localPlayer.x]?.[localPlayer.y];\r\n                if (!tile || tile.isSolid()) {\r\n                  console.warn(\r\n                    \"🔄 LOAD: Player in invalid position, moving to room center\",\r\n                  );\r\n                  const roomCenter = game.room.getRoomCenter();\r\n                  localPlayer.moveSnap(roomCenter.x, roomCenter.y);\r\n                } else {\r\n                }\r\n              } else {\r\n                console.error(\r\n                  \"❌ LOAD: Invalid levelID for local player:\",\r\n                  localPlayer.levelID,\r\n                );\r\n                throw new Error(\r\n                  `Invalid levelID ${localPlayer.levelID} for local player`,\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          game.players[game.localPlayerID] = new Player(game, 0, 0, true);\r\n          game.room = game.rooms[game.players[game.localPlayerID].levelID];\r\n          game.room.enterLevel(game.players[game.localPlayerID]);\r\n          game.players[game.localPlayerID].map.updateSeenTiles();\r\n          game.players[game.localPlayerID].map.saveMapData();\r\n        }\r\n\r\n        // Update lighting (guard nulls)\r\n        try {\r\n          game.room?.updateLighting?.();\r\n        } catch {}\r\n\r\n        // Clear chat\r\n        game.chat = [];\r\n\r\n        return game;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"❌ LOAD: Level generation failed:\", error);\r\n        throw error;\r\n      });\r\n  } catch (error) {\r\n    console.error(\"❌ LOAD: Fatal error in loadGameState:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport enum TileType {\r\n  FLOOR,\r\n  WALL,\r\n  WALL_TORCH,\r\n  DOOR,\r\n  DOWN_LADDER,\r\n  UP_LADDER,\r\n  POOL,\r\n  CHASM,\r\n  SPAWN_FLOOR,\r\n  SPIKE_TRAP,\r\n  SPIKE,\r\n  TRAP_DOOR,\r\n  BONES,\r\n}\r\nexport class TileState {\r\n  type: TileType;\r\n  x: number;\r\n  y: number;\r\n  // Store tile-specific properties as a generic object\r\n  properties: Record<string, any>;\r\n\r\n  constructor(tile: Tile, game: Game) {\r\n    // Add null check at the beginning\r\n    if (!tile) {\r\n      throw new Error(\"Cannot create TileState from null tile\");\r\n    }\r\n\r\n    this.x = tile.x;\r\n    this.y = tile.y;\r\n    this.properties = {};\r\n\r\n    // Determine tile type and extract relevant properties\r\n    if (tile instanceof Floor) {\r\n      this.type = TileType.FLOOR;\r\n    } else if (tile instanceof WallTorch) {\r\n      this.type = TileType.WALL_TORCH;\r\n      this.properties.isBottomWall = (tile as any).isBottomWall;\r\n      this.properties.frame = (tile as any).frame;\r\n    } else if (tile instanceof Wall) {\r\n      this.type = TileType.WALL;\r\n    } else if (tile instanceof Door) {\r\n      this.type = TileType.DOOR;\r\n      // Persist the canonical door type. Door class uses `type`, not `doorType`.\r\n      this.properties.doorType = (tile as any).type;\r\n      this.properties.type = (tile as any).type; // compatibility alias\r\n      // Persist both legacy isOpen and canonical opened/locked flags\r\n      this.properties.isOpen = (tile as any).isOpen;\r\n      this.properties.opened = (tile as any).opened;\r\n      this.properties.locked = (tile as any).locked;\r\n      // Persist lockable module details if present\r\n      this.properties.lockType = (tile as any).lockable?.lockType;\r\n      this.properties.keyID = (tile as any).lockable?.keyID;\r\n      this.properties.doorDir = (tile as any).doorDir;\r\n      this.properties.tunnelDoor = (tile as any).tunnelDoor;\r\n      this.properties.globalId = (tile as any).globalId;\r\n      this.properties.linkedDoorGID =\r\n        (tile as any).linkedDoor?.globalId || null;\r\n    } else if (tile instanceof DownLadder) {\r\n      this.type = TileType.DOWN_LADDER;\r\n      this.properties.isSidePath = (tile as any).isSidePath;\r\n      this.properties.environment = (tile as any).environment;\r\n      this.properties.lockType = (tile as any).lockable?.lockType;\r\n      this.properties.keyID = (tile as any).lockable?.keyID;\r\n      const linkedRoom: Room | null = (tile as any).linkedRoom || null;\r\n      this.properties.linkedRoomGID = linkedRoom ? linkedRoom.globalId : null;\r\n    } else if (tile instanceof UpLadder) {\r\n      this.type = TileType.UP_LADDER;\r\n      // Persist rope state and explicit link to target room by GID for reliability\r\n      this.properties.isRope = (tile as any).isRope || false;\r\n      const linkedRoom: Room | null = (tile as any).linkedRoom || null;\r\n      this.properties.linkedRoomGID = linkedRoom ? linkedRoom.globalId : null;\r\n    } else if (tile instanceof Pool) {\r\n      this.type = TileType.POOL;\r\n      // Reconstruct edge information from tileX, tileY values\r\n      const baseTileX = (tile as any).skin === 1 ? 24 : 20;\r\n      const baseTileY = 4;\r\n      this.properties.leftEdge = (tile as any).tileX < baseTileX;\r\n      this.properties.rightEdge = (tile as any).tileX > baseTileX;\r\n      this.properties.topEdge = (tile as any).topEdge; // This is stored\r\n      this.properties.bottomEdge = (tile as any).tileY > baseTileY;\r\n    } else if (tile instanceof Chasm) {\r\n      this.type = TileType.CHASM;\r\n      // Reconstruct edge information from tileX, tileY values\r\n      const baseTileX = (tile as any).skin === 1 ? 24 : 20;\r\n      const baseTileY = 1;\r\n      this.properties.leftEdge = (tile as any).tileX < baseTileX;\r\n      this.properties.rightEdge = (tile as any).tileX > baseTileX;\r\n      this.properties.topEdge = (tile as any).topEdge; // This is stored\r\n      this.properties.bottomEdge = (tile as any).tileY > baseTileY;\r\n    } else if (tile instanceof SpawnFloor) {\r\n      this.type = TileType.SPAWN_FLOOR;\r\n    } else if (tile instanceof SpikeTrap) {\r\n      this.type = TileType.SPIKE_TRAP;\r\n      this.properties.triggered = (tile as any).triggered;\r\n    } else if (tile instanceof Spike) {\r\n      this.type = TileType.SPIKE;\r\n    } else if (tile instanceof Trapdoor) {\r\n      this.type = TileType.TRAP_DOOR;\r\n    } else if (tile instanceof Bones) {\r\n      this.type = TileType.BONES;\r\n    } else {\r\n      // Default fallback\r\n      this.type = TileType.FLOOR;\r\n      console.warn(\r\n        \"Unknown tile type, defaulting to FLOOR:\",\r\n        tile.constructor.name,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nlet loadTile = (ts: TileState, room: Room, game: Game): Tile => {\r\n  let tile: Tile;\r\n\r\n  switch (ts.type) {\r\n    case TileType.FLOOR:\r\n      tile = new Floor(room, ts.x, ts.y);\r\n      break;\r\n    case TileType.WALL:\r\n      tile = new Wall(room, ts.x, ts.y);\r\n      break;\r\n    case TileType.WALL_TORCH:\r\n      tile = new WallTorch(room, ts.x, ts.y, ts.properties.isBottomWall);\r\n      (tile as any).frame = ts.properties.frame || 0;\r\n      break;\r\n    case TileType.DOOR:\r\n      // Prefer `doorType`, fallback to `type` if older saves\r\n      const _doorType =\r\n        (ts.properties.doorType as DoorType | undefined) ??\r\n        (ts.properties.type as DoorType | undefined) ??\r\n        DoorType.DOOR;\r\n      tile = new Door(room, game, ts.x, ts.y, ts.properties.doorDir, _doorType);\r\n      (tile as any).isOpen = ts.properties.isOpen || false;\r\n      if (typeof ts.properties.opened === \"boolean\")\r\n        (tile as any).opened = ts.properties.opened;\r\n      if (typeof ts.properties.locked === \"boolean\")\r\n        (tile as any).locked = ts.properties.locked;\r\n      // Restore lockable details if present\r\n      try {\r\n        if ((tile as any).lockable && ts.properties.lockType !== undefined) {\r\n          (tile as any).lockable.lockType = ts.properties.lockType;\r\n          (tile as any).lockable.keyID = ts.properties.keyID;\r\n        }\r\n      } catch {}\r\n      // Stash pending link target for global post-load linking\r\n      (tile as any)._pendingLinkedDoorGID = ts.properties.linkedDoorGID || null;\r\n      // Restore globalId for determinism across save/load\r\n      if (ts.properties.globalId) {\r\n        try {\r\n          IdGenerator.reserve(ts.properties.globalId);\r\n          (tile as any).globalId = ts.properties.globalId;\r\n        } catch {}\r\n      }\r\n      break;\r\n    case TileType.DOWN_LADDER:\r\n      tile = new DownLadder(\r\n        room,\r\n        game,\r\n        ts.x,\r\n        ts.y,\r\n        ts.properties.isSidePath || false,\r\n        ts.properties.environment,\r\n        ts.properties.lockType,\r\n        undefined,\r\n        // lockStateOverride ensures saved lockType/keyID are restored exactly\r\n        { lockType: ts.properties.lockType, keyID: ts.properties.keyID },\r\n      );\r\n      if (ts.properties.linkedRoomGID) {\r\n        const linked = game.roomsById?.get(ts.properties.linkedRoomGID);\r\n        if (linked) (tile as any).linkedRoom = linked;\r\n      }\r\n      break;\r\n    case TileType.UP_LADDER:\r\n      tile = new UpLadder(room, game, ts.x, ts.y);\r\n      (tile as any).isRope = !!ts.properties.isRope;\r\n      if (ts.properties.linkedRoomGID) {\r\n        const linked = game.roomsById?.get(ts.properties.linkedRoomGID);\r\n        if (linked) (tile as any).linkedRoom = linked;\r\n      }\r\n      break;\r\n    case TileType.POOL:\r\n      tile = new Pool(\r\n        room,\r\n        ts.x,\r\n        ts.y,\r\n        ts.properties.leftEdge || false,\r\n        ts.properties.rightEdge || false,\r\n        ts.properties.topEdge || false,\r\n        ts.properties.bottomEdge || false,\r\n      );\r\n      break;\r\n    case TileType.CHASM:\r\n      tile = new Chasm(\r\n        room,\r\n        ts.x,\r\n        ts.y,\r\n        ts.properties.leftEdge || false,\r\n        ts.properties.rightEdge || false,\r\n        ts.properties.topEdge || false,\r\n        ts.properties.bottomEdge || false,\r\n      );\r\n      break;\r\n    case TileType.SPAWN_FLOOR:\r\n      tile = new SpawnFloor(room, ts.x, ts.y);\r\n      break;\r\n\r\n    case TileType.SPIKE_TRAP:\r\n      tile = new SpikeTrap(room, ts.x, ts.y);\r\n      (tile as any).triggered = ts.properties.triggered || false;\r\n      break;\r\n    case TileType.SPIKE:\r\n      tile = new Spike(room, ts.x, ts.y);\r\n      break;\r\n\r\n    case TileType.BONES:\r\n      tile = new Bones(room, ts.x, ts.y);\r\n      break;\r\n\r\n    default:\r\n      console.error(\r\n        \"Unknown tile type:\",\r\n        ts.type,\r\n        \"TileType enum value:\",\r\n        TileType[ts.type],\r\n        \"Falling back to floor\",\r\n      );\r\n      tile = new Floor(room, ts.x, ts.y);\r\n      break;\r\n  }\r\n  tile.skin = room.skin;\r\n\r\n  return tile;\r\n};\r\n","export class GameplaySettings {\r\n  static readonly LIMIT_ENEMY_TYPES = true;\r\n  static readonly MEDIAN_ROOM_DENSITY = 0.25;\r\n  static readonly UNLIMITED_SPAWNERS = true;\r\n  static readonly THROTTLE_SPAWNERS = true;\r\n  static NO_ENEMIES = false;\r\n  static EQUIP_USES_TURN = false;\r\n  static UNBREAKABLE_ITEMGROUP_LOOT = false;\r\n  static readonly PRESET_BOSSES = false;\r\n  static readonly PNG_LEVEL_PROBABILITY = 0.1;\r\n\r\n  static readonly MAIN_PATH_BRANCHING = 0.1;\r\n  static readonly MAIN_PATH_LOOPINESS = 0.05;\r\n\r\n  static readonly BASE_ENEMY_ALERT_RANGE = 4;\r\n  static readonly BASE_ENEMY_ALERT_NEARBY_RANGE = 2;\r\n\r\n  // === ENEMY POOL SETTINGS ===\r\n\r\n  // Enemy Type Progression\r\n  static readonly NEW_ENEMIES_PER_LEVEL = 2; // How many new enemy types to add per level when LIMIT_ENEMY_TYPES is true\r\n  static readonly ENEMY_TYPES_BASE_COUNT = 4; // Base number added to sqrt formula for enemy type calculation\r\n  static readonly DEPTH_ZERO_ENEMY_TYPES = 3; // Number of enemy types available at depth 0\r\n\r\n  // Special Enemy Depth Requirements\r\n  static readonly SPAWNER_MIN_DEPTH = 0; // Minimum depth before spawners can appear (depth > this value)\r\n  static readonly OCCULTIST_MIN_DEPTH = 1; // Minimum depth before occultists can appear (depth > this value)\r\n\r\n  // Special Enemy Spawn Probabilities\r\n  static readonly SPAWNER_SPAWN_CHANCE = 0.1; // Probability per attempt to spawn a spawner (10%)\r\n  static readonly OCCULTIST_SPAWN_CHANCE = 0.1; // Probability per attempt to spawn an occultist (10%)\r\n\r\n  // Special Enemy Area Thresholds\r\n  static readonly SPAWNER_AREA_THRESHOLD = 50; // Room area divided by this = max possible spawners\r\n  static readonly OCCULTIST_AREA_THRESHOLD = 200; // Room area divided by this = max possible occultists\r\n\r\n  // Enemy Density Settings\r\n  static readonly ENEMY_DENSITY_DEPTH_MULTIPLIER = 0.04; // Multiplied by (depth + 2) for base density\r\n  static readonly ENEMY_DENSITY_DEPTH_OFFSET = 2; // Added to depth before multiplying\r\n  static readonly MAX_ENEMY_DENSITY = 0.25; // Maximum enemy density cap\r\n  static readonly FOREST_ENEMY_REDUCTION = 0.25; // Multiplier for enemy count in forest environments\r\n\r\n  static readonly MAX_OCCULTIST_SHIELDS = 7; // Maximum number of shields an occultist can have\r\n  static readonly MAX_EXALTER_BUFFS = 7; // Maximum number of buffs an exalter can have\r\n}\r\n","import { GameConstants } from \"./gameConstants\";\r\nimport { Game } from \"../game\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { Direction } from \"../game\";\r\n\r\nexport enum InputEnum {\r\n  I,\r\n  M,\r\n  M_UP,\r\n  Q,\r\n  LEFT,\r\n  RIGHT,\r\n  UP,\r\n  DOWN,\r\n  SPACE,\r\n  COMMA,\r\n  PERIOD,\r\n  LEFT_CLICK,\r\n  RIGHT_CLICK,\r\n  MOUSE_MOVE,\r\n  NUMBER_1,\r\n  NUMBER_2,\r\n  NUMBER_3,\r\n  NUMBER_4,\r\n  NUMBER_5,\r\n  NUMBER_6,\r\n  NUMBER_7,\r\n  NUMBER_8,\r\n  NUMBER_9,\r\n  MINUS,\r\n  EQUALS,\r\n  ESCAPE,\r\n  F,\r\n}\r\n\r\nexport const Input = {\r\n  _pressed: {},\r\n\r\n  isTapHold: false,\r\n  tapStartTime: null,\r\n  IS_TAP_HOLD_THRESH: 300,\r\n  keyDownListener: function (key: string) {},\r\n  iListener: function () {},\r\n  mListener: function () {},\r\n  mUpListener: function () {},\r\n  qListener: function () {},\r\n  leftListener: function () {},\r\n  rightListener: function () {},\r\n  upListener: function () {},\r\n  downListener: function () {},\r\n  aListener: function () {\r\n    Input.leftListener();\r\n  },\r\n  dListener: function () {\r\n    Input.rightListener();\r\n  },\r\n  wListener: function () {\r\n    Input.upListener();\r\n  },\r\n  sListener: function () {\r\n    Input.downListener();\r\n  },\r\n  spaceListener: function () {},\r\n  leftSwipeListener: function () {},\r\n  rightSwipeListener: function () {},\r\n  upSwipeListener: function () {},\r\n  downSwipeListener: function () {},\r\n  tapListener: function () {},\r\n  commaListener: function () {},\r\n  periodListener: function () {},\r\n  numKeyListener: function (num: number) {},\r\n  equalsListener: function () {},\r\n  minusListener: function () {},\r\n  escapeListener: function () {},\r\n  fListener: function () {},\r\n  mouseLeftClickListeners: [],\r\n  mouseRightClickListeners: [],\r\n  mouseMoveListeners: [],\r\n  mouseDownListeners: [],\r\n  mouseUpListeners: [],\r\n\r\n  touchStartListeners: [],\r\n  touchEndListeners: [],\r\n\r\n  mouseX: 0,\r\n  mouseY: 0,\r\n  mouseDown: false,\r\n\r\n  lastPressTime: 0,\r\n  lastPressKey: \"\",\r\n\r\n  // Add mouse repeat tracking\r\n  lastMouseDownTime: 0,\r\n  lastMouseDownX: 0,\r\n  lastMouseDownY: 0,\r\n  mouseDownHandled: false,\r\n\r\n  SPACE: \"Space\",\r\n  LEFT: \"ArrowLeft\",\r\n  UP: \"ArrowUp\",\r\n  RIGHT: \"ArrowRight\",\r\n  DOWN: \"ArrowDown\",\r\n  W: \"KeyW\",\r\n  A: \"KeyA\",\r\n  S: \"KeyS\",\r\n  D: \"KeyD\",\r\n  M: \"KeyM\",\r\n  N: \"KeyN\",\r\n  I: \"KeyI\",\r\n  Q: \"KeyQ\",\r\n  NUMBER_1: \"Digit1\",\r\n  NUMBER_2: \"Digit2\",\r\n  NUMBER_3: \"Digit3\",\r\n  NUMBER_4: \"Digit4\",\r\n  NUMBER_5: \"Digit5\",\r\n  NUMBER_6: \"Digit6\",\r\n  NUMBER_7: \"Digit7\",\r\n  NUMBER_8: \"Digit8\",\r\n  NUMBER_9: \"Digit9\",\r\n  COMMA: \"Comma\",\r\n  PERIOD: \"Period\",\r\n  MINUS: \"Minus\",\r\n  EQUALS: \"Equal\",\r\n  ESCAPE: \"Escape\",\r\n  F: \"KeyF\",\r\n\r\n  rawMouseX: 0,\r\n  rawMouseY: 0,\r\n\r\n  isDown: function (keyCode: string) {\r\n    return this._pressed[keyCode];\r\n  },\r\n\r\n  onKeydown: (event: KeyboardEvent) => {\r\n    if (event.repeat) return; // ignore repeat keypresses\r\n    if (event.key) Input.keyDownListener(event.key);\r\n    if (event.cancelable && event.key != \"F12\" && event.key != \"F5\")\r\n      event.preventDefault();\r\n    Input.lastPressTime = Date.now();\r\n    Input.lastPressKey = event.key;\r\n    Input._pressed[event.code] = true;\r\n    switch (event.code) {\r\n      case Input.LEFT:\r\n        Input.leftListener();\r\n        break;\r\n      case Input.A:\r\n        Input.aListener();\r\n        break;\r\n      case Input.RIGHT:\r\n        Input.rightListener();\r\n        break;\r\n      case Input.D:\r\n        Input.dListener();\r\n        break;\r\n      case Input.UP:\r\n        Input.upListener();\r\n        break;\r\n      case Input.W:\r\n        Input.wListener();\r\n        break;\r\n      case Input.DOWN:\r\n        Input.downListener();\r\n        break;\r\n      case Input.S:\r\n        Input.sListener();\r\n        break;\r\n      case Input.SPACE:\r\n        Input.spaceListener();\r\n        break;\r\n      case Input.M:\r\n        Input.mListener();\r\n        break;\r\n      case Input.I:\r\n        Input.iListener();\r\n        break;\r\n      case Input.Q:\r\n        Input.qListener();\r\n        break;\r\n      case Input.COMMA:\r\n        Input.commaListener();\r\n        break;\r\n      case Input.PERIOD:\r\n        Input.periodListener();\r\n        break;\r\n      case Input.NUMBER_1:\r\n      case Input.NUMBER_2:\r\n      case Input.NUMBER_3:\r\n      case Input.NUMBER_4:\r\n      case Input.NUMBER_5:\r\n      case Input.NUMBER_6:\r\n      case Input.NUMBER_7:\r\n      case Input.NUMBER_8:\r\n      case Input.NUMBER_9:\r\n        Input.numKeyListener(parseInt(event.code.slice(-1)));\r\n        break;\r\n      case Input.EQUALS:\r\n        Input.equalsListener();\r\n        break;\r\n      case Input.MINUS:\r\n        Input.minusListener();\r\n        break;\r\n      case Input.ESCAPE:\r\n        Input.escapeListener();\r\n        break;\r\n      case Input.F:\r\n        Input.fListener();\r\n        break;\r\n    }\r\n  },\r\n\r\n  onKeyup: function (event: KeyboardEvent) {\r\n    delete this._pressed[event.code];\r\n    if (event.key === this.lastPressKey) {\r\n      this.lastPressTime = 0;\r\n      this.lastPressKey = 0;\r\n    }\r\n    if (event.code === Input.M) Input.mUpListener();\r\n  },\r\n\r\n  mouseLeftClickListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseLeftClickListeners.length; i++)\r\n      Input.mouseLeftClickListeners[i](x, y);\r\n  },\r\n\r\n  mouseRightClickListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseRightClickListeners.length; i++)\r\n      Input.mouseRightClickListeners[i](x, y);\r\n  },\r\n\r\n  mouseMoveListener: function (x: number, y: number) {\r\n    for (let i = 0; i < Input.mouseMoveListeners.length; i++)\r\n      Input.mouseMoveListeners[i](x, y);\r\n  },\r\n\r\n  mouseDownListener: function (x: number, y: number, button: number) {\r\n    for (let i = 0; i < Input.mouseDownListeners.length; i++)\r\n      Input.mouseDownListeners[i](x, y, button);\r\n  },\r\n\r\n  mouseUpListener: function (x: number, y: number, button: number) {\r\n    for (let i = 0; i < Input.mouseUpListeners.length; i++)\r\n      Input.mouseUpListeners[i](x, y, button);\r\n  },\r\n\r\n  mouseClickListener: function (event: MouseEvent) {\r\n    if (event.button === 0 || event.button === 2) {\r\n      let rect = window.document\r\n        .getElementById(\"gameCanvas\")\r\n        .getBoundingClientRect();\r\n      let x = event.clientX - rect.left;\r\n      let y = event.clientY - rect.top;\r\n      let scaledX = Math.floor(x / Game.scale);\r\n      let scaledY = Math.floor(y / Game.scale);\r\n\r\n      console.log(\r\n        `Input.mouseClickListener: raw x: ${x}, y: ${y}, scale: ${Game.scale}, scaledX: ${scaledX}, scaledY: ${scaledY}`,\r\n      );\r\n\r\n      if (event.button === 0) {\r\n        Input.mouseLeftClickListener(scaledX, scaledY);\r\n      } else if (event.button === 2) {\r\n        Input.mouseRightClickListener(scaledX, scaledY);\r\n      }\r\n    }\r\n  },\r\n\r\n  updateMousePos: function (event: MouseEvent) {\r\n    Game.inputReceived = true;\r\n\r\n    let rect = window.document\r\n      .getElementById(\"gameCanvas\")\r\n      .getBoundingClientRect();\r\n    let x = event.clientX - rect.left;\r\n    let y = event.clientY - rect.top;\r\n\r\n    // Store raw coordinates\r\n    Input.rawMouseX = x;\r\n    Input.rawMouseY = y;\r\n\r\n    // Calculate scaled coordinates\r\n    Input.mouseX = Math.floor(x / Game.scale);\r\n    Input.mouseY = Math.floor(y / Game.scale);\r\n\r\n    Input.mouseMoveListener(Input.mouseX, Input.mouseY);\r\n  },\r\n\r\n  recalculateMousePosition: function () {\r\n    if (Input.rawMouseX !== undefined && Input.rawMouseY !== undefined) {\r\n      Input.mouseX = Math.floor(Input.rawMouseX / Game.scale);\r\n      Input.mouseY = Math.floor(Input.rawMouseY / Game.scale);\r\n\r\n      // Also recalculate click animation position\r\n      MouseCursor.getInstance().recalculateClickPosition();\r\n    }\r\n  },\r\n\r\n  handleMouseDown: function (event: MouseEvent) {\r\n    if (Input.mouseDown) return; // Prevent multiple triggers\r\n    MouseCursor.getInstance().startClickAnim();\r\n    Input.mouseDown = true;\r\n    Input.mouseDownStartTime = Date.now();\r\n    Input.isMouseHold = false;\r\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, event.button);\r\n\r\n    // Start checking for hold\r\n    if (!Input._holdCheckInterval) {\r\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16); // Check every frame\r\n    }\r\n  },\r\n\r\n  handleMouseUp: function (event: MouseEvent) {\r\n    Input.mouseDown = false;\r\n    Input.mouseDownStartTime = null;\r\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, event.button);\r\n\r\n    // Reset mouse repeat tracking\r\n    Input.lastMouseDownTime = 0;\r\n    Input.mouseDownHandled = false;\r\n\r\n    // Clear hold check interval\r\n    if (Input._holdCheckInterval) {\r\n      clearInterval(Input._holdCheckInterval);\r\n      Input._holdCheckInterval = null;\r\n    }\r\n\r\n    // Clear isMouseHold after a short delay to ensure click handler sees it\r\n    setTimeout(() => {\r\n      Input.isMouseHold = false;\r\n    }, 50);\r\n  },\r\n\r\n  _holdCheckInterval: null,\r\n\r\n  checkIsMouseHold: function () {\r\n    if (!Input.mouseDown || Input.mouseDownStartTime === null) return;\r\n\r\n    if (Date.now() >= Input.mouseDownStartTime + Input.HOLD_THRESH) {\r\n      if (!Input.isMouseHold) {\r\n        Input.isMouseHold = true;\r\n        // Call the hold callback if one is registered\r\n        if (Input.holdCallback) {\r\n          Input.holdCallback();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  getTouches: function (evt) {\r\n    Game.inputReceived = true;\r\n\r\n    return (\r\n      evt.touches || evt.originalEvent.touches // browser API\r\n    ); // jQuery\r\n  },\r\n\r\n  xDown: null,\r\n  yDown: null,\r\n  currentX: 0,\r\n  currentY: 0,\r\n  swiped: false,\r\n\r\n  handleTouchStart: function (evt: TouchEvent) {\r\n    //console.log(\"handleTouchStart triggered\");\r\n    Game.inputReceived = true;\r\n\r\n    evt.preventDefault();\r\n\r\n    const firstTouch = Input.getTouches(evt)[0];\r\n    Input.xDown = firstTouch.clientX;\r\n    Input.yDown = firstTouch.clientY;\r\n    Input.currentX = firstTouch.clientX;\r\n    Input.currentY = firstTouch.clientY;\r\n\r\n    Input.tapStartTime = Date.now();\r\n\r\n    Input.updateMousePos({\r\n      clientX: Input.currentX,\r\n      clientY: Input.currentY,\r\n    } as MouseEvent);\r\n\r\n    Input.swiped = false;\r\n\r\n    // Unify with mouseDown logic, but force button=0 (left-click equivalent)\r\n    Input.mouseDown = true;\r\n    Input.mouseDownStartTime = Date.now();\r\n    Input.isMouseHold = false;\r\n    Input.mouseDownListener(Input.mouseX, Input.mouseY, 0);\r\n\r\n    if (!Input._holdCheckInterval) {\r\n      Input._holdCheckInterval = setInterval(Input.checkIsMouseHold, 16);\r\n      // console.log(\"_holdCheckInterval started\");\r\n    }\r\n  },\r\n\r\n  handleTouchMove: function (evt) {\r\n    evt.preventDefault();\r\n\r\n    Input.currentX = evt.touches[0].clientX;\r\n    Input.currentY = evt.touches[0].clientY;\r\n\r\n    Input.updateMousePos({\r\n      clientX: Input.currentX,\r\n      clientY: Input.currentY,\r\n    } as MouseEvent);\r\n\r\n    if (Input.swiped) return;\r\n\r\n    var xDiff = Input.xDown - Input.currentX;\r\n    var yDiff = Input.yDown - Input.currentY;\r\n\r\n    // Check if we've swiped\r\n    if (xDiff ** 2 + yDiff ** 2 >= GameConstants.SWIPE_THRESH) {\r\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n        if (xDiff > 0) {\r\n          Input.leftSwipeListener();\r\n          Input.lastSwipeDirection = Direction.LEFT;\r\n        } else {\r\n          Input.rightSwipeListener();\r\n          Input.lastSwipeDirection = Direction.RIGHT;\r\n        }\r\n        Input.swiped = true;\r\n        Input.lastSwipeTime = Date.now();\r\n        Input.swipeHoldActive = true;\r\n        Input.swipeHoldRepeating = false; // Start in non-repeating state\r\n      } else {\r\n        if (yDiff > 0) {\r\n          Input.upSwipeListener();\r\n          Input.lastSwipeDirection = Direction.UP;\r\n        } else {\r\n          Input.downSwipeListener();\r\n          Input.lastSwipeDirection = Direction.DOWN;\r\n        }\r\n        Input.swiped = true;\r\n        Input.lastSwipeTime = Date.now();\r\n        Input.swipeHoldActive = true;\r\n        Input.swipeHoldRepeating = false; // Start in non-repeating state\r\n      }\r\n    }\r\n  },\r\n\r\n  handleTouchEnd: function (evt: TouchEvent) {\r\n    evt.preventDefault();\r\n\r\n    if (!Input.isTapHold && !Input.swiped) Input.tapListener();\r\n    Input.isTapHold = false;\r\n    Input.tapStartTime = null;\r\n\r\n    // Reset swipe hold tracking\r\n    Input.swipeHoldActive = false;\r\n    Input.swipeHoldRepeating = false;\r\n    Input.lastSwipeTime = 0;\r\n    Input.lastSwipeDirection = null;\r\n\r\n    // Also unify with mouseUp logic, again forcing button=0\r\n    Input.mouseDown = false;\r\n    Input.mouseDownStartTime = null;\r\n    Input.mouseUpListener(Input.mouseX, Input.mouseY, 0);\r\n\r\n    if (Input._holdCheckInterval) {\r\n      clearInterval(Input._holdCheckInterval);\r\n      Input._holdCheckInterval = null;\r\n      //console.log(\"_holdCheckInterval cleared\");\r\n    }\r\n    setTimeout(() => {\r\n      Input.isMouseHold = false;\r\n      //console.log(\"isMouseHold reset\");\r\n    }, 50);\r\n  },\r\n\r\n  checkIsTapHold: function () {\r\n    if (\r\n      Input.tapStartTime !== null &&\r\n      Date.now() >= Input.tapStartTime + Input.IS_TAP_HOLD_THRESH\r\n    )\r\n      Input.isTapHold = true;\r\n  },\r\n\r\n  set isMouseHold(value: boolean) {\r\n    //console.log(`isMouseHold set to: ${value}`);\r\n    this._isMouseHold = value;\r\n  },\r\n\r\n  get isMouseHold() {\r\n    return this._isMouseHold;\r\n  },\r\n\r\n  _isMouseHold: false,\r\n\r\n  mouseDownStartTime: null,\r\n  HOLD_THRESH: 200, // Adjust this value as needed\r\n\r\n  holdCallback: null as (() => void) | null,\r\n\r\n  // Swipe hold tracking\r\n  lastSwipeTime: 0,\r\n  lastSwipeDirection: null as Direction | null,\r\n  swipeHoldActive: false,\r\n  swipeHoldRepeating: false, // Track if we're in repeat mode yet\r\n};\r\nwindow.addEventListener(\r\n  \"keyup\",\r\n  function (event) {\r\n    Input.onKeyup(event);\r\n  },\r\n  false,\r\n);\r\nwindow.addEventListener(\r\n  \"keydown\",\r\n  function (event) {\r\n    Input.onKeydown(event);\r\n  },\r\n  false,\r\n);\r\n\r\n/** \r\n\r\nwindow.addEventListener(\r\n  \"touchstart\",\r\n  function (event) {\r\n    Input.handleTouchStart(event);\r\n  },\r\n  false,\r\n);\r\n\r\nwindow.addEventListener(\r\n  \"touchend\",\r\n  function (event) {\r\n    Input.handleTouchEnd(event);\r\n  },\r\n  false,\r\n);\r\n*/\r\n\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"mousemove\", (event) => Input.updateMousePos(event), false);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\r\n    \"mousedown\",\r\n    (event) => Input.handleMouseDown(event),\r\n    false,\r\n  );\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"mouseup\", (event) => Input.handleMouseUp(event), false);\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"contextmenu\", (event) => event.preventDefault(), false);\r\n/** \r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\r\n    \"touchstart\",\r\n    (event) => Input.handleTouchStart(event),\r\n    false,\r\n  );\r\nwindow.document\r\n  .getElementById(\"gameCanvas\")\r\n  .addEventListener(\"touchend\", (event) => Input.handleTouchEnd(event), false);\r\n  */\r\n","import { Game, LevelState } from \"../game\";\r\nimport { GameConstants } from \"./gameConstants\";\r\nimport { PlayerAction } from \"../player/playerAction\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\nimport { createGameState, loadGameState, GameState } from \"./gameState\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class ReplayManager {\r\n  private actions: Array<{ t: number; action: PlayerAction }> = [];\r\n  private startMs = 0;\r\n  private recording = false;\r\n  private replaying = false;\r\n  private seed: number | undefined = undefined;\r\n  private timer: number | null = null;\r\n  private baseState: GameState | null = null;\r\n\r\n  beginRecording(seed?: number, game?: Game) {\r\n    this.actions = [];\r\n    this.startMs = Date.now();\r\n    this.recording = true;\r\n    this.replaying = false;\r\n    this.seed = seed;\r\n    if (game) {\r\n      // Capture after the game is actually ready (entered level and player exists)\r\n      const tryCapture = () => {\r\n        try {\r\n          const local = game.players?.[game.localPlayerID];\r\n          const ready =\r\n            !!local &&\r\n            !!game.room &&\r\n            game.levelState === LevelState.IN_LEVEL &&\r\n            Array.isArray(game.rooms) &&\r\n            game.rooms.length > 0;\r\n          if (ready) {\r\n            if (!this.baseState) this.baseState = createGameState(game);\r\n            return; // stop polling\r\n          }\r\n        } catch {}\r\n        setTimeout(tryCapture, 16);\r\n      };\r\n      setTimeout(tryCapture, 0);\r\n    }\r\n  }\r\n\r\n  getStats() {\r\n    return {\r\n      count: this.actions.length,\r\n      seed: this.seed,\r\n      recording: this.recording,\r\n      replaying: this.replaying,\r\n    };\r\n  }\r\n\r\n  isReplaying(): boolean {\r\n    return this.replaying;\r\n  }\r\n\r\n  isRecording(): boolean {\r\n    return this.recording;\r\n  }\r\n\r\n  clearRecording() {\r\n    this.actions = [];\r\n    this.seed = undefined;\r\n    this.startMs = 0;\r\n    this.recording = false;\r\n    this.replaying = false;\r\n  }\r\n\r\n  stopRecording() {\r\n    this.recording = false;\r\n  }\r\n\r\n  recordAction(action: PlayerAction) {\r\n    if (!this.recording || this.replaying) return;\r\n    this.actions.push({ t: Date.now() - this.startMs, action });\r\n  }\r\n\r\n  replay(game: Game, stepMs: number = GameConstants.REPLAY_STEP_MS) {\r\n    if (this.replaying) return;\r\n    this.replaying = true;\r\n    this.recording = false;\r\n    // Snapshot actions and seed before restarting the game\r\n    const actions = this.actions.slice();\r\n    const seed = this.seed;\r\n    if (actions.length === 0 || seed === undefined) {\r\n      game.pushMessage(\"No actions recorded; replay aborted.\");\r\n      this.replaying = false;\r\n      return;\r\n    }\r\n    game.pushMessage(`Replay starting with ${actions.length} actions...`);\r\n    const startPlayback = () => {\r\n      const local = game.players?.[game.localPlayerID];\r\n      if (!local) {\r\n        // Try again next frame until player is ready\r\n        setTimeout(startPlayback, 16);\r\n        return;\r\n      }\r\n      // Do not mark the player as busy; that suppresses movement and actions\r\n      let i = 0;\r\n      const step = () => {\r\n        if (i >= actions.length) {\r\n          this.replaying = false;\r\n          this.recording = false;\r\n          game.pushMessage(\"Replay finished.\");\r\n          return;\r\n        }\r\n        try {\r\n          const action = actions[i].action;\r\n          const beforeX = local.x;\r\n          const beforeY = local.y;\r\n          let canMoveNow: boolean | undefined = undefined;\r\n          try {\r\n            canMoveNow = (local.movement as any)?.canMove?.();\r\n          } catch {}\r\n          const room = (local as any).getRoom?.();\r\n          const turn = room?.turn;\r\n          console.log(\"[replay] step begin\", {\r\n            index: i + 1,\r\n            total: actions.length,\r\n            type: action.type,\r\n            before: { x: beforeX, y: beforeY },\r\n            turn,\r\n            canMove: canMoveNow,\r\n          });\r\n          local.menu.open = false;\r\n          local.dead = false;\r\n          local.inventory.close();\r\n          local.actionProcessor.process(action);\r\n          const afterX = local.x;\r\n          const afterY = local.y;\r\n          const moved = beforeX !== afterX || beforeY !== afterY;\r\n          console.log(\"[replay] step end\", {\r\n            index: i + 1,\r\n            type: action.type,\r\n            after: { x: afterX, y: afterY },\r\n            moved,\r\n          });\r\n        } catch (e) {\r\n          // Swallow errors during replay to avoid interrupting\r\n        }\r\n        // Compute delay to next action using recorded timestamps\r\n        const minDelay = Math.max(GameConstants.MOVEMENT_COOLDOWN + 5, stepMs);\r\n\r\n        const recordedDelay = minDelay;\r\n        i < actions.length - 1\r\n          ? Math.max(1, actions[i + 1].t - actions[i].t)\r\n          : stepMs;\r\n        let nextDelay = Math.max(recordedDelay, minDelay);\r\n        // If computer turn is active, wait extra to allow it to complete\r\n        try {\r\n          const room = (local as any).getRoom?.();\r\n          if (room && room.turn !== undefined) {\r\n            // TurnState.computerTurn is 1 in current enum ordering\r\n            const isComputerTurn = room.turn === 1;\r\n            if (isComputerTurn)\r\n              nextDelay += GameConstants.REPLAY_COMPUTER_TURN_DELAY;\r\n          }\r\n        } catch {}\r\n        console.log(\"[replay] schedule next\", {\r\n          index: i + 1,\r\n          recordedDelay,\r\n          minDelay,\r\n          nextDelay,\r\n        });\r\n        i++;\r\n        if (this.timer) window.clearTimeout(this.timer);\r\n        this.timer = window.setTimeout(step, nextDelay);\r\n      };\r\n      step();\r\n    };\r\n    // Restore to captured base state instead of starting a new run\r\n    if (this.baseState) {\r\n      try {\r\n        const snapshot = JSON.parse(JSON.stringify(this.baseState));\r\n        const activeUsernames = Object.keys(game.players);\r\n        loadGameState(game, activeUsernames, snapshot, false)\r\n          .then(() => {\r\n            (game as any).started = true;\r\n            (game as any).startedFadeOut = false;\r\n            this.recording = false;\r\n            try {\r\n              console.log(\"[replay] seed/state after load\", {\r\n                seed: (game as any).levelgen?.seed,\r\n                expectedSeed: snapshot.seed,\r\n                randomState: (Random as any).state,\r\n                expectedRandom: snapshot.randomState,\r\n              });\r\n            } catch {}\r\n            startPlayback();\r\n          })\r\n          .catch(() => {\r\n            // Fallback to seed restart on failure\r\n            game.newGame(seed);\r\n            (game as any).started = true;\r\n            (game as any).startedFadeOut = false;\r\n            this.recording = false;\r\n            const onReady = () => {\r\n              if (game.levelState !== LevelState.IN_LEVEL) return;\r\n              globalEventBus.off(\r\n                EVENTS.LEVEL_GENERATION_COMPLETED,\r\n                onReady as any,\r\n              );\r\n              startPlayback();\r\n            };\r\n            globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, onReady);\r\n            setTimeout(onReady, 0);\r\n          });\r\n        return; // handled via promise\r\n      } catch {}\r\n    }\r\n    // No base snapshot: use seed restart and wait for generation\r\n    game.newGame(seed);\r\n    (game as any).started = true;\r\n    (game as any).startedFadeOut = false;\r\n    this.recording = false;\r\n    const onReady = () => {\r\n      if (game.levelState !== LevelState.IN_LEVEL) return;\r\n      globalEventBus.off(EVENTS.LEVEL_GENERATION_COMPLETED, onReady as any);\r\n      startPlayback();\r\n    };\r\n    globalEventBus.on(EVENTS.LEVEL_GENERATION_COMPLETED, onReady);\r\n    setTimeout(onReady, 0);\r\n  }\r\n}\r\n","import { Game } from \"../game\";\nimport { createGameState, loadGameState } from \"./gameState\";\nimport {\n  getCookieChunks,\n  setCookieChunks,\n  deleteCookie,\n  getCookie,\n} from \"../utility/cookies\";\n\nconst SAVE_PREFIX = \"wr_save\";\n\nexport const saveToCookies = (game: Game) => {\n  const state = createGameState(game);\n  const json = JSON.stringify(state);\n  // For now, skip compression to avoid adding deps; chunk directly\n  setCookieChunks(SAVE_PREFIX, json, 30);\n  game.pushMessage?.(\"Saved to cookies.\");\n};\n\nexport const loadFromCookies = async (game: Game): Promise<boolean> => {\n  const json = getCookieChunks(SAVE_PREFIX);\n  if (!json) {\n    game.pushMessage?.(\"No cookie save found.\");\n    return false;\n  }\n  try {\n    const state = JSON.parse(json);\n    // Ensure local player is considered active so loadGameState selects and sets current room\n    const activeUsernames = [game.localPlayerID];\n    await loadGameState(game, activeUsernames, state, false);\n    game.pushMessage?.(\"Loaded from cookies.\");\n    return true;\n  } catch (e) {\n    console.error(\"Cookie load failed\", e);\n    game.pushMessage?.(\"Cookie load failed.\");\n    return false;\n  }\n};\n\nexport const clearCookieSave = () => {\n  try {\n    const meta = getCookie(`${SAVE_PREFIX}_meta`);\n    const total = meta ? parseInt(meta, 10) : NaN;\n    if (Number.isFinite(total) && total > 0) {\n      for (let i = 0; i < total; i++) deleteCookie(`${SAVE_PREFIX}_${i}`);\n    } else {\n      // Try a conservative cleanup of first few chunks if meta is corrupt\n      for (let i = 0; i < 32; i++) deleteCookie(`${SAVE_PREFIX}_${i}`);\n    }\n  } catch {}\n  deleteCookie(`${SAVE_PREFIX}_meta`);\n};\n","import { setCookie, getCookie } from \"../utility/cookies\";\nimport { Game } from \"../game\";\nimport { GameConstants } from \"./gameConstants\";\nimport { Sound } from \"../sound/sound\";\n\nconst SETTINGS_KEY = \"wr_settings\";\n\ntype Settings = {\n  muted?: boolean;\n  softScale?: number;\n  shade?: boolean;\n  smoothLighting?: boolean;\n  hoverText?: boolean;\n};\n\nexport const saveSettings = (game: Game) => {\n  const s: Settings = {\n    muted: (Sound as any).audioMuted ?? false,\n    softScale: (GameConstants as any).SOFT_SCALE ?? GameConstants.SCALE,\n    shade: GameConstants.SHADE_ENABLED,\n    smoothLighting: GameConstants.SMOOTH_LIGHTING,\n    hoverText: GameConstants.HOVER_TEXT_ENABLED,\n  };\n  setCookie(SETTINGS_KEY, JSON.stringify(s), 180);\n};\n\nexport const loadSettings = (game: Game) => {\n  const raw = getCookie(SETTINGS_KEY);\n  if (!raw) return;\n  try {\n    const s: Settings = JSON.parse(raw);\n    if (typeof s.muted === \"boolean\") {\n      if (s.muted && !(Sound as any).audioMuted) Sound.toggleMute();\n      if (!s.muted && (Sound as any).audioMuted) Sound.toggleMute();\n    }\n    if (typeof s.softScale === \"number\") {\n      (GameConstants as any).SOFT_SCALE = s.softScale;\n    }\n    //if (typeof s.shade === \"boolean\") GameConstants.SHADE_ENABLED = s.shade;\n    if (typeof s.smoothLighting === \"boolean\")\n      GameConstants.SMOOTH_LIGHTING = s.smoothLighting;\n    if (typeof s.hoverText === \"boolean\") {\n      GameConstants.HOVER_TEXT_ENABLED = s.hoverText;\n      console.log(\"Load hover text enabled\", GameConstants.HOVER_TEXT_ENABLED);\n    }\n  } catch (e) {\n    console.warn(\"Failed to parse settings cookie\", e);\n  }\n};\n","import { EnvType, getEnvTypeName } from \"../constants/environmentTypes\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { AppEvents, EventPayloads, EVENTS } from \"../event/events\";\r\n\r\nexport interface Stats {\r\n  enemiesKilled: number;\r\n  damageDone: number;\r\n  damageTaken: number;\r\n  turnsPassed: number;\r\n  coinsCollected: number;\r\n  itemsCollected: number;\r\n  enemies: string[];\r\n  weaponChoice: string | null;\r\n  sidePathsEntered: Array<{ depth: number; sidePath: string }>;\r\n  xp: number;\r\n  level: number;\r\n}\r\n\r\nexport class StatsTracker {\r\n  private stats: Stats = StatsTracker.initialStats();\r\n\r\n  constructor() {\r\n    this.initializeListeners();\r\n  }\r\n\r\n  private static initialStats(): Stats {\r\n    return {\r\n      enemiesKilled: 0,\r\n      damageDone: 0,\r\n      damageTaken: 0,\r\n      turnsPassed: 0,\r\n      coinsCollected: 0,\r\n      itemsCollected: 0,\r\n      enemies: [],\r\n      weaponChoice: null,\r\n      sidePathsEntered: [],\r\n      xp: 0,\r\n      level: 1,\r\n    };\r\n  }\r\n\r\n  private initializeListeners(): void {\r\n    globalEventBus.on(EVENTS.ENEMY_KILLED, this.handleEnemyKilled);\r\n    globalEventBus.on(EVENTS.DAMAGE_DONE, this.handleDamageDone);\r\n    globalEventBus.on(EVENTS.DAMAGE_TAKEN, this.handleDamageTaken);\r\n    globalEventBus.on(EVENTS.TURN_PASSED, this.handleTurnPassed);\r\n    globalEventBus.on(EVENTS.COIN_COLLECTED, this.handleCoinCollected);\r\n    globalEventBus.on(EVENTS.ITEM_COLLECTED, this.handleItemCollected);\r\n  }\r\n\r\n  private handleEnemyKilled = (\r\n    payload: EventPayloads[typeof EVENTS.ENEMY_KILLED],\r\n  ): void => {\r\n    this.stats.enemiesKilled += 1;\r\n    this.stats.enemies.push(payload.enemyId);\r\n    this.stats.xp += payload.xp;\r\n    this.stats.level = Math.floor(this.stats.xp / 100) + 1;\r\n    //console.log(`Enemy killed: ${payload.enemyId}`);\r\n  };\r\n\r\n  private handleDamageDone = (\r\n    payload: EventPayloads[typeof EVENTS.DAMAGE_DONE],\r\n  ): void => {\r\n    this.stats.damageDone += payload.amount;\r\n    //console.log(`Damage done: ${payload.amount}`);\r\n  };\r\n\r\n  private handleDamageTaken = (\r\n    payload: EventPayloads[typeof EVENTS.DAMAGE_TAKEN],\r\n  ): void => {\r\n    this.stats.damageTaken += payload.amount;\r\n    //console.log(`Damage taken: ${payload.amount}`);\r\n  };\r\n\r\n  private handleTurnPassed = (): void => {\r\n    this.stats.turnsPassed += 1;\r\n    //console.log(`Turn passed: ${this.stats.turnsPassed}`);\r\n  };\r\n\r\n  private handleCoinCollected = (\r\n    payload: EventPayloads[typeof EVENTS.COIN_COLLECTED],\r\n  ): void => {\r\n    this.stats.coinsCollected += payload.amount;\r\n    //console.log(`Coins collected: ${payload.amount}`);\r\n  };\r\n\r\n  private handleItemCollected = (\r\n    payload: EventPayloads[typeof EVENTS.ITEM_COLLECTED],\r\n  ): void => {\r\n    this.stats.itemsCollected += 1;\r\n    //console.log(`Item collected: ${payload.itemId}`);\r\n  };\r\n\r\n  public getStats(): Stats {\r\n    return this.stats;\r\n  }\r\n\r\n  public getXp(): number {\r\n    return this.stats.xp;\r\n  }\r\n\r\n  increaseXp(xp: number) {\r\n    this.stats.xp += xp;\r\n  }\r\n\r\n  public recordWeaponChoice(weaponChoice: string) {\r\n    this.stats.weaponChoice = weaponChoice;\r\n  }\r\n\r\n  public recordSidePathEntered({\r\n    depth,\r\n    sidePath,\r\n  }: {\r\n    depth: number;\r\n    sidePath: EnvType;\r\n  }) {\r\n    this.stats.sidePathsEntered.push({\r\n      depth,\r\n      sidePath: getEnvTypeName(sidePath),\r\n    });\r\n  }\r\n\r\n  public resetStats(): void {\r\n    this.stats = StatsTracker.initialStats();\r\n    //console.log(\"Stats have been reset.\");\r\n  }\r\n\r\n  public setStats(stats: Stats) {\r\n    this.stats = stats;\r\n  }\r\n}\r\n\r\nexport const statsTracker = new StatsTracker();\r\n","import { globalEventBus } from \"../event/eventBus\";\r\n\r\nexport class TextBox {\r\n  text: string;\r\n  cursor: number;\r\n  private enterCallback: () => void;\r\n  private escapeCallback: () => void;\r\n  private allowedCharacters: string = \"all\";\r\n  private element: HTMLElement;\r\n  private message: string = \"\";\r\n  private sentMessages: Array<string>;\r\n  private currentMessageIndex: number = -1;\r\n  private readonly MAX_HISTORY: number = 50;\r\n\r\n  constructor(element: HTMLElement) {\r\n    this.text = \"\";\r\n    this.cursor = 0;\r\n    this.enterCallback = () => {};\r\n    this.escapeCallback = () => {};\r\n    this.element = element;\r\n    this.sentMessages = [];\r\n\r\n    //this.element.addEventListener(\"touchstart\", this.handleTouchStart);\r\n  }\r\n\r\n  public setEnterCallback(callback: () => void): void {\r\n    this.enterCallback = callback;\r\n  }\r\n\r\n  public setEscapeCallback(callback: () => void): void {\r\n    this.escapeCallback = callback;\r\n  }\r\n\r\n  public clear(): void {\r\n    this.text = \"\";\r\n    this.cursor = 0;\r\n    this.message = \"\";\r\n    this.updateElement();\r\n  }\r\n\r\n  public handleKeyPress = (key: string): void => {\r\n    const fontHas = \"abcdefghijklmnopqrstuvwxyz1234567890,.!?:'()[]%-/+ \".split(\r\n      \"\",\r\n    );\r\n    if (key.length === 1) {\r\n      key = key.toLowerCase();\r\n      if (fontHas.includes(key)) {\r\n        if (\r\n          this.allowedCharacters === \"all\" ||\r\n          this.allowedCharacters.includes(key)\r\n        ) {\r\n          this.text =\r\n            this.text.substring(0, this.cursor) +\r\n            key +\r\n            this.text.substring(this.cursor, this.text.length);\r\n          this.cursor += 1;\r\n          this.updateElement();\r\n\r\n          this.message =\r\n            this.message.substring(0, this.cursor - 1) +\r\n            key +\r\n            this.message.substring(this.cursor - 1, this.message.length);\r\n        }\r\n      }\r\n      //console.log(`Current message: \"${this.message}\"`);\r\n      return;\r\n    } else {\r\n      switch (key) {\r\n        case \"Backspace\":\r\n          if (this.cursor > 0) {\r\n            this.text =\r\n              this.text.substring(0, this.cursor - 1) +\r\n              this.text.substring(this.cursor, this.text.length);\r\n            this.cursor = Math.max(0, this.cursor - 1);\r\n            this.updateElement();\r\n\r\n            this.message =\r\n              this.message.substring(0, this.cursor) +\r\n              this.message.substring(this.cursor + 1, this.message.length);\r\n          }\r\n          break;\r\n        case \"Delete\":\r\n          if (this.cursor < this.text.length) {\r\n            this.text =\r\n              this.text.substring(0, this.cursor) +\r\n              this.text.substring(this.cursor + 1, this.text.length);\r\n            this.updateElement();\r\n\r\n            this.message =\r\n              this.message.substring(0, this.cursor) +\r\n              this.message.substring(this.cursor + 1, this.message.length);\r\n          }\r\n          break;\r\n        case \"ArrowLeft\":\r\n          this.cursor = Math.max(0, this.cursor - 1);\r\n          this.updateCursorPosition();\r\n          break;\r\n        case \"ArrowRight\":\r\n          this.cursor = Math.min(this.text.length, this.cursor + 1);\r\n          this.updateCursorPosition();\r\n          break;\r\n        case \"ArrowUp\":\r\n          if (\r\n            this.sentMessages.length > 0 &&\r\n            this.currentMessageIndex < this.sentMessages.length - 1\r\n          ) {\r\n            this.currentMessageIndex++;\r\n            this.text =\r\n              this.sentMessages[\r\n                this.sentMessages.length - 1 - this.currentMessageIndex\r\n              ];\r\n            this.updateElement();\r\n            this.message = this.text;\r\n          }\r\n          break;\r\n        case \"ArrowDown\":\r\n          if (this.currentMessageIndex > 0) {\r\n            this.currentMessageIndex--;\r\n            this.text =\r\n              this.sentMessages[\r\n                this.sentMessages.length - 1 - this.currentMessageIndex\r\n              ];\r\n            this.updateElement();\r\n            this.message = this.text;\r\n          } else if (this.currentMessageIndex === 0) {\r\n            this.currentMessageIndex = -1;\r\n            this.clear();\r\n          }\r\n          break;\r\n        case \"Enter\":\r\n          this.sendMessage();\r\n          this.escapeCallback();\r\n          break;\r\n        case \"Escape\":\r\n          this.escapeCallback();\r\n          break;\r\n      }\r\n    }\r\n    //console.log(`Current message: \"${this.message}\"`);\r\n  };\r\n\r\n  private handleTouchStart = (e: TouchEvent): void => {\r\n    this.focus();\r\n    e.preventDefault();\r\n  };\r\n\r\n  public focus(): void {\r\n    const input = this.element as HTMLInputElement;\r\n    if (input && typeof input.focus === \"function\") {\r\n      try {\r\n        input.focus();\r\n        // Place cursor at end (best effort; harmless if not supported)\r\n        if (typeof input.setSelectionRange === \"function\") {\r\n          const len = input.value?.length ?? 0;\r\n          input.setSelectionRange(len, len);\r\n        }\r\n      } catch {}\r\n    }\r\n  }\r\n\r\n  private sendMessage(): void {\r\n    let message = this.message.trim();\r\n\r\n    if (message) {\r\n      // Add the new message to the history\r\n      this.sentMessages.push(message);\r\n\r\n      // Ensure the history size doesn't exceed the maximum limit\r\n      if (this.sentMessages.length > this.MAX_HISTORY) {\r\n        this.sentMessages.shift(); // Remove the oldest message\r\n      }\r\n      globalEventBus.emit(\"ChatMessageSent\", message);\r\n\r\n      console.log(this.sentMessages);\r\n\r\n      this.enterCallback();\r\n\r\n      if (message.startsWith(\"/\")) {\r\n        message = message.substring(1);\r\n        globalEventBus.emit(\"ChatCommand\", message);\r\n      }\r\n\r\n      this.clear();\r\n\r\n      // Reset the navigation index\r\n      this.currentMessageIndex = -1;\r\n    }\r\n  }\r\n\r\n  private updateElement(): void {\r\n    // Update the HTML element with the current text\r\n    // Modify to handle multiple lines if necessary\r\n    this.element.textContent = this.text;\r\n\r\n    // Optionally, update cursor position in the UI\r\n  }\r\n\r\n  private updateCursorPosition(): void {\r\n    // Implement cursor position update in the UI if necessary\r\n  }\r\n\r\n  // Optional: Modify other methods if needed to handle wrapped messages\r\n}\r\n","/**\n * Global, monotonic ID generator.\n * ------------------------------------------------------------------\n * • Uses a 64-bit counter encoded in base-36 for compact, url-safe IDs.\n * • Optional prefix lets you create type hints: \"IT-abc\" for items,\n *   \"EN-def\" for entities, etc.  All prefixes still share one namespace.\n * • Keeps an in-memory registry so any accidental duplication throws\n *   immediately—very useful during integration and debugging.\n * ------------------------------------------------------------------\n */\nexport class IdGenerator {\n  /** Next numeric value to assign (BigInt for 64-bit range). */\n  private static _next = BigInt(1);\n\n  /** Registry of every ID produced or reserved this session. */\n  private static _registry = new Set<string>();\n\n  /**\n   * Generate a fresh globally-unique ID.\n   * @param prefix Optional type prefix, e.g. \"IT\" for Item.\n   */\n  public static generate(prefix: string = \"\"): string {\n    let id: string;\n\n    // Loop is almost always single-pass; guarantees collision-free result.\n    do {\n      const raw = (this._next++).toString(36); // base-36 for brevity\n      id = prefix ? `${prefix}-${raw}` : raw;\n    } while (this._registry.has(id));\n\n    this._registry.add(id);\n    return id;\n  }\n\n  /**\n   * Reserve an existing ID during deserialization.\n   * Throws if that ID is already in use for this session.\n   */\n  public static reserve(existingId: string): void {\n    if (this._registry.has(existingId)) {\n      throw new Error(`Duplicate ID detected while reserving: ${existingId}`);\n    }\n    this._registry.add(existingId);\n  }\n\n  /** Quick check: has the ID been claimed already? */\n  public static isReserved(id: string): boolean {\n    return this._registry.has(id);\n  }\n\n  /**\n   * Reset generator and registry—intended only for automated tests.\n   */\n  public static resetForTest(): void {\n    this._next = BigInt(1);\n    this._registry.clear();\n  }\n}\n","import { GameConstants } from \"../game/gameConstants\";\r\nimport { LinkButton } from \"./linkButton\";\r\n\r\nexport class FeedbackButton extends LinkButton {\r\n  constructor(\r\n    { x, y }: { x: number; y: number } = {\r\n      x: GameConstants.WIDTH / 2,\r\n      y: GameConstants.HEIGHT / 2,\r\n    },\r\n  ) {\r\n    super({\r\n      text: \"Provide Feedback\",\r\n      linkUrl: \"https://forms.gle/sWzqPGCa1L9XJ3Mk8\",\r\n      x,\r\n      y,\r\n    });\r\n  }\r\n}\r\n","import { Sound } from \"../sound/sound\";\r\nimport { Menu } from \"./menu\";\r\nimport { MuteButton } from \"./muteButton\";\r\n\r\nexport class guiButton {\r\n  toggleable: boolean;\r\n  toggled: boolean;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  text: string;\r\n  parent: Menu;\r\n  onClick: () => void;\r\n  // Optional styling\r\n  noFill?: boolean;\r\n  textColor?: string;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    text: string,\r\n    onClick: () => void,\r\n    toggleable: boolean = false,\r\n    parent?: Menu,\r\n  ) {\r\n    this.toggleable = toggleable;\r\n    this.toggled = false;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.text = text;\r\n    this.onClick = onClick;\r\n    this.parent = parent;\r\n    this.noFill = false;\r\n    this.textColor = undefined;\r\n  }\r\n\r\n  // Add a method to update the button's own text based on mute state\r\n  toggleMuteText = () => {\r\n    // 'this' refers to the guiButton instance\r\n    MuteButton.toggleMute();\r\n\r\n    this.text = Sound.audioMuted ? \"Sound Muted\" : \"Sound Unmuted\";\r\n    this.parent?.game.pushMessage(this.text);\r\n  };\r\n\r\n  // Check if a point is within the button bounds\r\n  isPointInButton(x: number, y: number): boolean {\r\n    return (\r\n      x >= this.x &&\r\n      x <= this.x + this.width &&\r\n      y >= this.y &&\r\n      y <= this.y + this.height\r\n    );\r\n  }\r\n}\r\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Input } from \"../game/input\";\nimport { Player } from \"../player/player\";\nimport { Room } from \"../room/room\";\n\nexport class HoverText {\n  static getHoverText(\n    x: number,\n    y: number,\n    room: Room,\n    player: Player,\n    drawFor: \"inGame\" | \"inventory\" | \"vendingMachine\" | \"none\",\n  ): string[] {\n    // Handle undefined mouse coordinates\n    if (\n      Input.mouseX === undefined ||\n      Input.mouseY === undefined ||\n      drawFor === \"none\"\n    ) {\n      return [];\n    }\n\n    // Get screen center coordinates\n    const screenCenterX = GameConstants.WIDTH / 2;\n    const screenCenterY = GameConstants.HEIGHT / 2;\n\n    // Convert pixel offset to tile offset\n    const tileOffsetX = Math.floor(\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n    const tileOffsetY = Math.floor(\n      (Input.mouseY - screenCenterY + GameConstants.TILESIZE / 2) /\n        GameConstants.TILESIZE,\n    );\n\n    const offsetX = x + tileOffsetX;\n    const offsetY = y + tileOffsetY;\n\n    const strings: string[] = [];\n    if (\n      drawFor === \"inGame\" &&\n      !player.inventory.isPointInQuickbarBounds(x, y).inBounds\n    ) {\n      for (const entity of room.entities) {\n        if (entity.x === offsetX && entity.y === offsetY) {\n          strings.push(entity.hoverText());\n        }\n      }\n\n      for (const item of room.items) {\n        if (item.x === offsetX && item.y === offsetY) {\n          strings.push(item.hoverText());\n        }\n      }\n\n      const tile = room.getTile(offsetX, offsetY);\n      if (tile) {\n        strings.push(tile.getName());\n      }\n    } else if (drawFor === \"inventory\") {\n      if (player.inventory.itemAtSelectedSlot()) {\n        strings.push(player.inventory.itemAtSelectedSlot()?.hoverText());\n      }\n    } else {\n      if (player.openVendingMachine) {\n        strings.push(player.openVendingMachine.hoverText());\n      }\n    }\n\n    return strings;\n  }\n\n  static draw(\n    delta: number,\n    x: number,\n    y: number,\n    room: Room,\n    player: Player,\n    drawX: number,\n    drawY: number,\n    drawFor: \"inGame\" | \"inventory\" | \"vendingMachine\" | \"none\",\n  ) {\n    const strings: string[] = HoverText.getHoverText(\n      x,\n      y,\n      room,\n      player,\n      drawFor,\n    );\n    if (strings.length === 0) {\n      return;\n    }\n    Game.ctx.save();\n    if (drawFor === \"none\") {\n      return;\n    }\n    for (const string of strings) {\n      const offsetY = strings.indexOf(string) * 6;\n      if (drawFor === \"inventory\") {\n        Game.ctx.globalAlpha = 1;\n      } else {\n        Game.ctx.globalAlpha = 0.5;\n      }\n      Game.ctx.fillStyle = \"yellow\";\n\n      const offsetX = Game.measureText(string).width / 2;\n\n      let posX = x;\n      let posY = y;\n\n      switch (drawFor) {\n        case \"inGame\":\n          posX = GameConstants.IN_GAME_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawX + 8\n            : GameConstants.WIDTH / 2 - offsetX;\n          posY = GameConstants.IN_GAME_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawY + 8 // + offsetY\n            : GameConstants.HEIGHT - 32;\n          break;\n        case \"inventory\":\n          posX = GameConstants.INVENTORY_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawX + 8\n            : GameConstants.WIDTH / 2 - offsetX;\n          posY = GameConstants.INVENTORY_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawY + 8 // + offsetY\n            : GameConstants.HEIGHT - 32;\n          break;\n        case \"vendingMachine\":\n          posX = GameConstants.VENDING_MACHINE_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawX + 8\n            : GameConstants.WIDTH / 2 - offsetX;\n          posY = GameConstants.VENDING_MACHINE_HOVER_TEXT_FOLLOWS_MOUSE\n            ? drawY + 8 // + offsetY\n            : GameConstants.HEIGHT - 32;\n          break;\n      }\n\n      //Game.ctx.globalCompositeOperation = \"destination-out\";\n      Game.fillTextOutline(string, posX, posY, \"black\", \"yellow\");\n    }\n    Game.ctx.restore();\n  }\n}\n","import { LevelConstants } from \"../level/levelConstants\";\r\nimport { Game } from \"../game\";\r\nimport { guiButton } from \"./guiButton\";\r\n\r\nexport class LinkButton extends guiButton {\r\n  constructor({\r\n    text,\r\n    linkUrl,\r\n    x,\r\n    y,\r\n  }: {\r\n    text: string;\r\n    linkUrl: string;\r\n    x: number;\r\n    y: number;\r\n  }) {\r\n    const width = Game.measureText(text).width + 10;\r\n    const height = 16;\r\n\r\n    super(\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      text,\r\n      () => window.open(linkUrl, \"_blank\", \"noopener,noreferrer\"),\r\n      false,\r\n    );\r\n  }\r\n\r\n  draw() {\r\n    Game.ctx.save();\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    // Draw button background\r\n    Game.ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n    Game.ctx.fillRect(\r\n      Math.round(this.x),\r\n      Math.round(this.y),\r\n      Math.round(this.width),\r\n      Math.round(this.height),\r\n    );\r\n\r\n    // Draw button border\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.ctx.lineWidth = 1;\r\n    Game.ctx.strokeRect(\r\n      Math.round(this.x),\r\n      Math.round(this.y),\r\n      Math.round(this.width),\r\n      Math.round(this.height),\r\n    );\r\n\r\n    // Draw button text\r\n    Game.ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\r\n    const textWidth = Game.measureText(this.text).width;\r\n    const textX = this.x + (this.width - textWidth) / 2;\r\n    const textY = this.y + this.height / 2 - Game.letter_height / 2;\r\n\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(this.text, Math.round(textX), Math.round(textY));\r\n    Game.ctx.restore();\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { Entity, EntityType } from \"../entity/entity\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { Player } from \"../player/player\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\n\r\nexport class Map {\r\n  game: Game;\r\n  mapData: any[] = [];\r\n  oldMapData: any[] = [];\r\n  depth: number;\r\n  scale: number;\r\n\r\n  offsetX: number = 0;\r\n  offsetY: number = 0;\r\n  softOffsetX: number = 0;\r\n  softOffsetY: number = 0;\r\n  player: Player;\r\n\r\n  // Fog of war properties - now stored per mapGroup\r\n  seenTilesByMapGroup: globalThis.Map<string, Set<string>> =\r\n    new globalThis.Map();\r\n  visibilityRadius: number = 4;\r\n\r\n  constructor(game: Game, player: Player) {\r\n    this.game = game;\r\n    this.scale = 1;\r\n    this.player = player;\r\n    //this.depth = player.game.level.depth\r\n  }\r\n\r\n  // Add helper method to collect down ladders from room array\r\n  getDownLaddersFromRoom = (room: Room): any[] => {\r\n    const downLadders: any[] = [];\r\n\r\n    // Safely iterate through the room array to find down ladders\r\n    if (room.roomArray) {\r\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n          // Check bounds to avoid undefined access\r\n          if (room.roomArray[x] && room.roomArray[x][y]) {\r\n            const tile = room.roomArray[x][y];\r\n            // Check if tile is a DownLadder instance\r\n            if (\r\n              tile &&\r\n              tile.constructor &&\r\n              tile.constructor.name === \"DownLadder\"\r\n            ) {\r\n              downLadders.push(tile);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return downLadders;\r\n  };\r\n\r\n  saveMapData = () => {\r\n    this.clearMap();\r\n    const currentMapGroup = this.game.room.mapGroup.toString();\r\n\r\n    for (const room of this.game.levels[this.player.depth].rooms) {\r\n      if (\r\n        currentMapGroup === room.mapGroup.toString() &&\r\n        (room.entered === true || GameConstants.DEVELOPER_MODE)\r\n      ) {\r\n        this.mapData.push({\r\n          room: room,\r\n          walls: room.innerWalls,\r\n          doors: room.doors,\r\n          entities: room.entities,\r\n          items: room.items,\r\n          players: this.game.players,\r\n          downLadders: this.getDownLaddersFromRoom(room), // Add down ladders to map data\r\n          seenTiles:\r\n            this.seenTilesByMapGroup.get(currentMapGroup) || new Set<string>(), // Add seen tiles to map data\r\n        });\r\n      }\r\n    }\r\n\r\n    const enteredRooms = this.mapData\r\n      .map((data) => data.room)\r\n      .filter((room) => room.entered);\r\n\r\n    if (enteredRooms.length > 0) {\r\n      const sortedByX = [...enteredRooms].sort((a, b) => a.roomX - b.roomX);\r\n      const sortedByY = [...enteredRooms].sort((a, b) => a.roomY - b.roomY);\r\n\r\n      const maxX = sortedByX[sortedByX.length - 1].roomX;\r\n      const minY = sortedByY[0].roomY;\r\n\r\n      this.offsetX = maxX;\r\n      this.offsetY = minY;\r\n    } else {\r\n      this.offsetX = 0;\r\n      this.offsetY = 0;\r\n    }\r\n  };\r\n\r\n  clearMap = () => {\r\n    this.mapData = [];\r\n  };\r\n\r\n  saveOldMap = () => {\r\n    this.oldMapData = [...this.mapData];\r\n  };\r\n\r\n  renderMap = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    this.setInitialCanvasSettings(1);\r\n    this.translateCanvas(0);\r\n    for (const data of this.mapData) {\r\n      this.drawRoom(data, delta);\r\n    }\r\n    /*for (const data of this.oldMapData) {\r\n      this.drawRoom(data);\r\n    }*/\r\n    this.resetCanvasTransform();\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n  updateOffsetXY = () => {\r\n    let diffX = this.offsetX - this.softOffsetX;\r\n    let diffY = this.offsetY - this.softOffsetY;\r\n\r\n    if (Math.abs(diffX) > 0.01) {\r\n      this.softOffsetX += diffX * 0.1;\r\n      this.softOffsetX = this.softOffsetX;\r\n    } else this.softOffsetX = this.offsetX;\r\n    if (Math.abs(diffY) > 0.01) {\r\n      this.softOffsetY += diffY * 0.1;\r\n      this.softOffsetY = this.softOffsetY;\r\n    } else this.softOffsetY = this.offsetY;\r\n  };\r\n\r\n  // Fog of war methods\r\n  updateSeenTiles = () => {\r\n    const playerX = Math.floor(this.player.x);\r\n    const playerY = Math.floor(this.player.y);\r\n    const currentMapGroup = this.game.room.mapGroup.toString();\r\n\r\n    // Get or create seen tiles set for current map group\r\n    if (!this.seenTilesByMapGroup.has(currentMapGroup)) {\r\n      this.seenTilesByMapGroup.set(currentMapGroup, new Set<string>());\r\n    }\r\n    const seenTiles = this.seenTilesByMapGroup.get(currentMapGroup)!;\r\n\r\n    // Add tiles within circular radius around player to seen tiles\r\n    for (let dx = -this.visibilityRadius; dx <= this.visibilityRadius; dx++) {\r\n      for (let dy = -this.visibilityRadius; dy <= this.visibilityRadius; dy++) {\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        if (distance <= this.visibilityRadius) {\r\n          const tileKey = `${playerX + dx},${playerY + dy}`;\r\n          seenTiles.add(tileKey);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  isTileSeen = (x: number, y: number): boolean => {\r\n    const currentMapGroup = this.game.room.mapGroup.toString();\r\n    const seenTiles = this.seenTilesByMapGroup.get(currentMapGroup);\r\n    if (!seenTiles) return false;\r\n\r\n    const tileKey = `${Math.floor(x)},${Math.floor(y)}`;\r\n    return seenTiles.has(tileKey);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.updateSeenTiles(); // Update fog of war\r\n    this.updateOffsetXY();\r\n    this.renderMap(delta);\r\n  };\r\n\r\n  setInitialCanvasSettings = (alpha: number) => {\r\n    Game.ctx.globalAlpha = alpha;\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n  };\r\n\r\n  translateCanvas = (offset: number) => {\r\n    Game.ctx.translate(\r\n      Math.floor(0.95 * GameConstants.WIDTH) -\r\n        //this.game.room.roomX -\r\n        //Math.floor(0.5 * this.game.room.width) +\r\n        15 * this.scale -\r\n        Math.floor(this.softOffsetX),\r\n      Math.floor(0.05 * GameConstants.HEIGHT) -\r\n        //this.game.room.roomY -\r\n        //Math.floor(0.5 * this.game.room.height) -\r\n        1 * this.scale -\r\n        offset -\r\n        Math.floor(this.softOffsetY),\r\n    );\r\n  };\r\n\r\n  drawRoom = (data, delta: number) => {\r\n    //this.drawUnderRoomPlayers(data.players, delta);\r\n\r\n    this.drawRoomOutline(data.room);\r\n\r\n    this.drawRoomWalls(data.walls);\r\n    this.drawRoomDoors(data.doors);\r\n    this.drawRoomEntities(data.entities);\r\n    this.drawRoomItems(data.items);\r\n    this.drawRoomPlayers(data.players, delta);\r\n    this.drawRoomDownLadders(data.downLadders);\r\n\r\n    // Render fog of war on top of everything\r\n    this.drawFogOfWar(data.room);\r\n  };\r\n\r\n  // Add fog of war overlay method\r\n  drawFogOfWar = (room) => {\r\n    const s = this.scale;\r\n    Game.ctx.save();\r\n    Game.ctx.fillStyle = \"#1a1a1a\";\r\n\r\n    // Use the seen tiles from the current mapData if available\r\n    const currentMapGroup = this.game.room.mapGroup.toString();\r\n    let seenTiles = this.seenTilesByMapGroup.get(currentMapGroup);\r\n\r\n    // If we have mapData, use the seen tiles from there (for consistency)\r\n    if (this.mapData.length > 0 && this.mapData[0].seenTiles) {\r\n      seenTiles = this.mapData[0].seenTiles;\r\n    }\r\n\r\n    // Draw fog over all tiles in the room that haven't been seen\r\n    for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n      for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n        const tileKey = `${Math.floor(x)},${Math.floor(y)}`;\r\n        if (!seenTiles || !seenTiles.has(tileKey)) {\r\n          Game.ctx.fillRect(x * s, y * s, 1 * s, 1 * s);\r\n        }\r\n      }\r\n    }\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawRoomOutline = (level) => {\r\n    const s = this.scale;\r\n    Game.ctx.fillStyle = \"#5A5A5A\";\r\n    Game.ctx.fillRect(\r\n      level.roomX * s + 0,\r\n      level.roomY * s + 0,\r\n      level.width * s - 0,\r\n      level.height * s - 0,\r\n    );\r\n    if (level.type === RoomType.UPLADDER) Game.ctx.fillStyle = \"#101460\";\r\n    if (level.type === RoomType.DOWNLADDER) Game.ctx.fillStyle = \"#601410\";\r\n    Game.ctx.fillStyle = \"black\";\r\n    Game.ctx.fillRect(\r\n      level.roomX * s + 1,\r\n      level.roomY * s + 1,\r\n      level.width * s - 2,\r\n      level.height * s - 2,\r\n    );\r\n  };\r\n\r\n  drawRoomWalls = (walls) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const wall of walls) {\r\n      Game.ctx.fillStyle = \"#404040\";\r\n      Game.ctx.fillRect(wall.x * s, wall.y * s, 1 * s, 1 * s);\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomDoors = (doors) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const door of doors) {\r\n      if (door.opened === false) Game.ctx.fillStyle = \"#5A5A5A\";\r\n      if (door.opened === true) {\r\n        Game.ctx.fillStyle = \"black\";\r\n        Game.ctx.fillRect(door.x * s, door.y * s, 1 * s, 1 * s);\r\n      }\r\n      Game.ctx.fillStyle = \"#5A5A5A\"; // Reset to default after each door\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomPlayers = (players, delta: number) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const i in players) {\r\n      Game.ctx.fillStyle = \"white\";\r\n      if (\r\n        this.game.levels[players[i].depth].rooms[players[i].levelID]\r\n          .mapGroup === this.game.room.mapGroup\r\n      ) {\r\n        Game.ctx.fillRect(players[i].x * s, players[i].y * s, 1 * s, 1 * s);\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawUnderRoomPlayers = (players, delta: number) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const i in players) {\r\n      this.game.rooms[players[i].levelID].mapGroup === this.game.room.mapGroup;\r\n      {\r\n        if (Math.floor(Date.now() / 300) % 2) {\r\n          Game.ctx.fillStyle = \"#4D8C8C\";\r\n          // Draw 3x3 outline box around player\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top left\r\n          Game.ctx.fillRect(\r\n            players[i].x * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top middle\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            (players[i].y - 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Top right\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            players[i].y * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Middle left\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            players[i].y * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Middle right\r\n          Game.ctx.fillRect(\r\n            (players[i].x - 1) * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom left\r\n          Game.ctx.fillRect(\r\n            players[i].x * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom middle\r\n          Game.ctx.fillRect(\r\n            (players[i].x + 1) * s,\r\n            (players[i].y + 1) * s,\r\n            1 * s,\r\n            1 * s,\r\n          ); // Bottom right\r\n        }\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomEntities = (entities) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const enemy of entities) {\r\n      this.setEntityColor(enemy);\r\n      Game.ctx.fillRect(enemy.x * s, enemy.y * s, 1 * s, 1 * s);\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawRoomDownLadders = (downLadders) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const downLadder of downLadders) {\r\n      Game.ctx.fillStyle = \"#00FFFF\";\r\n      Game.ctx.fillRect(downLadder.x * s, downLadder.y * s, 1 * s, 1 * s);\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  setEntityColor = (enemy) => {\r\n    // No need to save/restore here as only fillStyle is being set\r\n    if (enemy.type === EntityType.ENEMY) {\r\n      Game.ctx.fillStyle = \"yellow\";\r\n    }\r\n    if (enemy.type === EntityType.PROP) {\r\n      Game.ctx.fillStyle = \"#847e87\";\r\n    }\r\n    if (enemy.type === EntityType.RESOURCE) {\r\n      Game.ctx.fillStyle = \"#5a595b\";\r\n    }\r\n    if (enemy.type === EntityType.FRIENDLY) {\r\n      Game.ctx.fillStyle = \"cyan\";\r\n    }\r\n  };\r\n\r\n  drawRoomItems = (items) => {\r\n    const s = this.scale;\r\n    Game.ctx.save(); // Save the current canvas state\r\n    for (const item of items) {\r\n      let x = item.x;\r\n      let y = item.y;\r\n      Game.ctx.fillStyle = \"#ac3232\";\r\n      if (!item.pickedUp) {\r\n        Game.ctx.fillRect(item.x * s, item.y * s, 1 * s, 1 * s);\r\n      }\r\n    }\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  resetCanvasTransform = () => {\r\n    Game.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { guiButton } from \"./guiButton\";\r\nimport { InputEnum } from \"../game/input\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { Player } from \"../player/player\";\r\n\r\nexport class Menu {\r\n  buttons: guiButton[];\r\n  closeButton: guiButton | null;\r\n  open: boolean;\r\n  selectedButton: number;\r\n  game: Game;\r\n  player?: Player;\r\n  private showCloseButton: boolean = true;\r\n  selectionTimeoutId: ReturnType<typeof setTimeout> | null = null;\r\n  // Add debouncing properties\r\n  private lastButtonClickTime: number = 0;\r\n  private lastButtonClickIndex: number = -1;\r\n  private readonly BUTTON_CLICK_DEBOUNCE_TIME = 150; // milliseconds\r\n\r\n  constructor(\r\n    arg:\r\n      | Player\r\n      | {\r\n          game: Game;\r\n          player?: Player;\r\n          showCloseButton?: boolean;\r\n        },\r\n  ) {\r\n    this.buttons = [];\r\n    this.open = false;\r\n    this.selectedButton = 0;\r\n    if (arg instanceof Player) {\r\n      this.game = arg.game;\r\n      this.player = arg;\r\n      this.showCloseButton = true;\r\n      this.initializeCloseButton();\r\n      this.initializeMainMenu();\r\n    } else {\r\n      this.game = arg.game;\r\n      this.player = arg.player;\r\n      this.showCloseButton = arg.showCloseButton !== false;\r\n      if (this.showCloseButton) this.initializeCloseButton();\r\n      // Do not auto-build buttons; caller decides what to add\r\n    }\r\n  }\r\n\r\n  static drawOpenMenuButton() {\r\n    Game.ctx.save();\r\n    Game.ctx.fillStyle = \"rgba(255, 255, 0, 1)\";\r\n    Game.ctx.globalAlpha = 0.1;\r\n\r\n    // Position in top right corner, 2 tiles away from right edge\r\n    const buttonWidth = Math.round(GameConstants.TILESIZE * 1.5 - 2);\r\n    const buttonHeight = Math.round(GameConstants.TILESIZE / 2 - 1);\r\n    const rightMargin = 2 * GameConstants.TILESIZE; // 2 tiles from right edge\r\n    const buttonX = GameConstants.WIDTH / 2;\r\n    const buttonY = GameConstants.TILESIZE / 2;\r\n\r\n    Game.drawFX(18, 0, 1, 1, 0, 0.5, 1, 1);\r\n\r\n    //Game.ctx.fillRect(buttonX, buttonY, buttonWidth, buttonHeight);\r\n\r\n    //Game.ctx.fillStyle = \"rgb(0, 0, 0)\"; //yellow text\r\n    Game.fillText(\"Menu\", 10, 10);\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    Game.ctx.restore();\r\n  }\r\n\r\n  initializeCloseButton() {\r\n    // Match the menu button dimensions\r\n    const buttonWidth = Math.round(GameConstants.TILESIZE * 1.5 - 2);\r\n    const buttonHeight = Math.round(GameConstants.TILESIZE * 1.5 - 2);\r\n\r\n    this.closeButton = new guiButton(\r\n      0,\r\n      -1,\r\n      Math.round(buttonWidth),\r\n      Math.round(buttonHeight),\r\n      \"X\",\r\n      () => this.close(),\r\n      false,\r\n      this,\r\n    );\r\n  }\r\n\r\n  initializeMainMenu() {\r\n    // Don't set fixed dimensions - let positionButtons() calculate optimal sizes\r\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Start Game\", this.startGame));\r\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Settings\", this.openSettings));\r\n    this.addButton(\r\n      new guiButton(0, 0, 0, 0, \"- Scale\", this.scaleDown, false, this),\r\n    );\r\n    this.addButton(\r\n      new guiButton(0, 0, 0, 0, \"+ Scale\", this.scaleUp, false, this),\r\n    );\r\n    const muteButton = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Mute Sound\",\r\n      () => {},\r\n      false,\r\n      this,\r\n    );\r\n    muteButton.onClick = muteButton.toggleMuteText;\r\n    this.addButton(muteButton);\r\n    const smoothButton = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Smooth Lighting\",\r\n      () => {\r\n        // Mirror the \"/smooth\" command behavior\r\n        GameConstants.SMOOTH_LIGHTING = !GameConstants.SMOOTH_LIGHTING;\r\n        const enabled = GameConstants.SMOOTH_LIGHTING ? \"enabled\" : \"disabled\";\r\n        this.game.pushMessage(`Smooth lighting is now ${enabled}`);\r\n        try {\r\n          const { saveSettings } = require(\"../game/settingsPersistence\");\r\n          saveSettings(this.game);\r\n        } catch {}\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    this.addButton(smoothButton);\r\n\r\n    const hoverTextButton = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Hover Text\",\r\n      () => {\r\n        GameConstants.HOVER_TEXT_ENABLED = !GameConstants.HOVER_TEXT_ENABLED;\r\n        const enabled = GameConstants.HOVER_TEXT_ENABLED\r\n          ? \"enabled\"\r\n          : \"disabled\";\r\n        this.game.pushMessage(`Hover text is now ${enabled}`);\r\n        try {\r\n          const { saveSettings } = require(\"../game/settingsPersistence\");\r\n          saveSettings(this.game);\r\n        } catch {}\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    this.addButton(hoverTextButton);\r\n\r\n    const saveBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Save Game\",\r\n      () => {\r\n        try {\r\n          const { saveToCookies } = require(\"../game/savePersistence\");\r\n          saveToCookies(this.game);\r\n        } catch (e) {\r\n          this.game.pushMessage(\"Save failed.\");\r\n        }\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    //this.addButton(saveBtn);\r\n\r\n    const loadBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Load Game\",\r\n      () => {\r\n        try {\r\n          const { loadFromCookies } = require(\"../game/savePersistence\");\r\n          loadFromCookies(this.game);\r\n        } catch (e) {\r\n          this.game.pushMessage(\"Load failed.\");\r\n        }\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    //this.addButton(loadBtn);\r\n\r\n    const newGameBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"New Game\",\r\n      () => {\r\n        try {\r\n          this.game.newGame();\r\n        } catch (e) {\r\n          this.game.pushMessage(\"New Game failed.\");\r\n        }\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    this.addButton(newGameBtn);\r\n\r\n    const clearBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Clear Save\",\r\n      () => {\r\n        try {\r\n          const { clearCookieSave } = require(\"../game/savePersistence\");\r\n          clearCookieSave();\r\n          this.game.pushMessage(\"Cleared cookie/localStorage save.\");\r\n        } catch (e) {\r\n          this.game.pushMessage(\"Clear Save failed.\");\r\n        }\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    //this.addButton(clearBtn);\r\n    //this.addButton(new guiButton(0, 0, 0, 0, \"Exit\", this.exitGame));\r\n    this.positionButtons();\r\n  }\r\n\r\n  buildStartMenu() {\r\n    this.buttons = [];\r\n    const header = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Welcome to Turnarchist\",\r\n      () => {},\r\n      false,\r\n      this,\r\n    );\r\n    header.noFill = true;\r\n    header.textColor = \"rgb(255, 255, 0)\"; // yellow text\r\n    this.addButton(header);\r\n    const continueBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"Continue\",\r\n      () => {\r\n        try {\r\n          const { loadFromCookies } = require(\"../game/savePersistence\");\r\n          loadFromCookies(this.game).then((ok: boolean) => {\r\n            if (ok) {\r\n              this.game.pushMessage(\"Loaded save.\");\r\n              this.close();\r\n              (this.game as any).startedFadeOut = true;\r\n              (this.game as any).startMenuActive = false;\r\n            } else {\r\n              this.game.pushMessage(\"Load failed.\");\r\n            }\r\n          });\r\n        } catch (e) {\r\n          this.game.pushMessage(\"Load failed.\");\r\n        }\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    const newBtn = new guiButton(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      \"New Game\",\r\n      () => {\r\n        this.close();\r\n        (this.game as any).startedFadeOut = true;\r\n        (this.game as any).startMenuActive = false;\r\n      },\r\n      false,\r\n      this,\r\n    );\r\n    this.addButton(continueBtn);\r\n    this.addButton(newBtn);\r\n    this.positionButtons();\r\n  }\r\n\r\n  addButton(button: guiButton) {\r\n    this.buttons.push(button);\r\n  }\r\n\r\n  draw() {\r\n    if (this.open) {\r\n      Game.ctx.save();\r\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0)\";\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      // Draw main menu buttons\r\n      this.buttons.forEach((button) => {\r\n        this.drawButton(button);\r\n      });\r\n\r\n      // Draw close button\r\n      if (this.showCloseButton && this.closeButton) this.drawCloseButton();\r\n\r\n      Game.ctx.restore();\r\n    }\r\n  }\r\n\r\n  drawButton(button: guiButton) {\r\n    Game.ctx.save();\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    // Clear any stroke settings to prevent unwanted outlines\r\n    Game.ctx.strokeStyle = \"transparent\";\r\n    Game.ctx.lineWidth = 0;\r\n\r\n    // Optional no-fill for header-like buttons\r\n    if (!button.noFill) {\r\n      Game.ctx.fillStyle =\r\n        this.selectedButton === this.buttons.indexOf(button)\r\n          ? \"rgba(75, 75, 75, 0.5)\"\r\n          : \"rgba(100, 100, 100, 0.5)\";\r\n\r\n      // Round coordinates to prevent anti-aliasing outlines\r\n      Game.ctx.fillRect(\r\n        Math.round(button.x),\r\n        Math.round(button.y),\r\n        Math.round(button.width),\r\n        Math.round(button.height),\r\n      );\r\n    }\r\n\r\n    // Default text color: yellow (overridden by per-button textColor if provided)\r\n    Game.ctx.fillStyle = \"rgba(255, 255, 0, 1)\";\r\n    if (button.textColor) Game.ctx.fillStyle = button.textColor;\r\n\r\n    const textWidth = Game.measureText(button.text).width;\r\n    const textX = button.x + (button.width - textWidth) / 2;\r\n\r\n    // Center text vertically in the button, accounting for varying button heights\r\n    const textY = button.y + button.height / 2 - Game.letter_height / 2;\r\n\r\n    Game.fillText(button.text, Math.round(textX), Math.round(textY));\r\n    Game.ctx.restore();\r\n  }\r\n\r\n  drawCloseButton() {\r\n    Game.ctx.save();\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    // Close button styling - make it red-ish for better visibility\r\n    Game.ctx.fillStyle = \"rgba(220, 60, 60, 1)\"; // Red background\r\n    Game.ctx.fillRect(\r\n      Math.round(this.closeButton.x),\r\n      Math.round(this.closeButton.y),\r\n      Math.round(this.closeButton.width),\r\n      Math.round(this.closeButton.height),\r\n    );\r\n\r\n    // Border for the close button\r\n    Game.ctx.strokeStyle = \"rgba(0, 0, 0, 1)\";\r\n    Game.ctx.lineWidth = 1;\r\n    if (this.closeButton)\r\n      Game.ctx.strokeRect(\r\n        this.closeButton.x,\r\n        this.closeButton.y,\r\n        this.closeButton.width,\r\n        this.closeButton.height,\r\n      );\r\n\r\n    // Draw X text\r\n    Game.ctx.fillStyle = \"rgba(255, 255, 255, 1)\"; // White X\r\n    const textWidth = Game.measureText(this.closeButton.text).width;\r\n    const textX = this.closeButton.x + (this.closeButton.width - textWidth) / 2;\r\n    const textY =\r\n      this.closeButton.y + this.closeButton.height / 2 - Game.letter_height / 2;\r\n\r\n    Game.fillText(this.closeButton.text, textX, textY);\r\n    Game.ctx.restore();\r\n  }\r\n\r\n  inputHandler(input: InputEnum) {\r\n    if (!this.open) return;\r\n\r\n    switch (input) {\r\n      case InputEnum.ESCAPE:\r\n        this.open = false;\r\n        break;\r\n      case InputEnum.UP:\r\n        this.up();\r\n        break;\r\n      case InputEnum.DOWN:\r\n        this.down();\r\n        break;\r\n      case InputEnum.SPACE:\r\n        this.select();\r\n        break;\r\n      case InputEnum.LEFT_CLICK:\r\n        // Handle mouse clicks by getting current mouse position and calling mouseInputHandler\r\n        const { x, y } = MouseCursor.getInstance().getPosition();\r\n\r\n        this.mouseInputHandler(x, y);\r\n        break;\r\n      case InputEnum.RIGHT_CLICK:\r\n        // Handle right clicks if needed (for now just log)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  mouseInputHandler(x: number, y: number) {\r\n    if (!this.open) {\r\n      return;\r\n    }\r\n\r\n    // Check close button first\r\n    if (this.showCloseButton && this.isPointInCloseButton(x, y)) {\r\n      // Add debouncing for close button too\r\n      const currentTime = Date.now();\r\n      if (\r\n        currentTime - this.lastButtonClickTime <\r\n        this.BUTTON_CLICK_DEBOUNCE_TIME\r\n      ) {\r\n        return;\r\n      }\r\n      this.lastButtonClickTime = currentTime;\r\n      this.closeButton.onClick();\r\n      return;\r\n    }\r\n\r\n    // Check main menu buttons\r\n    const bounds = this.isPointInMenuBounds(x, y);\r\n\r\n    if (bounds.inBounds && bounds.buttonIndex >= 0) {\r\n      const button = this.buttons[bounds.buttonIndex];\r\n      const currentTime = Date.now();\r\n\r\n      // Debounce check: prevent multiple rapid clicks on the same button\r\n      if (\r\n        bounds.buttonIndex === this.lastButtonClickIndex &&\r\n        currentTime - this.lastButtonClickTime < this.BUTTON_CLICK_DEBOUNCE_TIME\r\n      ) {\r\n        return; // Ignore this click as it's too soon after the last one\r\n      }\r\n\r\n      // Update debounce tracking\r\n      this.lastButtonClickTime = currentTime;\r\n      this.lastButtonClickIndex = bounds.buttonIndex;\r\n\r\n      // Clear any existing timeout\r\n      if (this.selectionTimeoutId !== null) {\r\n        clearTimeout(this.selectionTimeoutId);\r\n      }\r\n\r\n      // Set the selected button for visual feedback\r\n      this.selectedButton = bounds.buttonIndex;\r\n\r\n      // Set timeout to reset selection after 100ms\r\n      this.selectionTimeoutId = setTimeout(() => {\r\n        this.selectedButton = -1; // Reset to invalid index so no button appears selected\r\n        this.selectionTimeoutId = null;\r\n      }, 100);\r\n\r\n      button.onClick();\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.open = false;\r\n  }\r\n\r\n  openMenu() {\r\n    this.open = true;\r\n    this.selectedButton = -1;\r\n    this.buttons.forEach((button, index) => {});\r\n  }\r\n\r\n  toggleOpen() {\r\n    if (this.open) {\r\n      this.close();\r\n    } else {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  select() {\r\n    if (this.buttons[this.selectedButton]) {\r\n      this.buttons[this.selectedButton].onClick();\r\n    }\r\n  }\r\n\r\n  up() {\r\n    if (this.buttons.length > 0) {\r\n      this.selectedButton =\r\n        (this.selectedButton - 1 + this.buttons.length) % this.buttons.length;\r\n    }\r\n  }\r\n\r\n  down() {\r\n    if (this.buttons.length > 0) {\r\n      this.selectedButton = (this.selectedButton + 1) % this.buttons.length;\r\n    }\r\n  }\r\n\r\n  // Action methods\r\n  startGame = () => {\r\n    this.close();\r\n    // Implement game start logic\r\n  };\r\n\r\n  exitGame = () => {\r\n    // Implement exit game logic\r\n  };\r\n\r\n  openSettings = () => {\r\n    // Implement settings logic later\r\n  };\r\n\r\n  scaleUp = () => {\r\n    this.game.increaseScale();\r\n    // Add scale up functionality here\r\n  };\r\n\r\n  scaleDown = () => {\r\n    this.game.decreaseScale();\r\n    // Add scale down functionality here\r\n  };\r\n\r\n  positionButtons() {\r\n    const screenWidth = GameConstants.WIDTH;\r\n    const screenHeight = GameConstants.HEIGHT;\r\n    const buttonCount = this.buttons.length;\r\n\r\n    // Position close button to match menu button position\r\n    if (this.showCloseButton && this.closeButton) {\r\n      this.closeButton.x = 1;\r\n      this.closeButton.y = GameConstants.TILESIZE / 2;\r\n    }\r\n\r\n    // Layout parameters: tighter margins and smaller spacing\r\n    const maxButtonWidth = Math.min(260, Math.floor(screenWidth * 0.8));\r\n    const verticalMargin = 8; // smaller top/bottom margin\r\n    const spacing = 6; // smaller space between buttons\r\n    const horizontalGap = 8; // gap between side-by-side buttons\r\n    const paddingX = 16; // left+right padding for text\r\n\r\n    // Rows count (scale +/- share one row)\r\n    const scaleButtonIndices = this.getScaleButtonIndices();\r\n    const rows = buttonCount - (scaleButtonIndices.length > 0 ? 1 : 0);\r\n    const totalSpacing = spacing * Math.max(0, rows - 1);\r\n    const availableHeight = Math.max(\r\n      0,\r\n      screenHeight - verticalMargin * 2 - totalSpacing,\r\n    );\r\n    const maxButtonHeight = 22; // shorter max height\r\n    const computedHeight =\r\n      rows > 0 ? Math.floor(availableHeight / rows) : maxButtonHeight;\r\n    const buttonHeight = Math.min(\r\n      maxButtonHeight,\r\n      Math.max(12, computedHeight), // shorter minimum height\r\n    );\r\n\r\n    // Update button dimensions and positions\r\n    if (rows <= 0) return;\r\n    const totalButtonsHeight = rows * buttonHeight + totalSpacing;\r\n    const availableRectTop = verticalMargin;\r\n    const availableRectHeight = screenHeight - verticalMargin * 2;\r\n    let currentY =\r\n      availableRectTop +\r\n      Math.floor((availableRectHeight - totalButtonsHeight) / 2);\r\n    for (let i = 0; i < this.buttons.length; i++) {\r\n      const button = this.buttons[i];\r\n\r\n      if (button.text === \"- Scale\" || button.text === \"+ Scale\") {\r\n        // Handle the scale pair together\r\n        const minusBtn =\r\n          this.buttons[i].text === \"- Scale\" ? this.buttons[i] : null;\r\n        const plusIdx = this.buttons[i].text === \"- Scale\" ? i + 1 : i - 1;\r\n        const plusBtn = this.buttons[plusIdx];\r\n\r\n        // Measure widths based on text\r\n        const minusTextW = Game.measureText(\"- Scale\").width;\r\n        const plusTextW = Game.measureText(\"+ Scale\").width;\r\n        const minusW = Math.min(maxButtonWidth, minusTextW + paddingX);\r\n        const plusW = Math.min(maxButtonWidth, plusTextW + paddingX);\r\n        const pairWidth = minusW + horizontalGap + plusW;\r\n        const startX = Math.floor((screenWidth - pairWidth) / 2);\r\n        const y = currentY;\r\n\r\n        // Place minus\r\n        const minus =\r\n          this.buttons[i].text === \"- Scale\"\r\n            ? this.buttons[i]\r\n            : this.buttons[plusIdx];\r\n        minus.x = startX;\r\n        minus.y = y;\r\n        minus.width = minusW;\r\n        minus.height = buttonHeight;\r\n\r\n        // Place plus\r\n        const plus = plusBtn;\r\n        plus.x = startX + minusW + horizontalGap;\r\n        plus.y = y;\r\n        plus.width = plusW;\r\n        plus.height = buttonHeight;\r\n\r\n        // Skip next index if we placed both in this iteration\r\n        if (this.buttons[i].text === \"- Scale\") {\r\n          i = Math.max(i, plusIdx);\r\n        }\r\n        currentY += buttonHeight + spacing;\r\n      } else {\r\n        const textW = Game.measureText(button.text).width;\r\n        const width = Math.min(maxButtonWidth, textW + paddingX);\r\n        button.width = width;\r\n        button.x = Math.floor((screenWidth - width) / 2);\r\n        button.y = currentY;\r\n        button.height = buttonHeight;\r\n        currentY += buttonHeight + spacing;\r\n      }\r\n    }\r\n  }\r\n\r\n  getScaleButtonIndices(): number[] {\r\n    const indices: number[] = [];\r\n    this.buttons.forEach((button, index) => {\r\n      if (button.text === \"- Scale\" || button.text === \"+ Scale\") {\r\n        indices.push(index);\r\n      }\r\n    });\r\n    return indices;\r\n  }\r\n\r\n  isPointInMenuBounds(\r\n    x: number,\r\n    y: number,\r\n  ): { inBounds: boolean; buttonIndex: number } {\r\n    if (!this.open) {\r\n      return { inBounds: false, buttonIndex: -1 };\r\n    }\r\n\r\n    for (let i = 0; i < this.buttons.length; i++) {\r\n      const button = this.buttons[i];\r\n      if (\r\n        x >= button.x &&\r\n        x <= button.x + button.width &&\r\n        y >= button.y &&\r\n        y <= button.y + button.height\r\n      ) {\r\n        return { inBounds: true, buttonIndex: i };\r\n      }\r\n    }\r\n\r\n    return { inBounds: false, buttonIndex: -1 };\r\n  }\r\n\r\n  isPointInCloseButton(x: number, y: number): boolean {\r\n    return (\r\n      !!this.closeButton &&\r\n      x >= this.closeButton.x &&\r\n      x <= this.closeButton.x + this.closeButton.width &&\r\n      y >= this.closeButton.y &&\r\n      y <= this.closeButton.y + this.closeButton.height\r\n    );\r\n  }\r\n}\r\n","import { game, Game } from \"../game\";\r\nimport { Input } from \"../game/input\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\n\r\nexport class MouseCursor {\r\n  private static instance: MouseCursor;\r\n  private cursorSize: number = 5; // Size of the cursor rectangle\r\n  private clickX: number = 0;\r\n  private clickY: number = 0;\r\n  private rawClickX: number = 0;\r\n  private rawClickY: number = 0;\r\n  private tileX: number = 6;\r\n  private lastMouseX: number = 0;\r\n  private lastMouseY: number = 0;\r\n  private posChangeTime: number = Date.now();\r\n  private cursorTimeout: number = 5000;\r\n\r\n  private constructor() {}\r\n  private frame: number = 0;\r\n\r\n  public static getInstance(): MouseCursor {\r\n    if (!MouseCursor.instance) {\r\n      MouseCursor.instance = new MouseCursor();\r\n    }\r\n    return MouseCursor.instance;\r\n  }\r\n\r\n  public drawCursor(): void {\r\n    Game.ctx.save();\r\n    const timeSinceChange = Date.now() - this.posChangeTime;\r\n    const fadeStartTime = this.cursorTimeout - 200; // Start fade 200ms before timeout\r\n\r\n    let alpha: number = 1;\r\n    if (timeSinceChange > fadeStartTime) {\r\n      // Only fade in the last 200ms\r\n      const fadeProgress = (timeSinceChange - fadeStartTime) / 200;\r\n      alpha = 1 - fadeProgress;\r\n    }\r\n\r\n    Game.ctx.globalAlpha = alpha;\r\n\r\n    //Game.ctx.fillRect(Input.mouseX, Input.mouseY, 1, 1);\r\n    Game.drawFX(\r\n      this.tileX,\r\n      0,\r\n      1,\r\n      1,\r\n      Input.mouseX / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\r\n      Input.mouseY / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\r\n      1,\r\n      1,\r\n    );\r\n    Game.ctx.restore();\r\n  }\r\n\r\n  public drawAnimation(delta: number): void {\r\n    if (this.frame > 5) {\r\n      //14 is max frame for animation\r\n      return;\r\n    }\r\n    Game.drawFX(\r\n      9 + Math.ceil(this.frame),\r\n      1,\r\n      1,\r\n      1,\r\n      this.clickX / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\r\n      this.clickY / GameConstants.TILESIZE - 8 / GameConstants.TILESIZE,\r\n      1,\r\n      1,\r\n    );\r\n    this.frame = this.frame + delta / 5;\r\n  }\r\n\r\n  public startClickAnim(): void {\r\n    this.frame = 0;\r\n    this.clickX = Input.mouseX;\r\n    this.clickY = Input.mouseY;\r\n    this.rawClickX = Input.rawMouseX;\r\n    this.rawClickY = Input.rawMouseY;\r\n  }\r\n\r\n  public recalculateClickPosition(): void {\r\n    if (this.rawClickX !== undefined && this.rawClickY !== undefined) {\r\n      const canvas = document.getElementById(\"gameCanvas\") as HTMLCanvasElement;\r\n      const rect = canvas.getBoundingClientRect();\r\n\r\n      this.clickX = Math.floor(this.rawClickX / Game.scale);\r\n      this.clickY = Math.floor(this.rawClickY / Game.scale);\r\n    }\r\n  }\r\n\r\n  public setIcon = (icon: string) => {\r\n    switch (icon) {\r\n      case \"arrow\":\r\n        this.tileX = 8;\r\n        break;\r\n      case \"sword\":\r\n        this.tileX = 7;\r\n        break;\r\n      case \"hand\":\r\n        this.tileX = 6;\r\n        break;\r\n      case \"wait\":\r\n        this.tileX = 9;\r\n        break;\r\n      case \"grab\":\r\n        this.tileX = 10;\r\n        break;\r\n      case \"up\":\r\n        this.tileX = 11;\r\n        break;\r\n      case \"right\":\r\n        this.tileX = 12;\r\n        break;\r\n      case \"down\":\r\n        this.tileX = 13;\r\n        break;\r\n      case \"left\":\r\n        this.tileX = 14;\r\n        break;\r\n      case \"mine\":\r\n        this.tileX = 15;\r\n        break;\r\n    }\r\n  };\r\n\r\n  public draw = (delta: number, mobile: boolean = false) => {\r\n    if (!mobile && Date.now() - this.posChangeTime < this.cursorTimeout)\r\n      this.drawCursor();\r\n    this.drawAnimation(delta);\r\n  };\r\n\r\n  public getPosition(): { x: number; y: number } {\r\n    if (Input.mouseX !== this.lastMouseX || Input.mouseY !== this.lastMouseY) {\r\n      this.posChangeTime = Date.now();\r\n    }\r\n\r\n    this.lastMouseX = Input.mouseX;\r\n    this.lastMouseY = Input.mouseY;\r\n    return { x: Input.mouseX, y: Input.mouseY };\r\n  }\r\n\r\n  public getTilePosition(): { x: number; y: number } {\r\n    return {\r\n      x: Math.floor(Input.mouseX / GameConstants.TILESIZE),\r\n      y: Math.floor(Input.mouseY / GameConstants.TILESIZE),\r\n    };\r\n  }\r\n\r\n  public getInventoryPosition(): { x: number; y: number } {\r\n    return {\r\n      x: Input.mouseX,\r\n      y: Input.mouseY,\r\n    };\r\n  }\r\n}\r\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Sound } from \"../sound/sound\";\n\nexport class MuteButton {\n  static draw() {\n    const tile = GameConstants.TILESIZE;\n    Game.ctx.save();\n    Game.ctx.globalAlpha = 0.1;\n    if (Sound.audioMuted) {\n      Game.drawFX(17, 0, 1, 1, 0, 0.5, 1, 1);\n    } else {\n      Game.drawFX(16, 0, 1, 1, 0, 0.5, 1, 1);\n    }\n    Game.ctx.restore();\n  }\n\n  static toggleMute() {\n    Sound.toggleMute();\n  }\n}\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\n\r\ninterface Settings {\r\n  enabled: boolean;\r\n  globalAlpha: number;\r\n  fillStyle: string;\r\n  globalCompositeOperation: GlobalCompositeOperation;\r\n}\r\n\r\nexport class PostProcessor {\r\n  static settings: Settings = {\r\n    enabled: true,\r\n    globalAlpha: 0.15,\r\n    fillStyle: \"#006A6E\",\r\n    globalCompositeOperation: \"screen\",\r\n  };\r\n\r\n  static underwater: boolean = false;\r\n\r\n  static draw = (delta: number) => {\r\n    if (!PostProcessor.settings.enabled) return;\r\n    if (PostProcessor.underwater) {\r\n      PostProcessor.settings.globalAlpha = 0.3;\r\n      PostProcessor.settings.fillStyle = \"#003B6F\"; //deep underwater blue\r\n      PostProcessor.settings.globalCompositeOperation = \"source-over\";\r\n    }\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = PostProcessor.settings.globalAlpha;\r\n    Game.ctx.globalCompositeOperation =\r\n      PostProcessor.settings.globalCompositeOperation;\r\n    // GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation; //\"soft-light\";\r\n\r\n    Game.ctx.fillStyle = PostProcessor.settings.fillStyle;\r\n    //Game.ctx.fillStyle = \"#003B6F\"; //deep underwater blue\r\n    //Game.ctx.fillStyle = \"#2F2F2F\"; //smoky fog prison\r\n\r\n    //Game.ctx.fillStyle = \"#4a6c4b\"; //darker muddy green\r\n    //Game.ctx.fillStyle = \"#800000\"; // lighter red for dungeon hell theme\r\n\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { GameConstants } from \"../game/gameConstants\";\r\n\r\nexport class WebGLBlurRenderer {\r\n  private static instance: WebGLBlurRenderer;\r\n  private gl: WebGLRenderingContext;\r\n  private canvas: HTMLCanvasElement;\r\n  private highQualityShaderProgram: WebGLProgram;\r\n  private performanceShaderProgram: WebGLProgram;\r\n  private currentShaderProgram: WebGLProgram;\r\n  private positionBuffer: WebGLBuffer;\r\n  private texCoordBuffer: WebGLBuffer;\r\n  private framebuffer: WebGLFramebuffer;\r\n  private texture: WebGLTexture;\r\n  private tempTexture: WebGLTexture;\r\n  private tempFramebuffer: WebGLFramebuffer;\r\n\r\n  // Add texture size tracking for texSubImage2D optimization\r\n  private textureWidth: number = 0;\r\n  private textureHeight: number = 0;\r\n  private tempTextureWidth: number = 0;\r\n  private tempTextureHeight: number = 0;\r\n\r\n  // Add downsampling canvas cache\r\n  private downsampleCanvas: HTMLCanvasElement;\r\n  private downsampleCtx: CanvasRenderingContext2D;\r\n\r\n  // Shader attribute/uniform locations (shared between both shaders)\r\n  private positionLocation: number;\r\n  private texCoordLocation: number;\r\n  private resolutionLocation: WebGLUniformLocation;\r\n  private textureLocation: WebGLUniformLocation;\r\n  private directionLocation: WebGLUniformLocation;\r\n  private radiusLocation: WebGLUniformLocation;\r\n\r\n  // Cache for result canvases to avoid recreation\r\n  private resultCanvasCache: Map<string, HTMLCanvasElement> = new Map();\r\n  private maxCacheSize: number = 10;\r\n\r\n  // Vertex shader source (shared)\r\n  private vertexShaderSource = `\r\n    precision mediump float;\r\n    attribute vec2 a_position;\r\n    attribute vec2 a_texCoord;\r\n    uniform vec2 u_resolution;\r\n    varying vec2 v_texCoord;\r\n    \r\n    void main() {\r\n      vec2 zeroToOne = a_position / u_resolution;\r\n      vec2 zeroToTwo = zeroToOne * 2.0;\r\n      vec2 clipSpace = zeroToTwo - 1.0;\r\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\r\n      v_texCoord = a_texCoord;\r\n    }\r\n  `;\r\n\r\n  // High quality fragment shader (49 samples)\r\n  private highQualityFragmentShaderSource = `\r\n    precision mediump float;\r\n    uniform sampler2D u_texture;\r\n    uniform vec2 u_resolution;\r\n    uniform vec2 u_direction;\r\n    uniform float u_radius;\r\n    varying vec2 v_texCoord;\r\n    \r\n    void main() {\r\n      vec2 texelSize = u_direction / u_resolution;\r\n      vec4 color = vec4(0.0);\r\n      float totalWeight = 0.0;\r\n      \r\n      // High quality blur with original 49 samples\r\n      float sigma = u_radius * 0.4;\r\n      float twoSigmaSquare = 2.0 * sigma * sigma;\r\n      \r\n      for (float i = -24.0; i <= 24.0; i++) {\r\n        if (abs(i) > u_radius) continue;\r\n        \r\n        vec2 offset = texelSize * i;\r\n        float weight = exp(-i * i / twoSigmaSquare);\r\n        \r\n        color += texture2D(u_texture, v_texCoord + offset) * weight;\r\n        totalWeight += weight;\r\n      }\r\n      \r\n      gl_FragColor = color / totalWeight;\r\n    }\r\n  `;\r\n\r\n  // Performance fragment shader (13 samples)\r\n  private performanceFragmentShaderSource = `\r\n    precision mediump float;\r\n    uniform sampler2D u_texture;\r\n    uniform vec2 u_resolution;\r\n    uniform vec2 u_direction;\r\n    uniform float u_radius;\r\n    varying vec2 v_texCoord;\r\n    \r\n    void main() {\r\n      vec2 texelSize = u_direction / u_resolution;\r\n      vec4 color = vec4(0.0);\r\n      float totalWeight = 0.0;\r\n      \r\n      // Performance blur with 13 samples\r\n      float sigma = u_radius * 0.9;\r\n      float twoSigmaSquare = 2.0 * sigma * sigma;\r\n      \r\n      for (float i = -12.0; i <= 12.0; i++) {\r\n        if (abs(i) > u_radius) continue;\r\n        \r\n        vec2 offset = texelSize * i;\r\n        float weight = exp(-i * i / twoSigmaSquare);\r\n        \r\n        color += texture2D(u_texture, v_texCoord + offset) * weight;\r\n        totalWeight += weight;\r\n      }\r\n      \r\n      gl_FragColor = color / totalWeight;\r\n    }\r\n  `;\r\n\r\n  private constructor() {\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.canvas.width = GameConstants.WIDTH;\r\n    this.canvas.height = GameConstants.HEIGHT;\r\n\r\n    // Initialize downsampling canvas\r\n    this.downsampleCanvas = document.createElement(\"canvas\");\r\n    this.downsampleCtx = this.downsampleCanvas.getContext(\"2d\");\r\n    if (!this.downsampleCtx) {\r\n      throw new Error(\"Failed to initialize downsample canvas context.\");\r\n    }\r\n\r\n    const context = this.canvas.getContext(\"webgl\", {\r\n      antialias: false,\r\n      depth: false,\r\n      stencil: false,\r\n      alpha: true,\r\n      premultipliedAlpha: false,\r\n      preserveDrawingBuffer: false,\r\n      powerPreference: \"high-performance\",\r\n    }) as WebGLRenderingContext | null;\r\n\r\n    const experimentalContext = this.canvas.getContext(\"experimental-webgl\", {\r\n      antialias: false,\r\n      depth: false,\r\n      stencil: false,\r\n      alpha: true,\r\n      premultipliedAlpha: false,\r\n      preserveDrawingBuffer: false,\r\n      powerPreference: \"high-performance\",\r\n    }) as WebGLRenderingContext | null;\r\n\r\n    this.gl = context || experimentalContext;\r\n    if (!this.gl) {\r\n      throw new Error(\"WebGL not supported\");\r\n    }\r\n\r\n    // Optimize GL state\r\n    this.gl.disable(this.gl.DEPTH_TEST);\r\n    this.gl.disable(this.gl.CULL_FACE);\r\n    this.gl.disable(this.gl.BLEND);\r\n\r\n    this.initShaders();\r\n    this.initBuffers();\r\n    this.initTextures();\r\n  }\r\n\r\n  static getInstance(): WebGLBlurRenderer {\r\n    if (!WebGLBlurRenderer.instance) {\r\n      WebGLBlurRenderer.instance = new WebGLBlurRenderer();\r\n    }\r\n    return WebGLBlurRenderer.instance;\r\n  }\r\n\r\n  private initShaders(): void {\r\n    const vertexShader = this.createShader(\r\n      this.gl.VERTEX_SHADER,\r\n      this.vertexShaderSource,\r\n    );\r\n\r\n    // Create high quality shader program\r\n    const highQualityFragmentShader = this.createShader(\r\n      this.gl.FRAGMENT_SHADER,\r\n      this.highQualityFragmentShaderSource,\r\n    );\r\n\r\n    this.highQualityShaderProgram = this.gl.createProgram();\r\n    this.gl.attachShader(this.highQualityShaderProgram, vertexShader);\r\n    this.gl.attachShader(\r\n      this.highQualityShaderProgram,\r\n      highQualityFragmentShader,\r\n    );\r\n    this.gl.linkProgram(this.highQualityShaderProgram);\r\n\r\n    if (\r\n      !this.gl.getProgramParameter(\r\n        this.highQualityShaderProgram,\r\n        this.gl.LINK_STATUS,\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        \"Unable to initialize high quality shader program: \" +\r\n          this.gl.getProgramInfoLog(this.highQualityShaderProgram),\r\n      );\r\n    }\r\n\r\n    // Create performance shader program\r\n    const performanceFragmentShader = this.createShader(\r\n      this.gl.FRAGMENT_SHADER,\r\n      this.performanceFragmentShaderSource,\r\n    );\r\n\r\n    this.performanceShaderProgram = this.gl.createProgram();\r\n    this.gl.attachShader(this.performanceShaderProgram, vertexShader);\r\n    this.gl.attachShader(\r\n      this.performanceShaderProgram,\r\n      performanceFragmentShader,\r\n    );\r\n    this.gl.linkProgram(this.performanceShaderProgram);\r\n\r\n    if (\r\n      !this.gl.getProgramParameter(\r\n        this.performanceShaderProgram,\r\n        this.gl.LINK_STATUS,\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        \"Unable to initialize performance shader program: \" +\r\n          this.gl.getProgramInfoLog(this.performanceShaderProgram),\r\n      );\r\n    }\r\n\r\n    // Set default to high quality\r\n    this.currentShaderProgram = this.highQualityShaderProgram;\r\n    this.updateShaderProgram();\r\n  }\r\n\r\n  private updateShaderProgram(): void {\r\n    const useHighQuality = GameConstants.HIGH_QUALITY_BLUR;\r\n    const targetProgram = useHighQuality\r\n      ? this.highQualityShaderProgram\r\n      : this.performanceShaderProgram;\r\n\r\n    if (this.currentShaderProgram !== targetProgram) {\r\n      this.currentShaderProgram = targetProgram;\r\n      this.gl.useProgram(this.currentShaderProgram);\r\n\r\n      // Get attribute locations\r\n      this.positionLocation = this.gl.getAttribLocation(\r\n        this.currentShaderProgram,\r\n        \"a_position\",\r\n      );\r\n      this.texCoordLocation = this.gl.getAttribLocation(\r\n        this.currentShaderProgram,\r\n        \"a_texCoord\",\r\n      );\r\n\r\n      // Get uniform locations\r\n      this.resolutionLocation = this.gl.getUniformLocation(\r\n        this.currentShaderProgram,\r\n        \"u_resolution\",\r\n      );\r\n      this.textureLocation = this.gl.getUniformLocation(\r\n        this.currentShaderProgram,\r\n        \"u_texture\",\r\n      );\r\n      this.directionLocation = this.gl.getUniformLocation(\r\n        this.currentShaderProgram,\r\n        \"u_direction\",\r\n      );\r\n      this.radiusLocation = this.gl.getUniformLocation(\r\n        this.currentShaderProgram,\r\n        \"u_radius\",\r\n      );\r\n\r\n      // Set texture unit\r\n      this.gl.uniform1i(this.textureLocation, 0);\r\n    }\r\n  }\r\n\r\n  private createShader(type: number, source: string): WebGLShader {\r\n    const shader = this.gl.createShader(type);\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n\r\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n      const error = this.gl.getShaderInfoLog(shader);\r\n      this.gl.deleteShader(shader);\r\n      throw new Error(\"Unable to compile shader: \" + error);\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  private initBuffers(): void {\r\n    // Position buffer\r\n    this.positionBuffer = this.gl.createBuffer();\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\r\n    this.gl.bufferData(\r\n      this.gl.ARRAY_BUFFER,\r\n      new Float32Array([\r\n        0,\r\n        0,\r\n        GameConstants.WIDTH,\r\n        0,\r\n        0,\r\n        GameConstants.HEIGHT,\r\n        0,\r\n        GameConstants.HEIGHT,\r\n        GameConstants.WIDTH,\r\n        0,\r\n        GameConstants.WIDTH,\r\n        GameConstants.HEIGHT,\r\n      ]),\r\n      this.gl.STATIC_DRAW,\r\n    );\r\n\r\n    // Texture coordinate buffer\r\n    this.texCoordBuffer = this.gl.createBuffer();\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n    this.gl.bufferData(\r\n      this.gl.ARRAY_BUFFER,\r\n      new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]),\r\n      this.gl.STATIC_DRAW,\r\n    );\r\n  }\r\n\r\n  private initTextures(): void {\r\n    this.texture = this.gl.createTexture();\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_WRAP_S,\r\n      this.gl.CLAMP_TO_EDGE,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_WRAP_T,\r\n      this.gl.CLAMP_TO_EDGE,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_MIN_FILTER,\r\n      this.gl.LINEAR,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_MAG_FILTER,\r\n      this.gl.LINEAR,\r\n    );\r\n\r\n    this.tempTexture = this.gl.createTexture();\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.tempTexture);\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_WRAP_S,\r\n      this.gl.CLAMP_TO_EDGE,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_WRAP_T,\r\n      this.gl.CLAMP_TO_EDGE,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_MIN_FILTER,\r\n      this.gl.LINEAR,\r\n    );\r\n    this.gl.texParameteri(\r\n      this.gl.TEXTURE_2D,\r\n      this.gl.TEXTURE_MAG_FILTER,\r\n      this.gl.LINEAR,\r\n    );\r\n\r\n    this.framebuffer = this.gl.createFramebuffer();\r\n    this.tempFramebuffer = this.gl.createFramebuffer();\r\n  }\r\n\r\n  // Optimized texture allocation/update method\r\n  private updateTexture(\r\n    texture: WebGLTexture,\r\n    width: number,\r\n    height: number,\r\n    currentWidth: number,\r\n    currentHeight: number,\r\n    data: HTMLCanvasElement | null = null,\r\n  ): { width: number; height: number } {\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n\r\n    // Only reallocate if dimensions changed\r\n    if (currentWidth !== width || currentHeight !== height) {\r\n      // Reallocate texture with new dimensions\r\n      if (data) {\r\n        // Use 6-parameter overload for HTMLCanvasElement\r\n        this.gl.texImage2D(\r\n          this.gl.TEXTURE_2D,\r\n          0,\r\n          this.gl.RGBA,\r\n          this.gl.RGBA,\r\n          this.gl.UNSIGNED_BYTE,\r\n          data,\r\n        );\r\n      } else {\r\n        // Use 9-parameter overload for null data\r\n        this.gl.texImage2D(\r\n          this.gl.TEXTURE_2D,\r\n          0,\r\n          this.gl.RGBA,\r\n          width,\r\n          height,\r\n          0,\r\n          this.gl.RGBA,\r\n          this.gl.UNSIGNED_BYTE,\r\n          null,\r\n        );\r\n      }\r\n      return { width, height };\r\n    } else if (data) {\r\n      // Reuse existing texture, just update the content\r\n      this.gl.texSubImage2D(\r\n        this.gl.TEXTURE_2D,\r\n        0,\r\n        0,\r\n        0,\r\n        this.gl.RGBA,\r\n        this.gl.UNSIGNED_BYTE,\r\n        data,\r\n      );\r\n      return { width: currentWidth, height: currentHeight };\r\n    }\r\n\r\n    return { width: currentWidth, height: currentHeight };\r\n  }\r\n\r\n  private getCachedCanvas(width: number, height: number): HTMLCanvasElement {\r\n    const key = `${width}x${height}`;\r\n    let canvas = this.resultCanvasCache.get(key);\r\n\r\n    if (!canvas) {\r\n      canvas = document.createElement(\"canvas\");\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      // Manage cache size\r\n      if (this.resultCanvasCache.size >= this.maxCacheSize) {\r\n        const firstKey = this.resultCanvasCache.keys().next().value;\r\n        this.resultCanvasCache.delete(firstKey);\r\n      }\r\n\r\n      this.resultCanvasCache.set(key, canvas);\r\n    }\r\n\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * Apply blur with downsampling and texSubImage2D optimization\r\n   */\r\n  applyBlur(\r\n    sourceCanvas: HTMLCanvasElement,\r\n    blurRadius: number,\r\n  ): HTMLCanvasElement {\r\n    const originalWidth = sourceCanvas.width;\r\n    const originalHeight = sourceCanvas.height;\r\n\r\n    // Calculate downsampled dimensions\r\n    const downsampleFactor = GameConstants.BLUR_DOWNSAMPLE_FACTOR;\r\n    const downsampledWidth = Math.max(\r\n      1,\r\n      Math.floor(originalWidth / downsampleFactor),\r\n    );\r\n    const downsampledHeight = Math.max(\r\n      1,\r\n      Math.floor(originalHeight / downsampleFactor),\r\n    );\r\n\r\n    // Prepare downsampled canvas\r\n    if (\r\n      this.downsampleCanvas.width !== downsampledWidth ||\r\n      this.downsampleCanvas.height !== downsampledHeight\r\n    ) {\r\n      this.downsampleCanvas.width = downsampledWidth;\r\n      this.downsampleCanvas.height = downsampledHeight;\r\n    }\r\n\r\n    // Downsample the source canvas using canvas 2D (GPU accelerated)\r\n    this.downsampleCtx.clearRect(0, 0, downsampledWidth, downsampledHeight);\r\n    this.downsampleCtx.drawImage(\r\n      sourceCanvas,\r\n      0,\r\n      0,\r\n      originalWidth,\r\n      originalHeight,\r\n      0,\r\n      0,\r\n      downsampledWidth,\r\n      downsampledHeight,\r\n    );\r\n\r\n    // Apply blur to the downsampled canvas\r\n    const blurredDownsampledCanvas = this.applyBlurToCanvas(\r\n      this.downsampleCanvas,\r\n      blurRadius / downsampleFactor, // Adjust blur radius for smaller canvas\r\n      downsampledWidth,\r\n      downsampledHeight,\r\n    );\r\n\r\n    // Return result at original size - the caller will handle upscaling\r\n    // For now, we'll create a canvas at original size and let the GPU upscale\r\n    const resultCanvas = this.getCachedCanvas(originalWidth, originalHeight);\r\n    const resultCtx = resultCanvas.getContext(\"2d\");\r\n    resultCtx.clearRect(0, 0, originalWidth, originalHeight);\r\n\r\n    // Use bilinear filtering for upscaling (GPU accelerated)\r\n    resultCtx.imageSmoothingEnabled = true;\r\n    resultCtx.imageSmoothingQuality = \"high\";\r\n    resultCtx.drawImage(\r\n      blurredDownsampledCanvas,\r\n      0,\r\n      0,\r\n      downsampledWidth,\r\n      downsampledHeight,\r\n      0,\r\n      0,\r\n      originalWidth,\r\n      originalHeight,\r\n    );\r\n\r\n    return resultCanvas;\r\n  }\r\n\r\n  /**\r\n   * Internal method to apply blur to a specific canvas\r\n   */\r\n  private applyBlurToCanvas(\r\n    sourceCanvas: HTMLCanvasElement,\r\n    blurRadius: number,\r\n    width: number,\r\n    height: number,\r\n  ): HTMLCanvasElement {\r\n    // Reduce the multiplier significantly for bloom visibility\r\n    const enhancedRadius = blurRadius * 1;\r\n\r\n    // Update shader program if quality setting changed\r\n    const expectedShader = GameConstants.HIGH_QUALITY_BLUR\r\n      ? this.highQualityShaderProgram\r\n      : this.performanceShaderProgram;\r\n\r\n    if (this.currentShaderProgram !== expectedShader) {\r\n      this.updateShaderProgram();\r\n    }\r\n\r\n    if (this.canvas.width !== width || this.canvas.height !== height) {\r\n      this.canvas.width = width;\r\n      this.canvas.height = height;\r\n      this.gl.viewport(0, 0, width, height);\r\n\r\n      // Update position buffer for new dimensions\r\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\r\n      this.gl.bufferData(\r\n        this.gl.ARRAY_BUFFER,\r\n        new Float32Array([\r\n          0,\r\n          0,\r\n          width,\r\n          0,\r\n          0,\r\n          height,\r\n          0,\r\n          height,\r\n          width,\r\n          0,\r\n          width,\r\n          height,\r\n        ]),\r\n        this.gl.STATIC_DRAW,\r\n      );\r\n    }\r\n\r\n    // OPTIMIZED: Use texSubImage2D to avoid GPU memory reallocation\r\n    const updatedTexture = this.updateTexture(\r\n      this.texture,\r\n      width,\r\n      height,\r\n      this.textureWidth,\r\n      this.textureHeight,\r\n      sourceCanvas,\r\n    );\r\n    this.textureWidth = updatedTexture.width;\r\n    this.textureHeight = updatedTexture.height;\r\n\r\n    const updatedTempTexture = this.updateTexture(\r\n      this.tempTexture,\r\n      width,\r\n      height,\r\n      this.tempTextureWidth,\r\n      this.tempTextureHeight,\r\n      null,\r\n    );\r\n    this.tempTextureWidth = updatedTempTexture.width;\r\n    this.tempTextureHeight = updatedTempTexture.height;\r\n\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\r\n    this.gl.enableVertexAttribArray(this.positionLocation);\r\n    this.gl.vertexAttribPointer(\r\n      this.positionLocation,\r\n      2,\r\n      this.gl.FLOAT,\r\n      false,\r\n      0,\r\n      0,\r\n    );\r\n\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n    this.gl.enableVertexAttribArray(this.texCoordLocation);\r\n    this.gl.vertexAttribPointer(\r\n      this.texCoordLocation,\r\n      2,\r\n      this.gl.FLOAT,\r\n      false,\r\n      0,\r\n      0,\r\n    );\r\n\r\n    this.gl.uniform2f(this.resolutionLocation, width, height);\r\n    this.gl.uniform1f(this.radiusLocation, enhancedRadius);\r\n\r\n    // First pass: horizontal blur\r\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.tempFramebuffer);\r\n    this.gl.framebufferTexture2D(\r\n      this.gl.FRAMEBUFFER,\r\n      this.gl.COLOR_ATTACHMENT0,\r\n      this.gl.TEXTURE_2D,\r\n      this.tempTexture,\r\n      0,\r\n    );\r\n\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\r\n    this.gl.uniform2f(this.directionLocation, 1.0, 0.0);\r\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\r\n\r\n    // Second pass: vertical blur\r\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\r\n    this.gl.framebufferTexture2D(\r\n      this.gl.FRAMEBUFFER,\r\n      this.gl.COLOR_ATTACHMENT0,\r\n      this.gl.TEXTURE_2D,\r\n      this.texture,\r\n      0,\r\n    );\r\n\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.tempTexture);\r\n    this.gl.uniform2f(this.directionLocation, 0.0, 1.0);\r\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\r\n\r\n    // Final pass: render to screen\r\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\r\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\r\n\r\n    return this.canvas;\r\n  }\r\n\r\n  clearCache(): void {\r\n    this.resultCanvasCache.clear();\r\n  }\r\n\r\n  dispose(): void {\r\n    this.clearCache();\r\n\r\n    if (this.gl) {\r\n      this.gl.deleteProgram(this.highQualityShaderProgram);\r\n      this.gl.deleteProgram(this.performanceShaderProgram);\r\n      this.gl.deleteBuffer(this.positionBuffer);\r\n      this.gl.deleteBuffer(this.texCoordBuffer);\r\n      this.gl.deleteTexture(this.texture);\r\n      this.gl.deleteTexture(this.tempTexture);\r\n      this.gl.deleteFramebuffer(this.framebuffer);\r\n      this.gl.deleteFramebuffer(this.tempFramebuffer);\r\n    }\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { statsTracker } from \"../game/stats\";\r\n\r\nexport class XPCounter {\r\n  private xp: number;\r\n  private level: number;\r\n\r\n  constructor() {\r\n    this.xp = 0;\r\n    this.level = 1;\r\n  }\r\n\r\n  static draw(delta: number) {\r\n    const xp = statsTracker.getXp();\r\n    // draw the xp counter\r\n\r\n    Game.ctx.save();\r\n\r\n    Game.ctx.fillStyle = \"rgba(255, 255, 0, 1)\";\r\n    Game.ctx.globalAlpha = 0.1;\r\n    Game.fillText(`XP: ${xp}`, 1, 20);\r\n    Game.ctx.restore();\r\n  }\r\n}\r\n","import { Item } from \"../item/item\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Equippable } from \"../item/equippable\";\r\nimport { Armor } from \"../item/armor\";\r\nimport { Coin } from \"../item/coin\";\r\nimport { Weapon } from \"../item/weapon/weapon\";\r\nimport { Room } from \"../room/room\";\r\nimport { Usable } from \"../item/usable/usable\";\r\nimport { Player } from \"../player/player\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { Input } from \"../game/input\";\r\nimport { Pickaxe } from \"../item/tool/pickaxe\";\r\nimport { Menu } from \"../gui/menu\";\r\nimport { XPCounter } from \"../gui/xpCounter\";\r\nimport { FishingRod } from \"../item/tool/fishingRod\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\n\r\nlet OPEN_TIME = 100; // milliseconds\r\n// Dark gray color used for the background of inventory slots\r\nlet FILL_COLOR = \"#5a595b\";\r\n// Very dark blue-gray color used for outlines and borders\r\nlet OUTLINE_COLOR = \"#292c36\";\r\n// Light blue color used to indicate equipped items\r\nlet EQUIP_COLOR = \"#85a8e6\";\r\n// White color used for the outer border of the inventory\r\nlet FULL_OUTLINE = \"white\";\r\n\r\nexport class Inventory {\r\n  globalId: string;\r\n  player: Player;\r\n  items: Array<Item | null>;\r\n  rows = 4;\r\n  cols = 5;\r\n  selX = 0;\r\n  selY = 0;\r\n  game: Game;\r\n  isOpen: boolean = false;\r\n  openTime: number = Date.now();\r\n  coins: number = 0;\r\n  equipAnimAmount: Array<number>;\r\n  weapon: Weapon | null = null;\r\n  private _expansion: number = 0;\r\n  grabbedItem: Item | null = null;\r\n  private _mouseDownStartX: number | null = null;\r\n  private _mouseDownStartY: number | null = null;\r\n  private _mouseDownItem: Item | null = null;\r\n  private _wasHoldDetected: boolean = false;\r\n  private _isDragging: boolean = false;\r\n  private _dragStartItem: Item | null = null;\r\n  private _dragStartSlot: number | null = null;\r\n  private itemEquipAnimations: Map<Item, number> = new Map();\r\n  foundItems: Item[] = [];\r\n\r\n  dragEndTime: number = Date.now();\r\n\r\n  closeTime: number = Date.now();\r\n\r\n  // New state for using items on other items\r\n  private usingItem: Usable | null = null;\r\n  private usingItemIndex: number | null = null;\r\n  mostRecentInput: \"mouse\" | \"keyboard\" = \"keyboard\";\r\n\r\n  // Static variables for inventory button position\r\n  private buttonY: number;\r\n  private buttonX: number;\r\n\r\n  constructor(game: Game, player: Player) {\r\n    this.globalId = IdGenerator.generate(\"INV\");\r\n    this.game = game;\r\n    this.player = player;\r\n\r\n    this.buttonX =\r\n      (Math.round(GameConstants.WIDTH / 2) + 3) / GameConstants.TILESIZE;\r\n    this.buttonY = 10;\r\n\r\n    Input.mouseDownListeners.push((x, y, button) =>\r\n      this.handleMouseDown(x, y, button),\r\n    );\r\n    Input.mouseUpListeners.push((x, y, button) =>\r\n      this.handleMouseUp(x, y, button),\r\n    );\r\n\r\n    Input.holdCallback = () => this.onHoldDetected();\r\n\r\n    this.items = new Array<Item | null>(\r\n      (this.rows + this._expansion) * this.cols,\r\n    ).fill(null);\r\n    this.equipAnimAmount = new Array<number>(\r\n      (this.rows + this._expansion) * this.cols,\r\n    ).fill(0);\r\n    let a = (i: Item | null) => {\r\n      if (i === null) return;\r\n      if (i instanceof Equippable) {\r\n        i.setWielder(this.player);\r\n      }\r\n      if (i instanceof Weapon && this.weapon === null) {\r\n        i.toggleEquip();\r\n        this.weapon = i;\r\n        //this.player.weapon = this.weapon;\r\n      }\r\n\r\n      this.addItem(i);\r\n    };\r\n    let startingInv = GameConstants.DEVELOPER_MODE\r\n      ? GameConstants.STARTING_DEV_INVENTORY\r\n      : GameConstants.STARTING_INVENTORY;\r\n\r\n    startingInv.forEach((item) => {\r\n      a(new item({ game: this.game } as Room, 0, 0));\r\n    });\r\n  }\r\n\r\n  clear = () => {\r\n    this.items.fill(null);\r\n    this.equipAnimAmount.fill(0);\r\n  };\r\n\r\n  get isDragging() {\r\n    return this._isDragging;\r\n  }\r\n\r\n  open = () => {\r\n    this.isOpen = !this.isOpen;\r\n    if (this.isOpen) this.openTime = Date.now();\r\n  };\r\n\r\n  toggleOpen = () => {\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  };\r\n\r\n  close = () => {\r\n    if (!this.isOpen) return;\r\n    this.isOpen = false;\r\n    this.closeTime = Date.now();\r\n    if (this.selY > 0) {\r\n      this.selY = 0;\r\n    }\r\n    this.usingItem = null;\r\n    this.usingItemIndex = null;\r\n  };\r\n\r\n  left = () => {\r\n    if (this.selX > 0) {\r\n      this.selX--;\r\n    }\r\n  };\r\n\r\n  right = () => {\r\n    if (this.selX < this.cols - 1) {\r\n      this.selX++;\r\n    }\r\n  };\r\n\r\n  up = () => {\r\n    if (this.selY > 0) {\r\n      this.selY--;\r\n    }\r\n  };\r\n\r\n  down = () => {\r\n    if (this.selY < this.rows + this._expansion - 1) {\r\n      this.selY++;\r\n    }\r\n  };\r\n\r\n  space = () => {\r\n    this.itemUse();\r\n  };\r\n\r\n  itemAtSelectedSlot = (): Item | null => {\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) {\r\n      return null;\r\n    }\r\n    return this.items[index];\r\n  };\r\n\r\n  getIndexOfItem = (item: Item): number => {\r\n    if (item === null) return -1;\r\n    return this.items.indexOf(item);\r\n  };\r\n\r\n  itemUse = () => {\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) return;\r\n    const item = this.items[index];\r\n\r\n    if (this.usingItem) {\r\n      // Attempt to use 'usingItem' on the currently selected item\r\n      if (item === null) {\r\n        // Clicked on empty slot; cancel the using state\r\n        this.usingItem = null;\r\n        this.usingItemIndex = null;\r\n        return;\r\n      }\r\n      // Attempt to use on other\r\n      if (item instanceof Item) {\r\n        this.usingItem.useOnOther(this.player, item);\r\n      }\r\n      // Exit tryingToUse state\r\n      this.usingItem = null;\r\n      this.usingItemIndex = null;\r\n    } else {\r\n      // Not in tryingToUse state\r\n      if (item instanceof Usable) {\r\n        if (item.canUseOnOther) {\r\n          // Enter tryingToUse state\r\n          this.usingItem = item;\r\n          this.usingItemIndex = index;\r\n        } else {\r\n          // Use normally\r\n          item.onUse(this.player);\r\n          // Optionally remove the item\r\n          // this.items[index] = null;\r\n        }\r\n      } else if (item instanceof Equippable) {\r\n        // Existing equipping logic\r\n        item.toggleEquip();\r\n        if (item instanceof Weapon) {\r\n          if (item.broken || item.cooldown > 0) return;\r\n          this.weapon = item.equipped ? item : null;\r\n        }\r\n        if (item.equipped) {\r\n          this.items.forEach((i, idx) => {\r\n            if (\r\n              i instanceof Equippable &&\r\n              i !== item &&\r\n              !item.coEquippable(i)\r\n            ) {\r\n              i.equipped = false;\r\n              this.equipAnimAmount[idx] = 0;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  canPickup = (item: Item): boolean => {\r\n    if (!this.isFull()) return true;\r\n    if (item instanceof Coin) return true;\r\n    if (\r\n      this.items.find(\r\n        (i) => i !== null && i.constructor === item.constructor,\r\n      ) &&\r\n      item.stackable\r\n    )\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  leftQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n\r\n    this.left();\r\n  };\r\n\r\n  rightQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n    this.right();\r\n  };\r\n\r\n  spaceQuickbar = () => {\r\n    this.mostRecentInput = \"keyboard\";\r\n    this.itemUse();\r\n  };\r\n\r\n  mouseMove = () => {\r\n    this.mostRecentInput = \"mouse\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n\r\n    if (bounds.inBounds) {\r\n      const s = this.isOpen\r\n        ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n        : 18;\r\n      const b = 2;\r\n      const g = -2;\r\n\r\n      const oldSelX = this.selX;\r\n      const oldSelY = this.selY;\r\n\r\n      this.selX = Math.max(\r\n        0,\r\n        Math.min(\r\n          Math.floor((x - bounds.startX) / (s + 2 * b + g)),\r\n          this.cols - 1,\r\n        ),\r\n      );\r\n      this.selY = this.isOpen\r\n        ? Math.max(\r\n            0,\r\n            Math.min(\r\n              Math.floor((y - bounds.startY) / (s + 2 * b + g)),\r\n              this.rows + this._expansion - 1,\r\n            ),\r\n          )\r\n        : 0;\r\n\r\n      if (oldSelX !== this.selX || oldSelY !== this.selY) {\r\n        // Optional: Handle selection change\r\n      }\r\n    }\r\n  };\r\n\r\n  moveItemToSlot = (\r\n    item: Item | null,\r\n    index: number,\r\n    otherItem: Item | null,\r\n    otherIndex: number,\r\n  ) => {\r\n    if (item === null) return;\r\n\r\n    // Preserve animation states before moving\r\n    const itemAnim = this.equipAnimAmount[index];\r\n    const otherAnim = otherItem ? this.equipAnimAmount[otherIndex] : 0;\r\n\r\n    if (otherItem === null) {\r\n      this.items[index] = item;\r\n      this.equipAnimAmount[index] = this.itemEquipAnimations.get(item) ?? 0;\r\n    } else {\r\n      this.items[index] = otherItem;\r\n      this.items[otherIndex] = item;\r\n      this.equipAnimAmount[index] =\r\n        this.itemEquipAnimations.get(otherItem) ?? 0;\r\n      this.equipAnimAmount[otherIndex] =\r\n        this.itemEquipAnimations.get(item) ?? 0;\r\n    }\r\n  };\r\n\r\n  grabItem = (item: Item) => {\r\n    if (item === null) {\r\n      return;\r\n    }\r\n    if (this.grabbedItem !== null) {\r\n      return;\r\n    }\r\n\r\n    // Remove the item from its slot when grabbed\r\n    const index = this.getIndexOfItem(item);\r\n\r\n    if (index !== -1) {\r\n      this.items[index] = null;\r\n      this.grabbedItem = item;\r\n    } else {\r\n    }\r\n  };\r\n\r\n  releaseItem = () => {\r\n    if (this.grabbedItem === null) {\r\n      return;\r\n    }\r\n\r\n    const targetIndex = this.selX + this.selY * this.cols;\r\n    const existingItem = this.items[targetIndex];\r\n\r\n    // If target slot is empty, place item there\r\n    if (existingItem === null) {\r\n      this.items[targetIndex] = this.grabbedItem;\r\n    } else {\r\n      // Swap items\r\n      this.items[targetIndex] = this.grabbedItem;\r\n    }\r\n\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  drawDraggedItem = (delta: number) => {\r\n    if (this.grabbedItem === null) return;\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n\r\n    const drawX = Math.round(x - 0.5 * GameConstants.TILESIZE);\r\n    const drawY = Math.round(y - 0.5 * GameConstants.TILESIZE);\r\n    const drawXScaled = drawX / GameConstants.TILESIZE;\r\n    const drawYScaled = drawY / GameConstants.TILESIZE;\r\n    this.grabbedItem.drawIcon(delta, drawXScaled, drawYScaled);\r\n  };\r\n\r\n  drop = () => {\r\n    if (!this.isOpen) return;\r\n    let index = this.selX + this.selY * this.cols;\r\n    if (index < 0 || index >= this.items.length) return;\r\n    const item = this.items[index];\r\n    if (item === null) return;\r\n    this.dropItem(item, index);\r\n  };\r\n\r\n  dropItem = (item: Item, index: number) => {\r\n    const room = (this.player as any).getRoom\r\n      ? (this.player as any).getRoom()\r\n      : this.game.levels[this.player.depth].rooms[this.player.levelID];\r\n    item.level = room;\r\n    item.x = this.player.x;\r\n    item.y = this.player.y;\r\n    item.alpha = 1;\r\n    item.pickedUp = false;\r\n    item.dropFromInventory();\r\n    this.equipAnimAmount[index] = 0;\r\n    item.drawableY = this.player.y;\r\n    room.items.push(item);\r\n    this.items[index] = null;\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    // Intentionally left blank or implement if needed\r\n  };\r\n\r\n  hasItem = <T extends Item>(itemType: new (...args: any[]) => T): T | null => {\r\n    return this.items.find((i): i is T => i instanceof itemType) || null;\r\n  };\r\n\r\n  hasItemCount = (item: Item | null): boolean => {\r\n    if (item === null) return false;\r\n    if (item instanceof Coin) return this.coinCount() >= item.stackCount;\r\n    return this.items.some(\r\n      (i) =>\r\n        i !== null &&\r\n        i.constructor === item.constructor &&\r\n        i.stackCount >= item.stackCount,\r\n    );\r\n  };\r\n\r\n  subtractItemCount = (item: Item | null) => {\r\n    if (item === null) return;\r\n    if (item instanceof Coin) {\r\n      this.subtractCoins(item.stackCount);\r\n      return;\r\n    }\r\n    this.items.forEach((i, idx) => {\r\n      if (i === null) return;\r\n      if (i.constructor === item.constructor) {\r\n        i.stackCount -= item.stackCount;\r\n        if (i.stackCount <= 0) {\r\n          this.items[idx] = null;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  subtractItem = (item: Item | null, count: number) => {\r\n    if (item === null) return;\r\n    if (item instanceof Coin) {\r\n      this.subtractCoins(item.stackCount);\r\n      return;\r\n    }\r\n    this.items.forEach((i, idx) => {\r\n      if (i === null) return;\r\n      if (i.constructor === item.constructor) {\r\n        i.stackCount -= count;\r\n        if (i.stackCount <= 0) {\r\n          this.items[idx] = null;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  coinCount = (): number => {\r\n    return this.coins;\r\n  };\r\n\r\n  subtractCoins = (n: number) => {\r\n    this.coins = Math.max(0, this.coins - n);\r\n  };\r\n\r\n  addCoins = (n: number) => {\r\n    this.coins += n;\r\n  };\r\n\r\n  isFull = (): boolean => {\r\n    return (\r\n      this.items.filter((i) => i !== null).length >=\r\n      (this.rows + this._expansion) * this.cols\r\n    );\r\n  };\r\n\r\n  addItem = (item: Item | null, stackCount: number | null = null): boolean => {\r\n    if (item === null) return false;\r\n    if (item instanceof Coin) {\r\n      this.coins += item.stackCount;\r\n      // Emit coin collected event for statistics tracking\r\n      globalEventBus.emit(EVENTS.COIN_COLLECTED, { amount: item.stackCount });\r\n      return true;\r\n    }\r\n    if (item instanceof Equippable) {\r\n      item.setWielder(this.player);\r\n    }\r\n    if (item.stackable) {\r\n      if (stackCount) {\r\n        item.stackCount = stackCount;\r\n      }\r\n      for (let i = 0; i < this.items.length; i++) {\r\n        if (\r\n          this.items[i] !== null &&\r\n          this.items[i]!.constructor === item.constructor\r\n        ) {\r\n          this.items[i]!.stackCount += item.stackCount;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if (!this.isFull()) {\r\n      for (let i = 0; i < this.items.length; i++) {\r\n        if (this.items[i] === null) {\r\n          this.items[i] = item;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  removeItem = (item: Item | null) => {\r\n    if (item === null) return;\r\n    const index = this.items.indexOf(item);\r\n    if (index !== -1) {\r\n      this.items[index] = null;\r\n    }\r\n  };\r\n\r\n  canMine = (): boolean => {\r\n    return this.hasItem(Pickaxe) !== null;\r\n  };\r\n\r\n  canFish = (): boolean => {\r\n    return this.hasItem(FishingRod) !== null;\r\n  };\r\n\r\n  getArmor = (): Armor | null => {\r\n    return (\r\n      this.items.find((i): i is Armor => i instanceof Armor && i.equipped) ||\r\n      null\r\n    );\r\n  };\r\n\r\n  hasWeapon = (): boolean => {\r\n    return this.weapon !== null;\r\n  };\r\n\r\n  getWeapon = (): Weapon | null => {\r\n    return this.weapon;\r\n  };\r\n\r\n  tick = () => {\r\n    this.items.forEach((i) => {\r\n      if (i !== null) i.tickInInventory();\r\n    });\r\n\r\n    // Check for drag initiation\r\n    this.checkForDragStart();\r\n  };\r\n\r\n  textWrap = (text: string, x: number, y: number, maxWidth: number): number => {\r\n    // Returns y value for next line\r\n    if (text === \"\") return y;\r\n    let words = text.split(\" \");\r\n    let line = \"\";\r\n\r\n    while (words.length > 0) {\r\n      if (Game.measureText(line + words[0]).width > maxWidth) {\r\n        Game.fillText(line, x, y);\r\n        line = \"\";\r\n        y += 8;\r\n      } else {\r\n        if (line !== \"\") line += \" \";\r\n        line += words[0];\r\n        words.splice(0, 1);\r\n      }\r\n    }\r\n    if (line.trim() !== \"\") {\r\n      Game.fillText(line, x, y);\r\n      y += 8;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  drawCoins = (delta: number) => {\r\n    let coinTileX = 19;\r\n    if (this.coins >= 3) coinTileX = 20;\r\n    if (this.coins >= 7) coinTileX = 21;\r\n\r\n    // Calculate the right edge of the quickbar\r\n    const quickbarStartX = this.getQuickbarStartX();\r\n    const s = 18; // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const quickbarWidth = this.cols * (s + 2 * b + g) - g;\r\n    const quickbarRightEdge = quickbarStartX + quickbarWidth;\r\n    // Position coin slightly to the right of the quickbar\r\n    let coinX = (quickbarRightEdge - 5) / GameConstants.TILESIZE - 1;\r\n    let coinY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.3;\r\n\r\n    // Ensure coin doesn't go off the right edge of the screen\r\n    const maxCoinX = (GameConstants.WIDTH - 36) / GameConstants.TILESIZE;\r\n    if (coinX > maxCoinX) {\r\n      coinX = maxCoinX;\r\n    }\r\n\r\n    if (GameConstants.WIDTH < 180) {\r\n      coinY -= 1.25;\r\n      coinX += 1.15;\r\n    } else {\r\n      coinX += 1.5;\r\n    }\r\n    if (GameConstants.WIDTH < 145) {\r\n      coinX -= 1.15;\r\n    }\r\n\r\n    Game.drawItem(coinTileX, 0, 1, 2, coinX, coinY - 1, 1, 2);\r\n\r\n    const countText = `${this.coins}`;\r\n    const width = Game.measureText(countText).width;\r\n    const countX = 10;\r\n    const countY = 9;\r\n\r\n    Game.fillTextOutline(\r\n      countText,\r\n      coinX * GameConstants.TILESIZE +\r\n        countX -\r\n        Game.measureText(this.coins.toString()).width +\r\n        5,\r\n      coinY * GameConstants.TILESIZE + countY + 2,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    /*\r\n    const turnCountText = `${this.player.turnCount}`;\r\n    Game.fillTextOutline(\r\n      turnCountText,\r\n      coinX * GameConstants.TILESIZE + countX,\r\n      coinY * GameConstants.TILESIZE + countY - 15,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    */\r\n  };\r\n\r\n  pointInside = (x: number, y: number): boolean => {\r\n    const s = Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME); // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 1 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n    const height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\r\n\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n    const startY = this.isOpen\r\n      ? Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob\r\n      : GameConstants.HEIGHT - (s + 2 * b) - 5 - ob;\r\n    const checkHeight = this.isOpen ? height + 2 * ob : s + 2 * b + 2 * ob;\r\n\r\n    return (\r\n      x >= startX &&\r\n      x <= startX + width + 2 * ob &&\r\n      y >= startY &&\r\n      y <= startY + checkHeight\r\n    );\r\n  };\r\n\r\n  drawQuickbar = (delta: number) => {\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\r\n\r\n    const s = 18; // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 1; // + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    const height = Math.floor(s + 2 * b);\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n    const startY = Math.floor(GameConstants.HEIGHT - height - 2);\r\n\r\n    // Draw main background\r\n    /*\r\n    Game.ctx.fillStyle = FULL_OUTLINE;\r\n    Game.ctx.fillRect(startX - ob, startY - 1, width + 2, height + 2);\r\n    */\r\n    //Game.ctx.globalCompositeOperation = \"xor\";\r\n\r\n    // Draw highlighted background for selected item only if mouse is in bounds\r\n    if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n      /*\r\n      Game.ctx.fillRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) - hg - ob),\r\n        Math.floor(startY - hg - ob),\r\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\r\n        Math.floor(s + 2 * b + 2 * hg + 2 * ob),\r\n      );\r\n      */\r\n    }\r\n\r\n    // Draw individual item slots\r\n    for (let xIdx = 0; xIdx < this.cols; xIdx++) {\r\n      // Skip drawing normal background and icon if this is the selected slot\r\n      const idx = xIdx;\r\n\r\n      // Draw slot background\r\n      if (xIdx !== this.selX) {\r\n        Game.ctx.fillStyle = FILL_COLOR;\r\n        Game.ctx.fillRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\r\n          Math.floor(startY + b),\r\n          Math.floor(s),\r\n          Math.floor(s),\r\n        );\r\n\r\n        Game.ctx.clearRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\r\n          Math.floor(startY + b + 1),\r\n          Math.floor(s - 2),\r\n          Math.floor(s - 2),\r\n        );\r\n\r\n        // Draw equip animation (this should always show)\r\n        Game.ctx.fillStyle = EQUIP_COLOR;\r\n        Game.ctx.globalAlpha = 0.3;\r\n        const yOff = Math.floor(s * (1 - this.equipAnimAmount[idx]));\r\n        Game.ctx.fillRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b),\r\n          Math.floor(startY + b + yOff),\r\n          Math.floor(s),\r\n          Math.floor(s - yOff),\r\n        );\r\n        Game.ctx.globalAlpha = 1;\r\n        /*\r\n        Game.ctx.clearRect(\r\n          Math.floor(startX + xIdx * (s + 2 * b + g) + b + 1),\r\n          Math.floor(startY + b + 1),\r\n          Math.floor(s - 2),\r\n          Math.floor(s - 2),\r\n        );\r\n        */\r\n      }\r\n\r\n      // Draw item icon if exists\r\n      if (idx < this.items.length && this.items[idx] !== null) {\r\n        const drawX =\r\n          startX +\r\n          xIdx * (s + 2 * b + g) +\r\n          b +\r\n          Math.floor(0.5 * s) -\r\n          0.5 * GameConstants.TILESIZE;\r\n        const drawY =\r\n          startY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawXScaled = drawX / GameConstants.TILESIZE;\r\n        const drawYScaled = drawY / GameConstants.TILESIZE;\r\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n      }\r\n    }\r\n\r\n    // Draw selection box only if mouse is in bounds\r\n    if (true) {\r\n      const selStartX = Math.floor(startX + this.selX * (s + 2 * b + g));\r\n      const selStartY = Math.floor(startY);\r\n      const hg2 = isInBounds ? hg : 0;\r\n      /*\r\n      // Outer selection box (dark)\r\n      Game.ctx.fillStyle = OUTLINE_COLOR;\r\n      Game.ctx.fillRect(\r\n        selStartX - hg,\r\n        selStartY - hg,\r\n        s + 2 * b + 2 * hg,\r\n        s + 2 * b + 2 * hg,\r\n      );\r\n      */\r\n\r\n      // Inner selection box (light grey)\r\n      Game.ctx.fillStyle = FILL_COLOR;\r\n      Game.ctx.fillRect(\r\n        Math.floor(selStartX + b - hg2),\r\n        Math.floor(selStartY + b - hg2),\r\n        Math.floor(s + 2 * hg2),\r\n        Math.floor(s + 2 * hg2),\r\n      );\r\n\r\n      // Clear inner rectangle - use normal size when not in bounds\r\n      const clearSize = isInBounds ? s : s - 2;\r\n      const selOffset = isInBounds ? 0 : 1;\r\n      Game.ctx.clearRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b + selOffset),\r\n        Math.floor(startY + b + selOffset),\r\n        Math.floor(clearSize),\r\n        Math.floor(clearSize),\r\n      );\r\n\r\n      // Draw equip animation for selected slot with highlight\r\n      const idx = this.selX;\r\n      Game.ctx.fillStyle = EQUIP_COLOR;\r\n      Game.ctx.globalAlpha = 0.3;\r\n      const yOff = (s + 2 * hg2) * (1 - this.equipAnimAmount[idx]);\r\n      Game.ctx.fillRect(\r\n        Math.round(startX + this.selX * (s + 2 * b + g) + b - hg2),\r\n        Math.round(startY + b + yOff - hg2),\r\n        Math.round(s + 2 * hg2),\r\n        Math.round(s + 2 * hg2 - yOff),\r\n      );\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      /*\r\n      Game.ctx.clearRect(\r\n        Math.floor(startX + this.selX * (s + 2 * b + g) + b),\r\n        Math.floor(startY + b),\r\n        Math.floor(s),\r\n        Math.floor(s),\r\n      );\r\n      */\r\n      this.drawUsingItem(delta, startX, startY, s, b, g);\r\n\r\n      // Redraw the selected item\r\n      if (idx < this.items.length && this.items[idx] !== null) {\r\n        const drawX =\r\n          selStartX + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawY =\r\n          selStartY + b + Math.floor(0.5 * s) - 0.5 * GameConstants.TILESIZE;\r\n        const drawXScaled = drawX / GameConstants.TILESIZE;\r\n        const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n        this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n      }\r\n      this.drawUsingItem(delta, startX, startY, s, b, g);\r\n    }\r\n    this.drawUsingItem(delta, startX, startY, s, b, g);\r\n  };\r\n\r\n  drawUsingItem = (\r\n    delta: number,\r\n    startX: number,\r\n    startY: number,\r\n    s: number,\r\n    b: number,\r\n    g: number,\r\n  ) => {\r\n    // Highlight the usingItem's slot if in using state and it's different from current selection\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    if (this.usingItem && this.usingItemIndex !== null) {\r\n      const usingX = this.usingItemIndex % this.cols;\r\n      const usingY = Math.floor(this.usingItemIndex / this.cols);\r\n      const highlightStartX = startX + usingX * (s + 2 * b + g);\r\n      const highlightStartY = startY + usingY * (s + 2 * b + g);\r\n\r\n      Game.ctx.strokeStyle = \"yellow\"; // Choose a distinct color for using item\r\n      Game.ctx.lineWidth = 2;\r\n      Game.ctx.strokeRect(\r\n        highlightStartX,\r\n        highlightStartY,\r\n        s + 2 * b,\r\n        s + 2 * b,\r\n      );\r\n      Game.ctx.lineWidth = 1; // Reset line width\r\n    }\r\n  };\r\n\r\n  updateEquipAnimAmount = (delta: number) => {\r\n    this.equipAnimAmount.forEach((amount, idx) => {\r\n      const item = this.items[idx];\r\n      if (item instanceof Equippable) {\r\n        let targetAmount = item.equipped ? 1 : 0;\r\n        let currentAmount = this.itemEquipAnimations.get(item) ?? amount;\r\n\r\n        currentAmount += 0.2 * delta * (targetAmount - currentAmount);\r\n        currentAmount = Math.max(0, Math.min(1, currentAmount));\r\n\r\n        this.itemEquipAnimations.set(item, currentAmount);\r\n        this.equipAnimAmount[idx] = currentAmount;\r\n      } else {\r\n        this.equipAnimAmount[idx] = 0;\r\n        if (item) this.itemEquipAnimations.delete(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n    Game.ctx.imageSmoothingQuality = \"low\";\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const isInBounds = this.isPointInInventoryBounds(x, y).inBounds;\r\n    const s = Math.floor(\r\n      Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\r\n    ); // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 1 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const invRows = Math.floor(this.rows + this._expansion);\r\n    const ob = 1; // outer border\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    const height = Math.floor(invRows * (s + 2 * b + g) - g);\r\n    const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n    const mainBgY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\r\n\r\n    // Draw coins and quickbar (these are always visible)\r\n    this.drawCoins(delta);\r\n    this.drawQuickbar(delta);\r\n    this.updateEquipAnimAmount(delta);\r\n    this.drawInventoryButton(delta);\r\n    Menu.drawOpenMenuButton();\r\n    XPCounter.draw(delta);\r\n\r\n    if (this.isOpen) {\r\n      // Draw semi-transparent background for full inventory\r\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      // Define dimensions and styling variables (similar to drawQuickbar)\r\n      const s = Math.floor(\r\n        Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME),\r\n      ); // size of box\r\n      const b = 2; // border\r\n      const g = -2; // gap\r\n      const hg = Math.floor(\r\n        1 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5),\r\n      ); // highlighted growth\r\n      const invRows = this.rows + this._expansion;\r\n      const ob = 1; // outer border\r\n      const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n      const height = Math.floor(invRows * (s + 2 * b + g) - g);\r\n\r\n      // Draw main inventory background (similar to drawQuickbar)\r\n      Game.ctx.fillStyle = FULL_OUTLINE;\r\n      const mainBgX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width) - ob;\r\n      const mainBgY =\r\n        Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height) - ob;\r\n      Game.ctx.fillRect(mainBgX, mainBgY, width + 2 * ob, height + 2 * ob);\r\n\r\n      // Draw highlighted background for selected item only if mouse is in bounds\r\n      if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n        const highlightX =\r\n          Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              this.selX * (s + 2 * b + g),\r\n          ) -\r\n          hg -\r\n          ob;\r\n        const highlightY =\r\n          Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              this.selY * (s + 2 * b + g),\r\n          ) -\r\n          hg -\r\n          ob;\r\n\r\n        Game.ctx.fillRect(\r\n          highlightX,\r\n          highlightY,\r\n          s + 2 * b + 2 * hg + 2 * ob,\r\n          s + 2 * b + 2 * hg + 2 * ob,\r\n        );\r\n      }\r\n\r\n      // Draw individual inventory slots (similar to drawQuickbar, but for all rows)\r\n      for (let xIdx = 0; xIdx < this.cols; xIdx++) {\r\n        for (let yIdx = 0; yIdx < this.rows + this._expansion; yIdx++) {\r\n          // Draw slot outline\r\n          const slotX = Math.round(\r\n            0.5 * GameConstants.WIDTH - 0.5 * width + xIdx * (s + 2 * b + g),\r\n          );\r\n          const slotY = Math.round(\r\n            0.5 * GameConstants.HEIGHT - 0.5 * height + yIdx * (s + 2 * b + g),\r\n          );\r\n          Game.ctx.fillStyle = OUTLINE_COLOR;\r\n          Game.ctx.fillRect(slotX, slotY, s + 2 * b, s + 2 * b);\r\n\r\n          // Draw slot background\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(slotX + b, slotY + b, s, s);\r\n\r\n          // Draw equip animation (unique to full inventory view)\r\n          const idx = xIdx + yIdx * this.cols;\r\n          Game.ctx.fillStyle = EQUIP_COLOR;\r\n          const yOff = Math.round(s * (1 - this.equipAnimAmount[idx]));\r\n          Game.ctx.fillRect(slotX + b, slotY + b + yOff, s, s - yOff);\r\n\r\n          // Draw item icon if exists\r\n          if (idx < this.items.length && this.items[idx] !== null) {\r\n            const drawX = Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                xIdx * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawY = Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                yIdx * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawXScaled = drawX / GameConstants.TILESIZE;\r\n            const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Draw item icons after animation delay (similar to drawQuickbar, but for all items)\r\n      if (Date.now() - this.openTime >= OPEN_TIME) {\r\n        this.items.forEach((item, idx) => {\r\n          if (item === null) return;\r\n          const x = idx % this.cols;\r\n          const y = Math.floor(idx / this.cols);\r\n\r\n          const drawX = Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              x * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n          const drawY = Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              y * (s + 2 * b + g) +\r\n              b +\r\n              Math.floor(0.5 * s) -\r\n              0.5 * GameConstants.TILESIZE,\r\n          );\r\n\r\n          const drawXScaled = drawX / GameConstants.TILESIZE;\r\n          const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n          item.drawIcon(delta, drawXScaled, drawYScaled);\r\n        });\r\n\r\n        // Draw selection box and related elements only if mouse is in bounds\r\n        if (isInBounds || this.mostRecentInput === \"keyboard\") {\r\n          // Draw selection box\r\n          Game.ctx.fillStyle = OUTLINE_COLOR;\r\n          Game.ctx.fillRect(\r\n            Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                this.selX * (s + 2 * b + g) -\r\n                hg,\r\n            ),\r\n            Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                this.selY * (s + 2 * b + g) -\r\n                hg,\r\n            ),\r\n            s + 2 * b + 2 * hg,\r\n            s + 2 * b + 2 * hg,\r\n          );\r\n\r\n          const slotX = Math.round(\r\n            0.5 * GameConstants.WIDTH -\r\n              0.5 * width +\r\n              this.selX * (s + 2 * b + g) +\r\n              b -\r\n              hg,\r\n          );\r\n          const slotY = Math.round(\r\n            0.5 * GameConstants.HEIGHT -\r\n              0.5 * height +\r\n              this.selY * (s + 2 * b + g) +\r\n              b -\r\n              hg,\r\n          );\r\n          Game.ctx.fillStyle = FILL_COLOR;\r\n          Game.ctx.fillRect(slotX, slotY, s + 2 * hg, s + 2 * hg);\r\n\r\n          // Draw equip animation for selected item (unique to full inventory view)\r\n          const idx = this.selX + this.selY * this.cols;\r\n          if (idx < this.items.length && this.items[idx] !== null) {\r\n            Game.ctx.fillStyle = EQUIP_COLOR;\r\n            const yOff = Math.round(\r\n              (s + 2 * hg) * (1 - this.equipAnimAmount[idx]),\r\n            );\r\n            Game.ctx.fillRect(\r\n              Math.round(\r\n                0.5 * GameConstants.WIDTH -\r\n                  0.5 * width +\r\n                  this.selX * (s + 2 * b + g) +\r\n                  b -\r\n                  hg,\r\n              ),\r\n              Math.round(\r\n                0.5 * GameConstants.HEIGHT -\r\n                  0.5 * height +\r\n                  this.selY * (s + 2 * b + g) +\r\n                  b -\r\n                  hg +\r\n                  yOff,\r\n              ),\r\n              s + 2 * hg,\r\n              s + 2 * hg - yOff,\r\n            );\r\n\r\n            // Redraw selected item icon (similar to drawQuickbar)\r\n            const drawX = Math.round(\r\n              0.5 * GameConstants.WIDTH -\r\n                0.5 * width +\r\n                this.selX * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n            const drawY = Math.round(\r\n              0.5 * GameConstants.HEIGHT -\r\n                0.5 * height +\r\n                this.selY * (s + 2 * b + g) +\r\n                b +\r\n                Math.floor(0.5 * s) -\r\n                0.5 * GameConstants.TILESIZE,\r\n            );\r\n\r\n            const drawXScaled = drawX / GameConstants.TILESIZE;\r\n            const drawYScaled = drawY / GameConstants.TILESIZE;\r\n\r\n            this.items[idx]?.drawIcon(delta, drawXScaled, drawYScaled);\r\n          }\r\n\r\n          // **Move drawUsingItem here, after the main selection box**\r\n        }\r\n\r\n        // **Ensure drawUsingItem is not called again here**\r\n        // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\r\n      }\r\n\r\n      // **Ensure drawUsingItem is not called again here**\r\n      // this.drawUsingItem(delta, mainBgX, mainBgY, s, b, g);\r\n      // Draw item description and action text (unique to full inventory view)\r\n      const selectedIdx = this.selX + this.selY * this.cols;\r\n\r\n      if (selectedIdx < this.items.length && this.items[selectedIdx] !== null) {\r\n        const item = this.items[selectedIdx]!;\r\n        Game.ctx.fillStyle = \"white\";\r\n\r\n        // Determine action text\r\n        let topPhrase = \"\";\r\n        if (item instanceof Equippable) {\r\n          topPhrase = item.equipped ? \"[SPACE] to unequip\" : \"[SPACE] to equip\";\r\n        }\r\n        if (item instanceof Usable) {\r\n          topPhrase = \"[SPACE] to use\";\r\n        }\r\n\r\n        // Draw action text\r\n        const actionTextWidth = Game.measureText(topPhrase).width;\r\n        Game.fillText(\r\n          topPhrase,\r\n          Math.round(0.5 * (GameConstants.WIDTH - actionTextWidth)),\r\n          5,\r\n        );\r\n\r\n        // Draw item description\r\n        const lines = item.getDescription().split(\"\\n\");\r\n        let nextY = Math.round(\r\n          0.5 * GameConstants.HEIGHT -\r\n            0.5 * height +\r\n            (this.rows + this.expansion) * (s + 2 * b + g) +\r\n            b +\r\n            5,\r\n        );\r\n        lines.forEach((line) => {\r\n          nextY = this.textWrap(line, 5, nextY, GameConstants.WIDTH - 10);\r\n        });\r\n      }\r\n    }\r\n    if (this.isOpen) {\r\n      this.drawUsingItem(delta, mainBgX + 1, mainBgY + 1, s, b, g);\r\n    }\r\n\r\n    this.drawDraggedItem(delta);\r\n  };\r\n\r\n  isPointInInventoryBounds = (\r\n    x: number,\r\n    y: number,\r\n  ): { inBounds: boolean; startX: number; startY: number } => {\r\n    const s = this.isOpen\r\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n      : 18;\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const hg = 1 + Math.round(0.5 * Math.sin(Date.now() * 0.01) + 0.5); // highlighted growth\r\n    const ob = 1; // outer border\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n\r\n    let startX: number;\r\n    let startY: number;\r\n    let height: number;\r\n\r\n    if (this.isOpen) {\r\n      // Full inventory bounds\r\n      height = (this.rows + this._expansion) * (s + 2 * b + g) - g;\r\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n      startY = Math.round(0.5 * GameConstants.HEIGHT - 0.5 * height);\r\n    } else {\r\n      // Quickbar bounds\r\n      height = s + 2 * b;\r\n      startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n      startY = Math.round(GameConstants.HEIGHT - height - 5);\r\n    }\r\n\r\n    const inBounds =\r\n      x >= startX - ob &&\r\n      x <= startX + width + ob &&\r\n      y >= startY - ob &&\r\n      y <= startY + height + ob;\r\n\r\n    return {\r\n      inBounds,\r\n      startX,\r\n      startY,\r\n    };\r\n  };\r\n  isPointInQuickbarBounds = (\r\n    x: number,\r\n    y: number,\r\n  ): { inBounds: boolean; startX: number; startY: number } => {\r\n    const s = this.isOpen\r\n      ? Math.min(18, (18 * (Date.now() - this.openTime)) / OPEN_TIME)\r\n      : 18;\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const width = this.cols * (s + 2 * b + g) - g;\r\n    const startX = Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n    const startY = Math.round(GameConstants.HEIGHT - (s + 2 * b) - 5);\r\n    const quickbarHeight = s + 2 * b;\r\n\r\n    const inBounds =\r\n      x >= startX &&\r\n      x <= startX + width &&\r\n      y >= startY &&\r\n      y <= startY + quickbarHeight;\r\n\r\n    return {\r\n      inBounds,\r\n      startX,\r\n      startY,\r\n    };\r\n  };\r\n\r\n  isPointInInventoryButton = (x: number, y: number): boolean => {\r\n    const tX = x / GameConstants.TILESIZE;\r\n    const tY = y / GameConstants.TILESIZE;\r\n    return (\r\n      tX >= this.buttonX &&\r\n      tX <= this.buttonX + 1 &&\r\n      tY >= this.buttonY &&\r\n      tY <= this.buttonY + 1\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draws the inventory button to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawInventoryButton = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n    this.buttonX = GameConstants.WIDTH / GameConstants.TILESIZE - 1.25;\r\n    this.buttonY = GameConstants.HEIGHT / GameConstants.TILESIZE - 1.25;\r\n    if (GameConstants.WIDTH < 145) {\r\n      //this.buttonX -= 1;\r\n      this.buttonY -= 1.25;\r\n    }\r\n    Game.drawFX(0, 0, 1, 1, this.buttonX, this.buttonY, 1, 1);\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  getQuickbarStartX = () => {\r\n    const s = 18; // size of box\r\n    const b = 2; // border\r\n    const g = -2; // gap\r\n    const width = Math.floor(this.cols * (s + 2 * b + g) - g);\r\n    return Math.round(0.5 * GameConstants.WIDTH - 0.5 * width);\r\n  };\r\n\r\n  handleMouseDown = (x: number, y: number, button: number) => {\r\n    if (this.player.menu.open) return;\r\n\r\n    // Ignore if not left click\r\n    if (button !== 0) return;\r\n\r\n    const bounds = this.isPointInInventoryBounds(x, y);\r\n    if (bounds.inBounds) {\r\n      const selectedItem = this.itemAtSelectedSlot();\r\n      if (selectedItem !== null) {\r\n        this._dragStartItem = selectedItem;\r\n        this._dragStartSlot = this.selX + this.selY * this.cols;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Unified method to initiate dragging.\r\n   */\r\n  initiateDrag = () => {\r\n    if (this._dragStartItem === null || this._isDragging) {\r\n      return;\r\n    }\r\n    this._isDragging = true;\r\n    this.grabbedItem = this._dragStartItem;\r\n\r\n    // Remove item from original slot\r\n    if (this._dragStartSlot !== null) {\r\n      this.items[this._dragStartSlot] = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle hold detection for both mouse and touch.\r\n   */\r\n  onHoldDetected = () => {\r\n    this.initiateDrag();\r\n  };\r\n\r\n  /**\r\n   * Continuously check for mouse hold during tick.\r\n   */\r\n  checkForDragStart = () => {\r\n    if (Input.mouseDown && Input.isMouseHold) {\r\n      this.initiateDrag();\r\n    } else if (Input.isTapHold) {\r\n      this.initiateDrag();\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (x: number, y: number, button: number) => {\r\n    if (this.player.menu.open) return;\r\n\r\n    // Ignore if not left click\r\n    if (button !== 0) return;\r\n\r\n    const invBounds = this.isPointInInventoryBounds(x, y);\r\n    const quickbarBounds = this.isPointInQuickbarBounds(x, y);\r\n    const isValidDropZone = this.isOpen\r\n      ? invBounds.inBounds\r\n      : quickbarBounds.inBounds;\r\n\r\n    if (isValidDropZone) {\r\n      if (this._isDragging && this.grabbedItem !== null) {\r\n        // We were dragging, place the item\r\n        const targetSlot = this.selX + this.selY * this.cols;\r\n        this.placeItemInSlot(targetSlot);\r\n      } else if (this._dragStartItem !== null) {\r\n        // We had an item but weren't dragging (quick click)\r\n        this.itemUse();\r\n      }\r\n    } else if (this.grabbedItem !== null) {\r\n      // Drop the item in the world\r\n      this.dropItem(this.grabbedItem, this._dragStartSlot);\r\n\r\n      this.grabbedItem = null;\r\n      this.items[this._dragStartSlot] = null;\r\n      this.dragEndTime = Date.now();\r\n    }\r\n\r\n    // Reset all drag/hold state\r\n    this._isDragging = false;\r\n    this._dragStartItem = null;\r\n    this._dragStartSlot = null;\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  placeItemInSlot = (targetSlot: number) => {\r\n    if (this.grabbedItem === null) return;\r\n\r\n    const existingItem = this.items[targetSlot];\r\n\r\n    // If target slot is empty\r\n    if (existingItem === null) {\r\n      this.items[targetSlot] = this.grabbedItem;\r\n    } else {\r\n      // Swap items\r\n      if (this._dragStartSlot !== null) {\r\n        this.items[this._dragStartSlot] = existingItem;\r\n      }\r\n      this.items[targetSlot] = this.grabbedItem;\r\n    }\r\n\r\n    // Record move for replay\r\n    try {\r\n      const fromIdx = this._dragStartSlot ?? targetSlot;\r\n      const toIdx = targetSlot;\r\n      (this.game as any).replayManager?.recordAction({\r\n        type: \"InventoryMove\",\r\n        fromIndex: fromIdx,\r\n        toIndex: toIdx,\r\n      });\r\n    } catch {}\r\n\r\n    this.grabbedItem = null;\r\n  };\r\n\r\n  get expansion(): number {\r\n    return this._expansion;\r\n  }\r\n\r\n  set expansion(value: number) {\r\n    if (value !== this._expansion) {\r\n      const oldTotalSlots = (this.rows + this._expansion) * this.cols;\r\n      this._expansion = value;\r\n      const newTotalSlots = (this.rows + this._expansion) * this.cols;\r\n\r\n      // Resize items array\r\n      if (newTotalSlots > oldTotalSlots) {\r\n        this.items.push(...Array(newTotalSlots - oldTotalSlots).fill(null));\r\n        this.equipAnimAmount.push(\r\n          ...Array(newTotalSlots - oldTotalSlots).fill(0),\r\n        );\r\n      } else if (newTotalSlots < oldTotalSlots) {\r\n        this.items.length = newTotalSlots;\r\n        this.equipAnimAmount.length = newTotalSlots;\r\n      }\r\n    }\r\n  }\r\n\r\n  expandInventory(additionalRows: number) {\r\n    this.expansion += additionalRows;\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Room } from \"../room/room\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Weapon } from \"./weapon/weapon\";\r\n\r\nexport class Armor extends Equippable {\r\n  health: number;\r\n  rechargeTurnCounter: number;\r\n  readonly RECHARGE_TURNS = 25;\r\n  static itemName = \"occult shield\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.health = 1;\r\n    this.rechargeTurnCounter = -1;\r\n    this.tileX = 5;\r\n    this.tileY = 0;\r\n    this.name = \"occult shield\";\r\n  }\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    if (other instanceof Armor) return false;\r\n    if (other instanceof Weapon && (other as Weapon).twoHanded) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return (\r\n      \"ENCHANTED SHIELD\\nAn occult shield. Absorbs one hit and regenerates after \" +\r\n      this.RECHARGE_TURNS +\r\n      \" turns.\"\r\n    );\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    if (this.rechargeTurnCounter > 0) {\r\n      this.rechargeTurnCounter--;\r\n      this.cooldown = this.rechargeTurnCounter;\r\n\r\n      if (this.rechargeTurnCounter === 0) {\r\n        this.rechargeTurnCounter = -1;\r\n        this.cooldown = this.rechargeTurnCounter;\r\n        this.health = 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  hurt = (damage: number) => {\r\n    if (this.health <= 0) return;\r\n    this.health -= Math.max(damage, 1);\r\n    this.rechargeTurnCounter = this.RECHARGE_TURNS + 1;\r\n    this.cooldown = this.rechargeTurnCounter;\r\n  };\r\n\r\n  drawGUI = (\r\n    delta: number,\r\n    playerMaxHealth: number,\r\n    quickbarStartX: number,\r\n  ) => {\r\n    // Get the quickbar's left edge position (same as in playerRenderer)\r\n    // Convert to tile coordinates\r\n    const heartStartX = (quickbarStartX - 7) / GameConstants.TILESIZE;\r\n    // Position after the hearts\r\n\r\n    const shieldX = Math.max(heartStartX, -0.2) + playerMaxHealth / 1.5 + 0.5;\r\n    let offsetY = GameConstants.WIDTH > 175 ? 0 : -1.25;\r\n\r\n    if (this.rechargeTurnCounter === -1)\r\n      Game.drawFX(\r\n        5,\r\n        2,\r\n        0.75,\r\n        0.75,\r\n        shieldX,\r\n        GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\r\n        0.75,\r\n        0.75,\r\n      );\r\n    else {\r\n      let rechargeProportion =\r\n        1 - this.rechargeTurnCounter / this.RECHARGE_TURNS;\r\n\r\n      if (rechargeProportion < 0.5)\r\n        Game.drawFX(\r\n          7,\r\n          2,\r\n          0.75,\r\n          0.75,\r\n          shieldX,\r\n          GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\r\n          0.75,\r\n          0.75,\r\n        );\r\n      else\r\n        Game.drawFX(\r\n          8,\r\n          2,\r\n          0.75,\r\n          0.75,\r\n          shieldX,\r\n          GameConstants.HEIGHT / GameConstants.TILESIZE - 1 + offsetY,\r\n          0.75,\r\n          0.75,\r\n        );\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Room } from \"../room/room\";\r\nimport { Usable } from \"./usable/usable\";\r\nimport { Inventory } from \"../inventory/inventory\";\r\n\r\nexport class Backpack extends Usable {\r\n  static itemName = \"backpack\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 4;\r\n    this.tileY = 0;\r\n    this.offsetY = 0;\r\n    this.name = Backpack.itemName;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.playBackpack();\r\n    player.inventory.removeItem(this);\r\n    player.inventory.expansion += 1;\r\n    this.level.game.pushMessage(\r\n      \"You equip the backpack, increasing the amount you can carry.\",\r\n    );\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n  getDescription = () => {\r\n    return \"BACKPACK\\nA normal looking backpack. Increases the amount you can carry. \";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { Usable } from \"./usable/usable\";\r\nimport { Bestiary } from \"../game/bestiary\";\r\n\r\nexport class BestiaryBook extends Usable {\r\n  static itemName = \"bestiary book\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 8;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = BestiaryBook.itemName;\r\n    this.description = \"opens the bestiary\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.bestiary === null) {\r\n      player.bestiary = new Bestiary(player.game, player);\r\n    }\r\n    player.bestiary.toggleOpen();\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Room } from \"../room/room\";\r\nimport { Usable } from \"./usable/usable\";\r\n//import { Bomb } from \"../entity/object/bomb\";\r\n\r\nexport class BombItem extends Usable {\r\n  static itemName = \"bomb\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 20;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.name = BombItem.itemName;\r\n    this.description = \"explodes\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    const { Bomb } = require(\"../entity/object/bomb\");\r\n    Bomb.add(player.game.room, player.game, player.x, player.y);\r\n    player.inventory.removeItem(this);\r\n    Sound.mine();\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Room } from \"../room/room\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class Coin extends Item {\r\n  static itemName = \"coin\";\r\n  //checked: boolean;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 19;\r\n    this.tileY = 0;\r\n    this.stackCount = 1;\r\n    this.stackable = true;\r\n    this.name = Coin.itemName;\r\n    //if (GameConstants.COIN_ANIMATION) this.animateToInventory = true;\r\n  }\r\n  onDrop = () => {\r\n    const coinList = []; //array to store coin objects\r\n    for (const item of this.level.items) {\r\n      if (item instanceof Coin) coinList.push(item);\r\n    }\r\n    for (const otherCoin of coinList) {\r\n      if (\r\n        this !== otherCoin &&\r\n        this.x === otherCoin.x &&\r\n        this.y === otherCoin.y\r\n      ) {\r\n        this.stackCount += otherCoin.stackCount;\r\n        this.level.items = this.level.items.filter((x) => x !== otherCoin);\r\n      }\r\n      if (this.stackCount >= 3) this.tileX = 20;\r\n      if (this.stackCount >= 7) this.tileX = 21;\r\n    }\r\n  };\r\n  get distanceToBottomRight() {\r\n    return Math.sqrt(\r\n      (this.x + this.w - window.innerWidth) ** 2 +\r\n        (this.y + this.h - window.innerHeight) ** 2,\r\n    );\r\n  }\r\n\r\n  autoPickup = () => {\r\n    if (GameConstants.COIN_AUTO_PICKUP)\r\n      this.onPickup(this.level.game.players[this.level.game.localPlayerID]);\r\n  };\r\n\r\n  pickupSound = () => {\r\n    let delay = 0;\r\n    if (GameConstants.COIN_ANIMATION)\r\n      delay = Math.ceil(Random.rand() * 200 + 400);\r\n\r\n    if (this.level === this.level.game.room)\r\n      Sound.delayPlay(Sound.pickupCoin, delay);\r\n  };\r\n}\r\n","import { Entity } from \"../entity/entity\";\r\nimport { Armor } from \"./armor\";\r\nimport { BlueGem } from \"./resource/bluegem\";\r\nimport { Candle } from \"./light/candle\";\r\nimport { Coin } from \"./coin\";\r\nimport { GreenGem } from \"./resource/greengem\";\r\nimport { Heart } from \"./usable/heart\";\r\nimport { Item } from \"./item\";\r\nimport { RedGem } from \"./resource/redgem\";\r\nimport { WeaponFragments } from \"./usable/weaponFragments\";\r\nimport { Spear } from \"./weapon/spear\";\r\nimport { Warhammer } from \"./weapon/warhammer\";\r\nimport { DualDagger } from \"./weapon/dualdagger\";\r\nimport { WeaponPoison } from \"./usable/weaponPoison\";\r\nimport { WeaponBlood } from \"./usable/weaponBlood\";\r\nimport { GoldOre } from \"./resource/goldOre\";\r\nimport { Stone } from \"./resource/stone\";\r\nimport { Pickaxe } from \"./tool/pickaxe\";\r\nimport { Hammer } from \"./tool/hammer\";\r\nimport { Coal } from \"./resource/coal\";\r\nimport { Torch } from \"./light/torch\";\r\nimport { Lantern } from \"./light/lantern\";\r\nimport { Spellbook } from \"./weapon/spellbook\";\r\nimport { SpellbookPage } from \"./usable/spellbookPage\";\r\nimport { Backpack } from \"./backpack\";\r\nimport { BombItem } from \"./bombItem\";\r\nimport { Greataxe } from \"./weapon/greataxe\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Game } from \"../game\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { Geode } from \"./resource/geode\";\r\nimport { Scythe } from \"./weapon/scythe\";\r\nimport { Hourglass } from \"./usable/hourglass\";\r\nimport { ScytheHandle } from \"./weapon/scytheHandle\";\r\nimport { ScytheBlade } from \"./weapon/scytheBlade\";\r\nimport { FishingRod } from \"./tool/fishingRod\";\r\nimport { ShieldRightFragment } from \"./weapon/shieldRightFragment\";\r\nimport { ShieldLeftFragment } from \"./weapon/shieldLeftFragment\";\r\n\r\ninterface Drop {\r\n  itemType: string;\r\n  dropRate: number; // 1/x chance of dropping\r\n  category: string[];\r\n  unique?: boolean;\r\n  minDepth?: number;\r\n}\r\n\r\nexport const ItemTypeMap: { [key: string]: typeof Item } = {\r\n  dualdagger: DualDagger,\r\n  warhammer: Warhammer,\r\n  spear: Spear,\r\n  spellbook: Spellbook,\r\n  greataxe: Greataxe,\r\n  scythe: Scythe,\r\n  hourglass: Hourglass,\r\n  fishingrod: FishingRod,\r\n\r\n  scytheblade: ScytheBlade,\r\n  scythehandle: ScytheHandle,\r\n  shieldleftfragment: ShieldLeftFragment,\r\n  shieldrightfragment: ShieldRightFragment,\r\n\r\n  armor: Armor,\r\n\r\n  pickaxe: Pickaxe,\r\n  hammer: Hammer,\r\n\r\n  heart: Heart,\r\n  weaponpoison: WeaponPoison,\r\n  weaponblood: WeaponBlood,\r\n\r\n  coin: Coin,\r\n\r\n  weaponfragments: WeaponFragments,\r\n  spellbookPage: SpellbookPage,\r\n\r\n  backpack: Backpack,\r\n\r\n  candle: Candle,\r\n  torch: Torch,\r\n  lantern: Lantern,\r\n\r\n  redgem: RedGem,\r\n  bluegem: BlueGem,\r\n  greengem: GreenGem,\r\n  geode: Geode,\r\n  gold: GoldOre,\r\n  stone: Stone,\r\n  coal: Coal,\r\n  bomb: BombItem,\r\n};\r\n\r\nexport class DropTable {\r\n  static drops: Drop[] = [\r\n    // Weapons - Higher numbers = rarer\r\n    {\r\n      itemType: \"dualdagger\",\r\n      dropRate: 500,\r\n      category: [\"weapon\", \"melee\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"warhammer\",\r\n      dropRate: 250,\r\n      category: [\"weapon\", \"melee\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"spear\",\r\n      dropRate: 150,\r\n      category: [\"weapon\", \"melee\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"spellbook\",\r\n      dropRate: 250,\r\n      category: [\"weapon\", \"magic\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"greataxe\",\r\n      dropRate: 500,\r\n      category: [\"weapon\", \"melee\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"scythe\",\r\n      dropRate: 500,\r\n      category: [\"reaper\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"scytheblade\",\r\n      dropRate: 10,\r\n      category: [\"reaper\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"scythehandle\",\r\n      dropRate: 10,\r\n      category: [\"reaper\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"shieldleftfragment\",\r\n      dropRate: 10,\r\n      category: [\"occultist\"],\r\n      unique: true,\r\n    },\r\n    {\r\n      itemType: \"shieldrightfragment\",\r\n      dropRate: 10,\r\n      category: [\"occultist\"],\r\n      unique: true,\r\n    },\r\n\r\n    {\r\n      itemType: \"weaponpoison\",\r\n      dropRate: 3,\r\n      category: [\"frog\"],\r\n      unique: true,\r\n    },\r\n\r\n    // Equipment\r\n    { itemType: \"armor\", dropRate: 350, category: [\"equipment\"], unique: true },\r\n\r\n    // Tools\r\n    { itemType: \"pickaxe\", dropRate: 25, category: [\"tool\"] },\r\n    { itemType: \"hammer\", dropRate: 25, category: [\"tool\"] },\r\n    { itemType: \"fishingrod\", dropRate: 40, category: [\"tool\"] },\r\n\r\n    { itemType: \"hourglass\", dropRate: 10, category: [\"reaper\"], unique: true },\r\n\r\n    // Consumables\r\n    { itemType: \"heart\", dropRate: 20, category: [\"consumable\"] },\r\n    //{ itemType: \"weaponpoison\", dropRate: 100, category: [\"consumable\"] },\r\n    { itemType: \"weaponblood\", dropRate: 100, category: [\"consumable\"] },\r\n\r\n    // Common items\r\n    { itemType: \"coin\", dropRate: 10, category: [\"coin\"] }, // Always drops\r\n\r\n    // Crafting materials\r\n    {\r\n      itemType: \"weaponfragments\",\r\n      dropRate: 100,\r\n      category: [\"consumable\", \"melee\"],\r\n    },\r\n    {\r\n      itemType: \"spellbookPage\",\r\n      dropRate: 100,\r\n      category: [\"consumable\", \"magic\"],\r\n    },\r\n\r\n    // Upgrades\r\n    { itemType: \"backpack\", dropRate: 100, category: [\"upgrade\"] },\r\n\r\n    // Light sources\r\n    { itemType: \"candle\", dropRate: 100, category: [\"light\"] },\r\n    { itemType: \"torch\", dropRate: 250, category: [\"light\"] },\r\n    { itemType: \"lantern\", dropRate: 500, category: [\"light\"] },\r\n\r\n    // Gems and minerals\r\n    { itemType: \"redgem\", dropRate: 500, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"bluegem\", dropRate: 500, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"greengem\", dropRate: 500, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"geode\", dropRate: 350, category: [\"gem\", \"resource\"] },\r\n    { itemType: \"gold ore\", dropRate: 350, category: [\"resource\"] },\r\n    { itemType: \"stone\", dropRate: 200, category: [\"resource\"] },\r\n    {\r\n      itemType: \"coal\",\r\n      dropRate: 100,\r\n      category: [\"fuel\", \"lantern\", \"resource\", \"light\"],\r\n    },\r\n    { itemType: \"bomb\", dropRate: 100, category: [\"bomb\", \"weapon\"] },\r\n  ];\r\n\r\n  static getDrop = (\r\n    entity: Entity,\r\n    useCategory: string[] = [],\r\n    force: boolean = false,\r\n    increaseDepth: number = 0,\r\n    maxDrops: number = 1,\r\n  ) => {\r\n    if (entity.cloned) {\r\n      return;\r\n    }\r\n\r\n    const currentDepth = entity.room.depth + increaseDepth;\r\n    const dropChance = entity.dropChance || 1;\r\n\r\n    // Skip initial drop chance check if forced\r\n    if (!force && dropChance > 1 && Random.rand() > 1 / dropChance) {\r\n      return null;\r\n    }\r\n\r\n    // Filter eligible drops by depth\r\n    let eligibleDrops = this.drops.filter(\r\n      (drop) => drop.minDepth === undefined || drop.minDepth <= currentDepth,\r\n    );\r\n\r\n    // Filter out unique items if no categories are specified (default drop table)\r\n    if (useCategory.length === 0) {\r\n      eligibleDrops = eligibleDrops.filter(\r\n        (drop) => drop.unique === undefined || drop.unique === false,\r\n      );\r\n    }\r\n\r\n    // Filter by categories or specific items if provided\r\n    if (useCategory.length > 0) {\r\n      eligibleDrops = eligibleDrops.filter(\r\n        (drop) =>\r\n          useCategory.includes(drop.itemType) || // Match specific item\r\n          drop.category.some((cat) => useCategory.includes(cat)), // Match category\r\n      );\r\n    }\r\n\r\n    // Handle case with no eligible drops\r\n    if (eligibleDrops.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Track how many items we've dropped\r\n    let droppedCount = 0;\r\n    let droppedItems = [];\r\n\r\n    // Try to drop items based on drop rates, up to maxDrops\r\n    for (const drop of eligibleDrops) {\r\n      const randomRoll = Random.rand();\r\n      const threshold = 1 / drop.dropRate;\r\n\r\n      if (randomRoll < threshold) {\r\n        const item = this.addNewItem(drop.itemType, entity);\r\n        if (item) {\r\n          droppedItems.push(item);\r\n          droppedCount++;\r\n\r\n          // Stop if we've reached the maximum number of drops\r\n          if (droppedCount >= maxDrops) {\r\n            break;\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n\r\n    // Force drop the most common item if needed and we haven't dropped anything yet\r\n    if (force && droppedCount === 0 && eligibleDrops.length > 0) {\r\n      const mostCommonDrop = eligibleDrops.reduce((prev, curr) =>\r\n        prev.dropRate < curr.dropRate ? prev : curr,\r\n      );\r\n      const item = this.addNewItem(mostCommonDrop.itemType, entity);\r\n      if (item) {\r\n        droppedItems.push(item);\r\n      }\r\n    }\r\n\r\n    return droppedItems.length > 0 ? droppedItems : null;\r\n  };\r\n\r\n  static addNewItem = (itemType: string, entity: Entity): Item | null => {\r\n    const ItemClass = ItemTypeMap[itemType];\r\n    if (!ItemClass) {\r\n      console.error(`Item type \"${itemType}\" is not recognized.`);\r\n      return null;\r\n    }\r\n\r\n    let drop = ItemClass.add(entity.room, entity.x, entity.y);\r\n    if (drop.name === \"coin\") {\r\n      // Generate random number between 0-14 with normal distribution around 7\r\n      drop.stackCount = Utils.randomNormalInt(0, 14);\r\n    }\r\n    if (\r\n      drop instanceof BlueGem ||\r\n      drop instanceof RedGem ||\r\n      drop instanceof GreenGem\r\n    ) {\r\n      // Generate random number between 0-14 with normal distribution around 7\r\n      drop.stackCount = Utils.randomNormalInt(0, 5);\r\n    }\r\n    entity.drops.push(drop);\r\n    return drop;\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player, PlayerDirection } from \"../player/player\";\r\nimport { Direction, Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Usable } from \"./usable/usable\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { Tile } from \"../tile/tile\";\r\nimport { SpawnFloor } from \"../tile/spawnfloor\";\r\nimport { SpikeTrap } from \"../tile/spiketrap\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\n\r\nexport class EntitySpawner extends Usable {\r\n  room: Room;\r\n  count: number;\r\n  player: Player;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.room = level;\r\n    this.count = 0;\r\n    this.tileX = 31;\r\n    this.tileY = 0;\r\n    this.setupEventListeners();\r\n    this.player = this.room.game.players[0];\r\n\r\n    this.stackable = false;\r\n  }\r\n  onUse = (player: Player): void => {};\r\n\r\n  spawnEntity = (entity: Entity): void => {\r\n    Entity.add(this.room, this.player.game, this.player.x, this.player.y);\r\n    //console.log(\"Entity spawned\");\r\n  };\r\n\r\n  commandHandler = (command: string): void => {\r\n    const player = this.room.game.players[0];\r\n    command = command.toLowerCase();\r\n    if (!command.startsWith(\"/new\")) {\r\n      return;\r\n    }\r\n    switch (command.split(\" \")[1]) {\r\n      case \"bishop\":\r\n        this.spawnEntity(\r\n          new BishopEnemy(\r\n            this.room,\r\n            this.player.game,\r\n            this.player.x,\r\n            this.player.y,\r\n          ),\r\n        );\r\n        break;\r\n      default:\r\n        //console.log(`Unknown command: ${command}`);\r\n        break;\r\n    }\r\n    //console.log(`Command executed: ${command}`);\r\n  };\r\n\r\n  private setupEventListeners(): void {\r\n    //console.log(\"Setting up event listeners\");\r\n    globalEventBus.on(\"ChatMessage\", this.commandHandler.bind(this));\r\n    //console.log(\"Event listeners set up\");\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"YOU SHOULD NOT HAVE THIS\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { Player } from \"../player/player\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport { Weapon } from \"./weapon/weapon\";\r\nimport { Armor } from \"./armor\";\r\n\r\nexport class Equippable extends Item {\r\n  wielder: Player | null = null;\r\n  equipped: boolean;\r\n  equipTick: boolean = false;\r\n  useCost: number = 1;\r\n  cooldown: number = 0;\r\n  cooldownMax: number = 0;\r\n  previousWeapon: Weapon | null = null;\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.equipped = false;\r\n  }\r\n\r\n  setWielder = (wielder: Player) => {\r\n    this.wielder = wielder;\r\n  };\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    return true;\r\n  };\r\n\r\n  toggleEquip = () => {\r\n    if ((!this.broken && this.cooldown <= 0) || this instanceof Armor) {\r\n      if (!this.equipped && this.wielder?.inventory?.weapon) {\r\n        this.previousWeapon = this.wielder.inventory.weapon;\r\n      }\r\n\r\n      this.equipped = !this.equipped;\r\n\r\n      if (GameplaySettings.EQUIP_USES_TURN && this.equipped === true)\r\n        this.wielder?.stall();\r\n    } else if (this.broken) {\r\n      this.equipped = false;\r\n      let pronoun = this.name.endsWith(\"s\") ? \"them\" : \"it\";\r\n      this.level.game.pushMessage(\r\n        \"You'll have to fix your \" +\r\n          this.name +\r\n          \" before you can use \" +\r\n          pronoun +\r\n          \".\",\r\n      );\r\n    } else if (this.cooldown > 0) {\r\n      this.level.game.pushMessage(\"Cooldown: \" + this.cooldown);\r\n    }\r\n  };\r\n\r\n  drawEquipped = (delta: number, x: number, y: number) => {\r\n    Game.drawItem(this.tileX, this.tileY, 1, 2, x, y - 1, this.w, this.h);\r\n  };\r\n\r\n  degrade = (degradeAmount: number = 1) => {\r\n    if (!this.degradeable) return;\r\n    this.durability -= degradeAmount * this.useCost;\r\n    if (this.durability <= 0) this.break();\r\n  };\r\n\r\n  break = () => {\r\n    this.durability = 0;\r\n    this.broken = true;\r\n    this.toggleEquip();\r\n    //this.wielder.inventory.removeItem(this);\r\n    //this.wielder = null;\r\n  };\r\n\r\n  onDrop = () => {};\r\n\r\n  dropFromInventory = () => {\r\n    this.wielder = null;\r\n    this.equipped = false;\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { TextParticle } from \"../particle/textParticle\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Usable } from \"./usable/usable\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\n\r\nexport class GodStone extends Usable {\r\n  count: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.count = 0;\r\n    this.tileX = 31;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  onUse = (player: Player): void => {\r\n    this.teleportToExit(player);\r\n  };\r\n  teleportToExit = (player: Player): void => {\r\n    let downLadders = this.level.game.rooms.filter(\r\n      (room) => room.type === RoomType.DOWNLADDER,\r\n    );\r\n    console.log(\"downLadders\", downLadders);\r\n    const targetRoom = downLadders[downLadders.length - 1];\r\n    this.level.game.rooms.forEach((r) => {\r\n      r.entered = true;\r\n      r.calculateWallInfo();\r\n    });\r\n    // Use door transition which sets player.roomGID; prefer first door\r\n    targetRoom.game.changeLevelThroughDoor(player, targetRoom.doors[0], 1);\r\n    player.x = targetRoom.roomX + 2;\r\n    player.y = targetRoom.roomY + 3;\r\n    // Ensure player's map reflects the new room immediately\r\n    try {\r\n      player.map.updateSeenTiles();\r\n      player.map.saveMapData();\r\n    } catch {}\r\n  };\r\n  getDescription = (): string => {\r\n    return \"YOU SHOULD NOT HAVE THIS\";\r\n  };\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Room } from \"../room/room\";\r\n\r\nexport class GoldenKey extends Equippable {\r\n  static itemName = \"goldenKey\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n    this.name = \"goldenKey\";\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"GOLD KEY\\nA heavy gold key.\";\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Player } from \"../player/player\";\r\nimport { Room } from \"../room/room\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { ItemGroup } from \"./itemGroup\";\r\nimport { Random } from \"../utility/random\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { Shadow } from \"../drawable/shadow\";\r\nimport { statsTracker } from \"../game/stats\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\n\r\n// Item class extends Drawable class and represents an item in the game\r\nexport class Item extends Drawable {\r\n  // Item properties\r\n  globalId: string;\r\n  x: number; // x-coordinate of the item\r\n  y: number; // y-coordinate of the item\r\n  w: number; // width of the item\r\n  h: number; // height of the item\r\n  offsetY: number; // offset of the item on the y-axis\r\n  tileX: number; // x-coordinate of the tile where the item is located\r\n  tileY: number; // y-coordinate of the tile where the item is located\r\n  frame: number; // frame number for animation\r\n  level: Room; // level where the item is located\r\n  stackable: boolean; // whether the item is stackable or not\r\n  stackCount: number; // number of items in the stack\r\n  pickedUp: boolean; // whether the item has been picked up or not\r\n  alpha: number; // alpha value for transparency\r\n  scaleFactor: number; // scale factor for size adjustment\r\n  name: string;\r\n  startY: number;\r\n  randomOffset: number;\r\n  durability: number;\r\n  durabilityMax: number;\r\n  broken: boolean;\r\n  description: string;\r\n  drawOffset: number;\r\n  pickupOffsetY: number;\r\n  static itemName: string;\r\n  inChest: boolean;\r\n  chestOffsetY: number;\r\n  sineAnimateFactor: number;\r\n  iconOffset: number;\r\n  grouped: boolean;\r\n  group: ItemGroup = null;\r\n  degradeable: boolean = true;\r\n  cooldown: number = 0;\r\n  maximumStackCount: number = 8;\r\n  private animStartX: number = 0;\r\n  private animStartY: number = 0;\r\n  private animTargetX: number = 0;\r\n  private animTargetY: number = 0;\r\n  private animT: number = 0;\r\n  private animStartDistance: number = null;\r\n  player: Player;\r\n  // Constructor for the Item class\r\n  constructor(level: Room, x: number, y: number) {\r\n    super();\r\n    this.globalId = IdGenerator.generate(\"IT\");\r\n\r\n    // Initialize properties\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.w = 1;\r\n    this.h = 2;\r\n    this.tileX = 0;\r\n    this.tileY = 0;\r\n    this.frame = 0;\r\n    this.stackable = false;\r\n    this.stackCount = 1;\r\n    this.pickedUp = false;\r\n    this.alpha = 1;\r\n    this.scaleFactor = 5;\r\n    this.offsetY = -0.5;\r\n    this.name = \"item\";\r\n    this.startY = y;\r\n    this.randomOffset = Random.rand();\r\n    this.durability = 50;\r\n    this.durabilityMax = 50;\r\n    this.broken = false;\r\n    this.description = \"\";\r\n    this.drawOffset = 0;\r\n    this.pickupOffsetY = 1;\r\n    this.chestOffsetY = 0;\r\n    this.sineAnimateFactor = 1;\r\n    this.iconOffset = 0;\r\n    this.grouped = false;\r\n    this.group = null;\r\n    this.maximumStackCount = 12;\r\n    this.player = null;\r\n  }\r\n\r\n  static add<\r\n    T extends new (room: Room, x: number, y: number, ...rest: any[]) => Item,\r\n  >(this: T, room: Room, x: number, y: number, ...rest: any[]) {\r\n    return new this(room, x, y, ...rest);\r\n  }\r\n\r\n  hoverText = () => {\r\n    return this.name;\r\n  };\r\n\r\n  get animateToInventory() {\r\n    return GameConstants.AUTO_PICKUP_ITEMS.includes(\r\n      this.constructor as new (...args: any[]) => Item,\r\n    );\r\n  }\r\n\r\n  // Empty tick function to be overridden by subclasses\r\n  tick = () => {};\r\n  // Empty tick function for inventory behavior to be overridden by subclasses\r\n  tickInInventory = () => {};\r\n\r\n  // Function to get description of the item, to be overridden by subclasses\r\n  getDescription = (): string => {\r\n    const stackText = this.stackable ? `\\nAmount: ${this.stackCount}` : \"\";\r\n    return `${this.name} \\n${this.description} \\n${stackText}`;\r\n  };\r\n\r\n  animateFromChest = () => {\r\n    this.chestOffsetY = 0.5;\r\n    this.alpha = 0;\r\n    this.inChest = true;\r\n    this.sineAnimateFactor = 0;\r\n    this.setDrawOffset();\r\n  };\r\n\r\n  // Function to play sound when item is picked up\r\n  pickupSound = () => {\r\n    let delay = 0;\r\n    if (GameConstants.ITEM_AUTO_PICKUP)\r\n      delay = Math.ceil(Random.rand() * 200 + 400);\r\n\r\n    if (this.level === this.level.game.room)\r\n      Sound.delayPlay(Sound.genericPickup, delay);\r\n  };\r\n\r\n  // Empty function to be called when item is dropped, to be overridden by subclasses\r\n  onDrop = () => {};\r\n  // Function to be called when item is picked up\r\n  onPickup = (player: Player) => {\r\n    if (!player.inventory.canPickup(this)) return;\r\n    this.player = player;\r\n    if (!this.pickedUp) {\r\n      this.startY = player.y;\r\n\r\n      this.drawableY = this.y;\r\n      this.alpha = 1;\r\n      this.pickedUp = player.inventory.addItem(this);\r\n      if (this.pickedUp) {\r\n        // Initialize lerp-to-inventory animation\r\n        if (this.animateToInventory === true) {\r\n          this.animStartX = this.x;\r\n          this.animStartY = this.y;\r\n          this.animTargetX = this.player.x;\r\n          this.animTargetY = this.player.y;\r\n          this.animT = 0;\r\n        }\r\n        if (this.isNewItem(player)) {\r\n          this.pickupMessage();\r\n\r\n          player.inventory.foundItems.push(this);\r\n        }\r\n        this.pickupSound();\r\n\r\n        // Emit item collected event for statistics tracking\r\n        globalEventBus.emit(EVENTS.ITEM_COLLECTED, { itemId: this.name });\r\n\r\n        if (this.grouped) {\r\n          statsTracker.recordWeaponChoice(this.name);\r\n\r\n          this.group.destroyOtherItems(this);\r\n          this.grouped = false;\r\n          this.group = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  autoPickup = () => {\r\n    if (GameConstants.ITEM_AUTO_PICKUP && this.animateToInventory) {\r\n      this.onPickup(this.level.game.players[this.level.game.localPlayerID]);\r\n    }\r\n  };\r\n\r\n  pickupMessage = () => {\r\n    const name = (this.constructor as typeof Item).itemName;\r\n    let message = this.stackable\r\n      ? `You find ${this.stackCount} ${name}.`\r\n      : `You find a ${name}.`;\r\n\r\n    if (this.stackCount > 1 && this.name === \"coin\") {\r\n      message = `You find ${this.stackCount} ${name}s.`;\r\n    }\r\n\r\n    this.level.game.pushMessage(message);\r\n  };\r\n\r\n  isNewItem = (player: Player) => {\r\n    for (let item of player.inventory.foundItems) {\r\n      if (item.constructor === this.constructor) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    this.setDrawOffset();\r\n  };\r\n\r\n  // Function to get the amount of shade at the item's location\r\n  shadeAmount = () => {\r\n    if (\r\n      GameConstants.SMOOTH_LIGHTING &&\r\n      !GameConstants.SHADE_INLINE_IN_ENTITY_LAYER\r\n    )\r\n      return 0;\r\n    if (!this.level.softVis[this.x]) {\r\n      console.warn(\r\n        \"tried to get shade for tile that does not exist\",\r\n        this.x,\r\n        this.y,\r\n      );\r\n      return 0;\r\n    }\r\n    return this.level.softVis[this.x]?.[this.y];\r\n  };\r\n\r\n  drawStatus = (x: number, y: number) => {};\r\n\r\n  drawBrokenSymbol = (x: number, y: number) => {\r\n    if (this.broken) {\r\n      Game.drawFX(\r\n        5,\r\n        0,\r\n        1,\r\n        1,\r\n        x - 0.5 / GameConstants.TILESIZE,\r\n        y - 0.5 / GameConstants.TILESIZE,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n\r\n  destroy() {\r\n    this.pickedUp = true;\r\n    //this.level.items = this.level.items.filter((x) => x !== this);\r\n  }\r\n\r\n  // Function to draw the item\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n    if (!this.pickedUp) {\r\n      Game.ctx.globalAlpha = this.alpha;\r\n      if (this.alpha < 1) this.alpha += 0.01 * delta;\r\n      this.drawableY = this.y;\r\n      if (this.inChest) {\r\n        this.chestOffsetY -= Math.abs(this.chestOffsetY + 0.5) * 0.035 * delta;\r\n\r\n        if (this.chestOffsetY < -0.47) {\r\n          this.chestOffsetY = -0.5;\r\n        }\r\n      }\r\n      if (this.sineAnimateFactor < 1 && this.chestOffsetY < -0.45)\r\n        this.sineAnimateFactor += 0.2 * delta;\r\n      if (this.scaleFactor > 0) {\r\n        this.scaleFactor *= 0.5 ** delta;\r\n        if (this.scaleFactor < 0.01) this.scaleFactor = 0;\r\n      }\r\n      const scale = 1 / (this.scaleFactor + 1);\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n      Shadow.draw(this.x, this.y, 1, 1);\r\n      //Game.drawItem(0, 0, 1, 1, this.x, this.y, 1, 1);\r\n      this.frame += (delta * (Math.PI * 2)) / 60;\r\n      Game.drawItem(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x + this.w * (scale * -0.5 + 0.5) + this.drawOffset,\r\n        this.y +\r\n          this.sineAnimateFactor * Math.sin(this.frame) * 0.07 -\r\n          1 +\r\n          this.offsetY +\r\n          this.h * (scale * -0.5 + 0.5) +\r\n          this.chestOffsetY,\r\n        this.w * scale,\r\n        this.h * scale,\r\n        this.level.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  setDrawOffset = () => {\r\n    const itemsOnTile = this.level.items.filter(\r\n      (item) => item.x === this.x && item.y === this.y,\r\n    );\r\n    if (itemsOnTile.length > 1) {\r\n      itemsOnTile.forEach((item) => {\r\n        item.drawOffset =\r\n          (-itemsOnTile.length / 2 + itemsOnTile.indexOf(item) + 1) /\r\n          itemsOnTile.length;\r\n      });\r\n    }\r\n  };\r\n\r\n  degrade = () => {\r\n    if (this.degradeable) this.durability -= 1;\r\n  };\r\n\r\n  drawAboveShading = (delta: number) => {\r\n    if (this.pickedUp) {\r\n      if (this.animateToInventory === true && this.player) {\r\n        // Lerp towards the inventory button with ease-out\r\n        const speed = 0.025 * delta; // slower overall speed\r\n        this.animT = Math.min(1, this.animT + speed);\r\n        const t = Math.pow(this.animT, 2); // ease-in cubic\r\n        const posX =\r\n          this.animStartX * (1 - t) +\r\n          this.animTargetX * t +\r\n          (this.player.x - this.animTargetX - this.player.drawX) * t +\r\n          this.drawOffset;\r\n        const posY =\r\n          this.animStartY * (1 - t) +\r\n          this.animTargetY * t +\r\n          (this.player.y - this.animTargetY - this.player.drawY) * t +\r\n          this.chestOffsetY;\r\n\r\n        if (this.animStartDistance === null) {\r\n          this.animStartDistance = Utils.distance(\r\n            this.player.x - this.player.drawX,\r\n            this.player.y - this.player.drawY,\r\n            posX,\r\n            posY,\r\n          );\r\n        }\r\n        const distance = Math.abs(\r\n          Utils.distance(\r\n            this.player.x - this.player.drawX,\r\n            this.player.y - this.player.drawY,\r\n            posX,\r\n            posY,\r\n          ),\r\n        );\r\n        // Fade near the end\r\n        const fadeStart = 0.5;\r\n        if (t > fadeStart) {\r\n          const k = (t - fadeStart) / (1 - fadeStart);\r\n          this.alpha = Math.max(\r\n            1 - k,\r\n            Math.abs(distance / this.animStartDistance),\r\n          );\r\n        }\r\n\r\n        if (GameConstants.ALPHA_ENABLED)\r\n          Game.ctx.globalAlpha = Math.max(0, this.alpha);\r\n        this.x = Math.floor(posX);\r\n        this.y = Math.floor(posY);\r\n\r\n        Game.drawItem(\r\n          this.tileX,\r\n          this.tileY,\r\n          1,\r\n          2,\r\n          posX,\r\n          posY - 1.5, // + diffY,\r\n          this.w,\r\n          this.h,\r\n          this.level.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n        Game.ctx.globalAlpha = 1.0;\r\n\r\n        if (this.animT >= 1) {\r\n          //this.animateToInventory = false;\r\n          this.level.items = this.level.items.filter((x) => x !== this);\r\n        }\r\n        return;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to draw the top layer of the item\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.pickedUp) {\r\n      if (this.animateToInventory === false) {\r\n        this.pickupOffsetY += (4.5 - this.pickupOffsetY) * 0.1 * delta;\r\n      } else return;\r\n\r\n      //this.x += (Math.sin(Date.now() / 50) * delta) / 10;\r\n      this.alpha *= 0.9 ** delta;\r\n      if (Math.abs(this.alpha) < 0.01) {\r\n        this.drawOffset = 0;\r\n        this.pickupOffsetY = 1;\r\n\r\n        this.level.items = this.level.items.filter((x) => x !== this);\r\n      }\r\n\r\n      if (GameConstants.ALPHA_ENABLED)\r\n        Game.ctx.globalAlpha = Math.max(0, this.alpha);\r\n\r\n      Game.drawItem(\r\n        this.tileX,\r\n        this.tileY,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y - this.pickupOffsetY,\r\n        this.w,\r\n        this.h,\r\n      );\r\n\r\n      Game.ctx.globalAlpha = 1.0;\r\n    }\r\n  };\r\n  // Function to draw the item's icon\r\n  drawIcon = (delta: number, x: number, y: number, opacity = 1, count?) => {\r\n    if (GameConstants.ALPHA_ENABLED) Game.ctx.globalAlpha = opacity;\r\n    this.drawDurability(x, y);\r\n    let shake = 0;\r\n    if (this.durability <= 1 && !this.broken)\r\n      shake =\r\n        Math.round(Math.sin(Date.now() / 25) + 1 / 2) /\r\n        2 /\r\n        GameConstants.TILESIZE;\r\n\r\n    if (this.cooldown > 0) {\r\n      Game.ctx.globalAlpha = 0.35;\r\n    }\r\n\r\n    Game.drawItem(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      2,\r\n      x + shake,\r\n      y - 1 + this.iconOffset,\r\n      this.w,\r\n      this.h,\r\n    );\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    let countToUse = count ? count : this.stackCount;\r\n    let countText = countToUse <= 1 ? \"\" : \"\" + countToUse;\r\n    let width = Game.measureText(countText).width;\r\n    let countX = 16 - width;\r\n    let countY = 10;\r\n\r\n    Game.fillTextOutline(\r\n      countText,\r\n      x * GameConstants.TILESIZE + countX,\r\n      y * GameConstants.TILESIZE + countY,\r\n      GameConstants.OUTLINE,\r\n      \"white\",\r\n    );\r\n    this.drawCooldown(x, y);\r\n\r\n    this.drawStatus(x, y);\r\n    this.drawBrokenSymbol(x, y);\r\n  };\r\n\r\n  drawCooldown = (x: number, y: number) => {\r\n    if (this.cooldown > 0) {\r\n      Game.fillTextOutline(\r\n        this.cooldown.toString(),\r\n        x * GameConstants.TILESIZE + 10,\r\n        y * GameConstants.TILESIZE + 10,\r\n        GameConstants.OUTLINE,\r\n        \"white\",\r\n      );\r\n    }\r\n  };\r\n\r\n  // Function to draw the item's durability bar with color transitioning from green to red\r\n  drawDurability = (x: number, y: number) => {\r\n    if (this.durability < this.durabilityMax) {\r\n      // Calculate durability ratio (1 = full, 0 = broken)\r\n      const durabilityRatio = this.durability / this.durabilityMax;\r\n\r\n      // Map durability ratio to hue (120 = green, 0 = red)\r\n      let color = Utils.hsvToHex(\r\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\r\n        1, // Full saturation\r\n        1, // Full value\r\n      );\r\n\r\n      const iconWidth = GameConstants.TILESIZE;\r\n      const barWidth = Math.ceil(durabilityRatio * iconWidth); // Round to nearest pixel\r\n      const barHeight = 2; // 2 pixels tall\r\n\r\n      // Calculate the position of the durability bar\r\n      const barX = Math.ceil(x * GameConstants.TILESIZE); // Round to nearest pixel\r\n      const barY = Math.ceil(\r\n        y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2,\r\n      ); // Round to nearest pixel\r\n\r\n      // Set the fill style for the durability bar\r\n      Game.ctx.fillStyle = color;\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n\r\n      // Draw the durability bar\r\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\r\n\r\n      // Reset settings\r\n      Game.ctx.fillStyle = \"white\";\r\n    }\r\n  };\r\n}\r\n","import { GameplaySettings } from \"../game/gameplaySettings\";\nimport { Item } from \"./item\";\n\nexport class ItemGroup {\n  items: Item[];\n  constructor(items: Item[]) {\n    this.items = items;\n  }\n\n  destroyOtherItems(item: Item) {\n    for (const i of this.items) {\n      if (i !== item) {\n        i.destroy();\n      }\n    }\n    item.level.game.pushMessage(`You choose to keep the ${item.name}.`);\n\n    if (GameplaySettings.UNBREAKABLE_ITEMGROUP_LOOT) {\n      item.degradeable = false;\n      item.level.game.pushMessage(`This one won't break.`);\n      item.description += \" Unbreakable.\";\n    }\n  }\n}\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Equippable } from \"../equippable\";\r\n\r\nexport class AmberRing extends Equippable {\r\n  static itemName = \"amber ring\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 14;\r\n    this.tileY = 2;\r\n    this.name = AmberRing.itemName;\r\n    this.stackable = false;\r\n    this.description = \"A ring of amber\";\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Equippable } from \"../equippable\";\r\n\r\nexport class EmeraldRing extends Equippable {\r\n  static itemName = \"emerald ring\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 11;\r\n    this.tileY = 2;\r\n    this.name = EmeraldRing.itemName;\r\n    this.stackable = false;\r\n    this.description = \"A ring of emerald\";\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Equippable } from \"../equippable\";\r\n\r\nexport class GarnetRing extends Equippable {\r\n  static itemName = \"garnet ring\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 2;\r\n    this.name = GarnetRing.itemName;\r\n    this.stackable = false;\r\n    this.description = \"A ring of garnet\";\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { EmeraldRing } from \"./emeraldRing\";\r\nimport { ZirconRing } from \"./zirconRing\";\r\nimport { AmberRing } from \"./amberRing\";\r\nimport { GarnetRing } from \"./garnetRing\";\r\n\r\nexport class GoldRing extends Equippable {\r\n  static itemName = \"gold ring\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 19;\r\n    this.tileY = 2;\r\n    this.name = GoldRing.itemName;\r\n    this.stackable = false;\r\n    this.description = \"Embed a gem within this ring to imbue it with magic.\";\r\n  }\r\n\r\n  embed = (player: Player, gem: Item) => {\r\n    player.inventory.subtractItem(gem, 1);\r\n    player.inventory.removeItem(this);\r\n    switch (gem.name) {\r\n      case \"emerald\":\r\n        player.inventory.addItem(new EmeraldRing(this.level, this.x, this.y));\r\n        break;\r\n      case \"zircon\":\r\n        player.inventory.addItem(new ZirconRing(this.level, this.x, this.y));\r\n        break;\r\n      case \"amber\":\r\n        player.inventory.addItem(new AmberRing(this.level, this.x, this.y));\r\n        break;\r\n      case \"garnet\":\r\n        player.inventory.addItem(new GarnetRing(this.level, this.x, this.y));\r\n        break;\r\n    }\r\n    this.level.game.pushMessage(`You embed the gem into the ring.`);\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Equippable } from \"../equippable\";\r\n\r\nexport class ZirconRing extends Equippable {\r\n  static itemName = \"zircon ring\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 13;\r\n    this.tileY = 2;\r\n    this.name = ZirconRing.itemName;\r\n    this.stackable = false;\r\n    this.description = \"A ring of zircon\";\r\n  }\r\n}\r\n","import { Item } from \"./item\";\r\nimport { Equippable } from \"./equippable\";\r\nimport { Room } from \"../room/room\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Player } from \"../player/player\";\r\nimport { DownLadder } from \"src/tile/downLadder\";\r\nimport { Door } from \"../tile/door\";\r\nimport { Usable } from \"./usable/usable\";\r\n\r\nexport class Key extends Usable {\r\n  static itemName = \"key\";\r\n  doorID: number;\r\n  depth: number;\r\n  room: Room;\r\n  showPath: boolean;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 1;\r\n    this.tileY = 0;\r\n    this.name = \"key\";\r\n    this.doorID = 0;\r\n    this.depth = null;\r\n    this.room = level;\r\n    this.showPath = false;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    //const ID = this.doorID === 0 ? \"\" : \"ID: \" + this.doorID.toString();\r\n    const depth = this.depth !== null ? \"Depth: \" + this.depth.toString() : \"\";\r\n    return `KEY\\nA key. ${depth}`;\r\n  };\r\n\r\n  onPickup = (player: Player) => {\r\n    if (!this.pickedUp) {\r\n      this.pickedUp = player.inventory.addItem(this);\r\n      if (this.pickedUp) {\r\n        this.level.game.pushMessage(\"You found a key!\");\r\n        this.level.game.pushMessage(\"Click key to toggle path guide\");\r\n\r\n        Sound.keyPickup();\r\n        if (this.depth === null) this.depth = player.depth;\r\n        console.log(this.depth);\r\n      }\r\n    }\r\n  };\r\n\r\n  onUse = (player: Player) => {\r\n    this.showPath = !this.showPath;\r\n    const message = this.showPath ? \"Showing path\" : \"Path hidden\";\r\n    this.room.syncKeyPathParticles();\r\n\r\n    this.room.game.pushMessage(message);\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    //this.updatePathToDoor();\r\n  };\r\n\r\n  onDrop = () => {\r\n    this.room.syncKeyPathParticles();\r\n  };\r\n\r\n  updatePathToDoor = () => {\r\n    try {\r\n      const player = this.level.game.players[this.level.game.localPlayerID];\r\n      const playerRoom = (player as any)?.getRoom?.() || this.level;\r\n      if (!playerRoom) return;\r\n\r\n      // Only show path for sidepath downladder with matching key\r\n      const match = this.level.level.findSidepathDownLadderByKeyID(\r\n        playerRoom,\r\n        this.doorID,\r\n      );\r\n      if (!match) {\r\n        // Clear any previous dots if stored on room\r\n        playerRoom.keyPathDots = undefined;\r\n        return;\r\n      }\r\n\r\n      const { ladder, room: ladderRoom } = match;\r\n\r\n      // If ladder is in the same room, path to its tile (allow drawing on ladder)\r\n      if (ladderRoom === playerRoom) {\r\n        const path = playerRoom.buildTilePathPositions(\r\n          player.x,\r\n          player.y,\r\n          ladder.x,\r\n          ladder.y,\r\n        );\r\n        // Store dots on the room for renderer to consume\r\n        playerRoom.keyPathDots = path;\r\n        return;\r\n      }\r\n\r\n      // Otherwise, compute the room-to-room door path and build dots to the first door in this room\r\n      const doorPath: Door[] | null = playerRoom.findShortestDoorPathTo(\r\n        ladderRoom,\r\n        true,\r\n      );\r\n      if (!doorPath || doorPath.length === 0) {\r\n        playerRoom.keyPathDots = undefined;\r\n        return;\r\n      }\r\n\r\n      const firstDoor = doorPath[0];\r\n      // Path directly to the door tile (allow drawing on door)\r\n      const path = playerRoom.buildTilePathPositions(\r\n        player.x,\r\n        player.y,\r\n        firstDoor.x,\r\n        firstDoor.y,\r\n      );\r\n      playerRoom.keyPathDots = path;\r\n    } catch (e) {\r\n      // Fail quiet\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Torch } from \"./torch\";\r\nimport { Lantern } from \"./lantern\";\r\nimport { Inventory } from \"../../inventory/inventory\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class Candle extends Light {\r\n  static itemName = \"candle\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.fuel = 100; //how many turns before it burns out\r\n    this.tileX = 27;\r\n    this.tileY = 0;\r\n    this.name = \"candle\";\r\n    this.fuelCap = 100;\r\n    this.radius = 4;\r\n    this.stackable = true;\r\n    this.maxBrightness = 2;\r\n    this.maxBrightness = 0.25;\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Torch } from \"./torch\";\r\nimport { Lantern } from \"./lantern\";\r\nimport { Inventory } from \"../../inventory/inventory\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class GlowBugs extends Light {\r\n  static itemName = \"glow bugs\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.fuel = 100; //how many turns before it burns out\r\n    this.tileX = 27;\r\n    this.tileY = 2;\r\n    this.name = \"glow bugs\";\r\n    this.fuelCap = 100;\r\n    this.radius = 6;\r\n    this.stackable = true;\r\n    this.maxBrightness = 2;\r\n    this.maxBrightness = 0.25;\r\n    //teal blue green rgb 0-255\r\n    this.color = [5, 75, 75];\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Candle } from \"./candle\";\r\nimport { Torch } from \"./torch\";\r\nimport { Coal } from \"../resource/coal\";\r\nimport { Light } from \"./light\";\r\n\r\nexport class Lantern extends Light {\r\n  fuelCap: number;\r\n  static itemName = \"lantern\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.fuel = 250;\r\n    this.tileX = 29;\r\n    this.tileY = 0;\r\n    this.fuelCap = 250;\r\n    this.name = \"lantern\";\r\n    this.canRefuel = true;\r\n    this.maxBrightness = 20;\r\n    this.minBrightness = 5;\r\n    this.radius = 7;\r\n    this.broken = this.fuel <= 0 ? true : false;\r\n  }\r\n\r\n  getDescription = () => {\r\n    const percentage = Math.round((this.fuel / this.fuelCap) * 100);\r\n    return `LANTERN - Fuel: ${percentage}%, Capacity: ${this.fuelCap / 50}`;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { LevelConstants } from \"../../level/levelConstants\";\r\n\r\nexport abstract class Light extends Equippable {\r\n  fuel: number;\r\n  fuelCap: number;\r\n  radius: number;\r\n  maxBrightness: number;\r\n  minBrightness: number;\r\n  canRefuel: boolean = false;\r\n  color: [number, number, number];\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 28;\r\n    this.tileY = 0;\r\n    this.fuel = 0;\r\n    this.fuelCap = 250;\r\n    this.maxBrightness = 5;\r\n    this.minBrightness = 2;\r\n    this.radius = 6;\r\n    this.equipped = false;\r\n    this.color = LevelConstants.TORCH_LIGHT_COLOR;\r\n  }\r\n\r\n  updateLighting = () => {\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.wielder.game.rooms[this.wielder.levelID];\r\n    room?.updateLighting();\r\n  };\r\n\r\n  get fuelPercentage() {\r\n    return this.fuel / this.fuelCap;\r\n  }\r\n\r\n  isIgnited = () => {\r\n    if (this.fuel > 0 && this.equipped) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    console.log(\"onDrop\");\r\n    if (this.equipped) {\r\n      this.toggleEquip();\r\n    }\r\n  };\r\n\r\n  setRadius = () => {\r\n    this.wielder.sightRadius = this.radius + this.fuelPercentage * this.radius;\r\n  };\r\n\r\n  setBrightness = () => {\r\n    this.wielder.lightBrightness =\r\n      this.minBrightness + this.fuelPercentage * this.maxBrightness;\r\n  };\r\n\r\n  toggleEquip = () => {\r\n    if (this.fuel > 0) {\r\n      this.equipped = !this.equipped;\r\n      if (this.isIgnited()) {\r\n        //this.setRadius();\r\n        this.setBrightness();\r\n        this.wielder.lightEquipped = true;\r\n        this.wielder.lightColor = this.color;\r\n      } else {\r\n        //this.resetRadius();\r\n        this.resetBrightness();\r\n        this.wielder.lightEquipped = false;\r\n        this.wielder.lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\r\n      }\r\n    } else {\r\n      this.wielder.game.pushMessage(\r\n        \"I'll need some fuel before I can use this\",\r\n      );\r\n    }\r\n\r\n    this.updateLighting();\r\n  };\r\n\r\n  coEquippable = (other: Light): boolean => {\r\n    return !(other instanceof Light);\r\n  };\r\n\r\n  resetRadius = () => {\r\n    this.wielder.sightRadius = this.wielder.defaultSightRadius;\r\n  };\r\n\r\n  resetBrightness = () => {\r\n    this.wielder.lightBrightness = 0.5;\r\n  };\r\n\r\n  burn = () => {\r\n    // Handle active burning, don't burn fuel in empty rooms\r\n    if (this.isIgnited()) {\r\n      const room = (this.wielder as any)?.getRoom\r\n        ? (this.wielder as any).getRoom()\r\n        : this.wielder.game.rooms[this.wielder.levelID];\r\n      const roomCleared = room.roomCleared();\r\n      if (!roomCleared) this.fuel--;\r\n      else this.fuel -= 0.2;\r\n\r\n      this.setRadius();\r\n      this.setBrightness();\r\n    }\r\n\r\n    // Handle depleted fuel\r\n    if (this.fuel <= 0) {\r\n      if (this.stackable) {\r\n        this.stackCount--;\r\n        this.fuel = this.fuelCap;\r\n      }\r\n\r\n      // Check if item should be removed after stack reduction\r\n      if (this.equipped) {\r\n        if (\r\n          (this.stackable && this.stackCount <= 0) ||\r\n          (!this.stackable && !this.canRefuel)\r\n        ) {\r\n          this.resetRadius();\r\n          this.wielder.lightEquipped = false;\r\n          this.wielder.inventory.removeItem(this);\r\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\r\n        } else if (this.canRefuel) {\r\n          this.wielder.game.pushMessage(`${this.name} depletes.`);\r\n          this.equipped = false;\r\n          this.resetRadius();\r\n          this.wielder.lightEquipped = false;\r\n          this.broken = true;\r\n        }\r\n\r\n        this.updateLighting();\r\n      }\r\n    }\r\n  };\r\n\r\n  drawDurability = (x: number, y: number) => {\r\n    if (this.fuel < this.fuelCap) {\r\n      // Calculate durability ratio (1 = full, 0 = broken)\r\n      const durabilityRatio = this.fuel / this.fuelCap;\r\n\r\n      // Map durability ratio to hue (120 = green, 0 = red)\r\n      let color = Utils.hsvToHex(\r\n        120 * durabilityRatio, // Hue from 120 (green) to 0 (red)\r\n        1, // Full saturation\r\n        1, // Full value\r\n      );\r\n\r\n      const iconWidth = GameConstants.TILESIZE;\r\n      const barWidth = durabilityRatio * iconWidth;\r\n      const barHeight = 2; // 2 pixels tall\r\n\r\n      // Calculate the position of the durability bar\r\n      const barX = x * GameConstants.TILESIZE;\r\n      const barY = y * GameConstants.TILESIZE + GameConstants.TILESIZE - 2;\r\n\r\n      // Set the fill style for the durability bar\r\n      Game.ctx.fillStyle = color;\r\n      // Set the interpolation mode to nearest neighbor\r\n      Game.ctx.imageSmoothingEnabled = false;\r\n\r\n      // Draw the durability bar\r\n      Game.ctx.fillRect(barX, barY, barWidth, barHeight);\r\n\r\n      // Reset fill style to default\r\n      Game.ctx.fillStyle = \"white\";\r\n    }\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    this.burn();\r\n  };\r\n\r\n  getDescription = () => {\r\n    return `${this.name}: ${Math.ceil(this.fuelPercentage * 100)}%`;\r\n  };\r\n}\r\n","import { Room } from \"../../room/room\";\r\n\r\nimport { Light } from \"./light\";\r\n\r\nexport class Torch extends Light {\r\n  static itemName = \"torch\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 28;\r\n    this.tileY = 0;\r\n    this.name = \"torch\";\r\n    this.fuelCap = 500;\r\n    this.fuel = 500;\r\n    this.radius = 7;\r\n    this.maxBrightness = 5;\r\n    this.minBrightness = 2;\r\n    this.stackable = true;\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\nimport { Usable } from \"../usable/usable\";\r\n\r\nexport class BlueGem extends Usable {\r\n  static itemName = \"zircon\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 13;\r\n    this.tileY = 0;\r\n    this.name = BlueGem.itemName;\r\n    this.canUseOnOther = true;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other.name === \"gold ring\") {\r\n      let goldRing = other as GoldRing;\r\n      goldRing.embed(player, this);\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"A gem of zircon. Embed it into a gold ring to imbue it with magic.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Lantern } from \"../light/lantern\";\r\nimport { Light } from \"../light/light\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class Coal extends Usable {\r\n  static itemName = \"coal\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 17;\r\n    this.tileY = 0;\r\n    this.stackable = true;\r\n    this.stackCount = Math.ceil(Random.rand() * 7 + 3);\r\n    this.name = Coal.itemName;\r\n    this.description = \"A piece of coal. Fuels lantern.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n  onUse = (player: Player) => {\r\n    let l = player.inventory.hasItem(Lantern);\r\n    if (l instanceof Lantern) {\r\n      if (l.fuel <= l.fuelCap - 50) {\r\n        player.game.pushMessage(\"You add some fuel to your lantern.\");\r\n        this.stackCount -= 1;\r\n        if (this.stackCount <= 0) {\r\n          player.inventory.removeItem(this);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Light) {\r\n      if (other.canRefuel && other.fuel <= 0 && other.broken) {\r\n        let amountToRefuel = Math.min(this.stackCount * 25, other.fuelCap);\r\n        other.fuel += amountToRefuel;\r\n        this.stackCount -= amountToRefuel / 25;\r\n        other.broken = false;\r\n        this.level.game.pushMessage(\r\n          `You add refuel your ${other.name} with ${amountToRefuel / 25} coal.`,\r\n        );\r\n\r\n        if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { RedGem } from \"./redgem\";\r\nimport { BlueGem } from \"./bluegem\";\r\nimport { GreenGem } from \"./greengem\";\r\nimport { Inventory } from \"../../inventory/inventory\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { Random } from \"../../utility/random\";\r\nexport class Geode extends Item {\r\n  static itemName = \"geode\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 15;\r\n    this.tileY = 2;\r\n    this.name = Geode.itemName;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"GEODE\\nWhen in doubt hit it with a hammer.\";\r\n  };\r\n\r\n  split = (inventory: Inventory) => {\r\n    if (inventory.isFull()) {\r\n      this.level.game.pushMessage(\r\n        `You don't have enough space in your inventory to split the geode.`,\r\n      );\r\n    } else {\r\n      const numGems = Math.min(1, Utils.randomNormalInt(1, 3));\r\n      let gemTypes = [BlueGem, RedGem, GreenGem];\r\n      let gemType = gemTypes[Math.floor(Random.rand() * gemTypes.length)];\r\n      this.level.game.pushMessage(\r\n        `You split the geode and find ${numGems} ${gemType.itemName}.`,\r\n      );\r\n\r\n      for (let i = 0; i < numGems; i++) {\r\n        inventory.addItem(new gemType(this.level, this.x, this.y));\r\n      }\r\n      if (this.stackCount > 1) {\r\n        this.stackCount--;\r\n      } else inventory.removeItem(this);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class GoldBar extends Item {\r\n  static itemName = \"gold bar\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 18;\r\n    this.tileY = 2;\r\n    this.name = GoldBar.itemName;\r\n    this.stackable = true;\r\n    this.description = \"A bar of gold. Hit it with a hammer to make a ring.\";\r\n  }\r\n\r\n  smith = (player: Player) => {\r\n    player.inventory.subtractItem(this, 1);\r\n    player.inventory.addItem(new GoldRing(this.level, this.x, this.y));\r\n    this.level.game.pushMessage(`You hammer the gold bar into a ring.`);\r\n\r\n    Sound.playSmith();\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldBar } from \"./goldBar\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class GoldOre extends Item {\r\n  static itemName = \"gold ore\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 18;\r\n    this.tileY = 0;\r\n    this.name = GoldOre.itemName;\r\n    this.stackable = true;\r\n    this.description = \"Some gold ore\";\r\n  }\r\n\r\n  smelt = (player: Player) => {\r\n    if (player.inventory.isFull()) {\r\n      this.level.game.pushMessage(\r\n        `You don't have enough space in your inventory to smelt the gold ore.`,\r\n      );\r\n      return;\r\n    }\r\n    if (this.stackCount >= 3) {\r\n      player.inventory.subtractItem(this, 3);\r\n      player.inventory.addItem(new GoldBar(this.level, this.x, this.y));\r\n      Sound.playSmith();\r\n      this.level.game.pushMessage(`You smelt the gold ore into a gold bar.`);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\n\r\nexport class GreenGem extends Usable {\r\n  static itemName = \"emerald\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 11;\r\n    this.tileY = 0;\r\n    this.name = GreenGem.itemName;\r\n    this.canUseOnOther = true;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other.name === \"gold ring\") {\r\n      let goldRing = other as GoldRing;\r\n      goldRing.embed(player, this);\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"An emerald gem. Embed it into a gold ring to imbue it with magic.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class IronBar extends Item {\r\n  static itemName = \"iron bar\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 16;\r\n    this.tileY = 0;\r\n    this.name = IronBar.itemName;\r\n    this.stackable = true;\r\n    this.description = \"A bar of iron. Hit it with a hammer to make a ring.\";\r\n  }\r\n\r\n  smith = (player: Player) => {\r\n    player.inventory.subtractItem(this, 1);\r\n    //player.inventory.addItem(new GoldRing(this.level, this.x, this.y));\r\n    this.level.game.pushMessage(`You hammer the iron bar into a ring.`);\r\n\r\n    Sound.playSmith();\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldBar } from \"./goldBar\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { IronBar } from \"./ironBar\";\r\n\r\nexport class IronOre extends Item {\r\n  static itemName = \"iron ore\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 16;\r\n    this.tileY = 2;\r\n    this.name = IronOre.itemName;\r\n    this.stackable = true;\r\n    this.description = \"Some iron ore\";\r\n  }\r\n\r\n  smelt = (player: Player) => {\r\n    if (player.inventory.isFull()) {\r\n      this.level.game.pushMessage(\r\n        `You don't have enough space in your inventory to smelt the iron ore.`,\r\n      );\r\n      return;\r\n    }\r\n    if (this.stackCount >= 3) {\r\n      player.inventory.subtractItem(this, 3);\r\n      player.inventory.addItem(new IronBar(this.level, this.x, this.y));\r\n      Sound.playSmith();\r\n      this.level.game.pushMessage(`You smelt the iron ore into a iron bar.`);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\nimport { Usable } from \"../usable/usable\";\r\n\r\nexport class OrangeGem extends Usable {\r\n  static itemName = \"amber\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 14;\r\n    this.tileY = 0;\r\n    this.name = OrangeGem.itemName;\r\n    this.canUseOnOther = true;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other.name === \"gold ring\") {\r\n      let goldRing = other as GoldRing;\r\n      goldRing.embed(player, this);\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"An amber gem. Embed it into a gold ring to imbue it with magic.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { GoldRing } from \"../jewelry/goldRing\";\r\nimport { Usable } from \"../usable/usable\";\r\n\r\nexport class RedGem extends Usable {\r\n  static itemName = \"garnet\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 12;\r\n    this.tileY = 0;\r\n    this.name = RedGem.itemName;\r\n    this.canUseOnOther = true;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other.name === \"gold ring\") {\r\n      let goldRing = other as GoldRing;\r\n      goldRing.embed(player, this);\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"A garnet gem. Embed it into a gold ring to imbue it with magic.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\n\r\nexport class Stone extends Item {\r\n  static itemName = \"stones\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 15;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  getDescription = (): string => {\r\n    return \"STONE\\nSome fragments of stone.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\n\r\nimport { Room } from \"../../room/room\";\r\n\r\nimport { WeaponFragments } from \"../usable/weaponFragments\";\r\n\r\nimport { Random } from \"../../utility/random\";\r\nexport class FishingRod extends Item {\r\n  static itemName = \"fishing rod\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 31;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.1;\r\n    this.description = \"useful for catching fish\";\r\n    this.name = FishingRod.itemName;\r\n  }\r\n\r\n  disassemble = () => {\r\n    this.level.game.pushMessage(\r\n      `You dissassemble your ${this.name} into fragments.`,\r\n    );\r\n\r\n    let inventory =\r\n      this.level.game.players[this.level.game.localPlayerID].inventory;\r\n    let inventoryX = this.x;\r\n    let inventoryY = this.y;\r\n    let numFragments = Math.floor(10 + Random.rand() * 10);\r\n    this.level.game.pushMessage(\r\n      `You dissassemble your fishing rod into ${numFragments} fragments.`,\r\n    );\r\n    inventory.removeItem(this);\r\n    inventory.addItem(\r\n      new WeaponFragments(this.level, inventoryX, inventoryY),\r\n      numFragments,\r\n    );\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\nimport { Dagger } from \"../weapon/dagger\";\r\nimport { WeaponFragments } from \"../usable/weaponFragments\";\r\nimport { Geode } from \"../resource/geode\";\r\nimport { Pickaxe } from \"./pickaxe\";\r\nimport { GoldBar } from \"../resource/goldBar\";\r\nimport { Random } from \"../../utility/random\";\r\nimport { FishingRod } from \"./fishingRod\";\r\nimport { GoldOre } from \"../resource/goldOre\";\r\nexport class Hammer extends Usable {\r\n  static itemName = \"hammer\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 21;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n    this.description = \"useful for breaking weapons down into fragments\";\r\n    this.name = Hammer.itemName;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    const room = (player as any)?.getRoom\r\n      ? (player as any).getRoom()\r\n      : this.level.game.rooms[player.levelID];\r\n    if (room === this.level.game.room) Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon && other.name !== \"dagger\") {\r\n      other.disassemble();\r\n    } else if (other.name === \"dagger\") {\r\n      this.level.game.pushMessage(\r\n        `You probably shouldn't disassemble your dagger...`,\r\n      );\r\n    } else if (other.name === \"hammer\" && other !== this) {\r\n      let hammer = other as Hammer;\r\n      hammer.disassemble(player);\r\n      this.level.game.pushMessage(`I only needed one of those anyways...`);\r\n    } else if (other.name === \"geode\") {\r\n      let geode = other as Geode;\r\n      geode.split(player.inventory);\r\n      this.level.game.pushMessage(`You hit the geode with the hammer.`);\r\n    } else if (other.name === \"pickaxe\") {\r\n      let pickaxe = other as Pickaxe;\r\n      pickaxe.disassemble();\r\n    } else if (other.name === \"gold bar\") {\r\n      let goldBar = other as GoldBar;\r\n      goldBar.smith(player);\r\n    } else if (other.name === \"gold ore\") {\r\n      let gold = other as GoldOre;\r\n      gold.smelt(player);\r\n    } else if (other.name === \"fishing rod\") {\r\n      let fishingRod = other as FishingRod;\r\n      fishingRod.disassemble();\r\n    }\r\n  };\r\n\r\n  disassemble = (player: Player) => {\r\n    let inventoryX = this.x;\r\n    let inventoryY = this.y;\r\n    let numFragments = Math.ceil(Random.rand() * 5 + 5);\r\n    player.inventory.removeItem(this);\r\n    player.inventory.addItem(\r\n      new WeaponFragments(this.level, inventoryX, inventoryY, numFragments),\r\n    );\r\n  };\r\n}\r\n","import { Weapon } from \"../weapon/weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Item } from \"../item\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { WeaponFragments } from \"../usable/weaponFragments\";\r\nimport { Player } from \"../../player/player\";\r\n\r\nexport class Pickaxe extends Weapon {\r\n  static itemName = \"pickaxe\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 30;\r\n    this.tileY = 0;\r\n    this.name = Pickaxe.itemName;\r\n    this.description = \"allows mining rocks without equipping\";\r\n    this.canMine = true;\r\n  }\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"./usable\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Apple extends Usable {\r\n  static itemName = \"apple\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 6;\r\n    this.tileY = 2;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.health < player.maxHealth) {\r\n      player.health = Math.min(player.maxHealth, player.health + 1);\r\n      Sound.playEat();\r\n      if (this.stackCount > 1) {\r\n        this.stackCount--;\r\n      } else player.inventory.removeItem(this);\r\n      player.game.pushMessage(\"You eat the apple and feel better.\");\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"APPLE\\nAppears nutritious.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\n\r\nexport class BluePotion extends Usable {\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 9;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"HEALTH POTION\\nRestores 1 heart\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"./usable\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Fish extends Usable {\r\n  static itemName = \"fish\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 5;\r\n    this.tileY = 2;\r\n\r\n    this.stackable = true;\r\n    //this.animateToInventory = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.health < player.maxHealth) {\r\n      player.health = Math.min(player.maxHealth, player.health + 1);\r\n      Sound.playEat();\r\n      if (this.stackCount > 1) {\r\n        this.stackCount--;\r\n      } else player.inventory.removeItem(this);\r\n      player.game.pushMessage(\"You eat the fish and feel better.\");\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"FISH\\nLooks spiky.\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\n\r\nexport class GreenPotion extends Usable {\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 7;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"GREEN POTION\\nRestores 1 heart\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\n\r\nexport class Heart extends Usable {\r\n  static itemName = \"health potion\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 8;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = Heart.itemName;\r\n    this.stackable = true;\r\n    this.description = \"restores 1 health\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.health < player.maxHealth) {\r\n      player.health = Math.min(player.maxHealth, player.health + 1);\r\n      if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n        Sound.heal();\r\n      if (this.stackCount > 1) {\r\n        this.stackCount--;\r\n      } else player.inventory.removeItem(this);\r\n      player.game.pushMessage(\"You drink the health potion.\");\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\n\r\nexport class Hourglass extends Usable {\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 0;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.durability = 30;\r\n    this.durabilityMax = 30;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (this.broken) return;\r\n    player.stall();\r\n    player.game.pushMessage(\"turn skipped\");\r\n    this.durability -= 1;\r\n    if (this.durability <= 0) {\r\n      this.broken = true;\r\n    }\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"HOURGLASS\\nSkips a turn\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"./usable\";\r\nimport { Sound } from \"../../sound/sound\";\r\n\r\nexport class Shrooms extends Usable {\r\n  static itemName = \"mushrooms\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 6;\r\n    this.tileY = 0;\r\n\r\n    this.stackable = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    if (player.health < player.maxHealth) {\r\n      player.health = Math.min(player.maxHealth, player.health + 0.5);\r\n      Sound.playEat();\r\n      if (this.stackCount > 1) {\r\n        this.stackCount--;\r\n      } else player.inventory.removeItem(this);\r\n      player.game.pushMessage(\"You eat the mushrooms and feel better.\");\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    return \"SHROOMS\\nI don't think I should eat these...\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class SpellbookPage extends Usable {\r\n  static itemName = \"weapon fragments\";\r\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\r\n    super(level, x, y);\r\n    this.tileX = 25;\r\n    this.tileY = 2;\r\n    this.offsetY = -0.3;\r\n    this.name = \"spellbook pages\";\r\n    this.canUseOnOther = true;\r\n    this.stackable = true;\r\n    this.stackCount = stackCount || Math.ceil(Random.rand() * 3);\r\n    this.description = \"Can be used to restore power to a depleted spellbook\";\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    const room = (player as any)?.getRoom\r\n      ? (player as any).getRoom()\r\n      : this.level.game.rooms[player.levelID];\r\n    if (room === this.level.game.room) Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (\r\n      other instanceof Equippable &&\r\n      other.durabilityMax - other.durability >= 1 &&\r\n      other.name === \"spellbook\"\r\n    ) {\r\n      let repairAmount = Math.min(\r\n        other.durabilityMax - other.durability,\r\n        this.stackCount,\r\n      );\r\n      other.durability += repairAmount;\r\n      this.stackCount -= repairAmount;\r\n      other.broken = false;\r\n      this.level.game.pushMessage(\r\n        `You feel your ${other.name}'s power return as you add ${repairAmount} pages to it.`,\r\n      );\r\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\n\r\nexport class Usable extends Item {\r\n  user: Player;\r\n  canUseOnOther: boolean;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.canUseOnOther = false;\r\n  }\r\n  onUse = (player: Player) => {};\r\n  useOnOther = (player: Player, other: Item) => {};\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\n\r\nexport class WeaponBlood extends Usable {\r\n  static itemName = \"cursed blood\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 12;\r\n    this.tileY = 4;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon) {\r\n      other.applyStatus({ blood: true, poison: false });\r\n      player.inventory.removeItem(this);\r\n      this.level.game.pushMessage(\r\n        `You coat your ${other.name} in cursed blood.`,\r\n      );\r\n    }\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"WEAPON BLOOD\\nCan be applied to weapons to deal bleed damage\";\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Random } from \"../../utility/random\";\r\n\r\nexport class WeaponFragments extends Usable {\r\n  static itemName = \"weapon fragments\";\r\n  constructor(level: Room, x: number, y: number, stackCount?: number) {\r\n    super(level, x, y);\r\n    this.tileX = 3;\r\n    this.tileY = 0;\r\n    this.offsetY = -0.3;\r\n    this.name = \"weapon fragments\";\r\n    this.canUseOnOther = true;\r\n    this.stackable = true;\r\n    this.stackCount = stackCount || Math.ceil(Random.rand() * 10) + 7;\r\n    this.description = \"Can be used to repair broken weapons\";\r\n    this.maximumStackCount = 64;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    const room = (player as any)?.getRoom\r\n      ? (player as any).getRoom()\r\n      : this.level.game.rooms[player.levelID];\r\n    if (room === this.level.game.room) Sound.heal();\r\n    player.inventory.removeItem(this);\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (\r\n      other instanceof Equippable &&\r\n      other.durabilityMax - other.durability >= 1 &&\r\n      other.name !== \"spellbook\"\r\n    ) {\r\n      let repairAmount = Math.min(\r\n        other.durabilityMax - other.durability,\r\n        this.stackCount,\r\n      );\r\n      other.durability += repairAmount;\r\n      this.stackCount -= repairAmount;\r\n      other.broken = false;\r\n      this.level.game.pushMessage(\r\n        `You repair your ${other.name} with ${repairAmount} fragments.`,\r\n      );\r\n      if (this.stackCount <= 0) player.inventory.removeItem(this);\r\n    } else if (other.name === \"spellbook\") {\r\n      this.level.game.pushMessage(\r\n        \"You'll need some book pages to replenish that.\",\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Usable } from \"./usable\";\r\nimport { Weapon } from \"../weapon/weapon\";\r\n\r\nexport class WeaponPoison extends Usable {\r\n  static itemName = \"weapon poison\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.tileX = 11;\r\n    this.tileY = 4;\r\n    this.offsetY = -0.3;\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onUse = (player: Player) => {\r\n    player.health = Math.min(player.maxHealth, player.health + 1);\r\n    if (this.level.game.rooms[player.levelID] === this.level.game.room)\r\n      Sound.heal();\r\n\r\n    //this.level.items = this.level.items.filter((x) => x !== this); // removes itself from the level\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof Weapon) {\r\n      other.applyStatus({ poison: true, blood: false });\r\n      player.inventory.removeItem(this);\r\n      this.level.game.pushMessage(\r\n        `You apply the poison to your ${other.name}.`,\r\n      );\r\n      console.log(`weapon poison used on ${other.name}`);\r\n    }\r\n  };\r\n\r\n  getDescription = () => {\r\n    return \"WEAPON POISON\\nCan be applied to weapons to deal poison damage\";\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\n\r\nexport class Dagger extends Weapon {\r\n  static itemName = \"dagger\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 22;\r\n    this.tileY = 0;\r\n    this.name = \"dagger\";\r\n    this.description = \"A basic but dependable weapon.\";\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    if (this.checkForPushables(newX, newY)) return true;\r\n\r\n    const hitSomething = this.executeAttack(newX, newY);\r\n\r\n    return !hitSomething;\r\n  };\r\n\r\n  degrade = () => {};\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { SlashParticle } from \"../../particle/slashParticle\";\r\nimport { Direction } from \"../../game\";\r\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\r\n\r\nexport class DualDagger extends Weapon {\r\n  firstAttack: boolean;\r\n  static itemName = \"dual daggers\";\r\n\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 23;\r\n    this.tileY = 0;\r\n    this.firstAttack = true;\r\n    this.name = \"Dual Daggers\";\r\n    this.useCost = 2;\r\n    this.description =\r\n      \"After the first attack, enemies will not take their turn until you attack or move again.\";\r\n  }\r\n\r\n  hitSound = () => {\r\n    Sound.swing();\r\n    Sound.playShortSlice();\r\n  };\r\n\r\n  tickInInventory = () => {\r\n    this.firstAttack = true;\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    const entities = this.getEntitiesAt(newX, newY).filter((e) => !e.pushable);\r\n    let flag = false;\r\n\r\n    for (let e of entities) {\r\n      this.attack(e, this.damage);\r\n      this.statusEffect(e);\r\n      flag = true;\r\n    }\r\n\r\n    if (flag) {\r\n      this.hitSound();\r\n      this.wielder.setHitXY(newX, newY);\r\n      this.shakeScreen(newX, newY);\r\n\r\n      if (this.firstAttack) {\r\n        this.game.rooms[this.wielder.levelID].particles.push(\r\n          new AttackAnimation(newX, newY, \"dualdagger\", this.wielder.direction),\r\n        );\r\n      } else {\r\n        this.game.rooms[this.wielder.levelID].particles.push(\r\n          new AttackAnimation(\r\n            newX,\r\n            newY,\r\n            \"dualdagger2\",\r\n            this.wielder.direction,\r\n          ),\r\n        );\r\n      }\r\n\r\n      this.game.rooms[this.wielder.levelID].entities = this.game.rooms[\r\n        this.wielder.levelID\r\n      ].entities.filter((e) => !e.dead);\r\n\r\n      if (!this.firstAttack) {\r\n        this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      }\r\n\r\n      if (this.wielder === this.game.players[this.game.localPlayerID])\r\n        this.game.shakeScreen(10 * this.wielder.hitX, 10 * this.wielder.hitY);\r\n\r\n      if (this.firstAttack) {\r\n        this.game.rooms[this.wielder.levelID].tickHitWarnings();\r\n        this.game.rooms[this.wielder.levelID].clearDeadStuff();\r\n        this.firstAttack = false;\r\n        this.wielder.beginSlowMotion();\r\n      }\r\n      this.degrade();\r\n    }\r\n    return !flag;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Direction } from \"../../game\";\r\nimport { Entity } from \"../../entity/entity\";\r\n\r\nexport class Greataxe extends Weapon {\r\n  static itemName = \"greataxe\";\r\n  hitDelay: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 24;\r\n    this.tileY = 2;\r\n    this.damage = 2;\r\n    this.name = \"greataxe\";\r\n\r\n    this.hitDelay = 225;\r\n    this.offsetY = 0;\r\n    this.iconOffset = 0.2;\r\n\r\n    this.durability = 25;\r\n    this.durabilityMax = 25;\r\n    this.useCost = 5;\r\n    this.twoHanded = true;\r\n  }\r\n\r\n  hitSound = () => {\r\n    Sound.swing();\r\n    Sound.playWarHammer();\r\n  };\r\n\r\n  adjustedDamage = () => {\r\n    let hp = this.wielder?.health / this.wielder?.maxHealth;\r\n    let damage = 1;\r\n\r\n    if (hp <= 1) damage = 1;\r\n    if (hp <= 0.75) damage = 2;\r\n    if (hp <= 0.5) damage = 4;\r\n    if (hp <= 0.25) damage = 8;\r\n    return damage;\r\n  };\r\n\r\n  attack = (enemy: Entity) => {\r\n    enemy.hurt(this.wielder, this.adjustedDamage());\r\n    this.statusEffect(enemy);\r\n  };\r\n\r\n  shakeScreen = () => {\r\n    this.wielder.beginSlowMotion();\r\n\r\n    setTimeout(() => {\r\n      this.wielder.endSlowMotion();\r\n      //this.hitSound();\r\n      switch (this.wielder.direction) {\r\n        case Direction.DOWN:\r\n          this.game.shakeScreen(0, -10 * this.adjustedDamage(), false);\r\n          break;\r\n        case Direction.UP:\r\n          this.game.shakeScreen(0, -10 * this.adjustedDamage(), false);\r\n          break;\r\n        case Direction.LEFT:\r\n          this.game.shakeScreen(-5, -10 * this.adjustedDamage(), false);\r\n          break;\r\n        case Direction.RIGHT:\r\n          this.game.shakeScreen(5, -10 * this.adjustedDamage(), false);\r\n          break;\r\n      }\r\n    }, this.hitDelay);\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Direction } from \"../../game\";\r\n\r\nexport class Scythe extends Weapon {\r\n  static itemName = \"scythe\";\r\n  hitDelay: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 23;\r\n    this.tileY = 2;\r\n    this.damage = 1;\r\n    this.name = \"scythe\";\r\n    this.hitDelay = 150;\r\n    this.useCost = 2;\r\n    this.offsetY = 0;\r\n    this.iconOffset = 0.2;\r\n    this.degradeable = false;\r\n    this.twoHanded = true;\r\n  }\r\n\r\n  hitSound = () => {\r\n    Sound.swing();\r\n    //Sound.hit();\r\n    Sound.playSlice();\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let positions: { x: number; y: number }[] = [];\r\n\r\n    switch (this.wielder.direction) {\r\n      case Direction.DOWN:\r\n        positions = [\r\n          { x: newX - 1, y: newY }, // leftCorner\r\n          { x: newX + 1, y: newY }, // rightCorner\r\n          { x: newX - 1, y: newY - 1 }, // leftEdge\r\n          { x: newX + 1, y: newY - 1 }, // rightEdge\r\n        ];\r\n        break;\r\n      case Direction.UP:\r\n        positions = [\r\n          { x: newX + 1, y: newY }, // leftCorner\r\n          { x: newX - 1, y: newY }, // rightCorner\r\n          { x: newX + 1, y: newY + 1 }, // leftEdge\r\n          { x: newX - 1, y: newY + 1 }, // rightEdge\r\n        ];\r\n        break;\r\n      case Direction.LEFT:\r\n        positions = [\r\n          { x: newX, y: newY + 1 }, // leftCorner\r\n          { x: newX, y: newY - 1 }, // rightCorner\r\n          { x: newX + 1, y: newY + 1 }, // leftEdge\r\n          { x: newX + 1, y: newY - 1 }, // rightEdge\r\n        ];\r\n        break;\r\n      case Direction.RIGHT:\r\n        positions = [\r\n          { x: newX, y: newY - 1 }, // leftCorner\r\n          { x: newX, y: newY + 1 }, // rightCorner\r\n          { x: newX - 1, y: newY - 1 }, // leftEdge\r\n          { x: newX - 1, y: newY + 1 }, // rightEdge\r\n        ];\r\n        break;\r\n    }\r\n\r\n    if (this.checkForPushables(newX, newY)) return true;\r\n\r\n    const hitSomething = this.executeAttack(\r\n      newX,\r\n      newY,\r\n      true,\r\n      1,\r\n      true,\r\n      true,\r\n      true,\r\n      false,\r\n    );\r\n    if (hitSomething) {\r\n      if (positions.length > 0) {\r\n        for (const pos of positions) {\r\n          const room = (this.wielder as any)?.getRoom\r\n            ? (this.wielder as any).getRoom()\r\n            : this.game.rooms[this.wielder.levelID];\r\n          if (!room.roomArray[pos.x][pos.y].isSolid()) {\r\n            this.hitEntitiesAt(pos.x, pos.y, 1);\r\n          }\r\n        }\r\n      }\r\n      const room = (this.wielder as any)?.getRoom\r\n        ? (this.wielder as any).getRoom()\r\n        : this.game.rooms[this.wielder.levelID];\r\n      room.tick(this.wielder);\r\n    }\r\n\r\n    return !hitSomething;\r\n  };\r\n\r\n  shakeScreen = () => {\r\n    //this.wielder.beginSlowMotion();\r\n\r\n    setTimeout(() => {\r\n      //this.wielder.endSlowMotion();\r\n      switch (this.wielder.direction) {\r\n        case Direction.DOWN:\r\n          this.game.shakeScreen(0, -5, false);\r\n          break;\r\n        case Direction.UP:\r\n          this.game.shakeScreen(0, -5, false);\r\n          break;\r\n        case Direction.LEFT:\r\n          this.game.shakeScreen(-5, -5, false);\r\n          break;\r\n        case Direction.RIGHT:\r\n          this.game.shakeScreen(5, -5, false);\r\n          break;\r\n      }\r\n    }, this.hitDelay);\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Lantern } from \"../light/lantern\";\r\nimport { Light } from \"../light/light\";\r\nimport { Scythe } from \"./scythe\";\r\nimport { ScytheHandle } from \"./scytheHandle\";\r\n\r\nexport class ScytheBlade extends Usable {\r\n  static itemName = \"scythe blade\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 30;\r\n    this.tileY = 2;\r\n    this.stackable = false;\r\n    this.name = ScytheBlade.itemName;\r\n    this.description = \"The blade of a scythe. Find the handle to use it.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onDrop = () => {\r\n    if (this.level.game.lastDroppedScythePiece === \"blade\") {\r\n      this.level.game.lastDroppedScythePiece = null;\r\n      this.level.items.push(new ScytheHandle(this.level, this.x, this.y));\r\n      this.level.items = this.level.items.filter((item) => item !== this);\r\n    } else if (this.level.game.lastDroppedScythePiece === null) {\r\n      this.level.game.lastDroppedScythePiece = \"blade\";\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof ScytheHandle) {\r\n      player.inventory.removeItem(this);\r\n      player.inventory.removeItem(other);\r\n      player.game.pushMessage(\"You combine the scythe blade and handle.\");\r\n      const room = (player as any)?.getRoom\r\n        ? (player as any).getRoom()\r\n        : player.game.rooms[player.levelID];\r\n      const scythe = new Scythe(room, player.x, player.y);\r\n      player.inventory.addItem(scythe);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Lantern } from \"../light/lantern\";\r\nimport { Light } from \"../light/light\";\r\nimport { Scythe } from \"./scythe\";\r\nimport { ScytheBlade } from \"./scytheBlade\";\r\n\r\nexport class ScytheHandle extends Usable {\r\n  static itemName = \"scythe handle\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 29;\r\n    this.tileY = 2;\r\n    this.stackable = false;\r\n    this.name = ScytheHandle.itemName;\r\n    this.description = \"The handle of a scythe. Find the blade to use it.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onDrop = () => {\r\n    if (this.level.game.lastDroppedScythePiece === \"handle\") {\r\n      this.level.game.lastDroppedScythePiece = null;\r\n      this.level.items.push(new ScytheBlade(this.level, this.x, this.y));\r\n      this.level.items = this.level.items.filter((item) => item !== this);\r\n    } else if (this.level.game.lastDroppedScythePiece === null) {\r\n      this.level.game.lastDroppedScythePiece = \"handle\";\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof ScytheBlade) {\r\n      player.inventory.removeItem(this);\r\n      player.inventory.removeItem(other);\r\n      player.game.pushMessage(\"You combine the scythe blade and handle.\");\r\n      const room = (player as any)?.getRoom\r\n        ? (player as any).getRoom()\r\n        : player.game.rooms[player.levelID];\r\n      const scythe = new Scythe(room, player.x, player.y);\r\n      player.inventory.addItem(scythe);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Lantern } from \"../light/lantern\";\r\nimport { Light } from \"../light/light\";\r\nimport { Scythe } from \"./scythe\";\r\nimport { ScytheHandle } from \"./scytheHandle\";\r\nimport { ShieldRightFragment } from \"./shieldRightFragment\";\r\nimport { Armor } from \"../armor\";\r\n\r\nexport class ShieldLeftFragment extends Usable {\r\n  static itemName = \"left shield fragment\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 1;\r\n    this.tileY = 2;\r\n    this.stackable = false;\r\n    this.name = ShieldLeftFragment.itemName;\r\n    this.description =\r\n      \"The left fragment of a shield. Find the right fragment to use it.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onDrop = () => {\r\n    if (this.level.game.lastDroppedShieldPiece === \"left\") {\r\n      this.level.game.lastDroppedShieldPiece = null;\r\n      this.level.items.push(\r\n        new ShieldRightFragment(this.level, this.x, this.y),\r\n      );\r\n      this.level.items = this.level.items.filter((item) => item !== this);\r\n    } else if (this.level.game.lastDroppedShieldPiece === null) {\r\n      this.level.game.lastDroppedScythePiece = \"blade\";\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof ShieldRightFragment) {\r\n      player.inventory.removeItem(this);\r\n      player.inventory.removeItem(other);\r\n      player.game.pushMessage(\r\n        \"You combine the shield fragments into a shield.\",\r\n      );\r\n      const room = (player as any)?.getRoom\r\n        ? (player as any).getRoom()\r\n        : player.game.rooms[player.levelID];\r\n      const shield = new Armor(room, player.x, player.y);\r\n      player.inventory.addItem(shield);\r\n    }\r\n  };\r\n}\r\n","import { Item } from \"../item\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Game } from \"../../game\";\r\nimport { Room } from \"../../room/room\";\r\nimport { TextParticle } from \"../../particle/textParticle\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Usable } from \"../usable/usable\";\r\nimport { Lantern } from \"../light/lantern\";\r\nimport { Light } from \"../light/light\";\r\nimport { Scythe } from \"./scythe\";\r\nimport { ScytheBlade } from \"./scytheBlade\";\r\nimport { ShieldLeftFragment } from \"./shieldLeftFragment\";\r\nimport { Armor } from \"../armor\";\r\n\r\nexport class ShieldRightFragment extends Usable {\r\n  static itemName = \"right shield fragment\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 2;\r\n    this.tileY = 2;\r\n    this.stackable = false;\r\n    this.name = ShieldRightFragment.itemName;\r\n    this.description =\r\n      \"The right fragment of a shield. Find the left fragment to use it.\";\r\n    this.canUseOnOther = true;\r\n  }\r\n\r\n  onDrop = () => {\r\n    if (this.level.game.lastDroppedShieldPiece === \"right\") {\r\n      this.level.game.lastDroppedShieldPiece = null;\r\n      this.level.items.push(new ShieldLeftFragment(this.level, this.x, this.y));\r\n      this.level.items = this.level.items.filter((item) => item !== this);\r\n    } else if (this.level.game.lastDroppedShieldPiece === null) {\r\n      this.level.game.lastDroppedShieldPiece = \"right\";\r\n    }\r\n  };\r\n\r\n  useOnOther = (player: Player, other: Item) => {\r\n    if (other instanceof ShieldLeftFragment) {\r\n      player.inventory.removeItem(this);\r\n      player.inventory.removeItem(other);\r\n      player.game.pushMessage(\r\n        \"You combine the shield fragments into a shield.\",\r\n      );\r\n      const room = (player as any)?.getRoom\r\n        ? (player as any).getRoom()\r\n        : player.game.rooms[player.levelID];\r\n      const shield = new Armor(room, player.x, player.y);\r\n      player.inventory.addItem(shield);\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { SlashParticle } from \"../../particle/slashParticle\";\r\nimport { Crate } from \"../../entity/object/crate\";\r\nimport { Barrel } from \"../../entity/object/barrel\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\n\r\nexport class Shotgun extends Weapon {\r\n  static itemName = \"shotgun\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 26;\r\n    this.tileY = 0;\r\n    this.name = \"shotgun\";\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let newX2 = 2 * newX - this.wielder.x;\r\n    let newY2 = 2 * newY - this.wielder.y;\r\n    let newX3 = 3 * newX - 2 * this.wielder.x;\r\n    let newY3 = 3 * newY - 2 * this.wielder.y;\r\n    let range = 3;\r\n\r\n    if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\r\n    )\r\n      return true;\r\n    else if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX2, newY2) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\r\n    )\r\n      range = 1;\r\n    else if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX3, newY3) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX3][newY3].isSolid()\r\n    )\r\n      range = 2;\r\n\r\n    let enemyHitCandidates = [];\r\n    let firstPushable = 4;\r\n    let firstNonPushable = 5;\r\n    let firstNonDestroyable = 5;\r\n\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      if (e.pushable) {\r\n        if (e.pointIn(newX, newY)) return true;\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\r\n          firstPushable = 2;\r\n        }\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\r\n          firstPushable = Math.min(firstPushable, 3);\r\n        }\r\n      } else if (e.destroyable) {\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonPushable = 1;\r\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\r\n        }\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          firstNonPushable = Math.min(firstNonPushable, 2);\r\n          enemyHitCandidates.push({ enemy: e, dist: 2 });\r\n        }\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          firstNonPushable = Math.min(firstNonPushable, 3);\r\n          enemyHitCandidates.push({ enemy: e, dist: 3 });\r\n        }\r\n      } else {\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonDestroyable = 1;\r\n        }\r\n        if (e.pointIn(newX2, newY2) && range >= 2) {\r\n          firstNonDestroyable = Math.min(firstNonDestroyable, 2);\r\n        }\r\n        if (e.pointIn(newX3, newY3) && range >= 3) {\r\n          firstNonDestroyable = Math.min(firstNonDestroyable, 3);\r\n        }\r\n      }\r\n    }\r\n\r\n    let targetX = newX3;\r\n    let targetY = newY3;\r\n\r\n    if (\r\n      firstNonDestroyable < firstNonPushable &&\r\n      firstNonDestroyable < firstPushable\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    if (firstNonPushable <= firstPushable) {\r\n      for (const c of enemyHitCandidates) {\r\n        let e = c.enemy;\r\n        let d = c.dist;\r\n        if (d === 3) e.hurt(this.wielder, 0.5);\r\n        else e.hurt(this.wielder, 1);\r\n      }\r\n\r\n      this.hitSound();\r\n      this.wielder.setHitXY(newX, newY);\r\n\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"black\",\r\n      );\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"#ffddff\",\r\n      );\r\n      let gp = new GenericParticle(\r\n        this.game.rooms[this.wielder.levelID],\r\n        0.5 * (newX + this.wielder.x) + 0.5,\r\n        0.5 * (newY + this.wielder.y),\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        \"white\",\r\n        0,\r\n      );\r\n      gp.expirationTimer = 10;\r\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\r\n\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      this.shakeScreen(newX, newY);\r\n      this.degrade();\r\n\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { GenericParticle } from \"../../particle/genericParticle\";\r\n\r\nexport class Slingshot extends Weapon {\r\n  static itemName = \"slingshot\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 26;\r\n    this.tileY = 0;\r\n    this.name = \"Slingshot\";\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let nextX = [newX];\r\n    let nextY = [newY];\r\n    //define arrays for coords beginning with function arguments\r\n    let range: number = 1;\r\n    let l = 0;\r\n    for (\r\n      let i = 0;\r\n      i < 5;\r\n      i++ //loop through range\r\n    ) {\r\n      if (newX === this.wielder.x) {\r\n        nextX.push(newX), nextY.push(nextY[l] + (newY - this.wielder.y));\r\n      }\r\n      if (newY === this.wielder.y) {\r\n        nextX.push(nextX[l] + (newX - this.wielder.x)), nextY.push(newY);\r\n      }\r\n      // push nex coordinates to array of possible moves\r\n      l++;\r\n    }\r\n    if (\r\n      !this.game.rooms[this.wielder.levelID].tileInside(newX, newY) ||\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX][newY].isSolid()\r\n    ) {\r\n      //if current position is inside new position OR is solid\r\n      return true;\r\n    }\r\n    let c = 1;\r\n    for (let i = 0; i < 5; i++) {\r\n      if (\r\n        !this.game.rooms[this.wielder.levelID].tileInside(nextX[c], nextY[c]) ||\r\n        this.game.rooms[this.wielder.levelID].roomArray[nextX[c]][\r\n          nextY[c]\r\n        ].isSolid()\r\n      ) {\r\n        range = c;\r\n        //exit the function if wall is detected\r\n      }\r\n      c++;\r\n      //increase the range each loop until\r\n    }\r\n    //range = 15;\r\n    let enemyHitCandidates = [];\r\n    let firstPushable = range + 1;\r\n    let firstNonPushable = range + 2;\r\n    let firstNonDestroyable = range + 2;\r\n    for (let e of this.game.rooms[this.wielder.levelID].entities) {\r\n      //loop through enemies in this weapons wielders level\r\n      if (e.pushable) {\r\n        let p = 2;\r\n\r\n        //case for pushables\r\n        if (e.pointIn(newX, newY)) return true;\r\n        //if pushable is in new position return true\r\n        for (let i = 0; i < 15; i++) {\r\n          if (e.pointIn(nextX[p - 1], nextY[p - 1]) && range >= p) {\r\n            //enemyHitCandidates.push({ enemy: e, dist: p });\r\n            firstPushable = Math.min(firstPushable, p);\r\n          }\r\n          p++; //run that shit back\r\n        }\r\n      } else if (e.destroyable) {\r\n        //case for destroyables\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonPushable = 1;\r\n          enemyHitCandidates.push({ enemy: e, dist: 1 });\r\n        }\r\n        let d = 2;\r\n        for (let i = 0; i < 15; i++) {\r\n          if (e.pointIn(nextX[d - 1], nextY[d - 1]) && range >= d) {\r\n            firstNonPushable = Math.min(firstNonPushable, d);\r\n            enemyHitCandidates.push({ enemy: e, dist: d });\r\n          }\r\n          d++;\r\n        }\r\n      } else {\r\n        if (e.pointIn(newX, newY) && range >= 1) {\r\n          firstNonDestroyable = 1;\r\n        }\r\n        let n = 2;\r\n        for (let i = 0; i < 15; i++) {\r\n          if (e.pointIn(nextX[n - 1], nextY[n - 1]) && range >= n) {\r\n            firstNonDestroyable = Math.min(firstNonDestroyable, n);\r\n          }\r\n          n++;\r\n\r\n          //if enemy is in new position and range is enough set first non destroyable to 3\r\n        }\r\n      }\r\n    }\r\n    //enemyHitCandidates.splice(1, enemyHitCandidates.length - 1);\r\n\r\n    let targetX = newX; //nextX[range];\r\n    let targetY = newY; //nextY[range];\r\n\r\n    if (\r\n      firstNonDestroyable < firstNonPushable &&\r\n      firstNonDestroyable < firstPushable\r\n      //if a non destroyable comes before the first non pushable and before the first pushable\r\n    ) {\r\n      return true;\r\n      //return true and exit the function\r\n    }\r\n    if (firstNonPushable <= firstPushable) {\r\n      if (enemyHitCandidates.length > 0) {\r\n        const closestEnemy = enemyHitCandidates.reduce(\r\n          (minEnemy, currentEnemy) => {\r\n            if (currentEnemy.dist < minEnemy.dist) {\r\n              return currentEnemy;\r\n            } else return minEnemy;\r\n          },\r\n        );\r\n        closestEnemy.enemy.hurt(this.wielder, 1);\r\n      }\r\n\r\n      //finally bro\r\n      //for the array c of enemyHitCandidates if the enemy distance is 3 only do .5 damage\r\n      //if they're closer do the usual damage\r\n      //hits all candidates in enemyHitCandidates\r\n\r\n      this.hitSound();\r\n      this.wielder.setHitXY(newX, newY);\r\n\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"black\",\r\n      );\r\n      GenericParticle.shotgun(\r\n        this.game.rooms[this.wielder.levelID],\r\n        this.wielder.x + 0.5,\r\n        this.wielder.y,\r\n        targetX + 0.5,\r\n        targetY,\r\n        \"#ffddff\",\r\n      );\r\n      let gp = new GenericParticle(\r\n        this.game.rooms[this.wielder.levelID],\r\n        0.5 * (newX + this.wielder.x) + 0.5,\r\n        0.5 * (newY + this.wielder.y),\r\n        0,\r\n        1,\r\n        0,\r\n        0,\r\n        0,\r\n        \"white\",\r\n        0,\r\n      );\r\n      gp.expirationTimer = 10;\r\n      this.game.rooms[this.wielder.levelID].particles.push(gp);\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX, newY));\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX2, newY2));\r\n      //this.game.levels[this.wielder.levelID].particles.push(new SlashParticle(newX3, newY3));\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      this.shakeScreen(newX * 10, newY * 10);\r\n\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { SlashParticle } from \"../../particle/slashParticle\";\r\nimport type { Enemy } from \"../../entity/enemy/enemy\";\r\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\r\n\r\nexport class Spear extends Weapon {\r\n  static itemName = \"spear\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 24;\r\n    this.tileY = 0;\r\n    this.name = \"spear\";\r\n    this.description =\r\n      \"Hits enemies in front of you within a range of 2 tiles.\";\r\n    this.iconOffset = 0.1; //default 0\r\n    this.offsetY = -0.25; //default -0.25\r\n    this.useCost = 1;\r\n    this.degradeable = false;\r\n  }\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let newX2 = 2 * newX - this.wielder.x;\r\n    let newY2 = 2 * newY - this.wielder.y;\r\n    let hitEnemies = false;\r\n\r\n    // Check if there are any pushables at first tile - these completely block the spear\r\n    const pushables = this.getEntitiesAt(newX, newY).filter((e) => e.pushable);\r\n    if (pushables.length > 0) return true;\r\n\r\n    // Get entities at both tiles\r\n    const entitiesAtFirstTile = this.getEntitiesAt(newX, newY);\r\n    const entitiesAtSecondTile = this.getEntitiesAt(newX2, newY2);\r\n\r\n    // Check if first tile has non-enemy entities that would block the spear\r\n    const nonEnemiesAtFirstTile = entitiesAtFirstTile.filter(\r\n      (e) => !e.pushable && !e.isEnemy,\r\n    );\r\n    if (nonEnemiesAtFirstTile.length > 0) {\r\n      // Hit non-enemy entities at first tile and stop (blocked)\r\n      for (const entity of nonEnemiesAtFirstTile) {\r\n        this.attack(entity);\r\n      }\r\n      this.hitSound();\r\n      this.attackAnimation(newX, newY);\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      this.shakeScreen(newX, newY);\r\n      this.degrade();\r\n      return false;\r\n    }\r\n\r\n    // Hit all enemies at first tile (spear penetrates through)\r\n    const enemiesAtFirstTile = entitiesAtFirstTile.filter(\r\n      (e) => !e.pushable && e.isEnemy,\r\n    );\r\n    if (enemiesAtFirstTile.length > 0) {\r\n      for (const enemy of enemiesAtFirstTile) {\r\n        this.attack(enemy);\r\n      }\r\n      hitEnemies = true;\r\n    }\r\n\r\n    // Hit all enemies at second tile (if tile is valid and not solid)\r\n    if (\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX2] &&\r\n      this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2] &&\r\n      !this.game.rooms[this.wielder.levelID].roomArray[newX2][newY2].isSolid()\r\n    ) {\r\n      const enemiesAtSecondTile = entitiesAtSecondTile.filter(\r\n        (e) => !e.pushable && e.isEnemy,\r\n      );\r\n      if (enemiesAtSecondTile.length > 0) {\r\n        for (const enemy of enemiesAtSecondTile) {\r\n          this.attack(enemy);\r\n        }\r\n        hitEnemies = true;\r\n      }\r\n    }\r\n\r\n    if (hitEnemies) {\r\n      this.hitSound();\r\n      this.attackAnimation(newX2, newY2); // Show animation at the furthest point\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n      this.shakeScreen(newX2, newY2);\r\n      this.degrade();\r\n    }\r\n\r\n    return !hitEnemies;\r\n  };\r\n}\r\n","import { Game } from \"../../game\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { PlayerFireball } from \"../../projectile/playerFireball\";\r\nimport type { Entity } from \"../../entity/entity\";\r\nimport { Utils } from \"../../utility/utils\";\r\nimport { Direction } from \"../../game\";\r\nimport { SpellbookPage } from \"../usable/spellbookPage\";\r\nexport class Spellbook extends Weapon {\r\n  targets: Entity[];\r\n  isTargeting: boolean;\r\n  static itemName = \"spellbook\";\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n    this.range = 4;\r\n    this.tileX = 25;\r\n    this.tileY = 0;\r\n    this.canMine = true;\r\n    this.name = Spellbook.itemName;\r\n    this.isTargeting = false;\r\n    this.durability = 10;\r\n    this.durabilityMax = 10;\r\n    this.description = \"Hits multiple enemies within a range of 4 tiles.\";\r\n    this.degradeable = false;\r\n    this.cooldownMax = 25;\r\n  }\r\n\r\n  getTargets = () => {\r\n    this.targets = [];\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.game.rooms[this.wielder.levelID];\r\n    let entities = room.entities;\r\n    this.targets = entities.filter(\r\n      (e) =>\r\n        !e.pushable &&\r\n        Utils.distance(this.wielder.x, this.wielder.y, e.x, e.y) <=\r\n          this.range &&\r\n        e.destroyable,\r\n    );\r\n    let enemies = this.targets.filter((e) => e.isEnemy === true);\r\n    //console.log(enemies);\r\n    if (enemies.length > 0) return enemies;\r\n    else {\r\n      //console.log(this.targets);\r\n      return this.targets;\r\n    }\r\n  };\r\n\r\n  disassemble = () => {\r\n    if (this.equipped) {\r\n      this.game.pushMessage(\r\n        \"I should probably unequip this before I try to disassemble it...\",\r\n      );\r\n      return;\r\n    }\r\n    this.game.pushMessage(\r\n      `You tear the remaining pages out of your spellbook.`,\r\n    );\r\n\r\n    let inventory = this.wielder.inventory;\r\n    let inventoryX = this.x;\r\n    let inventoryY = this.y;\r\n    let numFragments = Math.floor(this.durability);\r\n    this.toggleEquip();\r\n    //inventory.weapon = null;\r\n    inventory.removeItem(this);\r\n    inventory.addItem(\r\n      new SpellbookPage(this.level, inventoryX, inventoryY, numFragments),\r\n    );\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    //if (!this.checkForCollidables(newX, newY)) return true;\r\n\r\n    this.getTargets();\r\n    let direction = this.wielder.direction;\r\n    let flag = false;\r\n    let targets = this.targets;\r\n    const isTargetInDirection = (e: Entity): boolean => {\r\n      switch (direction) {\r\n        case Direction.UP:\r\n          return e.y <= newY;\r\n        case Direction.RIGHT:\r\n          return e.x >= newX;\r\n        case Direction.DOWN:\r\n          return e.y >= newY;\r\n        case Direction.LEFT:\r\n          return e.x <= newX;\r\n        default:\r\n          return false;\r\n      }\r\n    };\r\n    if (targets.length > 0) {\r\n      this.isTargeting = true;\r\n    } else {\r\n      this.isTargeting = false;\r\n    }\r\n\r\n    targets = targets.filter(isTargetInDirection);\r\n\r\n    // Store only the targets that actually get hit\r\n    const actuallyHitTargets: Entity[] = [];\r\n\r\n    for (let e of targets) {\r\n      const room = (this.wielder as any)?.getRoom\r\n        ? (this.wielder as any).getRoom()\r\n        : this.game.rooms[this.wielder.levelID];\r\n      if (!room.roomArray[e.x][e.y].isSolid()) {\r\n        e.hurt(this.wielder, 1);\r\n\r\n        room.projectiles.push(new PlayerFireball(this.wielder, e.x, e.y));\r\n\r\n        // Add to the list of actually hit targets\r\n        actuallyHitTargets.push(e);\r\n        flag = true;\r\n      }\r\n    }\r\n\r\n    // Update this.targets to only contain targets that were actually hit\r\n    this.targets = actuallyHitTargets;\r\n\r\n    if (flag) {\r\n      this.hitSound();\r\n      this.wielder.setHitXY(newX, newY);\r\n\r\n      const room = (this.wielder as any)?.getRoom\r\n        ? (this.wielder as any).getRoom()\r\n        : this.game.rooms[this.wielder.levelID];\r\n      room.tick(this.wielder);\r\n      this.shakeScreen(newX, newY);\r\n      Sound.playMagic();\r\n      //this.degrade();\r\n      this.cooldown = this.cooldownMax;\r\n\r\n      setTimeout(() => {\r\n        this.isTargeting = false;\r\n      }, 100);\r\n    }\r\n    return !flag;\r\n  };\r\n\r\n  drawBeams = (playerDrawX: number, playerDrawY: number, delta: number) => {\r\n    // Clear existing beam effects each frame\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.game.rooms[this.wielder.levelID];\r\n    room.beamEffects = [];\r\n\r\n    if (this.isTargeting) {\r\n      for (let target of this.targets) {\r\n        // Create a new beam effect from the player to the enemy\r\n        room.addBeamEffect(\r\n          playerDrawX,\r\n          playerDrawY,\r\n          target.x - (target as any).drawX,\r\n          target.y - (target as any).drawY,\r\n          target,\r\n        );\r\n\r\n        // Retrieve the newly added beam effect\r\n        const beam = room.beamEffects[room.beamEffects.length - 1];\r\n\r\n        // Render the beam\r\n        beam.render(\r\n          playerDrawX,\r\n          playerDrawY,\r\n          target.x - (target as any).drawX,\r\n          target.y - (target as any).drawY,\r\n          \"cyan\",\r\n          2,\r\n          delta,\r\n        );\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Direction } from \"../../game\";\r\n\r\nexport class Sword extends Weapon {\r\n  static itemName = \"sword\";\r\n  hitDelay: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 28;\r\n    this.tileY = 2;\r\n    this.damage = 1;\r\n    this.name = \"sword\";\r\n    //this.hitDelay = 150;\r\n    this.degradeable = false;\r\n    this.useCost = 2;\r\n    this.offsetY = -0.5;\r\n    //this.iconOffset = 0.2;\r\n  }\r\n\r\n  hitSound = () => {\r\n    Sound.hit();\r\n    Sound.playShortSlice();\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    let leftCorner = { x: newX, y: newY };\r\n    let rightCorner = { x: newX, y: newY };\r\n\r\n    let positions = [leftCorner, rightCorner];\r\n\r\n    switch (this.wielder.direction) {\r\n      case Direction.DOWN:\r\n        leftCorner.x = newX - 1;\r\n        rightCorner.x = newX + 1;\r\n\r\n        break;\r\n      case Direction.UP:\r\n        leftCorner.x = newX + 1;\r\n        rightCorner.x = newX - 1;\r\n\r\n        break;\r\n      case Direction.LEFT:\r\n        leftCorner.y = newY + 1;\r\n        rightCorner.y = newY - 1;\r\n\r\n        break;\r\n      case Direction.RIGHT:\r\n        leftCorner.y = newY - 1;\r\n        rightCorner.y = newY + 1;\r\n\r\n        break;\r\n    }\r\n\r\n    if (this.checkForPushables(newX, newY)) return true;\r\n\r\n    const hitSomething = this.executeAttack(\r\n      newX,\r\n      newY,\r\n      true,\r\n      1,\r\n      true,\r\n      true,\r\n      true,\r\n      false,\r\n    );\r\n    if (hitSomething) {\r\n      for (const pos of positions) {\r\n        if (\r\n          !this.game.rooms[this.wielder.levelID].roomArray[pos.x][\r\n            pos.y\r\n          ].isSolid()\r\n        ) {\r\n          const damage = 1;\r\n          this.hitEntitiesAt(pos.x, pos.y, damage);\r\n        }\r\n      }\r\n      this.game.rooms[this.wielder.levelID].tick(this.wielder);\r\n    }\r\n\r\n    return !hitSomething;\r\n  };\r\n\r\n  shakeScreen = () => {\r\n    //this.wielder.beginSlowMotion();\r\n\r\n    setTimeout(() => {\r\n      //this.wielder.endSlowMotion();\r\n      switch (this.wielder.direction) {\r\n        case Direction.DOWN:\r\n          this.game.shakeScreen(0, -5, false);\r\n          break;\r\n        case Direction.UP:\r\n          this.game.shakeScreen(0, -5, false);\r\n          break;\r\n        case Direction.LEFT:\r\n          this.game.shakeScreen(-5, -5, false);\r\n          break;\r\n        case Direction.RIGHT:\r\n          this.game.shakeScreen(5, -5, false);\r\n          break;\r\n      }\r\n    }, this.hitDelay);\r\n  };\r\n}\r\n","import { Weapon } from \"./weapon\";\r\nimport { Room } from \"../../room/room\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { Direction } from \"../../game\";\r\n\r\nexport class Warhammer extends Weapon {\r\n  static itemName = \"warhammer\";\r\n  hitDelay: number;\r\n  constructor(level: Room, x: number, y: number) {\r\n    super(level, x, y);\r\n\r\n    this.tileX = 22;\r\n    this.tileY = 2;\r\n    this.damage = 2;\r\n    this.name = \"warhammer\";\r\n    this.hitDelay = 225;\r\n    this.useCost = 2;\r\n    //this.cooldownMax = 10;\r\n    this.degradeable = false;\r\n  }\r\n\r\n  hitSound = () => {\r\n    Sound.swing();\r\n    Sound.playWarHammer();\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    if (this.checkForPushables(newX, newY)) return true;\r\n\r\n    const hitSomething = this.executeAttack(newX, newY);\r\n    if (hitSomething) {\r\n      this.cooldown = this.cooldownMax;\r\n    }\r\n    return !hitSomething;\r\n  };\r\n\r\n  shakeScreen = () => {\r\n    this.wielder.beginSlowMotion();\r\n\r\n    setTimeout(() => {\r\n      this.wielder.endSlowMotion();\r\n      switch (this.wielder.direction) {\r\n        case Direction.DOWN:\r\n          this.game.shakeScreen(0, -30, false);\r\n          break;\r\n        case Direction.UP:\r\n          this.game.shakeScreen(0, -30, false);\r\n          break;\r\n        case Direction.LEFT:\r\n          this.game.shakeScreen(-5, -30, false);\r\n          break;\r\n        case Direction.RIGHT:\r\n          this.game.shakeScreen(5, -30, false);\r\n          break;\r\n      }\r\n    }, this.hitDelay);\r\n  };\r\n}\r\n","import { Room } from \"../../room/room\";\r\nimport { Game } from \"../../game\";\r\nimport { Equippable } from \"../equippable\";\r\nimport { Sound } from \"../../sound/sound\";\r\nimport { SlashParticle } from \"../../particle/slashParticle\";\r\nimport type { Entity } from \"../../entity/entity\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { WeaponFragments } from \"../usable/weaponFragments\";\r\nimport { Enemy } from \"../../entity/enemy/enemy\";\r\nimport { AttackAnimation } from \"../../particle/attackAnimation\";\r\nimport { Direction } from \"../../game\";\r\nimport { Armor } from \"../armor\";\r\n\r\ninterface WeaponStatus {\r\n  poison: boolean;\r\n  blood: boolean;\r\n}\r\n\r\nexport abstract class Weapon extends Equippable {\r\n  game: Game;\r\n  range: number;\r\n  canMine: boolean;\r\n  damage: number;\r\n  status: WeaponStatus;\r\n  static itemName = \"weapon\";\r\n  name: string;\r\n  statusApplicationCount: number;\r\n  hitDelay: number;\r\n  cooldown: number;\r\n  cooldownMax: number;\r\n  twoHanded: boolean;\r\n  constructor(level: Room, x: number, y: number, status?: WeaponStatus) {\r\n    super(level, x, y);\r\n\r\n    if (level) this.game = level.game;\r\n\r\n    this.canMine = false;\r\n    this.range = 1;\r\n    this.damage = 1;\r\n    this.status = status || { poison: false, blood: false };\r\n    this.durability = 50;\r\n    this.durabilityMax = 50;\r\n    this.statusApplicationCount = 0;\r\n    this.equipTick = true;\r\n    this.name = this.constructor.prototype.itemName;\r\n    this.cooldown = 0;\r\n    this.cooldownMax = 0;\r\n    this.twoHanded = false;\r\n  }\r\n  hoverText = () => {\r\n    //return \"Equip \" + this.name;\r\n    return this.name;\r\n  };\r\n  break = () => {\r\n    this.durability = 0;\r\n    this.wielder.inventory.weapon = null;\r\n    this.toggleEquip();\r\n    //this.wielder.inventory.removeItem(this);\r\n    //this.wielder = null;\r\n    this.game.pushMessage(\"Your weapon breaks\");\r\n    if (this.status.poison || this.status.blood) {\r\n      this.clearStatus();\r\n    }\r\n    this.broken = true;\r\n  };\r\n\r\n  coEquippable = (other: Equippable): boolean => {\r\n    if (other instanceof Weapon) return false;\r\n    if (other instanceof Armor && this.twoHanded) return false;\r\n    return true;\r\n  };\r\n\r\n  applyStatus = (status: WeaponStatus) => {\r\n    this.status = status;\r\n    if (this.status.blood) {\r\n      //this.damage = Math.max(0.5, this.damage - 0.5);\r\n    }\r\n  };\r\n\r\n  clearStatus = () => {\r\n    const status = this.status.poison ? \"poison\" : \"bleed\";\r\n    this.game.pushMessage(`Your ${this.name}'s ${status} effect dries up`);\r\n\r\n    this.status = { poison: false, blood: false };\r\n    this.statusApplicationCount = 0;\r\n  };\r\n\r\n  statusEffect = (entity: Entity) => {\r\n    if (!entity.isEnemy) return;\r\n    const enemy = entity as Enemy;\r\n    if (!enemy.status.poison.active && !enemy.status.bleed.active) {\r\n      if (this.wielder.applyStatus(enemy, this.status) && enemy.health > 0) {\r\n        this.statusApplicationCount++;\r\n        const message = this.status.poison\r\n          ? `Your weapon poisons the ${enemy.name}`\r\n          : `Your cursed weapon draws blood from the ${enemy.name}`;\r\n\r\n        //this.game.pushMessage(message);\r\n\r\n        //if (this.statusApplicationCount >= 10) this.clearStatus();\r\n      }\r\n    }\r\n  };\r\n\r\n  disassemble = () => {\r\n    if (!this.degradeable) {\r\n      this.game.pushMessage(\r\n        \"You can't disassemble this item because it's not degradeable.\",\r\n      );\r\n      return;\r\n    }\r\n    if (this.equipped) {\r\n      this.game.pushMessage(\r\n        \"I should probably unequip this before I try to disassemble it...\",\r\n      );\r\n      return;\r\n    }\r\n    this.game.pushMessage(`You dissassemble your ${this.name} into fragments.`);\r\n\r\n    let inventory = this.wielder.inventory;\r\n    let inventoryX = this.x;\r\n    let inventoryY = this.y;\r\n    let numFragments = Math.floor(this.durability / 1.5);\r\n    this.toggleEquip();\r\n    //inventory.weapon = null;\r\n    inventory.removeItem(this);\r\n    inventory.addItem(\r\n      new WeaponFragments(this.level, inventoryX, inventoryY),\r\n      numFragments,\r\n    );\r\n  };\r\n\r\n  dropFromInventory = () => {\r\n    if (this.wielder.inventory.weapon === this)\r\n      this.wielder.inventory.weapon = null;\r\n    this.wielder = null;\r\n    this.equipped = false;\r\n  };\r\n\r\n  checkForCollidables = (x: number, y: number): boolean => {\r\n    for (const e of this.getEntitiesAt(x, y)) {\r\n      if (e.collidable === true) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  weaponMove = (newX: number, newY: number): boolean => {\r\n    if (this.checkForPushables(newX, newY)) return true;\r\n\r\n    const hitSomething = this.executeAttack(newX, newY);\r\n\r\n    return !hitSomething;\r\n  };\r\n\r\n  attack = (enemy: Entity, damage?: number) => {\r\n    enemy.hurt(this.wielder, damage || this.damage);\r\n    this.statusEffect(enemy);\r\n  };\r\n\r\n  attackAnimation = (newX: number, newY: number) => {\r\n    this.wielder.setHitXY(newX, newY);\r\n\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.game?.rooms?.[this.wielder.levelID];\r\n    if (!room) {\r\n      console.error(\"🔫 WEAPON: Cannot add particle - invalid room state\");\r\n      return;\r\n    }\r\n    room.particles.push(\r\n      new AttackAnimation(newX, newY, this.name, this.wielder.direction),\r\n    );\r\n  };\r\n\r\n  shakeScreen = (eX: number, eY: number) => {\r\n    const wielderRoom = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.wielder.game.rooms[this.wielder.levelID];\r\n    if (wielderRoom === this.wielder.game.room)\r\n      this.wielder.shakeScreen(this.wielder.x, this.wielder.y, eX, eY);\r\n  };\r\n\r\n  hitSound = () => {\r\n    Sound.swing();\r\n    Sound.hit();\r\n  };\r\n\r\n  drawStatus = (x: number, y: number) => {\r\n    if (this.status.poison || this.status.blood) {\r\n      let tileX = 3;\r\n      if (this.status.poison) {\r\n        tileX = 4;\r\n      }\r\n      if (this.status.blood) {\r\n        tileX = 3;\r\n      }\r\n\r\n      Game.drawFX(\r\n        tileX,\r\n        0,\r\n        1,\r\n        1,\r\n        x - 1 / GameConstants.TILESIZE,\r\n        y - 1 / GameConstants.TILESIZE,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n\r\n  getDescription = (): string => {\r\n    let broken = this.broken ? \" (broken)\" : \"\";\r\n    let status = [];\r\n    let durability = \"\";\r\n    if (this.status.poison) status.push(\"Poison\");\r\n    if (this.status.blood) status.push(\" Bleed\");\r\n    if (this.durability < this.durabilityMax)\r\n      durability = ` Durability: ${this.durability}/${this.durabilityMax}`;\r\n    return `${this.name}${broken}\\n${status.join(\", \")}\\n${durability}\\n${this.description}\\ndamage: ${this.damage}`;\r\n  };\r\n\r\n  tick = () => {\r\n    this.updateCooldown();\r\n  };\r\n\r\n  updateCooldown = () => {\r\n    if (this.cooldown > 0) {\r\n      this.cooldown--;\r\n      if (this.cooldown > 0 && this.equipped) {\r\n        this.equipped = false;\r\n        const hasPreviousWeapon = this.wielder.inventory.items.some(\r\n          (item) => item === this.previousWeapon,\r\n        );\r\n        if (\r\n          hasPreviousWeapon &&\r\n          this.previousWeapon !== null &&\r\n          this.previousWeapon.broken === false &&\r\n          this.previousWeapon.cooldown === 0\r\n        ) {\r\n          this.wielder.inventory.weapon = this.previousWeapon;\r\n          this.previousWeapon.equipped = true;\r\n        } else {\r\n          this.wielder.inventory.weapon = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // returns true if nothing was hit, false if the player should move\r\n\r\n  protected getEntitiesAt(x: number, y: number): Entity[] {\r\n    if (!this.game) {\r\n      console.error(\"🔫 WEAPON: this.game is undefined\");\r\n      return [];\r\n    }\r\n\r\n    if (!this.wielder) {\r\n      console.error(\"🔫 WEAPON: this.wielder is undefined\");\r\n      return [];\r\n    }\r\n\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.game?.rooms?.[this.wielder.levelID];\r\n    if (!room) {\r\n      console.error(\"🔫 WEAPON: current room is undefined\");\r\n      return [];\r\n    }\r\n\r\n    return room.entities.filter((e) => e.destroyable && e.pointIn(x, y));\r\n  }\r\n\r\n  protected hitEntitiesAt(x: number, y: number, damage?: number): boolean {\r\n    const entities = this.getEntitiesAt(x, y).filter((e) => !e.pushable);\r\n    let hitSomething = false;\r\n\r\n    for (const entity of entities) {\r\n      this.attack(entity, damage);\r\n      hitSomething = true;\r\n    }\r\n\r\n    return hitSomething;\r\n  }\r\n\r\n  protected checkForPushables(x: number, y: number): boolean {\r\n    const direction = this.wielder.direction;\r\n    let behindX = x;\r\n    let behindY = y;\r\n    switch (direction) {\r\n      case Direction.DOWN:\r\n        behindY += 1;\r\n        break;\r\n      case Direction.UP:\r\n        behindY -= 1;\r\n        break;\r\n      case Direction.LEFT:\r\n        behindX -= 1;\r\n        break;\r\n      case Direction.RIGHT:\r\n        behindX += 1;\r\n        break;\r\n    }\r\n\r\n    const room = (this.wielder as any)?.getRoom\r\n      ? (this.wielder as any).getRoom()\r\n      : this.game?.rooms?.[this.wielder.levelID];\r\n    if (!room) return false;\r\n\r\n    const unpushables = this.getEntitiesAt(behindX, behindY).filter(\r\n      (e) => !e.pushable,\r\n    );\r\n    const hasUnpushablesBehind = unpushables.length > 0;\r\n\r\n    const behindTile = room.roomArray[behindX]?.[behindY];\r\n    const isSolidBehind = !behindTile || behindTile.isSolid();\r\n\r\n    const pushables = this.getEntitiesAt(x, y).filter((e) => e.pushable);\r\n    const hasSpaceToPush = !isSolidBehind && !hasUnpushablesBehind;\r\n\r\n    return pushables.length > 0 && hasSpaceToPush;\r\n  }\r\n\r\n  protected applyHitDelay = (hitSomething: boolean) => {\r\n    if (hitSomething) {\r\n      this.wielder.busyAnimating = true;\r\n      setTimeout(() => {\r\n        this.wielder.busyAnimating = false;\r\n      }, this.hitDelay || 0);\r\n    }\r\n  };\r\n\r\n  protected executeAttack(\r\n    targetX: number,\r\n    targetY: number,\r\n    animated: boolean = true,\r\n    damage: number = this.damage,\r\n    shakeScreen: boolean = true,\r\n    sound: boolean = true,\r\n    mainAttack: boolean = true,\r\n    shouldTick: boolean = true,\r\n  ): boolean {\r\n    const hitSomething = this.hitEntitiesAt(targetX, targetY, damage);\r\n\r\n    this.applyHitDelay(hitSomething);\r\n\r\n    if (hitSomething) {\r\n      if (sound) this.hitSound();\r\n      this.wielder.setHitXY(targetX, targetY);\r\n      if (animated) this.attackAnimation(targetX, targetY);\r\n      if (shouldTick) {\r\n        const room = (this.wielder as any)?.getRoom\r\n          ? (this.wielder as any).getRoom()\r\n          : this.game?.rooms?.[this.wielder.levelID];\r\n        if (room) room.tick(this.wielder);\r\n      }\r\n      if (shakeScreen) this.shakeScreen(targetX, targetY);\r\n      if (mainAttack) this.degrade();\r\n    }\r\n\r\n    return hitSomething;\r\n  }\r\n}\r\n","import { Barrel } from \"../entity/object/barrel\";\r\nimport { Block } from \"../entity/object/block\";\r\nimport { Bush } from \"../entity/object/bush\";\r\nimport { Chest } from \"../entity/object/chest\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Mushrooms } from \"../entity/object/mushrooms\";\r\nimport { Pot } from \"../entity/object/pot\";\r\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\r\nimport { Pumpkin } from \"../entity/object/pumpkin\";\r\nimport { Sprout } from \"../entity/object/sprout\";\r\nimport { TombStone } from \"../entity/object/tombStone\";\r\nimport { Rock } from \"../entity/resource/rockResource\";\r\nimport { SkinType } from \"../tile/tile\";\r\nimport { RoomType } from \"../room/room\";\r\nimport { CoalResource } from \"../entity/resource/coalResource\";\r\nimport { GoldResource } from \"../entity/resource/goldResource\";\r\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\r\nimport { GlowBugEnemy } from \"../entity/enemy/glowBugEnemy\";\r\nimport { Tree } from \"../entity/object/tree\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { DownladderMaker } from \"../entity/downladderMaker\";\r\nimport { DecoBlock } from \"../entity/object/decoBlock\";\r\nimport { Furnace } from \"../entity/object/furnace\";\r\n\r\n// Enemy imports\r\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\r\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\r\nimport { ObsidianResource } from \"../entity/resource/obsidianResource\";\r\nimport { PawnEnemy } from \"../entity/enemy/pawnEnemy\";\r\nimport { BigFrogEnemy } from \"../entity/enemy/bigFrogEnemy\";\r\nimport { BeetleEnemy } from \"../entity/enemy/beetleEnemy\";\r\nimport { GarnetResource } from \"../entity/resource/garnetResource\";\r\nimport { ZirconResource } from \"../entity/resource/zirconResource\";\r\nimport { AmberResource } from \"../entity/resource/amberResource\";\r\n\r\n// Enemy ID mapping for integration with level progression system\r\nexport const enemyClassToId: Map<any, number> = new Map([\r\n  [CrabEnemy, 1],\r\n  [FrogEnemy, 2],\r\n  [ZombieEnemy, 3],\r\n  [SkullEnemy, 4],\r\n  [EnergyWizardEnemy, 5],\r\n  [ChargeEnemy, 6],\r\n  [RookEnemy, 7],\r\n  [BishopEnemy, 8],\r\n  [ArmoredzombieEnemy, 9],\r\n  [BigSkullEnemy, 10],\r\n  [QueenEnemy, 11],\r\n  [KnightEnemy, 12],\r\n  [BigKnightEnemy, 13],\r\n  [FireWizardEnemy, 14],\r\n  [ArmoredSkullEnemy, 15],\r\n  [MummyEnemy, 16],\r\n  [SpiderEnemy, 17],\r\n  [PawnEnemy, 18],\r\n  [BigFrogEnemy, 19],\r\n  [BeetleEnemy, 20],\r\n]);\r\n\r\nexport class Environment {\r\n  type: EnvType;\r\n  skin: SkinType;\r\n  constructor(type: EnvType) {\r\n    this.type = type;\r\n    this.skin = this.type as unknown as SkinType;\r\n  }\r\n}\r\n\r\n// Import the enemy minimum depth from level.ts\r\n//export { enemyMinimumDepth } from \"./level\";\r\n\r\ninterface PropInfo {\r\n  class: any; // The class constructor\r\n  weight?: number; // Spawn weight\r\n  blacklistedEnvironments?: EnvType[]; // Environments where this prop shouldn't spawn\r\n  additionalParams?: any[]; // Extra constructor parameters if needed\r\n}\r\n\r\ninterface EnemyInfo {\r\n  class: any;\r\n  weight?: number;\r\n  minDepth?: number;\r\n  blacklistedEnvironments?: EnvType[];\r\n  additionalParams?: any[];\r\n  specialSpawnLogic?: \"clearFloor\" | \"bigEnemy\";\r\n  size?: { w: number; h: number };\r\n}\r\n\r\ninterface EnvironmentData {\r\n  props: PropInfo[];\r\n  enemies: EnemyInfo[];\r\n}\r\n\r\n// A do-nothing prop used to control spawn density without placing anything\r\nexport class NullProp {\r\n  static add(): void {\r\n    // intentionally empty\r\n  }\r\n}\r\n\r\nconst environmentData: Record<EnvType, EnvironmentData> = {\r\n  [EnvType.DUNGEON]: {\r\n    props: [\r\n      { class: Crate, weight: 1 },\r\n      { class: Barrel, weight: 1 },\r\n      { class: TombStone, weight: 0.01, additionalParams: [1] },\r\n      { class: TombStone, weight: 0.01, additionalParams: [0] },\r\n      { class: Pumpkin, weight: 0.05 },\r\n      { class: Block, weight: 1 },\r\n      { class: Pot, weight: 1 },\r\n      { class: PottedPlant, weight: 1 },\r\n      { class: Mushrooms, weight: 0.1 },\r\n      { class: Bush, weight: 0.1 },\r\n      { class: Sprout, weight: 0.025 },\r\n      { class: Chest, weight: 0.025 },\r\n      { class: DecoBlock, weight: 0.05 },\r\n      { class: Furnace, weight: 0.05 },\r\n    ],\r\n    enemies: [\r\n      // Early game enemies (depth 0+)\r\n      { class: CrabEnemy, weight: 1.0, minDepth: 0 },\r\n      { class: ZombieEnemy, weight: 1.2, minDepth: 0 },\r\n      { class: SkullEnemy, weight: 1.0, minDepth: 0 },\r\n      { class: SpiderEnemy, weight: 1.0, minDepth: 2 },\r\n      { class: MummyEnemy, weight: 1.0, minDepth: 2 },\r\n      { class: PawnEnemy, weight: 1.0, minDepth: 1 },\r\n\r\n      // Mid game enemies (depth 1+)\r\n      { class: EnergyWizardEnemy, weight: 0.1, minDepth: 1 },\r\n      { class: RookEnemy, weight: 0.6, minDepth: 1 },\r\n      { class: BishopEnemy, weight: 0.6, minDepth: 1 },\r\n      { class: ArmoredzombieEnemy, weight: 0.8, minDepth: 1 },\r\n      { class: KnightEnemy, weight: 0.7, minDepth: 1 },\r\n\r\n      // Late game enemies (depth 2+)\r\n      { class: ChargeEnemy, weight: 0.5, minDepth: 2 },\r\n      {\r\n        class: BigSkullEnemy,\r\n        weight: 0.1,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: QueenEnemy, weight: 0.2, minDepth: 2 },\r\n      {\r\n        class: BigKnightEnemy,\r\n        weight: 0.1,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: FireWizardEnemy, weight: 0.1, minDepth: 2 },\r\n      { class: ArmoredSkullEnemy, weight: 0.5, minDepth: 2 },\r\n      {\r\n        class: BigFrogEnemy,\r\n        weight: 0.1,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n    ],\r\n  },\r\n  [EnvType.CAVE]: {\r\n    props: [\r\n      { class: NullProp, weight: 1 },\r\n      { class: CoalResource, weight: 1 },\r\n      { class: GoldResource, weight: 0.1 },\r\n      { class: EmeraldResource, weight: 0.05 },\r\n      { class: GarnetResource, weight: 0.05 },\r\n      { class: ZirconResource, weight: 0.05 },\r\n      { class: AmberResource, weight: 0.05 },\r\n      { class: Block, weight: 0.2 },\r\n      { class: Rock, weight: 0.4 },\r\n      { class: Mushrooms, weight: 0.3 },\r\n      { class: Pot, weight: 0.2 },\r\n      { class: Chest, weight: 0.1 },\r\n    ],\r\n    enemies: [\r\n      // Cave-dwelling creatures\r\n      { class: CrabEnemy, weight: 1.5, minDepth: 0 }, // Crabs like caves\r\n      { class: SpiderEnemy, weight: 1.2, minDepth: 1 }, // Cave spiders\r\n      { class: SkullEnemy, weight: 0.8, minDepth: 0 }, // Ancient cave remains\r\n\r\n      // Mid depth cave enemies\r\n      { class: ChargeEnemy, weight: 1.0, minDepth: 2 }, // Charging creatures\r\n      { class: ArmoredzombieEnemy, weight: 0.6, minDepth: 1 }, // Less common undead\r\n      { class: EnergyWizardEnemy, weight: 0.5, minDepth: 1 }, // Rare magic users\r\n      { class: BeetleEnemy, weight: 0.5, minDepth: 1 }, // Rare magic users\r\n\r\n      // Deep cave threats\r\n      {\r\n        class: BigSkullEnemy,\r\n        weight: 0.15,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: ArmoredSkullEnemy, weight: 0.7, minDepth: 2 },\r\n      //{ class: MummyEnemy, weight: 0.4, minDepth: 2 }, // Ancient cave mummies\r\n    ],\r\n  },\r\n  [EnvType.FOREST]: {\r\n    props: [\r\n      { class: NullProp, weight: 2 },\r\n      { class: TombStone, weight: 0.035, additionalParams: [1] },\r\n      { class: TombStone, weight: 0.035, additionalParams: [0] },\r\n      { class: Pumpkin, weight: 0.05 },\r\n      { class: Bush, weight: 2 },\r\n      { class: Sprout, weight: 0.05 },\r\n      { class: Mushrooms, weight: 0.2 },\r\n      { class: Rock, weight: 0.1 },\r\n      { class: Chest, weight: 0.05 },\r\n      { class: GlowBugEnemy, weight: 0.05 },\r\n      { class: Tree, weight: 0.1 },\r\n    ],\r\n    enemies: [\r\n      // Nature creatures (higher weights)\r\n      { class: GlowBugEnemy, weight: 1.5, minDepth: 0 },\r\n      { class: FrogEnemy, weight: 0.25, minDepth: 0 }, // Frogs love forests\r\n      { class: BeetleEnemy, weight: 0.1, minDepth: 0 }, // Rare magic users\r\n      //{ class: SpiderEnemy, weight: 0.25, minDepth: 0 }, // Forest spiders\r\n\r\n      // Less common forest enemies\r\n      { class: CrabEnemy, weight: 0.3, minDepth: 0 }, // Rare in forest\r\n      { class: ZombieEnemy, weight: 0.2, minDepth: 0 }, // Very rare undead\r\n      { class: SkullEnemy, weight: 0.1, minDepth: 0 }, // Ancient forest spirits\r\n\r\n      // Rare magical forest creatures\r\n      { class: EnergyWizardEnemy, weight: 0.4, minDepth: 1 }, // Forest wizards\r\n      //{ class: ChargeEnemy, weight: 0.3, minDepth: 2 }, // Charging forest beasts\r\n      {\r\n        class: BigFrogEnemy,\r\n        weight: 0.1,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n    ],\r\n  },\r\n  [EnvType.DESERT]: {\r\n    props: [\r\n      { class: NullProp, weight: 2 },\r\n      { class: Barrel, weight: 8 },\r\n      { class: TombStone, weight: 5, additionalParams: [1] },\r\n      { class: TombStone, weight: 2, additionalParams: [0] },\r\n      { class: Block, weight: 5 },\r\n      { class: Mushrooms, weight: 0.5 },\r\n      { class: Bush, weight: 0.25 },\r\n      { class: Pot, weight: 0.15 },\r\n      { class: Rock, weight: 0.05 },\r\n      { class: Chest, weight: 0.05 },\r\n    ],\r\n    enemies: [\r\n      // Decay and poison themed enemies\r\n      { class: ZombieEnemy, weight: 1.8, minDepth: 0 }, // Swamp zombies\r\n      { class: FrogEnemy, weight: 1.5, minDepth: 1 }, // Poison frogs\r\n      { class: MummyEnemy, weight: 1.0, minDepth: 2 }, // Preserved in swamp\r\n      { class: ArmoredzombieEnemy, weight: 1.2, minDepth: 1 },\r\n\r\n      // Other swamp dwellers\r\n      { class: CrabEnemy, weight: 0.8, minDepth: 0 }, // Swamp crabs\r\n      { class: SkullEnemy, weight: 1.0, minDepth: 0 }, // Bog spirits\r\n      { class: SpiderEnemy, weight: 0.6, minDepth: 0 }, // Swamp spiders\r\n\r\n      // Powerful swamp creatures\r\n      { class: ArmoredSkullEnemy, weight: 0.8, minDepth: 2 },\r\n      { class: EnergyWizardEnemy, weight: 0.3, minDepth: 1 }, // Swamp witches\r\n    ],\r\n  },\r\n  [EnvType.GLACIER]: {\r\n    props: [\r\n      { class: NullProp, weight: 2 },\r\n      { class: Block, weight: 20 },\r\n      { class: Crate, weight: 5 },\r\n      { class: Rock, weight: 0.6 },\r\n      { class: Chest, weight: 0.4 },\r\n    ],\r\n    enemies: [\r\n      // Ice and cold themed enemies\r\n      { class: CrabEnemy, weight: 1.0, minDepth: 0 }, // Ice crabs\r\n      { class: ChargeEnemy, weight: 1.2, minDepth: 2 }, // Charging ice beasts\r\n      { class: KnightEnemy, weight: 1.0, minDepth: 1 }, // Frozen knights\r\n      {\r\n        class: BigKnightEnemy,\r\n        weight: 0.15,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n\r\n      // Hardy creatures that survive cold\r\n      { class: ArmoredzombieEnemy, weight: 0.8, minDepth: 1 }, // Frozen zombies\r\n      { class: ArmoredSkullEnemy, weight: 0.9, minDepth: 2 }, // Ice spirits\r\n      { class: RookEnemy, weight: 0.7, minDepth: 1 }, // Ice constructs\r\n      { class: BishopEnemy, weight: 0.7, minDepth: 1 },\r\n\r\n      // Rare glacier threats\r\n      {\r\n        class: BigSkullEnemy,\r\n        weight: 0.1,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n    ],\r\n  },\r\n  [EnvType.CASTLE]: {\r\n    props: [\r\n      { class: NullProp, weight: 1 },\r\n      { class: Crate, weight: 10 },\r\n      { class: Barrel, weight: 8 },\r\n      { class: Block, weight: 6 },\r\n      { class: PottedPlant, weight: 0.4 },\r\n      { class: Pot, weight: 0.3 },\r\n      { class: Chest, weight: 0.2 },\r\n    ],\r\n    enemies: [\r\n      // Royal guards and castle defenders\r\n      { class: KnightEnemy, weight: 2.0, minDepth: 0 }, // Castle knights\r\n      {\r\n        class: BigKnightEnemy,\r\n        weight: 0.2,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: PawnEnemy, weight: 1.5, minDepth: 0 }, // Castle pawns\r\n      { class: RookEnemy, weight: 1, minDepth: 0 }, // Castle guardians\r\n      { class: BishopEnemy, weight: 1, minDepth: 0 }, // Castle clergy\r\n      { class: QueenEnemy, weight: 0.5, minDepth: 0 }, // Royal enemies\r\n\r\n      // Castle undead\r\n      { class: ArmoredzombieEnemy, weight: 0.25, minDepth: 0 }, // Fallen guards\r\n      { class: ArmoredSkullEnemy, weight: 0.25, minDepth: 0 }, // Armored spirits\r\n\r\n      // Other castle inhabitants\r\n      { class: EnergyWizardEnemy, weight: 0.1, minDepth: 0 }, // Court wizards\r\n      { class: FireWizardEnemy, weight: 0.1, minDepth: 0 }, // Battle mages\r\n      { class: ChargeEnemy, weight: 0.1, minDepth: 0 }, // War beasts\r\n    ],\r\n  },\r\n  [EnvType.DARK_CASTLE]: {\r\n    props: [\r\n      { class: NullProp, weight: 2 },\r\n      { class: Crate, weight: 6 },\r\n      { class: Barrel, weight: 4 },\r\n      { class: Chest, weight: 0.15 },\r\n      { class: DecoBlock, weight: 2 },\r\n    ],\r\n    enemies: [\r\n      // Chess-themed defenders\r\n      { class: RookEnemy, weight: 1.2, minDepth: 1 },\r\n      { class: BishopEnemy, weight: 1.2, minDepth: 1 },\r\n      { class: KnightEnemy, weight: 1.6, minDepth: 1 },\r\n      { class: QueenEnemy, weight: 0.35, minDepth: 2 },\r\n\r\n      // Court mages\r\n      { class: EnergyWizardEnemy, weight: 0.4, minDepth: 1 },\r\n      { class: FireWizardEnemy, weight: 0.35, minDepth: 2 },\r\n\r\n      // Elite guards and constructs\r\n      {\r\n        class: BigKnightEnemy,\r\n        weight: 0.15,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: ArmoredSkullEnemy, weight: 0.8, minDepth: 2 },\r\n    ],\r\n  },\r\n  [EnvType.PLACEHOLDER]: {\r\n    props: [{ class: NullProp, weight: 1 }],\r\n    enemies: [],\r\n  },\r\n  [EnvType.MAGMA_CAVE]: {\r\n    props: [\r\n      { class: NullProp, weight: 1 },\r\n      { class: ObsidianResource, weight: 0.5 },\r\n      // Keep sparse and harsh\r\n      { class: Chest, weight: 0.05 },\r\n    ],\r\n    enemies: [\r\n      // Only high-level, late-game threats\r\n      // Depth 1 enemies\r\n      { class: ArmoredzombieEnemy, weight: 0.8, minDepth: 1 },\r\n      { class: BishopEnemy, weight: 0.6, minDepth: 1 },\r\n      { class: EnergyWizardEnemy, weight: 0.1, minDepth: 1 },\r\n      { class: KnightEnemy, weight: 0.7, minDepth: 1 },\r\n      { class: RookEnemy, weight: 0.6, minDepth: 1 },\r\n\r\n      // Depth 2 enemies\r\n      { class: ArmoredSkullEnemy, weight: 0.7, minDepth: 2 },\r\n      {\r\n        class: BigKnightEnemy,\r\n        weight: 0.3,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      {\r\n        class: BigSkullEnemy,\r\n        weight: 0.35,\r\n        minDepth: 2,\r\n        specialSpawnLogic: \"clearFloor\",\r\n        size: { w: 2, h: 2 },\r\n      },\r\n      { class: BishopEnemy, weight: 0.5, minDepth: 2 },\r\n      { class: ChargeEnemy, weight: 0.5, minDepth: 2 },\r\n      { class: FireWizardEnemy, weight: 0.9, minDepth: 2 },\r\n      { class: MummyEnemy, weight: 0.5, minDepth: 2 },\r\n      { class: QueenEnemy, weight: 0.25, minDepth: 2 },\r\n      { class: SpiderEnemy, weight: 0.5, minDepth: 2 },\r\n    ],\r\n  },\r\n};\r\n\r\nexport { environmentData, PropInfo, EnemyInfo, EnvironmentData };\r\n","import { Game } from \"../game\";\nimport { GameConstants } from \"../game/gameConstants\";\nimport { Partition, PartialLevel } from \"./partitionGenerator\";\nimport { LevelParameters } from \"./levelParametersGenerator\";\n\nexport interface AnimationConfig {\n  partitionSplitDelay: number;\n  pathfindingDelay: number;\n  largeStepDelay: number;\n  animationConstant: number;\n  enabled: boolean;\n}\n\nexport interface VisualizationState {\n  currentStep: string;\n  progress: number;\n  partitions: Partition[];\n  centerX: number;\n  centerY: number;\n}\n\nexport class GenerationVisualizer {\n  private game: Game;\n  private animationConfig: AnimationConfig;\n  private visualizationState: VisualizationState;\n  private debugMode: boolean;\n\n  constructor(game: Game) {\n    this.game = game;\n    this.debugMode = document.cookie.includes(\"showgeneration=true\");\n\n    this.animationConfig = {\n      partitionSplitDelay: this.debugMode ? 10 : 0,\n      pathfindingDelay: this.debugMode ? 100 : 0,\n      largeStepDelay: this.debugMode ? 100 : 0,\n      animationConstant: 1,\n      enabled: this.debugMode,\n    };\n\n    this.visualizationState = {\n      currentStep: \"initializing\",\n      progress: 0,\n      partitions: [],\n      centerX: 0,\n      centerY: 0,\n    };\n  }\n\n  /**\n   * Updates the animation configuration\n   */\n  updateAnimationConfig(config: Partial<AnimationConfig>): void {\n    this.animationConfig = { ...this.animationConfig, ...config };\n  }\n\n  /**\n   * Sets the visualization state for rendering\n   */\n  setVisualizationState(\n    partitions: Partition[],\n    centerX: number,\n    centerY: number,\n    step: string = \"generating\",\n    progress: number = 0,\n  ): void {\n    this.visualizationState = {\n      currentStep: step,\n      progress,\n      partitions,\n      centerX,\n      centerY,\n    };\n  }\n\n  /**\n   * Draws the current generation state\n   */\n  draw(delta: number): void {\n    // Clear the canvas\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\n\n    if (this.debugMode) {\n      this.drawGenerationProgress(delta);\n    } else {\n      this.drawSimpleLoadingScreen();\n    }\n  }\n\n  /**\n   * Draws detailed generation progress for debug mode\n   */\n  private drawGenerationProgress(delta: number): void {\n    if (this.visualizationState.partitions.length > 0) {\n      // Draw all partitions\n      this.visualizationState.partitions.forEach((partition) => {\n        this.drawPartition(\n          partition,\n          delta,\n          this.visualizationState.centerX,\n          this.visualizationState.centerY,\n        );\n      });\n\n      // Draw progress information\n      this.drawProgressInfo();\n    }\n  }\n\n  /**\n   * Draws a simple loading screen for normal mode\n   */\n  private drawSimpleLoadingScreen(): void {\n    this.game.drawTextScreen(\"generating level\");\n  }\n\n  /**\n   * Draws an individual partition\n   */\n  drawPartition(\n    partition: Partition,\n    delta: number,\n    levelCenterX: number,\n    levelCenterY: number,\n  ): void {\n    // Draw partition rectangle\n    Game.ctx.fillStyle = partition.fillStyle;\n    Game.ctx.fillRect(\n      Math.round(GameConstants.WIDTH / 2 + partition.x - levelCenterX),\n      Math.round(GameConstants.HEIGHT / 2 + partition.y - levelCenterY),\n      partition.w,\n      partition.h,\n    );\n\n    // Draw connections\n    this.drawPartitionConnections(partition, levelCenterX, levelCenterY);\n\n    // Draw partition info if in debug mode\n    if (this.debugMode) {\n      this.drawPartitionInfo(partition, levelCenterX, levelCenterY);\n    }\n  }\n\n  /**\n   * Draws connections for a partition\n   */\n  private drawPartitionConnections(\n    partition: Partition,\n    levelCenterX: number,\n    levelCenterY: number,\n  ): void {\n    Game.ctx.fillStyle = \"white\";\n    for (let connection of partition.connections) {\n      Game.ctx.fillRect(\n        Math.round(GameConstants.WIDTH / 2 + connection.x - levelCenterX),\n        Math.round(GameConstants.HEIGHT / 2 + connection.y - levelCenterY),\n        1,\n        1,\n      );\n    }\n  }\n\n  /**\n   * Draws debug information for a partition\n   */\n  private drawPartitionInfo(\n    partition: Partition,\n    levelCenterX: number,\n    levelCenterY: number,\n  ): void {\n    const x = Math.round(GameConstants.WIDTH / 2 + partition.x - levelCenterX);\n    const y = Math.round(GameConstants.HEIGHT / 2 + partition.y - levelCenterY);\n\n    Game.ctx.fillStyle = \"yellow\";\n    Game.ctx.font = \"8px Arial\";\n    Game.ctx.fillText(`${partition.type}`, x + 2, y + 10);\n    Game.ctx.fillText(`D:${partition.distance}`, x + 2, y + 20);\n  }\n\n  /**\n   * Draws progress information overlay\n   */\n  private drawProgressInfo(): void {\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n    Game.ctx.fillRect(10, 10, 200, 60);\n\n    Game.ctx.fillStyle = \"white\";\n    Game.ctx.font = \"12px Arial\";\n    Game.ctx.fillText(`Step: ${this.visualizationState.currentStep}`, 20, 30);\n    Game.ctx.fillText(\n      `Partitions: ${this.visualizationState.partitions.length}`,\n      20,\n      45,\n    );\n    Game.ctx.fillText(\n      `Progress: ${Math.round(this.visualizationState.progress * 100)}%`,\n      20,\n      60,\n    );\n  }\n\n  /**\n   * Creates an animation delay promise\n   */\n  async createAnimationDelay(\n    delayType: \"partition\" | \"pathfinding\" | \"large\",\n  ): Promise<void> {\n    if (!this.animationConfig.enabled) {\n      return Promise.resolve();\n    }\n\n    let delay = 0;\n    switch (delayType) {\n      case \"partition\":\n        delay =\n          this.animationConfig.animationConstant *\n          this.animationConfig.partitionSplitDelay;\n        break;\n      case \"pathfinding\":\n        delay =\n          this.animationConfig.animationConstant *\n          this.animationConfig.pathfindingDelay;\n        break;\n      case \"large\":\n        delay =\n          this.animationConfig.animationConstant *\n          this.animationConfig.largeStepDelay;\n        break;\n    }\n\n    return new Promise((resolve) => setTimeout(resolve, delay));\n  }\n\n  /**\n   * Updates partition visual styles during generation\n   */\n  updatePartitionStyles(partitions: Partition[]): void {\n    // Sort partitions by area for consistent styling\n    const sortedPartitions = [...partitions].sort(\n      (a, b) => a.area() - b.area(),\n    );\n\n    if (sortedPartitions.length === 0) return;\n\n    const minArea = sortedPartitions[0].area();\n    const maxArea = sortedPartitions[sortedPartitions.length - 1].area();\n\n    // Apply area-based styling\n    partitions.forEach((partition) => {\n      if (partition.type === \"START\") {\n        partition.fillStyle = \"rgb(0, 255, 0)\";\n      } else if (partition.type === \"BOSS\") {\n        partition.fillStyle = \"rgb(255, 0, 0)\";\n      } else if (partition.type === \"DOWNLADDER\") {\n        partition.fillStyle = \"blue\";\n      } else if (partition.type === \"ROPEHOLE\") {\n        partition.fillStyle = \"purple\";\n      } else {\n        // Default area-based styling\n        const normalizedArea =\n          maxArea > minArea\n            ? (partition.area() - minArea) / (maxArea - minArea)\n            : 0;\n        const opacity = 0.3 + normalizedArea * 0.7;\n        partition.fillStyle = `rgba(128, 128, 128, ${opacity})`;\n      }\n    });\n  }\n\n  /**\n   * Visualizes partition layout in console (for debugging)\n   */\n  visualizePartitionsInConsole(\n    partitions: Partition[],\n    mapWidth: number,\n    mapHeight: number,\n  ): void {\n    if (!this.debugMode) return;\n\n    const grid = Array.from({ length: mapHeight }, () =>\n      Array(mapWidth).fill(\" . \"),\n    );\n\n    const maxIndex = partitions.length - 1;\n    const padLength = maxIndex.toString().length;\n\n    partitions.forEach((partition, index) => {\n      const paddedIndex = index.toString().padStart(padLength, \" \");\n\n      for (let x = partition.x; x < partition.x + partition.w; x++) {\n        for (let y = partition.y; y < partition.y + partition.h; y++) {\n          if (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\n            grid[y][x] = ` ${paddedIndex} `;\n          }\n        }\n      }\n    });\n\n    console.log(\"Partition Layout:\");\n    console.log(\n      \"   \" + [...Array(mapWidth)].map((_, i) => i % 10).join(\"  \") + \" X\",\n    );\n    grid.forEach((row, index) => {\n      const paddedIndex = index.toString().padStart(2, \" \");\n      console.log(`${paddedIndex} ${row.join(\"\")}`);\n    });\n    console.log(\"Y\");\n  }\n\n  /**\n   * Logs generation progress messages\n   */\n  logGenerationStep(step: string, details?: string): void {\n    if (!this.debugMode) return;\n\n    const message = details ? `${step}: ${details}` : step;\n    console.log(`[GenerationVisualizer] ${message}`);\n\n    if (this.game && this.game.pushMessage) {\n      this.game.pushMessage(message);\n    }\n  }\n\n  /**\n   * Creates visual effects for specific generation events\n   */\n  createVisualEffect(\n    effectType:\n      | \"partition_split\"\n      | \"room_connected\"\n      | \"boss_found\"\n      | \"generation_complete\",\n    partition?: Partition,\n  ): void {\n    if (!this.debugMode) return;\n\n    switch (effectType) {\n      case \"partition_split\":\n        if (partition) {\n          // Temporarily highlight the partition\n          const originalStyle = partition.fillStyle;\n          partition.fillStyle = \"yellow\";\n          setTimeout(() => {\n            partition.fillStyle = originalStyle;\n          }, 200);\n        }\n        break;\n      case \"room_connected\":\n        if (partition) {\n          partition.fillStyle = \"lightgreen\";\n        }\n        break;\n      case \"boss_found\":\n        if (partition) {\n          partition.fillStyle = \"rgb(255, 0, 0)\";\n        }\n        this.logGenerationStep(\"Boss room found!\");\n        break;\n      case \"generation_complete\":\n        this.logGenerationStep(\"Generation complete!\");\n        break;\n    }\n  }\n\n  /**\n   * Updates the current generation progress\n   */\n  updateProgress(step: string, progress: number): void {\n    this.visualizationState.currentStep = step;\n    this.visualizationState.progress = Math.max(0, Math.min(1, progress));\n\n    this.logGenerationStep(step, `${Math.round(progress * 100)}%`);\n  }\n\n  /**\n   * Resets the visualizer state\n   */\n  reset(): void {\n    this.visualizationState = {\n      currentStep: \"initializing\",\n      progress: 0,\n      partitions: [],\n      centerX: 0,\n      centerY: 0,\n    };\n  }\n\n  /**\n   * Gets the current animation configuration\n   */\n  getAnimationConfig(): AnimationConfig {\n    return { ...this.animationConfig };\n  }\n\n  /**\n   * Gets the current visualization state\n   */\n  getVisualizationState(): VisualizationState {\n    return { ...this.visualizationState };\n  }\n}\n","import { Room, RoomType } from \"../room/room\";\r\nimport { Game } from \"../game\";\r\nimport { Entity, EntityType } from \"../entity/entity\";\r\nimport { Item } from \"../item/item\";\r\nimport { DoorType } from \"../tile/door\";\r\nimport { Tile } from \"../tile/tile\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LevelParameterGenerator } from \"./levelParametersGenerator\";\r\nimport { Environment } from \"./environment\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { Populator } from \"../room/roomPopulator\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { Key } from \"../item/key\";\r\nimport { Lockable } from \"../tile/lockable\";\r\nimport { Random } from \"../utility/random\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\n\r\nexport interface EnemyParameters {\r\n  enemyTables: Record<number, number[]>;\r\n  maxDepthTable: number;\r\n  minDepths: Record<number, number>;\r\n}\r\n\r\nconst enemyMinimumDepth: Record<number, number> = {\r\n  1: 0, // CrabEnemy\r\n  2: 1, // FrogEnemy\r\n  3: 0, // ZombieEnemy\r\n  4: 0, // SkullEnemy\r\n  5: 1, // EnergyWizardEnemy\r\n  6: 2, // ChargeEnemy\r\n  7: 1, // RookEnemy\r\n  8: 1, // BishopEnemy\r\n  9: 1, // ArmoredzombieEnemy\r\n  10: 2, // BigSkullEnemy\r\n  11: 2, // QueenEnemy\r\n  12: 1, // KnightEnemy\r\n  13: 2, // BigKnightEnemy\r\n  14: 2, // FireWizardEnemy\r\n  15: 2, // ArmoredSkullEnemy  16: 2, // ArmoredKnightEnemy\r\n  16: 2, // SpiderEnemy\r\n  17: 2, // MummyEnemy\r\n  18: 3, // WardenEnemy\r\n};\r\n/*\r\ninterface enemySpawnPoolData {\r\n  maxCount: number;\r\n  minCount: number;\r\n}\r\n\r\ninterface environmentData {\r\n  name: string;\r\n  preferredEnemies: Array<Enemy>;\r\n  preferredEntities: Array<Entity>;\r\n  entityBlacklist: Array<Entity>;\r\n  enemySpawnPoolData: enemySpawnPoolData;\r\n  roomData: roomData;\r\n}\r\n\r\ninterface entitySpawnData {\r\n  enemy: Enemy;\r\n  spawnChance: number;\r\n  maximumCount: number;\r\n}\r\n*/\r\n\r\nexport class Level {\r\n  globalId: string;\r\n  depth: number;\r\n  levelArray: (Tile | null)[][];\r\n  width: number;\r\n  height: number;\r\n  game: Game;\r\n  rooms: Room[];\r\n  roomsById: Map<string, Room>;\r\n  // Group rooms by path identifier\r\n  paths: Map<string, Room[]> = new Map();\r\n  pathsById: Map<string, Map<string, Room>> = new Map();\r\n  environment: Environment;\r\n  exitRoom: Room;\r\n  startRoom: Room;\r\n  enemyParameters: EnemyParameters;\r\n  isMainPath: boolean = true;\r\n  mapGroup: number;\r\n  populator: Populator;\r\n  skipPopulation: boolean = false;\r\n\r\n  constructor(\r\n    game: Game,\r\n    depth: number,\r\n    width: number,\r\n    height: number,\r\n    isMainPath: boolean = true,\r\n    mapGroup: number,\r\n    env: EnvType,\r\n    skipPopulation: boolean = false,\r\n  ) {\r\n    this.game = game;\r\n    this.globalId = IdGenerator.generate(\"L\");\r\n    this.depth = depth;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.rooms = [];\r\n    this.roomsById = new Map();\r\n    this.isMainPath = isMainPath;\r\n    this.initializeLevelArray();\r\n    this.mapGroup = mapGroup;\r\n    this.environment = new Environment(env);\r\n    this.populator = new Populator(this, skipPopulation);\r\n    this.skipPopulation = skipPopulation;\r\n\r\n    this.enemyParameters = this.getEnemyParameters();\r\n    //let mainPath = this.isMainPath ? \"main\" : \"side\";\r\n  }\r\n  getDownLadder(room: Room): DownLadder {\r\n    if (!room || room.type !== RoomType.ROPEHOLE) {\r\n      console.error(\"Room is not a rope hole\");\r\n      return null;\r\n    }\r\n\r\n    // Then check ROPEHOLE rooms\r\n    //let room = this.rooms.find((room) => room.type === RoomType.ROPEHOLE);\r\n\r\n    if (room) {\r\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n          const tile = room.roomArray[x][y];\r\n          if (tile instanceof DownLadder) {\r\n            return tile;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.error(\"No down ladder found\");\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Finds the first sidepath DownLadder whose lockable.keyID matches the provided keyID\r\n   * within the same path of the provided origin room. Returns the ladder tile and its room.\r\n   */\r\n  findSidepathDownLadderByKeyID = (\r\n    origin: Room,\r\n    keyID: number,\r\n  ): { ladder: DownLadder; room: Room } | null => {\r\n    if (!origin || keyID === null || keyID === undefined) return null;\r\n    // Search rooms reachable on the same path as origin\r\n    const rooms = origin.path();\r\n    console.log(\r\n      `findSidepathDownLadderByKeyID: origin=${(origin as any).globalId} keyID=${keyID} roomsInPath=${rooms.length}`,\r\n    );\r\n    for (const r of rooms) {\r\n      for (let x = r.roomX; x < r.roomX + r.width; x++) {\r\n        for (let y = r.roomY; y < r.roomY + r.height; y++) {\r\n          const tile = r.roomArray[x][y];\r\n          if (tile instanceof DownLadder && tile.isSidePath) {\r\n            const dlKey = tile.lockable?.keyID;\r\n            if (dlKey === keyID) {\r\n              console.log(\r\n                `findSidepathDownLadderByKeyID: MATCH room=${(r as any).globalId} at (${x},${y}) keyID=${dlKey}`,\r\n              );\r\n              return { ladder: tile, room: r };\r\n            } else {\r\n              // Log near misses occasionally\r\n              if (Math.random() < 0.02)\r\n                console.log(\r\n                  `findSidepathDownLadderByKeyID: saw sidepath downladder key=${dlKey}, want=${keyID} in room ${(r as any).globalId}`,\r\n                );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(\r\n      `findSidepathDownLadderByKeyID: NO MATCH for keyID=${keyID} from origin ${(origin as any).globalId}`,\r\n    );\r\n    return null;\r\n  };\r\n\r\n  getKeyRoom(room: Room): Room | null {\r\n    const rooms = room.path();\r\n    for (const room of rooms) {\r\n      if (room.hasKey()) return room;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  distributeKey(downLadder: DownLadder) {\r\n    if (this.skipPopulation) return;\r\n\r\n    const disableCoords = {\r\n      disableX: downLadder.x,\r\n      disableY: downLadder.y,\r\n      disableRoom: downLadder.room,\r\n    };\r\n\r\n    const rooms = downLadder.room.path();\r\n\r\n    if (rooms.length === 0) {\r\n      console.error(\"No eligible rooms found for key placement\");\r\n      return;\r\n    }\r\n\r\n    const randomRoom = this.getFurthestFromLadders(downLadder.room);\r\n\r\n    let emptyTiles = randomRoom.getEmptyTiles();\r\n    if (disableCoords.disableRoom === randomRoom) {\r\n      emptyTiles = emptyTiles.filter(\r\n        (t) => t.x !== disableCoords.disableX && t.y !== disableCoords.disableY,\r\n      );\r\n    }\r\n\r\n    if (emptyTiles.length === 0) {\r\n      console.error(\r\n        `No empty tiles found in room ${randomRoom.id} for key placement, unlocking downladder ${downLadder.room.id}`,\r\n        downLadder.lockable.removeLock(),\r\n      );\r\n      return;\r\n    }\r\n\r\n    const randomIndex = Math.floor(Random.rand() * emptyTiles.length);\r\n    const randomTile = emptyTiles[randomIndex];\r\n\r\n    const key = new Key(randomRoom, randomTile.x, randomTile.y);\r\n    downLadder.lockable.setKey(key);\r\n\r\n    randomRoom.items.push(key);\r\n    //console.log(\"Key successfully distributed and linked to down ladder\");\r\n    //this.game.player.inventory.addItem(key);\r\n  }\r\n\r\n  setExitRoom(mainPath = true) {\r\n    if (mainPath) {\r\n      this.exitRoom = this.rooms.find(\r\n        (room) => room.type === RoomType.DOWNLADDER,\r\n      );\r\n    } else {\r\n      this.exitRoom = this.getLadderRoom(\r\n        this.rooms[this.rooms.length - 1],\r\n        \"down\",\r\n      );\r\n    }\r\n  }\r\n\r\n  setStartRoom(mainPath = true) {\r\n    if (mainPath) {\r\n      this.startRoom = this.rooms.find((room) => room.type === RoomType.START);\r\n    } else {\r\n      this.startRoom = this.getLadderRoom(\r\n        this.rooms[this.rooms.length - 1],\r\n        \"up\",\r\n      );\r\n    }\r\n  }\r\n\r\n  getLadderRoom = (room: Room, ladderType: \"up\" | \"down\"): Room | null => {\r\n    for (const r of room.path()) {\r\n      if (r.hasLadder(ladderType)) return r;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  setRooms(rooms: Room[]) {\r\n    this.rooms = rooms;\r\n    this.setExitRoom();\r\n    this.setStartRoom();\r\n    this.roomsById.clear();\r\n    this.paths.clear();\r\n    this.pathsById.clear();\r\n    rooms.forEach((room) => {\r\n      room.id = this.rooms.indexOf(room);\r\n      this.roomsById.set(room.globalId, room);\r\n      const pid = room.pathId || \"main\";\r\n      if (!this.paths.has(pid)) this.paths.set(pid, []);\r\n      if (!this.pathsById.has(pid)) this.pathsById.set(pid, new Map());\r\n      this.paths.get(pid)!.push(room);\r\n      this.pathsById.get(pid)!.set(room.globalId, room);\r\n    });\r\n    this.game.roomsById = new Map(rooms.map((r) => [r.globalId, r]));\r\n  }\r\n\r\n  getRoomById(id: string): Room | undefined {\r\n    return this.roomsById.get(id);\r\n  }\r\n\r\n  initializeLevelArray = () => {\r\n    // Create a 300x300 grid for depth 0\r\n    this.levelArray = [];\r\n    for (let x = 0; x < this.width; x++) {\r\n      this.levelArray[x] = [];\r\n      for (let y = 0; y < this.height; y++) {\r\n        this.levelArray[x][y] = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  getFurthestFromLadder = (ladderType: \"up\" | \"down\"): Room | null => {\r\n    let furthestRoom: Room | null = null;\r\n    let furthestDistance = 0;\r\n\r\n    for (const room of this.rooms) {\r\n      const distance = room.getDistanceToNearestLadder(ladderType);\r\n      if (distance && distance > furthestDistance) {\r\n        furthestDistance = distance;\r\n        furthestRoom = room;\r\n      }\r\n    }\r\n    return furthestRoom;\r\n  };\r\n\r\n  getFurthestFromLadders = (downLadderRoom: Room): Room | null => {\r\n    let furthestRoom: Room | null = null;\r\n    let furthestMinDistance = -Infinity;\r\n\r\n    // Consider all rooms in the level. We want the room whose minimum distance\r\n    // to both ladder types is maximized. If only one ladder type exists, we\r\n    // fall back to maximizing distance to the one that exists.\r\n    const rooms = downLadderRoom.path();\r\n\r\n    let distanceToUp = 0;\r\n    let distanceToDown = 0;\r\n    for (const room of rooms) {\r\n      const upDistance = room.getDistanceToNearestLadder(\"up\");\r\n      const downDistance = room.getDistanceToNearestLadder(\"down\");\r\n\r\n      distanceToUp = upDistance;\r\n      distanceToDown = downDistance;\r\n\r\n      const distances: number[] = [];\r\n      if (upDistance !== null && upDistance !== undefined)\r\n        distances.push(upDistance);\r\n      if (downDistance !== null && downDistance !== undefined)\r\n        distances.push(downDistance);\r\n\r\n      if (distances.length === 0) continue; // no ladders present anywhere\r\n\r\n      const minDistance = Math.min(...distances);\r\n\r\n      if (minDistance > furthestMinDistance) {\r\n        furthestMinDistance = minDistance;\r\n        furthestRoom = room;\r\n      }\r\n    }\r\n    const up = furthestRoom?.getDistanceToNearestLadder(\"up\");\r\n    const down = furthestRoom?.getDistanceToNearestLadder(\"down\");\r\n    console.log(\"furthestRoom\", furthestRoom?.globalId, {\r\n      up,\r\n      down,\r\n      furthestMinDistance,\r\n    });\r\n    return furthestRoom;\r\n  };\r\n\r\n  loadRoomsIntoLevelArray = () => {\r\n    for (let room of this.rooms) {\r\n      for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n        for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n          // Add bounds checking\r\n          if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\r\n            // Ensure room array has valid tiles at these coordinates\r\n            if (room.roomArray[x] && room.roomArray[x][y]) {\r\n              this.levelArray[x][y] = room.roomArray[x][y];\r\n            } else {\r\n              console.warn(\r\n                `Room array missing tile at (${x}, ${y}) for room ${room.id}`,\r\n              );\r\n            }\r\n          } else {\r\n            console.warn(\r\n              `Room coordinates (${x}, ${y}) are outside level bounds (${this.width}, ${this.height})`,\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates enemy parameters based on the current depth.\r\n   * @param depth The current depth level.\r\n   * @returns An object conforming to the EnemyParameters interface.\r\n   */\r\n  getEnemyParameters(): EnemyParameters {\r\n    // This can now be simplified or deprecated since Populator handles everything\r\n    return {\r\n      enemyTables: {},\r\n      maxDepthTable: this.depth,\r\n      minDepths: enemyMinimumDepth,\r\n    };\r\n  }\r\n\r\n  setRoomSkins() {\r\n    for (let room of this.rooms) {\r\n      room.skin = this.environment.skin;\r\n    }\r\n  }\r\n}\r\n","import { GameConstants } from \"../game/gameConstants\";\r\n\r\nexport class LevelConstants {\r\n  static SCREEN_W = 1;\r\n  static SCREEN_H = 1;\r\n\r\n  static readonly COMPUTER_TURN_DELAY = 250; // milliseconds (was 300)\r\n  static readonly TURN_TIME = 3000; // milliseconds\r\n  static readonly LEVEL_TRANSITION_TIME = 300; // milliseconds\r\n  static readonly LEVEL_TRANSITION_TIME_LADDER = 1000; // milliseconds\r\n  static readonly ROOM_COUNT = 50;\r\n\r\n  static readonly HEALTH_BAR_FADEIN = 100;\r\n  static readonly HEALTH_BAR_FADEOUT = 350;\r\n  static readonly HEALTH_BAR_TOTALTIME = 2000;\r\n\r\n  static readonly SHADED_TILE_CUTOFF = 1;\r\n  static readonly MIN_VISIBILITY = 0; // visibility level of places you've already seen\r\n  static LIGHTING_ANGLE_STEP = 2; // how many degrees between each ray, previously 5\r\n  static get LIGHTING_ANGLE_BRIGHTNESS_COMPENSATION() {\r\n    return LevelConstants.LIGHTING_ANGLE_STEP / 2;\r\n  }\r\n  static LIGHTING_MAX_DISTANCE = 7;\r\n  //static readonly LIGHT_RESOLUTION = 0.1; //1 is default\r\n\r\n  static readonly LEVEL_TEXT_COLOR = \"yellow\";\r\n  static readonly AMBIENT_LIGHT_COLOR: [number, number, number] = [12, 15, 12];\r\n  static readonly TORCH_LIGHT_COLOR: [number, number, number] = [120, 35, 10];\r\n}\r\n","import { ChatMessage, Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { Door } from \"../tile/door\";\r\nimport { LevelConstants } from \"./levelConstants\";\r\nimport { Random } from \"../utility/random\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport {\r\n  LevelParameterGenerator,\r\n  LevelParameters,\r\n} from \"./levelParametersGenerator\";\r\nimport { Level } from \"./level\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { SkinType } from \"../tile/tile\";\r\nimport {\r\n  PartitionGenerator,\r\n  Partition,\r\n  PartialLevel,\r\n  PathType,\r\n  PathParameters,\r\n} from \"./partitionGenerator\";\r\nimport { LevelValidator, ValidationResult } from \"./levelValidator\";\r\nimport { GenerationVisualizer } from \"./generationVisualizer\";\r\nimport { PngPartitionGenerator } from \"./pngPartitionGenerator\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport { SidePathOptions } from \"./sidePathManager\";\r\n\r\nexport class LevelGenerator {\r\n  game: Game;\r\n  seed: number;\r\n  depthReached = 0;\r\n  currentFloorFirstLevelID = 0;\r\n  partialLevel: PartialLevel;\r\n  levelParams: LevelParameters;\r\n  partitionGenerator: PartitionGenerator;\r\n  static ANIMATION_CONSTANT = 1;\r\n  private validator: LevelValidator;\r\n  private visualizer: GenerationVisualizer;\r\n  private pngPartitionGenerator: PngPartitionGenerator;\r\n\r\n  constructor() {\r\n    // Don't initialize partitionGenerator here yet since we need game instance\r\n    this.validator = null;\r\n    this.visualizer = null;\r\n    this.pngPartitionGenerator = new PngPartitionGenerator();\r\n  }\r\n\r\n  private setOpenWallsForPartitions = (\r\n    partitions: Array<Partition>,\r\n    mapWidth: number,\r\n    mapHeight: number,\r\n  ) => {\r\n    for (const partition of partitions) {\r\n      // Reset all walls to closed by default\r\n      partition.isTopOpen = false;\r\n      partition.isRightOpen = false;\r\n      partition.isBottomOpen = false;\r\n      partition.isLeftOpen = false;\r\n\r\n      // Check if partition touches map boundaries\r\n      if (partition.x === 0) {\r\n        partition.isLeftOpen = true;\r\n      }\r\n      if (partition.y === 0) {\r\n        partition.isTopOpen = true;\r\n      }\r\n      if (partition.x + partition.w === mapWidth) {\r\n        partition.isRightOpen = true;\r\n      }\r\n      if (partition.y + partition.h === mapHeight) {\r\n        partition.isBottomOpen = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  createLevel = (\r\n    depth: number,\r\n    isMainPath: boolean = true,\r\n    mapGroup: number,\r\n    envType: EnvType,\r\n    skipPopulation: boolean = false,\r\n  ) => {\r\n    let newLevel = new Level(\r\n      this.game,\r\n      depth,\r\n      100,\r\n      100,\r\n      isMainPath,\r\n      mapGroup,\r\n      envType,\r\n      skipPopulation,\r\n    );\r\n    return newLevel;\r\n  };\r\n\r\n  getRooms = (\r\n    partitions: Array<Partition>,\r\n    depth: number,\r\n    mapGroup: number,\r\n    envType: EnvType,\r\n    pathId: string,\r\n  ): Array<Room> => {\r\n    let rooms: Array<Room> = [];\r\n\r\n    for (let i = 0; i < partitions.length; i++) {\r\n      let partition = partitions[i];\r\n\r\n      let room = new Room(\r\n        this.game,\r\n        partition.x - 1,\r\n        partition.y - 1,\r\n        partition.w + 2,\r\n        partition.h + 2,\r\n        partition.type,\r\n        depth,\r\n        mapGroup,\r\n        this.game.levels[depth],\r\n        Random.rand,\r\n        envType,\r\n      );\r\n      room.pathId = pathId || \"main\";\r\n      rooms.push(room);\r\n    }\r\n\r\n    let doors_added: Array<Door> = [];\r\n\r\n    partitions.forEach((partition, index) => {\r\n      partition.connections.forEach((connection) => {\r\n        let door = rooms[index].addDoor(connection.x, connection.y);\r\n        let existingDoor = doors_added.find(\r\n          (existing) => existing.x === door.x && existing.y === door.y,\r\n        );\r\n        if (existingDoor) {\r\n          existingDoor.link(door);\r\n          door.link(existingDoor);\r\n        }\r\n        doors_added.push(door);\r\n      });\r\n    });\r\n\r\n    return rooms;\r\n  };\r\n\r\n  setSeed = (seed: number) => {\r\n    this.seed = seed;\r\n  };\r\n\r\n  generate = async (\r\n    game: Game,\r\n    depth: number,\r\n    isSidePath = false,\r\n    callback: (linkedRoom: Room) => void,\r\n    environment: EnvType = EnvType.DUNGEON,\r\n    skipPopulation = false, // Add this parameter\r\n    pathId?: string,\r\n    opts?: SidePathOptions,\r\n  ) => {\r\n    // Initialize components with game instance\r\n    if (!this.partitionGenerator) {\r\n      this.partitionGenerator = new PartitionGenerator(game);\r\n    }\r\n    if (!this.validator) {\r\n      this.validator = new LevelValidator(game);\r\n    }\r\n    if (!this.visualizer) {\r\n      this.visualizer = this.partitionGenerator.getVisualizer();\r\n    }\r\n\r\n    this.levelParams = LevelParameterGenerator.getParameters(depth);\r\n    this.depthReached = depth;\r\n\r\n    // Set the random state based on the seed, depth, and pathId (for unique sidepaths)\r\n    const pid = pathId ?? (isSidePath ? \"side\" : \"main\");\r\n    let pathHash = 0 >>> 0;\r\n    for (let i = 0; i < pid.length; i++) {\r\n      pathHash = ((pathHash * 131) ^ pid.charCodeAt(i)) >>> 0;\r\n    }\r\n    Random.setState(((this.seed + depth) ^ pathHash) >>> 0);\r\n\r\n    this.game = game;\r\n\r\n    // Determine the map group\r\n    let mapGroup =\r\n      this.game.rooms.length > 0\r\n        ? this.game.rooms[this.game.rooms.length - 1].mapGroup + 1\r\n        : 0;\r\n\r\n    // Generate partitions based on whether it's a side path or main path\r\n    let partitions: Partition[];\r\n\r\n    const shouldUsePNG = GameConstants.USE_PNG_LEVELS && !isSidePath;\r\n    // Deterministic per-level roll that doesn't alter global RNG state\r\n    const rollPNG = this.shouldUsePngForLevel(\r\n      depth,\r\n      pid,\r\n      GameplaySettings.PNG_LEVEL_PROBABILITY,\r\n    );\r\n    if (shouldUsePNG && rollPNG) {\r\n      // Use PNG-based level generation for MAIN PATHS ONLY\r\n      const pngUrl = await this.selectRandomLevelForDepth(depth);\r\n\r\n      if (pngUrl) {\r\n        console.log(`Using PNG level generation from: ${pngUrl}`);\r\n        partitions = await this.pngPartitionGenerator.generatePartitionsFromPng(\r\n          pngUrl,\r\n          game,\r\n          depth,\r\n          isSidePath,\r\n        );\r\n      }\r\n\r\n      // Fallback to procedural generation if PNG generation fails or no PNG found\r\n      if (!pngUrl || partitions.length === 0) {\r\n        if (!pngUrl) {\r\n          console.warn(\r\n            `No PNG levels found for depth ${depth}, falling back to procedural generation`,\r\n          );\r\n        } else {\r\n          console.warn(\r\n            \"PNG generation failed, falling back to procedural generation\",\r\n          );\r\n        }\r\n        partitions = await this.partitionGenerator.generateDungeonPartitions(\r\n          game,\r\n          this.levelParams.mapWidth,\r\n          this.levelParams.mapHeight,\r\n          depth,\r\n          this.levelParams,\r\n          // Allow main-path overrides via opts when not a side path\r\n          isSidePath\r\n            ? undefined\r\n            : {\r\n                branching: (opts as any)?.branching,\r\n                loopiness: (opts as any)?.loopiness,\r\n              },\r\n        );\r\n      }\r\n    } else {\r\n      // Use procedural generation for side paths OR when PNG is disabled\r\n      if (isSidePath) {\r\n        partitions = await this.partitionGenerator.generateCavePartitions(opts);\r\n      } else {\r\n        partitions = await this.partitionGenerator.generateDungeonPartitions(\r\n          game,\r\n          this.levelParams.mapWidth,\r\n          this.levelParams.mapHeight,\r\n          depth,\r\n          this.levelParams,\r\n          isSidePath\r\n            ? undefined\r\n            : {\r\n                branching: (opts as any)?.branching,\r\n                loopiness: (opts as any)?.loopiness,\r\n              },\r\n        );\r\n      }\r\n    }\r\n\r\n    // Use validator instead of direct overlap checking\r\n    const overlapValidation = this.validator.validateNoOverlaps(partitions);\r\n    if (!overlapValidation.isValid) {\r\n      console.warn(\r\n        `Overlap validation failed: ${overlapValidation.errorMessage}`,\r\n      );\r\n    }\r\n    let mainEnvType = depth > 4 ? EnvType.MAGMA_CAVE : EnvType.DUNGEON;\r\n    let envType = !isSidePath ? mainEnvType : environment;\r\n    // if (depth > 4) {\r\n    //   envType = EnvType.MAGMA_CAVE;\r\n    // }\r\n\r\n    // Check for overlaps\r\n    // if (this.partitionGenerator.checkOverlaps(partitions)) { // This line is removed as per the new_code\r\n    //   console.warn(\"There are overlapping partitions.\");\r\n    // }\r\n\r\n    // Get the levels based on the partitions\r\n    let newLevel = this.createLevel(\r\n      depth,\r\n      !isSidePath,\r\n      mapGroup,\r\n      envType,\r\n      skipPopulation,\r\n    );\r\n\r\n    if (isSidePath) {\r\n      // create Level object ONLY to prepare rooms, but\r\n      // DO NOT push to game.levels\r\n    } else {\r\n      this.game.levels.push(newLevel);\r\n      this.game.registerLevel(newLevel);\r\n    }\r\n\r\n    let rooms = this.getRooms(partitions, depth, mapGroup, envType, pid);\r\n\r\n    newLevel.setRooms(rooms);\r\n    newLevel.populator.populateRooms();\r\n\r\n    newLevel.setRoomSkins();\r\n    //newLevel.loadRoomsIntoLevelArray();\r\n\r\n    // Only call linkExitToStart for main paths\r\n    if (newLevel.exitRoom) {\r\n      newLevel.exitRoom.linkExitToStart();\r\n    }\r\n\r\n    // Update the current floor first level ID if it's not a cave\r\n    if (!isSidePath) this.currentFloorFirstLevelID = this.game.rooms.length;\r\n\r\n    // Add the new levels to the game rooms\r\n    this.game.registerRooms(rooms);\r\n    // Keep game.level in sync for convenience lookups\r\n    this.game.level = this.game.levels[depth] || this.game.level;\r\n\r\n    // Do NOT auto-generate sidepath caves here.\r\n    // Sidepaths are generated on-demand when the player interacts with a DownLadder.\r\n\r\n    // Return the start room or the rope cave room\r\n    callback(\r\n      isSidePath\r\n        ? rooms.find((r) => r.type === RoomType.ROPECAVE)\r\n        : rooms.find((r) => r.type === RoomType.START),\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Deterministically decide if PNG-based generation should be used for this level.\r\n   * Uses a local hash seeded by (seed, depth, pathId) to avoid touching global RNG state.\r\n   */\r\n  private shouldUsePngForLevel(\r\n    depth: number,\r\n    pathId: string,\r\n    probability: number,\r\n  ): boolean {\r\n    // Mix seed, depth, and path string into a 32-bit state\r\n    let h = (this.seed ^ depth) >>> 0;\r\n    // Simple LCG/hash mix over pathId characters (deterministic)\r\n    for (let i = 0; i < pathId.length; i++) {\r\n      h = (Math.imul(h ^ pathId.charCodeAt(i), 1664525) + 1013904223) >>> 0;\r\n    }\r\n    // Map to [0,1)\r\n    const r = (h >>> 0) / 4294967296;\r\n    return r < probability;\r\n  }\r\n\r\n  generateFirstNFloors = async (game, numFloors, skipPopulation = false) => {\r\n    // Deterministically generate each main path depth from 0..numFloors\r\n    for (let depth = 0; depth <= numFloors; depth++) {\r\n      await this.generate(\r\n        game,\r\n        depth,\r\n        false,\r\n        () => {},\r\n        EnvType.DUNGEON,\r\n        skipPopulation,\r\n        undefined,\r\n        {\r\n          branching: GameplaySettings.MAIN_PATH_BRANCHING,\r\n          loopiness: GameplaySettings.MAIN_PATH_LOOPINESS,\r\n        },\r\n      );\r\n      // generate() updates game.rooms to this depth's rooms\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.visualizer) {\r\n      this.visualizer.draw(delta);\r\n    } else {\r\n      // Fallback if visualizer not initialized\r\n      Game.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n      this.game.drawTextScreen(\"generating level\");\r\n    }\r\n  };\r\n\r\n  private async selectRandomLevelForDepth(\r\n    depth: number,\r\n  ): Promise<string | null> {\r\n    console.log(`Looking for PNG levels for depth ${depth}...`);\r\n\r\n    // Try to find available variations for this depth\r\n    const availableVariations: string[] = [];\r\n    const maxVariations = 10; // Check up to 10 variations per depth\r\n\r\n    for (let variation = 0; variation < maxVariations; variation++) {\r\n      const filename = `${depth}_${variation}.png`;\r\n      const fullPath = `res/levels/${filename}`;\r\n\r\n      // Check if file exists by trying to load it\r\n      if (await this.checkImageExists(fullPath)) {\r\n        availableVariations.push(fullPath);\r\n        console.log(`  ✓ Found variation: ${filename}`);\r\n      }\r\n    }\r\n\r\n    if (availableVariations.length === 0) {\r\n      console.log(`  ❌ No PNG levels found for depth ${depth}`);\r\n      return null;\r\n    }\r\n\r\n    // Randomly select one of the available variations\r\n    const selectedIndex = Math.floor(\r\n      Random.rand() * availableVariations.length,\r\n    );\r\n    const selectedPath = availableVariations[selectedIndex];\r\n\r\n    console.log(\r\n      `  🎲 Selected ${selectedPath} (${selectedIndex + 1}/${availableVariations.length} available)`,\r\n    );\r\n    return selectedPath;\r\n  }\r\n\r\n  private async checkImageExists(imagePath: string): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve(true);\r\n      };\r\n      img.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      // Set a timeout to avoid hanging\r\n      setTimeout(() => {\r\n        resolve(false);\r\n      }, 1000);\r\n\r\n      img.src = imagePath;\r\n    });\r\n  }\r\n}\r\n\r\nconst getPathParameters = (\r\n  pathType: PathType,\r\n  depth: number,\r\n): PathParameters => {\r\n  const baseParams = LevelParameterGenerator.getParameters(depth);\r\n\r\n  switch (pathType) {\r\n    case PathType.MAIN_PATH:\r\n      return {\r\n        pathType: PathType.MAIN_PATH,\r\n        mapWidth: baseParams.mapWidth,\r\n        mapHeight: baseParams.mapHeight,\r\n        roomCount: {\r\n          min: baseParams.minRoomCount,\r\n          max: baseParams.maxRoomCount,\r\n        },\r\n        splitProbabilities: [0.75, 1, 0.5],\r\n        wallRemoveProbability: 0.5,\r\n        maxRoomArea: baseParams.maxRoomArea,\r\n        softMaxRoomArea: baseParams.softMaxRoomArea,\r\n        connectionStyle: \"linear\",\r\n        loopDoorCount: { min: 4, max: 8 },\r\n      };\r\n\r\n    case PathType.SIDE_PATH:\r\n      return {\r\n        pathType: PathType.SIDE_PATH,\r\n        mapWidth: 50,\r\n        mapHeight: 50,\r\n        roomCount: { min: 5, max: 5 },\r\n        splitProbabilities: [0.75, 1, 0.5],\r\n        wallRemoveProbability: 0.5,\r\n        maxRoomArea: 100,\r\n        softMaxRoomArea: 80,\r\n        connectionStyle: \"branched\",\r\n        loopDoorCount: { min: 4, max: 8 },\r\n      };\r\n\r\n    case PathType.TUTORIAL:\r\n      return {\r\n        pathType: PathType.TUTORIAL,\r\n        mapWidth: 7,\r\n        mapHeight: 7,\r\n        roomCount: { min: 1, max: 1 },\r\n        splitProbabilities: [],\r\n        wallRemoveProbability: 0,\r\n        maxRoomArea: 49,\r\n        softMaxRoomArea: 49,\r\n        connectionStyle: \"linear\",\r\n        loopDoorCount: { min: 0, max: 0 },\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unknown path type: ${pathType}`);\r\n  }\r\n};\r\n","import { GameConstants } from \"../game/gameConstants\";\nimport { Game } from \"../game\";\nimport { Utils } from \"../utility/utils\";\nimport { Random } from \"../utility/random\";\n\ninterface Room {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  vx: number; // velocity x\n  vy: number; // velocity y\n  mass: number;\n  id: number;\n}\n\nexport class LevelImageGenerator {\n  private rooms: Room[] = [];\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private width: number;\n  private height: number;\n  private settled: boolean = false;\n\n  constructor(width: number = 100, height: number = 100) {\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext(\"2d\")!;\n\n    // Disable image smoothing for pixel-perfect rendering\n    this.ctx.imageSmoothingEnabled = false;\n    (this.ctx as any).webkitImageSmoothingEnabled = false;\n    (this.ctx as any).mozImageSmoothingEnabled = false;\n    (this.ctx as any).msImageSmoothingEnabled = false;\n  }\n\n  // Generate room size using normal distribution for rectangles\n  private generateRoomSize(): { width: number; height: number } {\n    const minSize = 2;\n    const maxSize = 25;\n\n    // Use normal distribution for both width and height independently\n    // This creates rectangles with varied proportions\n    const width = Math.max(\n      minSize,\n      Math.min(maxSize, Utils.randomNormalInt(minSize, maxSize, { median: 6 })),\n    );\n    const height = Math.max(\n      minSize,\n      Math.min(maxSize, Utils.randomNormalInt(minSize, maxSize, { median: 6 })),\n    );\n\n    return { width, height };\n  }\n\n  // Calculate mass based on room size (larger rooms = more mass)\n  private calculateMass(width: number, height: number): number {\n    return width * height * 0.1;\n  }\n\n  // Generate rooms with physics properties\n  generateRooms(\n    numRooms: number,\n    rand: () => number = Random.rand,\n    startingPattern: \"center\" | \"split\" | \"corners\" = \"center\",\n  ): void {\n    this.rooms = [];\n    this.settled = false;\n\n    for (let i = 0; i < numRooms; i++) {\n      const { width, height } = this.generateRoomSize();\n      const mass = this.calculateMass(width, height);\n\n      let x: number, y: number;\n\n      // Different starting patterns\n      switch (startingPattern) {\n        case \"split\":\n          if (i < numRooms / 2) {\n            // Top right\n            x = this.width * 0.6 + rand() * this.width * 0.3;\n            y = this.height * 0.1 + rand() * this.height * 0.3;\n          } else {\n            // Bottom left\n            x = this.width * 0.1 + rand() * this.width * 0.3;\n            y = this.height * 0.6 + rand() * this.height * 0.3;\n          }\n          break;\n        case \"corners\":\n          const corner = Math.floor(rand() * 4);\n          switch (corner) {\n            case 0: // Top left\n              x = this.width * 0.1 + rand() * this.width * 0.2;\n              y = this.height * 0.1 + rand() * this.height * 0.2;\n              break;\n            case 1: // Top right\n              x = this.width * 0.7 + rand() * this.width * 0.2;\n              y = this.height * 0.1 + rand() * this.height * 0.2;\n              break;\n            case 2: // Bottom left\n              x = this.width * 0.1 + rand() * this.width * 0.2;\n              y = this.height * 0.7 + rand() * this.height * 0.2;\n              break;\n            case 3: // Bottom right\n              x = this.width * 0.7 + rand() * this.width * 0.2;\n              y = this.height * 0.7 + rand() * this.height * 0.2;\n              break;\n          }\n          break;\n        default: // center\n          x = this.width * 0.3 + rand() * this.width * 0.4;\n          y = this.height * 0.3 + rand() * this.height * 0.4;\n      }\n\n      this.rooms.push({\n        x,\n        y,\n        width,\n        height,\n        vx: 0,\n        vy: 0,\n        mass,\n        id: i,\n      });\n    }\n  }\n\n  // Check if two rooms collide (including 1-pixel border requirement)\n  private roomsCollide(room1: Room, room2: Room): boolean {\n    return !(\n      room1.x + room1.width + 1 <= room2.x ||\n      room2.x + room2.width + 1 <= room1.x ||\n      room1.y + room1.height + 1 <= room2.y ||\n      room2.y + room2.height + 1 <= room1.y\n    );\n  }\n\n  // Check if two rooms should be snapped together (very close)\n  private shouldSnap(room1: Room, room2: Room): boolean {\n    const SNAP_DISTANCE = 3; // If closer than this, snap together\n\n    // Check horizontal snapping\n    const horizontalGap = Math.min(\n      Math.abs(room1.x + room1.width + 1 - room2.x),\n      Math.abs(room2.x + room2.width + 1 - room1.x),\n    );\n\n    // Check vertical snapping\n    const verticalGap = Math.min(\n      Math.abs(room1.y + room1.height + 1 - room2.y),\n      Math.abs(room2.y + room2.height + 1 - room1.y),\n    );\n\n    const overlapsHorizontally = !(\n      room1.x + room1.width < room2.x || room2.x + room2.width < room1.x\n    );\n\n    const overlapsVertically = !(\n      room1.y + room1.height < room2.y || room2.y + room2.height < room1.y\n    );\n\n    return (\n      (horizontalGap < SNAP_DISTANCE && overlapsVertically) ||\n      (verticalGap < SNAP_DISTANCE && overlapsHorizontally)\n    );\n  }\n\n  // Snap two rooms together with proper 1-pixel border\n  private snapRooms(room1: Room, room2: Room): void {\n    const overlapsHorizontally = !(\n      room1.x + room1.width < room2.x || room2.x + room2.width < room1.x\n    );\n\n    const overlapsVertically = !(\n      room1.y + room1.height < room2.y || room2.y + room2.height < room1.y\n    );\n\n    if (overlapsHorizontally) {\n      // Snap vertically\n      if (room1.y < room2.y) {\n        // room1 above room2\n        const targetY = room1.y + room1.height + 1;\n        room2.y = targetY;\n        room2.vy = 0;\n        room1.vy = 0;\n      } else {\n        // room2 above room1\n        const targetY = room2.y + room2.height + 1;\n        room1.y = targetY;\n        room1.vy = 0;\n        room2.vy = 0;\n      }\n    } else if (overlapsVertically) {\n      // Snap horizontally\n      if (room1.x < room2.x) {\n        // room1 left of room2\n        const targetX = room1.x + room1.width + 1;\n        room2.x = targetX;\n        room2.vx = 0;\n        room1.vx = 0;\n      } else {\n        // room2 left of room1\n        const targetX = room2.x + room2.width + 1;\n        room1.x = targetX;\n        room1.vx = 0;\n        room2.vx = 0;\n      }\n    }\n  }\n\n  // Apply collision response between two rooms\n  private resolveCollision(room1: Room, room2: Room): void {\n    // Calculate overlap\n    const overlapX = Math.min(\n      room1.x + room1.width + 1 - room2.x,\n      room2.x + room2.width + 1 - room1.x,\n    );\n    const overlapY = Math.min(\n      room1.y + room1.height + 1 - room2.y,\n      room2.y + room2.height + 1 - room1.y,\n    );\n\n    // Resolve collision by moving along the axis with minimum overlap\n    if (overlapX < overlapY) {\n      // Horizontal separation\n      const direction = room1.x < room2.x ? -1 : 1;\n      const totalMass = room1.mass + room2.mass;\n      const separation = overlapX / 2;\n\n      room1.x += direction * separation * (room2.mass / totalMass);\n      room2.x -= direction * separation * (room1.mass / totalMass);\n\n      // Add some velocity for natural movement\n      room1.vx += direction * 0.1 * (room2.mass / totalMass);\n      room2.vx -= direction * 0.1 * (room1.mass / totalMass);\n    } else {\n      // Vertical separation\n      const direction = room1.y < room2.y ? -1 : 1;\n      const totalMass = room1.mass + room2.mass;\n      const separation = overlapY / 2;\n\n      room1.y += direction * separation * (room2.mass / totalMass);\n      room2.y -= direction * separation * (room1.mass / totalMass);\n\n      // Add some velocity for natural movement\n      room1.vy += direction * 0.1 * (room2.mass / totalMass);\n      room2.vy -= direction * 0.1 * (room1.mass / totalMass);\n    }\n  }\n\n  // Run physics simulation\n  simulatePhysics(iterations: number = 1000): void {\n    const damping = 0.95;\n    const minVelocity = 0.01;\n\n    for (let iter = 0; iter < iterations; iter++) {\n      let hasMovement = false;\n\n      // Apply forces and resolve collisions\n      for (let i = 0; i < this.rooms.length; i++) {\n        for (let j = i + 1; j < this.rooms.length; j++) {\n          if (this.roomsCollide(this.rooms[i], this.rooms[j])) {\n            this.resolveCollision(this.rooms[i], this.rooms[j]);\n            hasMovement = true;\n          }\n        }\n      }\n\n      // Apply snapping every iteration - rooms that are close enough stick together\n      for (let i = 0; i < this.rooms.length; i++) {\n        for (let j = i + 1; j < this.rooms.length; j++) {\n          if (this.shouldSnap(this.rooms[i], this.rooms[j])) {\n            this.snapRooms(this.rooms[i], this.rooms[j]);\n          }\n        }\n      }\n\n      // Update positions and apply damping\n      for (const room of this.rooms) {\n        room.x += room.vx;\n        room.y += room.vy;\n        room.vx *= damping;\n        room.vy *= damping;\n\n        // Keep rooms within bounds\n        room.x = Math.max(1, Math.min(this.width - room.width - 1, room.x));\n        room.y = Math.max(1, Math.min(this.height - room.height - 1, room.y));\n\n        if (\n          Math.abs(room.vx) > minVelocity ||\n          Math.abs(room.vy) > minVelocity\n        ) {\n          hasMovement = true;\n        }\n      }\n\n      // Check if system has settled\n      if (!hasMovement) {\n        console.log(`Physics settled after ${iter} iterations`);\n        break;\n      }\n    }\n\n    // Final pass: ensure all positions are integers for pixel-perfect rendering\n    for (const room of this.rooms) {\n      room.x = Math.round(room.x);\n      room.y = Math.round(room.y);\n    }\n\n    this.settled = true;\n  }\n\n  // Generate PNG image data\n  generatePNG(): HTMLCanvasElement {\n    // Clear canvas with transparent background\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    // Ensure pixel-perfect rendering\n    this.ctx.imageSmoothingEnabled = false;\n\n    // Draw white rectangles for rooms\n    this.ctx.fillStyle = \"white\";\n    for (const room of this.rooms) {\n      this.ctx.fillRect(\n        Math.floor(room.x),\n        Math.floor(room.y),\n        room.width,\n        room.height,\n      );\n    }\n\n    return this.canvas;\n  }\n\n  // Save PNG to organized directory structure\n  savePNG(filename?: string): void {\n    const canvas = this.generatePNG();\n    const timestamp = new Date().toISOString().replace(/[:.]/g, \"-\");\n    const finalFilename = filename || `level_${timestamp}.png`;\n\n    // Create organized download\n    const link = document.createElement(\"a\");\n    link.download = `generated_levels/${finalFilename}`;\n    link.href = canvas.toDataURL(\"image/png\");\n\n    // Add to page temporarily and click\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    // Also log the data URL for manual saving if needed\n    console.log(\n      `Generated level PNG (${this.width}x${this.height}):`,\n      link.href,\n    );\n    console.log(`Suggested save path: generated_levels/${finalFilename}`);\n  }\n\n  // Draw the level using Game.ctx for debugging/visualization\n  draw(offsetX: number = 0, offsetY: number = 0, scale: number = 2): void {\n    if (!Game.ctx) return;\n\n    Game.ctx.save();\n\n    // Disable smoothing for pixel-perfect rendering\n    Game.ctx.imageSmoothingEnabled = false;\n    (Game.ctx as any).webkitImageSmoothingEnabled = false;\n    (Game.ctx as any).mozImageSmoothingEnabled = false;\n    (Game.ctx as any).msImageSmoothingEnabled = false;\n\n    // Clear area\n    Game.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n    Game.ctx.fillRect(\n      offsetX,\n      offsetY,\n      this.width * scale,\n      this.height * scale,\n    );\n\n    // Draw grid for reference\n    Game.ctx.strokeStyle = \"rgba(100, 100, 100, 0.3)\";\n    Game.ctx.lineWidth = 1;\n    for (let x = 0; x <= this.width; x += 10) {\n      Game.ctx.beginPath();\n      Game.ctx.moveTo(offsetX + x * scale, offsetY);\n      Game.ctx.lineTo(offsetX + x * scale, offsetY + this.height * scale);\n      Game.ctx.stroke();\n    }\n    for (let y = 0; y <= this.height; y += 10) {\n      Game.ctx.beginPath();\n      Game.ctx.moveTo(offsetX, offsetY + y * scale);\n      Game.ctx.lineTo(offsetX + this.width * scale, offsetY + y * scale);\n      Game.ctx.stroke();\n    }\n\n    // Draw rooms with different colors to show rectangles better\n    for (const room of this.rooms) {\n      // Room fill - use different colors for different aspect ratios\n      const aspectRatio = room.width / room.height;\n      let hue: number;\n\n      if (aspectRatio > 1.5) {\n        // Wide rectangle - blue tones\n        hue = 200 + ((room.id * 30) % 60);\n      } else if (aspectRatio < 0.67) {\n        // Tall rectangle - red tones\n        hue = 0 + ((room.id * 30) % 60);\n      } else {\n        // Square-ish - green tones\n        hue = 100 + ((room.id * 30) % 60);\n      }\n\n      Game.ctx.fillStyle = `hsl(${hue}, 70%, 60%)`;\n      Game.ctx.fillRect(\n        offsetX + Math.floor(room.x) * scale,\n        offsetY + Math.floor(room.y) * scale,\n        room.width * scale,\n        room.height * scale,\n      );\n\n      // Room border\n      Game.ctx.strokeStyle = \"white\";\n      Game.ctx.lineWidth = 1;\n      Game.ctx.strokeRect(\n        offsetX + Math.floor(room.x) * scale,\n        offsetY + Math.floor(room.y) * scale,\n        room.width * scale,\n        room.height * scale,\n      );\n\n      // Room ID and dimensions text\n      if (scale >= 2) {\n        Game.ctx.fillStyle = \"white\";\n        Game.ctx.font = \"10px monospace\";\n        Game.ctx.textAlign = \"center\";\n        Game.ctx.fillText(\n          `${room.id}`,\n          offsetX + (room.x + room.width / 2) * scale,\n          offsetY + (room.y + room.height / 2) * scale - 2,\n        );\n\n        // Show dimensions for rectangles\n        if (scale >= 3) {\n          Game.ctx.font = \"8px monospace\";\n          Game.ctx.fillText(\n            `${room.width}×${room.height}`,\n            offsetX + (room.x + room.width / 2) * scale,\n            offsetY + (room.y + room.height / 2) * scale + 8,\n          );\n        }\n      }\n    }\n\n    Game.ctx.restore();\n  }\n\n  // Generate a complete random level\n  static generateRandomLevel(\n    width: number = 80,\n    height: number = 60,\n    numRooms: number = 15,\n    rand: () => number = Random.rand,\n    pattern: \"center\" | \"split\" | \"corners\" = \"center\",\n  ): LevelImageGenerator {\n    const generator = new LevelImageGenerator(width, height);\n    generator.generateRooms(numRooms, rand, pattern);\n    generator.simulatePhysics();\n    return generator;\n  }\n\n  // Get room data for external use\n  getRooms(): Room[] {\n    return [...this.rooms];\n  }\n\n  // Check if rooms are accessible (basic connectivity check)\n  areRoomsAccessible(): boolean {\n    if (this.rooms.length === 0) return true;\n    if (this.rooms.length === 1) return true;\n\n    // Simple flood fill to check connectivity\n    const visited = new Set<number>();\n    const queue = [0]; // Start with first room\n    visited.add(0);\n\n    while (queue.length > 0) {\n      const currentId = queue.shift()!;\n      const currentRoom = this.rooms[currentId];\n\n      // Check adjacent rooms (exactly 1 pixel apart = touching with 1px border)\n      for (let i = 0; i < this.rooms.length; i++) {\n        if (visited.has(i)) continue;\n\n        const otherRoom = this.rooms[i];\n\n        // Check if rooms are exactly adjacent (1 pixel gap)\n        const horizontallyAdjacent =\n          Math.abs(currentRoom.x + currentRoom.width + 1 - otherRoom.x) < 1 ||\n          Math.abs(otherRoom.x + otherRoom.width + 1 - currentRoom.x) < 1;\n\n        const verticallyAdjacent =\n          Math.abs(currentRoom.y + currentRoom.height + 1 - otherRoom.y) < 1 ||\n          Math.abs(otherRoom.y + otherRoom.height + 1 - currentRoom.y) < 1;\n\n        const overlapsHorizontally = !(\n          currentRoom.x + currentRoom.width < otherRoom.x ||\n          otherRoom.x + otherRoom.width < currentRoom.x\n        );\n\n        const overlapsVertically = !(\n          currentRoom.y + currentRoom.height < otherRoom.y ||\n          otherRoom.y + otherRoom.height < currentRoom.y\n        );\n\n        if (\n          (horizontallyAdjacent && overlapsVertically) ||\n          (verticallyAdjacent && overlapsHorizontally)\n        ) {\n          visited.add(i);\n          queue.push(i);\n        }\n      }\n    }\n\n    return visited.size === this.rooms.length;\n  }\n}\n","import { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\r\nimport { Spawner } from \"../entity/enemy/spawner\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\r\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\r\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\r\n\r\nexport const enemyClasses = {\r\n  1: CrabEnemy,\r\n  2: FrogEnemy,\r\n  3: ZombieEnemy,\r\n  4: SkullEnemy,\r\n  5: EnergyWizardEnemy,\r\n  6: ChargeEnemy,\r\n  7: RookEnemy,\r\n  8: BishopEnemy,\r\n  9: ArmoredzombieEnemy,\r\n  10: BigSkullEnemy,\r\n  11: QueenEnemy,\r\n  12: KnightEnemy,\r\n  13: BigKnightEnemy,\r\n  14: FireWizardEnemy,\r\n  15: ArmoredSkullEnemy,\r\n  16: MummyEnemy,\r\n  17: SpiderEnemy,\r\n};\r\n\r\nexport interface LevelParameters {\r\n  minRoomCount: number;\r\n  maxRoomCount: number;\r\n  maxRoomArea: number;\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n  splitProbabilities: number[];\r\n  wallRemoveProbability: number;\r\n  numLoopDoorsRange: [number, number];\r\n  numberOfRooms: number;\r\n  softMaxRoomArea: number;\r\n}\r\n\r\nexport class LevelParameterGenerator {\r\n  /**\r\n   * Generates level parameters based on the current depth.\r\n   * @param depth The current depth level.\r\n   * @returns An object conforming to the LevelParameters interface.\r\n   */\r\n  static getParameters(depth: number): LevelParameters {\r\n    return {\r\n      minRoomCount: depth > 0 ? 0 : 0,\r\n      maxRoomCount: depth > 0 ? 12 : 6,\r\n      maxRoomArea: depth > 0 ? 120 + 10 * depth : 40,\r\n      mapWidth: 25 + 5 * depth,\r\n      mapHeight: 25 + 5 * depth,\r\n      splitProbabilities: [0.75, 1.0, 0.25], // Example probabilities\r\n      wallRemoveProbability: depth > 0 ? 0.1 : 1,\r\n      numLoopDoorsRange: [4, 8], // Random between 4 and 8\r\n      numberOfRooms: depth > 0 ? 5 : 3,\r\n      softMaxRoomArea: depth > 0 ? 0.5 * (120 + 10 * depth) : 40,\r\n    };\r\n  }\r\n}\r\n","import { Partition } from \"./partitionGenerator\";\nimport { RoomType } from \"../room/room\";\nimport { LevelParameters } from \"./levelParametersGenerator\";\nimport { Game } from \"../game\";\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errorMessage?: string;\n  errorType?: ValidationErrorType;\n}\n\nexport enum ValidationErrorType {\n  INSUFFICIENT_ROOMS = \"INSUFFICIENT_ROOMS\",\n  BOSS_ROOM_MISSING = \"BOSS_ROOM_MISSING\",\n  BOSS_TOO_CLOSE = \"BOSS_TOO_CLOSE\",\n  OVERLAPPING_PARTITIONS = \"OVERLAPPING_PARTITIONS\",\n  EMPTY_PARTITIONS = \"EMPTY_PARTITIONS\",\n  STAIR_ROOM_MISSING = \"STAIR_ROOM_MISSING\",\n  INSUFFICIENT_CAVE_ROOMS = \"INSUFFICIENT_CAVE_ROOMS\",\n}\n\nexport class LevelValidator {\n  private game: Game;\n  private enableDebugMessages: boolean;\n\n  constructor(game: Game, enableDebugMessages: boolean = false) {\n    this.game = game;\n    this.enableDebugMessages =\n      enableDebugMessages || document.cookie.includes(\"showgeneration=true\");\n  }\n\n  /**\n   * Validates dungeon partitions against the provided parameters\n   */\n  validateDungeonPartitions(\n    partitions: Partition[],\n    params: LevelParameters,\n  ): ValidationResult {\n    // Check for empty partitions\n    const emptyCheck = this.validateNotEmpty(partitions);\n    if (!emptyCheck.isValid) return emptyCheck;\n\n    // Check minimum room count\n    const roomCountCheck = this.validateMinimumRoomCount(\n      partitions,\n      params.minRoomCount,\n    );\n    if (!roomCountCheck.isValid) return roomCountCheck;\n\n    // Check boss room existence\n    const bossExistenceCheck = this.validateBossRoomExists(partitions);\n    if (!bossExistenceCheck.isValid) return bossExistenceCheck;\n\n    // Check boss room distance\n    const bossDistanceCheck = this.validateBossRoomDistance(partitions, 3);\n    if (!bossDistanceCheck.isValid) return bossDistanceCheck;\n\n    // Check for overlapping partitions\n    const overlapCheck = this.validateNoOverlaps(partitions);\n    if (!overlapCheck.isValid) return overlapCheck;\n\n    // Check for stair room (required for dungeon completion)\n    const stairCheck = this.validateStairRoomExists(partitions);\n    if (!stairCheck.isValid) return stairCheck;\n\n    return { isValid: true };\n  }\n\n  /**\n   * Validates cave partitions\n   */\n  validateCavePartitions(\n    partitions: Partition[],\n    requiredRoomCount: number,\n  ): ValidationResult {\n    // Check for empty partitions\n    const emptyCheck = this.validateNotEmpty(partitions);\n    if (!emptyCheck.isValid) return emptyCheck;\n\n    // Check minimum room count for caves\n    const roomCountCheck = this.validateMinimumRoomCount(\n      partitions,\n      requiredRoomCount,\n    );\n    if (!roomCountCheck.isValid) {\n      return {\n        isValid: false,\n        errorMessage: `Cave needs at least ${requiredRoomCount} rooms, got ${partitions.length}`,\n        errorType: ValidationErrorType.INSUFFICIENT_CAVE_ROOMS,\n      };\n    }\n\n    // Check for overlapping partitions\n    const overlapCheck = this.validateNoOverlaps(partitions);\n    if (!overlapCheck.isValid) return overlapCheck;\n\n    // Validate that we have a rope cave starting room\n    const ropeCaveCheck = this.validateRopeCaveExists(partitions);\n    if (!ropeCaveCheck.isValid) return ropeCaveCheck;\n\n    return { isValid: true };\n  }\n\n  /**\n   * Validates tutorial partitions\n   */\n  validateTutorialPartitions(partitions: Partition[]): ValidationResult {\n    // Check for empty partitions\n    const emptyCheck = this.validateNotEmpty(partitions);\n    if (!emptyCheck.isValid) return emptyCheck;\n\n    // Tutorial should have exactly 1 room\n    if (partitions.length !== 1) {\n      return {\n        isValid: false,\n        errorMessage: `Tutorial should have exactly 1 room, got ${partitions.length}`,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n\n    // Check that the room is marked as tutorial\n    const tutorialRoom = partitions[0];\n    if (tutorialRoom.type !== RoomType.TUTORIAL) {\n      return {\n        isValid: false,\n        errorMessage: \"Tutorial room is not marked with TUTORIAL type\",\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that partitions array is not empty\n   */\n  validateNotEmpty(partitions: Partition[]): ValidationResult {\n    if (!partitions || partitions.length === 0) {\n      const errorMessage = \"No partitions generated\";\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.EMPTY_PARTITIONS,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates minimum room count requirement\n   */\n  validateMinimumRoomCount(\n    partitions: Partition[],\n    minRoomCount: number,\n  ): ValidationResult {\n    if (partitions.length < minRoomCount) {\n      const errorMessage = `Not enough rooms: need ${minRoomCount}, got ${partitions.length}`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that a boss room exists\n   */\n  validateBossRoomExists(partitions: Partition[]): ValidationResult {\n    const hasBossRoom = partitions.some((p) => p.type === RoomType.BOSS);\n    if (!hasBossRoom) {\n      const errorMessage = \"Boss room unreachable or missing\";\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.BOSS_ROOM_MISSING,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that boss room is at minimum distance from spawn\n   */\n  validateBossRoomDistance(\n    partitions: Partition[],\n    minDistance: number,\n  ): ValidationResult {\n    const bossRoom = partitions.find((p) => p.type === RoomType.BOSS);\n    if (!bossRoom) {\n      return this.validateBossRoomExists(partitions); // This will return the appropriate error\n    }\n\n    if (bossRoom.distance < minDistance) {\n      const errorMessage = `Boss room too close to spawn: distance ${bossRoom.distance}, minimum ${minDistance}`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.BOSS_TOO_CLOSE,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that partitions don't overlap\n   */\n  validateNoOverlaps(partitions: Partition[]): ValidationResult {\n    for (let i = 0; i < partitions.length; i++) {\n      for (let j = i + 1; j < partitions.length; j++) {\n        const a = partitions[i];\n        const b = partitions[j];\n        if (\n          a.x < b.x + b.w &&\n          a.x + a.w > b.x &&\n          a.y < b.y + b.h &&\n          a.y + a.h > b.y\n        ) {\n          const errorMessage = `Overlapping partitions detected: partition ${i} overlaps with partition ${j}`;\n          this.logValidationError(errorMessage);\n          return {\n            isValid: false,\n            errorMessage,\n            errorType: ValidationErrorType.OVERLAPPING_PARTITIONS,\n          };\n        }\n      }\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that a stair room exists for dungeon completion\n   */\n  validateStairRoomExists(partitions: Partition[]): ValidationResult {\n    const hasStairRoom = partitions.some((p) => p.type === RoomType.DOWNLADDER);\n    if (!hasStairRoom) {\n      const errorMessage = \"Stair room missing - dungeon cannot be completed\";\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.STAIR_ROOM_MISSING,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that a rope cave starting room exists\n   */\n  validateRopeCaveExists(partitions: Partition[]): ValidationResult {\n    const hasRopeCave = partitions.some((p) => p.type === RoomType.ROPECAVE);\n    if (!hasRopeCave) {\n      const errorMessage = \"Rope cave starting room missing\";\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_CAVE_ROOMS,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates room connectivity by checking that all rooms have connections\n   */\n  validateConnectivity(partitions: Partition[]): ValidationResult {\n    const unconnectedRooms = partitions.filter(\n      (partition) => partition.connections.length === 0,\n    );\n\n    if (unconnectedRooms.length > 0) {\n      const errorMessage = `Found ${unconnectedRooms.length} unconnected rooms`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Validates that required room types are present\n   */\n  validateRequiredRoomTypes(\n    partitions: Partition[],\n    requiredTypes: RoomType[],\n  ): ValidationResult {\n    const presentTypes = new Set(partitions.map((p) => p.type));\n    const missingTypes = requiredTypes.filter(\n      (type) => !presentTypes.has(type),\n    );\n\n    if (missingTypes.length > 0) {\n      const errorMessage = `Missing required room types: ${missingTypes.join(\", \")}`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n    return { isValid: true };\n  }\n\n  /**\n   * Comprehensive validation for partition quality\n   */\n  validatePartitionQuality(partitions: Partition[]): ValidationResult {\n    // Check for degenerate partitions (too small)\n    const minSize = 4;\n    const tooSmallPartitions = partitions.filter(\n      (p) => p.w < minSize || p.h < minSize,\n    );\n\n    if (tooSmallPartitions.length > 0) {\n      const errorMessage = `Found ${tooSmallPartitions.length} partitions smaller than minimum size ${minSize}`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n\n    // Check for partitions with negative dimensions\n    const invalidPartitions = partitions.filter(\n      (p) => p.w <= 0 || p.h <= 0 || p.x < 0 || p.y < 0,\n    );\n\n    if (invalidPartitions.length > 0) {\n      const errorMessage = `Found ${invalidPartitions.length} partitions with invalid dimensions`;\n      this.logValidationError(errorMessage);\n      return {\n        isValid: false,\n        errorMessage,\n        errorType: ValidationErrorType.INSUFFICIENT_ROOMS,\n      };\n    }\n\n    return { isValid: true };\n  }\n\n  /**\n   * Logs validation errors if debug messages are enabled\n   */\n  private logValidationError(message: string): void {\n    if (this.enableDebugMessages) {\n      console.warn(`[LevelValidator] ${message}`);\n      if (this.game && this.game.pushMessage) {\n        this.game.pushMessage(message);\n      }\n    }\n  }\n\n  /**\n   * Validates and provides detailed reporting for debugging\n   */\n  validateWithDetailedReport(\n    partitions: Partition[],\n    params: LevelParameters,\n    type: \"dungeon\" | \"cave\" | \"tutorial\" = \"dungeon\",\n  ): ValidationResult & { details: string[] } {\n    const details: string[] = [];\n\n    details.push(`Validating ${type} with ${partitions.length} partitions`);\n\n    if (type === \"dungeon\") {\n      details.push(`Required minimum rooms: ${params.minRoomCount}`);\n      details.push(`Required maximum rooms: ${params.maxRoomCount}`);\n    }\n\n    const result =\n      type === \"dungeon\"\n        ? this.validateDungeonPartitions(partitions, params)\n        : type === \"cave\"\n          ? this.validateCavePartitions(partitions, 8)\n          : this.validateTutorialPartitions(partitions);\n\n    if (!result.isValid) {\n      details.push(`Validation failed: ${result.errorMessage}`);\n    } else {\n      details.push(\"Validation passed\");\n    }\n\n    return {\n      ...result,\n      details,\n    };\n  }\n}\n","import { Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\nimport { LevelParameters } from \"./levelParametersGenerator\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { LevelValidator, ValidationResult } from \"./levelValidator\";\r\nimport { GenerationVisualizer } from \"./generationVisualizer\";\r\nimport { SidePathOptions } from \"./sidePathManager\";\r\n\r\nexport enum PathType {\r\n  MAIN_PATH, // Has exit room (current dungeon)\r\n  SIDE_PATH, // No exit room (current cave/ropehole)\r\n  TUTORIAL, // Special case\r\n}\r\n\r\nexport interface PathParameters {\r\n  pathType: PathType;\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n  roomCount: { min: number; max: number };\r\n  splitProbabilities: number[];\r\n  wallRemoveProbability: number;\r\n  maxRoomArea: number;\r\n  softMaxRoomArea: number;\r\n  connectionStyle: \"linear\" | \"branched\";\r\n  loopDoorCount: { min: number; max: number };\r\n}\r\n\r\nexport class PartitionConnection {\r\n  x: number;\r\n  y: number;\r\n  other: Partition;\r\n\r\n  constructor(x: number, y: number, other: Partition) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.other = other;\r\n  }\r\n}\r\n\r\nexport class Partition {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  type: RoomType;\r\n  fillStyle: string;\r\n  connections: Array<PartitionConnection>;\r\n  distance: number;\r\n  isTopOpen: boolean;\r\n  isRightOpen: boolean;\r\n  isBottomOpen: boolean;\r\n  isLeftOpen: boolean;\r\n  pathIndex: number;\r\n\r\n  constructor(x: number, y: number, w: number, h: number, fillStyle: string) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.fillStyle = fillStyle;\r\n    this.type = RoomType.DUNGEON;\r\n    this.connections = [];\r\n    this.distance = 1000;\r\n    this.isTopOpen = true;\r\n    this.isRightOpen = true;\r\n    this.isBottomOpen = true;\r\n    this.isLeftOpen = true;\r\n    this.pathIndex = 0;\r\n  }\r\n\r\n  split = async (): Promise<Array<Partition>> => {\r\n    // Remove the setTimeout - animation is now handled by visualizer\r\n    // The visualizer will handle the delay through createAnimationDelay('partition')\r\n\r\n    // Reset open walls when a partition is split\r\n    this.isTopOpen = true;\r\n    this.isRightOpen = true;\r\n    this.isBottomOpen = true;\r\n    this.isLeftOpen = true;\r\n\r\n    // This function generates a random number around the center (0.5) within a certain width (0.6).\r\n    let rand_mid = () => {\r\n      let center = 0.5;\r\n      let width = 0.6;\r\n      return (Random.rand() - 0.5) * width + center;\r\n    };\r\n\r\n    let MIN_SIZE = 4;\r\n\r\n    if (this.w > this.h) {\r\n      let w1 = Math.floor(rand_mid() * this.w);\r\n      let w2 = this.w - w1 - 1;\r\n      if (w1 < MIN_SIZE || w2 < MIN_SIZE) return [this];\r\n      return [\r\n        new Partition(this.x, this.y, w1, this.h, this.fillStyle),\r\n        new Partition(this.x + w1 + 1, this.y, w2, this.h, this.fillStyle),\r\n      ];\r\n    } else {\r\n      let h1 = Math.floor(rand_mid() * this.h);\r\n      let h2 = this.h - h1 - 1;\r\n      if (h1 < MIN_SIZE || h2 < MIN_SIZE) return [this];\r\n      return [\r\n        new Partition(this.x, this.y, this.w, h1, this.fillStyle),\r\n        new Partition(this.x, this.y + h1 + 1, this.w, h2, this.fillStyle),\r\n      ];\r\n    }\r\n  };\r\n\r\n  point_in = (x: number, y: number): boolean => {\r\n    return (\r\n      x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h\r\n    );\r\n  };\r\n\r\n  point_next_to = (x: number, y: number): boolean => {\r\n    return (\r\n      (x >= this.x - 1 &&\r\n        x < this.x + this.w + 1 &&\r\n        y >= this.y &&\r\n        y < this.y + this.h) ||\r\n      (x >= this.x &&\r\n        x < this.x + this.w &&\r\n        y >= this.y - 1 &&\r\n        y < this.y + this.h + 1)\r\n    );\r\n  };\r\n\r\n  area = (): number => {\r\n    return this.w * this.h;\r\n  };\r\n\r\n  overlaps = (other: Partition): boolean => {\r\n    return (\r\n      other.x < this.x + this.w + 1 &&\r\n      other.x + other.w > this.x - 1 &&\r\n      other.y < this.y + this.h + 1 &&\r\n      other.y + other.h > this.y - 1\r\n    );\r\n  };\r\n\r\n  setOpenWall = (connection: PartitionConnection) => {\r\n    if (\r\n      connection.y === this.y - 1 &&\r\n      connection.x >= this.x &&\r\n      connection.x < this.x + this.w\r\n    ) {\r\n      this.isTopOpen = false;\r\n    }\r\n    if (\r\n      connection.y === this.y + this.h &&\r\n      connection.x >= this.x &&\r\n      connection.x < this.x + this.w\r\n    ) {\r\n      this.isBottomOpen = false;\r\n    }\r\n    if (\r\n      connection.x === this.x + this.w &&\r\n      connection.y >= this.y &&\r\n      connection.y < this.y + this.h\r\n    ) {\r\n      this.isRightOpen = false;\r\n    }\r\n    if (\r\n      connection.x === this.x - 1 &&\r\n      connection.y >= this.y &&\r\n      connection.y < this.y + this.h\r\n    ) {\r\n      this.isLeftOpen = false;\r\n    }\r\n  };\r\n\r\n  get_branch_point = (): { x: number; y: number } => {\r\n    let points = [];\r\n    for (let x = this.x; x < this.x + this.w; x++) {\r\n      points.push({ x: x, y: this.y - 1 });\r\n      points.push({ x: x, y: this.y + this.h });\r\n    }\r\n    for (let y = this.y; y < this.y + this.h; y++) {\r\n      points.push({ x: this.x - 1, y: y });\r\n      points.push({ x: this.x + this.w, y: y });\r\n    }\r\n    points = points.filter(\r\n      (p) =>\r\n        !this.connections.some(\r\n          (c) => Math.abs(c.x - p.x) + Math.abs(c.y - p.y) <= 1,\r\n        ),\r\n    );\r\n    points.sort(() => 0.5 - Random.rand());\r\n    return points[0];\r\n  };\r\n}\r\n\r\nexport class PartialLevel {\r\n  partitions: Array<Partition>;\r\n\r\n  constructor() {\r\n    this.partitions = [];\r\n  }\r\n}\r\n\r\nexport class PartitionGenerator {\r\n  private validator: LevelValidator;\r\n  private visualizer: GenerationVisualizer;\r\n\r\n  constructor(game: Game) {\r\n    this.validator = new LevelValidator(game);\r\n    this.visualizer = new GenerationVisualizer(game);\r\n  }\r\n\r\n  async generateDungeonPartitions(\r\n    game: Game,\r\n    mapWidth: number,\r\n    mapHeight: number,\r\n    depth: number,\r\n    params: LevelParameters,\r\n    controls?: { branching?: number; loopiness?: number },\r\n  ): Promise<Partition[]> {\r\n    const partialLevel = new PartialLevel();\r\n    let validationResult: ValidationResult;\r\n    let attempts = 0;\r\n\r\n    this.visualizer.updateProgress(\"Starting dungeon generation\", 0);\r\n\r\n    do {\r\n      attempts++;\r\n      this.visualizer.updateProgress(\r\n        `Generating candidate ${attempts}`,\r\n        attempts * 0.1,\r\n      );\r\n\r\n      await this.generateDungeonCandidate(\r\n        game,\r\n        partialLevel,\r\n        mapWidth,\r\n        mapHeight,\r\n        depth,\r\n        params,\r\n        controls,\r\n      );\r\n\r\n      validationResult = this.validator.validateDungeonPartitions(\r\n        partialLevel.partitions,\r\n        params,\r\n      );\r\n\r\n      // Update visualization state\r\n      this.visualizer.setVisualizationState(\r\n        partialLevel.partitions,\r\n        mapWidth / 2,\r\n        mapHeight / 2,\r\n        \"validating\",\r\n        0.8,\r\n      );\r\n\r\n      // If validation fails, the loop will continue and regenerate\r\n    } while (!validationResult.isValid);\r\n\r\n    this.visualizer.updateProgress(\"Finalizing generation\", 0.9);\r\n    await this.visualizer.createAnimationDelay(\"large\");\r\n\r\n    this.visualizer.createVisualEffect(\"generation_complete\");\r\n    this.visualizer.updateProgress(\"Generation complete\", 1.0);\r\n\r\n    console.log(\"finished generation\");\r\n    return partialLevel.partitions;\r\n  }\r\n\r\n  async generateCavePartitions(opts: SidePathOptions): Promise<Partition[]> {\r\n    const partialLevel = new PartialLevel();\r\n    let validationResult: ValidationResult;\r\n    let attempts = 0;\r\n    const mapWidth = opts.mapWidth ?? 50;\r\n    const mapHeight = opts.mapHeight ?? 50;\r\n    const numRooms = opts.caveRooms ?? 8;\r\n    const hasLinearity = typeof opts.linearity === \"number\";\r\n    const branching =\r\n      typeof opts.branching === \"number\"\r\n        ? opts.branching\r\n        : hasLinearity\r\n          ? Math.max(0, Math.min(1, 1 - (opts.linearity as number)))\r\n          : 0.5; // default: 50% chance of second door\r\n    const loopiness =\r\n      typeof opts.loopiness === \"number\"\r\n        ? opts.loopiness\r\n        : hasLinearity\r\n          ? Math.max(0, Math.min(1, 1 - (opts.linearity as number)))\r\n          : 0.5; // default: moderate loops\r\n\r\n    this.visualizer.updateProgress(\"Starting cave generation\", 0);\r\n\r\n    do {\r\n      attempts++;\r\n      this.visualizer.updateProgress(\r\n        `Generating cave candidate ${attempts}`,\r\n        attempts * 0.1,\r\n      );\r\n\r\n      await this.generateCaveCandidate(\r\n        partialLevel,\r\n        mapWidth,\r\n        mapHeight,\r\n        numRooms,\r\n        branching,\r\n        loopiness,\r\n      );\r\n\r\n      validationResult = this.validator.validateCavePartitions(\r\n        partialLevel.partitions,\r\n        numRooms,\r\n      );\r\n\r\n      // Update visualization state\r\n      this.visualizer.setVisualizationState(\r\n        partialLevel.partitions,\r\n        mapWidth / 2,\r\n        mapHeight / 2,\r\n        \"validating cave\",\r\n        0.8,\r\n      );\r\n\r\n      // If validation fails, the loop will continue and regenerate\r\n    } while (!validationResult.isValid);\r\n\r\n    this.visualizer.updateProgress(\"Cave generation complete\", 1.0);\r\n    return partialLevel.partitions;\r\n  }\r\n\r\n  generateTutorialPartitions(\r\n    height: number = 7,\r\n    width: number = 7,\r\n  ): Partition[] {\r\n    const partitions = [new Partition(0, 0, height, width, \"white\")];\r\n    partitions[0].type = RoomType.TUTORIAL;\r\n\r\n    // Validate tutorial partitions\r\n    const validationResult =\r\n      this.validator.validateTutorialPartitions(partitions);\r\n    if (!validationResult.isValid) {\r\n      throw new Error(\r\n        `Tutorial validation failed: ${validationResult.errorMessage}`,\r\n      );\r\n    }\r\n\r\n    return partitions;\r\n  }\r\n\r\n  private async generateDungeonCandidate(\r\n    game: Game,\r\n    partialLevel: PartialLevel,\r\n    map_w: number,\r\n    map_h: number,\r\n    depth: number,\r\n    params: LevelParameters,\r\n    controls?: { branching?: number; loopiness?: number },\r\n  ) {\r\n    const {\r\n      minRoomCount,\r\n      maxRoomCount,\r\n      maxRoomArea,\r\n      splitProbabilities,\r\n      wallRemoveProbability,\r\n      softMaxRoomArea,\r\n    } = params;\r\n\r\n    partialLevel.partitions = [new Partition(0, 0, map_w, map_h, \"white\")];\r\n\r\n    this.visualizer.updateProgress(\"Splitting partitions\", 0.1);\r\n    this.visualizer.setVisualizationState(\r\n      partialLevel.partitions,\r\n      map_w / 2,\r\n      map_h / 2,\r\n      \"splitting\",\r\n    );\r\n\r\n    // Use splitProbabilities for splitting\r\n    while (partialLevel.partitions.length < params.maxRoomCount) {\r\n      for (let i = 0; i < splitProbabilities.length; i++) {\r\n        partialLevel.partitions = await this.splitPartitions(\r\n          partialLevel.partitions,\r\n          splitProbabilities[i],\r\n        );\r\n\r\n        // Update visualization after each split\r\n        this.visualizer.setVisualizationState(\r\n          partialLevel.partitions,\r\n          map_w / 2,\r\n          map_h / 2,\r\n          \"splitting\",\r\n          0.1 + (i / splitProbabilities.length) * 0.2,\r\n        );\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      partialLevel.partitions.forEach(async (partition) => {\r\n        let roomArea = Random.rand() > 0.95 ? softMaxRoomArea : maxRoomArea;\r\n        if (partition.area() > roomArea) {\r\n          partialLevel.partitions = partialLevel.partitions.filter(\r\n            (p) => p !== partition,\r\n          );\r\n          partialLevel.partitions = partialLevel.partitions.concat(\r\n            await this.splitPartition(partition, 0.5),\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    this.visualizer.updateProgress(\"Removing wall rooms\", 0.4);\r\n    partialLevel.partitions = this.removeWallRooms(\r\n      partialLevel.partitions,\r\n      map_w,\r\n      map_h,\r\n      wallRemoveProbability,\r\n    );\r\n\r\n    await this.visualizer.createAnimationDelay(\"large\");\r\n\r\n    if (partialLevel.partitions.length === 0) {\r\n      partialLevel.partitions = [];\r\n      return;\r\n    }\r\n\r\n    this.visualizer.updateProgress(\"Assigning room types\", 0.5);\r\n    // Sort and assign room types\r\n    partialLevel.partitions.sort((a, b) => a.area() - b.area());\r\n    this.visualizer.updatePartitionStyles(partialLevel.partitions);\r\n\r\n    if (partialLevel.partitions.length === 0) {\r\n      partialLevel.partitions = [];\r\n      return;\r\n    }\r\n\r\n    let spawn = partialLevel.partitions[0];\r\n    if (!spawn) {\r\n      partialLevel.partitions = [];\r\n      return;\r\n    }\r\n\r\n    spawn.type = RoomType.START;\r\n    spawn.fillStyle = \"rgb(0, 255, 0)\";\r\n    if (partialLevel.partitions.length > 1) {\r\n      partialLevel.partitions[partialLevel.partitions.length - 1].type =\r\n        RoomType.BOSS;\r\n      partialLevel.partitions[partialLevel.partitions.length - 1].fillStyle =\r\n        \"red\";\r\n    }\r\n\r\n    this.visualizer.updateProgress(\"Connecting partitions\", 0.6);\r\n    await this.connectPartitions(partialLevel, spawn, controls?.branching);\r\n\r\n    this.visualizer.updateProgress(\"Adding loop connections\", 0.7);\r\n    if (partialLevel.partitions.length > 0) {\r\n      await this.addLoopConnections(partialLevel, controls?.loopiness);\r\n    }\r\n\r\n    this.visualizer.updateProgress(\"Adding stair room\", 0.8);\r\n    if (partialLevel.partitions.length > 0) {\r\n      await this.addStairRoom(partialLevel, game);\r\n    }\r\n\r\n    this.visualizer.updateProgress(\"Calculating distances\", 0.9);\r\n    if (partialLevel.partitions.length > 0) {\r\n      await this.calculateDistances(partialLevel, spawn);\r\n      await this.addSpecialRooms(partialLevel);\r\n    }\r\n  }\r\n\r\n  private async generateCaveCandidate(\r\n    partialLevel: PartialLevel,\r\n    map_w: number,\r\n    map_h: number,\r\n    num_rooms: number,\r\n    branching: number = 0.5,\r\n    loopiness: number = 0.5,\r\n  ) {\r\n    const CAVE_OFFSET = 100;\r\n    partialLevel.partitions = [\r\n      new Partition(CAVE_OFFSET, CAVE_OFFSET, map_w, map_h, \"white\"),\r\n    ];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      partialLevel.partitions = await this.splitPartitions(\r\n        partialLevel.partitions,\r\n        0.75,\r\n      );\r\n    }\r\n\r\n    partialLevel.partitions.sort((a, b) => a.area() - b.area());\r\n\r\n    if (partialLevel.partitions.length === 0) {\r\n      throw new Error(\"No partitions generated.\");\r\n    }\r\n\r\n    let spawn = partialLevel.partitions[0];\r\n    spawn.type = RoomType.ROPECAVE;\r\n    for (let i = 1; i < partialLevel.partitions.length; i++) {\r\n      partialLevel.partitions[i].type = RoomType.CAVE;\r\n    }\r\n\r\n    await this.connectCavePartitions(partialLevel, spawn, num_rooms, branching);\r\n    await this.addCaveLoops(partialLevel, loopiness);\r\n    await this.calculateDistances(partialLevel, spawn);\r\n  }\r\n\r\n  private async splitPartitions(\r\n    partitions: Array<Partition>,\r\n    prob: number,\r\n  ): Promise<Array<Partition>> {\r\n    for (let partition of partitions) {\r\n      if (Random.rand() < prob) {\r\n        this.visualizer.createVisualEffect(\"partition_split\", partition);\r\n        partitions = partitions.filter((p) => p !== partition);\r\n        partitions = partitions.concat(await partition.split());\r\n      }\r\n    }\r\n    return partitions;\r\n  }\r\n\r\n  private async splitPartition(\r\n    partition: Partition,\r\n    prob: number,\r\n  ): Promise<Array<Partition>> {\r\n    if (Random.rand() < prob) {\r\n      return await partition.split();\r\n    } else {\r\n      return [partition];\r\n    }\r\n  }\r\n\r\n  private getWallRooms(\r\n    partitions: Array<Partition>,\r\n    mapWidth: number,\r\n    mapHeight: number,\r\n  ): Array<Partition> {\r\n    return partitions.filter((partition) => {\r\n      const isPathClear = (\r\n        direction: \"left\" | \"right\" | \"top\" | \"bottom\",\r\n      ): boolean => {\r\n        switch (direction) {\r\n          case \"left\":\r\n            for (let y = partition.y; y < partition.y + partition.h; y++) {\r\n              let blocked = partitions.some((other) => {\r\n                if (other === partition) return false;\r\n                return (\r\n                  other.y <= y &&\r\n                  y < other.y + other.h &&\r\n                  other.x + other.w > 0 &&\r\n                  other.x + other.w <= partition.x\r\n                );\r\n              });\r\n              if (!blocked) return true;\r\n            }\r\n            return false;\r\n          case \"right\":\r\n            for (let y = partition.y; y < partition.y + partition.h; y++) {\r\n              let blocked = partitions.some((other) => {\r\n                if (other === partition) return false;\r\n                return (\r\n                  other.y <= y &&\r\n                  y < other.y + other.h &&\r\n                  other.x < mapWidth &&\r\n                  other.x >= partition.x + partition.w\r\n                );\r\n              });\r\n              if (!blocked) return true;\r\n            }\r\n            return false;\r\n          case \"top\":\r\n            for (let x = partition.x; x < partition.x + partition.w; x++) {\r\n              let blocked = partitions.some((other) => {\r\n                if (other === partition) return false;\r\n                return (\r\n                  other.x <= x &&\r\n                  x < other.x + other.w &&\r\n                  other.y + other.h > 0 &&\r\n                  other.y + other.h <= partition.y\r\n                );\r\n              });\r\n              if (!blocked) return true;\r\n            }\r\n            return false;\r\n          case \"bottom\":\r\n            for (let x = partition.x; x < partition.x + partition.w; x++) {\r\n              let blocked = partitions.some((other) => {\r\n                if (other === partition) return false;\r\n                return (\r\n                  other.x <= x &&\r\n                  x < other.x + other.w &&\r\n                  other.y < mapHeight &&\r\n                  other.y >= partition.y + partition.h\r\n                );\r\n              });\r\n              if (!blocked) return true;\r\n            }\r\n            return false;\r\n          default:\r\n            return false;\r\n        }\r\n      };\r\n\r\n      const openPaths = [\r\n        isPathClear(\"left\"),\r\n        isPathClear(\"right\"),\r\n        isPathClear(\"top\"),\r\n        isPathClear(\"bottom\"),\r\n      ].filter(Boolean).length;\r\n\r\n      return openPaths === 1;\r\n    });\r\n  }\r\n\r\n  private removeWallRooms(\r\n    partitions: Array<Partition>,\r\n    w: number,\r\n    h: number,\r\n    prob: number = 1.0,\r\n  ): Array<Partition> {\r\n    const wallRooms = this.getWallRooms(partitions, w, h);\r\n\r\n    for (const wallRoom of wallRooms) {\r\n      if (Random.rand() < prob) {\r\n        partitions = partitions.filter((p) => p !== wallRoom);\r\n      }\r\n    }\r\n\r\n    return partitions;\r\n  }\r\n\r\n  private async connectPartitions(\r\n    partialLevel: PartialLevel,\r\n    spawn: Partition,\r\n    branching?: number,\r\n  ) {\r\n    let connected = [spawn];\r\n    let frontier = [spawn];\r\n    let found_boss = false;\r\n\r\n    while (frontier.length > 0 && !found_boss) {\r\n      let room = frontier[0];\r\n      if (room !== spawn) {\r\n        this.visualizer.createVisualEffect(\"room_connected\", room);\r\n      }\r\n      frontier.splice(0, 1);\r\n\r\n      let doors_found = 0;\r\n      // Default behavior kept if branching is undefined\r\n      const num_doors =\r\n        branching === undefined\r\n          ? Math.floor(Random.rand() * 2 + 1)\r\n          : 1 + (Random.rand() < Math.max(0, Math.min(1, branching)) ? 1 : 0);\r\n      let tries = 0;\r\n      const max_tries = 1000;\r\n\r\n      while (doors_found < num_doors && tries < max_tries) {\r\n        let point = room.get_branch_point();\r\n        for (const p of partialLevel.partitions) {\r\n          if (\r\n            p !== room &&\r\n            connected.indexOf(p) === -1 &&\r\n            p.point_next_to(point.x, point.y)\r\n          ) {\r\n            room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n            p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n\r\n            room.setOpenWall(new PartitionConnection(point.x, point.y, p));\r\n            p.setOpenWall(new PartitionConnection(point.x, point.y, room));\r\n\r\n            frontier.push(p);\r\n            connected.push(p);\r\n            doors_found++;\r\n            if (p.type === RoomType.BOSS) {\r\n              found_boss = true;\r\n              this.visualizer.createVisualEffect(\"boss_found\", p);\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        tries++;\r\n      }\r\n\r\n      await this.visualizer.createAnimationDelay(\"pathfinding\");\r\n    }\r\n\r\n    // Remove unconnected rooms\r\n    for (const partition of partialLevel.partitions) {\r\n      if (partition.connections.length === 0) {\r\n        partialLevel.partitions = partialLevel.partitions.filter(\r\n          (p) => p !== partition,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private async connectCavePartitions(\r\n    partialLevel: PartialLevel,\r\n    spawn: Partition,\r\n    num_rooms: number,\r\n    branching: number = 0.5,\r\n  ) {\r\n    let connected = [spawn];\r\n    let frontier = [spawn];\r\n\r\n    while (frontier.length > 0 && connected.length < num_rooms) {\r\n      let room = frontier[0];\r\n      frontier.splice(0, 1);\r\n\r\n      let doors_found = 0;\r\n      // branching controls probability of a second door\r\n      const pSecondDoor = Math.max(0, Math.min(1, branching));\r\n      const num_doors = 1 + (Random.rand() < pSecondDoor ? 1 : 0);\r\n      let tries = 0;\r\n      const max_tries = 1000;\r\n\r\n      while (\r\n        doors_found < num_doors &&\r\n        tries < max_tries &&\r\n        connected.length < num_rooms\r\n      ) {\r\n        let point = room.get_branch_point();\r\n        if (!point) break;\r\n\r\n        for (const p of partialLevel.partitions) {\r\n          if (\r\n            p !== room &&\r\n            connected.indexOf(p) === -1 &&\r\n            p.point_next_to(point.x, point.y)\r\n          ) {\r\n            room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n            p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n            frontier.push(p);\r\n            connected.push(p);\r\n            doors_found++;\r\n            break;\r\n          }\r\n        }\r\n        tries++;\r\n      }\r\n    }\r\n\r\n    // Remove unconnected rooms\r\n    partialLevel.partitions = partialLevel.partitions.filter(\r\n      (partition) => partition.connections.length > 0,\r\n    );\r\n\r\n    if (partialLevel.partitions.length === 0) {\r\n      throw new Error(\"No valid rooms after filtering.\");\r\n    }\r\n  }\r\n\r\n  private async addLoopConnections(\r\n    partialLevel: PartialLevel,\r\n    loopiness?: number,\r\n  ) {\r\n    // Check if we have any partitions to work with\r\n    if (partialLevel.partitions.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let num_loop_doors =\r\n      loopiness === undefined\r\n        ? Math.floor(Random.rand() * 4 + 4)\r\n        : Math.floor(\r\n            (Random.rand() * 4 + 4) * Math.max(0, Math.min(1, loopiness)),\r\n          );\r\n    for (let i = 0; i < num_loop_doors; i++) {\r\n      // Double-check array length in case partitions were removed during iteration\r\n      if (partialLevel.partitions.length === 0) {\r\n        break;\r\n      }\r\n\r\n      let roomIndex = Math.floor(\r\n        Random.rand() * partialLevel.partitions.length,\r\n      );\r\n      let room = partialLevel.partitions[roomIndex];\r\n\r\n      // Safety check to ensure room exists\r\n      if (!room) {\r\n        continue;\r\n      }\r\n\r\n      let found_door = false;\r\n      let tries = 0;\r\n      const max_tries = 10;\r\n\r\n      let not_already_connected = partialLevel.partitions.filter(\r\n        (p) => p && !room.connections.some((c) => c.other === p),\r\n      );\r\n\r\n      while (!found_door && tries < max_tries) {\r\n        let point = room.get_branch_point();\r\n        if (!point) {\r\n          break; // Skip if no valid branch point found\r\n        }\r\n\r\n        for (const p of not_already_connected) {\r\n          if (p && p !== room && p.point_next_to(point.x, point.y)) {\r\n            room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n            p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n\r\n            room.setOpenWall(new PartitionConnection(point.x, point.y, p));\r\n            p.setOpenWall(new PartitionConnection(point.x, point.y, room));\r\n\r\n            found_door = true;\r\n            break;\r\n          }\r\n        }\r\n        tries++;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async addCaveLoops(\r\n    partialLevel: PartialLevel,\r\n    loopiness: number = 0.5,\r\n  ) {\r\n    // Check if we have any partitions to work with\r\n    if (partialLevel.partitions.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let num_loop_doors = Math.floor(\r\n      (Random.rand() * 4 + 4) * Math.max(0, Math.min(1, loopiness)),\r\n    );\r\n    for (let i = 0; i < num_loop_doors; i++) {\r\n      // Double-check array length in case partitions were removed during iteration\r\n      if (partialLevel.partitions.length === 0) {\r\n        break;\r\n      }\r\n\r\n      let roomIndex = Math.floor(\r\n        Random.rand() * partialLevel.partitions.length,\r\n      );\r\n      let room = partialLevel.partitions[roomIndex];\r\n\r\n      // Safety check to ensure room exists\r\n      if (!room) {\r\n        continue;\r\n      }\r\n\r\n      let found_door = false;\r\n      let tries = 0;\r\n      const max_tries = 100;\r\n\r\n      let not_already_connected = partialLevel.partitions.filter(\r\n        (p) => p && !room.connections.some((c) => c.other === p),\r\n      );\r\n\r\n      while (!found_door && tries < max_tries) {\r\n        let point = room.get_branch_point();\r\n        if (!point) {\r\n          break; // Skip if no valid branch point found\r\n        }\r\n\r\n        for (const p of not_already_connected) {\r\n          if (p && p !== room && p.point_next_to(point.x, point.y)) {\r\n            room.connections.push(new PartitionConnection(point.x, point.y, p));\r\n            p.connections.push(new PartitionConnection(point.x, point.y, room));\r\n            found_door = true;\r\n            break;\r\n          }\r\n        }\r\n        tries++;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async addStairRoom(partialLevel: PartialLevel, game: Game) {\r\n    if (!partialLevel.partitions.some((p) => p.type === RoomType.BOSS)) {\r\n      partialLevel.partitions = [];\r\n      return;\r\n    }\r\n\r\n    let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\r\n    let found_stair = false;\r\n    const max_stair_tries = 5;\r\n    const stairRoomWidth = 5;\r\n    const stairRoomHeight = 5;\r\n\r\n    for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\r\n      let stair = new Partition(\r\n        Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand),\r\n        boss.y - stairRoomHeight - 1,\r\n        stairRoomWidth,\r\n        stairRoomHeight,\r\n        \"white\",\r\n      );\r\n      stair.type = RoomType.DOWNLADDER;\r\n      stair.fillStyle = \"blue\";\r\n\r\n      if (!partialLevel.partitions.some((p) => p.overlaps(stair))) {\r\n        found_stair = true;\r\n        partialLevel.partitions.push(stair);\r\n        stair.connections.push(\r\n          new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, boss),\r\n        );\r\n        boss.connections.push(\r\n          new PartitionConnection(\r\n            stair.x + 1,\r\n            stair.y + stairRoomHeight,\r\n            stair,\r\n          ),\r\n        );\r\n\r\n        stair.setOpenWall(\r\n          new PartitionConnection(stair.x + 1, stair.y + stairRoomHeight, boss),\r\n        );\r\n        boss.setOpenWall(\r\n          new PartitionConnection(\r\n            stair.x + 1,\r\n            stair.y + stairRoomHeight,\r\n            stair,\r\n          ),\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!found_stair) {\r\n      console.log(\"No stair found\");\r\n      partialLevel.partitions = [];\r\n    }\r\n  }\r\n\r\n  private async calculateDistances(\r\n    partialLevel: PartialLevel,\r\n    spawn: Partition,\r\n  ) {\r\n    let frontier = [spawn];\r\n    let seen = [];\r\n    spawn.distance = 0;\r\n\r\n    while (frontier.length > 0) {\r\n      let room = frontier[0];\r\n      frontier.splice(0, 1);\r\n      seen.push(room);\r\n\r\n      for (let c of room.connections) {\r\n        let other = c.other;\r\n        other.distance = Math.min(other.distance, room.distance + 1);\r\n        if (seen.indexOf(other) === -1) frontier.push(other);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async addSpecialRooms(partialLevel: PartialLevel) {\r\n    let added_rope_hole = false;\r\n    for (const p of partialLevel.partitions) {\r\n      if (p.type === RoomType.DUNGEON) {\r\n        if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0) {\r\n          p.type = RoomType.TREASURE;\r\n        } /*else if (!added_rope_hole) {\r\n          p.type = RoomType.ROPEHOLE;\r\n          added_rope_hole = true;\r\n        }*/\r\n      }\r\n    }\r\n\r\n    await this.visualizer.createAnimationDelay(\"large\");\r\n  }\r\n\r\n  // Add method to get visualizer (for external access)\r\n  getVisualizer(): GenerationVisualizer {\r\n    return this.visualizer;\r\n  }\r\n}\r\n","import {\n  Partition,\n  PartitionConnection,\n  PartialLevel,\n} from \"./partitionGenerator\";\nimport { RoomType } from \"../room/room\";\nimport { Random } from \"../utility/random\";\nimport { Game } from \"../game\";\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  color: string;\n}\n\n// Color-to-RoomType mapping for level designers\nconst COLOR_TO_ROOM_TYPE: { [color: string]: RoomType } = {\n  // Core room types\n  \"rgb(0, 255, 0)\": RoomType.START, // Green - Starting room\n  \"rgb(255, 0, 0)\": RoomType.BOSS, // Red - Boss room\n  \"rgb(0, 0, 255)\": RoomType.DOWNLADDER, // Blue - Stairs down\n  \"rgb(0, 255, 255)\": RoomType.UPLADDER, // Cyan - Stairs up\n\n  // Special rooms\n  \"rgb(255, 255, 0)\": RoomType.TREASURE, // Yellow - Treasure room\n  \"rgb(255, 0, 255)\": RoomType.SHOP, // Magenta - Shop\n  \"rgb(128, 0, 128)\": RoomType.FOUNTAIN, // Purple - Fountain room\n  \"rgb(139, 69, 19)\": RoomType.COFFIN, // Brown - Coffin room\n  \"rgb(255, 165, 0)\": RoomType.KEYROOM, // Orange - Key room\n\n  // Puzzle and special mechanics\n  \"rgb(64, 64, 64)\": RoomType.PUZZLE, // Dark gray - Puzzle room\n  \"rgb(0, 0, 0)\": RoomType.CHESSBOARD, // Black - Chess room\n  \"rgb(192, 192, 192)\": RoomType.MAZE, // Light gray - Maze\n  \"rgb(255, 192, 203)\": RoomType.SPAWNER, // Pink - Spawner room\n\n  // Environment types\n  \"rgb(34, 139, 34)\": RoomType.GRASS, // Forest green - Grass room\n  \"rgb(101, 67, 33)\": RoomType.CAVE, // Dark brown - Cave\n  \"rgb(85, 107, 47)\": RoomType.GRAVEYARD, // Olive - Graveyard\n  \"rgb(46, 125, 50)\": RoomType.FOREST, // Green - Forest\n\n  // Corridors and connections\n  \"rgb(160, 160, 160)\": RoomType.CORRIDOR, // Gray - Corridor\n  \"rgb(255, 87, 34)\": RoomType.SPIKECORRIDOR, // Red-orange - Spike corridor\n\n  // Cave system\n  \"rgb(121, 85, 72)\": RoomType.BIGCAVE, // Light brown - Big cave\n  \"rgb(78, 52, 46)\": RoomType.ROPECAVE, // Dark brown - Rope cave\n  \"rgb(156, 102, 68)\": RoomType.ROPEHOLE, // Medium brown - Rope hole\n  \"rgb(141, 110, 99)\": RoomType.ROPEUP, // Tan - Rope up\n\n  // Tutorial and misc\n  \"rgb(173, 216, 230)\": RoomType.TUTORIAL, // Light blue - Tutorial\n  \"rgb(250, 250, 250)\": RoomType.BIGDUNGEON, // Near white - Big dungeon\n\n  // Default fallback\n  \"rgb(255, 255, 255)\": RoomType.DUNGEON, // White - Standard dungeon room\n};\n\nexport class PngPartitionGenerator {\n  public async generatePartitionsFromPng(\n    imageUrl: string,\n    game: Game,\n    depth: number,\n    isSidePath: boolean = false, // Add this parameter\n  ): Promise<Partition[]> {\n    //console.log(\"=== PNG PARTITION GENERATION START ===\");\n    //console.log(`Processing image: ${imageUrl}`);\n    //console.log(`Game depth: ${depth}`);\n    //console.log(`Is side path: ${isSidePath}`);\n\n    try {\n      //console.log(\"Step 1: Loading image data...\");\n      const imageData = await this.loadImageData(imageUrl);\n      //console.log(\n      //  `✓ Image loaded: ${imageData.width}x${imageData.height} pixels`,\n      //);\n\n      //console.log(\"Step 2: Finding rectangles...\");\n      const rectangles = this.findRectangles(imageData);\n      //console.log(`✓ Found ${rectangles.length} rectangles:`, rectangles);\n\n      //console.log(\"Step 3: Creating partitions from rectangles...\");\n      const rawPartitions = this.createPartitionsFromRectangles(\n        rectangles,\n        isSidePath,\n      );\n      //console.log(`✓ Created ${rawPartitions.length} raw partitions`);\n\n      if (rawPartitions.length === 0) {\n        console.error(\"❌ No partitions created from image!\");\n        return [];\n      }\n\n      //console.log(\"Step 4: Processing partitions for gameplay...\");\n      const partialLevel = new PartialLevel();\n      partialLevel.partitions = rawPartitions;\n\n      await this.processPartitionsForGameplay(partialLevel, game, isSidePath);\n      console.log(\n        `✓ Final processed partitions: ${partialLevel.partitions.length}`,\n      );\n\n      //console.log(\"=== PNG PARTITION GENERATION COMPLETE ===\");\n      return partialLevel.partitions;\n    } catch (error) {\n      console.error(\"❌ Error in PNG partition generation:\", error);\n      console.error(\"Stack trace:\", error.stack);\n      return [];\n    }\n  }\n\n  private loadImageData(imageUrl: string): Promise<ImageData> {\n    //console.log(`  Loading image from: ${imageUrl}`);\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.crossOrigin = \"Anonymous\";\n\n      image.onload = () => {\n        //console.log(\n        //  `  ✓ Image loaded successfully: ${image.width}x${image.height}`,\n        //);\n        try {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = image.width;\n          canvas.height = image.height;\n          const ctx = canvas.getContext(\"2d\");\n\n          if (!ctx) {\n            throw new Error(\"Could not get canvas context\");\n          }\n\n          ctx.drawImage(image, 0, 0);\n          const imageData = ctx.getImageData(0, 0, image.width, image.height);\n          //    console.log(\n          //  `  ✓ Image data extracted: ${imageData.data.length} bytes`,\n          //);\n          resolve(imageData);\n        } catch (error) {\n          console.error(\"  ❌ Error processing image:\", error);\n          reject(error);\n        }\n      };\n\n      image.onerror = (err) => {\n        console.error(`  ❌ Failed to load image: ${err}`);\n        reject(new Error(`Failed to load image at ${imageUrl}: ${err}`));\n      };\n\n      image.src = imageUrl;\n      //console.log(\"  Image loading initiated...\");\n    });\n  }\n\n  private findRectangles(imageData: ImageData): Rectangle[] {\n    //console.log(\"  Finding rectangles in image...\");\n    const { width, height, data } = imageData;\n    const visited = new Array(width * height).fill(false);\n    const rectangles: Rectangle[] = [];\n\n    //console.log(`  Scanning ${width}x${height} pixels (${data.length} bytes)`);\n\n    let transparentPixels = 0;\n    let processedPixels = 0;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const index = y * width + x;\n        if (visited[index]) {\n          continue;\n        }\n\n        const pixelIndex = index * 4;\n        const alpha = data[pixelIndex + 3];\n\n        if (alpha === 0) {\n          transparentPixels++;\n          continue;\n        }\n\n        processedPixels++;\n        const r = data[pixelIndex];\n        const g = data[pixelIndex + 1];\n        const b = data[pixelIndex + 2];\n        const color = `rgb(${r}, ${g}, ${b})`;\n\n        //console.log(\n        //  `  Processing pixel at (${x}, ${y}): color ${color}, alpha ${alpha}`,\n        //);\n\n        let rectW = 1;\n        while (\n          x + rectW < width &&\n          !visited[y * width + (x + rectW)] &&\n          this.isSameColor(data, pixelIndex, (y * width + x + rectW) * 4)\n        ) {\n          rectW++;\n        }\n\n        let rectH = 1;\n        while (y + rectH < height) {\n          let isRowSolid = true;\n          for (let i = 0; i < rectW; i++) {\n            if (\n              visited[(y + rectH) * width + (x + i)] ||\n              !this.isSameColor(\n                data,\n                pixelIndex,\n                ((y + rectH) * width + x + i) * 4,\n              )\n            ) {\n              isRowSolid = false;\n              break;\n            }\n          }\n          if (isRowSolid) {\n            rectH++;\n          } else {\n            break;\n          }\n        }\n\n        // Mark all pixels in this rectangle as visited\n        for (let j = 0; j < rectH; j++) {\n          for (let i = 0; i < rectW; i++) {\n            visited[(y + j) * width + (x + i)] = true;\n          }\n        }\n\n        const rectangle = { x, y, w: rectW, h: rectH, color };\n        rectangles.push(rectangle);\n        //console.log(\n        //  `  ✓ Found rectangle: ${rectW}x${rectH} at (${x}, ${y}) with color ${color}`,\n        //);\n      }\n    }\n\n    //console.log(`  ✓ Rectangle finding complete:`);\n    //console.log(`    - Transparent pixels: ${transparentPixels}`);\n    //console.log(`    - Processed pixels: ${processedPixels}`);\n    //console.log(`    - Total rectangles found: ${rectangles.length}`);\n\n    return rectangles;\n  }\n\n  private isSameColor(\n    data: Uint8ClampedArray,\n    index1: number,\n    index2: number,\n  ): boolean {\n    const same =\n      data[index1] === data[index2] &&\n      data[index1 + 1] === data[index2 + 1] &&\n      data[index1 + 2] === data[index2 + 2] &&\n      data[index1 + 3] === data[index2 + 3];\n    return same;\n  }\n\n  private createPartitionsFromRectangles(\n    rectangles: Rectangle[],\n    isSidePath: boolean,\n  ): Partition[] {\n    //console.log(\"  Creating partitions from rectangles...\");\n    //console.log(`  Side path mode: ${isSidePath}`);\n\n    if (rectangles.length === 0) {\n      console.warn(\"  ⚠️  No rectangles to create partitions from!\");\n      return [];\n    }\n\n    const partitions = rectangles.map((rect, index) => {\n      //console.log(`  Processing rectangle ${index + 1}/${rectangles.length}:`);\n      //console.log(`    Position: (${rect.x}, ${rect.y})`);\n      //console.log(`    Size: ${rect.w}x${rect.h}`);\n      //console.log(`    Color: ${rect.color}`);\n\n      const partition = new Partition(\n        rect.x,\n        rect.y,\n        rect.w,\n        rect.h,\n        rect.color,\n      );\n\n      if (isSidePath) {\n        // For side paths, use cave-appropriate color mappings\n        const caveRoomType = this.getCaveRoomTypeFromColor(rect.color);\n        partition.type = caveRoomType;\n        //console.log(`    ✓ Cave room type assigned: ${caveRoomType}`);\n      } else {\n        // For main paths, use the existing color mapping\n        const roomType = COLOR_TO_ROOM_TYPE[rect.color];\n        if (roomType) {\n          partition.type = roomType;\n          //console.log(`    ✓ Main path room type assigned: ${roomType}`);\n        } else {\n          partition.type = RoomType.DUNGEON;\n          //  console.log(\n          //  `    ⚠️  Unknown color, defaulted to: ${RoomType.DUNGEON}`,\n          //);\n        }\n      }\n\n      //console.log(`    ✓ Partition created with area: ${partition.area()}`);\n      return partition;\n    });\n\n    //console.log(`  ✓ Created ${partitions.length} partitions`);\n    return partitions;\n  }\n\n  private getCaveRoomTypeFromColor(color: string): RoomType {\n    // Cave-specific color mappings\n    switch (color) {\n      case \"rgb(0, 255, 0)\": // Green - Cave spawn point\n        return RoomType.ROPECAVE;\n      case \"rgb(0, 255, 255)\": // Cyan - Up ladder (exit to main path)\n        return RoomType.UPLADDER;\n      case \"rgb(255, 255, 0)\": // Yellow - Treasure room\n        return RoomType.TREASURE;\n      case \"rgb(255, 0, 255)\": // Magenta - Shop\n        return RoomType.SHOP;\n      default:\n        return RoomType.CAVE; // Default cave room\n    }\n  }\n\n  private async processPartitionsForGameplay(\n    partialLevel: PartialLevel,\n    game: Game,\n    isSidePath: boolean,\n  ): Promise<void> {\n    //console.log(\"  === GAMEPLAY PROCESSING START ===\");\n    //console.log(`  Side path mode: ${isSidePath}`);\n\n    if (partialLevel.partitions.length === 0) {\n      console.error(\"  ❌ No partitions to process!\");\n      return;\n    }\n\n    //console.log(\n    //  `  Processing ${partialLevel.partitions.length} partitions for gameplay`,\n    //);\n\n    if (isSidePath) {\n      await this.processCavePartitions(partialLevel, game);\n    } else {\n      await this.processMainPathPartitions(partialLevel, game);\n    }\n\n    //console.log(\"  === GAMEPLAY PROCESSING COMPLETE ===\");\n  }\n\n  private async processCavePartitions(partialLevel: PartialLevel, game: Game) {\n    //console.log(\"  Processing as CAVE system...\");\n\n    // Log all room types found\n    const roomTypeCounts: { [key: string]: number } = {};\n    partialLevel.partitions.forEach((p) => {\n      roomTypeCounts[p.type] = (roomTypeCounts[p.type] || 0) + 1;\n    });\n    //console.log(\"  Cave room type distribution:\", roomTypeCounts);\n\n    // Find or assign ROPECAVE room\n    let spawn = partialLevel.partitions.find(\n      (p) => p.type === RoomType.ROPECAVE,\n    );\n\n    if (!spawn && partialLevel.partitions.length > 0) {\n      //console.log(\n      //  \"  No ROPECAVE room specified, assigning to smallest room...\",\n      //);\n      partialLevel.partitions.sort((a, b) => a.area() - b.area());\n      spawn = partialLevel.partitions[0];\n      spawn.type = RoomType.ROPECAVE;\n      spawn.fillStyle = \"rgb(0, 255, 0)\";\n      //console.log(`  ✓ Assigned ROPECAVE to room at (${spawn.x}, ${spawn.y})`);\n    }\n\n    // Make sure all other rooms are CAVE type (unless they're special rooms like TREASURE)\n    partialLevel.partitions.forEach((p) => {\n      if (p !== spawn && p.type === RoomType.DUNGEON) {\n        p.type = RoomType.CAVE;\n        //console.log(`  Converted DUNGEON to CAVE at (${p.x}, ${p.y})`);\n      }\n    });\n\n    //console.log(\"  Updating visual styles...\");\n    this.updatePartitionVisualStyles(partialLevel.partitions);\n\n    // CRITICAL: Move ROPECAVE room to index 0 for proper spawning\n    if (spawn) {\n      const startIndex = partialLevel.partitions.indexOf(spawn);\n      if (startIndex > 0) {\n        //  console.log(\n        //  `  Moving ROPECAVE room from index ${startIndex} to index 0`,\n        //);\n        partialLevel.partitions.splice(startIndex, 1);\n        partialLevel.partitions.unshift(spawn);\n        //console.log(`  ✓ ROPECAVE room is now at index 0`);\n      } else {\n        //console.log(`  ✓ ROPECAVE room already at index 0`);\n      }\n    }\n\n    // Connect partitions using cave logic\n    if (spawn) {\n      //console.log(\"  Connecting cave partitions...\");\n      await this.connectCavePartitions(partialLevel, spawn);\n      //console.log(\n      //  `  ✓ Cave connection complete. Remaining partitions: ${partialLevel.partitions.length}`,\n      //);\n    }\n\n    // Add cave loops\n    if (partialLevel.partitions.length > 0) {\n      //console.log(\"  Adding cave loop connections...\");\n      await this.addLoopConnections(partialLevel);\n    }\n\n    // Calculate distances (no stair room for caves)\n    if (partialLevel.partitions.length > 0 && spawn) {\n      //console.log(\"  Calculating cave distances...\");\n      await this.calculateDistances(partialLevel, spawn);\n      await this.addSpecialRooms(partialLevel);\n    }\n  }\n\n  private async processMainPathPartitions(\n    partialLevel: PartialLevel,\n    game: Game,\n  ) {\n    //console.log(\"  Processing as MAIN PATH...\");\n\n    // Log all room types found\n    const roomTypeCounts: { [key: string]: number } = {};\n    partialLevel.partitions.forEach((p) => {\n      roomTypeCounts[p.type] = (roomTypeCounts[p.type] || 0) + 1;\n    });\n    //console.log(\"  Room type distribution:\", roomTypeCounts);\n\n    // Find START and BOSS rooms from color assignments\n    let spawn = partialLevel.partitions.find((p) => p.type === RoomType.START);\n    let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\n\n    //console.log(`  Found START room: ${spawn ? \"YES\" : \"NO\"}`);\n    //console.log(`  Found BOSS room: ${boss ? \"YES\" : \"NO\"}`);\n\n    // If no START room was specified by color, assign the smallest room\n    if (!spawn && partialLevel.partitions.length > 0) {\n      //console.log(\"  No START room specified, finding smallest room...\");\n      partialLevel.partitions.sort((a, b) => a.area() - b.area());\n      spawn = partialLevel.partitions[0];\n      spawn.type = RoomType.START;\n      spawn.fillStyle = \"rgb(0, 255, 0)\";\n      //console.log(\n      //  `  ✓ Assigned START to smallest room at (${spawn.x}, ${spawn.y}) with area ${spawn.area()}`,\n      //);\n    }\n\n    // If no BOSS room was specified by color, assign the largest room\n    if (!boss && partialLevel.partitions.length > 1) {\n      //console.log(\"  No BOSS room specified, finding largest room...\");\n      partialLevel.partitions.sort((a, b) => a.area() - b.area());\n      boss = partialLevel.partitions[partialLevel.partitions.length - 1];\n      if (boss.type === RoomType.DUNGEON) {\n        boss.type = RoomType.BOSS;\n        boss.fillStyle = \"red\";\n        //console.log(\n        //  `  ✓ Assigned BOSS to largest room at (${boss.x}, ${boss.y}) with area ${boss.area()}`,\n        //);\n      } else {\n        //  console.log(\n        //  `  ⚠️  Largest room is already ${boss.type}, not assigning BOSS`,\n        //);\n        boss = null;\n      }\n    }\n\n    //console.log(\"  Updating visual styles...\");\n    this.updatePartitionVisualStyles(partialLevel.partitions);\n\n    // CRITICAL: Move START room to index 0 for proper spawning\n    if (spawn) {\n      const startIndex = partialLevel.partitions.indexOf(spawn);\n      if (startIndex > 0) {\n        //console.log(`  Moving START room from index ${startIndex} to index 0`);\n        // Remove START room from current position\n        partialLevel.partitions.splice(startIndex, 1);\n        // Insert at beginning\n        partialLevel.partitions.unshift(spawn);\n        //console.log(`  ✓ START room is now at index 0`);\n      } else {\n        //console.log(`  ✓ START room already at index 0`);\n      }\n    }\n\n    // Connect partitions\n    if (spawn) {\n      //console.log(\"  Connecting partitions...\");\n      await this.connectPartitions(partialLevel, spawn);\n      //console.log(\n      //  `  ✓ Connection phase complete. Remaining partitions: ${partialLevel.partitions.length}`,\n      //);\n    } else {\n      console.error(\"  ❌ No spawn room found, cannot connect partitions!\");\n    }\n\n    // Add loop connections\n    if (partialLevel.partitions.length > 0) {\n      //console.log(\"  Adding loop connections...\");\n      await this.addLoopConnections(partialLevel);\n      //console.log(\"  ✓ Loop connections added\");\n    }\n\n    // Add stair room\n    const hasStairRoom = partialLevel.partitions.some(\n      (p) => p.type === RoomType.DOWNLADDER,\n    );\n    //console.log(`  Existing stair room: ${hasStairRoom ? \"YES\" : \"NO\"}`);\n\n    if (!hasStairRoom && partialLevel.partitions.length > 0) {\n      //console.log(\"  Adding automatic stair room...\");\n      await this.addStairRoom(partialLevel, game);\n      //console.log(\n      //  `  ✓ Stair room processing complete. Final partitions: ${partialLevel.partitions.length}`,\n      //);\n    }\n\n    // Calculate distances\n    if (partialLevel.partitions.length > 0 && spawn) {\n      //  console.log(\"  Calculating distances...\");\n      await this.calculateDistances(partialLevel, spawn);\n\n      //console.log(\"  Adding special rooms...\");\n      await this.addSpecialRooms(partialLevel);\n\n      //console.log(\"  ✓ Distance calculation complete\");\n\n      // Log final distances\n      partialLevel.partitions.forEach((p) => {\n        //console.log(\n        //  `    ${p.type} at (${p.x}, ${p.y}): distance ${p.distance}`,\n        //);\n      });\n    }\n  }\n\n  private updatePartitionVisualStyles(partitions: Partition[]) {\n    //console.log(\"    Updating visual styles...\");\n    for (const partition of partitions) {\n      const oldStyle = partition.fillStyle;\n      switch (partition.type) {\n        case RoomType.START:\n          partition.fillStyle = \"rgb(0, 255, 0)\";\n          break;\n        case RoomType.BOSS:\n          partition.fillStyle = \"red\";\n          break;\n        case RoomType.DOWNLADDER:\n        case RoomType.UPLADDER:\n          partition.fillStyle = \"blue\";\n          break;\n        case RoomType.TREASURE:\n          partition.fillStyle = \"rgb(255, 215, 0)\";\n          break;\n        case RoomType.SHOP:\n          partition.fillStyle = \"rgb(255, 0, 255)\";\n          break;\n        case RoomType.FOUNTAIN:\n          partition.fillStyle = \"rgb(128, 0, 128)\";\n          break;\n        case RoomType.CAVE:\n        case RoomType.BIGCAVE:\n          partition.fillStyle = \"rgb(101, 67, 33)\";\n          break;\n        default:\n          partition.fillStyle = \"white\";\n          break;\n      }\n\n      if (oldStyle !== partition.fillStyle) {\n        //console.log(\n        //  `      Updated ${partition.type} style: ${oldStyle} -> ${partition.fillStyle}`,\n        //);\n      }\n    }\n  }\n\n  private async connectPartitions(\n    partialLevel: PartialLevel,\n    spawn: Partition,\n  ) {\n    //console.log(\"    === PNG CONNECTION WITH DEAD ENDS ===\");\n\n    let connected = [spawn];\n    let frontier = [spawn];\n    let connectionsMade = 0;\n\n    while (frontier.length > 0) {\n      let room = frontier[0];\n      frontier.splice(0, 1);\n\n      //console.log(`    Processing ${room.type} at (${room.x}, ${room.y})`);\n\n      // Find all unconnected rooms that are adjacent to this room\n      const adjacentRooms = partialLevel.partitions.filter((p) => {\n        return (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          this.arePartitionsAdjacent(room, p)\n        );\n      });\n\n      //console.log(\n      //  `      Found ${adjacentRooms.length} adjacent unconnected rooms`,\n      //);\n\n      // AGGRESSIVE: Connect to ALL adjacent rooms, not just 1-2\n      for (let i = 0; i < adjacentRooms.length; i++) {\n        const target = adjacentRooms[i];\n        const adjacencyInfo = this.arePartitionsAdjacent(room, target);\n\n        if (adjacencyInfo) {\n          const connectionPoint = adjacencyInfo.connectionPoint;\n\n          //console.log(\n          //  `      ✓ Connecting to ${target.type} at (${connectionPoint.x}, ${connectionPoint.y})`,\n          //);\n\n          // Create bidirectional connections\n          room.connections.push(\n            new PartitionConnection(\n              connectionPoint.x,\n              connectionPoint.y,\n              target,\n            ),\n          );\n          target.connections.push(\n            new PartitionConnection(connectionPoint.x, connectionPoint.y, room),\n          );\n\n          // Set wall openings\n          room.setOpenWall(\n            new PartitionConnection(\n              connectionPoint.x,\n              connectionPoint.y,\n              target,\n            ),\n          );\n          target.setOpenWall(\n            new PartitionConnection(connectionPoint.x, connectionPoint.y, room),\n          );\n\n          frontier.push(target);\n          connected.push(target);\n          connectionsMade++;\n        }\n      }\n\n      //console.log(\n      //  `      Room completed with ${room.connections.length} total connections`,\n      //);\n    }\n\n    //console.log(\n    //  `    ✓ Connected ${connected.length}/${partialLevel.partitions.length} rooms`,\n    //);\n\n    // PRESERVE UNCONNECTED ROOMS: Don't remove them, just log them\n    const unconnected = partialLevel.partitions.filter(\n      (p) => p.connections.length === 0,\n    );\n\n    if (unconnected.length > 0) {\n      //  console.log(\n      //  `    📍 Found ${unconnected.length} isolated rooms (keeping as dead ends):`,\n      //);\n      unconnected.forEach((partition) => {\n        //console.log(\n        //  `      - ${partition.type} at (${partition.x}, ${partition.y})`,\n        //);\n        // Make them accessible by connecting to the nearest connected room\n        this.connectIsolatedRoom(\n          partition,\n          partialLevel.partitions.filter((p) => p.connections.length > 0),\n        );\n      });\n    }\n\n    //console.log(\n    //  `    Final result: ${partialLevel.partitions.length} total rooms preserved`,\n    //);\n  }\n\n  private connectIsolatedRoom(\n    isolatedRoom: Partition,\n    connectedRooms: Partition[],\n  ) {\n    // Find the closest connected room and create a connection\n    let closestRoom = null;\n    let closestDistance = Infinity;\n\n    for (const room of connectedRooms) {\n      const distance =\n        Math.abs(isolatedRoom.x - room.x) + Math.abs(isolatedRoom.y - room.y);\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestRoom = room;\n      }\n    }\n\n    if (closestRoom) {\n      // Create a connection point between the rooms\n      const connectionX = Math.floor((isolatedRoom.x + closestRoom.x) / 2);\n      const connectionY = Math.floor((isolatedRoom.y + closestRoom.y) / 2);\n\n      //console.log(\n      //  `      ✓ Linking isolated ${isolatedRoom.type} to ${closestRoom.type} via (${connectionX}, ${connectionY})`,\n      //);\n\n      isolatedRoom.connections.push(\n        new PartitionConnection(connectionX, connectionY, closestRoom),\n      );\n      closestRoom.connections.push(\n        new PartitionConnection(connectionX, connectionY, isolatedRoom),\n      );\n    }\n  }\n\n  private async connectCavePartitions(\n    partialLevel: PartialLevel,\n    spawn: Partition,\n  ) {\n    //console.log(\"    Connecting cave partitions...\");\n    let connected = [spawn];\n    let frontier = [spawn];\n    const maxRooms = partialLevel.partitions.length; // Connect all available rooms\n\n    while (frontier.length > 0 && connected.length < maxRooms) {\n      let room = frontier[0];\n      frontier.splice(0, 1);\n\n      //console.log(\n      //  `    Processing cave room ${room.type} at (${room.x}, ${room.y})`,\n      //);\n\n      // Find adjacent unconnected rooms\n      const adjacentRooms = partialLevel.partitions.filter((p) => {\n        return (\n          p !== room &&\n          connected.indexOf(p) === -1 &&\n          this.arePartitionsAdjacent(room, p)\n        );\n      });\n\n      const maxConnections = Math.min(\n        adjacentRooms.length,\n        Math.floor(Random.rand() * 2 + 1),\n      );\n\n      for (let i = 0; i < maxConnections && connected.length < maxRooms; i++) {\n        const target = adjacentRooms[i];\n        const adjacencyInfo = this.arePartitionsAdjacent(room, target);\n\n        if (adjacencyInfo) {\n          const connectionPoint = adjacencyInfo.connectionPoint;\n\n          room.connections.push(\n            new PartitionConnection(\n              connectionPoint.x,\n              connectionPoint.y,\n              target,\n            ),\n          );\n          target.connections.push(\n            new PartitionConnection(connectionPoint.x, connectionPoint.y, room),\n          );\n\n          frontier.push(target);\n          connected.push(target);\n          //console.log(`    ✓ Cave connection: ${room.type} <-> ${target.type}`);\n        }\n      }\n    }\n\n    // Remove unconnected rooms\n    partialLevel.partitions = partialLevel.partitions.filter(\n      (p) => p.connections.length > 0,\n    );\n    //  console.log(\n    //  `    ✓ Cave connection complete: ${connected.length} rooms connected`,\n    //);\n  }\n\n  /**\n   * Check if two partitions are adjacent and return connection info\n   */\n  private arePartitionsAdjacent(\n    p1: Partition,\n    p2: Partition,\n  ): {\n    direction: string;\n    connectionPoint: { x: number; y: number };\n  } | null {\n    // Check if they're horizontally adjacent (side by side)\n    if (p1.y < p2.y + p2.h && p2.y < p1.y + p1.h) {\n      // p1 is to the left of p2\n      if (p1.x + p1.w === p2.x || p1.x + p1.w === p2.x - 1) {\n        const overlapStart = Math.max(p1.y, p2.y);\n        const overlapEnd = Math.min(p1.y + p1.h, p2.y + p2.h);\n        const connectionY = Math.floor(\n          overlapStart + (overlapEnd - overlapStart) / 2,\n        );\n        return {\n          direction: \"horizontal\",\n          connectionPoint: { x: p1.x + p1.w, y: connectionY },\n        };\n      }\n      // p2 is to the left of p1\n      if (p2.x + p2.w === p1.x || p2.x + p2.w === p1.x - 1) {\n        const overlapStart = Math.max(p1.y, p2.y);\n        const overlapEnd = Math.min(p1.y + p1.h, p2.y + p2.h);\n        const connectionY = Math.floor(\n          overlapStart + (overlapEnd - overlapStart) / 2,\n        );\n        return {\n          direction: \"horizontal\",\n          connectionPoint: { x: p2.x + p2.w, y: connectionY },\n        };\n      }\n    }\n\n    // Check if they're vertically adjacent (top/bottom)\n    if (p1.x < p2.x + p2.w && p2.x < p1.x + p1.w) {\n      // p1 is above p2\n      if (p1.y + p1.h === p2.y || p1.y + p1.h === p2.y - 1) {\n        const overlapStart = Math.max(p1.x, p2.x);\n        const overlapEnd = Math.min(p1.x + p1.w, p2.x + p2.w);\n        const connectionX = Math.floor(\n          overlapStart + (overlapEnd - overlapStart) / 2,\n        );\n        return {\n          direction: \"vertical\",\n          connectionPoint: { x: connectionX, y: p1.y + p1.h },\n        };\n      }\n      // p2 is above p1\n      if (p2.y + p2.h === p1.y || p2.y + p2.h === p1.y - 1) {\n        const overlapStart = Math.max(p1.x, p2.x);\n        const overlapEnd = Math.min(p1.x + p1.w, p2.x + p2.w);\n        const connectionX = Math.floor(\n          overlapStart + (overlapEnd - overlapStart) / 2,\n        );\n        return {\n          direction: \"vertical\",\n          connectionPoint: { x: connectionX, y: p2.y + p2.h },\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Enhanced loop connections that work better with PNG layouts\n   */\n  private async addLoopConnections(partialLevel: PartialLevel) {\n    //console.log(\"    Adding PNG-optimized loop connections...\");\n    if (partialLevel.partitions.length === 0) {\n      return;\n    }\n\n    // Build adjacency map\n    const adjacencyMap = new Map<Partition, Partition[]>();\n\n    partialLevel.partitions.forEach((p1) => {\n      const adjacent = partialLevel.partitions.filter((p2) => {\n        return p2 !== p1 && this.arePartitionsAdjacent(p1, p2);\n      });\n      adjacencyMap.set(p1, adjacent);\n    });\n\n    let loopsAdded = 0;\n    const maxLoops = Math.min(\n      4,\n      Math.floor(partialLevel.partitions.length / 2),\n    );\n\n    //console.log(`    Attempting up to ${maxLoops} loop connections`);\n\n    for (let i = 0; i < maxLoops; i++) {\n      // Pick a random room\n      const roomIndex = Math.floor(\n        Random.rand() * partialLevel.partitions.length,\n      );\n      const room = partialLevel.partitions[roomIndex];\n\n      // Find adjacent rooms that aren't already connected\n      const adjacentRooms = adjacencyMap.get(room) || [];\n      const unconnectedAdjacent = adjacentRooms.filter(\n        (p) => !room.connections.some((c) => c.other === p),\n      );\n\n      if (unconnectedAdjacent.length > 0) {\n        const target =\n          unconnectedAdjacent[\n            Math.floor(Random.rand() * unconnectedAdjacent.length)\n          ];\n        const adjacencyInfo = this.arePartitionsAdjacent(room, target);\n\n        if (adjacencyInfo) {\n          const connectionPoint = adjacencyInfo.connectionPoint;\n\n          room.connections.push(\n            new PartitionConnection(\n              connectionPoint.x,\n              connectionPoint.y,\n              target,\n            ),\n          );\n          target.connections.push(\n            new PartitionConnection(connectionPoint.x, connectionPoint.y, room),\n          );\n\n          room.setOpenWall(\n            new PartitionConnection(\n              connectionPoint.x,\n              connectionPoint.y,\n              target,\n            ),\n          );\n          target.setOpenWall(\n            new PartitionConnection(connectionPoint.x, connectionPoint.y, room),\n          );\n\n          loopsAdded++;\n          //console.log(\n          //  `    ✓ Loop ${loopsAdded}: ${room.type} <-> ${target.type}`,\n          //);\n        }\n      }\n    }\n\n    //console.log(`    ✓ Added ${loopsAdded} loop connections`);\n  }\n\n  private async addStairRoom(partialLevel: PartialLevel, game: Game) {\n    //  console.log(\"    Adding stair room...\");\n\n    const hasBoss = partialLevel.partitions.some(\n      (p) => p.type === RoomType.BOSS,\n    );\n    const hasStairs = partialLevel.partitions.some(\n      (p) => p.type === RoomType.DOWNLADDER,\n    );\n\n    //console.log(`    Has boss room: ${hasBoss}`);\n    //console.log(`    Has existing stairs: ${hasStairs}`);\n\n    if (!hasBoss || hasStairs) {\n      //console.log(\"    Skipping stair room addition\");\n      return;\n    }\n\n    let boss = partialLevel.partitions.find((p) => p.type === RoomType.BOSS);\n    //console.log(`    Boss room at (${boss.x}, ${boss.y})`);\n\n    let found_stair = false;\n    const max_stair_tries = 5;\n    const stairRoomWidth = 5;\n    const stairRoomHeight = 5;\n\n    for (let stair_tries = 0; stair_tries < max_stair_tries; stair_tries++) {\n      const stairX = Game.rand(boss.x - 1, boss.x + boss.w - 2, Random.rand);\n      const stairY = boss.y - stairRoomHeight - 1;\n\n      //console.log(\n      //  `    Stair attempt ${stair_tries + 1}: trying position (${stairX}, ${stairY})`,\n      //);\n\n      let stair = new Partition(\n        stairX,\n        stairY,\n        stairRoomWidth,\n        stairRoomHeight,\n        \"white\",\n      );\n      stair.type = RoomType.DOWNLADDER;\n      stair.fillStyle = \"blue\";\n\n      const overlaps = partialLevel.partitions.some((p) => p.overlaps(stair));\n      //console.log(`    Overlap check: ${overlaps ? \"OVERLAPS\" : \"CLEAR\"}`);\n\n      if (!overlaps) {\n        found_stair = true;\n        partialLevel.partitions.push(stair);\n\n        const connectionX = stair.x + 1;\n        const connectionY = stair.y + stairRoomHeight;\n\n        stair.connections.push(\n          new PartitionConnection(connectionX, connectionY, boss),\n        );\n        boss.connections.push(\n          new PartitionConnection(connectionX, connectionY, stair),\n        );\n\n        stair.setOpenWall(\n          new PartitionConnection(connectionX, connectionY, boss),\n        );\n        boss.setOpenWall(\n          new PartitionConnection(connectionX, connectionY, stair),\n        );\n\n        //console.log(\n        //  `    ✓ Stair room added at (${stairX}, ${stairY}) connected to boss`,\n        //);\n        break;\n      }\n    }\n\n    if (!found_stair) {\n      //console.log(\"    ❌ Could not place stair room after all attempts\");\n    }\n  }\n\n  private async calculateDistances(\n    partialLevel: PartialLevel,\n    spawn: Partition,\n  ) {\n    //console.log(\"    Calculating distances from spawn...\");\n    let frontier = [spawn];\n    let seen = [];\n    spawn.distance = 0;\n\n    let processedRooms = 0;\n\n    while (frontier.length > 0) {\n      let room = frontier[0];\n      frontier.splice(0, 1);\n      seen.push(room);\n      processedRooms++;\n\n      //console.log(\n      //  `    Processing room ${processedRooms}: ${room.type} at distance ${room.distance}`,\n      //);\n\n      for (let c of room.connections) {\n        let other = c.other;\n        const newDistance = room.distance + 1;\n        if (newDistance < other.distance) {\n          other.distance = newDistance;\n          //console.log(`    Updated ${other.type} distance to ${newDistance}`);\n        }\n        if (seen.indexOf(other) === -1) {\n          frontier.push(other);\n        }\n      }\n    }\n\n    //console.log(\n    //  `    ✓ Distance calculation complete for ${processedRooms} rooms`,\n    //);\n  }\n\n  private async addSpecialRooms(partialLevel: PartialLevel) {\n    //  console.log(\"    Adding special rooms...\");\n    let specialRoomsAdded = 0;\n\n    for (const p of partialLevel.partitions) {\n      if (p.type === RoomType.DUNGEON) {\n        if (p.distance > 4 && p.area() <= 30 && Random.rand() < 0.1) {\n          p.type = RoomType.TREASURE;\n          specialRoomsAdded++;\n          //console.log(\n          //  `    ✓ Converted DUNGEON to TREASURE at (${p.x}, ${p.y}), distance ${p.distance}`,\n          //);\n        }\n      }\n    }\n\n    //  console.log(`    ✓ Added ${specialRoomsAdded} special rooms`);\n  }\n\n  // Utility method to get color mapping documentation\n  public static getColorGuide(): string {\n    const guide = Object.entries(COLOR_TO_ROOM_TYPE)\n      .map(([color, type]) => `${color} -> ${type}`)\n      .join(\"\\n\");\n\n    return `PNG Level Designer Color Guide:\\n${guide}`;\n  }\n}\n","import type { Game } from \"../game\";\r\nimport type { Room } from \"../room/room\";\r\nimport { UpLadder } from \"../tile/upLadder\";\r\nimport type { DownLadder } from \"../tile/downLadder\";\r\nimport { statsTracker } from \"../game/stats\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\n\r\nexport interface SidePathOptions {\r\n  caveRooms?: number;\r\n  mapWidth?: number;\r\n  mapHeight?: number;\r\n  locked?: boolean;\r\n  envType?: EnvType;\r\n  linearity?: number;\r\n  branching?: number; // 0..1 probability of adding a second branch door\r\n  loopiness?: number; // 0..1 scale for number of loop connections\r\n}\r\n\r\n/**\r\n * Centralized manager for creating and wiring up sidepaths (rope caves).\r\n *\r\n * Responsibilities:\r\n * - Deterministic pathId creation per down-ladder coordinate\r\n * - Invoke level generation for sidepaths and receive the linked room\r\n * - Merge newly generated sidepath rooms into the level\r\n * - Link all up-ladders in the sidepath back to the correct parent room/ladder\r\n * - Provide helpers to switch current active path before transitioning\r\n */\r\nexport class SidePathManager {\r\n  private game: Game;\r\n\r\n  constructor(game: Game) {\r\n    this.game = game;\r\n  }\r\n\r\n  /**\r\n   * Generate the sidepath for a given `DownLadder` if it doesn't already exist.\r\n   * Populates `downLadder.linkedRoom` and links up-ladders appropriately.\r\n   */\r\n  async generateFor(downLadder: DownLadder): Promise<void> {\r\n    if (downLadder.linkedRoom) return;\r\n\r\n    const targetDepth = downLadder.room.depth + (downLadder.isSidePath ? 0 : 1);\r\n    const pathId = this.getDeterministicPathId(downLadder);\r\n\r\n    await this.game.levelgen.generate(\r\n      this.game,\r\n      targetDepth,\r\n      downLadder.isSidePath,\r\n      (linkedRoom) => this.handleLinkedRoom(downLadder, linkedRoom),\r\n      downLadder.environment,\r\n      false,\r\n      pathId,\r\n      downLadder.opts,\r\n    );\r\n\r\n    statsTracker.recordSidePathEntered({\r\n      depth: this.game.currentDepth,\r\n      sidePath: downLadder.linkedRoom.envType,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Switches the active path to the sidepath associated with this down ladder\r\n   * (to ensure subsequent transitions and spawns align with the right path).\r\n   */\r\n  switchToPathBeforeTransition(downLadder: DownLadder): void {\r\n    if (downLadder.isSidePath && downLadder.linkedRoom) {\r\n      (this.game as any).currentPathId =\r\n        (downLadder.linkedRoom as any).pathId ||\r\n        (this.game as any).currentPathId ||\r\n        \"main\";\r\n    }\r\n  }\r\n\r\n  private getDeterministicPathId(d: DownLadder): string {\r\n    if (!d.isSidePath) return \"main\";\r\n    const parentPid: string = (this.game as any).currentPathId || \"main\";\r\n    const roomAnchor = `${d.room.depth}:${d.room.roomX},${d.room.roomY}`;\r\n    const tileAnchor = `${d.x},${d.y}`;\r\n    const coordPid = `sp:${parentPid}:${roomAnchor}:${tileAnchor}`;\r\n    const legacyGid: string =\r\n      ((d as any).globalId as string) ||\r\n      `${(d.room as any).globalId}:${d.x},${d.y}`;\r\n    // Prefer coordinate-based pid; fall back to legacy GID-based for old saves\r\n    return coordPid || legacyGid || \"main\";\r\n  }\r\n\r\n  private handleLinkedRoom(downLadder: DownLadder, linkedRoom: Room): void {\r\n    if (downLadder.isSidePath) {\r\n      this.handleSidePathRooms(linkedRoom);\r\n    }\r\n\r\n    downLadder.linkedRoom = linkedRoom;\r\n    this.linkUpLadders(downLadder);\r\n  }\r\n\r\n  /**\r\n   * Merge rooms belonging to the newly created sidepath's mapGroup into the generated level.\r\n   */\r\n  private handleSidePathRooms(linkedRoom: Room): void {\r\n    const level = linkedRoom.level;\r\n    const sidePathRooms = this.game.rooms.filter(\r\n      (room) => room.mapGroup === linkedRoom.mapGroup,\r\n    );\r\n    const startingId = level.rooms.length;\r\n    sidePathRooms.forEach((room, index) => {\r\n      room.id = startingId + index;\r\n      level.rooms.push(room);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * For sidepaths, ensure ALL up ladders in this sidepath mapGroup link back to the correct parent room.\r\n   * For main path, link the first up ladder in the generated room.\r\n   */\r\n  private linkUpLadders(downLadder: DownLadder): void {\r\n    if (!downLadder.linkedRoom) return;\r\n\r\n    if (downLadder.isSidePath) {\r\n      const level = downLadder.linkedRoom.level;\r\n      const groupId = downLadder.linkedRoom.mapGroup;\r\n      const groupRooms = level.rooms.filter((r) => r.mapGroup === groupId);\r\n      for (const room of groupRooms) {\r\n        for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n          for (let y = room.roomY; y < room.roomY + room.height; y++) {\r\n            const tile = room.roomArray[x]?.[y];\r\n            if (tile instanceof UpLadder) {\r\n              this.setUpLadderLink(downLadder, tile as UpLadder);\r\n              if (\r\n                !downLadder.entryUpLadderPos &&\r\n                room === downLadder.linkedRoom\r\n              ) {\r\n                downLadder.entryUpLadderPos = {\r\n                  x: (tile as any).x,\r\n                  y: (tile as any).y,\r\n                };\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // Non-sidepath: link the first up ladder in the generated room\r\n      for (\r\n        let x = downLadder.linkedRoom.roomX;\r\n        x < downLadder.linkedRoom.roomX + downLadder.linkedRoom.width;\r\n        x++\r\n      ) {\r\n        for (\r\n          let y = downLadder.linkedRoom.roomY;\r\n          y < downLadder.linkedRoom.roomY + downLadder.linkedRoom.height;\r\n          y++\r\n        ) {\r\n          const tile = downLadder.linkedRoom.roomArray[x]?.[y];\r\n          if (tile instanceof UpLadder) {\r\n            this.setUpLadderLink(downLadder, tile as UpLadder);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setUpLadderLink(downLadder: DownLadder, upLadder: UpLadder): void {\r\n    if (downLadder.isSidePath) {\r\n      upLadder.linkedRoom = downLadder.room;\r\n      (upLadder as any).isRope = true;\r\n      // Record the exact parent down-ladder tile to spawn on when going back up\r\n      (upLadder as any).exitDownLadderPos = {\r\n        x: downLadder.x,\r\n        y: downLadder.y,\r\n      };\r\n    } else {\r\n      upLadder.linkedRoom = this.game.levels[downLadder.room.depth].exitRoom;\r\n    }\r\n  }\r\n}\r\n","import { Room } from \"../room/room\";\r\n\r\nexport class LightSource {\r\n  x: number;\r\n  y: number;\r\n  r: number;\r\n  c: [number, number, number];\r\n  b: number = 1;\r\n\r\n  oldX: number;\r\n  oldY: number;\r\n  oldR: number;\r\n  oldC: [number, number, number];\r\n  oldB: number;\r\n  dead: boolean = false;\r\n\r\n  hasChanged: boolean;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    r: number,\r\n    c: [number, number, number] = [180, 60, 5],\r\n    b: number = 1,\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.c = c;\r\n    this.b = b;\r\n    this.oldX = x;\r\n    this.oldY = y;\r\n    this.oldR = r;\r\n    this.oldC = c;\r\n    this.oldB = b;\r\n    this.hasChanged = true;\r\n  }\r\n\r\n  updatePosition = (x: number, y: number) => {\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  shouldUpdate = () => {\r\n    return true;\r\n    this.hasChanged =\r\n      this.x !== this.oldX ||\r\n      this.y !== this.oldY ||\r\n      this.r !== this.oldR ||\r\n      this.c !== this.oldC ||\r\n      this.b !== this.oldB ||\r\n      this.hasChanged;\r\n    return this.hasChanged;\r\n  };\r\n}\r\n","import { LightSource } from \"./lightSource\";\r\nimport { Room } from \"../room/room\";\r\n\r\nexport class Lighting {\r\n  static momentaryLight = (\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    duration: number,\r\n    brightness: number,\r\n    delay: number,\r\n  ) => {\r\n    const lightSource = Lighting.newLightSource(\r\n      x,\r\n      y,\r\n      color,\r\n      radius,\r\n      brightness,\r\n    );\r\n    setTimeout(() => {\r\n      room.updateLightSources(lightSource);\r\n\r\n      setTimeout(() => {\r\n        room.updateLightSources(lightSource, true);\r\n      }, duration);\r\n    }, delay);\r\n  };\r\n\r\n  static newLightSource = (\r\n    x: number,\r\n    y: number,\r\n    color: [number, number, number],\r\n    radius: number,\r\n    brightness: number,\r\n  ) => {\r\n    return new LightSource(x, y, radius, color, brightness);\r\n  };\r\n\r\n  static addLightSource = (room: Room, lightSource: LightSource) => {\r\n    room.lightSources.push(lightSource);\r\n  };\r\n\r\n  static removeLightSource = (room: Room, lightSource: LightSource) => {\r\n    room.lightSources = room.lightSources.filter((ls) => ls !== lightSource);\r\n  };\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class AttackAnimation extends Particle {\r\n  tileX: number;\r\n  tileY: number;\r\n  tileYOffset: number;\r\n  x: number;\r\n  y: number;\r\n  frame: number;\r\n  type: string;\r\n  direction: Direction;\r\n  frames: number;\r\n  yOffset: number;\r\n  xOffset: number;\r\n  animationSpeed: number;\r\n\r\n  constructor(x: number, y: number, type: string, direction: Direction) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y - 0.25;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n    this.type = type;\r\n    this.xOffset = 0;\r\n    this.yOffset = 0;\r\n    this.tileX = 12;\r\n\r\n    this.animationSpeed = 1;\r\n    switch (type) {\r\n      case \"dagger\":\r\n        this.frames = 8;\r\n        this.tileY = 24;\r\n        this.yOffset = 0;\r\n        this.xOffset = 0;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 0.75;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 0.5;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.8;\r\n            this.yOffset += 0.25;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.8;\r\n            this.yOffset -= 0.25;\r\n            break;\r\n        }\r\n\r\n        break;\r\n      case \"warhammer\":\r\n        this.frames = 8;\r\n        this.tileX = 12;\r\n        this.tileY = 32;\r\n        this.yOffset = -0.75;\r\n        this.xOffset = -0;\r\n        this.frame = -5;\r\n        this.animationSpeed = 2;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 0.25;\r\n            this.xOffset += 0.125;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 1;\r\n            this.xOffset += 0.25;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.75;\r\n            this.yOffset += 0.5;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.75;\r\n            this.yOffset += 0.5;\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case \"dualdagger\":\r\n        this.frames = 8;\r\n        this.tileY = 40;\r\n        this.yOffset = 0;\r\n        this.xOffset = 0;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 1;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 0.5;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.8;\r\n            this.yOffset -= 0.25;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.8;\r\n            this.yOffset -= 0.25;\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case \"dualdagger2\":\r\n        this.frames = 8;\r\n        this.tileY = 48;\r\n        this.yOffset = 0;\r\n        this.xOffset = 0;\r\n        //this.animationSpeed = 1;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 1;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 0.5;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.8;\r\n            this.yOffset -= 0.25;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.8;\r\n            this.yOffset -= 0.25;\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case \"spear\":\r\n        this.frames = 5;\r\n        this.tileY = 32;\r\n        this.tileX = 22;\r\n        this.animationSpeed = 0.5;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 0.75;\r\n            this.xOffset += 0.125;\r\n\r\n            break;\r\n          case Direction.UP:\r\n            //needs to draw behind player but its fine for now\r\n            this.yOffset += 1;\r\n            this.xOffset -= 0.125;\r\n\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 1;\r\n            this.yOffset += 0.25;\r\n\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 1;\r\n            this.yOffset += 0.25;\r\n\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case \"scythe\":\r\n        this.frames = 6;\r\n        this.tileY = 40;\r\n        this.tileX = 0;\r\n        this.animationSpeed = 0.75;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 0.75;\r\n            this.xOffset += 0;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 0.75;\r\n            this.xOffset -= 0;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.75;\r\n            this.yOffset += 0;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.75;\r\n            this.yOffset -= 0;\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case \"sword\":\r\n        this.frames = 6;\r\n        this.tileY = 48;\r\n        this.tileX = 0;\r\n        this.animationSpeed = 0.75;\r\n\r\n        switch (direction) {\r\n          case Direction.DOWN:\r\n            this.yOffset -= 0.95;\r\n            this.xOffset += 0;\r\n            break;\r\n          case Direction.UP:\r\n            this.yOffset += 0.95;\r\n            this.xOffset -= 0;\r\n            break;\r\n          case Direction.LEFT:\r\n            this.xOffset += 0.95;\r\n            this.yOffset += 0;\r\n            break;\r\n          case Direction.RIGHT:\r\n            this.xOffset -= 0.95;\r\n            this.yOffset -= 0;\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n    switch (direction) {\r\n      case Direction.DOWN:\r\n        this.tileYOffset = 0;\r\n        break;\r\n      case Direction.UP:\r\n        this.tileYOffset = 2;\r\n        break;\r\n      case Direction.LEFT:\r\n        this.tileYOffset = 4;\r\n        break;\r\n      case Direction.RIGHT:\r\n        this.tileYOffset = 6;\r\n        break;\r\n    }\r\n  }\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    // if (this.frame <= this.frames / 2)\r\n    this.drawAnimation(delta);\r\n  };\r\n\r\n  drawAnimation = (delta: number) => {\r\n    if (this.dead) return;\r\n    if (this.frame >= 0) {\r\n      Game.drawFX(\r\n        this.tileX + 2 * Math.round(Math.max(0, this.frame) / 2),\r\n        this.tileY + this.tileYOffset,\r\n        2,\r\n        2,\r\n        this.x - 0.5 + this.xOffset,\r\n        this.y - 0.5 + this.yOffset,\r\n        2,\r\n        2,\r\n      );\r\n    }\r\n\r\n    this.frame += this.animationSpeed * delta;\r\n    if (this.frame > this.frames) this.dead = true;\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Room } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class DamageNumber extends Particle {\r\n  room: Room;\r\n  damage: number;\r\n  x: number;\r\n  y: number;\r\n  alpha: number = 1;\r\n  color: string;\r\n  outlineColor: string;\r\n  frame: number = 0;\r\n  xoffset: number = 0;\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    damage: number,\r\n    color?: string,\r\n    outlineColor?: string,\r\n  ) {\r\n    super();\r\n    this.room = room;\r\n    this.damage = damage;\r\n    this.x = x;\r\n    this.y = y;\r\n    if (color) this.color = color;\r\n    else this.color = \"red\";\r\n    if (outlineColor) this.outlineColor = outlineColor;\r\n    else this.outlineColor = GameConstants.OUTLINE;\r\n    this.xoffset = Random.rand() * 0.2;\r\n  }\r\n  getXoffset = () => {\r\n    if (this.room.particles.length > 0) {\r\n      let damageNumbers = this.room.particles.filter(\r\n        (p) => p instanceof DamageNumber,\r\n      );\r\n      if (damageNumbers.length % 3 === 0) return 0.5;\r\n      if (damageNumbers.length % 3 === 1) return 0;\r\n      if (damageNumbers.length % 3 === 2) return 0.25;\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    if (this.dead) {\r\n      Game.ctx.restore();\r\n      return;\r\n    }\r\n    if (this.frame > 15) this.alpha -= 0.025 * delta;\r\n\r\n    this.y -= 0.03 * delta;\r\n    this.frame += delta;\r\n    let width = Game.measureText(this.damage.toString()).width;\r\n    if (this.alpha <= 0.002) {\r\n      this.alpha = 0;\r\n      this.dead = true;\r\n    }\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    const centerX = Game.measureText(this.damage.toString()).width / 2;\r\n    Game.fillTextOutline(\r\n      \"-\" + this.damage.toString(),\r\n      (this.x + 0.4 + this.xoffset) * GameConstants.TILESIZE - centerX,\r\n      (this.y - 0.6) * GameConstants.TILESIZE,\r\n      this.outlineColor,\r\n      this.color,\r\n    );\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Room } from \"../room/room\";\r\nimport { Particle } from \"./particle\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class GenericParticle extends Particle {\r\n  level: Room;\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  s: number;\r\n  dx: number;\r\n  dy: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetZ: number;\r\n  dz: number;\r\n  color: string;\r\n  alpha: number;\r\n  delay: number;\r\n  expirationTimer: number;\r\n\r\n  static shotgun = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tx: number,\r\n    ty: number,\r\n    color: string,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      level.particles.push(\r\n        new GenericParticle(\r\n          level,\r\n          cx,\r\n          cy,\r\n          0,\r\n          Random.rand() * 0.5 + 0.3,\r\n          0,\r\n          0,\r\n          0,\r\n          color,\r\n          0,\r\n          10000000,\r\n          tx + Random.rand() - 0.5,\r\n          ty + Random.rand() - 0.5,\r\n          0,\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  static spawnCluster = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    color: string,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      level.particles.push(\r\n        new GenericParticle(\r\n          level,\r\n          cx + Random.rand() * 0.05 - 0.025,\r\n          cy + Random.rand() * 0.05 - 0.025,\r\n          Random.rand() * 0.5,\r\n          0.0625 * (i + 8),\r\n          0.025 * (Random.rand() * 2 - 1),\r\n          0.025 * (Random.rand() * 2 - 1),\r\n          0.2 * (Random.rand() - 1),\r\n          color,\r\n          0,\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    level: Room,\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    s: number,\r\n    dx: number,\r\n    dy: number,\r\n    dz: number,\r\n    color: string,\r\n    delay?: number,\r\n    expirationTimer?: number,\r\n    targetX?: number,\r\n    targetY?: number,\r\n    targetZ?: number,\r\n  ) {\r\n    super();\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.s = s;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.dz = dz;\r\n    this.color = color;\r\n    this.alpha = 1.0;\r\n    if (delay !== undefined) this.delay = delay;\r\n    this.targetX = targetX;\r\n    this.targetY = targetY;\r\n    this.targetZ = targetZ;\r\n    this.expirationTimer = 1000000;\r\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\r\n  }\r\n\r\n  render = () => {\r\n    let scale = GameConstants.TILESIZE;\r\n    let scaledS = this.s * this.alpha; // using alpha for scaling, not alpha\r\n    let halfS = 0.5 * scaledS;\r\n    let oldFillStyle = Game.ctx.fillStyle;\r\n    Game.ctx.fillStyle = this.color;\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    Game.ctx.beginPath();\r\n    Game.ctx.arc(\r\n      Math.round(this.x * scale),\r\n      Math.round((this.y - this.z) * scale),\r\n      Math.round(halfS * scale),\r\n      0,\r\n      2 * Math.PI,\r\n      false,\r\n    );\r\n    Game.ctx.fill();\r\n\r\n    Game.ctx.fillStyle = oldFillStyle;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.targetX) this.x += 0.1 * (this.targetX - this.x);\r\n    else this.x += this.dx;\r\n    if (this.targetY) this.y += 0.1 * (this.targetY - this.y);\r\n    else this.y += this.dy;\r\n    if (this.targetZ) this.z += 0.1 * (this.targetZ - this.z);\r\n    else this.z += this.dz;\r\n\r\n    this.dx *= 0.97;\r\n    this.dy *= 0.97;\r\n    if (this.z <= 0) {\r\n      this.z = 0;\r\n      this.dz *= -0.8;\r\n    }\r\n\r\n    // apply gravity\r\n    this.dz -= 0.01;\r\n\r\n    if (this.alpha < 0.2) this.alpha -= 0.007;\r\n    else this.alpha -= 0.02;\r\n    if (this.alpha <= 0.1) this.dead = true;\r\n\r\n    this.expirationTimer--;\r\n    if (this.expirationTimer <= 0) this.dead = true;\r\n\r\n    if (this.dead) return;\r\n\r\n    this.drawableY = this.y;\r\n\r\n    this.render();\r\n  };\r\n}\r\n","import { Room } from \"../room/room\";\r\nimport { Particle } from \"./particle\";\r\nimport { Direction, Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Player, PlayerDirection } from \"../player/player\";\r\nimport { Entity } from \"../entity/entity\";\r\n\r\nexport class ImageParticle extends Particle {\r\n  room: Room;\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  s: number;\r\n  dx: number;\r\n  dy: number;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetZ: number;\r\n  dz: number;\r\n  color: string;\r\n  alpha: number;\r\n  delay: number;\r\n  expirationTimer: number;\r\n  tileX: number;\r\n  tileY: number;\r\n  size: number;\r\n  static shotgun = (\r\n    room: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tx: number,\r\n    ty: number,\r\n    tileX: number,\r\n    tileY: number,\r\n  ) => {\r\n    for (let i = 0; i < 4; i++) {\r\n      room.particles.push(\r\n        new ImageParticle(\r\n          room,\r\n          cx,\r\n          cy,\r\n          0,\r\n          Random.rand() * 0.5 + 0.3,\r\n          0,\r\n          0,\r\n          0,\r\n          tileX,\r\n          tileY,\r\n          0, //size\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  static spawnCluster = (\r\n    level: Room,\r\n    cx: number,\r\n    cy: number,\r\n    tileX: number,\r\n    tileY: number,\r\n  ) => {\r\n    for (let i = Math.floor(Random.rand() * 3); i < 5; i++) {\r\n      level.particles.push(\r\n        new ImageParticle(\r\n          level,\r\n          cx + Random.rand() * 0.05 - 0.025, // x\r\n          cy + Random.rand() * 0.05 - 0.025, // y\r\n          Random.rand() * 0.5, // z\r\n          0.0625 * (i + 8), // s\r\n          0.025 * (Random.rand() * 2 - 1), //dx\r\n          0.025 * (Random.rand() * 2 - 1), //dy\r\n          0.2 * (Random.rand() - 1), //dz\r\n          tileX,\r\n          tileY,\r\n          [2, 1, 0, 1, 2, 2, 2][i], //size\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    s: number,\r\n    dx: number,\r\n    dy: number,\r\n    dz: number,\r\n    tileX: number,\r\n    tileY: number,\r\n    size: number,\r\n    delay?: number,\r\n    expirationTimer?: number,\r\n    targetX?: number,\r\n    targetY?: number,\r\n    targetZ?: number,\r\n  ) {\r\n    super();\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z; // Use provided height\r\n    this.s = s;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.dz = dz;\r\n    this.tileX = tileX;\r\n    this.tileY = tileY;\r\n    this.size = size;\r\n    this.alpha = 1.0;\r\n    if (delay !== undefined) this.delay = delay;\r\n    this.targetX = targetX;\r\n    this.targetY = targetY;\r\n    this.targetZ = targetZ;\r\n    this.expirationTimer = 100; // Increased life duration\r\n    if (expirationTimer !== undefined) this.expirationTimer = expirationTimer;\r\n  }\r\n\r\n  render = () => {\r\n    let scale = GameConstants.TILESIZE;\r\n    let yOffset = this.z * scale;\r\n    let frame = this.s > 0.5 ? 1 : 0; // Placeholder frames for large and small particles\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    let adjustedTileX = this.tileX + this.size;\r\n    Game.drawFX(\r\n      adjustedTileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      this.x - this.alpha / 2,\r\n      this.y - this.z - this.alpha / 2,\r\n      1,\r\n      1,\r\n      this.shadeColor(),\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.imageSmoothingEnabled = false;\r\n\r\n    if (this.targetX) this.x += 0.2 * (this.targetX - this.x) * delta;\r\n    else this.x += this.dx * delta;\r\n    if (this.targetY) this.y += 0.2 * (this.targetY - this.y) * delta;\r\n    else this.y += this.dy * delta;\r\n    if (this.targetZ) this.z += 0.2 * (this.targetZ - this.z) * delta;\r\n    else this.z += this.dz * delta;\r\n\r\n    this.dx *= Math.pow(0.97, delta);\r\n    this.dy *= Math.pow(0.97, delta);\r\n    if (this.z <= 0) {\r\n      this.z = 0;\r\n      this.dz *= -0.8;\r\n    }\r\n\r\n    this.dz -= 0.01 * delta;\r\n\r\n    this.expirationTimer -= delta;\r\n    if (this.expirationTimer <= 0) this.dead = true;\r\n\r\n    if (this.dead) return;\r\n\r\n    this.drawableY = this.y;\r\n\r\n    this.render();\r\n  };\r\n}\r\n","import { Utils } from \"../utility/utils\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class KeyPathParticle extends Particle {\r\n  x: number;\r\n  y: number;\r\n  frame: number;\r\n  type: string;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y - 0.25;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n  }\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    const frameOffset = Utils.distance(\r\n      this.x,\r\n      this.y,\r\n      this.room.game.players[this.room.game.localPlayerID].x,\r\n      this.room.game.players[this.room.game.localPlayerID].y,\r\n    );\r\n    this.frame += delta / 10;\r\n    const sinFrame = Math.sin(this.frame + frameOffset) * 1;\r\n    const cosFrame = Math.cos(this.frame + frameOffset) * 1;\r\n\r\n    Game.ctx.fillStyle = \"#FFFF00\";\r\n\r\n    Game.ctx.fillRect(\r\n      (this.x + 0.5) * GameConstants.TILESIZE - 1 + Math.round(sinFrame),\r\n      (this.y + 0.5) * GameConstants.TILESIZE - 1 + Math.round(cosFrame),\r\n      2,\r\n      2,\r\n    );\r\n  };\r\n}\r\n","import { Drawable } from \"../drawable/drawable\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Player } from \"../player/player\";\r\nimport { Room } from \"../room/room\";\r\n\r\nexport class Particle extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  room: Room;\r\n  drawTopLayer = (delta) => {};\r\n  shadeAmount = () => {\r\n    if (\r\n      GameConstants.SMOOTH_LIGHTING &&\r\n      !GameConstants.SHADE_INLINE_IN_ENTITY_LAYER\r\n    )\r\n      return 0;\r\n    const x = Math.floor(this.x);\r\n    const y = Math.floor(this.y);\r\n\r\n    if (!this.room.softVis[x]) return 0.9;\r\n\r\n    const shade = this.room.softVis[x][y];\r\n    return shade ?? 0.9;\r\n  };\r\n  shadeColor = () => {\r\n    return this.room.shadeColor;\r\n  };\r\n}\r\n","import { Particle } from \"./particle\";\r\nimport { Game } from \"../game\";\r\n\r\nexport class WizardTeleportParticle extends Particle {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  dz: number;\r\n  frame: number;\r\n  dead: boolean;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.frame = 0;\r\n    this.z = 0;\r\n    this.dz = 0.1;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.drawFX(Math.floor(this.frame), 3, 1, 1, this.x, this.y - this.z, 1, 1);\r\n    this.z += this.dz * delta;\r\n    this.dz *= 0.9;\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame > 6) this.dead = true;\r\n  };\r\n}\r\n","import { Player } from \"src/player/player\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Room } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class XPPopup extends Particle {\r\n  room: Room;\r\n  xp: number;\r\n  x: number;\r\n  y: number;\r\n  alpha: number = 0.25;\r\n  color: string;\r\n  outlineColor: string;\r\n  frame: number = 0;\r\n  xoffset: number = 0;\r\n  constructor(room: Room, x: number, y: number, xp: number) {\r\n    super();\r\n    this.room = room;\r\n    this.xp = xp;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = \"yellow\";\r\n    this.outlineColor = GameConstants.OUTLINE;\r\n    this.xoffset = 0;\r\n  }\r\n  getXoffset = () => {\r\n    if (this.room.particles.length > 0) {\r\n      let damageNumbers = this.room.particles.filter(\r\n        (p) => p instanceof XPPopup,\r\n      );\r\n      if (damageNumbers.length % 3 === 0) return 0.5;\r\n      if (damageNumbers.length % 3 === 1) return 0;\r\n      if (damageNumbers.length % 3 === 2) return 0.25;\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    if (this.dead) {\r\n      Game.ctx.restore();\r\n      return;\r\n    }\r\n    if (this.frame > 15) this.alpha -= 0.005 * delta;\r\n\r\n    this.y -= 0.03 * delta;\r\n    this.frame += delta;\r\n    let width = Game.measureText(this.xp.toString()).width;\r\n    if (this.alpha <= 0.002) {\r\n      this.alpha = 0;\r\n      this.dead = true;\r\n    }\r\n    Game.ctx.globalAlpha = this.alpha;\r\n    const centerX = Game.measureText(`+${this.xp}xp`).width / 2;\r\n    Game.ctx.fillStyle = this.color;\r\n    Game.fillText(\r\n      `+${this.xp} xp`,\r\n      (this.x + 0.4 + this.xoffset) * GameConstants.TILESIZE - centerX,\r\n      (this.y - 0.75) * GameConstants.TILESIZE,\r\n    );\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Input } from \"../game/input\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Direction, Game, LevelState } from \"../game\";\r\nimport { Door } from \"../tile/door\";\r\nimport { Trapdoor } from \"../tile/trapdoor\";\r\nimport { Inventory } from \"../inventory/inventory\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Map } from \"../gui/map\";\r\nimport { HealthBar } from \"../drawable/healthbar\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Item } from \"../item/item\";\r\n\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\n\r\nimport { Menu } from \"../gui/menu\";\r\nimport { Bestiary } from \"../game/bestiary\";\r\nimport { PlayerInputHandler } from \"./playerInputHandler\";\r\nimport { PlayerActionProcessor } from \"./playerActionProcessor\";\r\nimport { PlayerMovement } from \"./playerMovement\";\r\nimport { PlayerRenderer } from \"./playerRenderer\";\r\nimport { UpLadder } from \"../tile/upLadder\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { EVENTS } from \"../event/events\";\r\n\r\nexport enum PlayerDirection {\r\n  DOWN,\r\n  UP,\r\n  RIGHT,\r\n  LEFT,\r\n}\r\n\r\nenum DrawDirection {\r\n  X,\r\n  Y,\r\n}\r\n\r\nexport class Player extends Drawable {\r\n  globalId: string;\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  direction: Direction;\r\n  lastDirection: Direction;\r\n  game: Game;\r\n  levelID: number; // which room we're in (legacy index; avoid using directly)\r\n  roomGID?: string;\r\n  health: number;\r\n  maxHealth: number;\r\n  healthBar: HealthBar;\r\n  dead: boolean;\r\n  lastTickHealth: number;\r\n  inventory: Inventory;\r\n  sightRadius: number;\r\n  defaultSightRadius: number;\r\n  static minSightRadius: number = 2; //hard minimum sight radius that ignores depth\r\n  map: Map;\r\n  openVendingMachine: VendingMachine;\r\n  isLocalPlayer: boolean;\r\n  mapToggled: boolean;\r\n  lastHitBy: string;\r\n  turnCount: number;\r\n  triedMove: boolean;\r\n  tutorialRoom: boolean;\r\n\r\n  moveRange: number;\r\n  tileCursor: { x: number; y: number };\r\n  lightEquipped: boolean;\r\n  lightSource: LightSource;\r\n  hurtShield: boolean; // handles logic to take damage or not\r\n  lightBrightness: number;\r\n  moveDistance: number;\r\n  moveQueue: { x: number; y: number; direction: Direction }[];\r\n  lastX: number;\r\n  lastY: number;\r\n  justMoved: DrawDirection;\r\n  depth: number;\r\n  menu: Menu;\r\n  busyAnimating: boolean;\r\n  lightColor: [number, number, number];\r\n\r\n  inputHandler: PlayerInputHandler;\r\n  actionProcessor: PlayerActionProcessor;\r\n  movement: PlayerMovement;\r\n\r\n  cooldownRemaining: number;\r\n  // Death screen pagination state\r\n  deathScreenPageIndex: number;\r\n  deathScreenPageCount: number;\r\n\r\n  private renderer: PlayerRenderer;\r\n\r\n  private drawMoveQueue: {\r\n    drawX: number;\r\n    drawY: number;\r\n  }[] = [];\r\n\r\n  seenEnemies: Set<typeof Enemy> = new Set();\r\n  bestiary: Bestiary = null;\r\n  constructor(game: Game, x: number, y: number, isLocalPlayer: boolean) {\r\n    super();\r\n    this.globalId = IdGenerator.generate(\"P\");\r\n\r\n    this.game = game;\r\n\r\n    this.levelID = 0;\r\n    this.roomGID = undefined;\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.moveDistance = 0;\r\n    this.direction = Direction.UP;\r\n    this.lastDirection = Direction.UP;\r\n\r\n    this.lastX = 0;\r\n    this.lastY = 0;\r\n    this.isLocalPlayer = isLocalPlayer;\r\n    this.depth = 0;\r\n    this.menu = new Menu(this);\r\n    this.busyAnimating = false;\r\n\r\n    this.mapToggled = true;\r\n    this.health = 2;\r\n    this.maxHealth = 2;\r\n    this.healthBar = new HealthBar();\r\n    this.dead = false;\r\n    this.lastTickHealth = this.health;\r\n\r\n    this.inventory = new Inventory(game, this);\r\n    this.defaultSightRadius = 3;\r\n    this.sightRadius = LevelConstants.LIGHTING_MAX_DISTANCE; //this.defaultSightRadius;\r\n    this.map = new Map(this.game, this);\r\n    this.turnCount = 0;\r\n    this.triedMove = false;\r\n    this.tutorialRoom = false;\r\n\r\n    this.tileCursor = { x: 0, y: 0 };\r\n    this.moveRange = 1;\r\n    this.lightEquipped = false;\r\n    this.lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\r\n\r\n    this.hurtShield = false;\r\n    this.lightBrightness = 0.3;\r\n\r\n    this.moveQueue = [];\r\n    this.justMoved = DrawDirection.Y;\r\n\r\n    this.inputHandler = new PlayerInputHandler(this);\r\n    this.actionProcessor = new PlayerActionProcessor(this);\r\n    this.movement = new PlayerMovement(this);\r\n    this.renderer = new PlayerRenderer(this);\r\n\r\n    this.bestiary = new Bestiary(this.game, this);\r\n\r\n    this.cooldownRemaining = 0;\r\n    this.deathScreenPageIndex = 0;\r\n    this.deathScreenPageCount = 1;\r\n  }\r\n\r\n  getRoom = () => {\r\n    const byId = (this.game as any).getRoomById?.(this.roomGID);\r\n    return byId || this.game.levels[this.depth].rooms[this.levelID];\r\n  };\r\n\r\n  get hitX() {\r\n    return this.renderer?.drawX ?? 0;\r\n  }\r\n  get hitY() {\r\n    return this.renderer?.drawY ?? 0;\r\n  }\r\n\r\n  get drawX() {\r\n    return this.renderer?.drawX ?? 0;\r\n  }\r\n  get drawY() {\r\n    return this.renderer?.drawY ?? 0;\r\n  }\r\n\r\n  setHitXY = (newX: number, newY: number, distance = 0.5) => {\r\n    this.renderer.hitX = distance * (this.x - newX);\r\n    this.renderer.hitY = distance * (this.y - newY);\r\n  };\r\n\r\n  applyStatus = (\r\n    enemy: Entity,\r\n    status: { poison: boolean; blood: boolean },\r\n  ) => {\r\n    if (enemy instanceof Enemy) {\r\n      if (status.poison) {\r\n        enemy.poison();\r\n        return true;\r\n      }\r\n      if (status.blood) {\r\n        enemy.bleed();\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  isMouseOnPlayerTile = () => {\r\n    return this.mouseToTile().x === this.x && this.mouseToTile().y === this.y;\r\n  };\r\n\r\n  isMouseAboveFloor = (offsetY: number = 0) => {\r\n    const mouseTile = this.mouseToTile(offsetY);\r\n\r\n    // Handle undefined coordinates\r\n    if (mouseTile.x === undefined || mouseTile.y === undefined) {\r\n      return false;\r\n    }\r\n\r\n    const mouseX = mouseTile.x;\r\n    const mouseY = mouseTile.y;\r\n\r\n    if (\r\n      this.game.levelState === LevelState.LEVEL_GENERATION ||\r\n      !this.game.started ||\r\n      !this.game.room ||\r\n      !this.game.room.roomArray ||\r\n      !Array.isArray(this.game.room.roomArray[mouseX]) ||\r\n      this.game.room.roomArray[mouseX][mouseY] === undefined\r\n    )\r\n      return false;\r\n\r\n    return !(\r\n      !this.game.room?.tileInside(mouseX, mouseY) ||\r\n      (this.game.room?.tileInside(mouseX, mouseY) &&\r\n        this.game.room?.roomArray[mouseX][mouseY].isSolid() &&\r\n        !(this.game.room?.roomArray[mouseX][mouseY] instanceof Door))\r\n    );\r\n  };\r\n\r\n  mouseInLine = () => {\r\n    const mouseTile = this.mouseToTile();\r\n\r\n    // Handle undefined coordinates\r\n    if (mouseTile.x === undefined || mouseTile.y === undefined) {\r\n      return false;\r\n    }\r\n\r\n    return mouseTile.x === this.x || mouseTile.y === this.y;\r\n  };\r\n\r\n  canMoveWithMouse = () => {\r\n    if (this.inventory.isOpen) {\r\n      return null;\r\n    }\r\n\r\n    const isFloorNormal = this.isMouseAboveFloor();\r\n    const isFloorOffset = this.isMouseAboveFloor(8);\r\n\r\n    if (!isFloorNormal && !isFloorOffset) {\r\n      return null;\r\n    }\r\n\r\n    const mouseTile = this.mouseToTile();\r\n    const offsetMouseTile = this.mouseToTile(8);\r\n\r\n    if (\r\n      mouseTile.x === undefined ||\r\n      mouseTile.y === undefined ||\r\n      offsetMouseTile.x === undefined ||\r\n      offsetMouseTile.y === undefined\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      !this.game.room.roomArray ||\r\n      !this.game.room.roomArray[mouseTile.x] ||\r\n      !this.game.room.roomArray[mouseTile.x][mouseTile.y]\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    let targetY = mouseTile.y;\r\n    const hasEntityAtOffset = this.checkTileForEntity(offsetMouseTile);\r\n\r\n    if (isFloorOffset && hasEntityAtOffset) {\r\n      targetY = offsetMouseTile.y;\r\n    }\r\n\r\n    const sameX = mouseTile.x === this.x;\r\n    const sameY = targetY === this.y;\r\n\r\n    if (sameX && sameY) {\r\n      return null;\r\n    }\r\n\r\n    if (sameX) {\r\n      const nextY = targetY < this.y ? this.y - 1 : this.y + 1;\r\n\r\n      if (\r\n        !this.game.room.roomArray[this.x] ||\r\n        !this.game.room.roomArray[this.x][nextY]\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      return targetY < this.y\r\n        ? { direction: Direction.UP, x: this.x, y: nextY }\r\n        : { direction: Direction.DOWN, x: this.x, y: nextY };\r\n    }\r\n\r\n    if (sameY) {\r\n      const nextX = mouseTile.x < this.x ? this.x - 1 : this.x + 1;\r\n\r\n      if (\r\n        !this.game.room.roomArray[nextX] ||\r\n        !this.game.room.roomArray[nextX][this.y]\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      return mouseTile.x < this.x\r\n        ? { direction: Direction.LEFT, x: nextX, y: this.y }\r\n        : { direction: Direction.RIGHT, x: nextX, y: this.y };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  stall = () => {\r\n    if (!this.game.started || !this.game.room || !this.renderer) return;\r\n    if (this.game.levelState === LevelState.IN_LEVEL) {\r\n      this.game?.room?.tick(this);\r\n      this.shakeScreen(this.x - 0.5, this.y, this.x + 0.5, this.y, 5);\r\n      this.game.pushMessage(\"Equipping an item takes a turn.\");\r\n    }\r\n  };\r\n\r\n  moveWithMouse = () => {\r\n    this.inputHandler.setMostRecentMoveInput(\"mouse\");\r\n    if (!GameConstants.MOVE_WITH_MOUSE) return;\r\n    const moveData = this.canMoveWithMouse();\r\n    if (moveData !== null) {\r\n      this.actionProcessor.process({\r\n        type: \"MouseMove\",\r\n        direction: moveData.direction,\r\n        targetX: moveData.x,\r\n        targetY: moveData.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  mouseToTile = (offsetY: number = 0) => {\r\n    // Handle undefined mouse coordinates\r\n    if (Input.mouseX === undefined || Input.mouseY === undefined) {\r\n      return { x: undefined, y: undefined };\r\n    }\r\n\r\n    // Get screen center coordinates\r\n    const screenCenterX = GameConstants.WIDTH / 2;\r\n    const screenCenterY = GameConstants.HEIGHT / 2;\r\n\r\n    // Convert pixel offset to tile offset\r\n    const tileOffsetX = Math.floor(\r\n      (Input.mouseX - screenCenterX + GameConstants.TILESIZE / 2) /\r\n        GameConstants.TILESIZE,\r\n    );\r\n    const tileOffsetY = Math.floor(\r\n      (Input.mouseY + offsetY - screenCenterY + GameConstants.TILESIZE / 2) /\r\n        GameConstants.TILESIZE,\r\n    );\r\n\r\n    return {\r\n      x: this.x + tileOffsetX,\r\n      y: this.y + tileOffsetY,\r\n    };\r\n  };\r\n\r\n  tileToMouse = (tileX, tileY) => {\r\n    // Get screen center coordinates\r\n    const screenCenterX = GameConstants.WIDTH / 2;\r\n    const screenCenterY = GameConstants.HEIGHT / 2;\r\n\r\n    // Calculate the offset from the center position\r\n    const tileOffsetX = tileX - this.x;\r\n    const tileOffsetY = tileY - this.y;\r\n\r\n    // Convert tile offset to pixel coordinates\r\n    const pixelX = screenCenterX + tileOffsetX * GameConstants.TILESIZE;\r\n    const pixelY = screenCenterY + tileOffsetY * GameConstants.TILESIZE;\r\n\r\n    return {\r\n      x: pixelX,\r\n      y: pixelY,\r\n    };\r\n  };\r\n\r\n  setTileCursorPosition = () => {\r\n    const offsetX =\r\n      Math.floor(GameConstants.WIDTH / 2) / GameConstants.TILESIZE;\r\n    const offsetY =\r\n      Math.floor(GameConstants.HEIGHT / 2) / GameConstants.TILESIZE;\r\n\r\n    const mousePosition = this.mouseToTile();\r\n\r\n    // Calculate cursor position relative to center\r\n    let cursorX = mousePosition.x - this.x + offsetX - 0.5;\r\n    let cursorY = mousePosition.y - this.y + offsetY - 0.5;\r\n\r\n    // Clamp cursor to be no further than 1 tile from center\r\n    // Center is at (offsetX, offsetY)\r\n    const centerX = offsetX;\r\n    const centerY = offsetY;\r\n\r\n    // Calculate distance from center (before the 0.5 offset)\r\n    const distanceX = Math.abs(cursorX + 0.5 - centerX);\r\n    const distanceY = Math.abs(cursorY + 0.5 - centerY);\r\n\r\n    // Clamp if needed\r\n    if (distanceX > 1) {\r\n      // Preserve direction but limit distance\r\n      const direction = cursorX > centerX ? 1 : -1;\r\n      cursorX = centerX + direction - 0.5; // -0.5 to account for the offset\r\n    }\r\n\r\n    if (distanceY > 1) {\r\n      // Preserve direction but limit distance\r\n      const direction = cursorY > centerY ? 1 : -1;\r\n      cursorY = centerY + direction - 0.5; // -0.5 to account for the offset\r\n    }\r\n\r\n    this.tileCursor = {\r\n      x: cursorX,\r\n      y: cursorY,\r\n    };\r\n  };\r\n\r\n  enemyInRange = (eX: number, eY: number, range: number | null) => {\r\n    // Use nullish coalescing operator for cleaner default value\r\n    const r = range ?? 1;\r\n\r\n    // Same tile - not in range\r\n    if (eX === this.x && eY === this.y) return false;\r\n\r\n    // Diagonal - not in range\r\n    if (eX !== this.x && eY !== this.y) return false;\r\n\r\n    // Check horizontal range\r\n    if (eY === this.y) {\r\n      return Math.abs(eX - this.x) <= r;\r\n    }\r\n\r\n    // Check vertical range\r\n    if (eX === this.x) {\r\n      return Math.abs(eY - this.y) <= r;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  getDirectionFromCoords = (inputX: number, inputY: number): string => {\r\n    // Same position - no direction\r\n    if (inputX === this.x && inputY === this.y) return \"\";\r\n\r\n    // Diagonal - no direction\r\n    if (inputX !== this.x && inputY !== this.y) return \"\";\r\n\r\n    // Check horizontal\r\n    if (inputY === this.y) {\r\n      return inputX > this.x ? \"right\" : \"left\";\r\n    }\r\n\r\n    // Check vertical\r\n    if (inputX === this.x) {\r\n      return inputY > this.y ? \"down\" : \"up\";\r\n    }\r\n\r\n    return \"arrow\";\r\n  };\r\n\r\n  setCursorIcon = () => {\r\n    // Early return cases\r\n    if (this.inventory.isDragging) {\r\n      MouseCursor.getInstance().setIcon(\"grab\");\r\n      return;\r\n    }\r\n\r\n    const cursor = MouseCursor.getInstance();\r\n    const mousePos = cursor.getPosition();\r\n    const mouseTile = this.mouseToTile();\r\n\r\n    // Check cursor states in order of priority\r\n    const cursorState = this.getCursorState(mousePos, mouseTile);\r\n    cursor.setIcon(cursorState);\r\n  };\r\n\r\n  private getCursorState = (\r\n    mousePos: { x: number; y: number },\r\n    mouseTile: { x: number; y: number },\r\n  ): string => {\r\n    // 1. Check UI interactions\r\n    if (this.isMouseInUI(mousePos)) {\r\n      return \"hand\";\r\n    }\r\n    if (this.isEntityAttackable(mouseTile)) {\r\n      return \"sword\";\r\n    }\r\n\r\n    // 2. Check game world interactions\r\n    if (this.isMouseAboveFloor() && this.mouseInLine()) {\r\n      // 2a. Check for attackable entities\r\n\r\n      // 2b. Check for movement target\r\n      if (this.enemyInRange(mouseTile.x, mouseTile.y, 1)) {\r\n        return this.getDirectionFromCoords(mouseTile.x, mouseTile.y);\r\n      }\r\n\r\n      // 2c. Default floor interaction\r\n      return \"hand\";\r\n    }\r\n\r\n    // 3. Default cursor state\r\n    return \"arrow\";\r\n  };\r\n\r\n  private isMouseInUI = (mousePos: { x: number; y: number }): boolean => {\r\n    const { x, y } = mousePos;\r\n\r\n    return (\r\n      this.inventory.isPointInInventoryButton(x, y) ||\r\n      this.isInventoryItemInteraction(x, y)\r\n    );\r\n  };\r\n\r\n  private isInventoryItemInteraction = (x: number, y: number): boolean => {\r\n    const hasSelectedItem = this.inventory.itemAtSelectedSlot() instanceof Item;\r\n\r\n    return (\r\n      (this.inventory.isPointInQuickbarBounds(x, y).inBounds &&\r\n        hasSelectedItem) ||\r\n      (this.inventory.isOpen &&\r\n        this.inventory.isPointInInventoryBounds(x, y).inBounds &&\r\n        hasSelectedItem)\r\n    );\r\n  };\r\n\r\n  private isEntityAttackable = (mouseTile: {\r\n    x: number;\r\n    y: number;\r\n  }): boolean => {\r\n    // Check current tile\r\n    const currentTileCheck = this.checkTileForEntity(mouseTile);\r\n    if (currentTileCheck) return true;\r\n\r\n    // Check tile above with 0.5 tile offset\r\n    const belowTileCheck = this.checkTileForEntity({\r\n      x: mouseTile.x,\r\n      y: this.mouseToTile(GameConstants.TILESIZE / 2).y,\r\n    });\r\n\r\n    return belowTileCheck;\r\n  };\r\n\r\n  private checkTileForEntity = (tile: { x: number; y: number }): boolean => {\r\n    const range = this.inventory.weapon?.range ?? 1;\r\n    return this.game.room.entities.some((entity) => {\r\n      return (\r\n        entity.x === tile.x &&\r\n        entity.y === tile.y &&\r\n        this.enemyInRange(entity.x, entity.y, range)\r\n      );\r\n    });\r\n  };\r\n\r\n  restart = () => {\r\n    this.dead = false;\r\n    this.game.newGame();\r\n    // Reset pagination on restart\r\n    this.deathScreenPageIndex = 0;\r\n    this.deathScreenPageCount = 1;\r\n  };\r\n\r\n  hit = (): number => {\r\n    return 1;\r\n  };\r\n\r\n  tryCollide = (other: any, newX: number, newY: number) => {\r\n    if (other.collidable === false) return false;\r\n    if (newX >= other.x + other.w || newX + this.w <= other.x) return false;\r\n    if (newY >= other.y + other.h || newY + this.h <= other.y) return false;\r\n    return true;\r\n  };\r\n\r\n  tryMove = (x: number, y: number) => {\r\n    if (\r\n      this.busyAnimating ||\r\n      this.game.levelState === LevelState.TRANSITIONING ||\r\n      this.game.levelState === LevelState.TRANSITIONING_LADDER\r\n    )\r\n      return;\r\n    // TODO don't move if hit by enemy\r\n    this.getRoom().catchUp();\r\n    //this.game.room.catchUp();\r\n    if (!this.game.room) {\r\n      console.warn(\"oi bruv, game.room isn't even there!\");\r\n      return;\r\n    }\r\n    if (this.dead) return;\r\n\r\n    let collide = false;\r\n\r\n    for (let e of this.getRoom().entities) {\r\n      if (e.collidable === true) {\r\n        if (e.x === x && e.y === y) {\r\n          collide = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //for (let i = 0; i < 2; i++) //no idea why we would loop this...\r\n    // if (collide === true) {\r\n    if (\r\n      this.inventory.hasWeapon() &&\r\n      !this.inventory.getWeapon().weaponMove(x, y)\r\n    ) {\r\n      //for (let h of this.game.levels[this.levelID].hitwarnings) {\r\n      //if (newMove instanceof HitWarning)\r\n      return;\r\n      //}\r\n    } else if (!this.inventory.hasWeapon()) {\r\n      this.game.pushMessage(\"No weapon equipped.\");\r\n    }\r\n    //}\r\n    for (let e of this.getRoom().entities) {\r\n      e.lastX = e.x;\r\n      e.lastY = e.y;\r\n      //console.log(`e.lastX, e.lastY: ${e.lastX}, ${e.lastY}`);\r\n      if (this.tryCollide(e, x, y)) {\r\n        if (e.pushable) {\r\n          // pushing a crate or barrel\r\n\r\n          let dx = x - this.x;\r\n          let dy = y - this.y;\r\n          let nextX = x + dx;\r\n          let nextY = y + dy;\r\n          let foundEnd = false; // end of the train of whatever we're pushing\r\n          let enemyEnd = false; // end of the train is a solid enemy (i.e. potted plant)\r\n          let pushedEnemies = [];\r\n          while (true) {\r\n            foundEnd = true;\r\n            for (const f of this.getRoom().entities) {\r\n              f.lastX = f.x;\r\n              f.lastY = f.y;\r\n              if (f.pointIn(nextX, nextY)) {\r\n                if (!f.chainPushable) {\r\n                  enemyEnd = true;\r\n                  foundEnd = true;\r\n                  break;\r\n                }\r\n                foundEnd = false;\r\n                pushedEnemies.push(f);\r\n                break;\r\n              }\r\n            }\r\n            if (foundEnd) break;\r\n            nextX += dx * pushedEnemies[pushedEnemies.length - 1].w;\r\n            nextY += dy * pushedEnemies[pushedEnemies.length - 1].h;\r\n          }\r\n          /* if no enemies and there is a wall, no move\r\n          otherwise, push everything, killing last enemy if there is a wall */\r\n          // here, (nextX, nextY) is the position immediately after the end of the train\r\n\r\n          if (\r\n            pushedEnemies.length === 0 &&\r\n            (this.getRoom().roomArray[nextX][nextY].canCrushEnemy() || enemyEnd)\r\n          ) {\r\n            if (e.destroyable) {\r\n              //fallback if no weapon equipped\r\n              e.hurt(this, e.health, \"none\");\r\n              if (this.getRoom() === this.game.room) Sound.hit();\r\n\r\n              this.shakeScreen(this.x, this.y, e.x, e.y);\r\n              this.hitShake(this.x, this.y, e.x, e.y);\r\n\r\n              this.getRoom().tick(this);\r\n              return;\r\n            }\r\n          } else {\r\n            if (this.getRoom() === this.game.room) Sound.push();\r\n            // here pushedEnemies may still be []\r\n\r\n            for (const f of pushedEnemies) {\r\n              f.lastX = f.x;\r\n              f.lastY = f.y;\r\n              f.x += dx;\r\n              f.y += dy;\r\n              f.drawX = dx;\r\n              f.drawY = dy;\r\n              f.skipNextTurns = 1; // skip next turn, so they don't move while we're pushing them\r\n            }\r\n            if (\r\n              this.getRoom().roomArray[nextX][nextY].canCrushEnemy() ||\r\n              enemyEnd\r\n            ) {\r\n              const pushedEnemy = pushedEnemies[pushedEnemies.length - 1];\r\n              pushedEnemy.crush();\r\n              if (pushedEnemy.isEnemy) {\r\n                Sound.playSquish();\r\n              }\r\n              if (this.getRoom() === this.game.room) Sound.hit();\r\n            }\r\n\r\n            e.x += dx;\r\n            e.y += dy;\r\n            e.drawX = dx;\r\n            e.drawY = dy;\r\n            this.move(x, y);\r\n            this.moveDistance++;\r\n            this.getRoom().tick(this);\r\n            return;\r\n          }\r\n        } else {\r\n          // if we're trying to hit an enemy, check if it's destroyable\r\n          if (!e.dead) {\r\n            if (e.interactable) e.interact(this);\r\n            //this.actionTab.actionState = ActionState.ATTACK;\r\n            //sets the action tab state to Attack\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let other = this.getRoom()?.roomArray?.[x]?.[y];\r\n    if (!other) {\r\n      console.warn(\"oi bruv, tile to check for collision isn't even there!\");\r\n      return;\r\n    }\r\n    if (!this.getRoom()) {\r\n      console.warn(\"oi bruv, room to check for collision isn't even there!\");\r\n      return;\r\n    }\r\n    if (!this.getRoom().roomArray) {\r\n      console.warn(\"oi bruv, level to check for collision isn't even there!\");\r\n      return;\r\n    }\r\n    if (!other.isSolid()) {\r\n      if (other instanceof UpLadder || other instanceof DownLadder) {\r\n        const locked = other.isLocked();\r\n\r\n        if (locked) {\r\n          this.shakeScreen(this.x, this.y, x, y);\r\n          if (other.lockable.canUnlock(this)) {\r\n            other.lockable.unlock(this);\r\n          } else {\r\n            Sound.playLocked();\r\n          }\r\n          other.addLightSource();\r\n          this.game.room.updateLighting();\r\n          return;\r\n        }\r\n      }\r\n      this.move(x, y);\r\n      other.onCollide(this);\r\n      if (\r\n        !(\r\n          other instanceof Door ||\r\n          other instanceof Trapdoor ||\r\n          other instanceof UpLadder ||\r\n          other instanceof DownLadder\r\n        )\r\n      )\r\n        this.getRoom().tick(this);\r\n    } else {\r\n      if (other instanceof Door) {\r\n        this.shakeScreen(this.x, this.y, x, y);\r\n\r\n        if (other.canUnlock(this)) {\r\n          other.unlock(this);\r\n        } else {\r\n          Sound.playLocked();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private updateLastPosition = (x: number, y: number) => {\r\n    this.lastX = x;\r\n    this.lastY = y;\r\n  };\r\n\r\n  hurt = (damage: number, enemy: string, delay: number = 0) => {\r\n    // Play hurt sound if in current room\r\n    if (this.getRoom() === this.game.room) {\r\n      setTimeout(() => {\r\n        Sound.hurt();\r\n        Sound.playGrunt();\r\n        this.renderer.flash();\r\n        this.renderer.hurt();\r\n      }, delay);\r\n    }\r\n\r\n    // Handle armor damage\r\n    if (this.inventory.getArmor() && this.inventory.getArmor().health > 0) {\r\n      this.inventory.getArmor().hurt(damage);\r\n      this.renderer.hurtShield();\r\n      this.hurtShield = true;\r\n    }\r\n\r\n    // Update player state\r\n    this.lastHitBy = enemy;\r\n    this.healthBar.hurt();\r\n    this.enemyHurtMessage(damage, enemy);\r\n\r\n    // Apply damage if no shield\r\n    if (!this.hurtShield) {\r\n      this.health -= damage;\r\n      // Emit damage taken event for statistics tracking\r\n      globalEventBus.emit(EVENTS.DAMAGE_TAKEN, { amount: damage });\r\n    }\r\n    this.hurtShield = false;\r\n\r\n    // Check for death\r\n    if (this.health <= 0 && !GameConstants.DEVELOPER_MODE) {\r\n      this.dead = true;\r\n      // Reset death screen pagination when death occurs\r\n      this.deathScreenPageIndex = 0;\r\n      this.deathScreenPageCount = 1;\r\n    }\r\n  };\r\n\r\n  enemyHurtMessage = (damage: number, enemy: string) => {\r\n    if (!GameConstants.DEVELOPER_MODE)\r\n      this.game.pushMessage(`The ${enemy} hits you for ${damage} damage.`);\r\n  };\r\n\r\n  beginSlowMotion = () => {\r\n    this.renderer.beginSlowMotion();\r\n  };\r\n\r\n  endSlowMotion = () => {\r\n    this.renderer.endSlowMotion();\r\n  };\r\n\r\n  move = (x: number, y: number) => {\r\n    this.updateLastPosition(this.x, this.y);\r\n\r\n    //this.actionTab.setState(ActionState.MOVE);\r\n    if (this.getRoom() === this.game.room)\r\n      Sound.playerStoneFootstep(this.game.room.envType);\r\n\r\n    if (this.openVendingMachine) this.openVendingMachine.close();\r\n\r\n    this.renderer.setNewDrawXY(x, y);\r\n    this.drawMoveQueue.push({\r\n      drawX: x - this.x,\r\n      drawY: y - this.y,\r\n    });\r\n\r\n    /*\r\n    if (this.drawX > 1) this.drawX = 1;\r\n    if (this.drawY > 1) this.drawY = 1;\r\n    if (this.drawX < -1) this.drawX = -1;\r\n    if (this.drawY < -1) this.drawY = -1;\r\n    */\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    for (let i of this.getRoom().items) {\r\n      if (i.x === x && i.y === y) {\r\n        i.onPickup(this);\r\n      }\r\n    }\r\n    let diffX = x - this.lastX;\r\n    let diffY = y - this.lastY;\r\n    if (diffX === 0 && diffY === 0) return;\r\n\r\n    //this.game.rooms[this.levelID].updateLighting();\r\n    let roomsOnScreen = 0;\r\n    for (let room of this.game.level.rooms) {\r\n      room.roomOnScreen(this);\r\n      //console.log(\"On Screen? \" + room.onScreen + \" levelID: \" + room.id);\r\n      if (room.onScreen) roomsOnScreen++;\r\n    }\r\n    //console.log(\"Rooms On Screen Currently: \" + roomsOnScreen);\r\n  };\r\n\r\n  moveNoSmooth = (x: number, y: number) => {\r\n    // doesn't touch smoothing\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  moveSnap = (x: number, y: number) => {\r\n    // no smoothing\r\n    this.x = Math.round(x);\r\n    this.y = Math.round(y);\r\n    this.renderer.snapDrawStuff();\r\n  };\r\n\r\n  update = () => {};\r\n\r\n  finishTick = () => {\r\n    this.turnCount += 1;\r\n    this.inventory.tick();\r\n\r\n    this.renderer.disableFlash();\r\n\r\n    let totalHealthDiff = this.health - this.lastTickHealth;\r\n    this.lastTickHealth = this.health; // update last tick health\r\n    if (totalHealthDiff < 0) {\r\n      this.renderer.flash();\r\n    }\r\n\r\n    // Emit turn passed event for statistics tracking\r\n    globalEventBus.emit(EVENTS.TURN_PASSED, {});\r\n    this.moveDistance = 0;\r\n\r\n    //this.actionTab.actionState = ActionState.READY;\r\n    //Sets the action tab state to Wait (during enemy turn)\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.renderer.draw(delta);\r\n  };\r\n\r\n  heal = (amount: number) => {\r\n    this.health += amount;\r\n    if (this.health > this.maxHealth) this.health = this.maxHealth;\r\n  };\r\n\r\n  hitShake = (\r\n    playerX: number,\r\n    playerY: number,\r\n    otherX: number,\r\n    otherY: number,\r\n  ) => {\r\n    const range = GameConstants.TILESIZE;\r\n    const hitX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\r\n    const hitY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\r\n    this.renderer.setHitXY(hitX, hitY);\r\n  };\r\n\r\n  shakeScreen = (\r\n    playerX: number,\r\n    playerY: number,\r\n    otherX: number,\r\n    otherY: number,\r\n    shakeStrength: number = 10,\r\n  ) => {\r\n    const range = GameConstants.TILESIZE;\r\n    const shakeX = Math.min(Math.max(0.5 * (playerX - otherX), -range), range);\r\n    const shakeY = Math.min(Math.max(0.5 * (playerY - otherY), -range), range);\r\n    this.renderer.setHitXY(shakeX, shakeY);\r\n\r\n    this.game.shakeScreen(\r\n      -shakeX * 1 * shakeStrength,\r\n      -shakeY * 1 * shakeStrength,\r\n    );\r\n  };\r\n\r\n  updateSlowMotion = () => {\r\n    this.renderer.updateSlowMotion();\r\n  };\r\n\r\n  drawGUI = (delta: number) => {\r\n    this.renderer.drawGUI(delta);\r\n  };\r\n}\r\n","import { Player } from \"./player\";\r\nimport { PlayerAction } from \"./playerAction\";\r\nimport { Game } from \"../game\";\r\n\r\nexport class PlayerActionProcessor {\r\n  private player: Player;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n  }\r\n\r\n  process(action: PlayerAction) {\r\n    // Record the action for replay\r\n    try {\r\n      (this.player.game as any).replayManager?.recordAction(action);\r\n    } catch {}\r\n    switch (action.type) {\r\n      case \"Move\":\r\n        this.player.movement.move(\r\n          action.direction,\r\n          action.targetX,\r\n          action.targetY,\r\n        );\r\n        break;\r\n\r\n      case \"MouseMove\":\r\n        this.player.movement.moveMouse(\r\n          action.direction,\r\n          action.targetX,\r\n          action.targetY,\r\n        );\r\n        break;\r\n      case \"OpenInventory\":\r\n        this.player.inventory.open();\r\n        break;\r\n\r\n      case \"CloseInventory\":\r\n        this.player.inventory.close();\r\n        break;\r\n\r\n      case \"InventoryLeft\":\r\n        this.player.inventory.leftQuickbar();\r\n        break;\r\n\r\n      case \"InventoryRight\":\r\n        this.player.inventory.rightQuickbar();\r\n        break;\r\n\r\n      case \"InventoryUse\":\r\n        this.player.inventory.spaceQuickbar();\r\n        break;\r\n\r\n      case \"InventoryDrop\":\r\n        this.player.inventory.drop();\r\n        break;\r\n\r\n      case \"InventorySelect\":\r\n        // Map quickbar selection 0..4 to selX and trigger use\r\n        this.player.inventory.selX = Math.max(\r\n          0,\r\n          Math.min(action.index, this.player.inventory.cols - 1),\r\n        );\r\n        this.player.inventory.selY = 0;\r\n        this.player.inventory.spaceQuickbar();\r\n        break;\r\n      case \"InventoryMove\": {\r\n        const from = Math.max(\r\n          0,\r\n          Math.min(\r\n            action.fromIndex,\r\n            this.player.inventory.cols *\r\n              (this.player.inventory.rows +\r\n                (this.player.inventory as any).expansion) -\r\n              1,\r\n          ),\r\n        );\r\n        const to = Math.max(\r\n          0,\r\n          Math.min(\r\n            action.toIndex,\r\n            this.player.inventory.cols *\r\n              (this.player.inventory.rows +\r\n                (this.player.inventory as any).expansion) -\r\n              1,\r\n          ),\r\n        );\r\n        const item = this.player.inventory.items[from];\r\n        if (item) {\r\n          const existing = this.player.inventory.items[to];\r\n          this.player.inventory.items[from] = existing;\r\n          this.player.inventory.items[to] = item;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"Restart\":\r\n        this.player.restart();\r\n        break;\r\n\r\n      case \"Attack\":\r\n        // TODO: Route to PlayerCombat module once it's ready\r\n        console.warn(\"Attack action received but not yet implemented.\");\r\n        break;\r\n\r\n      case \"Interact\":\r\n        this.player.tryMove(action.target.x, action.target.y); // will replace with cleaner interaction API later\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Input, InputEnum } from \"../game/input\";\r\nimport type { Player } from \"./player\";\r\nimport { Direction, LevelState } from \"../game\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { MuteButton } from \"../gui/muteButton\";\r\nimport { Sound } from \"../sound/sound\";\r\n\r\nexport class PlayerInputHandler {\r\n  private player: Player;\r\n  mostRecentInput: string;\r\n  mostRecentMoveInput: string;\r\n  moveStartTime: number;\r\n  private mouseHoldInitialDirection: Direction | null = null;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n    this.mostRecentInput = \"keyboard\";\r\n    this.mostRecentMoveInput = \"keyboard\";\r\n    this.moveStartTime = 0;\r\n\r\n    if (player.isLocalPlayer) {\r\n      this.setupListeners();\r\n    }\r\n  }\r\n\r\n  setupListeners() {\r\n    // Prevent duplicate handler registrations after save/load by resetting arrays\r\n    // These arrays are only used for player input routing\r\n    try {\r\n      (Input.mouseRightClickListeners as any).length = 0;\r\n      (Input.mouseLeftClickListeners as any).length = 0;\r\n    } catch {}\r\n\r\n    Input.leftSwipeListener = () => this.handleInput(InputEnum.LEFT);\r\n    Input.rightSwipeListener = () => this.handleInput(InputEnum.RIGHT);\r\n    Input.upSwipeListener = () => this.handleInput(InputEnum.UP);\r\n    Input.downSwipeListener = () => this.handleInput(InputEnum.DOWN);\r\n    Input.commaListener = () => this.handleInput(InputEnum.COMMA);\r\n    Input.periodListener = () => this.handleInput(InputEnum.PERIOD);\r\n    Input.tapListener = () => this.handleTap();\r\n    Input.mouseMoveListener = () => this.handleInput(InputEnum.MOUSE_MOVE);\r\n    Input.mouseRightClickListeners.push(() =>\r\n      this.handleInput(InputEnum.RIGHT_CLICK),\r\n    );\r\n    Input.mouseDownListeners.push((x: number, y: number, button: number) =>\r\n      this.handleMouseDown(x, y, button),\r\n    );\r\n    Input.numKeyListener = (num) =>\r\n      this.handleInput(InputEnum.NUMBER_1 + num - 1);\r\n    Input.equalsListener = () => this.handleInput(InputEnum.EQUALS);\r\n    Input.minusListener = () => this.handleInput(InputEnum.MINUS);\r\n    Input.escapeListener = () => this.handleInput(InputEnum.ESCAPE);\r\n    Input.fListener = () => this.handleInput(InputEnum.F);\r\n  }\r\n\r\n  handleInput(input: InputEnum) {\r\n    if (this.player.busyAnimating || this.player.game.cameraAnimation.active)\r\n      return;\r\n\r\n    // Block input during level transitions, except for mouse movement\r\n    if (\r\n      (this.player.game.levelState === LevelState.TRANSITIONING ||\r\n        this.player.game.levelState === LevelState.TRANSITIONING_LADDER) &&\r\n      input !== InputEnum.MOUSE_MOVE\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.player.menu.open) {\r\n      this.player.menu.inputHandler(input);\r\n      return;\r\n    }\r\n\r\n    if (!this.player.game.started && input !== InputEnum.MOUSE_MOVE) {\r\n      // If start screen menu is active, do not auto-start; let the menu handle clicks\r\n      if ((this.player.game as any).startMenuActive) {\r\n        return;\r\n      }\r\n      this.player.game.startedFadeOut = true;\r\n      return;\r\n    }\r\n\r\n    switch (input) {\r\n      case InputEnum.I: {\r\n        const inv = this.player.inventory;\r\n        this.player.actionProcessor.process({\r\n          type: inv.isOpen ? \"CloseInventory\" : \"OpenInventory\",\r\n        });\r\n        break;\r\n      }\r\n      case InputEnum.Q:\r\n        this.player.actionProcessor.process({ type: \"InventoryDrop\" });\r\n        break;\r\n      case InputEnum.F:\r\n        //this.player.game.newGame();\r\n        //this.player.stall();\r\n        break;\r\n      case InputEnum.LEFT:\r\n        if (this.player.dead) {\r\n          this.navigateDeathScreen(-1);\r\n          break;\r\n        }\r\n        if (!this.ignoreDirectionInput())\r\n          this.player.actionProcessor.process({\r\n            type: \"Move\",\r\n            direction: Direction.LEFT,\r\n            targetX: this.player.x - 1,\r\n            targetY: this.player.y,\r\n          });\r\n        break;\r\n\r\n      case InputEnum.RIGHT:\r\n        if (this.player.dead) {\r\n          this.navigateDeathScreen(1);\r\n          break;\r\n        }\r\n        if (!this.ignoreDirectionInput())\r\n          this.player.actionProcessor.process({\r\n            type: \"Move\",\r\n            direction: Direction.RIGHT,\r\n            targetX: this.player.x + 1,\r\n            targetY: this.player.y,\r\n          });\r\n        break;\r\n\r\n      case InputEnum.UP:\r\n        if (this.player.dead) {\r\n          this.navigateDeathScreen(-1);\r\n          break;\r\n        }\r\n        if (!this.ignoreDirectionInput())\r\n          this.player.actionProcessor.process({\r\n            type: \"Move\",\r\n            direction: Direction.UP,\r\n            targetX: this.player.x,\r\n            targetY: this.player.y - 1,\r\n          });\r\n        break;\r\n\r\n      case InputEnum.DOWN:\r\n        if (this.player.dead) {\r\n          this.navigateDeathScreen(1);\r\n          break;\r\n        }\r\n        if (!this.ignoreDirectionInput())\r\n          this.player.actionProcessor.process({\r\n            type: \"Move\",\r\n            direction: Direction.DOWN,\r\n            targetX: this.player.x,\r\n            targetY: this.player.y + 1,\r\n          });\r\n        break;\r\n      case InputEnum.SPACE:\r\n        const player = this.player;\r\n        this.setMostRecentInput(\"keyboard\");\r\n\r\n        if (player.game.chatOpen) return;\r\n\r\n        if (player.dead) {\r\n          player.restart();\r\n          return;\r\n        }\r\n\r\n        if (\r\n          this.player.openVendingMachine &&\r\n          this.player.openVendingMachine.open\r\n        ) {\r\n          this.player.openVendingMachine.space();\r\n          break;\r\n        }\r\n\r\n        if (\r\n          player.inventory.isOpen ||\r\n          player.game.levelState === LevelState.IN_LEVEL\r\n        ) {\r\n          this.setMostRecentInput(\"keyboard\");\r\n          this.player.actionProcessor.process({ type: \"InventoryUse\" });\r\n        }\r\n        break;\r\n      case InputEnum.COMMA:\r\n        this.setMostRecentInput(\"keyboard\");\r\n        this.player.actionProcessor.process({ type: \"InventoryLeft\" });\r\n        break;\r\n      case InputEnum.PERIOD:\r\n        this.setMostRecentInput(\"keyboard\");\r\n        this.player.actionProcessor.process({ type: \"InventoryRight\" });\r\n        break;\r\n      case InputEnum.LEFT_CLICK:\r\n        this.handleMouseLeftClick();\r\n        break;\r\n      case InputEnum.RIGHT_CLICK:\r\n        this.handleMouseRightClick();\r\n        break;\r\n      case InputEnum.MOUSE_MOVE:\r\n        //when mouse moves\r\n        this.setMostRecentInput(\"mouse\");\r\n        this.player.inventory.mouseMove();\r\n\r\n        // Check if mouse hold should be cancelled\r\n        if (Input.mouseDown && Input.mouseDownHandled) {\r\n          let shouldCancelHold = false;\r\n\r\n          // Check distance from initial position\r\n          const dx = Input.mouseX - Input.lastMouseDownX;\r\n          const dy = Input.mouseY - Input.lastMouseDownY;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          const maxHoldDistance = GameConstants.TILESIZE * 1.5; // 1.5 tiles\r\n\r\n          if (distance > maxHoldDistance) {\r\n            shouldCancelHold = true;\r\n          }\r\n\r\n          // Check if player direction changed from initial\r\n          if (\r\n            this.mouseHoldInitialDirection !== null &&\r\n            this.player.direction !== this.mouseHoldInitialDirection\r\n          ) {\r\n            shouldCancelHold = true;\r\n          }\r\n\r\n          if (shouldCancelHold) {\r\n            Input.mouseDownHandled = false;\r\n            Input.lastMouseDownTime = 0;\r\n            this.mouseHoldInitialDirection = null;\r\n          }\r\n        }\r\n\r\n        if (!this.ignoreDirectionInput() || GameConstants.isMobile) {\r\n          this.faceMouse();\r\n          this.player.setTileCursorPosition();\r\n        }\r\n        break;\r\n      case InputEnum.NUMBER_1:\r\n      case InputEnum.NUMBER_2:\r\n      case InputEnum.NUMBER_3:\r\n      case InputEnum.NUMBER_4:\r\n      case InputEnum.NUMBER_5:\r\n      case InputEnum.NUMBER_6:\r\n      case InputEnum.NUMBER_7:\r\n      case InputEnum.NUMBER_8:\r\n      case InputEnum.NUMBER_9:\r\n        this.setMostRecentInput(\"keyboard\");\r\n        this.handleNumKey(input - 13);\r\n        break;\r\n      case InputEnum.EQUALS:\r\n        this.player.game.increaseScale();\r\n        break;\r\n      case InputEnum.MINUS:\r\n        this.player.game.decreaseScale();\r\n        break;\r\n      case InputEnum.ESCAPE:\r\n        this.player.inventory.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleNumKey = (num: number) => {\r\n    if (this.player.menu.open) return;\r\n    this.setMostRecentInput(\"keyboard\");\r\n    if (num <= 5) {\r\n      this.player.actionProcessor.process({\r\n        type: \"InventorySelect\",\r\n        index: num - 1,\r\n      });\r\n    } else {\r\n      if (GameConstants.DEVELOPER_MODE) {\r\n        switch (num) {\r\n          case 6:\r\n            GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(true);\r\n            break;\r\n          case 7:\r\n            GameConstants.SET_SHADE_LAYER_COMPOSITE_OPERATION(false);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseRightClick() {\r\n    this.setMostRecentInput(\"mouse\");\r\n    const { x, y } = MouseCursor.getInstance().getPosition();\r\n    const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\r\n\r\n    if (bounds.inBounds) {\r\n      this.player.inventory.drop();\r\n    }\r\n  }\r\n\r\n  handleMouseDown(x: number, y: number, button: number) {\r\n    if (button !== 0) return; // Only handle left mouse button\r\n\r\n    const player = this.player;\r\n\r\n    if (player.game.levelState !== LevelState.IN_LEVEL) {\r\n      // Route clicks to start menu if active\r\n      if (\r\n        !(player.game as any).started &&\r\n        (player.game as any).startMenuActive\r\n      ) {\r\n        (player.game as any).startMenu?.mouseInputHandler(x, y);\r\n        Input.mouseDownHandled = true;\r\n        return;\r\n      }\r\n      Input.mouseDownHandled = false;\r\n      return;\r\n    }\r\n\r\n    this.setMostRecentInput(\"mouse\");\r\n\r\n    if (player.dead) {\r\n      this.handleDeathScreenInput(x, y);\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Handle game not started\r\n    if (!player.game.started) {\r\n      if ((player.game as any).startMenuActive) {\r\n        (player.game as any).startMenu?.mouseInputHandler(x, y);\r\n      } else {\r\n        player.game.startedFadeOut = true;\r\n      }\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Store mouse down info for repeat\r\n    Input.lastMouseDownTime = Date.now();\r\n    Input.lastMouseDownX = x;\r\n    Input.lastMouseDownY = y;\r\n\r\n    const inventory = player.inventory;\r\n\r\n    // Handle inventory toggle when clicking outside or on inventory button\r\n    const clickedOutsideInventory =\r\n      (inventory.isOpen &&\r\n        !inventory.isPointInInventoryBounds(x, y).inBounds) ||\r\n      inventory.isPointInInventoryButton(x, y);\r\n\r\n    if (clickedOutsideInventory) {\r\n      inventory.toggleOpen();\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Handle menu\r\n    if (this.player.menu.open) {\r\n      this.player.menu.mouseInputHandler(x, y);\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Check if click is on menu button\r\n    if (this.isPointInMenuButtonBounds(x, y)) {\r\n      this.handleMenuButtonClick();\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Handle vending machine\r\n    if (player.openVendingMachine) {\r\n      if (\r\n        VendingMachine.isPointInVendingMachineBounds(\r\n          x,\r\n          y,\r\n          player.openVendingMachine,\r\n        )\r\n      ) {\r\n        player.openVendingMachine.space();\r\n      } else {\r\n        player.openVendingMachine.close();\r\n      }\r\n      Input.mouseDownHandled = true;\r\n      return;\r\n    }\r\n\r\n    // Check if this is a UI interaction\r\n    const isUIInteraction =\r\n      inventory.isPointInInventoryButton(x, y) ||\r\n      inventory.isPointInQuickbarBounds(x, y).inBounds ||\r\n      inventory.isOpen ||\r\n      this.isPointInMenuButtonBounds(x, y);\r\n\r\n    if (!isUIInteraction) {\r\n      // Handle movement\r\n      if (!player.busyAnimating && !player.game.cameraAnimation.active) {\r\n        // Store the initial direction when starting mouse hold for movement\r\n        this.mouseHoldInitialDirection = this.player.direction;\r\n        player.moveWithMouse();\r\n        Input.mouseDownHandled = true;\r\n      } else {\r\n        Input.mouseDownHandled = false;\r\n      }\r\n    } else {\r\n      Input.mouseDownHandled = false;\r\n    }\r\n  }\r\n\r\n  handleMouseLeftClick() {\r\n    const player = this.player;\r\n    const cursor = MouseCursor.getInstance();\r\n    const { x, y } = cursor.getPosition();\r\n\r\n    if (player.game.levelState !== LevelState.IN_LEVEL) {\r\n      if (\r\n        !(player.game as any).started &&\r\n        (player.game as any).startMenuActive\r\n      ) {\r\n        (player.game as any).startMenu?.mouseInputHandler(x, y);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.setMostRecentInput(\"mouse\");\r\n\r\n    if (player.dead) {\r\n      this.handleDeathScreenInput(x, y);\r\n      return;\r\n    }\r\n\r\n    const inventory = player.inventory;\r\n\r\n    const clickedOutsideInventory =\r\n      (inventory.isOpen &&\r\n        !inventory.isPointInInventoryBounds(x, y).inBounds) ||\r\n      inventory.isPointInInventoryButton(x, y);\r\n\r\n    if (clickedOutsideInventory) {\r\n      inventory.toggleOpen();\r\n    }\r\n\r\n    if (this.player.menu.open) {\r\n      this.player.menu.mouseInputHandler(x, y);\r\n      return;\r\n    } else {\r\n    }\r\n\r\n    // Check if click is on menu button\r\n    if (this.isPointInMenuButtonBounds(x, y)) {\r\n      this.handleMenuButtonClick();\r\n      return;\r\n    }\r\n\r\n    if (player.openVendingMachine) {\r\n      if (\r\n        VendingMachine.isPointInVendingMachineBounds(\r\n          x,\r\n          y,\r\n          player.openVendingMachine,\r\n        )\r\n      ) {\r\n        player.openVendingMachine.space();\r\n      } else {\r\n        player.openVendingMachine.close();\r\n        this.setMostRecentInput(\"mouse\");\r\n        const { x, y } = MouseCursor.getInstance().getPosition();\r\n        const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const notInInventoryUI =\r\n      !inventory.isPointInInventoryButton(x, y) &&\r\n      !inventory.isPointInQuickbarBounds(x, y).inBounds &&\r\n      !inventory.isOpen;\r\n\r\n    // Only handle movement if it wasn't already handled on mousedown\r\n    if (notInInventoryUI && !Input.mouseDownHandled) {\r\n      player.moveWithMouse();\r\n    }\r\n  }\r\n\r\n  ignoreDirectionInput = (): boolean => {\r\n    return (\r\n      this.player.inventory.isOpen ||\r\n      this.player.dead ||\r\n      this.player.game.levelState !== LevelState.IN_LEVEL ||\r\n      this.player.menu.open ||\r\n      (this.player.inventory.isPointInQuickbarBounds(Input.mouseX, Input.mouseY)\r\n        .inBounds &&\r\n        this.player.game.isMobile)\r\n    );\r\n  };\r\n\r\n  handleTap() {\r\n    // If the interaction was already handled by mouseDown, don't process it again\r\n    if (Input.mouseDownHandled) {\r\n      return;\r\n    }\r\n\r\n    if (this.player.dead) {\r\n      this.handleDeathScreenInput(Input.mouseX, Input.mouseY);\r\n      return;\r\n    } else if (!this.player.game.started) {\r\n      if ((this.player.game as any).startMenuActive) {\r\n        (this.player.game as any).startMenu?.mouseInputHandler(\r\n          Input.mouseX,\r\n          Input.mouseY,\r\n        );\r\n      } else {\r\n        this.player.game.startedFadeOut = true;\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.player.menu.open) {\r\n      this.player.menu.mouseInputHandler(Input.mouseX, Input.mouseY);\r\n      return;\r\n    }\r\n\r\n    const x = Input.mouseX;\r\n    const y = Input.mouseY;\r\n\r\n    // Check if tap is on menu button\r\n    if (this.isPointInMenuButtonBounds(x, y)) {\r\n      this.handleMenuButtonClick();\r\n      return;\r\n    }\r\n\r\n    const isInInventory = this.player.inventory.isPointInInventoryBounds(\r\n      x,\r\n      y,\r\n    ).inBounds;\r\n    const isInQuickbar = this.player.inventory.isPointInQuickbarBounds(\r\n      x,\r\n      y,\r\n    ).inBounds;\r\n\r\n    if (this.player.openVendingMachine && this.player.openVendingMachine.open) {\r\n      const isInVMUI = VendingMachine.isPointInVendingMachineBounds(\r\n        Input.mouseX,\r\n        Input.mouseY,\r\n        this.player.openVendingMachine,\r\n      );\r\n      if (isInVMUI) {\r\n        this.player.openVendingMachine.space();\r\n        return;\r\n      } else if (!isInVMUI) {\r\n        this.player.openVendingMachine.close();\r\n        this.setMostRecentInput(\"mouse\");\r\n        const { x, y } = MouseCursor.getInstance().getPosition();\r\n        const bounds = this.player.inventory.isPointInInventoryBounds(x, y);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.player.inventory.isOpen &&\r\n      this.player.inventory.isPointInInventoryButton(x, y)\r\n    ) {\r\n      this.player.inventory.open();\r\n    } else if (this.player.inventory.isOpen) {\r\n      if (isInInventory) {\r\n        this.handleInput(InputEnum.LEFT_CLICK);\r\n      } else {\r\n        this.player.inventory.close();\r\n      }\r\n    } else if (isInQuickbar) {\r\n      this.handleInput(InputEnum.LEFT_CLICK);\r\n    }\r\n  }\r\n\r\n  handleKeyboardKey(key: string) {\r\n    switch (key.toUpperCase()) {\r\n      case \"A\":\r\n      case \"ARROWLEFT\":\r\n        this.handleInput(InputEnum.LEFT);\r\n        break;\r\n      case \"D\":\r\n      case \"ARROWRIGHT\":\r\n        this.handleInput(InputEnum.RIGHT);\r\n        break;\r\n      case \"W\":\r\n      case \"ARROWUP\":\r\n        this.handleInput(InputEnum.UP);\r\n        break;\r\n      case \"S\":\r\n      case \"ARROWDOWN\":\r\n        this.handleInput(InputEnum.DOWN);\r\n        break;\r\n      case \" \":\r\n        this.handleInput(InputEnum.SPACE);\r\n        break;\r\n      case \"I\":\r\n        this.handleInput(InputEnum.I);\r\n        break;\r\n      case \"Q\":\r\n        this.handleInput(InputEnum.Q);\r\n        break;\r\n      // Possibly add number keys for inventory here too\r\n      default:\r\n        // Unknown key; ignore or log if needed\r\n        break;\r\n    }\r\n  }\r\n\r\n  setMostRecentInput = (input: string) => {\r\n    this.mostRecentInput = input;\r\n  };\r\n  setMostRecentMoveInput = (input: string) => {\r\n    this.mostRecentMoveInput = input;\r\n  };\r\n\r\n  mouseAngle = () => {\r\n    const mousePosition = MouseCursor.getInstance().getPosition();\r\n    const playerPixelPosition = {\r\n      x: GameConstants.WIDTH / 2,\r\n      y: GameConstants.HEIGHT / 2,\r\n    };\r\n    const dx = mousePosition.x - playerPixelPosition.x;\r\n    const dy = mousePosition.y - playerPixelPosition.y;\r\n    return Math.atan2(dy, dx);\r\n  };\r\n\r\n  faceMouse = () => {\r\n    if (\r\n      !GameConstants.MOVE_WITH_MOUSE ||\r\n      this.mostRecentMoveInput === \"keyboard\" ||\r\n      GameConstants.isMobile\r\n    )\r\n      return;\r\n    const angle = this.mouseAngle();\r\n\r\n    // Convert angle to direction\r\n    // atan2 returns angle in radians (-π to π)\r\n    // Divide the circle into 4 sectors for the 4 directions\r\n\r\n    if (angle >= -Math.PI / 4 && angle < Math.PI / 4) {\r\n      this.player.direction = Direction.RIGHT;\r\n    } else if (angle >= Math.PI / 4 && angle < (3 * Math.PI) / 4) {\r\n      this.player.direction = Direction.DOWN;\r\n    } else if (angle >= (-3 * Math.PI) / 4 && angle < -Math.PI / 4) {\r\n      this.player.direction = Direction.UP;\r\n    } else {\r\n      this.player.direction = Direction.LEFT;\r\n    }\r\n  };\r\n\r\n  // Dummy methods for mute button functionality\r\n  isPointInMuteButtonBounds(x: number, y: number): boolean {\r\n    const tile = GameConstants.TILESIZE;\r\n    //mute button is at the top left of the screen right below the fps counter and is 1 tile wide and tall\r\n    return x >= 0 && x <= tile && y >= 0 && y <= tile * 1.5;\r\n  }\r\n\r\n  handleMuteButtonClick() {\r\n    MuteButton.toggleMute();\r\n    this.player.game.pushMessage(\r\n      Sound.audioMuted ? \"Audio muted\" : \"Audio unmuted\",\r\n    );\r\n  }\r\n\r\n  isPointInMenuButtonBounds(x: number, y: number): boolean {\r\n    const tile = GameConstants.TILESIZE;\r\n    //menu button is at the top left of the screen right below the fps counter and is 1 tile wide and tall\r\n    return x >= 0 && x <= tile * 1.5 && y >= 0 && y <= tile;\r\n  }\r\n\r\n  handleMenuButtonClick() {\r\n    this.player.menu.toggleOpen();\r\n  }\r\n\r\n  private handleDeathScreenInput(x: number, y: number) {\r\n    if (this.isInteractingWithFeedbackButton(x, y)) {\r\n      this.player.game.feedbackButton.onClick();\r\n    } else {\r\n      this.player.restart();\r\n    }\r\n  }\r\n\r\n  private isInteractingWithFeedbackButton(x: number, y: number): boolean {\r\n    return (\r\n      this.player.game.feedbackButton &&\r\n      this.player.game.feedbackButton.isPointInButton(x, y)\r\n    );\r\n  }\r\n\r\n  private navigateDeathScreen(delta: number) {\r\n    this.setMostRecentInput(\"keyboard\");\r\n    const totalPages = Math.max(1, this.player.deathScreenPageCount || 1);\r\n    if (totalPages <= 1) return;\r\n    const current = this.player.deathScreenPageIndex || 0;\r\n    let next = (current + delta) % totalPages;\r\n    if (next < 0) next += totalPages;\r\n    this.player.deathScreenPageIndex = next;\r\n  }\r\n}\r\n","import type { Player } from \"./player\";\r\nimport { Direction } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { TurnState } from \"../room/room\";\r\n\r\nexport class PlayerMovement {\r\n  private player: Player;\r\n  private moveQueue: { x: number; y: number; direction: Direction }[] = [];\r\n  private isProcessingQueue: boolean = false;\r\n  private animationFrameId: number | null = null;\r\n  private moveRange: number = 1;\r\n  lastMoveTime: number = 0;\r\n  lastChangeDirectionTime: number = 0;\r\n  adjustedCooldown: number = 0;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n  }\r\n\r\n  move(direction: Direction, targetX?: number, targetY?: number): void {\r\n    if (!(direction in Direction) || !this.player) return;\r\n\r\n    const coords = this.getTargetCoords(direction, targetX, targetY);\r\n    if (!coords) return;\r\n    const { x, y } = coords;\r\n\r\n    if (this.canMove()) {\r\n      const now = Date.now();\r\n      this.lastMoveTime = now;\r\n      this.lastChangeDirectionTime = now;\r\n      this.player.inputHandler.setMostRecentMoveInput(\"keyboard\");\r\n      this.player.lastDirection = this.player.direction;\r\n      this.player.direction = direction;\r\n      this.player.tryMove(x, y);\r\n    } else {\r\n      this.queueMove(x, y, direction);\r\n    }\r\n  }\r\n\r\n  moveMouse(direction: Direction, targetX?: number, targetY?: number): void {\r\n    if (!(direction in Direction) || !this.player || GameConstants.isMobile)\r\n      return;\r\n\r\n    const coords = this.getTargetCoords(direction, targetX, targetY);\r\n    if (!coords) return;\r\n    const { x, y } = coords;\r\n    if (x === undefined || y === undefined) return;\r\n    if (this.canMove()) {\r\n      const now = Date.now();\r\n      this.lastMoveTime = now;\r\n      this.player.inputHandler.setMostRecentMoveInput(\"mouse\");\r\n      this.player.direction = direction;\r\n      this.player.tryMove(x, y);\r\n    } else {\r\n      this.queueMove(x, y, direction);\r\n    }\r\n  }\r\n  //unused\r\n  moveRangeCheck = (x: number, y: number) => {\r\n    const dx = Math.abs(this.player.x - x);\r\n    const dy = Math.abs(this.player.y - y);\r\n    return (\r\n      dx <= this.moveRange &&\r\n      dy <= this.moveRange &&\r\n      (dx === 0 || dy === 0) &&\r\n      dx + dy !== 0\r\n    );\r\n  };\r\n\r\n  private getTargetCoords(\r\n    direction: Direction,\r\n    x?: number,\r\n    y?: number,\r\n  ): { x: number; y: number } | null {\r\n    if (x !== undefined && y !== undefined && x !== null && y !== null) {\r\n      return { x, y };\r\n    }\r\n\r\n    switch (direction) {\r\n      case Direction.LEFT:\r\n        return { x: this.player.x - 1, y: this.player.y };\r\n      case Direction.RIGHT:\r\n        return { x: this.player.x + 1, y: this.player.y };\r\n      case Direction.UP:\r\n        return { x: this.player.x, y: this.player.y - 1 };\r\n      case Direction.DOWN:\r\n        return { x: this.player.x, y: this.player.y + 1 };\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  inventoryClosedRecently(): boolean {\r\n    const timeSinceDragEnd = Date.now() - this.player.inventory.dragEndTime;\r\n    const timeSinceClose = Date.now() - this.player.inventory.closeTime;\r\n    return timeSinceDragEnd < 10 || timeSinceClose < 10;\r\n  }\r\n\r\n  canMove(): boolean {\r\n    if (this.player.busyAnimating) return false;\r\n    if (this.inventoryClosedRecently()) return false;\r\n\r\n    // Only block movement during computer turn if slow inputs setting is enabled\r\n    if (\r\n      GameConstants.SLOW_INPUTS_NEAR_ENEMIES &&\r\n      this.player.game.room.turn === TurnState.computerTurn &&\r\n      this.player.game.room.hasEnemyInRadius(this.player.x, this.player.y)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const now = Date.now();\r\n    let cooldown = GameConstants.MOVEMENT_COOLDOWN;\r\n\r\n    // Apply slower cooldown when enemies are nearby and setting is enabled\r\n    if (\r\n      GameConstants.SLOW_INPUTS_NEAR_ENEMIES &&\r\n      this.player.game.room.hasEnemyInRadius(this.player.x, this.player.y)\r\n    ) {\r\n      cooldown *= 2; // Double the cooldown when enemies are nearby\r\n    }\r\n\r\n    if (now - this.lastMoveTime >= cooldown) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  canQueue(): boolean {\r\n    if (this.player.busyAnimating) return false;\r\n    if (this.inventoryClosedRecently()) return false;\r\n    const now = Date.now();\r\n    let cooldown = GameConstants.MOVEMENT_QUEUE_COOLDOWN;\r\n\r\n    // Apply slower queue cooldown when enemies are nearby and setting is enabled\r\n    if (\r\n      GameConstants.SLOW_INPUTS_NEAR_ENEMIES &&\r\n      this.player.game.room.hasEnemyInRadius(this.player.x, this.player.y)\r\n    ) {\r\n      cooldown *= 2; // Double the queue cooldown when enemies are nearby\r\n    }\r\n\r\n    if (now - this.lastMoveTime >= cooldown) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  queueMove(x: number, y: number, direction: Direction) {\r\n    if (!this.canQueue()) return;\r\n    if (x === undefined || y === undefined || this.moveQueue.length > 0) return;\r\n\r\n    this.moveQueue.push({ x, y, direction });\r\n    this.startQueueProcessing();\r\n  }\r\n\r\n  private handleMoveLoop({\r\n    x,\r\n    y,\r\n    direction,\r\n  }: {\r\n    x: number;\r\n    y: number;\r\n    direction: Direction;\r\n  }) {\r\n    if (this.player.inputHandler.mostRecentMoveInput === \"mouse\") {\r\n      this.moveMouse(direction, x, y);\r\n    } else {\r\n      this.move(direction, x, y);\r\n    }\r\n  }\r\n\r\n  private startQueueProcessing() {\r\n    if (!this.isProcessingQueue) {\r\n      this.isProcessingQueue = true;\r\n      this.animationFrameId = requestAnimationFrame(() => this.queueHandler());\r\n    }\r\n  }\r\n  private stopQueueProcessing() {\r\n    this.isProcessingQueue = false;\r\n    if (this.animationFrameId !== null) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n  }\r\n\r\n  private queueHandler = () => {\r\n    if (!this.isProcessingQueue) return;\r\n\r\n    const now = Date.now();\r\n\r\n    const cooldown = GameConstants.MOVEMENT_COOLDOWN;\r\n\r\n    if (now - this.lastMoveTime >= cooldown) {\r\n      if (this.moveQueue.length > 0) {\r\n        const nextMove = this.moveQueue.shift();\r\n\r\n        this.handleMoveLoop(nextMove);\r\n        this.lastMoveTime = now;\r\n      } else {\r\n        this.stopQueueProcessing();\r\n      }\r\n    }\r\n\r\n    this.animationFrameId = requestAnimationFrame(this.queueHandler);\r\n  };\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { MouseCursor } from \"../gui/mouseCursor\";\r\nimport { PostProcessor } from \"../gui/postProcess\";\r\nimport { statsTracker } from \"../game/stats\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { Spellbook } from \"../item/weapon/spellbook\";\r\nimport { Player } from \"./player\";\r\nimport { HoverText } from \"../gui/hoverText\";\r\nimport { Shadow } from \"../drawable/shadow\";\r\nimport { safeRecordGameStats } from \"../api\";\r\nimport { getDeviceInfo } from \"../utility/deviceDetector\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\n\r\nexport class PlayerRenderer {\r\n  private player: Player;\r\n  private flashingFrame: number;\r\n  private guiHeartFrame: number;\r\n  private hurtAlpha: number;\r\n  private jumpY: number;\r\n  private motionSpeed: number;\r\n  slowMotionEnabled: boolean;\r\n  private jumpHeight: number;\r\n  private hurting: boolean;\r\n  private hurtingShield: boolean;\r\n  drawX: number;\r\n  drawY: number;\r\n  hitX: number;\r\n  hitY: number;\r\n  private frame: number;\r\n  private slowMotionTickDuration: number;\r\n  private lowHealthFrame: number;\r\n  private flashing: boolean;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n    this.jumpY = 0;\r\n    this.flashingFrame = 0;\r\n    this.guiHeartFrame = 0;\r\n    this.motionSpeed = 1;\r\n    this.hitX = 0;\r\n    this.hitY = 0;\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.hurtAlpha = 0.25;\r\n    this.jumpHeight = 0.25;\r\n    this.hurting = false;\r\n    this.hurtingShield = false;\r\n    this.slowMotionEnabled = false;\r\n    this.slowMotionTickDuration = 0;\r\n    this.flashing = false;\r\n    this.lowHealthFrame = 0;\r\n    this.frame = 0;\r\n  }\r\n\r\n  hurt = () => {\r\n    this.hurting = true;\r\n    this.hurtAlpha = 0.25;\r\n  };\r\n  hurtShield = () => {\r\n    this.hurtingShield = true;\r\n  };\r\n\r\n  flash = () => {\r\n    this.flashing = true;\r\n  };\r\n\r\n  disableFlash = () => {\r\n    this.flashing = false;\r\n  };\r\n\r\n  beginSlowMotion = () => {\r\n    this.slowMotionEnabled = true;\r\n  };\r\n\r\n  endSlowMotion = () => {\r\n    this.slowMotionEnabled = false;\r\n  };\r\n\r\n  setNewDrawXY = (x: number, y: number) => {\r\n    this.drawX += x - this.player.x;\r\n    this.drawY += y - this.player.y;\r\n  };\r\n\r\n  enableSlowMotion = () => {\r\n    if (this.motionSpeed < 1 && !this.slowMotionEnabled) {\r\n      this.motionSpeed *= 1.08;\r\n      if (this.motionSpeed >= 1) this.motionSpeed = 1;\r\n    }\r\n    if (this.slowMotionEnabled && this.motionSpeed > 0.25) {\r\n      this.motionSpeed *= 0.95;\r\n      if (this.motionSpeed < 0.25) this.motionSpeed = 0.25;\r\n    }\r\n  };\r\n\r\n  updateSlowMotion = () => {\r\n    if (this.slowMotionTickDuration > 0) this.slowMotionTickDuration -= 1;\r\n    if (this.slowMotionTickDuration === 0) this.slowMotionEnabled = false;\r\n  };\r\n\r\n  /**\r\n   * Draws the player sprite to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawPlayerSprite = (delta: number) => {\r\n    const player = this.player;\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    if (this.drawSmear()) {\r\n      Game.drawMob(\r\n        this.setSmearFrame().x,\r\n        this.setSmearFrame().y,\r\n        1,\r\n        2,\r\n        player.x - this.drawX - this.hitX,\r\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\r\n        1,\r\n        2,\r\n        this.shadeColor(),\r\n      );\r\n    } else if (\r\n      this.player.inputHandler.mostRecentMoveInput === \"mouse\" &&\r\n      this.mouseDiagonal() &&\r\n      !GameConstants.isMobile\r\n    ) {\r\n      const angle = (this.player.inputHandler.mouseAngle() * 180) / Math.PI;\r\n      let diagonalTile = { x: 1, y: 18 };\r\n      if (angle > -150 && angle <= -120) diagonalTile = { x: 3, y: 18 };\r\n      if (angle > -60 && angle <= -30) diagonalTile = { x: 4, y: 18 };\r\n      if (angle > 30 && angle <= 60) diagonalTile = { x: 2, y: 18 };\r\n      if (angle > 120 && angle <= 150) diagonalTile = { x: 1, y: 18 };\r\n\r\n      Game.drawMob(\r\n        diagonalTile.x,\r\n        diagonalTile.y,\r\n        1,\r\n        2,\r\n        player.x - this.drawX - this.hitX,\r\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\r\n        1,\r\n        2,\r\n        this.shadeColor(),\r\n      );\r\n    } else {\r\n      this.frame += 0.1 * delta;\r\n      if (this.frame >= 4) this.frame = 0;\r\n      Game.drawMob(\r\n        1 + Math.floor(this.frame),\r\n        8 + player.direction * 2,\r\n        1,\r\n        2,\r\n        player.x - this.drawX - this.hitX,\r\n        player.y - 1.45 - this.drawY - this.jumpY - this.hitY,\r\n        1,\r\n        2,\r\n        this.shadeColor(),\r\n      );\r\n    }\r\n    if (player.inventory.getArmor() && player.inventory.getArmor().health > 0) {\r\n      // TODO draw armor\r\n    }\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  mouseDiagonal = () => {\r\n    const angle = (this.player.inputHandler.mouseAngle() * 180) / Math.PI;\r\n    if (angle > 30 && angle < 60) return true;\r\n    if (angle > 120 && angle < 150) return true;\r\n    if (angle > -150 && angle < -120) return true;\r\n    if (angle > -60 && angle < -30) return true;\r\n    return false;\r\n  };\r\n\r\n  drawSmear = () => {\r\n    if (this.player.direction === this.player.lastDirection) return false;\r\n    let t = 100;\r\n    const lastDir = this.player.lastDirection;\r\n    const dir = this.player.direction;\r\n    if (\r\n      (dir === Direction.UP && lastDir === Direction.DOWN) ||\r\n      (dir === Direction.DOWN && lastDir === Direction.UP) ||\r\n      (dir === Direction.LEFT && lastDir === Direction.RIGHT) ||\r\n      (dir === Direction.RIGHT && lastDir === Direction.LEFT)\r\n    )\r\n      t = 150;\r\n    const timeSince = Date.now() - this.player.movement.lastChangeDirectionTime;\r\n    if (timeSince <= t) return true;\r\n    else return false;\r\n  };\r\n\r\n  setSmearFrame = () => {\r\n    let tile = { x: 1, y: 18 };\r\n    const timeSince = Date.now() - this.player.movement.lastChangeDirectionTime;\r\n    const t = 50;\r\n\r\n    if (\r\n      (this.player.direction === Direction.UP &&\r\n        this.player.lastDirection === Direction.LEFT) ||\r\n      (this.player.direction === Direction.LEFT &&\r\n        this.player.lastDirection === Direction.UP)\r\n    ) {\r\n      tile.x = 3;\r\n      return tile;\r\n    }\r\n    if (\r\n      (this.player.direction === Direction.UP &&\r\n        this.player.lastDirection === Direction.RIGHT) ||\r\n      (this.player.direction === Direction.RIGHT &&\r\n        this.player.lastDirection === Direction.UP)\r\n    ) {\r\n      tile.x = 4;\r\n      return tile;\r\n    }\r\n    if (\r\n      (this.player.direction === Direction.DOWN &&\r\n        this.player.lastDirection === Direction.RIGHT) ||\r\n      (this.player.direction === Direction.RIGHT &&\r\n        this.player.lastDirection === Direction.DOWN)\r\n    ) {\r\n      tile.x = 2;\r\n      return tile;\r\n    }\r\n    if (\r\n      (this.player.direction === Direction.DOWN &&\r\n        this.player.lastDirection === Direction.LEFT) ||\r\n      (this.player.direction === Direction.LEFT &&\r\n        this.player.lastDirection === Direction.DOWN)\r\n    ) {\r\n      tile.x = 1;\r\n      return tile;\r\n    }\r\n    if (\r\n      this.player.direction === Direction.DOWN &&\r\n      this.player.lastDirection === Direction.UP\r\n    ) {\r\n      if (timeSince < t) tile.x = 3;\r\n      if (timeSince >= t && timeSince < t * 2) {\r\n        tile.x = 1;\r\n        tile.y = 14;\r\n      }\r\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 1;\r\n      return tile;\r\n    }\r\n    if (\r\n      this.player.direction === Direction.LEFT &&\r\n      this.player.lastDirection === Direction.RIGHT\r\n    ) {\r\n      if (timeSince < t) tile.x = 2;\r\n      if (timeSince >= t && timeSince < t * 2) {\r\n        tile.x = 1;\r\n        tile.y = 8;\r\n      }\r\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 1;\r\n      return tile;\r\n    }\r\n    if (\r\n      this.player.direction === Direction.UP &&\r\n      this.player.lastDirection === Direction.DOWN\r\n    ) {\r\n      if (timeSince < t) tile.x = 2;\r\n      if (timeSince >= t && timeSince < t * 2) {\r\n        tile.x = 1;\r\n        tile.y = 12;\r\n      }\r\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 4;\r\n      return tile;\r\n    }\r\n    if (\r\n      this.player.direction === Direction.RIGHT &&\r\n      this.player.lastDirection === Direction.LEFT\r\n    ) {\r\n      if (timeSince < t) tile.x = 1;\r\n      if (timeSince >= t && timeSince < t * 2) {\r\n        tile.x = 1;\r\n        tile.y = 8;\r\n      }\r\n      if (timeSince >= t * 2 && timeSince < t * 3) tile.x = 2;\r\n      return tile;\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    const player = this.player;\r\n    Game.ctx.save();\r\n    this.updateDrawXY(delta);\r\n    player.drawableY = player.y;\r\n    this.flashingFrame += (delta * 12) / GameConstants.FPS;\r\n    if (!player.dead) {\r\n      Shadow.draw(player.x - this.drawX, player.y - this.drawY, 1, 1);\r\n      //this.drawTileCursor(delta);\r\n\r\n      if (!this.flashing || Math.floor(this.flashingFrame) % 2 === 0) {\r\n        this.drawPlayerSprite(delta);\r\n      }\r\n    }\r\n    this.drawSpellBeam(delta);\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawSpellBeam = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    if (this.player.inventory.getWeapon() instanceof Spellbook) {\r\n      const spellbook = this.player.inventory.getWeapon() as Spellbook;\r\n      spellbook.drawBeams(\r\n        this.player.x - this.drawX,\r\n        this.player.y - this.drawY,\r\n        delta,\r\n      );\r\n    }\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  shadeColor = () => {\r\n    const player = this.player;\r\n\r\n    if (!GameConstants.CUSTOM_SHADER_COLOR_ENABLED) {\r\n      return \"black\";\r\n    } else {\r\n      const room = (this.player as any).getRoom\r\n        ? (this.player as any).getRoom()\r\n        : this.player.game.levels[this.player.depth].rooms[this.player.levelID];\r\n      return Utils.rgbToHex(\r\n        room.col[player.x][player.y][0],\r\n        room.col[player.x][player.y][1],\r\n        room.col[player.x][player.y][2],\r\n      );\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    this.player.healthBar.draw(\r\n      delta,\r\n      this.player.health,\r\n      this.player.maxHealth,\r\n      this.player.x - this.drawX,\r\n      this.player.y - this.drawY,\r\n      !this.flashing || Math.floor(this.flashingFrame) % 2 === 0,\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  updateDrawXY = (delta: number) => {\r\n    if (!this.doneMoving()) {\r\n      this.drawX *= 0.85 ** delta;\r\n      this.drawY *= 0.85 ** delta;\r\n      this.drawX = Math.abs(this.drawX) < 0.01 ? 0 : this.drawX;\r\n      this.drawY = Math.abs(this.drawY) < 0.01 ? 0 : this.drawY;\r\n    }\r\n    if (this.doneHitting()) {\r\n      this.jump(delta);\r\n    }\r\n\r\n    if (!this.doneHitting()) {\r\n      this.updateHitXY(delta);\r\n    }\r\n\r\n    this.enableSlowMotion();\r\n    GameConstants.ANIMATION_SPEED = this.motionSpeed;\r\n  };\r\n\r\n  updateHitXY = (delta: number) => {\r\n    // Use exponential decay like updateDrawXY for stable behavior with variable frame rates\r\n    this.hitX *= 0.7 ** delta;\r\n    this.hitY *= 0.7 ** delta;\r\n\r\n    // Clamp values to prevent extreme behavior\r\n    this.hitX = Math.min(Math.max(this.hitX, -1), 1);\r\n    this.hitY = Math.min(Math.max(this.hitY, -1), 1);\r\n\r\n    // Snap to zero when values get very small\r\n    if (Math.abs(this.hitX) < 0.01) this.hitX = 0;\r\n    if (Math.abs(this.hitY) < 0.01) this.hitY = 0;\r\n  };\r\n\r\n  doneMoving = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.drawX) < EPSILON && Math.abs(this.drawY) < EPSILON;\r\n  };\r\n\r\n  doneHitting = (): boolean => {\r\n    let EPSILON = 0.01;\r\n    return Math.abs(this.hitX) < EPSILON && Math.abs(this.hitY) < EPSILON;\r\n  };\r\n\r\n  snapDrawStuff = () => {\r\n    this.drawX = 0;\r\n    this.drawY = 0;\r\n    this.hitX = 0;\r\n    this.hitY = 0;\r\n    this.jumpY = 0;\r\n  };\r\n\r\n  setHitXY = (x: number, y: number) => {\r\n    this.hitX = x;\r\n    this.hitY = y;\r\n  };\r\n\r\n  drawGUI = (delta: number, transitioning: boolean = false) => {\r\n    Game.ctx.save();\r\n    if (!this.player.dead) {\r\n      //if (this.player.menu.open) this.player.menu.draw();\r\n      if (this.player.bestiary) this.player.bestiary.draw(delta);\r\n\r\n      if (this.guiHeartFrame > 0) this.guiHeartFrame += delta;\r\n      if (this.guiHeartFrame > 5) {\r\n        this.guiHeartFrame = 0;\r\n      }\r\n\r\n      const armor = this.player.inventory.getArmor();\r\n\r\n      // Get the quickbar's left edge position\r\n      const quickbarStartX =\r\n        this.player.inventory.getQuickbarStartX() + (armor ? -34 : -24);\r\n      // Convert to tile coordinates\r\n      let heartStartX = quickbarStartX / GameConstants.TILESIZE;\r\n\r\n      // Ensure hearts don't go off the left edge of the screen\r\n      if (heartStartX < 0.25) {\r\n        heartStartX = 0.25;\r\n      }\r\n\r\n      for (let i = 0; i < this.player.maxHealth; i++) {\r\n        let shake = 0;\r\n        let shakeY = 0;\r\n        if (this.player.health <= 1) {\r\n          shake =\r\n            Math.round(Math.sin(Date.now() / 25 / (i + 1)) + i / 2) /\r\n            2 /\r\n            GameConstants.TILESIZE;\r\n          shakeY =\r\n            Math.round(Math.sin(Date.now() / 25 / (i + 2)) + i / 2) /\r\n            2 /\r\n            GameConstants.TILESIZE;\r\n        }\r\n        let frame = this.guiHeartFrame > 0 ? 1 : 0;\r\n        let offsetY = GameConstants.WIDTH > 175 ? 0 : -1.25;\r\n\r\n        if (i >= Math.floor(this.player.health)) {\r\n          if (\r\n            i == Math.floor(this.player.health) &&\r\n            (this.player.health * 2) % 2 == 1\r\n          ) {\r\n            // draw half heart\r\n            Game.drawFX(\r\n              4,\r\n              2,\r\n              0.75,\r\n              0.75,\r\n              heartStartX + i / 1.5 + shake,\r\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n                1 +\r\n                shakeY +\r\n                offsetY,\r\n              0.75,\r\n              0.75,\r\n            );\r\n          } else {\r\n            Game.drawFX(\r\n              3,\r\n              2,\r\n              0.75,\r\n              0.75,\r\n              heartStartX + i / 1.5 + shake,\r\n              GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n                1 +\r\n                shakeY +\r\n                offsetY,\r\n              0.75,\r\n              0.75,\r\n            );\r\n          }\r\n        } else {\r\n          Game.drawFX(\r\n            frame,\r\n            2,\r\n            0.75,\r\n            0.75,\r\n            heartStartX + i / 1.5 + shake,\r\n            GameConstants.HEIGHT / GameConstants.TILESIZE -\r\n              1 +\r\n              shakeY +\r\n              offsetY,\r\n            0.75,\r\n            0.75,\r\n          );\r\n        }\r\n      }\r\n      //this.drawCooldownBar();\r\n      if (armor) armor.drawGUI(delta, this.player.maxHealth, quickbarStartX);\r\n      if (!transitioning) this.player.inventory.draw(delta);\r\n      const inventoryOpen = this.player.inventory.isOpen;\r\n      const quickbarOpen =\r\n        this.player.inventory.isPointInQuickbarBounds(\r\n          MouseCursor.getInstance().getPosition().x,\r\n          MouseCursor.getInstance().getPosition().y,\r\n        ).inBounds && !this.player.inventory.isOpen;\r\n      const inVendingMachine =\r\n        this.player.openVendingMachine &&\r\n        VendingMachine.isPointInVendingMachineBounds(\r\n          MouseCursor.getInstance().getPosition().x,\r\n          MouseCursor.getInstance().getPosition().y,\r\n          this.player.openVendingMachine,\r\n        );\r\n      const inInventoryBounds = this.player.inventory.isPointInInventoryBounds(\r\n        MouseCursor.getInstance().getPosition().x,\r\n        MouseCursor.getInstance().getPosition().y,\r\n      ).inBounds;\r\n\r\n      const drawFor =\r\n        GameConstants.IN_GAME_HOVER_TEXT_ENABLED &&\r\n        !inventoryOpen &&\r\n        !quickbarOpen &&\r\n        !this.player.openVendingMachine\r\n          ? \"inGame\"\r\n          : GameConstants.INVENTORY_HOVER_TEXT_ENABLED &&\r\n              ((inventoryOpen && inInventoryBounds) || quickbarOpen)\r\n            ? \"inventory\"\r\n            : GameConstants.VENDING_MACHINE_HOVER_TEXT_ENABLED &&\r\n                inVendingMachine\r\n              ? \"vendingMachine\"\r\n              : \"none\";\r\n\r\n      if (GameConstants.HOVER_TEXT_ENABLED) {\r\n        HoverText.draw(\r\n          delta,\r\n          this.player.x,\r\n          this.player.y,\r\n          this.player.getRoom\r\n            ? this.player.getRoom()\r\n            : this.player.game.levels[this.player.depth].rooms[\r\n                this.player.levelID\r\n              ],\r\n          this.player,\r\n          MouseCursor.getInstance().getPosition().x,\r\n          MouseCursor.getInstance().getPosition().y,\r\n          drawFor,\r\n        );\r\n      }\r\n    } else {\r\n      Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n      const gameStats = statsTracker.getStats();\r\n      const enemies = gameStats.enemies;\r\n      // Count the occurrences of each enemy\r\n      const enemyCounts = enemies.reduce(\r\n        (acc, enemy) => {\r\n          acc[enemy] = (acc[enemy] || 0) + 1;\r\n          return acc;\r\n        },\r\n        {} as Record<string, number>,\r\n      );\r\n\r\n      // Create individual lines\r\n      const lines: string[] = [];\r\n\r\n      // Line 1: Game Over or slain by\r\n      if (this.player.lastHitBy !== \"enemy\") {\r\n        lines.push(`You were slain by ${this.player.lastHitBy}.`);\r\n      } else {\r\n        lines.push(\"Game Over\");\r\n      }\r\n\r\n      const diedInRoom = (this.player as any).getRoom\r\n        ? (this.player as any).getRoom()\r\n        : this.player.game.levels[this.player.depth].rooms[this.player.levelID];\r\n      lines.push(`Depth reached: ${diedInRoom.depth}`);\r\n\r\n      // Line 2: Enemies killed\r\n      lines.push(\r\n        `${Object.values(enemyCounts).reduce(\r\n          (a, b) => a + b,\r\n          0,\r\n        )} enemies killed in total:`,\r\n      );\r\n\r\n      // Build enemy lines\r\n      const enemyLines: string[] = [];\r\n      Object.entries(enemyCounts).forEach(([enemy, count]) => {\r\n        enemyLines.push(`${enemy} x${count}`);\r\n      });\r\n\r\n      // Line after enemy counts: Restart instruction\r\n      let restartButton = \"Press space or click to restart\";\r\n      if (GameConstants.isMobile) restartButton = \"Tap to restart\";\r\n      const lineHeight = Game.letter_height + 2; // Adjust spacing as needed\r\n\r\n      // Reserve bottom area for restart + feedback button + margins\r\n      const restartAreaHeight = lineHeight * 2; // restart text + small spacing\r\n      const feedbackButtonHeight = 16; // from LinkButton\r\n      const bottomMargin = 10;\r\n      const reservedBottomHeight =\r\n        restartAreaHeight + feedbackButtonHeight + bottomMargin + 8; // extra padding\r\n\r\n      // Compute available vertical space for content between top margin and reserved bottom\r\n      const topMargin = 20;\r\n      const availableHeight = Math.max(\r\n        0,\r\n        GameConstants.HEIGHT - reservedBottomHeight - topMargin,\r\n      );\r\n\r\n      // Fixed header lines (Game Over / Depth / Total)\r\n      const headerLines = lines.length; // currently 3\r\n      const headerHeight = headerLines * lineHeight + lineHeight * 0.5; // slight extra spacing\r\n\r\n      // How many enemy lines fit\r\n      const remainingForEnemies = Math.max(0, availableHeight - headerHeight);\r\n      const enemiesPerPageBase = Math.max(\r\n        1,\r\n        Math.floor(remainingForEnemies / lineHeight),\r\n      );\r\n\r\n      // Pagination setup\r\n      let enemiesPerPage = enemiesPerPageBase;\r\n      const totalEnemyLines = enemyLines.length;\r\n      // Precompute pages; if more than one page, reserve a row for page indicator by reducing capacity by one\r\n      let totalPages = Math.max(1, Math.ceil(totalEnemyLines / enemiesPerPage));\r\n      if (totalPages > 1) {\r\n        enemiesPerPage = Math.max(1, enemiesPerPageBase - 1);\r\n        totalPages = Math.max(1, Math.ceil(totalEnemyLines / enemiesPerPage));\r\n      }\r\n      this.player.deathScreenPageCount = totalPages;\r\n      const currentPage = Math.min(\r\n        Math.max(0, this.player.deathScreenPageIndex || 0),\r\n        totalPages - 1,\r\n      );\r\n      this.player.deathScreenPageIndex = currentPage;\r\n\r\n      const startIdx = currentPage * enemiesPerPage;\r\n      const endIdx = Math.min(totalEnemyLines, startIdx + enemiesPerPage);\r\n      const pageEnemyLines = enemyLines.slice(startIdx, endIdx);\r\n\r\n      // Compute starting Y to vertically position the block within available area\r\n      let startY = topMargin;\r\n\r\n      // Draw headers\r\n      lines.forEach((line, index) => {\r\n        const textWidth = Game.measureText(line).width;\r\n        const spacing = index <= 1 ? lineHeight * 1.5 : lineHeight;\r\n        Game.fillText(line, GameConstants.WIDTH / 2 - textWidth / 2, startY);\r\n        startY += spacing;\r\n      });\r\n\r\n      // Draw enemies for current page\r\n      pageEnemyLines.forEach((line) => {\r\n        const textWidth = Game.measureText(line).width;\r\n        Game.fillText(line, GameConstants.WIDTH / 2 - textWidth / 2, startY);\r\n        startY += lineHeight;\r\n      });\r\n\r\n      // Draw page indicator if multiple pages\r\n      if (totalPages > 1) {\r\n        const indicator = `Page ${currentPage + 1}/${totalPages}`;\r\n        const w = Game.measureText(indicator).width;\r\n        const y = GameConstants.HEIGHT - reservedBottomHeight - 6;\r\n        Game.fillText(indicator, GameConstants.WIDTH / 2 - w / 2, y);\r\n      }\r\n\r\n      // Draw the restart button above the feedback button\r\n      const restartTextWidth = Game.measureText(restartButton).width;\r\n      const restartY = GameConstants.HEIGHT - reservedBottomHeight + 4;\r\n      Game.fillText(\r\n        restartButton,\r\n        GameConstants.WIDTH / 2 - restartTextWidth / 2,\r\n        restartY,\r\n      );\r\n\r\n      // Draw feedback button at the very bottom reserved area\r\n      if (this.player.game.feedbackButton) {\r\n        const feedbackY = restartY + lineHeight + 6;\r\n\r\n        const textWidth = Game.measureText(\r\n          this.player.game.feedbackButton.text,\r\n        ).width;\r\n        const buttonWidth = textWidth + 10;\r\n        const centeredX = (GameConstants.WIDTH - buttonWidth) / 2;\r\n\r\n        this.player.game.feedbackButton.x = centeredX;\r\n        this.player.game.feedbackButton.y = feedbackY;\r\n        this.player.game.feedbackButton.draw();\r\n      }\r\n\r\n      // Navigation hint for pagination on desktop\r\n      if (!GameConstants.isMobile && totalPages > 1) {\r\n        const hint = \"Use arrow keys to view more\";\r\n        const hintWidth = Game.measureText(hint).width;\r\n        const hintY =\r\n          (this.player.game.feedbackButton?.y || GameConstants.HEIGHT - 20) +\r\n          feedbackButtonHeight +\r\n          4;\r\n        if (hintY < GameConstants.HEIGHT - 2) {\r\n          Game.fillText(hint, GameConstants.WIDTH / 2 - hintWidth / 2, hintY);\r\n        }\r\n      }\r\n\r\n      if (!this.player.game.hasRecordedStats) {\r\n        // The default value for `lastHitBy` is \"enemy\", so we compare to that to determine if\r\n        // the player was killed by an enemy\r\n        const gameDurationMs = Date.now() - this.player.game.gameStartTimeMs;\r\n        const inventoryItems = this.player.inventory.items\r\n          .filter((item) => item?.name && item?.stackCount)\r\n          .map((item) => ({\r\n            name: item.name,\r\n            stackSize: item.stackCount,\r\n          }));\r\n\r\n        const { createGameState } = require(\"../game/gameState\");\r\n\r\n        // Report game stats to Turnarchist backend server\r\n        safeRecordGameStats({\r\n          xp: gameStats.xp,\r\n          level: gameStats.level,\r\n          gameDurationMs,\r\n          inventory: inventoryItems,\r\n          killedBy: this.player.lastHitBy ?? null,\r\n          enemiesKilled: enemies,\r\n          damageDone: gameStats.damageDone,\r\n          damageTaken: gameStats.damageTaken,\r\n          depthReached: diedInRoom.depth,\r\n          turnsPassed: gameStats.turnsPassed,\r\n          coinsCollected: gameStats.coinsCollected,\r\n          itemsCollected: gameStats.itemsCollected,\r\n          deviceType: getDeviceInfo(),\r\n          sidePathsEntered: gameStats.sidePathsEntered,\r\n          weaponChoice: gameStats.weaponChoice,\r\n          gameState: createGameState(this.player.game),\r\n          gameVersion: this.player.game.version,\r\n          loadedFromSaveFile: this.player.game.loadedFromSaveFile,\r\n        });\r\n        this.player.game.hasRecordedStats = true;\r\n      }\r\n    }\r\n    PostProcessor.draw(delta);\r\n    if (this.hurting) this.drawHurt(delta);\r\n\r\n    if (this.player.mapToggled === true) this.player.map.draw(delta);\r\n    this.drawTileCursor(delta);\r\n    this.player.setCursorIcon();\r\n\r\n    //this.drawInventoryButton(delta);\r\n    if (this.player.menu.open) this.player.menu.draw();\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawCooldownBar = () => {\r\n    Game.ctx.save();\r\n    if (this.player.cooldownRemaining > 0) {\r\n      this.player.cooldownRemaining =\r\n        1 -\r\n        (Date.now() - this.player.movement.lastMoveTime) /\r\n          this.player.movement.adjustedCooldown;\r\n    } else this.player.cooldownRemaining = 0;\r\n    const tile = GameConstants.TILESIZE;\r\n    Game.drawFX(\r\n      12 +\r\n        Math.max(\r\n          0,\r\n          Math.min(14, Math.floor(17 * this.player.cooldownRemaining)),\r\n        ),\r\n      2,\r\n      1,\r\n      1,\r\n      0.45,\r\n      GameConstants.HEIGHT / tile - 2.125,\r\n      1,\r\n      1,\r\n    );\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawHurt = (delta: number) => {\r\n    Game.ctx.save(); // Save the current canvas state\r\n    Game.ctx.globalAlpha = this.hurtAlpha;\r\n    this.hurtAlpha -= (this.hurtAlpha / 10) * delta;\r\n    if (this.hurtAlpha <= 0.01) {\r\n      this.hurtAlpha = 0;\r\n      this.hurting = false;\r\n      this.hurtingShield = false;\r\n    }\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    Game.ctx.fillStyle = \"#cc3333\"; // bright but not fully saturated red\r\n    if (this.hurtingShield) {\r\n      Game.ctx.fillStyle = \"#639bff\"; // bright but not fully saturated blue\r\n    }\r\n\r\n    Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  drawLowHealth = (delta: number) => {\r\n    Game.ctx.save();\r\n    //unused\r\n    if (this.player.health <= 1 && !this.player.dead) {\r\n      // Calculate pulsating alpha for the vignette effect\r\n      const lowHealthAlpha = 0.5; //Math.sin(this.lowHealthFrame / 10) * 0.5 + 0.5;\r\n      Game.ctx.globalAlpha = lowHealthAlpha;\r\n      this.lowHealthFrame += delta;\r\n\r\n      const gradientBottom = Game.ctx.createLinearGradient(\r\n        0,\r\n        GameConstants.HEIGHT,\r\n        0,\r\n        (GameConstants.HEIGHT * 2) / 3,\r\n      );\r\n\r\n      // Define gradient color stops\r\n      [gradientBottom].forEach((gradient) => {\r\n        gradient.addColorStop(0, \"#cc3333\"); // Solid red at edges\r\n        gradient.addColorStop(1, \"rgba(0, 0, 0, 0)\"); // Transparent toward center\r\n      });\r\n\r\n      // Draw the gradients\r\n      Game.ctx.globalCompositeOperation = \"source-over\";\r\n\r\n      Game.ctx.fillStyle = gradientBottom;\r\n      Game.ctx.fillRect(0, 0, GameConstants.WIDTH, GameConstants.HEIGHT);\r\n\r\n      // Reset composite operation and alpha\r\n      Game.ctx.globalCompositeOperation = \"source-over\";\r\n      Game.ctx.globalAlpha = 1.0;\r\n    } else {\r\n      this.lowHealthFrame = 0;\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  heartbeat = () => {\r\n    this.guiHeartFrame = 1;\r\n  };\r\n\r\n  /**\r\n   * Draws the tile cursor to the canvas.\r\n   * Added `ctx.save()` at the beginning and `ctx.restore()` at the end\r\n   * to ensure canvas state is preserved.\r\n   */\r\n  drawTileCursor = (delta: number) => {\r\n    if (\r\n      this.player.inventory.isOpen ||\r\n      this.player.inputHandler.mostRecentMoveInput === \"keyboard\" ||\r\n      GameConstants.isMobile\r\n    )\r\n      return;\r\n    Game.ctx.save(); // Save the current canvas state\r\n\r\n    if (\r\n      !this.player.mouseInLine() ||\r\n      !this.player.isMouseAboveFloor() ||\r\n      this.player.isMouseOnPlayerTile()\r\n    )\r\n      return;\r\n    let tileX = 24; //inRange ? 22 : 24;\r\n    let tileY = 5;\r\n\r\n    Game.drawFX(\r\n      tileX + Math.floor(HitWarning.frame),\r\n      tileY,\r\n      1,\r\n      1,\r\n      this.player.tileCursor.x + this.player.drawX,\r\n      this.player.tileCursor.y + this.player.drawY,\r\n      1,\r\n      1,\r\n    );\r\n\r\n    Game.ctx.restore(); // Restore the canvas state\r\n  };\r\n\r\n  jump = (delta: number) => {\r\n    let j = Math.max(Math.abs(this.drawX), Math.abs(this.drawY));\r\n    this.jumpY = Math.abs(Math.sin(j * Math.PI) * this.jumpHeight);\r\n    if (Math.abs(this.jumpY) < 0.01) this.jumpY = 0;\r\n    if (this.jumpY > this.jumpHeight) this.jumpY = this.jumpHeight;\r\n  };\r\n}\r\n","import { Entity } from \"../entity/entity\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Particle } from \"../particle/particle\";\r\nimport { Projectile } from \"./projectile\";\r\nimport { Room } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n  oldX: number;\r\n  oldY: number;\r\n  velocityX: number;\r\n  velocityY: number;\r\n  angle: number;\r\n}\r\n\r\nexport class BeamEffect extends Projectile {\r\n  // Number of points that make up the beam (higher = smoother but more expensive)\r\n  // Range: 10-100, recommended: 30\r\n  private static readonly SEGMENTS = 30;\r\n\r\n  // Downward force applied to each point (0 = no gravity)\r\n  // Range: 0-10, recommended: 2\r\n  private static readonly GRAVITY = 2;\r\n\r\n  // Physics simulation steps per frame (higher = more accurate but more expensive)\r\n  // Range: 1-10, recommended: 1\r\n  private static readonly ITERATIONS = 5;\r\n\r\n  // How much the beam reacts to movement of start/end points\r\n  // Range: 0-5, recommended: 1\r\n  private static readonly MOTION_INFLUENCE = 1;\r\n\r\n  // Amount of random movement applied to points (0 = straight beam)\r\n  // Range: 0-1, recommended: 0.5\r\n  private static readonly TURBULENCE = 0.5;\r\n\r\n  // How quickly velocity decreases over time\r\n  // Range: 0-1, recommended: 0.5\r\n  private static readonly VELOCITY_DECAY = 0.1;\r\n\r\n  // How quickly the turbulence angle changes\r\n  // Range: 0-2, recommended: 0.9\r\n  private static readonly ANGLE_CHANGE = 0.01; // for turbulence specifically\r\n\r\n  // Maximum speed any point can move per frame\r\n  // Range: 10-1000, recommended: 100\r\n  private static readonly MAX_VELOCITY = 100;\r\n\r\n  // General movement resistance (1 = no damping, 0 = full stop)\r\n  // Range: 0.9-0.999, recommended: 0.8\r\n  private static readonly DAMPING = 0.8;\r\n\r\n  // How strongly points pull toward their neighbors\r\n  // Range: 0.01-1, recommended: 0.01\r\n  private static readonly SPRING_STIFFNESS = 0.01;\r\n\r\n  // How quickly spring oscillations settle\r\n  // Range: 0.001-0.1, recommended: 0.1\r\n  private static readonly SPRING_DAMPING = 0.1;\r\n\r\n  private points: Point[];\r\n  private prevStartX: number;\r\n  private prevStartY: number;\r\n  private prevEndX: number;\r\n  private prevEndY: number;\r\n  private active: boolean = true;\r\n  private time: number = 0;\r\n  alpha: number = 1;\r\n  targetX: number;\r\n  targetY: number;\r\n  color: string;\r\n  compositeOperation: string;\r\n  gravity: number = BeamEffect.GRAVITY;\r\n  motionInfluence: number = BeamEffect.MOTION_INFLUENCE;\r\n  turbulence: number = BeamEffect.TURBULENCE;\r\n  velocityDecay: number = BeamEffect.VELOCITY_DECAY;\r\n  angleChange: number = BeamEffect.ANGLE_CHANGE;\r\n  maxVelocity: number = BeamEffect.MAX_VELOCITY;\r\n  damping: number = BeamEffect.DAMPING;\r\n  springStiffness: number = BeamEffect.SPRING_STIFFNESS;\r\n  springDamping: number = BeamEffect.SPRING_DAMPING;\r\n  iterations: number = BeamEffect.ITERATIONS;\r\n  segments: number = BeamEffect.SEGMENTS;\r\n  type: string;\r\n  constructor(x1: number, y1: number, x2: number, y2: number, parent: Entity) {\r\n    super(parent, x1, y1);\r\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    this.x = x1;\r\n    this.y = y1;\r\n    this.targetX = x2;\r\n    this.targetY = y2;\r\n\r\n    this.points = this.initializePoints(startX, startY, endX, endY);\r\n    this.prevStartX = startX;\r\n    this.prevStartY = startY;\r\n    this.prevEndX = endX;\r\n    this.prevEndY = endY;\r\n    this.color = \"cyan\";\r\n    this.compositeOperation = \"source-over\";\r\n  }\r\n  /**\r\n   * Sets the physics properties for the beam effect.\r\n   *\r\n   * @param {number} [gravity] - The gravitational force applied to the beam. Default: 2\r\n   * @param {number} [motionInfluence] - The influence of motion on the beam. Default: 1\r\n   * @param {number} [turbulence] - The turbulence applied to the beam. Default: 0.5\r\n   * @param {number} [velocityDecay] - The rate at which velocity decays. Default: 0.1\r\n   * @param {number} [angleChange] - The change in angle of the beam. Default: 0.01\r\n   * @param {number} [maxVelocity] - The maximum velocity of the beam.\r\n   * @param {number} [damping] - The damping factor for the beam's motion.\r\n   * @param {number} [springStiffness] - The stiffness of the spring effect.\r\n   * @param {number} [springDamping] - The damping of the spring effect.\r\n   * @param {number} [iterations] - The number of iterations for the physics simulation.\r\n   * @param {number} [segments] - The number of segments for the beam.\r\n   */\r\n  setPhysics(\r\n    gravity?: number,\r\n    motionInfluence?: number,\r\n    turbulence?: number,\r\n    velocityDecay?: number,\r\n    angleChange?: number,\r\n    maxVelocity?: number,\r\n    damping?: number,\r\n    springStiffness?: number,\r\n    springDamping?: number,\r\n    iterations?: number,\r\n    segments?: number,\r\n  ) {\r\n    this.gravity = gravity ?? BeamEffect.GRAVITY;\r\n    this.motionInfluence = motionInfluence ?? BeamEffect.MOTION_INFLUENCE;\r\n    this.turbulence = turbulence ?? BeamEffect.TURBULENCE;\r\n    this.velocityDecay = velocityDecay ?? BeamEffect.VELOCITY_DECAY;\r\n    this.angleChange = angleChange ?? BeamEffect.ANGLE_CHANGE;\r\n    this.maxVelocity = maxVelocity ?? BeamEffect.MAX_VELOCITY;\r\n    this.damping = damping ?? BeamEffect.DAMPING;\r\n    this.springStiffness = springStiffness ?? BeamEffect.SPRING_STIFFNESS;\r\n    this.springDamping = springDamping ?? BeamEffect.SPRING_DAMPING;\r\n    this.iterations = iterations ?? BeamEffect.ITERATIONS;\r\n    this.segments = segments ?? BeamEffect.SEGMENTS;\r\n  }\r\n\r\n  setTarget(x: number, y: number, x2: number, y2: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.targetX = x2;\r\n    this.targetY = y2;\r\n  }\r\n\r\n  render(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    color: string = this.color,\r\n    lineWidth: number = 2,\r\n    delta: number = 1 / 60,\r\n    compositeOperation: string = this.compositeOperation,\r\n  ): void {\r\n    const startX =\r\n      this.x * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY =\r\n      this.y * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX =\r\n      this.targetX * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY =\r\n      this.targetY * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n\r\n    const startForceX =\r\n      (startX - this.prevStartX) * this.motionInfluence * delta;\r\n    const startForceY =\r\n      (startY - this.prevStartY) * this.motionInfluence * delta;\r\n    const endForceX = (endX - this.prevEndX) * this.motionInfluence * delta;\r\n    const endForceY = (endY - this.prevEndY) * this.motionInfluence * delta;\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      const influence = 1 - i / 4;\r\n      this.points[i].x += startForceX * influence;\r\n      this.points[i].y += startForceY * influence;\r\n    }\r\n    for (let i = this.points.length - 4; i < this.points.length - 1; i++) {\r\n      const influence = 1 - (this.points.length - i) / 4;\r\n      this.points[i].x += endForceX * influence;\r\n      this.points[i].y += endForceY * influence;\r\n    }\r\n\r\n    this.simulateRope(startX, startY, endX, endY, delta);\r\n\r\n    const ctx = Game.ctx;\r\n    ctx.save();\r\n    Game.ctx.globalCompositeOperation =\r\n      compositeOperation as GlobalCompositeOperation;\r\n    for (let i = 0; i < this.points.length - 1; i++) {\r\n      const p1 = this.points[i];\r\n      const p2 = this.points[i + 1];\r\n\r\n      const dx = p2.x - p1.x;\r\n      const dy = p2.y - p1.y;\r\n      const steps = Math.max(Math.abs(dx), Math.abs(dy));\r\n\r\n      const xIncrement = dx / steps;\r\n      const yIncrement = dy / steps;\r\n\r\n      let x = p1.x;\r\n      let y = p1.y;\r\n\r\n      for (let step = 0; step <= steps; step++) {\r\n        for (let w = 0; w < lineWidth; w++) {\r\n          for (let h = 0; h < lineWidth; h++) {\r\n            ctx.fillStyle = color;\r\n            ctx.fillRect(Math.round(x + w), Math.round(y + h), 1, 1);\r\n          }\r\n        }\r\n        x += xIncrement;\r\n        y += yIncrement;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    this.prevStartX = startX;\r\n    this.prevStartY = startY;\r\n    this.prevEndX = endX;\r\n    this.prevEndY = endY;\r\n  }\r\n\r\n  private initializePoints(\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ): Point[] {\r\n    const points: Point[] = [];\r\n    for (let i = 0; i < this.segments; i++) {\r\n      const t = i / (this.segments - 1);\r\n      points.push({\r\n        x: startX + (endX - startX) * t,\r\n        y: startY + (endY - startY) * t,\r\n        oldX: startX + (endX - startX) * t,\r\n        oldY: startY + (endY - startY) * t,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        angle: Random.rand() * Math.PI * 2,\r\n      });\r\n    }\r\n    return points;\r\n  }\r\n\r\n  private applyTurbulence(point: Point, index: number): void {\r\n    point.angle += Math.sin(this.time * 0.1 + index * 0.5) * this.angleChange;\r\n\r\n    const turbulenceX = Math.cos(point.angle) * this.turbulence;\r\n    const turbulenceY = Math.sin(point.angle) * this.turbulence;\r\n\r\n    point.velocityX += turbulenceX;\r\n    point.velocityY += turbulenceY;\r\n\r\n    point.velocityX = Math.min(\r\n      Math.max(point.velocityX, -this.maxVelocity),\r\n      this.maxVelocity,\r\n    );\r\n    point.velocityY = Math.min(\r\n      Math.max(point.velocityY, -this.maxVelocity),\r\n      this.maxVelocity,\r\n    );\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.parent.dead) {\r\n      this.destroy();\r\n    }\r\n  };\r\n\r\n  private simulateRope(\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n    delta: number,\r\n  ): void {\r\n    const iterationsThisFrame = Math.ceil(this.iterations * delta);\r\n\r\n    for (let iteration = 0; iteration < iterationsThisFrame; iteration++) {\r\n      for (let i = 1; i < this.points.length - 1; i++) {\r\n        const point = this.points[i];\r\n        const prevPoint = this.points[i - 1];\r\n        const nextPoint = this.points[i + 1];\r\n\r\n        const springForceXPrev = (prevPoint.x - point.x) * this.springStiffness;\r\n        const springForceYPrev = (prevPoint.y - point.y) * this.springStiffness;\r\n        const springForceXNext = (nextPoint.x - point.x) * this.springStiffness;\r\n        const springForceYNext = (nextPoint.y - point.y) * this.springStiffness;\r\n\r\n        this.applyTurbulence(point, i);\r\n\r\n        point.velocityX =\r\n          (point.velocityX + springForceXPrev + springForceXNext) *\r\n          this.damping;\r\n        point.velocityY =\r\n          (point.velocityY + springForceYPrev + springForceYNext) *\r\n          this.damping;\r\n\r\n        const relativeVXPrev = prevPoint.velocityX - point.velocityX;\r\n        const relativeVYPrev = prevPoint.velocityY - point.velocityY;\r\n        const relativeVXNext = nextPoint.velocityX - point.velocityX;\r\n        const relativeVYNext = nextPoint.velocityY - point.velocityY;\r\n\r\n        point.velocityX +=\r\n          (relativeVXPrev + relativeVXNext) * this.springDamping;\r\n        point.velocityY +=\r\n          (relativeVYPrev + relativeVYNext) * this.springDamping;\r\n\r\n        point.oldX = point.x;\r\n        point.oldY = point.y;\r\n\r\n        point.x += point.velocityX;\r\n        point.y += point.velocityY + this.gravity;\r\n      }\r\n\r\n      const segmentLength =\r\n        Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2)) /\r\n        (this.segments - 1);\r\n\r\n      for (\r\n        let constraintIteration = 0;\r\n        constraintIteration < 2;\r\n        constraintIteration++\r\n      ) {\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n          const p1 = this.points[i];\r\n          const p2 = this.points[i + 1];\r\n\r\n          const dx = p2.x - p1.x;\r\n          const dy = p2.y - p1.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          const difference = segmentLength - distance;\r\n          const percent = difference / distance / 2;\r\n          const offsetX = dx * percent;\r\n          const offsetY = dy * percent;\r\n\r\n          if (i > 0) {\r\n            p1.x -= offsetX * 1.5;\r\n            p1.y -= offsetY * 1.5;\r\n          }\r\n          if (i < this.points.length - 2) {\r\n            p2.x += offsetX * 1.5;\r\n            p2.y += offsetY * 1.5;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.points[0].x = startX;\r\n    this.points[0].y = startY;\r\n    this.points[0].oldX = startX;\r\n    this.points[0].oldY = startY;\r\n    this.points[this.points.length - 1].x = endX;\r\n    this.points[this.points.length - 1].y = endY;\r\n    this.points[this.points.length - 1].oldX = endX;\r\n    this.points[this.points.length - 1].oldY = endY;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    this.drawableY = this.y - 0.01;\r\n    this.render(\r\n      this.targetX,\r\n      this.targetY,\r\n      this.x,\r\n      this.y,\r\n      this.color,\r\n      2,\r\n      delta,\r\n      this.compositeOperation,\r\n    );\r\n  };\r\n\r\n  static renderBeam(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    color: string = \"cyan\",\r\n    lineWidth: number = 2,\r\n    alpha: number = 1,\r\n  ): void {\r\n    const ctx = Game.ctx;\r\n    ctx.globalAlpha = alpha;\r\n\r\n    const startX = x1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const startY = y1 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endX = x2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n    const endY = y2 * GameConstants.TILESIZE + 0.5 * GameConstants.TILESIZE;\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(startX, startY);\r\n    ctx.lineTo(endX, endY);\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  destroy(): void {\r\n    this.active = false;\r\n    this.points = [];\r\n    this.dead = true;\r\n  }\r\n\r\n  isActive(): boolean {\r\n    return this.active;\r\n  }\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { Player } from \"../player/player\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { BeamEffect } from \"./beamEffect\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\n\r\nexport class EnemyShield extends Projectile {\r\n  frame: number;\r\n  parent: Entity;\r\n  tileX: number;\r\n  tileY: number;\r\n  health: number;\r\n  private autoRegistered?: boolean;\r\n\r\n  constructor(\r\n    parent: Entity | null,\r\n    x: number,\r\n    y: number,\r\n    health: number = 1,\r\n    autoRegister: boolean = true,\r\n  ) {\r\n    super(parent as any, x, y);\r\n    this.parent = parent as any;\r\n    this.frame = 0;\r\n    this.health = health;\r\n    this.autoRegistered = false;\r\n\r\n    // Gracefully handle missing parent during load; mark as dead so caller can skip\r\n    if (!this.parent || !(this.parent as any).room) {\r\n      this.dead = true;\r\n      return;\r\n    }\r\n\r\n    this.parent.shielded = true;\r\n    this.lightSource = Lighting.newLightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      [20, 0, 40],\r\n      3.5,\r\n      20,\r\n    );\r\n    this.parent.addLightSource(this.lightSource);\r\n    if (autoRegister) {\r\n      this.parent.room.projectiles.push(this);\r\n      this.autoRegistered = true;\r\n    }\r\n    this.parent.room.updateLighting();\r\n  }\r\n\r\n  remove = () => {\r\n    this.parent.shielded = false;\r\n    this.parent.removeLightSource(this.lightSource);\r\n    this.parent.room.projectiles = this.parent.room.projectiles.filter(\r\n      (projectile) => projectile !== this,\r\n    );\r\n\r\n    let beam = this.parent.room.projectiles.find(\r\n      (projectile) =>\r\n        projectile instanceof BeamEffect && projectile.parent === this.parent,\r\n    );\r\n    if (beam) {\r\n      beam.dead = true;\r\n    }\r\n    this.parent.shadeColor = \"black\";\r\n    this.lightSource = null;\r\n    this.parent.shield = null;\r\n  };\r\n\r\n  updateLightSourcePos = () => {\r\n    if (this.lightSource === null) return;\r\n    let index = this.parent.room.lightSources.indexOf(this.lightSource);\r\n    this.parent.room.lightSources[index].x = this.parent.x + 0.5;\r\n    this.parent.room.lightSources[index].y = this.parent.y + 0.5;\r\n    //this.parent.room.updateLighting();\r\n  };\r\n\r\n  hurt = (damage: number) => {\r\n    const damageOverShield = Math.max(0, damage - this.health);\r\n    this.health -= damage;\r\n    this.parent.maxHealth -= damage;\r\n    /*\r\n    GenericParticle.spawnCluster(\r\n      this.parent.room,\r\n      this.parent.x + 0.5,\r\n      this.parent.y + 0.5,\r\n      \"#fbf236\",\r\n    );\r\n    */\r\n\r\n    if (this.health <= 0) {\r\n      this.remove();\r\n    }\r\n    return damageOverShield;\r\n  };\r\n\r\n  tick = () => {\r\n    if (!this.parent || !(this.parent as any).room) {\r\n      this.dead = true;\r\n      return;\r\n    }\r\n    if (this.parent?.dead) {\r\n      this.remove();\r\n    }\r\n    if (this.dead) {\r\n      if (this.parent && (this.parent as any).room) {\r\n        this.parent.room.projectiles = this.parent.room.projectiles.filter(\r\n          (projectile) => projectile !== this,\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalAlpha = 1;\r\n    this.frame += 0.1 * delta;\r\n    if (this.frame >= 4) this.frame = 0;\r\n\r\n    this.drawableY = this.parent.drawableY - 0.05;\r\n    Game.ctx.globalCompositeOperation = \"difference\";\r\n    if (this.parent.shielded) {\r\n      Game.drawFX(\r\n        18 + Math.floor(this.frame),\r\n        9,\r\n        1,\r\n        1,\r\n        this.parent.x - this.parent.drawX,\r\n        this.parent.y - this.parent.drawY,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player/player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Room } from \"../room/room\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { ImageParticle } from \"../particle/imageParticle\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\n\r\nexport class EnemySpawnAnimation extends Projectile {\r\n  readonly ANIM_COUNT = 3;\r\n\r\n  room: Room;\r\n  enemy: Entity;\r\n  frame: number;\r\n  constructor(room: Room, enemy: Entity, x: number, y: number) {\r\n    super(enemy, x, y);\r\n    this.room = room;\r\n    this.enemy = enemy;\r\n    this.frame = 0;\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#00BFFF\";\r\n    this.bloomOffsetY = -0.5;\r\n\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      1,\r\n      [0, 50, 150],\r\n      1,\r\n    );\r\n    this.room.lightSources.push(this.lightSource);\r\n    this.room.updateLighting();\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.room === this.room.game.room) Sound.enemySpawn();\r\n\r\n    let hitPlayer = false;\r\n    for (const i in this.room.game.players) {\r\n      if (\r\n        this.room.game.players[i].x === this.x &&\r\n        this.room.game.players[i].y === this.y\r\n      ) {\r\n        this.room.game.players[i].hurt(0.5, \"reaper\");\r\n        hitPlayer = true;\r\n      }\r\n    }\r\n    if (!hitPlayer) {\r\n      this.dead = true;\r\n      this.enemy.skipNextTurns = 1;\r\n      this.room.entities.push(this.enemy);\r\n      this.enemy.createHitParticles();\r\n      this.lightSource.dead = true;\r\n    } else {\r\n      this.room.hitwarnings.push(\r\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y),\r\n      );\r\n    }\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n\r\n    this.frame += 0.25 * delta;\r\n    if (this.frame >= 8) this.frame = 0;\r\n    for (let i = 0; i < this.ANIM_COUNT; i++) {\r\n      let offsetX = 0;\r\n      Game.drawFX(\r\n        Math.floor(this.frame),\r\n        27,\r\n        1,\r\n        1,\r\n        this.x + Math.round(offsetX) / 16.0,\r\n        this.y - 0.5,\r\n        1,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player/player\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Bomb } from \"../entity/object/bomb\";\r\nexport class Explosion extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  delay: number;\r\n  parent: Entity;\r\n  offsetFrame: number;\r\n\r\n  constructor(entity: Entity, x: number, y: number, playerHitBy: Player) {\r\n    super(entity, x, y);\r\n    this.state = 0;\r\n    this.frame = 6;\r\n    this.parent = entity;\r\n    this.offsetFrame =\r\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 100;\r\n    this.delay = 0;\r\n    Lighting.momentaryLight(\r\n      this.parent.room,\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      0.5,\r\n      [255, 100, 0],\r\n      350,\r\n      20,\r\n      Math.abs(this.offsetFrame),\r\n    );\r\n    const distance = Utils.distance(\r\n      this.parent.x,\r\n      this.parent.y,\r\n      this.x,\r\n      this.y,\r\n    );\r\n\r\n    let damage =\r\n      distance === 0 ? 1 : Math.max(0.5, Math.floor((1 / distance) * 4) / 2);\r\n    for (let entity of this.parent.room.entities) {\r\n      if (\r\n        entity.x === this.x &&\r\n        entity.y === this.y &&\r\n        entity !== this.parent\r\n      ) {\r\n        if (entity instanceof Bomb) {\r\n          entity.fuseLength = 1;\r\n        }\r\n        entity.hurt(playerHitBy, damage);\r\n      }\r\n      if (playerHitBy.x === this.x && playerHitBy.y === this.y) {\r\n        playerHitBy.hurt(damage, \"bomb\");\r\n      }\r\n    }\r\n  }\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\r\n    if (this.offsetFrame >= 0) {\r\n      this.frame += 0.25 * delta;\r\n    }\r\n\r\n    if (this.frame > 17) this.dead = true;\r\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player/player\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\nimport { Utils } from \"../utility/utils\";\r\nexport class PlayerFireball extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  delay: number;\r\n  parent: Player;\r\n  offsetFrame: number;\r\n\r\n  constructor(parent: Player, x: number, y: number) {\r\n    super(parent, x, y);\r\n    this.state = 0;\r\n    this.frame = 6;\r\n    this.offsetFrame =\r\n      -Utils.distance(this.parent.x, this.parent.y, this.x, this.y) * 50;\r\n    this.delay = 0;\r\n    Lighting.momentaryLight(\r\n      this.parent.game.rooms[this.parent.levelID],\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      0.5,\r\n      [255, 100, 0],\r\n      250,\r\n      10,\r\n      1,\r\n    );\r\n  }\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    if (this.offsetFrame < 0) this.offsetFrame += 10 * delta;\r\n    if (this.offsetFrame >= 0) {\r\n      this.frame += 0.25 * delta;\r\n    }\r\n\r\n    if (this.frame > 17) this.dead = true;\r\n    Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Direction } from \"../game\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\n\r\nexport class Projectile extends Drawable {\r\n  globalId: string;\r\n  x: number;\r\n  y: number;\r\n  dead: boolean;\r\n  parent: Entity | Player;\r\n  dir: Direction;\r\n  bloomOffsetY: number;\r\n  lightSource: LightSource;\r\n\r\n  constructor(parent: Entity | Player, x: number, y: number) {\r\n    super();\r\n    this.globalId = IdGenerator.generate(\"PROJ\");\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dead = false;\r\n    this.parent = parent;\r\n    this.drawableY = y;\r\n    this.hasBloom = false;\r\n    this.bloomColor = \"#00BFFF\";\r\n    this.bloomOffsetY = 0;\r\n  }\r\n\r\n  get distanceToParent() {\r\n    return Math.abs(this.x - this.parent.x) + Math.abs(this.y - this.parent.y);\r\n  }\r\n\r\n  setTarget(x: number, y: number, x2: number, y2: number) {}\r\n\r\n  hitPlayer = (player: Player) => {};\r\n  hitEnemy = (enemy: Entity) => {};\r\n\r\n  tick = () => {};\r\n  draw = (delta: number) => {};\r\n  drawTopLayer = (delta: number) => {};\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { Player } from \"../player/player\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { BeamEffect } from \"./beamEffect\";\r\nimport { GenericParticle } from \"../particle/genericParticle\";\r\n\r\nexport class StunAnimation extends Projectile {\r\n  frame: number;\r\n  parent: Entity;\r\n  tileX: number;\r\n  tileY: number;\r\n  ticks: number = 0;\r\n\r\n  constructor(parent: Entity, x: number, y: number) {\r\n    super(parent, x, y);\r\n    this.frame = 0;\r\n\r\n    this.parent.room.projectiles.push(this);\r\n  }\r\n\r\n  remove = () => {\r\n    this.parent.room.projectiles = this.parent.room.projectiles.filter(\r\n      (projectile) => projectile !== this,\r\n    );\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.ticks > 0 || this.parent.dead === true) {\r\n      this.remove();\r\n      this.parent.unconscious = false;\r\n      this.parent.justHurt = false;\r\n    }\r\n    this.ticks++;\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    if (this.dead) return;\r\n    Game.ctx.save();\r\n    Game.ctx.globalCompositeOperation = \"screen\";\r\n    Game.ctx.globalAlpha = 0.5;\r\n    this.frame += 0.2 * delta;\r\n    if (this.frame > 4) this.frame = 0;\r\n\r\n    //this.drawableY = this.parent.drawableY + 0.05;\r\n    //Game.ctx.globalCompositeOperation = \"difference\";\r\n    //if (this.parent.shielded) {\r\n    Game.drawFX(\r\n      19 + Math.floor(this.frame),\r\n      0,\r\n      1,\r\n      1,\r\n      this.parent.x - this.parent.drawX,\r\n      this.parent.y - this.parent.drawY - 1.4,\r\n      1,\r\n      1,\r\n    );\r\n    //}\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Projectile } from \"./projectile\";\r\nimport { Game } from \"../game\";\r\nimport { WizardEnemy } from \"../entity/enemy/wizardEnemy\";\r\nimport { Player } from \"../player/player\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { Lighting } from \"../lighting/lighting\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class WizardFireball extends Projectile {\r\n  state: number;\r\n  frame: number;\r\n  parent: WizardEnemy;\r\n  delay: number;\r\n  frameOffset: number;\r\n  offsetX: number;\r\n  hitWarning: HitWarning;\r\n  tileX: number;\r\n  tileY: number;\r\n\r\n  constructor(parent: WizardEnemy, x: number, y: number) {\r\n    super(parent, x, y);\r\n    this.tileY = parent.name === \"wizard bomber\" ? 7 : 8;\r\n    this.parent = parent;\r\n    this.frame = 0;\r\n    this.state = 0; // this.distanceToParent;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      4,\r\n      (parent as WizardEnemy).projectileColor,\r\n      0.1,\r\n    );\r\n    this.parent.addLightSource(this.lightSource);\r\n    //this.parent.room.updateLighting();\r\n    this.hasBloom = true;\r\n    this.bloomColor = Utils.rgbToHex(\r\n      (this.parent as WizardEnemy).projectileColor[0],\r\n      (this.parent as WizardEnemy).projectileColor[1],\r\n      (this.parent as WizardEnemy).projectileColor[2],\r\n    );\r\n    this.bloomAlpha = 0.5;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n  setMarkerFrame = () => {\r\n    // Calculate offsetX based on direction\r\n    this.offsetX = Math.floor(((this.dir + 1) % 8) / 2);\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.parent.dead || this.state === 3) {\r\n      this.parent.removeLightSource(this.lightSource);\r\n      this.dead = true;\r\n    }\r\n\r\n    if (!this.dead && this.state === 0) {\r\n      this.bloomAlpha = 1;\r\n    }\r\n\r\n    this.state++;\r\n    if (!this.dead && this.state === 1) {\r\n      this.bloomAlpha = 0.5;\r\n\r\n      const lightSource = this.parent.room.lightSources.find(\r\n        (ls) => ls === this.lightSource,\r\n      );\r\n      lightSource.b = 0.4;\r\n      this.parent.room.hitwarnings.push(\r\n        new HitWarning(\r\n          this.parent.game,\r\n          this.x,\r\n          this.y,\r\n          this.parent.x,\r\n          this.parent.y,\r\n          true,\r\n        ),\r\n      );\r\n    }\r\n    if (!this.dead && this.state === 2) {\r\n      this.bloomAlpha = 0;\r\n      Lighting.momentaryLight(\r\n        this.parent.room,\r\n        this.x,\r\n        this.y,\r\n        3,\r\n        (this.parent as WizardEnemy).projectileColor,\r\n        500,\r\n        5,\r\n        350,\r\n      );\r\n      this.parent.removeLightSource(this.lightSource);\r\n      this.frame = 0;\r\n      this.delay = Game.rand(0, 10, Random.rand);\r\n    }\r\n  };\r\n\r\n  hitPlayer = (player: Player) => {\r\n    if (!this.dead && this.state === 2) {\r\n      player.hurt(1, this.parent.name);\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (this.dead) return;\r\n    /*Game.drawFX(\r\n      18 + this.offsetX, //+ Math.floor(HitWarning.frame),\r\n      4,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1\r\n    );*/\r\n\r\n    if (this.state >= 0) {\r\n      if (this.state === 0) {\r\n        this.frame += 0.25 * delta;\r\n        if (this.frame >= 4) this.frame = 0;\r\n        Game.drawFX(\r\n          22 + Math.floor(this.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y,\r\n          1,\r\n          1,\r\n        );\r\n      } else if (this.state === 1) {\r\n        this.frame += 0.25 * delta;\r\n        if (this.frame >= 4) this.frame = 0;\r\n        Game.drawFX(\r\n          18 + Math.floor(this.frame),\r\n          this.tileY,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - 0.2,\r\n          1,\r\n          1,\r\n        );\r\n      } else {\r\n        if (this.delay > 0) {\r\n          this.delay--;\r\n          return;\r\n        }\r\n        this.frame += 0.3 * delta;\r\n        if (this.frame > 17) this.dead = true;\r\n        Game.drawFX(Math.floor(this.frame), 6, 1, 2, this.x, this.y - 1, 1, 2);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Random } from \"../utility/random\";\nimport { Room } from \"./room\";\n\n/**\n * Configuration options for clustering behavior\n */\nexport interface ClusteringOptions {\n  /** Falloff function exponent (default: 2 for inverse square distance) */\n  falloffExponent?: number;\n  /** Base score added to all tiles to ensure some randomness (default: 0.1) */\n  baseScore?: number;\n  /** Maximum distance for influence calculation (default: 10) */\n  maxInfluenceDistance?: number;\n  /** Whether to use a seed position or start randomly (default: false) */\n  useSeedPosition?: boolean;\n  /** Seed position coordinates (used if useSeedPosition is true) */\n  seedPosition?: { x: number; y: number };\n}\n\n/**\n * Handles clustering logic for prop placement\n */\nexport class PropClusterer {\n  private room: Room;\n  private options: Required<ClusteringOptions>;\n  private placedPositions: { x: number; y: number }[] = [];\n  private availableTiles: { x: number; y: number }[] = [];\n\n  constructor(room: Room, options: ClusteringOptions = {}) {\n    this.room = room;\n    this.options = {\n      falloffExponent: options.falloffExponent ?? 2,\n      baseScore: options.baseScore ?? 0.1,\n      maxInfluenceDistance: options.maxInfluenceDistance ?? 10,\n      useSeedPosition: options.useSeedPosition ?? false,\n      seedPosition: options.seedPosition ?? { x: 0, y: 0 },\n    };\n  }\n\n  /**\n   * Generates clustered positions for the specified number of props\n   */\n  generateClusteredPositions(numProps: number): { x: number; y: number }[] {\n    this.placedPositions = [];\n    this.availableTiles = this.getAvailableTiles();\n\n    if (this.availableTiles.length === 0) {\n      return [];\n    }\n\n    // Initialize with seed position or random position\n    if (\n      this.options.useSeedPosition &&\n      this.isValidPosition(this.options.seedPosition)\n    ) {\n      this.placePosition(this.options.seedPosition);\n    } else if (this.availableTiles.length > 0) {\n      const randomIndex = Math.floor(\n        Random.rand() * this.availableTiles.length,\n      );\n      const randomPosition = this.availableTiles.splice(randomIndex, 1)[0];\n      this.placedPositions.push(randomPosition);\n    }\n\n    // Generate remaining positions\n    for (let i = 1; i < numProps && this.availableTiles.length > 0; i++) {\n      const position = this.selectNextPosition();\n      if (position) {\n        this.placePosition(position);\n      } else {\n        break; // No valid positions left\n      }\n    }\n\n    return [...this.placedPositions];\n  }\n\n  /**\n   * Gets all available tiles in the room\n   */\n  private getAvailableTiles(): { x: number; y: number }[] {\n    const tiles = this.room.getEmptyTiles();\n    return tiles.map((tile) => ({ x: tile.x, y: tile.y }));\n  }\n\n  /**\n   * Checks if a position is valid and available\n   */\n  private isValidPosition(position: { x: number; y: number }): boolean {\n    return this.availableTiles.some(\n      (tile) => tile.x === position.x && tile.y === position.y,\n    );\n  }\n\n  /**\n   * Places a position and removes it from available tiles\n   */\n  private placePosition(position: { x: number; y: number }): void {\n    this.placedPositions.push(position);\n    this.availableTiles = this.availableTiles.filter(\n      (tile) => !(tile.x === position.x && tile.y === position.y),\n    );\n  }\n\n  /**\n   * Selects the next position based on clustering algorithm\n   */\n  private selectNextPosition(): { x: number; y: number } | null {\n    if (this.availableTiles.length === 0) {\n      return null;\n    }\n\n    // Score each available tile based on proximity to placed entities\n    const scoredTiles = this.availableTiles.map((tile) => ({\n      position: tile,\n      score: this.calculateTileScore(tile),\n    }));\n\n    // Normalize scores to create probability weights\n    const totalScore = scoredTiles.reduce((sum, tile) => sum + tile.score, 0);\n\n    if (totalScore <= 0) {\n      // Fallback to uniform distribution if all scores are 0\n      const randomIndex = Math.floor(\n        Random.rand() * this.availableTiles.length,\n      );\n      return this.availableTiles.splice(randomIndex, 1)[0];\n    }\n\n    // Perform weighted random selection\n    const randomValue = Random.rand() * totalScore;\n    let cumulativeScore = 0;\n\n    for (const tile of scoredTiles) {\n      cumulativeScore += tile.score;\n      if (cumulativeScore >= randomValue) {\n        return tile.position;\n      }\n    }\n\n    // Fallback to last tile\n    return scoredTiles[scoredTiles.length - 1].position;\n  }\n\n  /**\n   * Calculates the score for a tile based on its proximity to placed entities\n   */\n  private calculateTileScore(tile: { x: number; y: number }): number {\n    let score = this.options.baseScore;\n\n    for (const placed of this.placedPositions) {\n      const distance = this.calculateDistance(tile, placed);\n\n      if (distance <= this.options.maxInfluenceDistance) {\n        // Use inverse power function for falloff\n        const influence = 1 / Math.pow(distance, this.options.falloffExponent);\n        score += influence;\n      }\n    }\n\n    return score;\n  }\n\n  /**\n   * Calculates Euclidean distance between two positions\n   */\n  private calculateDistance(\n    pos1: { x: number; y: number },\n    pos2: { x: number; y: number },\n  ): number {\n    const dx = pos1.x - pos2.x;\n    const dy = pos1.y - pos2.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n","// #region imports\r\nimport { Wall } from \"../tile/wall\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Floor } from \"../tile/floor\";\r\nimport { Direction, Game, LevelState } from \"../game\";\r\nimport { Door, DoorType } from \"../tile/door\";\r\nimport { Tile, SkinType } from \"../tile/tile\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { Entity, EntityType } from \"../entity/entity\";\r\nimport { Chest } from \"../entity/object/chest\";\r\nimport { Item } from \"../item/item\";\r\nimport { GoldenKey } from \"../item/goldenKey\";\r\nimport { SpawnFloor } from \"../tile/spawnfloor\";\r\nimport { Spike } from \"../tile/spike\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { Barrel } from \"../entity/object/barrel\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Armor } from \"../item/armor\";\r\nimport { Particle } from \"../particle/particle\";\r\nimport { Projectile } from \"../projectile/projectile\";\r\nimport { SpikeTrap } from \"../tile/spiketrap\";\r\nimport { FountainTile } from \"../tile/fountainTile\";\r\nimport { CoffinTile } from \"../tile/coffinTile\";\r\nimport { PottedPlant } from \"../entity/object/pottedPlant\";\r\nimport { InsideLevelDoor } from \"../tile/insideLevelDoor\";\r\nimport { Button } from \"../tile/button\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\nimport { UpLadder } from \"../tile/upLadder\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { CoalResource } from \"../entity/resource/coalResource\";\r\nimport { GoldResource } from \"../entity/resource/goldResource\";\r\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\r\nimport { Chasm } from \"../tile/chasm\";\r\nimport { Spawner } from \"../entity/enemy/spawner\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\nimport { WallTorch } from \"../tile/wallTorch\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\r\nimport { Shotgun } from \"../item/weapon/shotgun\";\r\nimport { Heart } from \"../item/usable/heart\";\r\nimport { Spear } from \"../item/weapon/spear\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { Player, PlayerDirection } from \"../player/player\";\r\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Lantern } from \"../item/light/lantern\";\r\nimport { DualDagger } from \"../item/weapon/dualdagger\";\r\nimport { Pot } from \"../entity/object/pot\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { Rock } from \"../entity/resource/rockResource\";\r\nimport { Mushrooms } from \"../entity/object/mushrooms\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { TombStone } from \"../entity/object/tombStone\";\r\nimport { Pumpkin } from \"../entity/object/pumpkin\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { ReverbEngine } from \"../sound/reverb\";\r\nimport { astar } from \"../utility/astarclass\";\r\nimport { Level } from \"../level/level\";\r\nimport { Warhammer } from \"../item/weapon/warhammer\";\r\nimport { Spellbook } from \"../item/weapon/spellbook\";\r\nimport { Torch } from \"../item/light/torch\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { BeamEffect } from \"../projectile/beamEffect\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { Pickaxe } from \"../item/tool/pickaxe\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { Puddle } from \"../tile/decorations/puddle\";\r\nimport { Decoration } from \"../tile/decorations/decoration\";\r\nimport { Bomb } from \"../entity/object/bomb\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Block } from \"../entity/object/block\";\r\nimport { Bestiary } from \"../game/bestiary\";\r\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\r\nimport { MummyEnemy } from \"../entity/enemy/mummyEnemy\";\r\nimport { SpiderEnemy } from \"../entity/enemy/spiderEnemy\";\r\nimport { RoomBuilder } from \"./roomBuilder\";\r\nimport { BigZombieEnemy } from \"../entity/enemy/bigZombieEnemy\";\r\nimport { Bush } from \"../entity/object/bush\";\r\nimport { Sprout } from \"../entity/object/sprout\";\r\nimport { Candle } from \"../item/light/candle\";\r\nimport { GlowBugEnemy } from \"../entity/enemy/glowBugEnemy\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport { ItemGroup } from \"../item/itemGroup\";\r\nimport { Sword } from \"../item/weapon/sword\";\r\nimport { WebGLBlurRenderer } from \"../gui/webglBlurRenderer\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { Tree } from \"../entity/object/tree\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { WardenEnemy } from \"../entity/enemy/wardenEnemy\";\r\nimport { CrusherEnemy } from \"../entity/enemy/crusherEnemy\";\r\nimport { PawnEnemy } from \"../entity/enemy/pawnEnemy\";\r\nimport { BeetleEnemy } from \"../entity/enemy/beetleEnemy\";\r\nimport { BigFrogEnemy } from \"../entity/enemy/bigFrogEnemy\";\r\nimport { Key } from \"../item/key\";\r\nimport { ExalterEnemy } from \"../entity/enemy/exalterEnemy\";\r\n\r\n// #endregion\r\n\r\n// #region Enums & Interfaces\r\n/**\r\n * Enumeration of available enemy types.\r\n */\r\nexport enum EnemyType {\r\n  crab = \"crab\",\r\n  frog = \"frog\",\r\n  zombie = \"zombie\",\r\n  skull = \"skull\",\r\n  energyWizard = \"energywizard\",\r\n  charge = \"charge\",\r\n  rook = \"rook\",\r\n  bishop = \"bishop\",\r\n  armoredzombie = \"armoredzombie\",\r\n  bigskull = \"bigskull\",\r\n  queen = \"queen\",\r\n  knight = \"knight\",\r\n  bigknight = \"bigknight\",\r\n  firewizard = \"firewizard\",\r\n  spawner = \"spawner\",\r\n  occultist = \"occultist\",\r\n  bomb = \"bomb\",\r\n  armoredskull = \"armoredskull\",\r\n  mummy = \"mummy\",\r\n  spider = \"spider\",\r\n  bigzombie = \"bigzombie\",\r\n  glowbug = \"glowbug\",\r\n  tree = \"tree\",\r\n  tombStone = \"tombstone\",\r\n  warden = \"warden\",\r\n  crusher = \"crusher\",\r\n  pawn = \"pawn\",\r\n  beetle = \"beetle\",\r\n  bigfrog = \"bigfrog\",\r\n  exalter = \"exalter\",\r\n  // Add other enemy types here\r\n}\r\n\r\n/**\r\n * Mapping of enemy types to their corresponding classes.\r\n */\r\nexport const EnemyTypeMap: { [key in EnemyType]: EnemyStatic } = {\r\n  [EnemyType.crab]: CrabEnemy,\r\n  [EnemyType.frog]: FrogEnemy,\r\n  [EnemyType.zombie]: ZombieEnemy,\r\n  [EnemyType.skull]: SkullEnemy,\r\n  [EnemyType.energyWizard]: EnergyWizardEnemy,\r\n  [EnemyType.charge]: ChargeEnemy,\r\n  [EnemyType.rook]: RookEnemy,\r\n  [EnemyType.bishop]: BishopEnemy,\r\n  [EnemyType.armoredzombie]: ArmoredzombieEnemy,\r\n  [EnemyType.bigskull]: BigSkullEnemy,\r\n  [EnemyType.queen]: QueenEnemy,\r\n  [EnemyType.knight]: KnightEnemy,\r\n  [EnemyType.bigknight]: BigKnightEnemy,\r\n  [EnemyType.firewizard]: FireWizardEnemy,\r\n  [EnemyType.spawner]: Spawner,\r\n  [EnemyType.occultist]: OccultistEnemy,\r\n  [EnemyType.bomb]: Bomb,\r\n  [EnemyType.armoredskull]: ArmoredSkullEnemy,\r\n  [EnemyType.mummy]: MummyEnemy,\r\n  [EnemyType.spider]: SpiderEnemy,\r\n  [EnemyType.bigzombie]: BigZombieEnemy,\r\n  [EnemyType.glowbug]: GlowBugEnemy,\r\n  [EnemyType.tree]: Tree,\r\n  [EnemyType.tombStone]: TombStone,\r\n  [EnemyType.warden]: WardenEnemy,\r\n  [EnemyType.crusher]: CrusherEnemy,\r\n  [EnemyType.pawn]: PawnEnemy,\r\n  [EnemyType.beetle]: BeetleEnemy,\r\n  [EnemyType.bigfrog]: BigFrogEnemy,\r\n  [EnemyType.exalter]: ExalterEnemy,\r\n  // Add other enemy mappings here\r\n};\r\n\r\nexport enum RoomType {\r\n  START = \"START\",\r\n  DUNGEON = \"DUNGEON\",\r\n  BOSS = \"BOSS\",\r\n  BIGDUNGEON = \"BIGDUNGEON\",\r\n  TREASURE = \"TREASURE\",\r\n  FOUNTAIN = \"FOUNTAIN\",\r\n  COFFIN = \"COFFIN\",\r\n  GRASS = \"GRASS\",\r\n  PUZZLE = \"PUZZLE\",\r\n  KEYROOM = \"KEYROOM\",\r\n  CHESSBOARD = \"CHESSBOARD\",\r\n  MAZE = \"MAZE\",\r\n  CORRIDOR = \"CORRIDOR\",\r\n  SPIKECORRIDOR = \"SPIKECORRIDOR\",\r\n  UPLADDER = \"UPLADDER\",\r\n  DOWNLADDER = \"DOWNLADDER\",\r\n  SHOP = \"SHOP\",\r\n  BIGCAVE = \"BIGCAVE\",\r\n  CAVE = \"CAVE\",\r\n  SPAWNER = \"SPAWNER\",\r\n  ROPEHOLE = \"ROPEHOLE\",\r\n  ROPECAVE = \"ROPECAVE\",\r\n  TUTORIAL = \"TUTORIAL\",\r\n  GRAVEYARD = \"GRAVEYARD\",\r\n  FOREST = \"FOREST\",\r\n  ROPEUP = \"ROPEUP\",\r\n}\r\n\r\nexport enum TurnState {\r\n  playerTurn,\r\n  computerTurn,\r\n}\r\n\r\nexport interface WallInfo {\r\n  isTopWall: boolean;\r\n  isBottomWall: boolean;\r\n  isLeftWall: boolean;\r\n  isRightWall: boolean;\r\n  isInnerWall: boolean;\r\n  isBelowDoorWall: boolean;\r\n  isDoorWall: boolean;\r\n  innerWallType: string | null;\r\n  shouldDrawBottom: boolean;\r\n  isAboveDoorWall: boolean;\r\n}\r\n\r\nexport enum WallDirection {\r\n  NORTH = \"North\",\r\n  EAST = \"East\",\r\n  SOUTH = \"South\",\r\n  WEST = \"West\",\r\n  TOPLEFT = \"TopLeft\",\r\n  TOPRIGHT = \"TopRight\",\r\n  BOTTOMLEFT = \"BottomLeft\",\r\n  BOTTOMRIGHT = \"BottomRight\",\r\n}\r\n\r\nexport interface EnemyStatic {\r\n  add(room: Room, game: Game, x: number, y: number, ...rest: any[]): void;\r\n}\r\n\r\n// #endregion\r\n\r\n// Add this interface after the existing interfaces\r\ninterface BlurCache {\r\n  color6px: HTMLCanvasElement | null;\r\n  color12px: HTMLCanvasElement | null;\r\n  shade5px: HTMLCanvasElement | null;\r\n  bloom8px: HTMLCanvasElement | null;\r\n  color8px: HTMLCanvasElement | null;\r\n  isValid: boolean;\r\n  lastLightingUpdate: number;\r\n}\r\n\r\nexport class Room {\r\n  globalId: string;\r\n  // Path identifier to group rooms that belong to the same path/sidepath\r\n  pathId: string;\r\n  roomArray: Tile[][];\r\n\r\n  softVis: number[][]; // this is the one we use for drawing (includes smoothing)\r\n  vis: number[][]; // visibility ranges from 0 (fully visible) to 1 (fully black)\r\n  softCol: [number, number, number][][];\r\n  col: [number, number, number][][];\r\n  renderBuffer: [number, number, number, number][][][]; // Array of color arrays (r,g,b,alpha) for each x,y position\r\n  oldVis: number[][];\r\n  oldCol: [number, number, number][][];\r\n\r\n  entities: Array<Entity>;\r\n  deadEntities: Array<Entity>;\r\n  items: Array<Item>;\r\n  doors: Array<Door>; // (Door | BottomDoor) just a reference for mapping, still access through levelArray\r\n  projectiles: Array<Projectile>;\r\n  particles: Array<Particle>;\r\n  hitwarnings: Array<HitWarning>;\r\n  private colorOffscreenCanvas: HTMLCanvasElement;\r\n  private colorOffscreenCtx: CanvasRenderingContext2D;\r\n\r\n  private shadeOffscreenCanvas: HTMLCanvasElement;\r\n  private shadeOffscreenCtx: CanvasRenderingContext2D;\r\n  // Temporary canvas used when Canvas2D filter blur is required for sliced drawing\r\n  private shadeBlurTempCanvas?: HTMLCanvasElement;\r\n  private shadeBlurTempCtx?: CanvasRenderingContext2D;\r\n  // Temporary canvas to apply per-slice gradient masking (post-blur) efficiently\r\n  private shadeSliceTempCanvas?: HTMLCanvasElement;\r\n  private shadeSliceTempCtx?: CanvasRenderingContext2D;\r\n  // Border tiles around shade content for sliced shading (ensures blur has room to spill)\r\n  private shadeSliceBorderTiles: number = 1;\r\n  private bloomOffscreenCanvas: HTMLCanvasElement;\r\n  private bloomOffscreenCtx: CanvasRenderingContext2D;\r\n\r\n  currentSpawnerCount: number;\r\n\r\n  game: Game;\r\n  roomX: number;\r\n  roomY: number;\r\n  width: number;\r\n  height: number;\r\n  type: RoomType;\r\n  depth: number;\r\n  mapGroup: number;\r\n  name: string = \"\";\r\n  message: string;\r\n  turn: TurnState;\r\n  playerTurnTime: number;\r\n  playerTicked: Player;\r\n  skin: SkinType;\r\n  entered: boolean; // has the player entered this level\r\n  lightSources: Array<LightSource>;\r\n  shadeColor = \"#000000\";\r\n  innerWalls: Array<Wall>;\r\n  wallInfo: Map<string, WallInfo> = new Map();\r\n  savePoint: Room;\r\n  lastEnemyCount: number;\r\n  outerWalls: Array<Wall>;\r\n  level: Level;\r\n  id: number;\r\n  tunnelDoor: Door = null; // this is the door that connects the start room to the exit room\r\n  active: boolean;\r\n  onScreen: boolean;\r\n  lastLightingUpdate: number;\r\n  walls: Array<Wall>;\r\n  decorations: Array<Decoration>;\r\n  blurOffsetX: number = 5;\r\n  blurOffsetY: number = 5;\r\n  lastDraw: number = 0;\r\n  drawTimestamp: number = 0;\r\n  drawInterval: number = 4;\r\n  builder: RoomBuilder;\r\n  envType: EnvType;\r\n  keyPathDots: Array<{ x: number; y: number }>;\r\n\r\n  // Add a list to keep track of BeamEffect instances\r\n  beamEffects: BeamEffect[] = [];\r\n\r\n  // Add this property to track created mask canvases\r\n  private maskCanvases: HTMLCanvasElement[] = [];\r\n\r\n  // Add blur cache property\r\n  private blurCache: BlurCache = {\r\n    color6px: null,\r\n    color12px: null,\r\n    shade5px: null,\r\n    bloom8px: null,\r\n    color8px: null,\r\n    isValid: false,\r\n    lastLightingUpdate: 0,\r\n  };\r\n  private isUpdatingLighting: boolean = false;\r\n  // Estimated number of tiles touched during lighting for dynamic tuning\r\n  estimatedLightingTiles: number = 0;\r\n\r\n  constructor(\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    type: RoomType,\r\n    depth: number,\r\n    mapGroup: number,\r\n    level: Level,\r\n    rand = Random.rand,\r\n    envType: EnvType,\r\n  ) {\r\n    this.globalId = IdGenerator.generate(\"R\");\r\n    this.pathId = \"main\";\r\n    this.game = game;\r\n    this.roomX = x; //Math.floor(- this.width / 2);\r\n    this.roomY = y; //Math.floor(- this.height / 2);\r\n    this.width = w;\r\n    this.height = h;\r\n    this.type = type;\r\n    this.depth = depth;\r\n    this.mapGroup = mapGroup;\r\n\r\n    this.entered = false;\r\n    this.turn = TurnState.playerTurn;\r\n    this.playerTurnTime = Date.now();\r\n\r\n    this.items = Array<Item>();\r\n    this.projectiles = Array<Projectile>();\r\n    this.hitwarnings = Array<HitWarning>();\r\n    this.particles = Array<Particle>();\r\n    this.doors = Array<Door>();\r\n    this.entities = Array<Entity>();\r\n    this.lightSources = Array<LightSource>();\r\n    this.innerWalls = Array<Wall>();\r\n    this.level = level;\r\n    this.id = 0;\r\n    this.currentSpawnerCount = 0;\r\n    this.deadEntities = Array<Entity>();\r\n    this.active = false;\r\n    this.lastLightingUpdate = 0;\r\n    this.walls = Array<Wall>();\r\n    this.decorations = Array<Decoration>();\r\n    // Initialize Color Offscreen Canvas\r\n    this.colorOffscreenCanvas = document.createElement(\"canvas\");\r\n    this.colorOffscreenCanvas.width =\r\n      (this.width + 10) * GameConstants.TILESIZE;\r\n    this.colorOffscreenCanvas.height =\r\n      (this.height + 10) * GameConstants.TILESIZE;\r\n    const colorCtx = this.colorOffscreenCanvas.getContext(\"2d\");\r\n    if (!colorCtx) {\r\n      throw new Error(\"Failed to initialize color offscreen canvas context.\");\r\n    }\r\n    this.colorOffscreenCtx = colorCtx;\r\n\r\n    // Initialize Shade Offscreen Canvas\r\n    this.shadeOffscreenCanvas = document.createElement(\"canvas\");\r\n    this.shadeOffscreenCanvas.width =\r\n      (this.width + 10) * GameConstants.TILESIZE;\r\n    this.shadeOffscreenCanvas.height =\r\n      (this.height + 10) * GameConstants.TILESIZE;\r\n    const shadeCtx = this.shadeOffscreenCanvas.getContext(\"2d\");\r\n    if (!shadeCtx) {\r\n      throw new Error(\"Failed to initialize shade offscreen canvas context.\");\r\n    }\r\n    this.shadeOffscreenCtx = shadeCtx;\r\n\r\n    // Initialize Bloom Offscreen Canvas\r\n    this.bloomOffscreenCanvas = document.createElement(\"canvas\");\r\n    this.bloomOffscreenCanvas.width =\r\n      (this.width + 10) * GameConstants.TILESIZE;\r\n    this.bloomOffscreenCanvas.height =\r\n      (this.height + 10) * GameConstants.TILESIZE;\r\n    const bloomCtx = this.bloomOffscreenCanvas.getContext(\"2d\");\r\n    if (!bloomCtx) {\r\n      throw new Error(\"Failed to initialize bloom offscreen canvas context.\");\r\n    }\r\n    this.bloomOffscreenCtx = bloomCtx;\r\n\r\n    // #region initialize arrays\r\n\r\n    //initialize room array\r\n\r\n    this.roomArray = [];\r\n    for (let x = this.roomX - 1; x < this.roomX + this.width + 1; x++) {\r\n      this.roomArray[x] = [];\r\n      for (let y = this.roomY - 1; y < this.roomY + this.height + 1; y++) {\r\n        this.roomArray[x][y] = null;\r\n      }\r\n    }\r\n\r\n    //initialize visibility & color arrays, as well as their soft variants\r\n    this.vis = [];\r\n    this.softVis = [];\r\n    this.col = [];\r\n    this.softCol = [];\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      this.vis[x] = [];\r\n      this.softVis[x] = [];\r\n      this.col[x] = [];\r\n      this.softCol[x] = [];\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.vis[x][y] = 1;\r\n        this.softVis[x][y] = 1;\r\n        this.col[x][y] = [0, 0, 0];\r\n        this.softCol[x][y] = [0, 0, 0];\r\n      }\r\n    }\r\n\r\n    //initialize the render buffer array\r\n    this.renderBuffer = [];\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      this.renderBuffer[x] = [];\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.renderBuffer[x][y] = [];\r\n      }\r\n    }\r\n\r\n    //initialize the skin for the given environment\r\n    this.envType = envType;\r\n    this.skin = envType as unknown as SkinType;\r\n    /*\r\n    if (this.type === RoomType.ROPECAVE || this.type === RoomType.CAVE) {\r\n      this.skin = SkinType.CAVE;\r\n    }\r\n    if (this.type === RoomType.ROPEUP || this.type === RoomType.FOREST) {\r\n      this.skin = SkinType.FOREST;\r\n    }\r\n    */\r\n\r\n    this.builder = new RoomBuilder(this);\r\n\r\n    // #endregion\r\n  }\r\n\r\n  // #region TILE ADDING METHODS\r\n\r\n  removeWall = (x: number, y: number) => {\r\n    if (this.roomArray[x][y] instanceof Wall) {\r\n      this.roomArray[x][y] = null;\r\n    }\r\n    //this.innerWalls = this.innerWalls.filter((w) => w.x !== x && w.y !== y);\r\n    //this.outerWalls = this.outerWalls.filter((w) => w.x !== x && w.y !== y);\r\n  };\r\n\r\n  private addDoorTorches(x: number, y: number, doorDir: Direction) {\r\n    if (doorDir !== Direction.UP && doorDir !== Direction.DOWN) {\r\n      return;\r\n    }\r\n\r\n    if (x && y) {\r\n      this.calculateWallInfo();\r\n      const leftWallInfo = this.wallInfo.get(`${x - 1},${y}`);\r\n      const rightWallInfo = this.wallInfo.get(`${x + 1},${y}`);\r\n      const leftTile = this.roomArray[x - 1]?.[y];\r\n      const rightTile = this.roomArray[x + 1]?.[y];\r\n      const leftOpen = leftWallInfo?.isLeftWall === false;\r\n      const rightOpen = rightWallInfo?.isRightWall === false;\r\n\r\n      if (leftOpen) {\r\n        this.roomArray[x - 1][y] = new WallTorch(this, x - 1, y);\r\n      }\r\n\r\n      if (rightOpen) {\r\n        this.roomArray[x + 1][y] = new WallTorch(this, x + 1, y);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addTorches(\r\n    numTorches: number,\r\n    rand: () => number,\r\n    placeX?: number,\r\n    placeY?: number,\r\n  ) {\r\n    if (\r\n      this.level.environment.type === EnvType.FOREST &&\r\n      this.type !== RoomType.DOWNLADDER\r\n    )\r\n      return;\r\n\r\n    if (\r\n      placeX !== undefined &&\r\n      placeY !== undefined &&\r\n      this.roomArray[placeX]?.[placeY] instanceof Wall\r\n    ) {\r\n      this.roomArray[placeX][placeY] = new WallTorch(this, placeX, placeY);\r\n\r\n      return;\r\n    }\r\n\r\n    let walls = [];\r\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\r\n      for (let yy = this.roomY; yy < this.roomY + this.height - 1; yy++) {\r\n        if (\r\n          this.roomArray[xx][yy] instanceof Wall &&\r\n          !(this.roomArray[xx][yy + 1] instanceof Wall)\r\n        ) {\r\n          walls.push(this.roomArray[xx][yy]);\r\n        }\r\n      }\r\n    }\r\n    let bottomWalls = [];\r\n    // Separate loop for bottom wall\r\n    for (let xx = this.roomX + 1; xx < this.roomX + this.width - 2; xx++) {\r\n      const yy = this.roomY + this.height - 1; // Bottom wall\r\n      if (\r\n        this.roomArray[xx][yy] instanceof Wall &&\r\n        !(this.roomArray[xx][yy + 1] instanceof Wall)\r\n      ) {\r\n        bottomWalls.push(this.roomArray[xx][yy]);\r\n      }\r\n    }\r\n\r\n    // Randomly distribute torches between walls and bottom walls\r\n    const wallTorches = Game.rand(0, numTorches, rand);\r\n    const bottomWallTorches = numTorches - wallTorches;\r\n\r\n    for (let i = 0; i < wallTorches; i++) {\r\n      if (walls.length == 0) break;\r\n      const randomIndex = Game.rand(0, walls.length - 1, rand);\r\n      const t = walls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      this.roomArray[x][y] = new WallTorch(this, x, y);\r\n    }\r\n    for (let i = 0; i < bottomWallTorches; i++) {\r\n      if (bottomWalls.length == 0) break;\r\n      const randomIndex = Game.rand(0, bottomWalls.length - 1, rand);\r\n      const t = bottomWalls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      this.roomArray[x][y] = new WallTorch(this, x, y, true);\r\n    }\r\n  }\r\n\r\n  private addChasms(rand: () => number) {\r\n    // add chasms\r\n    let w = Game.rand(2, 4, rand);\r\n    let h = Game.rand(2, 4, rand);\r\n    let xmin = this.roomX + 2;\r\n    let xmax = this.roomX + this.width - w - 2;\r\n    let ymin = this.roomY + 2;\r\n    let ymax = this.roomY + this.height - h - 2;\r\n    if (xmax < xmin || ymax < ymin) return;\r\n    let x = Game.rand(xmin, xmax, rand);\r\n    let y = Game.rand(ymin, ymax, rand);\r\n\r\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\r\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\r\n        // add a floor border\r\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\r\n          if (!(this.roomArray[xx][yy] instanceof SpawnFloor))\r\n            this.roomArray[xx][yy] = new Floor(this, xx, yy);\r\n        } else\r\n          this.roomArray[xx][yy] = new Chasm(\r\n            this,\r\n            xx,\r\n            yy,\r\n            xx === x,\r\n            xx === x + w - 1,\r\n            yy === y,\r\n            yy === y + h - 1,\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  addDoor = (\r\n    x: number,\r\n    y: number,\r\n    room: Room = this,\r\n    tunnelDoor: boolean = false,\r\n  ) => {\r\n    let d;\r\n    let t = DoorType.DOOR;\r\n    if (room.type === RoomType.BOSS) t = DoorType.GUARDEDDOOR;\r\n    if (room.type === RoomType.KEYROOM) t = DoorType.LOCKEDDOOR;\r\n    if (tunnelDoor) t = DoorType.TUNNELDOOR;\r\n    if (x === room.roomX) {\r\n      d = new Door(room, room.game, x, y, Direction.RIGHT, t);\r\n      room.roomArray[x + 1][y] = new SpawnFloor(room, x + 1, y);\r\n    } else if (x === room.roomX + room.width - 1) {\r\n      d = new Door(room, room.game, x, y, Direction.LEFT, t);\r\n      room.roomArray[x - 1][y] = new SpawnFloor(room, x - 1, y);\r\n    } else if (y === room.roomY) {\r\n      d = new Door(room, room.game, x, y, Direction.UP, t);\r\n      room.roomArray[x][y + 1] = new SpawnFloor(room, x, y + 1);\r\n    } else if (y === room.roomY + room.height - 1) {\r\n      d = new Door(room, room.game, x, y, Direction.DOWN, t);\r\n      room.roomArray[x][y - 1] = new SpawnFloor(room, x, y - 1);\r\n    }\r\n\r\n    if (tunnelDoor) {\r\n      room.tunnelDoor = d;\r\n    }\r\n\r\n    room.doors.push(d);\r\n    if (room.roomArray[d.x] == undefined) {\r\n      //console.log(\"door not added\");\r\n    }\r\n    room.roomArray[d.x][d.y] = d;\r\n\r\n    return d;\r\n  };\r\n\r\n  // ... start of file ...\r\n\r\n  private addSpikeTraps(numSpikes: number, rand: () => number) {\r\n    if (\r\n      this.level.environment.type === EnvType.FOREST ||\r\n      this.envType === EnvType.FOREST\r\n    )\r\n      return;\r\n    // add spikes\r\n    let tiles = this.getEmptyTiles();\r\n    for (let i = 0; i < numSpikes; i++) {\r\n      const { x, y } = this.getRandomEmptyPosition(tiles);\r\n      this.roomArray[x][y] = new SpikeTrap(this, x, y);\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region ADDING ENTITIES\r\n\r\n  // Function to add enemies to the room\r\n  private addEnemies(numEnemies: number, rand: () => number) {\r\n    if (GameplaySettings.NO_ENEMIES === true) return;\r\n    if (this.envType === EnvType.FOREST) numEnemies /= 2;\r\n    // Get all empty tiles in the room\r\n    let tiles = this.getEmptyTiles();\r\n    if (tiles === null) return;\r\n    //don't put enemies near the entrances so you don't get screwed instantly\r\n\r\n    // Create a Set to store coordinates that should be excluded\r\n    const excludedCoords = new Set<string>();\r\n\r\n    // For each door, add coordinates in a 5x5 area around it to excluded set\r\n    for (const door of this.doors) {\r\n      for (let dx = -2; dx <= 2; dx++) {\r\n        for (let dy = -2; dy <= 2; dy++) {\r\n          excludedCoords.add(`${door.x + dx},${door.y + dy}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Filter tiles that aren't in the excluded set\r\n    tiles = tiles.filter((tile) => !excludedCoords.has(`${tile.x},${tile.y}`));\r\n    // Loop through the number of enemies to be added\r\n    for (let i = 0; i < numEnemies; i++) {\r\n      let rerolls = 1;\r\n\r\n      if (tiles.length === 0) {\r\n        console.warn(`No tiles left to spawn enemies`);\r\n        break;\r\n      }\r\n      let emptyTiles = this.getRandomEmptyPosition(tiles);\r\n      if (emptyTiles.x === null || emptyTiles.y === null) {\r\n        i = numEnemies;\r\n        break;\r\n      }\r\n      const { x, y } = emptyTiles;\r\n\r\n      // Define the enemy tables for each depth level\r\n      let tables = this.level.enemyParameters.enemyTables;\r\n      // Define the maximum depth level\r\n      let max_depth_table = this.level.enemyParameters.maxDepthTable;\r\n      // Get the current depth level, capped at the maximum\r\n      let d = Math.min(this.depth, max_depth_table);\r\n      // If there is a table for the current depth level\r\n      if (tables[d] && tables[d].length > 0) {\r\n        // Function to add an enemy to the room\r\n        let addEnemy = (enemy: Entity): boolean => {\r\n          // Check if the enemy overlaps with any other enemies\r\n          for (let xx = 0; xx < enemy.w; xx++) {\r\n            for (let yy = 0; yy < enemy.h; yy++) {\r\n              if (!tiles.some((tt) => tt.x === x + xx && tt.y === y + yy)) {\r\n                // If it does, increment the enemy count and return false\r\n                numEnemies++;\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          // If it doesn't, add the enemy to the room, remove the tiles used from the available pool, and return true\r\n          this.entities.push(enemy);\r\n          for (let xx = 0; xx < enemy.w; xx++) {\r\n            for (let yy = 0; yy < enemy.h; yy++) {\r\n              tiles = tiles.filter((t) => !(t.x === x + xx && t.y === y + yy));\r\n            }\r\n          }\r\n          return true;\r\n        };\r\n\r\n        // Randomly select an enemy type from the table\r\n        let type = Game.randTable(tables[d], Random.rand);\r\n\r\n        switch (type) {\r\n          case 1:\r\n            CrabEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 2:\r\n            FrogEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 3:\r\n            ZombieEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 4:\r\n            SkullEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 5:\r\n            EnergyWizardEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 6:\r\n            ChargeEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 7:\r\n            RookEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 8:\r\n            BishopEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 9:\r\n            ArmoredzombieEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 10:\r\n            if (addEnemy(new BigSkullEnemy(this, this.game, x, y))) {\r\n              // clear out some space\r\n              for (let xx = 0; xx < 2; xx++) {\r\n                for (let yy = 0; yy < 2; yy++) {\r\n                  this.roomArray[x + xx][y + yy] = new Floor(\r\n                    this,\r\n                    x + xx,\r\n                    y + yy,\r\n                  ); // remove any walls\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case 11:\r\n            QueenEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 12:\r\n            KnightEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 13:\r\n            if (addEnemy(new BigKnightEnemy(this, this.game, x, y))) {\r\n              // clear out some space\r\n              for (let xx = 0; xx < 2; xx++) {\r\n                for (let yy = 0; yy < 2; yy++) {\r\n                  this.roomArray[x + xx][y + yy] = new Floor(\r\n                    this,\r\n                    x + xx,\r\n                    y + yy,\r\n                  ); // remove any walls\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case 14:\r\n            ArmoredSkullEnemy.add(this, this.game, x, y);\r\n            break;\r\n          case 15:\r\n            FireWizardEnemy.add(this, this.game, x, y);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    let spawnerAmounts = [\r\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n      0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,\r\n      2, 2, 3, 3, 4, 5, 3,\r\n    ];\r\n    if (this.depth > 0) {\r\n      let spawnerAmount = Game.randTable(spawnerAmounts, rand);\r\n      //console.log(`Adding ${spawnerAmount} spawners`);\r\n      this.addSpawners(spawnerAmount, rand);\r\n    }\r\n    let occultistAmounts = [\r\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    ];\r\n    if (this.depth > 1) {\r\n      let occultistAmount = Game.randTable(occultistAmounts, rand);\r\n      //console.log(`Adding ${occultistAmount} occultists`);\r\n      this.addOccultists(occultistAmount, rand);\r\n    }\r\n  }\r\n\r\n  private addRandomEnemies() {\r\n    let numEmptyTiles = this.getEmptyTiles().length;\r\n    /*\r\n    let numEnemies = Math.ceil(\r\n      numEmptyTiles * Math.min(this.depth * 0.1 + 0.5, 0.15), //this.depth * 0.01 is starting value\r\n    );\r\n    */\r\n    const factor = Math.min((this.depth + 2) * 0.05, 0.3);\r\n    const numEnemies = Math.ceil(\r\n      Math.max(\r\n        Utils.randomNormalInt(0, numEmptyTiles * factor),\r\n        numEmptyTiles * factor,\r\n      ),\r\n    );\r\n    //if (numEnemies > numEmptyTiles / 2) numEnemies = numEmptyTiles / 2;\r\n    this.addEnemies(numEnemies, Random.rand);\r\n  }\r\n\r\n  private addSpawners(numSpawners: number, rand: () => number) {\r\n    let tiles = this.getEmptyTiles();\r\n    if (tiles === null) {\r\n      //console.log(`No tiles left to spawn spawners`);\r\n      return;\r\n    }\r\n    for (let i = 0; i < numSpawners; i++) {\r\n      const { x, y } = this.getRandomEmptyPosition(tiles);\r\n      let spawnTable = this.level.populator\r\n        .getEnemyPoolForDepth(Math.max(0, this.depth - 1))\r\n        .filter((t) => t !== 7);\r\n      const spawner = Spawner.add(this, this.game, x, y, spawnTable);\r\n      return spawner;\r\n    }\r\n  }\r\n  private addOccultists(numOccultists: number, rand: () => number) {\r\n    let tiles = this.getEmptyTiles();\r\n    if (tiles === null) {\r\n      //console.log(`No tiles left to spawn spawners`);\r\n      return;\r\n    }\r\n    for (let i = 0; i < numOccultists; i++) {\r\n      const { x, y } = this.getRandomEmptyPosition(tiles);\r\n      const occultist = OccultistEnemy.add(this, this.game, x, y);\r\n      return occultist;\r\n    }\r\n  }\r\n\r\n  private addBosses(depth: number) {\r\n    if (GameplaySettings.NO_ENEMIES === true) return;\r\n    let tiles = this.getEmptyTiles();\r\n    if (tiles === null) {\r\n      //console.log(`No tiles left to spawn spawners`);\r\n      return;\r\n    }\r\n\r\n    let bosses = [\"reaper\", \"queen\", \"bigskullenemy\", \"bigzombieenemy\"];\r\n    if (depth > 0) {\r\n      bosses.push(\"occultist\");\r\n      bosses.filter((b) => b !== \"queen\");\r\n    }\r\n    const boss = Game.randTable(bosses, Random.rand);\r\n\r\n    const { x, y } = boss.startsWith(\"big\")\r\n      ? this.getBigRandomEmptyPosition(tiles)\r\n      : this.getRandomEmptyPosition(tiles);\r\n\r\n    switch (boss) {\r\n      case \"reaper\":\r\n        const spawner = this.addSpawners(1, Random.rand);\r\n        spawner.dropTable = [\"weapon\", \"equipment\"];\r\n        spawner.dropChance = 1;\r\n        break;\r\n      case \"queen\":\r\n        const queen = QueenEnemy.add(this, this.game, x, y);\r\n        queen.dropTable = [\"weapon\", \"equipment\"];\r\n        queen.dropChance = 1;\r\n        break;\r\n      case \"bigskullenemy\":\r\n        const bigSkull = BigSkullEnemy.add(this, this.game, x, y);\r\n        bigSkull.dropTable = [\r\n          \"weapon\",\r\n          \"equipment\",\r\n          \"consumable\",\r\n          \"gem\",\r\n          \"tool\",\r\n        ];\r\n\r\n        break;\r\n      case \"occultist\":\r\n        const occultist = this.addOccultists(1, Random.rand);\r\n        occultist.dropTable = [\"weapon\", \"equipment\"];\r\n        occultist.dropChance = 1;\r\n\r\n        break;\r\n      case \"bigzombieenemy\":\r\n        const bigZombie = BigZombieEnemy.add(this, this.game, x, y);\r\n        bigZombie.dropTable = [\r\n          \"weapon\",\r\n          \"equipment\",\r\n          \"consumable\",\r\n          \"gem\",\r\n          \"tool\",\r\n        ];\r\n        bigZombie.dropChance = 1;\r\n        break;\r\n    }\r\n  }\r\n  //used for spawn commands, implement elsewhere later\r\n  /**\r\n   * Adds a new enemy to the room based on the provided enemy type string.\r\n   *\r\n   * @param enemyType - The string identifier for the enemy type.\r\n   */\r\n  addNewEnemy = (enemyType: EnemyType): void => {\r\n    const EnemyClass = EnemyTypeMap[enemyType];\r\n    if (!EnemyClass) {\r\n      console.error(`Enemy type \"${enemyType}\" is not recognized.`);\r\n      return;\r\n    }\r\n\r\n    const tiles = this.getEmptyTiles();\r\n    if (!tiles || tiles.length === 0) {\r\n      // console.log(`No tiles left to spawn enemies.`);\r\n      return;\r\n    }\r\n\r\n    let position = this.getRandomEmptyPosition(tiles);\r\n    if (!position) {\r\n      return;\r\n    }\r\n    let { x, y } = position;\r\n\r\n    if (enemyType === EnemyType.bigzombie) {\r\n      position = this.getBigRandomEmptyPosition(tiles);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      ({ x, y } = position);\r\n    }\r\n\r\n    EnemyClass.add(this, this.game, x, y);\r\n  };\r\n\r\n  addNewSpawner = (enemyType: EnemyType): void => {\r\n    const EnemyClass = EnemyTypeMap[enemyType];\r\n    if (!EnemyClass) {\r\n      //console.error(`Enemy type \"${enemyType}\" is not recognized.`);\r\n      return;\r\n    }\r\n\r\n    const tiles = this.getEmptyTiles();\r\n    if (!tiles || tiles.length === 0) {\r\n      // console.log(`No tiles left to spawn enemies.`);\r\n      return;\r\n    }\r\n\r\n    const { x, y } = this.getRandomEmptyPosition(tiles);\r\n    Spawner.add(this, this.game, x, y);\r\n  };\r\n\r\n  private addChests(numChests: number, rand: () => number) {\r\n    // add chests\r\n    let tiles = this.getEmptyTiles();\r\n    for (let i = 0; i < numChests; i++) {\r\n      const position = this.getRandomEmptyPosition(tiles);\r\n      if (!position) {\r\n        // No more empty tiles available, break out of loop\r\n        break;\r\n      }\r\n      const { x, y } = position;\r\n      this.entities.push(new Chest(this, this.game, x, y));\r\n    }\r\n  }\r\n\r\n  addBombs(numBombs: number, rand: () => number) {\r\n    let tiles = this.getEmptyTiles();\r\n    for (let i = 0; i < this.getEmptyTiles().length; i++) {\r\n      const { x, y } = this.getRandomEmptyPosition(tiles);\r\n      Bomb.add(this, this.game, x, y);\r\n    }\r\n  }\r\n\r\n  private addResources(numResources: number, rand: () => number) {\r\n    let tiles = this.getEmptyTiles();\r\n    for (let i = 0; i < numResources; i++) {\r\n      const { x, y } = this.getRandomEmptyPosition(tiles);\r\n\r\n      let r = rand();\r\n      if (r <= (10 - this.depth ** 3) / 10)\r\n        CoalResource.add(this, this.game, x, y);\r\n      else if (r <= (10 - (this.depth - 2) ** 3) / 10)\r\n        GoldResource.add(this, this.game, x, y);\r\n      else EmeraldResource.add(this, this.game, x, y);\r\n    }\r\n  }\r\n\r\n  private addVendingMachine(\r\n    rand: () => number,\r\n    placeX?: number,\r\n    placeY?: number,\r\n    item?: Item,\r\n  ) {\r\n    const pos = this.getRandomEmptyPosition(this.getEmptyTiles());\r\n\r\n    let x = placeX ? placeX : pos.x;\r\n    let y = placeY ? placeY : pos.y;\r\n\r\n    let table =\r\n      this.depth > 0\r\n        ? [\r\n            1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 3, 4, 5, 5, 5,\r\n            5, 5,\r\n          ]\r\n        : [1, 1, 1];\r\n    let type = Game.randTable(table, rand);\r\n    if (item) {\r\n      VendingMachine.add(this, this.game, x, y, item);\r\n      return;\r\n    }\r\n    switch (type) {\r\n      case 1:\r\n        VendingMachine.add(this, this.game, x, y, new Heart(this, x, y));\r\n        break;\r\n      case 2:\r\n        VendingMachine.add(this, this.game, x, y, new Candle(this, x, y));\r\n        break;\r\n      case 3:\r\n        VendingMachine.add(this, this.game, x, y, new Armor(this, x, y));\r\n        break;\r\n      case 4:\r\n        VendingMachine.add(this, this.game, x, y, new Spear(this, x, y));\r\n        break;\r\n      case 5:\r\n        VendingMachine.add(this, this.game, x, y, new Torch(this, x, y));\r\n        break;\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region ENTERING / EXITING ROOM METHODS\r\n\r\n  linkExitToStart = (startRoom?: Room) => {\r\n    //if (this.type === RoomType.ROPEHOLE) return;\r\n    if (!startRoom) startRoom = this.level.startRoom;\r\n    if (\r\n      this.addDoorWithOffset(\r\n        startRoom.roomX + Math.floor(startRoom.width / 2) + 1,\r\n        startRoom.roomY,\r\n        startRoom,\r\n        true,\r\n      ) &&\r\n      this.addDoorWithOffset(\r\n        this.roomX + Math.floor(this.width / 2) - 1,\r\n        this.roomY,\r\n        this,\r\n        true,\r\n      )\r\n    ) {\r\n      startRoom.tunnelDoor.startRoom = true;\r\n      this.tunnelDoor.linkedDoor = startRoom.tunnelDoor;\r\n      startRoom.tunnelDoor.linkedDoor = this.tunnelDoor;\r\n    }\r\n  };\r\n\r\n  exitLevel = () => {\r\n    //this.game.onResize(); // stupid hack to keep fps high\r\n\r\n    Game.shade_canvases = {};\r\n    Game.text_rendering_canvases = {};\r\n\r\n    for (let door of this.doors) {\r\n      if (!door || !door.linkedDoor) continue;\r\n      const ld = door.linkedDoor;\r\n      if (!ld.lightSource) continue;\r\n      if (!ld.room) continue;\r\n      if (!ld.room.active && ld.room.entered) {\r\n        ld.lightSource.b = 0;\r\n        ld.lightSource.r = 0;\r\n        // Update the linked room's lighting since we changed its door light\r\n        ld.room.updateLighting();\r\n      }\r\n    }\r\n    this.active = false;\r\n\r\n    this.updateLighting();\r\n\r\n    this.particles.splice(0, this.particles.length);\r\n    this.disableFuseSounds();\r\n  };\r\n\r\n  disableFuseSounds = () => {\r\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\r\n      //if (!bomb.soundPaused) {\r\n      //bomb.soundPaused = true;\r\n      const bomb = b as Bomb;\r\n      Sound.stopSound(bomb.fuseSound);\r\n      //}\r\n    }\r\n  };\r\n\r\n  enableFuseSounds = () => {\r\n    for (const b of this.entities.filter((e) => e instanceof Bomb)) {\r\n      //if (!bomb.soundPaused) {\r\n      //bomb.soundPaused = true;\r\n\r\n      const bomb = b as Bomb;\r\n      if (bomb.lit) {\r\n        Sound.playWithReverb(bomb.fuseSound);\r\n      }\r\n    }\r\n  };\r\n\r\n  onEnterRoom = (player: Player) => {\r\n    this.enableFuseSounds();\r\n    for (let room of this.level.rooms) {\r\n      room.roomOnScreen(player);\r\n    }\r\n\r\n    this.entered = true;\r\n\r\n    this.clearDeadStuff();\r\n    this.calculateWallInfo();\r\n    this.resetDoorLightSources();\r\n\r\n    this.particles = [];\r\n    this.syncKeyPathParticles();\r\n\r\n    this.alertEnemiesOnEntry();\r\n    this.message = this.name;\r\n    player.map.saveMapData();\r\n    this.setReverb();\r\n    this.active = true;\r\n    //this.invalidateBlurCache(); // Invalidate cache when room becomes active\r\n\r\n    this.updateLighting();\r\n  };\r\n\r\n  enterLevel = (player: Player, position?: { x: number; y: number }) => {\r\n    this.game.updateLevel(this);\r\n\r\n    // Prefer explicit entry position from ladder transition, then provided arg, then center\r\n    let ladderEntry = (this as any).__entryPositionFromLadder as\r\n      | { x: number; y: number }\r\n      | undefined;\r\n    if (ladderEntry) {\r\n      delete (this as any).__entryPositionFromLadder;\r\n    }\r\n    let roomCenter = ladderEntry || position || this.getRoomCenter();\r\n\r\n    if (this.roomArray[roomCenter.x][roomCenter.y].isSolid()) {\r\n      roomCenter = this.getRandomEmptyPosition(this.getEmptyTiles());\r\n    }\r\n\r\n    let x = roomCenter.x;\r\n    let y = roomCenter.y;\r\n\r\n    // If no explicit position given, try to position on a DownLadder tile if presentz\r\n    if (!position && !ladderEntry) {\r\n      for (let i = this.roomX; i < this.roomX + this.width; i++) {\r\n        for (let j = this.roomY; j < this.roomY + this.height; j++) {\r\n          const tile = this.roomArray[i]?.[j];\r\n          if (tile instanceof DownLadder) {\r\n            x = tile.x;\r\n            y = tile.y;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    player.moveSnap(x, y);\r\n    this.onEnterRoom(player);\r\n  };\r\n\r\n  enterLevelThroughDoor = (player: Player, door: Door, side?: number) => {\r\n    // console.log(door.linkedDoor.x, door.linkedDoor.y, door.x, door.y);\r\n    if (door.doorDir === door.linkedDoor.doorDir) {\r\n      door.opened = true;\r\n      player.moveSnap(door.x, door.y + 1);\r\n      setTimeout(() => {\r\n        player.direction = Direction.DOWN;\r\n      }, 150);\r\n    }\r\n    if (door instanceof Door && door.doorDir === Direction.UP) {\r\n      //if top door\r\n      door.opened = true;\r\n      player.moveNoSmooth(door.x, door.y + 1);\r\n    } else if (door instanceof Door && door.doorDir === Direction.DOWN) {\r\n      //if bottom door\r\n      player.moveNoSmooth(door.x, door.y - 1);\r\n    } else if (\r\n      door instanceof Door &&\r\n      [Direction.RIGHT, Direction.LEFT].includes(door.doorDir)\r\n    ) {\r\n      // if side door\r\n      player.moveNoSmooth(door.x + side, door.y);\r\n    }\r\n    this.onEnterRoom(player);\r\n  };\r\n\r\n  alertEnemiesOnEntry = () => {\r\n    for (const e of this.entities) {\r\n      if (e instanceof Enemy) e.lookForPlayer(false);\r\n    }\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region LOGIC METHODS\r\n\r\n  tick = (player: Player) => {\r\n    this.updateLighting();\r\n    player.updateSlowMotion();\r\n    this.syncKeyPathParticles();\r\n\r\n    this.lastEnemyCount = this.entities.filter(\r\n      (e) => e instanceof Enemy,\r\n    ).length;\r\n    for (const h of this.hitwarnings) {\r\n      h.tick();\r\n    }\r\n    for (const p of this.projectiles) {\r\n      p.tick();\r\n    }\r\n\r\n    this.clearDeadStuff();\r\n    this.calculateWallInfo();\r\n\r\n    this.entities = this.entities.filter((e) => !e.dead);\r\n\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.roomArray[x][y].tick();\r\n      }\r\n    }\r\n\r\n    this.turn = TurnState.computerTurn;\r\n\r\n    this.playerTurnTime = Date.now();\r\n    this.playerTicked = player;\r\n\r\n    this.updateLighting();\r\n    player.map.saveMapData();\r\n\r\n    this.clearDeadStuff();\r\n  };\r\n\r\n  computerTurn = () => {\r\n    // take computer turn\r\n    for (const e of this.entities) {\r\n      e.tick();\r\n    }\r\n    this.entities = this.entities.filter((e) => !e.dead);\r\n    for (const i of this.items) {\r\n      i.tick();\r\n    }\r\n\r\n    for (const p in this.game.players) {\r\n      for (const i of this.game.players[p].inventory.items) {\r\n        if (i) i.tick();\r\n      }\r\n    }\r\n\r\n    for (const h of this.hitwarnings) {\r\n      if (\r\n        !this.roomArray[h.x] ||\r\n        !this.roomArray[h.x][h.y] ||\r\n        this.roomArray[h.x][h.y].isSolid()\r\n      ) {\r\n        h.dead = true;\r\n      }\r\n      h.removeOverlapping();\r\n    }\r\n\r\n    for (const p of this.projectiles) {\r\n      if (\r\n        this.roomArray[p.x] &&\r\n        this.roomArray[p.x][p.y] &&\r\n        this.roomArray[p.x][p.y].isSolid()\r\n      )\r\n        p.dead = true;\r\n      for (const i in this.game.players) {\r\n        if (\r\n          (this.game.players[i] as any).getRoom?.() === this &&\r\n          p.x === this.game.players[i].x &&\r\n          p.y === this.game.players[i].y\r\n        ) {\r\n          p.hitPlayer(this.game.players[i]);\r\n        }\r\n      }\r\n      for (const e of this.entities) {\r\n        if (p.x === e.x && p.y === e.y) {\r\n          p.hitEnemy(e);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.roomArray[x][y].tickEnd();\r\n      }\r\n    }\r\n    this.entities = this.entities.filter((e) => !e.dead); // enemies may be killed by spiketrap\r\n\r\n    this.clearDeadStuff();\r\n\r\n    this.playerTicked.finishTick();\r\n\r\n    // After inventory ticks (keys update keyPathDots), sync key path particles\r\n\r\n    this.checkForNoEnemies();\r\n    //console.log(this.entities.filter((e) => e instanceof Enemy).length);\r\n\r\n    this.turn = TurnState.playerTurn;\r\n    this.updateLighting();\r\n  };\r\n\r\n  update = () => {\r\n    if (this.turn == TurnState.computerTurn) {\r\n      const delay = (this.game as any).replayManager?.isReplaying?.()\r\n        ? GameConstants.REPLAY_COMPUTER_TURN_DELAY\r\n        : LevelConstants.COMPUTER_TURN_DELAY;\r\n      if (Date.now() - this.playerTurnTime >= delay) {\r\n        this.computerTurn();\r\n      }\r\n    }\r\n  };\r\n\r\n  clearDeadStuff = () => {\r\n    this.deadEntities = this.deadEntities.filter((e) => e && !e.dead);\r\n    this.entities = this.entities.filter((e) => e && !e.dead);\r\n    this.projectiles = this.projectiles.filter((p) => p && !p.dead);\r\n    this.lightSources = this.lightSources.filter((ls) => ls && !ls.dead);\r\n    this.hitwarnings = this.hitwarnings.filter((h) => h && !h.dead);\r\n    this.particles = this.particles.filter((p) => p && !p.dead);\r\n  };\r\n\r\n  /**\r\n   * Aligns KeyPathParticles with `this.keyPathDots`. Adds particles for any\r\n   * positions missing a live particle and marks particles not on the path as dead.\r\n   */\r\n  syncKeyPathParticles = () => {\r\n    let hasKey = false;\r\n    let showPath = false;\r\n    for (const player of Object.values(this.game.players)) {\r\n      for (const i of player.inventory.items) {\r\n        if (i instanceof Key) {\r\n          i.updatePathToDoor();\r\n          hasKey = true;\r\n          showPath = i.showPath;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!hasKey) {\r\n      return;\r\n    }\r\n    const path = this.keyPathDots as\r\n      | Array<{ x: number; y: number }>\r\n      | undefined;\r\n    if (!path || path.length === 0 || !showPath) {\r\n      // When no path, mark existing key-path particles as dead\r\n      let had = false;\r\n      for (const p of this.particles) {\r\n        if (p.constructor?.name === \"KeyPathParticle\") {\r\n          p.dead = true;\r\n          had = true;\r\n        }\r\n      }\r\n      if (had || !showPath) return;\r\n    }\r\n\r\n    // Mark any existing KeyPathParticles not on the current path as dead\r\n    const positions = new Set<string>((path || []).map((p) => `${p.x},${p.y}`));\r\n    for (const p of this.particles) {\r\n      if (p.constructor?.name === \"KeyPathParticle\") {\r\n        const key = `${Math.floor(p.x)},${Math.floor(p.y + 0.25)}`; // reverse the y-offset used in ctor\r\n        if (!positions.has(key)) {\r\n          p.dead = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Add particles for any path positions lacking one\r\n    const hasParticleAt = (x: number, y: number): boolean => {\r\n      if (!showPath) return false;\r\n      for (const p of this.particles) {\r\n        if (\r\n          p.constructor?.name === \"KeyPathParticle\" &&\r\n          Math.floor(p.x) === x &&\r\n          Math.floor(p.y + 0.25) === y &&\r\n          !p.dead\r\n        )\r\n          return true;\r\n      }\r\n      return false;\r\n    };\r\n    if (!path || !showPath) return;\r\n    for (const pos of path) {\r\n      if (!hasParticleAt(pos.x, pos.y)) {\r\n        const particle =\r\n          new (require(\"../particle/keyPathParticle\").KeyPathParticle)(\r\n            pos.x,\r\n            pos.y,\r\n          );\r\n        particle.room = this;\r\n        this.particles.push(particle);\r\n        if (Math.random() < 0.1)\r\n          console.log(\r\n            `Room.syncKeyPathParticles: spawned at (${pos.x},${pos.y})`,\r\n          );\r\n      }\r\n    }\r\n  };\r\n\r\n  catchUp = () => {\r\n    if (this.turn === TurnState.computerTurn) this.computerTurn(); // player skipped computer's turn, catch up\r\n  };\r\n\r\n  tickHitWarnings = () => {\r\n    for (const h of this.hitwarnings) {\r\n      if (h.parent && (h.parent.dead || h.parent.unconscious)) {\r\n        h.tick();\r\n      }\r\n    }\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region LIGHTING METHODS\r\n\r\n  fadeLighting = (delta: number) => {\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        let visDiff = this.softVis[x][y] - this.vis[x][y];\r\n        let softVis = this.softVis[x][y];\r\n        let flag = false;\r\n        if (Math.abs(visDiff) > 0.01) flag = true;\r\n\r\n        if (!flag) continue;\r\n\r\n        visDiff *= 0.05 * delta;\r\n\r\n        softVis -= visDiff;\r\n\r\n        if (softVis < 0) softVis = 0;\r\n        if (softVis > 1) softVis = 1;\r\n\r\n        this.softVis[x][y] = softVis;\r\n\r\n        // if (this.softVis[x][y] < 0.01) this.softVis[x][y] = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  fadeRgb = (delta: number) => {\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        const [softR, softG, softB] = this.softCol[x][y];\r\n        const [targetR, targetG, targetB] = this.col[x][y];\r\n\r\n        // Calculate differences\r\n        let diffR = softR - targetR;\r\n        let diffG = softG - targetG;\r\n        let diffB = softB - targetB;\r\n\r\n        let flagR = false;\r\n        let flagG = false;\r\n        let flagB = false;\r\n        if (Math.abs(diffR) > 0.001) flagR = true;\r\n        if (Math.abs(diffG) > 0.001) flagG = true;\r\n        if (Math.abs(diffB) > 0.001) flagB = true;\r\n\r\n        if (!flagR && !flagG && !flagB) {\r\n          continue;\r\n        }\r\n\r\n        // Apply smoothing similar to fadeLighting\r\n        if (flagR) {\r\n          diffR *= 0.05 * delta;\r\n          this.softCol[x][y][0] = this.clamp(Math.round(softR - diffR), 0, 255);\r\n        }\r\n        if (flagG) {\r\n          diffG *= 0.05 * delta;\r\n          this.softCol[x][y][1] = this.clamp(Math.round(softG - diffG), 0, 255);\r\n        }\r\n        if (flagB) {\r\n          diffB *= 0.05 * delta;\r\n          this.softCol[x][y][2] = this.clamp(Math.round(softB - diffB), 0, 255);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  resetDoorLightSources = () => {\r\n    this.doors.forEach((d) => {\r\n      if (d && d.lightSource) d.lightSource.r = 0;\r\n      if (d && d.linkedDoor && d.linkedDoor.lightSource)\r\n        d.linkedDoor.lightSource.r = 0;\r\n    });\r\n  };\r\n\r\n  tileValuesToLightSource = (x: number, y: number, room: Room) => {\r\n    if (!room.roomArray[x]) return null;\r\n    if (!room.roomArray[x][y]) return null;\r\n    const color = room.col[x][y];\r\n    const brightness = (1 - room.vis[x][y]) / 4;\r\n    const radius = 9;\r\n    return { color, brightness, radius };\r\n  };\r\n\r\n  updateDoorLightSources = () => {\r\n    //works from inactive rooms onto their connected rooms\r\n    if (!this.active) return;\r\n\r\n    const directionOffsets = {\r\n      [Direction.UP]: { x: 0, y: -1 },\r\n      [Direction.DOWN]: { x: 0, y: 1 },\r\n      [Direction.LEFT]: { x: 1, y: 0 },\r\n      [Direction.RIGHT]: { x: -1, y: 0 },\r\n    };\r\n    let linkedDoors: Door[] = [];\r\n    this.doors.forEach((d) => {\r\n      if (d.linkedDoor && d.room.entered) linkedDoors.push(d.linkedDoor);\r\n    });\r\n\r\n    this.doors.forEach((d) => {\r\n      d.lightSource.b = 0.1;\r\n    });\r\n\r\n    for (const d of linkedDoors) {\r\n      const srcDoor = d.linkedDoor; // door on this room's side\r\n      const dirOff = directionOffsets[srcDoor.doorDir] || { x: 0, y: 0 };\r\n      // Sample one tile inside this room from the door, i.e., opposite of door facing\r\n      const sampleX = srcDoor.x - dirOff.x;\r\n      const sampleY = srcDoor.y - dirOff.y;\r\n\r\n      let vals = this.tileValuesToLightSource(sampleX, sampleY, this);\r\n      if (!vals)\r\n        vals = this.tileValuesToLightSource(srcDoor.x, srcDoor.y, this);\r\n      if (vals) {\r\n        d.lightSource.c = vals.color;\r\n        d.lightSource.b = vals.brightness;\r\n        d.lightSource.r = LevelConstants.LIGHTING_MAX_DISTANCE;\r\n      }\r\n    }\r\n\r\n    let connectedRooms: Set<Room> = new Set(\r\n      this.doors\r\n        .filter((d) => d && d.linkedDoor) // Ensure door and linkedDoor exist\r\n        .map((d) => d.linkedDoor.room)\r\n        .filter((r) => r), // Ensure room exists\r\n    );\r\n\r\n    // Update connected rooms once to propagate door light without infinite recursion\r\n    for (const r of Array.from(connectedRooms)) {\r\n      if (r.entered && !r.isUpdatingLighting) r.updateLighting();\r\n    }\r\n  };\r\n\r\n  setLightingAngleStep = () => {\r\n    if (!this.active) return;\r\n    // Estimate total tiles we will compute for lighting this frame\r\n    const roomTiles = this.width * this.height;\r\n\r\n    // Count players currently in this room\r\n    const playersInRoom = Object.values(this.game.players || {}).filter(\r\n      (p: any) => p?.getRoom?.() === this,\r\n    ).length;\r\n\r\n    // Rays per emitter at the current angular resolution\r\n    const raysPerEmitter = Math.ceil(360 / LevelConstants.LIGHTING_ANGLE_STEP);\r\n\r\n    // Estimate steps per ray by summing radii of lights (capped) and players\r\n    let totalRayDistance = 0;\r\n    for (const ls of this.lightSources) {\r\n      totalRayDistance += Math.min(ls.r, LevelConstants.LIGHTING_MAX_DISTANCE);\r\n    }\r\n    totalRayDistance += playersInRoom * LevelConstants.LIGHTING_MAX_DISTANCE;\r\n\r\n    // Total tiles touched by rays plus per-tile blending work\r\n    const estimatedRayTiles = totalRayDistance * raysPerEmitter;\r\n    const tilesToCompute = roomTiles + estimatedRayTiles;\r\n\r\n    // Store for diagnostics/dynamic tuning usage\r\n    this.estimatedLightingTiles = tilesToCompute;\r\n\r\n    //console.log(\r\n    //  `Estimated lighting tiles: ${this.estimatedLightingTiles} (room: ${roomTiles}, rays: ${estimatedRayTiles}, players: ${playersInRoom})`,\r\n    //);\r\n  };\r\n\r\n  updateLighting = () => {\r\n    if (!this.onScreen) return;\r\n    if (this.isUpdatingLighting) return;\r\n    this.isUpdatingLighting = true;\r\n\r\n    // Invalidate cache when lighting is updated\r\n    this.invalidateBlurCache();\r\n\r\n    // Start timing the initial setup\r\n    //console.time(\"updateLighting: Initial Setup\");\r\n    this.updateDoorLightSources();\r\n\r\n    let oldVis = [];\r\n    let oldCol = [];\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      oldVis[x] = [];\r\n      oldCol[x] = [];\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        oldVis[x][y] = this.vis[x][y];\r\n        oldCol[x][y] = this.col[x][y];\r\n\r\n        this.vis[x][y] = 1;\r\n        this.col[x][y] = [1, 1, 1];\r\n        this.renderBuffer[x][y] = [];\r\n      }\r\n    }\r\n    // End timing the initial setup\r\n    //console.timeEnd(\"updateLighting: Initial Setup\");\r\n\r\n    // Start timing the processing of light sources\r\n    //console.time(\"updateLighting: Process LightSources\");\r\n    // Prune orphaned light sources. Allow a small neighborhood check so\r\n    // lights slightly offset from their owning tile (e.g., bottom-wall torches)\r\n    // are not removed incorrectly.\r\n    try {\r\n      this.lightSources = this.lightSources.filter((ls) => {\r\n        const lx = Math.floor(ls.x);\r\n        const ly = Math.floor(ls.y);\r\n        // quick in-bounds check\r\n        if (\r\n          lx < this.roomX - 1 ||\r\n          lx > this.roomX + this.width ||\r\n          ly < this.roomY - 1 ||\r\n          ly > this.roomY + this.height\r\n        )\r\n          return false;\r\n\r\n        // keep if any nearby tile exists\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n          for (let dy = -1; dy <= 1; dy++) {\r\n            if (this.roomArray[lx + dx]?.[ly + dy]) return true;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    } catch {}\r\n\r\n    for (const l of this.lightSources) {\r\n      if (l.shouldUpdate()) {\r\n        for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\r\n          this.castTintAtAngle(\r\n            i,\r\n            l.x,\r\n            l.y,\r\n            l.r,\r\n            l.c,\r\n            l.b * LevelConstants.LIGHTING_ANGLE_BRIGHTNESS_COMPENSATION,\r\n          ); // RGB color in sRGB\r\n        }\r\n      }\r\n    }\r\n    //console.timeEnd(\"updateLighting: Process LightSources\");\r\n    //console.time(\"updateLighting: Process Players\");\r\n    this.setLightingAngleStep();\r\n\r\n    let lightingAngleStep = LevelConstants.LIGHTING_ANGLE_STEP;\r\n\r\n    for (const p in this.game.players) {\r\n      let player = this.game.players[p];\r\n      if ((player as any).getRoom?.() === this) {\r\n        //console.log(`i: ${player.angle}`);\r\n        for (let i = 0; i < 360; i += lightingAngleStep) {\r\n          let lightColor = LevelConstants.AMBIENT_LIGHT_COLOR;\r\n          let lightBrightness = 5;\r\n          if (player.lightEquipped) {\r\n            lightColor = player.lightColor;\r\n            lightBrightness = player.lightBrightness;\r\n          }\r\n          let offsetX = 0;\r\n          let offsetY = 0;\r\n          switch (player.direction) {\r\n            case Direction.UP:\r\n              offsetY = -0;\r\n              break;\r\n            case Direction.DOWN:\r\n              offsetY = 0;\r\n              break;\r\n            case Direction.LEFT:\r\n              offsetX = -0;\r\n              break;\r\n            case Direction.RIGHT:\r\n              offsetX = 0;\r\n          }\r\n          this.castTintAtAngle(\r\n            i,\r\n            player.x + 0.5 + offsetX,\r\n            player.y + 0.5 + offsetY,\r\n            /*\r\n            Math.min(\r\n              Math.max(\r\n                player.sightRadius - this.depth + 2,\r\n                Player.minSightRadius,\r\n              ),\r\n              10,\r\n            ),\r\n            */\r\n            LevelConstants.LIGHTING_MAX_DISTANCE,\r\n            lightColor, // RGB color in sRGB\r\n            lightBrightness *\r\n              LevelConstants.LIGHTING_ANGLE_BRIGHTNESS_COMPENSATION, // intensity\r\n          );\r\n        }\r\n      }\r\n    }\r\n    // End timing the processing of player lighting\r\n    //console.timeEnd(\"updateLighting: Process Players\");\r\n\r\n    // Start timing the blending of colors\r\n    //console.time(\"updateLighting: Blend Colors Array\");\r\n    const roomX = this.roomX;\r\n    const roomY = this.roomY;\r\n    const width = this.width;\r\n    const height = this.height;\r\n    const renderBuffer = this.renderBuffer;\r\n\r\n    for (let x = roomX; x < roomX + width; x++) {\r\n      for (let y = roomY; y < roomY + height; y++) {\r\n        this.col[x][y] = this.blendColorsArray(renderBuffer[x][y]);\r\n      }\r\n    }\r\n    // End timing the blending of colors\r\n    //console.timeEnd(\"updateLighting: Blend Colors Array\");\r\n\r\n    // Start timing the conversion to luminance\r\n    //console.time(\"updateLighting: Convert to Luminance\");\r\n    for (let x = roomX; x < roomX + width; x++) {\r\n      for (let y = roomY; y < roomY + height; y++) {\r\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\r\n      }\r\n    }\r\n    // End timing the conversion to luminance\r\n    //console.timeEnd(\"updateLighting: Convert to Luminance\");\r\n    this.updateDoorLightSources();\r\n    // Bump lighting update version so blur cache can detect changes\r\n    this.lastLightingUpdate++;\r\n    this.isUpdatingLighting = false;\r\n  };\r\n\r\n  updateLightSources = (lightSource?: LightSource, remove?: boolean) => {\r\n    this.oldCol = [];\r\n    this.oldVis = [];\r\n    this.oldCol = this.col;\r\n    this.oldVis = this.vis;\r\n    if (lightSource) {\r\n      for (let i = 0; i < 360; i += LevelConstants.LIGHTING_ANGLE_STEP) {\r\n        if (!remove) {\r\n          this.castTintAtAngle(\r\n            i,\r\n            lightSource.x,\r\n            lightSource.y,\r\n            lightSource.r,\r\n            lightSource.c,\r\n            lightSource.b *\r\n              LevelConstants.LIGHTING_ANGLE_BRIGHTNESS_COMPENSATION,\r\n          ); // RGB color in sRGB\r\n        } else {\r\n          this.unCastTintAtAngle(\r\n            i,\r\n            lightSource.x,\r\n            lightSource.y,\r\n            lightSource.r,\r\n            lightSource.c,\r\n            lightSource.b *\r\n              LevelConstants.LIGHTING_ANGLE_BRIGHTNESS_COMPENSATION,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.col[x][y] = this.blendColorsArray(this.renderBuffer[x][y]);\r\n      }\r\n    }\r\n\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.vis[x][y] = this.rgbToLuminance(this.col[x][y]);\r\n      }\r\n    }\r\n  };\r\n\r\n  revertLightSources = () => {\r\n    //console.log(\"reverting lighting\");\r\n    this.oldCol = [];\r\n    this.oldVis = [];\r\n    this.col = this.oldCol;\r\n    this.vis = this.oldVis;\r\n  };\r\n\r\n  /**\r\n   * Casts or uncategorizes a tint from a light source at a specific angle.\r\n   *\r\n   * @param angle - The angle in degrees at which to cast or uncast the tint.\r\n   * @param px - The x-coordinate of the light source.\r\n   * @param py - The y-coordinate of the light source.\r\n   * @param radius - The radius of the light's influence.\r\n   * @param color - The RGB color tuple representing the tint.\r\n   * @param brightness - The brightness of the light source.\r\n   * @param action - 'cast' to add tint, 'unCast' to remove tint.\r\n   */\r\n  private processTintAtAngle = (\r\n    angle: number,\r\n    px: number,\r\n    py: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    brightness: number,\r\n    action: \"cast\" | \"unCast\" = \"cast\",\r\n  ) => {\r\n    const dx = Math.cos((angle * Math.PI) / 180);\r\n    const dy = Math.sin((angle * Math.PI) / 180);\r\n\r\n    // Convert input color from sRGB to linear RGB\r\n    const linearColor: [number, number, number] = [\r\n      this.sRGBToLinear(color[0]),\r\n      this.sRGBToLinear(color[1]),\r\n      this.sRGBToLinear(color[2]),\r\n    ];\r\n\r\n    for (\r\n      let i = 0;\r\n      i <= Math.min(LevelConstants.LIGHTING_MAX_DISTANCE, radius);\r\n      i++\r\n    ) {\r\n      const currentX = Math.floor(px + dx * i);\r\n      const currentY = Math.floor(py + dy * i);\r\n\r\n      if (!this.isPositionInRoom(currentX, currentY)) return; // Outside the room\r\n\r\n      const tile = this.roomArray[currentX][currentY];\r\n      if (tile.isOpaque()) return; // Stop processing through opaque tiles\r\n\r\n      // Handle i=0 separately to ensure correct intensity\r\n      let intensity: number;\r\n      if (i === 0) {\r\n        intensity = brightness * 0.1;\r\n      } else {\r\n        intensity = brightness / Math.E ** (i - 0.25);\r\n      }\r\n      if (intensity < 0.005) intensity = 0;\r\n\r\n      if (intensity <= 0) continue;\r\n\r\n      if (!this.renderBuffer[currentX]) {\r\n        this.renderBuffer[currentX] = [];\r\n      }\r\n      if (!this.renderBuffer[currentX][currentY]) {\r\n        this.renderBuffer[currentX][currentY] = [];\r\n      }\r\n\r\n      if (GameConstants.ENEMIES_BLOCK_LIGHT) {\r\n        //begin processing opaque entities\r\n        const entity = this.entities.find(\r\n          (e) => e.x === currentX && e.y === currentY && e.opaque,\r\n        );\r\n        if (entity) {\r\n          //intensity = intensity * (1 - entity.opacity);\r\n          // Set the intensity for this tile and then terminate to create shadow effect\r\n          const weightedLinearColor: [number, number, number, number] = [\r\n            linearColor[0],\r\n            linearColor[1],\r\n            linearColor[2],\r\n            intensity,\r\n          ];\r\n\r\n          if (action === \"cast\") {\r\n            this.renderBuffer[currentX][currentY].push(weightedLinearColor);\r\n          } else if (action === \"unCast\") {\r\n            this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\r\n              currentY\r\n            ].filter(\r\n              (colorEntry) =>\r\n                !(\r\n                  Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\r\n                  Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\r\n                  Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\r\n                  Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\r\n                ),\r\n            );\r\n          }\r\n          return; // Terminate after processing the opaque entity\r\n        }\r\n      }\r\n      //end processing opaque entities\r\n\r\n      // Process inner walls like entities - terminate after processing\r\n      if (tile instanceof Wall && tile.isOpaque() && tile.isInnerWall()) {\r\n        const weightedLinearColor: [number, number, number, number] = [\r\n          linearColor[0],\r\n          linearColor[1],\r\n          linearColor[2],\r\n          intensity,\r\n        ];\r\n\r\n        if (action === \"cast\") {\r\n          this.renderBuffer[currentX][currentY].push(weightedLinearColor);\r\n        } else if (action === \"unCast\") {\r\n          this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\r\n            currentY\r\n          ].filter(\r\n            (colorEntry) =>\r\n              !(\r\n                Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\r\n                Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\r\n                Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\r\n                Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\r\n              ),\r\n          );\r\n        }\r\n        return; // Terminate after processing the opaque wall\r\n      }\r\n\r\n      const weightedLinearColor: [number, number, number, number] = [\r\n        linearColor[0],\r\n        linearColor[1],\r\n        linearColor[2],\r\n        intensity,\r\n      ];\r\n\r\n      if (action === \"cast\") {\r\n        this.renderBuffer[currentX][currentY].push(weightedLinearColor);\r\n      } else if (action === \"unCast\") {\r\n        this.renderBuffer[currentX][currentY] = this.renderBuffer[currentX][\r\n          currentY\r\n        ].filter(\r\n          (colorEntry) =>\r\n            !(\r\n              Math.abs(colorEntry[0] - weightedLinearColor[0]) < 0.0001 &&\r\n              Math.abs(colorEntry[1] - weightedLinearColor[1]) < 0.0001 &&\r\n              Math.abs(colorEntry[2] - weightedLinearColor[2]) < 0.0001 &&\r\n              Math.abs(colorEntry[3] - weightedLinearColor[3]) < 0.0001\r\n            ),\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Applies Gaussian blur to the specified offscreen canvas.\r\n   *\r\n   * @param {HTMLCanvasElement} canvas - The offscreen canvas to blur.\r\n   * @param {number} radius - The radius of the blur.\r\n   */\r\n  applyGaussianBlur(canvas: HTMLCanvasElement, radius: number): void {\r\n    //DEPRECATED\r\n    //const StackBlur = require(\"stackblur-canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      throw new Error(\"Failed to get canvas context for Gaussian blur.\");\r\n    }\r\n\r\n    // Get the image data from the canvas\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    //const imageData = ctx.getImageData(0, 0, width, height);\r\n    let r = radius;\r\n    if (!GameConstants.BLUR_ENABLED) r = 0;\r\n    // Apply StackBlur\r\n    //StackBlur.canvasRGBA(canvas, 0, 0, width, height, Math.floor(r / 2));\r\n  }\r\n\r\n  /**\r\n   * Casts a tint from a light source at a specific angle.\r\n   *\r\n   * @param angle - The angle in degrees at which to cast the tint.\r\n   * @param px - The x-coordinate of the light source.\r\n   * @param py - The y-coordinate of the light source.\r\n   * @param radius - The radius of the light's influence.\r\n   * @param color - The RGB color tuple representing the tint.\r\n   * @param brightness - The brightness of the light source.\r\n   */\r\n  castTintAtAngle = (\r\n    angle: number,\r\n    px: number,\r\n    py: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    brightness: number,\r\n  ) => {\r\n    this.processTintAtAngle(\r\n      angle,\r\n      px,\r\n      py,\r\n      radius,\r\n      color,\r\n      brightness / 3,\r\n      \"cast\",\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Uncasts a tint from a light source at a specific angle.\r\n   *\r\n   * @param angle - The angle in degrees at which to uncast the tint.\r\n   * @param px - The x-coordinate of the light source.\r\n   * @param py - The y-coordinate of the light source.\r\n   * @param radius - The radius of the light's influence.\r\n   * @param color - The RGB color tuple representing the tint.\r\n   * @param brightness - The brightness of the light source.\r\n   */\r\n  unCastTintAtAngle = (\r\n    angle: number,\r\n    px: number,\r\n    py: number,\r\n    radius: number,\r\n    color: [number, number, number],\r\n    brightness: number,\r\n  ) => {\r\n    this.processTintAtAngle(\r\n      angle,\r\n      px,\r\n      py,\r\n      radius,\r\n      color,\r\n      brightness / 3, // added this\r\n      \"unCast\",\r\n    );\r\n  };\r\n\r\n  private sRGBToLinear = (value: number): number => {\r\n    const normalized = value / 255;\r\n    if (normalized <= 0.04045) {\r\n      return normalized / 12.92;\r\n    } else {\r\n      return Math.pow((normalized + 0.055) / 1.055, 2.2);\r\n    }\r\n  };\r\n\r\n  private linearToSRGB = (value: number): number => {\r\n    if (value <= 0.0031308) {\r\n      return Math.round(12.92 * value * 255);\r\n    } else {\r\n      return Math.round(\r\n        (1.055 * Math.pow(value, 1 / 2.2 /*gamma*/) - 0.055) * 255,\r\n      );\r\n    }\r\n  };\r\n\r\n  clamp = (value: number, min: number = 0, max: number = 1): number => {\r\n    return Math.min(Math.max(value, min), max);\r\n  };\r\n\r\n  /**\r\n   * Blends an array of RGB colors into a single color without excessive darkness or clipping to white.\r\n   *\r\n   * @param colors - An array of RGB tuples to blend.\r\n   * @returns A single RGB tuple representing the blended color.\r\n   */\r\n  private blendColorsArray = (\r\n    colors: [red: number, green: number, blue: number, alpha: number][],\r\n  ): [red: number, green: number, blue: number] => {\r\n    if (colors.length === 0) return [0, 0, 0];\r\n\r\n    // Sum all color channels in linear RGB\r\n    const sum = colors.reduce(\r\n      (accumulator, color) => [\r\n        accumulator[0] + color[0] * color[3],\r\n        accumulator[1] + color[1] * color[3],\r\n        accumulator[2] + color[2] * color[3],\r\n      ],\r\n      [0, 0, 0],\r\n    );\r\n\r\n    // Apply scaling factor to manage overall brightness\r\n    const scalingFactor = 0.45 * 2.5; // Adjust as needed\r\n    const scaledSum = [\r\n      sum[0] * scalingFactor,\r\n      sum[1] * scalingFactor,\r\n      sum[2] * scalingFactor,\r\n    ];\r\n\r\n    // Clamp each channel to [0, 1] to prevent overflow\r\n    const clampedSum: [number, number, number] = [\r\n      this.clamp(scaledSum[0], 0, 1),\r\n      this.clamp(scaledSum[1], 0, 1),\r\n      this.clamp(scaledSum[2], 0, 1),\r\n    ];\r\n    // Convert back to sRGB\r\n    return [\r\n      this.linearToSRGB(clampedSum[0]),\r\n      this.linearToSRGB(clampedSum[1]),\r\n      this.linearToSRGB(clampedSum[2]),\r\n    ];\r\n  };\r\n\r\n  rgbToLuminance = (color: [number, number, number]): number => {\r\n    //map to 1-0 range\r\n    return 1 - (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    if (!this.onScreen) return;\r\n\r\n    if (this.active) {\r\n      HitWarning.updateFrame(delta);\r\n      this.drawInterval = 4;\r\n    } else if (!this.active) {\r\n      this.drawInterval = 8;\r\n    }\r\n\r\n    this.drawTimestamp += delta;\r\n\r\n    if (this.drawTimestamp - this.lastDraw >= this.drawInterval) {\r\n      this.fadeRgb(delta + this.drawInterval);\r\n      this.fadeLighting(delta + this.drawInterval);\r\n      this.lastDraw = this.drawTimestamp;\r\n    }\r\n  };\r\n  // added a multiplier to the input rgb values to avoid clipping to white\r\n  drawColorLayer = () => {\r\n    if (!this.onScreen) return;\r\n\r\n    Game.ctx.save();\r\n    // Clear the offscreen color canvas\r\n    this.colorOffscreenCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.colorOffscreenCanvas.width,\r\n      this.colorOffscreenCanvas.height,\r\n    );\r\n\r\n    let lastFillStyle = \"\";\r\n    // Match original shade layer positioning using the blur offsets\r\n    const offsetX = this.blurOffsetX;\r\n    const offsetY = this.blurOffsetY;\r\n\r\n    // Draw all color rectangles without any filters\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        const [r, g, b] = this.softCol[x][y];\r\n        if (r === 0 && g === 0 && b === 0) continue; // Skip if no color\r\n\r\n        const fillStyle = `rgba(${r}, ${g}, ${b}, 1)`;\r\n\r\n        if (fillStyle !== lastFillStyle) {\r\n          this.colorOffscreenCtx.fillStyle = fillStyle;\r\n          lastFillStyle = fillStyle;\r\n        }\r\n\r\n        this.colorOffscreenCtx.fillRect(\r\n          (x - this.roomX + offsetX) * GameConstants.TILESIZE,\r\n          (y - this.roomY + offsetY) * GameConstants.TILESIZE,\r\n          GameConstants.TILESIZE,\r\n          GameConstants.TILESIZE,\r\n        );\r\n      }\r\n    }\r\n\r\n    // Choose blur method based on setting\r\n    if (GameConstants.USE_WEBGL_BLUR) {\r\n      // Use WebGL blur with caching\r\n      const blurRenderer = WebGLBlurRenderer.getInstance();\r\n\r\n      // Check if we can use cached results\r\n      if (\r\n        this.shouldUseBlurCache() &&\r\n        this.blurCache.color6px &&\r\n        this.blurCache.color12px\r\n      ) {\r\n        // Use cached blurred results\r\n        Game.ctx.globalCompositeOperation = \"soft-light\";\r\n        Game.ctx.globalAlpha = 0.6;\r\n        Game.ctx.drawImage(\r\n          this.blurCache.color6px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n\r\n        Game.ctx.globalCompositeOperation = \"lighten\";\r\n        Game.ctx.globalAlpha = 0.05;\r\n        Game.ctx.drawImage(\r\n          this.blurCache.color12px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n      } else {\r\n        // Generate new blur and cache if inactive\r\n        Game.ctx.globalCompositeOperation = \"soft-light\";\r\n        Game.ctx.globalAlpha = 0.6;\r\n\r\n        // Apply 6px blur using WebGL\r\n        const blurred8px = blurRenderer.applyBlur(this.colorOffscreenCanvas, 8);\r\n        Game.ctx.drawImage(\r\n          blurred8px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n\r\n        // Cache the result if room is inactive\r\n        if (!this.active) {\r\n          this.cacheBlurResult(\"color8px\", blurred8px);\r\n        }\r\n\r\n        Game.ctx.globalCompositeOperation = \"lighten\";\r\n        Game.ctx.globalAlpha = 0.05;\r\n\r\n        // Apply 12px blur using WebGL\r\n        const blurred12px = blurRenderer.applyBlur(\r\n          this.colorOffscreenCanvas,\r\n          12,\r\n        );\r\n        Game.ctx.drawImage(\r\n          blurred12px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n\r\n        // Cache the result if room is inactive\r\n        if (!this.active) {\r\n          this.cacheBlurResult(\"color12px\", blurred12px);\r\n        }\r\n      }\r\n    } else {\r\n      // Use Canvas2D blur (fallback) - matching original settings\r\n      Game.ctx.globalCompositeOperation =\r\n        GameConstants.COLOR_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\r\n      Game.ctx.globalAlpha = 0.6;\r\n\r\n      if (GameConstants.ctxBlurEnabled) {\r\n        Game.ctx.filter = \"blur(6px)\";\r\n      }\r\n\r\n      Game.ctx.drawImage(\r\n        this.colorOffscreenCanvas,\r\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n      );\r\n\r\n      // Draw slight haze\r\n      Game.ctx.globalCompositeOperation = \"lighten\";\r\n      Game.ctx.globalAlpha = 0.05;\r\n\r\n      if (GameConstants.ctxBlurEnabled) {\r\n        Game.ctx.filter = \"blur(12px)\";\r\n      }\r\n\r\n      Game.ctx.drawImage(\r\n        this.colorOffscreenCanvas,\r\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n      );\r\n\r\n      Game.ctx.filter = \"none\";\r\n    }\r\n\r\n    this.colorOffscreenCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.colorOffscreenCanvas.width,\r\n      this.colorOffscreenCanvas.height,\r\n    );\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawShadeLayer = () => {\r\n    if (GameConstants.isIOS || !GameConstants.SHADE_ENABLED) return;\r\n    if (GameConstants.SHADE_INLINE_IN_ENTITY_LAYER) return; // handled inline in drawEntities\r\n    if (!this.onScreen) return;\r\n\r\n    Game.ctx.save();\r\n\r\n    Game.ctx.globalCompositeOperation =\r\n      GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\r\n\r\n    // Clear the offscreen shade canvas\r\n    this.shadeOffscreenCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.shadeOffscreenCanvas.width,\r\n      this.shadeOffscreenCanvas.height,\r\n    );\r\n\r\n    const offsetX = this.shadeSliceBorderTiles;\r\n    const offsetY = this.shadeSliceBorderTiles;\r\n\r\n    let lastFillStyle = \"\";\r\n\r\n    // Draw all shade rectangles without any filters\r\n    for (let x = this.roomX - 2; x < this.roomX + this.width + 4; x++) {\r\n      for (let y = this.roomY - 2; y < this.roomY + this.height + 4; y++) {\r\n        const tile = this.roomArray[x]?.[y];\r\n        //if (!tile) return;\r\n\r\n        let alpha =\r\n          this.softVis[x] && this.softVis[x][y] ? this.softVis[x][y] : 0;\r\n        if (tile instanceof WallTorch) continue;\r\n        let factor = !GameConstants.SMOOTH_LIGHTING ? 2 : 2;\r\n        let smoothFactor = !GameConstants.SMOOTH_LIGHTING ? 0 : 1;\r\n        let computedAlpha = alpha ** factor * smoothFactor;\r\n\r\n        let fillX = x;\r\n        let fillY = y;\r\n        let fillWidth = 1;\r\n        let fillHeight = 1;\r\n        if (tile instanceof Wall) {\r\n          const wall = tile as Wall;\r\n          if (!this.innerWalls.includes(wall)) {\r\n            switch (wall.direction) {\r\n              case Direction.UP:\r\n                fillY = y - 0.5;\r\n                fillHeight = 0.5;\r\n                break;\r\n              case Direction.DOWN:\r\n                fillY = y - 0.5;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.LEFT:\r\n                fillX = x + 0.25;\r\n                fillWidth = 0.75;\r\n                break;\r\n              case Direction.RIGHT:\r\n                fillX = x;\r\n                fillWidth = 0.75;\r\n                break;\r\n              case Direction.DOWN_LEFT:\r\n                fillX = x + 0.25;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.DOWN_RIGHT:\r\n                fillX = x;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.UP_LEFT:\r\n                fillX = x + 0.25;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 0.5;\r\n                break;\r\n              case Direction.UP_RIGHT:\r\n                fillX = x - 0.5;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 0.5;\r\n                break;\r\n            }\r\n          }\r\n        } else if (tile instanceof Door) {\r\n          const door = tile as Door;\r\n          if (door.opened === true) computedAlpha = computedAlpha / 2;\r\n          switch (door.doorDir) {\r\n            case Direction.UP:\r\n              fillY = y - 0.5;\r\n              fillHeight = 1.5;\r\n              break;\r\n            case Direction.DOWN:\r\n              fillY = y - 0.5;\r\n              fillHeight = 1.5;\r\n              break;\r\n            case Direction.RIGHT:\r\n              fillX = x - 0.5;\r\n              fillY = y - 1.25;\r\n              fillWidth = 1.5;\r\n              fillHeight = 2;\r\n              break;\r\n            case Direction.LEFT:\r\n              fillX = x;\r\n              fillY = y - 1.25;\r\n              fillWidth = 1.5;\r\n              fillHeight = 2;\r\n              break;\r\n          }\r\n        }\r\n        const alphaMultiplier = !GameConstants.SMOOTH_LIGHTING ? 0.5 : 1.25;\r\n\r\n        const fillStyle = `rgba(0, 0, 0, ${computedAlpha * alphaMultiplier})`;\r\n\r\n        if (fillStyle !== lastFillStyle) {\r\n          this.shadeOffscreenCtx.fillStyle = fillStyle;\r\n          lastFillStyle = fillStyle;\r\n        }\r\n\r\n        this.shadeOffscreenCtx.fillRect(\r\n          (fillX - this.roomX + offsetX) * GameConstants.TILESIZE,\r\n          (fillY - this.roomY + offsetY) * GameConstants.TILESIZE,\r\n          fillWidth * GameConstants.TILESIZE,\r\n          fillHeight * GameConstants.TILESIZE,\r\n        );\r\n      }\r\n    }\r\n\r\n    // Choose blur method based on setting\r\n    if (GameConstants.USE_WEBGL_BLUR) {\r\n      // Use WebGL blur with caching\r\n      const blurRenderer = WebGLBlurRenderer.getInstance();\r\n\r\n      // Check if we can use cached results\r\n      if (this.shouldUseBlurCache() && this.blurCache.shade5px) {\r\n        // Use cached blurred result\r\n        Game.ctx.globalAlpha = 1;\r\n        Game.ctx.drawImage(\r\n          this.blurCache.shade5px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n      } else {\r\n        // Generate new blur and cache if inactive\r\n        Game.ctx.globalAlpha = 1;\r\n\r\n        // Apply 5px blur using WebGL\r\n        const blurred5px = blurRenderer.applyBlur(this.shadeOffscreenCanvas, 5);\r\n        Game.ctx.drawImage(\r\n          blurred5px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n\r\n        // Cache the result if room is inactive\r\n        if (!this.active) {\r\n          this.cacheBlurResult(\"shade5px\", blurred5px);\r\n        }\r\n      }\r\n    } else {\r\n      // Use Canvas2D blur (fallback) - matching original settings\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      const blurAmount = !GameConstants.SMOOTH_LIGHTING ? 5 : 5;\r\n\r\n      if (GameConstants.ctxBlurEnabled) {\r\n        Game.ctx.filter = `blur(${blurAmount}px)`;\r\n      }\r\n\r\n      Game.ctx.drawImage(\r\n        this.shadeOffscreenCanvas,\r\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n      );\r\n\r\n      Game.ctx.filter = \"none\";\r\n    }\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  // Build the unblurred shade offscreen using the exact logic as drawShadeLayer's fill pass\r\n  private buildShadeOffscreenForSlicing = () => {\r\n    // Clear the offscreen shade canvas\r\n    this.shadeOffscreenCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.shadeOffscreenCanvas.width,\r\n      this.shadeOffscreenCanvas.height,\r\n    );\r\n\r\n    const offsetX = this.blurOffsetX;\r\n    const offsetY = this.blurOffsetY;\r\n\r\n    let lastFillStyle = \"\";\r\n\r\n    for (let x = this.roomX - 2; x < this.roomX + this.width + 4; x++) {\r\n      for (let y = this.roomY - 2; y < this.roomY + this.height + 4; y++) {\r\n        const tile = this.roomArray[x]?.[y];\r\n        let alpha =\r\n          this.softVis[x] && this.softVis[x][y] ? this.softVis[x][y] : 0;\r\n        if (tile instanceof WallTorch) continue;\r\n        let factor = !GameConstants.SMOOTH_LIGHTING ? 2 : 1;\r\n        let smoothFactor = !GameConstants.SMOOTH_LIGHTING ? 0 : 1;\r\n        let computedAlpha = alpha ** factor * smoothFactor;\r\n\r\n        let fillX = x;\r\n        let fillY = y;\r\n        let fillWidth = 1;\r\n        let fillHeight = 1;\r\n        if (tile instanceof Wall) {\r\n          const wall = tile as Wall;\r\n          if (!this.innerWalls.includes(wall)) {\r\n            switch (wall.direction) {\r\n              case Direction.UP:\r\n                fillY = y - 0.5;\r\n                fillHeight = 0.5;\r\n                break;\r\n              case Direction.DOWN:\r\n                fillY = y - 0.5;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.LEFT:\r\n                fillX = x + 0.25;\r\n                fillWidth = 0.75;\r\n                break;\r\n              case Direction.RIGHT:\r\n                fillX = x;\r\n                fillWidth = 0.75;\r\n                break;\r\n              case Direction.DOWN_LEFT:\r\n                fillX = x + 0.25;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.DOWN_RIGHT:\r\n                fillX = x;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.UP_LEFT:\r\n                fillX = x + 0.25;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 0.5;\r\n                break;\r\n              case Direction.UP_RIGHT:\r\n                fillX = x - 0.5;\r\n                fillY = y - 0.5;\r\n                fillWidth = 0.75;\r\n                fillHeight = 0.5;\r\n                break;\r\n            }\r\n          }\r\n        } else if (tile instanceof Door) {\r\n          const door = tile as Door;\r\n          if (door.opened === true) {\r\n            computedAlpha = computedAlpha / 2;\r\n            switch (door.doorDir) {\r\n              case Direction.UP:\r\n                fillY = y - 1.5;\r\n                fillHeight = 1.5;\r\n                fillWidth = 2;\r\n                fillX = x - 0.5;\r\n                break;\r\n              case Direction.DOWN:\r\n                fillY = y - 0.5;\r\n                fillHeight = 1.5;\r\n                fillWidth = 2;\r\n                fillX = x - 0.5;\r\n                break;\r\n              case Direction.RIGHT:\r\n                fillX = x - 2;\r\n                fillY = y - 2;\r\n                fillWidth = 3;\r\n                fillHeight = 3;\r\n                break;\r\n              case Direction.LEFT:\r\n                fillX = x;\r\n                fillY = y - 2;\r\n                fillWidth = 3;\r\n                fillHeight = 3;\r\n                break;\r\n            }\r\n          } else {\r\n            switch (door.doorDir) {\r\n              case Direction.UP:\r\n                fillY = y - 0.5;\r\n                fillHeight = 1.5;\r\n                break;\r\n              case Direction.DOWN:\r\n                fillY = y - 1;\r\n                fillHeight = 3;\r\n                fillWidth = 3;\r\n                fillX = x - 0.5;\r\n                break;\r\n              case Direction.RIGHT:\r\n                fillX = x - 2;\r\n                fillY = y - 2;\r\n                fillWidth = 3;\r\n                fillHeight = 3;\r\n                break;\r\n              case Direction.LEFT:\r\n                fillX = x;\r\n                fillY = y - 2;\r\n                fillWidth = 3;\r\n                fillHeight = 3;\r\n                break;\r\n            }\r\n          }\r\n        }\r\n        const alphaMultiplier = !GameConstants.SMOOTH_LIGHTING ? 0.5 : 1;\r\n        const fillStyle = `rgba(0, 0, 0, ${computedAlpha * alphaMultiplier})`;\r\n        if (fillStyle !== lastFillStyle) {\r\n          this.shadeOffscreenCtx.fillStyle = fillStyle;\r\n          lastFillStyle = fillStyle;\r\n        }\r\n        fillY += 1;\r\n        fillX += 1;\r\n        this.shadeOffscreenCtx.fillRect(\r\n          (fillX - this.roomX + offsetX) * GameConstants.TILESIZE,\r\n          (fillY - this.roomY + offsetY) * GameConstants.TILESIZE,\r\n          fillWidth * GameConstants.TILESIZE,\r\n          fillHeight * GameConstants.TILESIZE,\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Returns a blurred shade canvas to sample slices from, reusing the WebGL blur/cache when possible\r\n  private getBlurredShadeSourceForSlicing = (): HTMLCanvasElement => {\r\n    if (GameConstants.USE_WEBGL_BLUR) {\r\n      const blurRenderer = WebGLBlurRenderer.getInstance();\r\n      if (this.shouldUseBlurCache() && this.blurCache.shade5px) {\r\n        return this.blurCache.shade5px as HTMLCanvasElement;\r\n      } else {\r\n        // Blur radius should match layer draw\r\n        const blurred5px = blurRenderer.applyBlur(this.shadeOffscreenCanvas, 8);\r\n        if (!this.active) this.cacheBlurResult(\"shade5px\", blurred5px);\r\n        return blurred5px;\r\n      }\r\n    } else {\r\n      // Canvas2D blur path: we cannot use ctx.filter during main slicing draws.\r\n      // So we pre-blur into a temporary canvas once.\r\n      if (!this.shadeBlurTempCanvas) {\r\n        this.shadeBlurTempCanvas = document.createElement(\"canvas\");\r\n        this.shadeBlurTempCanvas.width = this.shadeOffscreenCanvas.width;\r\n        this.shadeBlurTempCanvas.height = this.shadeOffscreenCanvas.height;\r\n        this.shadeBlurTempCtx = this.shadeBlurTempCanvas.getContext(\r\n          \"2d\",\r\n        ) as CanvasRenderingContext2D;\r\n      }\r\n      const tctx = this.shadeBlurTempCtx as CanvasRenderingContext2D;\r\n      tctx.clearRect(\r\n        0,\r\n        0,\r\n        this.shadeBlurTempCanvas!.width,\r\n        this.shadeBlurTempCanvas!.height,\r\n      );\r\n      if (GameConstants.ctxBlurEnabled) {\r\n        tctx.filter = `blur(5px)`;\r\n      } else {\r\n        tctx.filter = \"none\";\r\n      }\r\n      // Draw offscreen into temp at 0,0 (coordinates already include internal padding)\r\n      tctx.drawImage(this.shadeOffscreenCanvas, 0, 0);\r\n      tctx.filter = \"none\";\r\n      return this.shadeBlurTempCanvas as HTMLCanvasElement;\r\n    }\r\n  };\r\n\r\n  // Draw shade slices directly above a given tile\r\n  private drawShadeSliceForTile = (\r\n    shadeSrc: HTMLCanvasElement,\r\n    tileX: number,\r\n    tileY: number,\r\n    fadeDir?: \"left\" | \"right\" | \"up\" | \"down\",\r\n  ) => {\r\n    const ts = GameConstants.TILESIZE;\r\n    // Source position in the blurred offscreen matches drawShadeLayer mapping\r\n    const sx = (tileX + 1 - this.roomX + this.blurOffsetX) * ts;\r\n    const sy = (tileY + 1 - this.roomY + this.blurOffsetY) * ts;\r\n    const dx = tileX * ts;\r\n    const dy = tileY * ts;\r\n    if (!fadeDir) {\r\n      Game.ctx.drawImage(shadeSrc, sx, sy, ts, ts, dx, dy, ts, ts);\r\n      return;\r\n    }\r\n\r\n    // Lazy init temp slice canvas\r\n    if (!this.shadeSliceTempCanvas) {\r\n      this.shadeSliceTempCanvas = document.createElement(\"canvas\");\r\n      this.shadeSliceTempCanvas.width = ts;\r\n      this.shadeSliceTempCanvas.height = ts;\r\n      this.shadeSliceTempCtx = this.shadeSliceTempCanvas.getContext(\r\n        \"2d\",\r\n      ) as CanvasRenderingContext2D;\r\n    }\r\n    const tctx = this.shadeSliceTempCtx as CanvasRenderingContext2D;\r\n    tctx.clearRect(0, 0, ts, ts);\r\n    // Copy slice into temp\r\n    tctx.globalCompositeOperation = \"source-over\";\r\n    tctx.drawImage(shadeSrc, sx, sy, ts, ts, 0, 0, ts, ts);\r\n    // Apply gradient alpha mask (destination-in)\r\n    let grad: CanvasGradient | null = null;\r\n    if (fadeDir === \"right\") {\r\n      grad = tctx.createLinearGradient(0, 0, ts, 0);\r\n      grad.addColorStop(0, \"rgba(0,0,0,0)\");\r\n      grad.addColorStop(1, \"rgba(0,0,0,1)\");\r\n    } else if (fadeDir === \"left\") {\r\n      grad = tctx.createLinearGradient(0, 0, ts, 0);\r\n      grad.addColorStop(0, \"rgba(0,0,0,1)\");\r\n      grad.addColorStop(1, \"rgba(0,0,0,0)\");\r\n    } else if (fadeDir === \"up\") {\r\n      grad = tctx.createLinearGradient(0, 0, 0, ts);\r\n      grad.addColorStop(0, \"rgba(0,0,0,0)\");\r\n      grad.addColorStop(1, \"rgba(0,0,0,1)\");\r\n    } else if (fadeDir === \"down\") {\r\n      grad = tctx.createLinearGradient(0, 0, 0, ts);\r\n      grad.addColorStop(0, \"rgba(0,0,0,1)\");\r\n      grad.addColorStop(1, \"rgba(0,0,0,0)\");\r\n    }\r\n    if (grad) {\r\n      tctx.globalCompositeOperation = \"destination-in\";\r\n      tctx.fillStyle = grad;\r\n      tctx.fillRect(0, 0, ts, ts);\r\n    }\r\n    // Blit to main ctx\r\n    Game.ctx.drawImage(this.shadeSliceTempCanvas as HTMLCanvasElement, dx, dy);\r\n  };\r\n\r\n  drawBloomLayer = (delta: number) => {\r\n    if (!this.onScreen) return;\r\n\r\n    Game.ctx.save();\r\n    // Clear the offscreen shade canvas\r\n    this.bloomOffscreenCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.bloomOffscreenCanvas.width,\r\n      this.bloomOffscreenCanvas.height,\r\n    );\r\n    const offsetX = this.blurOffsetX;\r\n    const offsetY = this.blurOffsetY;\r\n\r\n    let lastFillStyle = \"\";\r\n\r\n    // Draw all bloom rectangles without any filters\r\n    const allEntities = this.entities.concat(this.deadEntities);\r\n    if (allEntities.length > 0)\r\n      for (let e of this.entities) {\r\n        if (e.hasBloom) {\r\n          e.updateBloom(delta);\r\n          this.bloomOffscreenCtx.globalAlpha =\r\n            1 * (1 - this.softVis[e.x][e.y]) * e.softBloomAlpha;\r\n          this.bloomOffscreenCtx.fillStyle = e.bloomColor;\r\n\r\n          this.bloomOffscreenCtx.fillRect(\r\n            (e.x - e.drawX - this.roomX + offsetX + 0.5 - e.bloomSize / 2) *\r\n              GameConstants.TILESIZE,\r\n            (e.y -\r\n              e.drawY -\r\n              this.roomY -\r\n              0.5 +\r\n              offsetY +\r\n              0.5 -\r\n              e.bloomSize / 2) *\r\n              GameConstants.TILESIZE +\r\n              e.bloomOffsetY,\r\n            GameConstants.TILESIZE * e.bloomSize,\r\n            GameConstants.TILESIZE * e.bloomSize,\r\n          );\r\n        }\r\n      }\r\n\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        if (this.roomArray[x][y].hasBloom) {\r\n          this.roomArray[x][y].updateBloom(delta);\r\n          this.bloomOffscreenCtx.globalAlpha =\r\n            1 * (1 - this.softVis[x][y]) * this.roomArray[x][y].softBloomAlpha;\r\n          this.bloomOffscreenCtx.fillStyle = this.roomArray[x][y].bloomColor;\r\n\r\n          this.bloomOffscreenCtx.fillRect(\r\n            (x - this.roomX + offsetX) * GameConstants.TILESIZE,\r\n            (y - this.roomY - 0.25 + offsetY) * GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE * 0.75,\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.projectiles.length > 0)\r\n      for (let p of this.projectiles) {\r\n        if (p.hasBloom) {\r\n          p.updateBloom(delta);\r\n          this.bloomOffscreenCtx.globalAlpha =\r\n            1 * (1 - this.softVis[p.x][p.y]) * p.softBloomAlpha;\r\n          this.bloomOffscreenCtx.fillStyle = p.bloomColor;\r\n\r\n          this.bloomOffscreenCtx.fillRect(\r\n            (p.x - this.roomX + offsetX) * GameConstants.TILESIZE,\r\n            (p.y - this.roomY + offsetY + p.bloomOffsetY) *\r\n              GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE,\r\n          );\r\n        }\r\n      }\r\n\r\n    // Choose blur method based on setting\r\n    if (GameConstants.USE_WEBGL_BLUR) {\r\n      // Use WebGL blur with caching\r\n      const blurRenderer = WebGLBlurRenderer.getInstance();\r\n\r\n      // Check if we can use cached results\r\n      if (this.shouldUseBlurCache() && this.blurCache.bloom8px) {\r\n        // Use cached blurred result\r\n        Game.ctx.globalCompositeOperation = \"screen\";\r\n        Game.ctx.globalAlpha = 1;\r\n        Game.ctx.drawImage(\r\n          this.blurCache.bloom8px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n      } else {\r\n        // Generate new blur and cache if inactive\r\n        Game.ctx.globalCompositeOperation = \"screen\";\r\n        Game.ctx.globalAlpha = 1;\r\n\r\n        // Apply 8px blur using WebGL\r\n        const blurred8px = blurRenderer.applyBlur(this.bloomOffscreenCanvas, 8);\r\n        Game.ctx.drawImage(\r\n          blurred8px,\r\n          (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n          (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n        );\r\n\r\n        // Cache the result if room is inactive\r\n        if (!this.active) {\r\n          this.cacheBlurResult(\"bloom8px\", blurred8px);\r\n        }\r\n      }\r\n    } else {\r\n      // Use Canvas2D blur (fallback) - matching original settings\r\n      Game.ctx.globalCompositeOperation = \"screen\";\r\n      Game.ctx.globalAlpha = 1;\r\n\r\n      if (GameConstants.ctxBlurEnabled) {\r\n        Game.ctx.filter = \"blur(8px)\";\r\n      }\r\n\r\n      Game.ctx.drawImage(\r\n        this.bloomOffscreenCanvas,\r\n        (this.roomX - offsetX) * GameConstants.TILESIZE,\r\n        (this.roomY - offsetY) * GameConstants.TILESIZE,\r\n      );\r\n\r\n      Game.ctx.filter = \"none\";\r\n    }\r\n\r\n    this.bloomOffscreenCtx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n    this.bloomOffscreenCtx.fillRect(\r\n      0,\r\n      0,\r\n      this.bloomOffscreenCanvas.width,\r\n      this.bloomOffscreenCanvas.height,\r\n    );\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawEntities = (delta: number, skipLocalPlayer?: boolean) => {\r\n    if (!this.onScreen) return;\r\n\r\n    Game.ctx.save();\r\n    // If using inline sliced shade, prepare the blurred shade source once\r\n    let useInlineShade =\r\n      GameConstants.SHADE_ENABLED && GameConstants.SHADE_INLINE_IN_ENTITY_LAYER;\r\n    let shadeSrc: HTMLCanvasElement | null = null;\r\n    if (useInlineShade) {\r\n      // Build unblurred shade and get blurred source\r\n      this.buildShadeOffscreenForSlicing();\r\n      shadeSrc = this.getBlurredShadeSourceForSlicing();\r\n    }\r\n\r\n    let tiles = [];\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        const tile = this.roomArray[x][y];\r\n        tile.drawUnderPlayer(delta);\r\n        tiles.push(tile);\r\n      }\r\n    }\r\n\r\n    let drawables = new Array<Drawable>();\r\n    let entities = new Array<Entity>();\r\n    entities = entities.concat(this.entities, this.deadEntities);\r\n\r\n    drawables = drawables.concat(\r\n      tiles,\r\n      this.decorations,\r\n      entities,\r\n      this.hitwarnings,\r\n      this.projectiles,\r\n      this.particles,\r\n      this.items,\r\n    );\r\n\r\n    for (const i in this.game.players) {\r\n      if ((this.game.players[i] as any).getRoom?.() === this) {\r\n        if (\r\n          !(\r\n            skipLocalPlayer &&\r\n            this.game.players[i] === this.game.players[this.game.localPlayerID]\r\n          )\r\n        )\r\n          drawables.push(this.game.players[i]);\r\n      }\r\n    }\r\n\r\n    drawables.sort((a, b) => {\r\n      if (a instanceof Floor || a instanceof SpawnFloor) {\r\n        return -1;\r\n      } else if (b instanceof Floor || b instanceof SpawnFloor) {\r\n        return 1;\r\n      } else if (a instanceof Decoration) {\r\n        return -1;\r\n      } else if (b instanceof Decoration) {\r\n        return 1;\r\n      }\r\n      if (Math.abs(a.drawableY - b.drawableY) < 0.1) {\r\n        const aAbove = (a as any).shouldDrawAbovePlayer === true;\r\n        const bAbove = (b as any).shouldDrawAbovePlayer === true;\r\n        // Special-case: when tied in Y, draw flagged objects above players\r\n        if (a instanceof Player && bAbove) {\r\n          return -1; // player before flagged -> flagged drawn later\r\n        } else if (b instanceof Player && aAbove) {\r\n          return 1; // flagged after player\r\n        }\r\n        // Default near-equal behavior\r\n        if (a instanceof Player) {\r\n          return 1;\r\n        } else if (b instanceof Player) {\r\n          return -1;\r\n        } else if (a instanceof Entity) {\r\n          return 1;\r\n        } else if (b instanceof Entity) {\r\n          return -1;\r\n        } else if (a instanceof Particle) {\r\n          return 1;\r\n        } else if (b instanceof Particle) {\r\n          return -1;\r\n        } else return 0;\r\n      } else {\r\n        return a.drawableY - b.drawableY;\r\n      }\r\n    });\r\n\r\n    // Draw in sorted order; apply inline tile shade immediately after each tile\r\n    for (const d of drawables) {\r\n      d.draw(delta);\r\n      if (useInlineShade && shadeSrc && d instanceof Tile) {\r\n        const tx = (d as Tile).x;\r\n        const ty = (d as Tile).y;\r\n        const sv =\r\n          this.softVis[tx] && this.softVis[tx][ty] ? this.softVis[tx][ty] : 0;\r\n        if (sv > 0) {\r\n          const prevOp = Game.ctx\r\n            .globalCompositeOperation as GlobalCompositeOperation;\r\n          if (\r\n            prevOp !==\r\n            (GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation)\r\n          ) {\r\n            Game.ctx.globalCompositeOperation =\r\n              GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation;\r\n          }\r\n\r\n          const prevAlpha = Game.ctx.globalAlpha;\r\n          Game.ctx.globalAlpha = 1;\r\n\r\n          let fade: \"left\" | \"right\" | \"up\" | \"down\" | undefined;\r\n          if (d instanceof Door && d.opened) {\r\n            switch (d.doorDir) {\r\n              case Direction.LEFT:\r\n                fade = \"left\";\r\n                break;\r\n              case Direction.RIGHT:\r\n                fade = \"right\";\r\n                break;\r\n              case Direction.UP:\r\n                fade = undefined;\r\n                break;\r\n              case Direction.DOWN:\r\n                // No gradient mask for down doors\r\n                fade = \"down\";\r\n                break;\r\n            }\r\n          } else if (d instanceof Wall) {\r\n            const info = this.wallInfo.get(`${tx},${ty}`);\r\n            if (info && (info as any).isBelowDoorWall) {\r\n              const below = this.roomArray[tx]?.[ty + 1];\r\n              if (below instanceof Door && below.opened) {\r\n                if (below.doorDir === Direction.LEFT) fade = \"left\";\r\n                else if (below.doorDir === Direction.RIGHT) fade = \"right\";\r\n              }\r\n            }\r\n          }\r\n\r\n          this.drawShadeSliceForTile(shadeSrc, tx, ty, fade);\r\n          Game.ctx.globalAlpha = prevAlpha;\r\n          if (\r\n            prevOp !==\r\n            (GameConstants.SHADE_LAYER_COMPOSITE_OPERATION as GlobalCompositeOperation)\r\n          ) {\r\n            Game.ctx.globalCompositeOperation = prevOp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.drawAbovePlayer(delta);\r\n    for (const i of this.items) {\r\n      i.drawTopLayer(delta);\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        //if (this.softVis[x][y] < 1) this.roomArray[x][y].drawAbovePlayer(delta);\r\n      }\r\n    }\r\n  };\r\n\r\n  drawShade = (delta: number) => {\r\n    if (!this.onScreen) return;\r\n\r\n    Game.ctx.save();\r\n    let bestSightRadius = 0;\r\n    for (const p in this.game.players) {\r\n      Game.ctx.globalCompositeOperation = \"source-over\"; // \"soft-light\";\r\n      Game.ctx.globalAlpha = 1;\r\n      const player = this.game.players[p];\r\n      const playerRoom = (player as any).getRoom\r\n        ? (player as any).getRoom()\r\n        : this.level.rooms[player.levelID];\r\n      if (playerRoom === this && player.defaultSightRadius > bestSightRadius) {\r\n        bestSightRadius = this.game.players[p].defaultSightRadius;\r\n      }\r\n    }\r\n    let shadingAlpha = Math.max(0, Math.min(0.8, 2 / bestSightRadius));\r\n    if (GameConstants.ALPHA_ENABLED) {\r\n      Game.ctx.globalAlpha = 0.25; //this.shadeOpacity();\r\n      //Game.ctx.resetTransform();\r\n      //Game.ctx.fillStyle = \"#4a5d23\"; // hex dark misty green\r\n      Game.ctx.fillStyle = this.shadeColor;\r\n      Game.ctx.fillRect(\r\n        this.roomX * GameConstants.TILESIZE,\r\n        (this.roomY - 1) * GameConstants.TILESIZE,\r\n        this.width * GameConstants.TILESIZE,\r\n        (this.height + 1) * GameConstants.TILESIZE,\r\n      );\r\n      Game.ctx.globalAlpha = 1;\r\n      Game.ctx.globalCompositeOperation = \"source-over\";\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  shadeOpacity = () => {\r\n    if (this.active) {\r\n      return 0.25;\r\n    } else {\r\n      return 0.25;\r\n    }\r\n  };\r\n\r\n  drawOverShade = (delta: number) => {\r\n    Game.ctx.save();\r\n    for (const e of this.entities) {\r\n      e.drawTopLayer(delta); // health bars\r\n    }\r\n\r\n    for (const p of this.projectiles) {\r\n      p.drawTopLayer(delta);\r\n    }\r\n    //Game.ctx.globalCompositeOperation = \"overlay\";\r\n    for (const h of this.hitwarnings) {\r\n      h.drawTopLayer(delta);\r\n    }\r\n    //Game.ctx.globalCompositeOperation = \"source-over\";\r\n\r\n    for (const s of this.particles) {\r\n      s.drawTopLayer(delta);\r\n    }\r\n    // draw over dithered shading\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        this.roomArray[x][y].drawAboveShading(delta);\r\n      }\r\n    }\r\n    //added for coin animation\r\n    for (const i of this.items) {\r\n      i.drawAboveShading(delta);\r\n    }\r\n\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  // for stuff rendered on top of the player\r\n  drawTopLayer = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    // gui stuff\r\n\r\n    // room name\r\n    let old = Game.ctx.font;\r\n    Game.ctx.font = GameConstants.SCRIPT_FONT_SIZE + \"px Script\";\r\n    Game.ctx.fillStyle = LevelConstants.LEVEL_TEXT_COLOR;\r\n    Game.fillText(\r\n      this.message,\r\n      GameConstants.WIDTH / 2 - Game.measureText(this.name).width / 2,\r\n      5,\r\n    );\r\n    Game.ctx.font = old;\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  // src/room.ts\r\n  createWallMask = (): HTMLCanvasElement => {\r\n    const maskCanvas = document.createElement(\"canvas\");\r\n    this.maskCanvases.push(maskCanvas); // <-- Track the canvas\r\n    maskCanvas.width = this.width * GameConstants.TILESIZE;\r\n    maskCanvas.height = this.height * GameConstants.TILESIZE;\r\n    const ctx = maskCanvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      throw new Error(\"Failed to create mask canvas context.\");\r\n    }\r\n\r\n    // Fill the canvas with opaque color\r\n    ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\r\n    ctx.fillRect(\r\n      this.roomX * GameConstants.TILESIZE,\r\n      this.roomY * GameConstants.TILESIZE,\r\n      maskCanvas.width,\r\n      maskCanvas.height,\r\n    );\r\n\r\n    // Make wall areas transparent\r\n    /*\r\n    for (let x = this.roomX - 1; x < this.roomX + 1 + this.width; x++) {\r\n      for (let y = this.roomY - 1; y < this.roomY + 1 + this.height; y++) {\r\n        const tile = this.getTile(x, y);\r\n        if (tile instanceof Wall) {\r\n          let offsetY = 0;\r\n          if (tile.direction === Direction.DOWN) offsetY = 1;\r\n          ctx.clearRect(\r\n            (x - this.roomX) * GameConstants.TILESIZE,\r\n            (y - 1 - this.roomY) * GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE,\r\n            GameConstants.TILESIZE,\r\n          );\r\n        }\r\n      }\r\n    }\r\n      */\r\n    return maskCanvas;\r\n  };\r\n\r\n  //calculate wall info for proper wall rendering\r\n  calculateWallInfo() {\r\n    this.wallInfo.clear();\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        const tile = this.getTile(x, y);\r\n        if (tile instanceof Wall || tile instanceof WallTorch) {\r\n          this.walls.push(tile);\r\n          const isTopWall = y === this.roomY;\r\n          const isBottomWall = y === this.roomY + this.height - 1;\r\n          const isLeftWall = x === this.roomX;\r\n          const isRightWall = x === this.roomX + this.width - 1;\r\n          const isInnerWall =\r\n            !isTopWall && !isBottomWall && !isLeftWall && !isRightWall;\r\n          const isBelowDoorWall =\r\n            y < this.roomY + this.height - 1 && this.getTile(x, y + 1)?.isDoor;\r\n          const isAboveDoorWall =\r\n            y < this.roomY + this.height - 1 && this.getTile(x, y - 1)?.isDoor;\r\n          const isDoorWall =\r\n            y < this.roomY + this.height && this.getTile(x, y + 1)?.isDoor;\r\n\r\n          let innerWallType = null;\r\n          if (isInnerWall) {\r\n            const hasWallAbove = this.getTile(x, y - 1) instanceof Wall;\r\n            const hasWallBelow = this.getTile(x, y + 1) instanceof Wall;\r\n\r\n            if (!hasWallAbove && hasWallBelow) {\r\n              innerWallType = \"topInner\";\r\n            } else if (hasWallAbove && !hasWallBelow) {\r\n              innerWallType = \"bottomInner\";\r\n            } else if (hasWallAbove && hasWallBelow) {\r\n              innerWallType = \"surroundedInner\";\r\n            } else {\r\n              innerWallType = \"isolatedInner\";\r\n            }\r\n          }\r\n\r\n          this.wallInfo.set(`${x},${y}`, {\r\n            isTopWall,\r\n            isBottomWall,\r\n            isLeftWall,\r\n            isRightWall,\r\n            isInnerWall,\r\n            isBelowDoorWall,\r\n            isDoorWall,\r\n            innerWallType,\r\n            isAboveDoorWall,\r\n            shouldDrawBottom:\r\n              isDoorWall ||\r\n              isBelowDoorWall ||\r\n              (isTopWall && !isLeftWall && !isRightWall) ||\r\n              isInnerWall,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and returns the darkest and lightest tiles in the room based on their visibility.\r\n   * Loops through the roomArray, sums all the vis values, sorts them, and identifies the extremes.\r\n   *\r\n   * @returns An object containing the darkest and lightest tiles with their coordinates and vis values.\r\n   */\r\n  getExtremeLuminance = (): {\r\n    darkest: { x: number; y: number; vis: number } | null;\r\n    lightest: { x: number; y: number; vis: number } | null;\r\n  } => {\r\n    const visValues: { x: number; y: number; vis: number }[] = [];\r\n\r\n    // Loop through each tile in the room\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        if (this.vis[x] && this.vis[x][y] !== undefined) {\r\n          visValues.push({ x, y, vis: this.vis[x][y] });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (visValues.length === 0) {\r\n      return { darkest: null, lightest: null };\r\n    }\r\n\r\n    // Sort the vis values in ascending order\r\n    visValues.sort((a, b) => a.vis - b.vis);\r\n\r\n    return {\r\n      darkest: visValues[visValues.length - 1],\r\n      lightest: visValues[0],\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Finds and returns the darkest and lightest tiles adjacent to a given point.\r\n   * It checks the tiles above, below, to the left, and to the right of the specified point.\r\n   *\r\n   * @param px - The x-coordinate of the reference point.\r\n   * @param py - The y-coordinate of the reference point.\r\n   * @returns An object containing the darkest and lightest adjacent tiles with their coordinates and vis values,\r\n   *          or null if no valid adjacent tiles are found.\r\n   */\r\n  getExtremeLuminanceFromPoint = (\r\n    px: number,\r\n    py: number,\r\n  ): {\r\n    darkest: { x: number; y: number; vis: number } | null;\r\n    lightest: { x: number; y: number; vis: number } | null;\r\n  } => {\r\n    const adjacentPositions = [\r\n      { x: px, y: py - 1 }, // Up\r\n      { x: px, y: py + 1 }, // Down\r\n      { x: px - 1, y: py }, // Left\r\n      { x: px + 1, y: py }, // Right\r\n    ];\r\n\r\n    const visValues: { x: number; y: number; vis: number }[] = [];\r\n\r\n    adjacentPositions.forEach((pos) => {\r\n      const { x, y } = pos;\r\n      if (this.vis[x] && this.vis[x][y] !== undefined) {\r\n        if (this.roomArray[x] && this.roomArray[x][y]) {\r\n          if (this.roomArray[x][y] instanceof Floor) {\r\n            visValues.push({ x, y, vis: this.vis[x][y] });\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (visValues.length === 0) {\r\n      return { darkest: null, lightest: null };\r\n    }\r\n\r\n    // Sort the vis values in ascending order\r\n    visValues.sort((a, b) => a.vis - b.vis);\r\n\r\n    return {\r\n      darkest: visValues[visValues.length - 1],\r\n      lightest: visValues[0],\r\n    };\r\n  };\r\n\r\n  getAverageLuminance = (): number => {\r\n    let total = 0;\r\n    let count = 0;\r\n    for (let x = this.roomX - 2; x <= this.roomX + 2; x++) {\r\n      if (this.roomArray[x] && this.roomArray[x][this.roomY]) {\r\n        for (let y = this.roomY - 2; y <= this.roomY + 2; y++) {\r\n          if (this.vis[x][y]) {\r\n            total += this.vis[x][y];\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return total / count;\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region UTILITIES\r\n\r\n  pointInside(\r\n    x: number,\r\n    y: number,\r\n    rX: number,\r\n    rY: number,\r\n    rW: number,\r\n    rH: number,\r\n  ): boolean {\r\n    if (x < rX || x >= rX + rW) return false;\r\n    if (y < rY || y >= rY + rH) return false;\r\n    return true;\r\n  }\r\n\r\n  tileInside = (tileX: number, tileY: number): boolean => {\r\n    return this.pointInside(\r\n      tileX,\r\n      tileY,\r\n      this.roomX,\r\n      this.roomY,\r\n      this.width,\r\n      this.height,\r\n    );\r\n  };\r\n\r\n  getEmptyTiles = (): Tile[] => {\r\n    let returnVal: Tile[] = [];\r\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\r\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\r\n        if (\r\n          !this.roomArray[x][y].isSolid() &&\r\n          !(this.roomArray[x][y] instanceof SpikeTrap) &&\r\n          !(this.roomArray[x][y] instanceof SpawnFloor) &&\r\n          !(this.roomArray[x][y] instanceof UpLadder) &&\r\n          !(this.roomArray[x][y] instanceof DownLadder)\r\n        ) {\r\n          returnVal.push(this.roomArray[x][y]);\r\n        }\r\n      }\r\n    }\r\n    for (const e of this.entities) {\r\n      returnVal = returnVal.filter((t) => !e.pointIn(t.x, t.y));\r\n    }\r\n    return returnVal;\r\n  };\r\n\r\n  getTile = (x: number, y: number) => {\r\n    if (this.roomArray[x]) return this.roomArray[x][y];\r\n    else return undefined;\r\n  };\r\n\r\n  getBossDoor = () => {\r\n    for (const door of this.doors) {\r\n      if (door.linkedDoor.room.type === RoomType.DOWNLADDER)\r\n        return { x: door.x, y: door.y, doorDir: door.doorDir };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  path = (): Room[] => {\r\n    // Traverse rooms via linked doors (BFS), tracking visited by room globalId\r\n    const visited = new Set<string>();\r\n    const connectedRooms: Room[] = [];\r\n    const queue: Room[] = [this as unknown as Room];\r\n\r\n    while (queue.length > 0) {\r\n      const current = queue.shift();\r\n      if (!current) continue;\r\n      const gid = (current as any).globalId as string | undefined;\r\n      if (!gid || visited.has(gid)) continue;\r\n\r\n      visited.add(gid);\r\n      connectedRooms.push(current);\r\n\r\n      try {\r\n        const doors = (current as any).doors as Array<any>;\r\n        if (!doors) continue;\r\n        for (const door of doors) {\r\n          const linked = (door as any)?.linkedDoor;\r\n          const nextRoom = linked && (linked as any).room;\r\n          if (nextRoom) {\r\n            const nextGid = (nextRoom as any).globalId as string | undefined;\r\n            if (nextGid && !visited.has(nextGid)) {\r\n              queue.push(nextRoom);\r\n            }\r\n          }\r\n        }\r\n      } catch {}\r\n    }\r\n\r\n    return connectedRooms;\r\n  };\r\n\r\n  /**\r\n   * Returns true if this room contains an ladder tile.\r\n   */\r\n  hasLadder = (ladderType: \"up\" | \"down\"): boolean => {\r\n    for (let x = this.roomX; x < this.roomX + this.width; x++) {\r\n      if (!this.roomArray[x]) continue;\r\n      for (let y = this.roomY; y < this.roomY + this.height; y++) {\r\n        const t = this.roomArray[x][y];\r\n        if (t instanceof UpLadder && ladderType === \"up\") return true;\r\n        if (t instanceof DownLadder && ladderType === \"down\" && t.isSidePath)\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  hasKey = (): boolean => {\r\n    for (const item of this.items) {\r\n      if (item instanceof Key) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Computes the shortest number of room hops (through linked doors) to reach\r\n   * a room that contains an `UpLadder`. Returns 0 if this room already has one,\r\n   * or null if no such room is reachable.\r\n   */\r\n  getDistanceToNearestLadder = (ladderType: \"up\" | \"down\"): number | null => {\r\n    const currentRoom = this;\r\n    if (currentRoom.hasLadder(ladderType)) return 0;\r\n\r\n    const visited = new Set<string>();\r\n    const queue: Array<{ room: Room; dist: number }> = [];\r\n\r\n    visited.add(currentRoom.globalId);\r\n    queue.push({ room: currentRoom, dist: 0 });\r\n\r\n    while (queue.length > 0) {\r\n      const { room, dist } = queue.shift();\r\n      for (const d of room.doors) {\r\n        const nextRoom = d && d.linkedDoor && d.linkedDoor.room;\r\n        if (!nextRoom) continue;\r\n        const gid = nextRoom.globalId;\r\n        if (visited.has(gid)) continue;\r\n        if (nextRoom.hasLadder(ladderType)) {\r\n          return dist + 1;\r\n        }\r\n        visited.add(gid);\r\n        queue.push({ room: nextRoom, dist: dist + 1 });\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  hasNoEnemies = () => {\r\n    let enemies = this.entities.filter((e) => e instanceof Enemy);\r\n    const cleared = enemies.length === 0 && this.lastEnemyCount > 0;\r\n\r\n    return cleared;\r\n  };\r\n\r\n  roomCleared = () => {\r\n    const enemies = this.entities.filter((e) => e instanceof Enemy);\r\n    return enemies.length === 0;\r\n  };\r\n\r\n  hasHitwarning = (x: number, y: number): boolean => {\r\n    /*\r\n    for (const e of this.entities) {\r\n      if (e instanceof Enemy && e.x === x && e.y === y) danger += 1;\r\n    }\r\n    */\r\n    for (const h of this.hitwarnings) {\r\n      if (h.x === x && h.y === y && !h.dead) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  hasEnemy = (x: number, y: number): boolean => {\r\n    for (const e of this.entities) {\r\n      if (e instanceof Enemy && e.x === x && e.y === y) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Checks if a tile at the given coordinates is empty (not solid and no entities).\r\n   * This is a comprehensive check that combines tile solidity and entity presence.\r\n   *\r\n   * @param x - The x-coordinate to check\r\n   * @param y - The y-coordinate to check\r\n   * @returns True if the tile is empty (walkable and no entities), false otherwise\r\n   */\r\n  isTileEmpty = (x: number, y: number): boolean => {\r\n    // First check if the position exists in the room array\r\n    if (!this.roomArray[x] || !this.roomArray[x][y]) {\r\n      return false;\r\n    }\r\n\r\n    const tile = this.roomArray[x][y];\r\n\r\n    // Check if the tile is solid\r\n    if (tile.isSolid()) {\r\n      return false;\r\n    }\r\n\r\n    // Check for specific tile types that should be considered non-empty\r\n    if (\r\n      tile instanceof SpikeTrap ||\r\n      tile instanceof SpawnFloor ||\r\n      tile instanceof UpLadder ||\r\n      tile instanceof DownLadder\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    // Check if there are any entities at this position\r\n    for (const entity of this.entities) {\r\n      if (entity.pointIn(x, y)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  hasEnemyInRadius = (x: number, y: number): boolean => {\r\n    const radius = 2;\r\n    const radiusSquared = radius * radius; // Calculate once\r\n\r\n    for (let dx = -radius; dx <= radius; dx++) {\r\n      for (let dy = -radius; dy <= radius; dy++) {\r\n        // Check if point is within radius (circular check)\r\n        if (dx * dx + dy * dy <= radiusSquared) {\r\n          const checkX = x + dx;\r\n          const checkY = y + dy;\r\n\r\n          // Add bounds checking if needed\r\n          if (this.hasEnemy(checkX, checkY)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  checkForNoEnemies = () => {\r\n    if (this.hasNoEnemies()) {\r\n      let bossFlag = false;\r\n      this.doors.forEach((d) => {\r\n        if (d.type === DoorType.GUARDEDDOOR) {\r\n          d.unGuard();\r\n          bossFlag = true;\r\n          this.game.startCameraAnimation(\r\n            this.getBossDoor().x,\r\n            this.getBossDoor().y,\r\n            175,\r\n          );\r\n        }\r\n      });\r\n      if (bossFlag) {\r\n        this.game.pushMessage(\r\n          \"The foes have been slain and the door allows you passage.\",\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // This pattern appears in multiple methods like addVendingMachine, addChests, addSpikes, etc.\r\n  getRandomEmptyPosition(\r\n    tiles: Tile[],\r\n    ignore?: { x: number; y: number },\r\n  ): { x: number; y: number } | null {\r\n    if (tiles.length === 0) return null;\r\n    const tile = tiles.splice(\r\n      Game.rand(0, tiles.length - 1, Random.rand),\r\n      1,\r\n    )[0];\r\n    if (ignore && tile.x === ignore.x && tile.y === ignore.y) {\r\n      return this.getRandomEmptyPosition(tiles, ignore);\r\n    }\r\n    return { x: tile.x, y: tile.y };\r\n  }\r\n\r\n  getBigRandomEmptyPosition(tiles: Tile[]): {\r\n    x: number;\r\n    y: number;\r\n  } {\r\n    if (tiles.length === 0) return null;\r\n\r\n    // Create a set for O(1) lookup of tile coordinates\r\n    const tileSet = new Set(tiles.map((t) => `${t.x},${t.y}`));\r\n\r\n    // Find all tiles that can be the top-left corner of a 2x2 patch\r\n    const bigTilePositions = tiles.filter((t) => {\r\n      // Check if this tile and the 3 adjacent tiles (right, below, diagonal) are all empty\r\n      return (\r\n        tileSet.has(`${t.x + 1},${t.y}`) && // right\r\n        tileSet.has(`${t.x},${t.y + 1}`) && // below\r\n        tileSet.has(`${t.x + 1},${t.y + 1}`)\r\n      ); // diagonal\r\n    });\r\n\r\n    if (bigTilePositions.length === 0) return null;\r\n\r\n    // Randomly select one of the valid 2x2 positions\r\n    const selectedTile =\r\n      bigTilePositions[Game.rand(0, bigTilePositions.length - 1, Random.rand)];\r\n    return { x: selectedTile.x, y: selectedTile.y };\r\n  }\r\n  // Used in populateUpLadder, populateDownLadder, populateRopeHole, populateRopeCave\r\n  getRoomCenter(): { x: number; y: number } {\r\n    return {\r\n      x: Math.floor(this.roomX + this.width / 2),\r\n      y: Math.floor(this.roomY + this.height / 2),\r\n    };\r\n  }\r\n\r\n  // Used in multiple methods including castShadowsAtAngle\r\n  isPositionInRoom(x: number, y: number): boolean {\r\n    return !(\r\n      Math.floor(x) < this.roomX ||\r\n      Math.floor(x) >= this.roomX + this.width ||\r\n      Math.floor(y) < this.roomY ||\r\n      Math.floor(y) >= this.roomY + this.height\r\n    );\r\n  }\r\n\r\n  pathIsBlockedBy(tile: Tile, otherTile: Tile): Entity[] {\r\n    const entities = [];\r\n    if (tile.isSolid()) entities.push(tile);\r\n    if (otherTile.isSolid()) entities.push(otherTile);\r\n    return entities;\r\n  }\r\n\r\n  // checks for obstructions between doors and finds paths avoiding obstacles.\r\n\r\n  removeDoorObstructions = () => {\r\n    let obstacles = [];\r\n    for (const door of this.doors) {\r\n      for (const otherDoor of this.doors) {\r\n        if (door === otherDoor || door === null || otherDoor === null) continue; // Fixed: use continue instead of break\r\n        const pathObstacles = this.findPath(door, otherDoor);\r\n        if (pathObstacles.length > 0) {\r\n          obstacles.push(...pathObstacles); // Fixed: actually collect the obstacles\r\n        }\r\n      }\r\n    }\r\n    if (obstacles.length > 0) {\r\n      for (let obstacle of obstacles) {\r\n        // console.log(`Removing obstacle at (${obstacle.x},${obstacle.y})`);\r\n        this.entities = this.entities.filter((e) => e !== obstacle);\r\n        obstacle = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // avoid blocking doorways with unbreakable entities\r\n  findPath = (\r\n    startTile: Tile,\r\n    targetTile: Tile,\r\n    additionalBlockedPositions?: astar.Position[],\r\n  ): Array<Entity> => {\r\n    let disablePositions = Array<astar.Position>();\r\n    let obstacleCandidates = [];\r\n\r\n    // Expand entity types that can block paths\r\n    for (const e of this.entities) {\r\n      if (\r\n        e instanceof VendingMachine ||\r\n        e instanceof Rock ||\r\n        e instanceof Barrel ||\r\n        e instanceof Crate ||\r\n        e instanceof Block ||\r\n        e instanceof TombStone ||\r\n        e instanceof PottedPlant\r\n      ) {\r\n        disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n        obstacleCandidates.push(e);\r\n      }\r\n    }\r\n\r\n    // Add any additional blocked positions (for testing if a position would block)\r\n    if (additionalBlockedPositions) {\r\n      disablePositions.push(...additionalBlockedPositions);\r\n    }\r\n\r\n    // Create a grid of the room - Fixed bounds\r\n    let grid = [];\r\n    for (let x = 0; x < this.width; x++) {\r\n      grid[x] = [];\r\n      for (let y = 0; y < this.height; y++) {\r\n        const roomX = this.roomX + x;\r\n        const roomY = this.roomY + y;\r\n        if (this.roomArray[roomX] && this.roomArray[roomX][roomY])\r\n          grid[x][y] = this.roomArray[roomX][roomY];\r\n        else grid[x][y] = false;\r\n      }\r\n    }\r\n\r\n    // Adjust start and target positions to grid coordinates\r\n    const startGridPos = {\r\n      x: startTile.x - this.roomX,\r\n      y: startTile.y - this.roomY,\r\n    };\r\n    const targetGridPos = {\r\n      x: targetTile.x - this.roomX,\r\n      y: targetTile.y - this.roomY,\r\n    };\r\n\r\n    // Adjust disabled positions to grid coordinates\r\n    const gridDisabledPositions = disablePositions.map((pos) => ({\r\n      x: pos.x - this.roomX,\r\n      y: pos.y - this.roomY,\r\n    }));\r\n\r\n    let moves = astar.AStar.search(\r\n      grid,\r\n      startGridPos,\r\n      targetGridPos,\r\n      gridDisabledPositions,\r\n      false,\r\n      false,\r\n      false,\r\n    );\r\n\r\n    if (moves.length === 0) {\r\n      return obstacleCandidates;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if placing an entity at the given coordinates would block any door-to-door paths.\r\n   * This is useful for preventing placement of objects that would obstruct navigation.\r\n   *\r\n   * @param x - The x-coordinate to test\r\n   * @param y - The y-coordinate to test\r\n   * @returns True if placing an entity here would block a door, false otherwise\r\n   */\r\n  wouldBlockDoor = (x: number, y: number): boolean => {\r\n    // If there are fewer than 2 doors, no paths to block\r\n    if (this.doors.length < 2) {\r\n      return false;\r\n    }\r\n\r\n    // Test each pair of doors\r\n    for (let i = 0; i < this.doors.length; i++) {\r\n      for (let j = i + 1; j < this.doors.length; j++) {\r\n        const door1 = this.doors[i];\r\n        const door2 = this.doors[j];\r\n\r\n        if (!door1 || !door2) continue;\r\n\r\n        // First test: can we find a path WITHOUT the blocking position?\r\n        const obstaclesWithoutBlock = this.findPath(door1, door2);\r\n\r\n        // If there's already no path without our test position, skip this door pair\r\n        if (obstaclesWithoutBlock.length > 0) {\r\n          continue;\r\n        }\r\n\r\n        // Second test: can we find a path WITH the blocking position?\r\n        const additionalBlockedPos = [{ x, y }];\r\n        const obstaclesWithBlock = this.findPath(\r\n          door1,\r\n          door2,\r\n          additionalBlockedPos,\r\n        );\r\n\r\n        // If path existed without block but doesn't exist with block, then this position blocks the door\r\n        if (obstaclesWithBlock.length > 0) {\r\n          console.warn(\"DOOR WOULD BE BLOCKED!\");\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Gets empty tiles that don't block door-to-door paths.\r\n   * This is a filtered version of getEmptyTiles() that excludes positions that would obstruct navigation.\r\n   *\r\n   * @returns Array of tiles that are empty and don't block door paths\r\n   */\r\n  getEmptyTilesNotBlockingDoors = (): Tile[] => {\r\n    const emptyTiles = this.getEmptyTiles();\r\n    return emptyTiles.filter((tile) => !this.wouldBlockDoor(tile.x, tile.y));\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region KEY PATHFINDING HELPERS\r\n\r\n  /**\r\n   * Finds the shortest sequence of doors to traverse from this room to the target room.\r\n   * Returns an ordered array of doors that begins with a door in this room and ends with\r\n   * the door that enters the target room. If no path is found, returns null.\r\n   * If samePathOnly is true, restrict traversal to rooms that share the same pathId.\r\n   */\r\n  findShortestDoorPathTo = (\r\n    target: Room,\r\n    samePathOnly: boolean = true,\r\n  ): Door[] | null => {\r\n    if (!target) return null;\r\n    if (target === (this as unknown as Room)) return [];\r\n\r\n    try {\r\n      const start: Room = this as unknown as Room;\r\n      const targetGid = (target as any).globalId as string | undefined;\r\n      const startPathId = (start as any).pathId;\r\n\r\n      const queue: Room[] = [start];\r\n      const visited = new Set<string>();\r\n      const prev = new Map<\r\n        string,\r\n        { prevRoomGID: string | null; viaDoor: Door | null }\r\n      >();\r\n\r\n      const setIfUnset = (\r\n        gid: string,\r\n        value: { prevRoomGID: string | null; viaDoor: Door | null },\r\n      ) => {\r\n        if (!prev.has(gid)) prev.set(gid, value);\r\n      };\r\n\r\n      const getRoomGID = (r: Room | undefined) =>\r\n        (r as any)?.globalId as string | undefined;\r\n\r\n      const allowRoom = (r: Room) =>\r\n        !samePathOnly || (r as any).pathId === startPathId;\r\n\r\n      const startGid = getRoomGID(start);\r\n      if (!startGid) return null;\r\n      visited.add(startGid);\r\n      setIfUnset(startGid, { prevRoomGID: null, viaDoor: null });\r\n\r\n      while (queue.length > 0) {\r\n        const current = queue.shift();\r\n        if (!current) continue;\r\n        const currentGid = getRoomGID(current);\r\n        if (!currentGid) continue;\r\n\r\n        if (current === target) {\r\n          // Reconstruct door path by backtracking from target to start\r\n          const doors: Door[] = [];\r\n          let cursorGid: string | undefined = currentGid;\r\n          while (cursorGid && cursorGid !== startGid) {\r\n            const entry = prev.get(cursorGid);\r\n            if (!entry) break;\r\n            if (entry.viaDoor) doors.push(entry.viaDoor);\r\n            cursorGid = entry.prevRoomGID || undefined;\r\n          }\r\n          doors.reverse();\r\n          return doors;\r\n        }\r\n\r\n        const doors = (current as any).doors as Array<Door> | undefined;\r\n        if (!doors) continue;\r\n        for (const door of doors) {\r\n          const nextRoom = (door as any)?.linkedDoor?.room as Room | undefined;\r\n          if (!nextRoom) continue;\r\n          if (!allowRoom(nextRoom)) continue;\r\n          const nextGid = getRoomGID(nextRoom);\r\n          if (!nextGid || visited.has(nextGid)) continue;\r\n          visited.add(nextGid);\r\n          setIfUnset(nextGid, { prevRoomGID: currentGid, viaDoor: door });\r\n          queue.push(nextRoom);\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // getWalkableNeighborNear removed: we now allow dots on doors and downladders\r\n\r\n  /**\r\n   * Builds an in-room path (list of world tile positions) from (sx,sy) to (tx,ty).\r\n   * Uses the room's A* configuration. If the target tile is not walkable, pass a\r\n   * walkable adjacent tile as the target and append the original target afterwards for display.\r\n   */\r\n  buildTilePathPositions = (\r\n    sx: number,\r\n    sy: number,\r\n    tx: number,\r\n    ty: number,\r\n  ): Array<{ x: number; y: number }> => {\r\n    // Build grid mirroring findPath()\r\n    const grid: any[][] = [];\r\n    for (let x = 0; x < this.width; x++) {\r\n      grid[x] = [];\r\n      for (let y = 0; y < this.height; y++) {\r\n        const roomX = this.roomX + x;\r\n        const roomY = this.roomY + y;\r\n        if (this.roomArray[roomX] && this.roomArray[roomX][roomY])\r\n          grid[x][y] = this.roomArray[roomX][roomY];\r\n        else grid[x][y] = false;\r\n      }\r\n    }\r\n\r\n    const startGridPos = { x: sx - this.roomX, y: sy - this.roomY };\r\n    const targetGridPos = { x: tx - this.roomX, y: ty - this.roomY };\r\n\r\n    const moves = astar.AStar.search(\r\n      grid,\r\n      startGridPos,\r\n      targetGridPos,\r\n      undefined,\r\n      false,\r\n      false,\r\n      false,\r\n    );\r\n\r\n    const path = moves.map((m) => ({\r\n      x: m.pos.x + this.roomX,\r\n      y: m.pos.y + this.roomY,\r\n    }));\r\n    return path;\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region MISC\r\n\r\n  /**\r\n   * Adds a new BeamEffect to the room.\r\n   *\r\n   * @param x1 - Starting tile X coordinate.\r\n   * @param y1 - Starting tile Y coordinate.\r\n   * @param x2 - Ending tile X coordinate.\r\n   * @param y2 - Ending tile Y coordinate.\r\n   */\r\n  public addBeamEffect(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    parent: Entity,\r\n  ): void {\r\n    const beam = new BeamEffect(x1, y1, x2, y2, parent);\r\n    this.beamEffects.push(beam);\r\n  }\r\n\r\n  public async changeReverb(newImpulsePath: string) {\r\n    await ReverbEngine.setReverbImpulse(newImpulsePath);\r\n  }\r\n  get roomArea() {\r\n    let area = (this.width - 2) * (this.height - 2);\r\n    let openTiles = [];\r\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\r\n      for (let y = this.roomY + 1; y < this.roomY + this.height - 1; y++) {\r\n        if (this.roomArray[x][y] instanceof Floor) openTiles.push({ x, y });\r\n      }\r\n    }\r\n    //console.log(area, openTiles.length);\r\n    return openTiles.length;\r\n  }\r\n  /**\r\n   * Determines if the room is currently on screen.\r\n   * Uses a buffer of 2 tiles beyond the room's dimensions to account for partial visibility.\r\n   *\r\n   * @returns {boolean} - True if the room is on screen, otherwise false.\r\n   */\r\n  public roomOnScreen(player: Player) {\r\n    const tileSize = GameConstants.TILESIZE;\r\n\r\n    // Calculate room boundaries with a buffer of 2 tiles\r\n    const roomLeft = (this.roomX - 2) * tileSize;\r\n    const roomRight = (this.roomX + this.width + 2) * tileSize;\r\n    const roomTop = (this.roomY - 2) * tileSize;\r\n    const roomBottom = (this.roomY + this.height + 2) * tileSize;\r\n\r\n    // Convert player position from tiles to pixels\r\n    const playerPosX = player.x * tileSize;\r\n    const playerPosY = player.y * tileSize;\r\n\r\n    // Calculate camera position in pixels\r\n    const cameraX =\r\n      playerPosX -\r\n      player.drawX +\r\n      0.5 * tileSize -\r\n      0.5 * GameConstants.WIDTH -\r\n      this.game.screenShakeX; // X-coordinate of the camera's top-left corner\r\n    const cameraY =\r\n      playerPosY -\r\n      player.drawY +\r\n      0.5 * tileSize -\r\n      0.5 * GameConstants.HEIGHT - // Corrected from WIDTH to HEIGHT\r\n      this.game.screenShakeY; // Y-coordinate of the camera's top-left corner\r\n    const cameraWidth = GameConstants.WIDTH; // Corrected from innerWidth\r\n    const cameraHeight = GameConstants.HEIGHT; // Corrected from innerHeight\r\n\r\n    // Define the camera's boundaries\r\n    const cameraLeft = cameraX;\r\n    const cameraRight = cameraX + cameraWidth;\r\n    const cameraTop = cameraY;\r\n    const cameraBottom = cameraY + cameraHeight;\r\n\r\n    // Check if the room's boundaries overlap with the camera's view\r\n    const isOverlapping = !(\r\n      roomRight < cameraLeft ||\r\n      roomLeft > cameraRight ||\r\n      roomBottom < cameraTop ||\r\n      roomTop > cameraBottom\r\n    );\r\n\r\n    this.onScreen = isOverlapping;\r\n  }\r\n\r\n  private setReverb() {\r\n    const roomArea = this.roomArea;\r\n    if (roomArea < 10) {\r\n      this.changeReverb(`res/SFX/impulses/small.mp3`);\r\n    } else if (roomArea < 55) {\r\n      this.changeReverb(`res/SFX/impulses/medium.mp3`);\r\n    } else {\r\n      this.changeReverb(`res/SFX/impulses/large.mp3`);\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * Adds a door with offset to prevent overlapping doors.\r\n   * If a door already exists at the desired (x, y) position, it offsets the door randomly to either side.\r\n   * Ensures the new door is at least one tile away from the room's edge based on its direction.\r\n   *\r\n   * @param x - The x-coordinate for the door placement.\r\n   * @param y - The y-coordinate for the door placement.\r\n   * @param room - The Room object where the door is being placed. Defaults to the current room.\r\n   * @param tunnelDoor - Whether the door is a tunnel door. Defaults to false.\r\n   * @returns The created Door object or null if placement failed.\r\n   */\r\n  addDoorWithOffset = (\r\n    x: number,\r\n    y: number,\r\n    room: Room = this,\r\n    tunnelDoor: boolean = false,\r\n  ) => {\r\n    // Helper function to check if any vending machine is at a position\r\n    const hasVendingMachineAt = (checkX: number, checkY: number): boolean => {\r\n      return room.entities.some(\r\n        (entity) =>\r\n          entity instanceof VendingMachine &&\r\n          entity.x === checkX &&\r\n          entity.y === checkY,\r\n      );\r\n    };\r\n\r\n    // Check if a door already exists at the desired position\r\n    if (room.roomArray[x]?.[y] instanceof Door) {\r\n      // Determine the direction based on the door's position\r\n      let direction: Direction | null = null;\r\n      if (x === room.roomX) {\r\n        direction = Direction.RIGHT;\r\n      } else if (x === room.roomX + room.width - 1) {\r\n        direction = Direction.LEFT;\r\n      } else if (y === room.roomY) {\r\n        direction = Direction.DOWN;\r\n      } else if (y === room.roomY + room.height - 1) {\r\n        direction = Direction.UP;\r\n      }\r\n\r\n      if (!direction) {\r\n        // console.log(\"Invalid door position.\");\r\n        return null;\r\n      }\r\n\r\n      // Define possible offset adjustments based on door direction\r\n      const offsetOptions: Array<{ dx: number; dy: number }> = [];\r\n      switch (direction) {\r\n        case Direction.RIGHT:\r\n        case Direction.LEFT:\r\n          // Offsets along the y-axis for vertical walls\r\n          offsetOptions.push({ dx: 0, dy: 1 }, { dx: 0, dy: -1 });\r\n          break;\r\n      }\r\n\r\n      // Shuffle the offset options to randomize placement\r\n      const shuffledOffsets = offsetOptions.sort(() => Random.rand() - 0.5);\r\n\r\n      // Check if original position has vending machine\r\n      if (hasVendingMachineAt(x, y)) {\r\n        return null;\r\n      }\r\n\r\n      for (const offset of shuffledOffsets) {\r\n        const newX = x + offset.dx;\r\n        const newY = y + offset.dy;\r\n\r\n        // Ensure the new position is within bounds and not on the edge\r\n        const isWithinBounds =\r\n          newX > room.roomX &&\r\n          newX < room.roomX + room.width - 1 &&\r\n          newY > room.roomY &&\r\n          newY < room.roomY + room.height - 1;\r\n\r\n        if (\r\n          isWithinBounds &&\r\n          !(room.roomArray[newX]?.[newY] instanceof Door) &&\r\n          !hasVendingMachineAt(newX, newY)\r\n        ) {\r\n          // Offset the door placement\r\n          return room.addDoor(newX, newY, room, tunnelDoor);\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    // Check for vending machine at original position before placing door normally\r\n    if (hasVendingMachineAt(x, y)) {\r\n      return null;\r\n    }\r\n\r\n    // If no door exists at the desired position and no vending machine, place it normally\r\n    return room.addDoor(x, y, room, tunnelDoor);\r\n  };\r\n\r\n  findPathToDoor = (door: Door) => {\r\n    let disablePositions = Array<astar.Position>();\r\n    for (const e of this.entities) {\r\n      disablePositions.push({ x: e.x, y: e.y } as astar.Position);\r\n    }\r\n    const path = astar.AStar.search(\r\n      this.roomArray,\r\n      this,\r\n      door,\r\n      [],\r\n      false,\r\n      false,\r\n      false,\r\n    );\r\n    return path;\r\n  };\r\n\r\n  /**\r\n   * Finds all wall tiles that do not have a door in them or adjacent to them.\r\n   * @returns An array of wall tiles without doors or adjacent doors.\r\n   */\r\n  getEmptyWall(): Wall[] {\r\n    const emptyWalls: Wall[] = [];\r\n\r\n    for (let x = this.roomX + 1; x < this.roomX + this.width - 1; x++) {\r\n      for (let y = this.roomY - 1; y < this.roomY + this.height - 1; y++) {\r\n        const tile = this.roomArray[x][y];\r\n\r\n        if (tile instanceof Wall || tile instanceof WallTorch) {\r\n          // Check if the current wall tile is not a door\r\n          if (!(tile instanceof Door)) {\r\n            // Check adjacent tiles for doors\r\n            const adjacentTiles = [\r\n              this.roomArray[x + 1]?.[y],\r\n              this.roomArray[x - 1]?.[y],\r\n              this.roomArray[x]?.[y + 1],\r\n              this.roomArray[x]?.[y - 1],\r\n            ];\r\n\r\n            const hasAdjacentDoor = adjacentTiles.some(\r\n              (adjTile) => adjTile instanceof Door,\r\n            );\r\n\r\n            if (!hasAdjacentDoor) {\r\n              emptyWalls.push(tile);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return emptyWalls;\r\n  }\r\n\r\n  pointExists = (x: number, y: number) => {\r\n    return this.roomArray[x] && this.roomArray[x][y];\r\n  };\r\n\r\n  /**\r\n   * Removes a specified empty wall from the room.\r\n   * @param wall - The wall tile to remove.\r\n   * @returns An object containing the x and y coordinates of the removed wall.\r\n   */\r\n  removeEmptyWall(wall: Wall): { x: number; y: number } | null {\r\n    if (!(wall instanceof Wall)) return null;\r\n\r\n    const { x, y } = wall;\r\n\r\n    // Replace the wall with a Floor tile to maintain room integrity\r\n    this.roomArray[x][y] = new Floor(this, x, y);\r\n\r\n    // Remove from innerWalls or outerWalls if applicable\r\n    const initialInnerWallsCount = this.innerWalls.length;\r\n    this.innerWalls = this.innerWalls.filter((w) => w !== wall);\r\n    const finalInnerWallsCount = this.innerWalls.length;\r\n\r\n    return { x, y };\r\n  }\r\n\r\n  /**\r\n   * Places a VendingMachine in an empty wall.\r\n   */\r\n  placeVendingMachineInWall(item?: Item): void {\r\n    let emptyWalls = this.getEmptyWall();\r\n    emptyWalls = emptyWalls.filter((wall) => {\r\n      const wallInfo = wall.wallInfo();\r\n      return wallInfo && !wallInfo.isInnerWall;\r\n    });\r\n    if (emptyWalls.length === 0) return;\r\n\r\n    // Select a random empty wall\r\n    const selectedWall = Game.randTable(emptyWalls, Random.rand);\r\n    if (!selectedWall) return;\r\n\r\n    // Remove the selected wall\r\n    const removedWallInfo = this.removeEmptyWall(selectedWall);\r\n    if (!removedWallInfo) return;\r\n\r\n    const { x, y } = removedWallInfo;\r\n\r\n    // Create and add the VendingMachine\r\n    this.addVendingMachine(Random.rand, x, y, item);\r\n  }\r\n\r\n  // Add methods to manage blur cache\r\n  private invalidateBlurCache = () => {\r\n    this.blurCache.isValid = false;\r\n    this.blurCache.lastLightingUpdate = this.lastLightingUpdate;\r\n  };\r\n\r\n  private shouldUseBlurCache = (): boolean => {\r\n    return (\r\n      !this.active &&\r\n      this.blurCache.isValid &&\r\n      this.blurCache.lastLightingUpdate === this.lastLightingUpdate\r\n    );\r\n  };\r\n\r\n  readonly getPlayer = () => {\r\n    for (const i in this.game.players) {\r\n      if ((this.game.players[i] as any).getRoom?.() === this) {\r\n        return this.game.players[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private cacheBlurResult = (\r\n    type: \"color6px\" | \"color12px\" | \"shade5px\" | \"bloom8px\" | \"color8px\",\r\n    canvas: HTMLCanvasElement,\r\n  ) => {\r\n    if (!this.active) {\r\n      // Clone the canvas to cache it\r\n      const cachedCanvas = document.createElement(\"canvas\");\r\n      cachedCanvas.width = canvas.width;\r\n      cachedCanvas.height = canvas.height;\r\n      const ctx = cachedCanvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        ctx.drawImage(canvas, 0, 0);\r\n        this.blurCache[type] = cachedCanvas;\r\n        this.blurCache.isValid = true;\r\n        this.blurCache.lastLightingUpdate = this.lastLightingUpdate;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Floor } from \"../tile/floor\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Room, WallDirection } from \"./room\";\r\n\r\nexport class RoomBuilder {\r\n  room: Room;\r\n  constructor(room: Room) {\r\n    this.room = room;\r\n    this.buildEmptyRoom();\r\n  }\r\n\r\n  private buildEmptyRoom() {\r\n    // fill in wall and floor\r\n    for (let x = this.room.roomX; x < this.room.roomX + this.room.width; x++) {\r\n      for (\r\n        let y = this.room.roomY;\r\n        y < this.room.roomY + this.room.height;\r\n        y++\r\n      ) {\r\n        if (\r\n          this.room.pointInside(\r\n            x,\r\n            y,\r\n            this.room.roomX + 1,\r\n            this.room.roomY + 1,\r\n            this.room.width - 2,\r\n            this.room.height - 2,\r\n          )\r\n        ) {\r\n          this.room.roomArray[x][y] = new Floor(this.room, x, y);\r\n        } else {\r\n          this.room.roomArray[x][y] = new Wall(\r\n            this.room,\r\n            x,\r\n            y,\r\n            this.getWallType(\r\n              x,\r\n              y,\r\n              this.room.roomX,\r\n              this.room.roomY,\r\n              this.room.width,\r\n              this.room.height,\r\n            ),\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getWallType = (\r\n    pointX: number,\r\n    pointY: number,\r\n    rectX: number,\r\n    rectY: number,\r\n    width: number,\r\n    height: number,\r\n  ): Array<WallDirection> => {\r\n    let directions: Array<WallDirection> = [];\r\n    if (pointY === rectY && pointX >= rectX && pointX <= rectX + width)\r\n      directions.push(WallDirection.NORTH);\r\n    if (pointY === rectY + height && pointX >= rectX && pointX <= rectX + width)\r\n      directions.push(WallDirection.SOUTH);\r\n    if (pointX === rectX && pointY >= rectY && pointY <= rectY + height)\r\n      directions.push(WallDirection.WEST);\r\n    if (pointX === rectX + width && pointY >= rectY && pointY <= rectY + height)\r\n      directions.push(WallDirection.EAST);\r\n    return directions;\r\n  };\r\n\r\n  addWallBlocks(rand: () => number) {\r\n    this.addWallBlocksStandard(rand);\r\n  }\r\n\r\n  private countWallNeighbors = (wall: Wall): number => {\r\n    let count = 0;\r\n    for (let xx = wall.x - 1; xx <= wall.x + 1; xx++) {\r\n      for (let yy = wall.y - 1; yy <= wall.y + 1; yy++) {\r\n        if (\r\n          this.room.roomArray[xx]?.[yy] instanceof Wall &&\r\n          !(xx === wall.x && yy === wall.y)\r\n        )\r\n          count++;\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // Original behavior moved here; used by addWallBlocks\r\n  addWallBlocksStandard(rand: () => number) {\r\n    let numBlocks = Game.randTable([0, 0, 1, 1, 2, 2, 2, 2, 3], rand);\r\n    if (this.room.width > 8 && rand() > 0.5) numBlocks *= 4;\r\n    for (let i = 0; i < numBlocks; i++) {\r\n      let blockW = Math.min(\r\n        Game.randTable([2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5], rand),\r\n        this.room.width - 4,\r\n      );\r\n      let blockH = Math.min(\r\n        blockW + Game.rand(-2, 2, rand),\r\n        this.room.height - 4,\r\n      );\r\n\r\n      let x = Game.rand(\r\n        this.room.roomX + 2,\r\n        this.room.roomX + this.room.width - blockW - 2,\r\n        rand,\r\n      );\r\n      let y = Game.rand(\r\n        this.room.roomY + 2,\r\n        this.room.roomY + this.room.height - blockH - 2,\r\n        rand,\r\n      );\r\n\r\n      for (let xx = x; xx < x + blockW; xx++) {\r\n        for (let yy = y; yy < y + blockH; yy++) {\r\n          let w = new Wall(this.room, xx, yy);\r\n          this.room.roomArray[xx][yy] = w;\r\n          this.room.innerWalls.push(w);\r\n        }\r\n      }\r\n      this.room.innerWalls.forEach((wall) => {\r\n        if (this.countWallNeighbors(wall) <= 1) {\r\n          this.room.removeWall(wall.x, wall.y);\r\n          this.room.roomArray[wall.x][wall.y] = new Floor(\r\n            this.room,\r\n            wall.x,\r\n            wall.y,\r\n          );\r\n          this.room.innerWalls = this.room.innerWalls.filter((w) => w !== wall);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Variation: creates smaller, jagged clusters with carved gaps; same placement constraints\r\n  addWallBlocksVariant(rand: () => number) {\r\n    let numBlocks = Game.randTable([2, 2, 3, 3, 4, 5], rand);\r\n    if (this.room.width > 10 && rand() > 0.5) numBlocks += 2;\r\n    for (let i = 0; i < numBlocks; i++) {\r\n      // Favor smaller widths/heights to form jagged shapes\r\n      let baseW = Game.randTable([1, 2, 2, 2, 3, 3], rand);\r\n      let blockW = Math.min(Math.max(1, baseW), this.room.width - 4);\r\n      let blockH = Math.min(\r\n        Math.max(1, baseW + Game.rand(-1, 1, rand)),\r\n        this.room.height - 4,\r\n      );\r\n\r\n      let x = Game.rand(\r\n        this.room.roomX + 2,\r\n        this.room.roomX + this.room.width - blockW - 2,\r\n        rand,\r\n      );\r\n      let y = Game.rand(\r\n        this.room.roomY + 2,\r\n        this.room.roomY + this.room.height - blockH - 2,\r\n        rand,\r\n      );\r\n\r\n      // Place a ragged block by skipping some interior cells randomly\r\n      for (let xx = x; xx < x + blockW; xx++) {\r\n        for (let yy = y; yy < y + blockH; yy++) {\r\n          // Keep edges of the block more solid, randomize interior\r\n          const isEdge =\r\n            xx === x ||\r\n            yy === y ||\r\n            xx === x + blockW - 1 ||\r\n            yy === y + blockH - 1;\r\n          if (isEdge || rand() > 0.35) {\r\n            let w = new Wall(this.room, xx, yy);\r\n            this.room.roomArray[xx][yy] = w;\r\n            this.room.innerWalls.push(w);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Carve 1-2 holes to ensure flow through clusters\r\n      const holes = Game.randTable([0, 1, 1, 2], rand);\r\n      for (let h = 0; h < holes; h++) {\r\n        const hx = Game.rand(x + 1, Math.max(x + 1, x + blockW - 2), rand);\r\n        const hy = Game.rand(y + 1, Math.max(y + 1, y + blockH - 2), rand);\r\n        if (this.room.roomArray[hx]?.[hy] instanceof Wall) {\r\n          this.room.removeWall(hx, hy);\r\n          this.room.roomArray[hx][hy] = new Floor(this.room, hx, hy);\r\n          this.room.innerWalls = this.room.innerWalls.filter(\r\n            (w) => !(w.x === hx && w.y === hy),\r\n          );\r\n        }\r\n      }\r\n\r\n      // Prune more aggressively to avoid single spurs and self-locking\r\n      this.room.innerWalls.forEach((wall) => {\r\n        if (this.countWallNeighbors(wall) <= 2) {\r\n          this.room.removeWall(wall.x, wall.y);\r\n          this.room.roomArray[wall.x][wall.y] = new Floor(\r\n            this.room,\r\n            wall.x,\r\n            wall.y,\r\n          );\r\n          this.room.innerWalls = this.room.innerWalls.filter((w) => w !== wall);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Barrel } from \"../entity/object/barrel\";\r\nimport { Block } from \"../entity/object/block\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Pumpkin } from \"../entity/object/pumpkin\";\r\nimport { TombStone } from \"../entity/object/tombStone\";\r\nimport { Game } from \"../game\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport {\r\n  environmentData,\r\n  enemyClassToId,\r\n  //enemyMinimumDepth,\r\n  EnemyInfo,\r\n} from \"../level/environment\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { LockType } from \"../tile/lockable\";\r\nimport { Level } from \"../level/level\";\r\nimport { Random } from \"../utility/random\";\r\nimport { Utils } from \"../utility/utils\";\r\nimport { ClusteringOptions, PropClusterer } from \"./propClusterer\";\r\nimport { Room, RoomType } from \"./room\";\r\nimport { DownladderMaker } from \"../entity/downladderMaker\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\nimport { Direction } from \"../game\";\r\nimport { WallTorch } from \"../tile/wallTorch\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { SpikeTrap } from \"../tile/spiketrap\";\r\nimport { Chasm } from \"../tile/chasm\";\r\nimport { Floor } from \"../tile/floor\";\r\nimport { SpawnFloor } from \"../tile/spawnfloor\";\r\nimport { VendingMachine } from \"../entity/object/vendingMachine\";\r\nimport { Chest } from \"../entity/object/chest\";\r\nimport { Bomb } from \"../entity/object/bomb\";\r\nimport { Resource } from \"../entity/resource/resource\";\r\nimport { Heart } from \"../item/usable/heart\";\r\nimport { Candle } from \"../item/light/candle\";\r\nimport { Armor } from \"../item/armor\";\r\nimport { Spear } from \"../item/weapon/spear\";\r\nimport { Torch } from \"../item/light/torch\";\r\nimport { Item } from \"../item/item\";\r\nimport { GoldenKey } from \"../item/goldenKey\";\r\nimport { FountainTile } from \"../tile/fountainTile\";\r\nimport { InsideLevelDoor } from \"../tile/insideLevelDoor\";\r\nimport { Button } from \"../tile/button\";\r\nimport { UpLadder } from \"../tile/upLadder\";\r\n// (keep single import)\r\nimport { ItemGroup } from \"../item/itemGroup\";\r\nimport { Warhammer } from \"../item/weapon/warhammer\";\r\nimport { Sword } from \"../item/weapon/sword\";\r\nimport { Pickaxe } from \"../item/tool/pickaxe\";\r\nimport { Shotgun } from \"../item/weapon/shotgun\";\r\nimport { Tile } from \"../tile/tile\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { CrabEnemy } from \"../entity/enemy/crabEnemy\";\r\nimport { FrogEnemy } from \"../entity/enemy/frogEnemy\";\r\nimport { ZombieEnemy } from \"../entity/enemy/zombieEnemy\";\r\nimport { SkullEnemy } from \"../entity/enemy/skullEnemy\";\r\nimport { EnergyWizardEnemy } from \"../entity/enemy/energyWizard\";\r\nimport { ChargeEnemy } from \"../entity/enemy/chargeEnemy\";\r\nimport { RookEnemy } from \"../entity/enemy/rookEnemy\";\r\nimport { BishopEnemy } from \"../entity/enemy/bishopEnemy\";\r\nimport { ArmoredzombieEnemy } from \"../entity/enemy/armoredzombieEnemy\";\r\nimport { BigSkullEnemy } from \"../entity/enemy/bigSkullEnemy\";\r\nimport { QueenEnemy } from \"../entity/enemy/queenEnemy\";\r\nimport { KnightEnemy } from \"../entity/enemy/knightEnemy\";\r\nimport { BigKnightEnemy } from \"../entity/enemy/bigKnightEnemy\";\r\nimport { ArmoredSkullEnemy } from \"../entity/enemy/armoredSkullEnemy\";\r\nimport { FireWizardEnemy } from \"../entity/enemy/fireWizard\";\r\nimport { OccultistEnemy } from \"../entity/enemy/occultistEnemy\";\r\nimport { Spawner } from \"../entity/enemy/spawner\";\r\nimport { BigZombieEnemy } from \"../entity/enemy/bigZombieEnemy\";\r\nimport { CoalResource } from \"../entity/resource/coalResource\";\r\nimport { GoldResource } from \"../entity/resource/goldResource\";\r\nimport { EmeraldResource } from \"../entity/resource/emeraldResource\";\r\nimport { Pool } from \"../tile/pool\";\r\nimport { MagmaPool } from \"../tile/magmaPool\";\r\nimport { WardenEnemy } from \"../entity/enemy/wardenEnemy\";\r\nimport { FishingRod } from \"../item/tool/fishingRod\";\r\nimport { Hammer } from \"../item/tool/hammer\";\r\nimport { Window } from \"../tile/window\";\r\nimport { SidePathOptions } from \"../level/sidePathManager\";\r\nimport { BigFrogEnemy } from \"../entity/enemy/bigFrogEnemy\";\r\nimport { ExalterEnemy } from \"../entity/enemy/exalterEnemy\";\r\n\r\n// Add after the imports, create a reverse mapping from ID to enemy name\r\nconst enemyIdToName: Record<number, string> = {};\r\nfor (const [enemyClass, id] of enemyClassToId.entries()) {\r\n  enemyIdToName[id] = enemyClass.name;\r\n}\r\n\r\nexport class Populator {\r\n  level: Level;\r\n  medianDensity: number;\r\n  private props: { x: number; y: number }[] = [];\r\n  addedDownladder: boolean = false;\r\n  private levelEnemyPoolIds: number[]; // Add this property to store the calculated enemy pool\r\n  private skipPopulation: boolean = false;\r\n\r\n  constructor(level: Level, skipPopulation: boolean = false) {\r\n    this.level = level;\r\n    this.props = [];\r\n    this.medianDensity = GameplaySettings.MEDIAN_ROOM_DENSITY;\r\n\r\n    // Calculate enemy pool once for this level\r\n    this.levelEnemyPoolIds = this.generateEnemyPoolIds(this.level.depth);\r\n  }\r\n\r\n  populateRooms = () => {\r\n    if (this.skipPopulation) return;\r\n    // add environmental features to all rooms\r\n    this.level.rooms.forEach((room) => {\r\n      this.addEnvironmentalFeatures(room, Random.rand);\r\n    });\r\n\r\n    // populate each room by type (no enemies added here)\r\n    for (let room of this.level.rooms) {\r\n      this.populate(room, Random.rand);\r\n    }\r\n\r\n    // populate each room by environment (enemies added here)\r\n    this.level.rooms.forEach((room) => {\r\n      if (\r\n        room.type === RoomType.START ||\r\n        room.type === RoomType.DOWNLADDER ||\r\n        room.type === RoomType.UPLADDER ||\r\n        room.type === RoomType.ROPEHOLE ||\r\n        room.type === RoomType.ROPECAVE\r\n      )\r\n        return;\r\n\r\n      this.populateByEnvironment(room);\r\n    });\r\n\r\n    // add boss to furthest room from upladder if not main path\r\n    const furthestFromUpLadder = this.level.getFurthestFromLadder(\"up\");\r\n    if (furthestFromUpLadder && !this.level.isMainPath) {\r\n      this.populateBoss(furthestFromUpLadder, Random.rand);\r\n    }\r\n\r\n    if (this.level.depth === 0) return;\r\n\r\n    console.log(`Adding downladder with ${this.numRooms()} rooms`);\r\n    if (this.level.environment.type === EnvType.DUNGEON) {\r\n      this.addDownladder({\r\n        caveRooms: this.numRooms(),\r\n        locked: true,\r\n        linearity: 1,\r\n      });\r\n    }\r\n\r\n    if (this.level.environment.type === EnvType.CAVE) {\r\n      this.addDownladder({\r\n        caveRooms: this.numRooms(),\r\n        locked: true,\r\n        envType: EnvType.MAGMA_CAVE,\r\n        linearity: 1,\r\n      });\r\n    }\r\n\r\n    if (this.level.environment.type === EnvType.FOREST) {\r\n      this.addDownladder({\r\n        caveRooms: this.numRooms(),\r\n        locked: true,\r\n        envType: EnvType.CASTLE,\r\n        linearity: 0.8,\r\n      });\r\n    }\r\n\r\n    if (this.level.environment.type === EnvType.CASTLE) {\r\n      this.addDownladder({\r\n        caveRooms: this.numRooms(),\r\n        locked: true,\r\n        envType: EnvType.DARK_CASTLE,\r\n        linearity: 0.8,\r\n      });\r\n    }\r\n\r\n    this.linkExitToStart();\r\n\r\n    //this.level.distributeKeys();\r\n  };\r\n\r\n  populateByEnvironment = (room: Room) => {\r\n    switch (room.envType) {\r\n      case EnvType.CAVE:\r\n        this.populateCaveEnvironment(room);\r\n        break;\r\n      case EnvType.FOREST:\r\n        this.populateForestEnvironment(room);\r\n        break;\r\n      case EnvType.MAGMA_CAVE:\r\n        this.populateMagmaCaveEnvironment(room);\r\n        break;\r\n      case EnvType.CASTLE:\r\n        this.populateCastleEnvironment(room);\r\n        break;\r\n      default:\r\n        this.populateDefaultEnvironment(room);\r\n        break;\r\n    }\r\n  };\r\n\r\n  linkExitToStart = () => {\r\n    console.log(\"linkExitToStart\", this.level.isMainPath);\r\n    if (this.level.isMainPath) return;\r\n    this.level.setExitRoom(false);\r\n    this.level.setStartRoom(false);\r\n    const exitRoom = this.level.exitRoom;\r\n    const startRoom = this.level.startRoom;\r\n    if (!startRoom || !exitRoom) return;\r\n    exitRoom.linkExitToStart(startRoom);\r\n  };\r\n\r\n  addTrainingDownladder = (opts: SidePathOptions) => {\r\n    if (this.level.depth !== 0) return;\r\n    const room = this.level.rooms.find((room) => room.type === RoomType.START);\r\n    if (!room) return;\r\n    const validTiles = room.getEmptyTilesNotBlockingDoors();\r\n    if (validTiles.length === 0) {\r\n      console.warn(\r\n        \"No valid positions for training downladder that don't block doors\",\r\n      );\r\n      return;\r\n    }\r\n    const position = room.getRandomEmptyPosition(validTiles);\r\n    if (\r\n      position === null ||\r\n      position.x === undefined ||\r\n      position.y === undefined\r\n    )\r\n      return;\r\n\r\n    const dl = new DownLadder(\r\n      room,\r\n      this.level.game,\r\n      position.x,\r\n      position.y,\r\n      true,\r\n      EnvType.DUNGEON,\r\n      LockType.NONE,\r\n      opts,\r\n      { lockType: LockType.NONE },\r\n    );\r\n\r\n    room.roomArray[position.x][position.y] = dl;\r\n  };\r\n\r\n  addDownladder = (opts: SidePathOptions) => {\r\n    const rooms = this.level.rooms.filter(\r\n      (room) =>\r\n        room.type !== RoomType.START &&\r\n        room.type !== RoomType.DOWNLADDER &&\r\n        room.type !== RoomType.UPLADDER &&\r\n        room.type !== RoomType.ROPEHOLE &&\r\n        room.type !== RoomType.BOSS,\r\n    );\r\n\r\n    const downLadderRoom = this.level.isMainPath\r\n      ? rooms[Math.floor(Random.rand() * rooms.length)]\r\n      : this.level.getFurthestFromLadder(\"up\");\r\n\r\n    console.log(\r\n      `Selected room for downladder: Type=${downLadderRoom.type}, Doors=${downLadderRoom.doors.length}`,\r\n    );\r\n\r\n    // Use the new method to get empty tiles that don't block doors\r\n    const validTiles = downLadderRoom.getEmptyTilesNotBlockingDoors();\r\n\r\n    if (validTiles.length === 0) {\r\n      console.warn(\"No valid positions for downladder that don't block doors\");\r\n      return;\r\n    }\r\n\r\n    const position = downLadderRoom.getRandomEmptyPosition(validTiles);\r\n    if (\r\n      position === null ||\r\n      position.x === undefined ||\r\n      position.y === undefined\r\n    )\r\n      return;\r\n\r\n    console.log(\r\n      `Placing downladder at position (${position.x}, ${position.y})`,\r\n    );\r\n\r\n    // Place a DownLadder tile directly; avoid entity side-effects post-load\r\n    const env = opts?.envType\r\n      ? opts.envType\r\n      : downLadderRoom.depth < 2\r\n        ? EnvType.FOREST\r\n        : downLadderRoom.depth > 2\r\n          ? Random.rand() < 0.5\r\n            ? EnvType.FOREST\r\n            : EnvType.CAVE\r\n          : EnvType.CAVE;\r\n    const lockOverride =\r\n      opts && typeof opts.locked === \"boolean\"\r\n        ? { lockType: opts.locked ? LockType.LOCKED : LockType.NONE }\r\n        : undefined;\r\n\r\n    const dl = new DownLadder(\r\n      downLadderRoom,\r\n      this.level.game,\r\n      position.x,\r\n      position.y,\r\n      true,\r\n      env,\r\n      LockType.NONE,\r\n      opts,\r\n      lockOverride,\r\n    );\r\n\r\n    downLadderRoom.roomArray[position.x][position.y] = dl;\r\n    if (dl.lockable.isLocked()) {\r\n      console.log(\"adding key to downladder\");\r\n      this.level.distributeKey(dl);\r\n    }\r\n  };\r\n\r\n  populateByType = (room: Room) => {};\r\n\r\n  private addProps(room: Room, numProps: number, envType?: EnvType) {\r\n    const envData = envType\r\n      ? environmentData[envType]\r\n      : environmentData[room.level.environment.type];\r\n    let tiles = room.getEmptyTiles();\r\n\r\n    for (let i = 0; i < numProps; i++) {\r\n      if (tiles.length === 0) break;\r\n\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (position === null) break;\r\n      const { x, y } = position;\r\n      const selectedProp = Utils.randTableWeighted(envData.props);\r\n      // NullProp or any entry without an add simply consumes a slot\r\n      if (selectedProp && selectedProp.class && selectedProp.class.add) {\r\n        const args = selectedProp.additionalParams || [];\r\n        selectedProp.class.add(room, room.game, x, y, ...args);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds props with clustering behavior - entities are more likely to be placed near existing entities\r\n   * @param room - The room to populate\r\n   * @param numProps - Number of props to place\r\n   * @param envType - Environment type for prop selection\r\n   * @param clusteringOptions - Optional clustering configuration\r\n   */\r\n  private addPropsWithClustering(\r\n    room: Room,\r\n    numProps: number,\r\n    envType?: EnvType,\r\n    clusteringOptions?: ClusteringOptions,\r\n  ) {\r\n    const envData = envType\r\n      ? environmentData[envType]\r\n      : environmentData[room.level.environment.type];\r\n\r\n    const clusterer = new PropClusterer(room, clusteringOptions);\r\n    const positions = clusterer.generateClusteredPositions(numProps);\r\n\r\n    for (const { x, y } of positions) {\r\n      const selectedProp = Utils.randTableWeighted(envData.props);\r\n      if (selectedProp && selectedProp.class && selectedProp.class.add) {\r\n        const args = selectedProp.additionalParams || [];\r\n        selectedProp.class.add(room, room.game, x, y, ...args);\r\n      }\r\n    }\r\n  }\r\n\r\n  private populateDungeonEnvironment(room: Room) {\r\n    this.populateDefaultEnvironment(room);\r\n  }\r\n\r\n  private populateCaveEnvironment(room: Room) {\r\n    const numProps = this.getNumProps(room);\r\n    //this.addProps(room, numProps, room.envType);\r\n    this.addPropsWithClustering(room, numProps, room.envType, {\r\n      falloffExponent: 2,\r\n      baseScore: 0.1,\r\n      maxInfluenceDistance: 12,\r\n      useSeedPosition: false,\r\n    });\r\n\r\n    // ADD: Enemies after props, based on remaining space\r\n    this.addRandomEnemies(room);\r\n  }\r\n\r\n  private populateForestEnvironment(room: Room) {\r\n    const numProps = this.getNumProps(room, 0.75);\r\n    //this.addProps(room, numProps, room.envType);\r\n    this.addPropsWithClustering(room, numProps, room.envType, {\r\n      falloffExponent: 2,\r\n      baseScore: 0.1,\r\n      maxInfluenceDistance: 12,\r\n      useSeedPosition: false,\r\n    });\r\n\r\n    // ADD: Enemies after props, based on remaining space\r\n    this.addRandomEnemies(room);\r\n  }\r\n\r\n  private populateMagmaCaveEnvironment(room: Room) {\r\n    const numProps = this.getNumProps(room);\r\n    this.addPropsWithClustering(room, numProps, room.envType, {\r\n      falloffExponent: 2,\r\n      baseScore: 0.1,\r\n      maxInfluenceDistance: 12,\r\n      useSeedPosition: false,\r\n    });\r\n\r\n    // ADD: Enemies after props, based on remaining space\r\n    this.addRandomEnemies(room);\r\n  }\r\n\r\n  private populateCastleEnvironment(room: Room) {\r\n    const numProps = this.getNumProps(room);\r\n    this.addPropsWithClustering(room, numProps, room.envType, {\r\n      falloffExponent: 2,\r\n      baseScore: 0.1,\r\n      maxInfluenceDistance: 12,\r\n      useSeedPosition: false,\r\n    });\r\n\r\n    // ADD: Enemies after props, based on remaining space\r\n    this.addRandomEnemies(room);\r\n  }\r\n\r\n  private getNumProps(room: Room, medianDensity?: number) {\r\n    medianDensity = medianDensity || this.medianDensity;\r\n    const numEmptyTiles = room.getEmptyTiles().length;\r\n    const numProps = Utils.randomNormalInt(0, numEmptyTiles, {\r\n      median: Math.ceil(medianDensity * numEmptyTiles),\r\n    });\r\n    const percentFull = Math.round((numProps / numEmptyTiles) * 100);\r\n    //console.log(\"percentFull\", `${percentFull}%`);\r\n    return numProps;\r\n  }\r\n\r\n  private populateDefaultEnvironment(room: Room) {\r\n    const numProps = this.getNumProps(room);\r\n    //this.addProps(room, numProps, room.envType);\r\n    this.addPropsWithClustering(room, numProps, room.envType, {\r\n      falloffExponent: 2,\r\n      baseScore: 0.1,\r\n      maxInfluenceDistance: 12,\r\n      useSeedPosition: false,\r\n    });\r\n\r\n    // ADD: Enemies after props, based on remaining space\r\n    this.addRandomEnemies(room);\r\n  }\r\n\r\n  numRooms = () => {\r\n    // calculate a base room number based on depth\r\n    const baseTotalRooms = Math.ceil(10 * 1.05 ** this.level.depth);\r\n    // find the difference between the base total rooms and the number of rooms in the level\r\n    const roomDiff = baseTotalRooms - this.level.rooms.length;\r\n    // add sidepath rooms to offset the room difference\r\n    return Math.max(roomDiff, 5);\r\n  };\r\n\r\n  // #region TILE ADDING METHODS\r\n  private addDoorTorches(room: Room, x: number, y: number, doorDir: Direction) {\r\n    if (doorDir !== Direction.UP && doorDir !== Direction.DOWN) {\r\n      return;\r\n    }\r\n\r\n    if (x && y) {\r\n      room.calculateWallInfo();\r\n      const leftWallInfo = room.wallInfo.get(`${x - 1},${y}`);\r\n      const rightWallInfo = room.wallInfo.get(`${x + 1},${y}`);\r\n      const leftTile = room.roomArray[x - 1]?.[y];\r\n      const rightTile = room.roomArray[x + 1]?.[y];\r\n      const leftOpen = leftWallInfo?.isLeftWall === false;\r\n      const rightOpen = rightWallInfo?.isRightWall === false;\r\n\r\n      const bottomWall = doorDir === Direction.DOWN ? true : false;\r\n\r\n      if (leftOpen) {\r\n        room.roomArray[x - 1][y] = new WallTorch(room, x - 1, y, bottomWall);\r\n      }\r\n\r\n      if (rightOpen) {\r\n        room.roomArray[x + 1][y] = new WallTorch(room, x + 1, y, bottomWall);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addTorches(\r\n    room: Room,\r\n    numTorches: number,\r\n    rand: () => number,\r\n    placeX?: number,\r\n    placeY?: number,\r\n  ) {\r\n    if (\r\n      room.level.environment.type === EnvType.FOREST &&\r\n      room.type !== RoomType.DOWNLADDER\r\n    )\r\n      return;\r\n\r\n    if (\r\n      placeX !== undefined &&\r\n      placeY !== undefined &&\r\n      room.roomArray[placeX]?.[placeY] instanceof Wall\r\n    ) {\r\n      room.roomArray[placeX][placeY] = new WallTorch(room, placeX, placeY);\r\n\r\n      return;\r\n    }\r\n\r\n    let walls = [];\r\n    for (let xx = room.roomX + 1; xx < room.roomX + room.width - 2; xx++) {\r\n      for (let yy = room.roomY; yy < room.roomY + room.height - 1; yy++) {\r\n        if (\r\n          room.roomArray[xx][yy] instanceof Wall &&\r\n          !(room.roomArray[xx][yy + 1] instanceof Wall)\r\n        ) {\r\n          walls.push(room.roomArray[xx][yy]);\r\n        }\r\n      }\r\n    }\r\n    let bottomWalls = [];\r\n    // Separate loop for bottom wall\r\n    for (let xx = room.roomX + 1; xx < room.roomX + room.width - 2; xx++) {\r\n      const yy = room.roomY + room.height - 1; // Bottom wall\r\n      if (\r\n        room.roomArray[xx][yy] instanceof Wall &&\r\n        !(room.roomArray[xx][yy + 1] instanceof Wall)\r\n      ) {\r\n        bottomWalls.push(room.roomArray[xx][yy]);\r\n      }\r\n    }\r\n\r\n    // Randomly distribute torches between walls and bottom walls\r\n    const wallTorches = Game.rand(0, numTorches, rand);\r\n    const bottomWallTorches = numTorches - wallTorches;\r\n\r\n    for (let i = 0; i < wallTorches; i++) {\r\n      if (walls.length == 0) break;\r\n      const randomIndex = Game.rand(0, walls.length - 1, rand);\r\n      const t = walls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      room.roomArray[x][y] = new WallTorch(room, x, y);\r\n    }\r\n    for (let i = 0; i < bottomWallTorches; i++) {\r\n      if (bottomWalls.length == 0) break;\r\n      const randomIndex = Game.rand(0, bottomWalls.length - 1, rand);\r\n      const t = bottomWalls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      room.roomArray[x][y] = new WallTorch(room, x, y, true);\r\n    }\r\n  }\r\n\r\n  // Windows: analogous helpers to torches\r\n  private addDoorWindows(room: Room, x: number, y: number, doorDir: Direction) {\r\n    if (doorDir !== Direction.UP && doorDir !== Direction.DOWN) {\r\n      return;\r\n    }\r\n\r\n    if (x && y) {\r\n      room.calculateWallInfo();\r\n      const leftWallInfo = room.wallInfo.get(`${x - 1},${y}`);\r\n      const rightWallInfo = room.wallInfo.get(`${x + 1},${y}`);\r\n      const leftOpen = leftWallInfo?.isLeftWall === false;\r\n      const rightOpen = rightWallInfo?.isRightWall === false;\r\n\r\n      const bottomWall = doorDir === Direction.DOWN ? true : false;\r\n\r\n      if (leftOpen && room.roomArray[x - 1]?.[y] instanceof Wall) {\r\n        room.roomArray[x - 1][y] = new Window(room, x - 1, y, bottomWall);\r\n      }\r\n\r\n      if (rightOpen && room.roomArray[x + 1]?.[y] instanceof Wall) {\r\n        room.roomArray[x + 1][y] = new Window(room, x + 1, y, bottomWall);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addWindows(\r\n    room: Room,\r\n    numWindows: number,\r\n    rand: () => number,\r\n    placeX?: number,\r\n    placeY?: number,\r\n  ) {\r\n    // Restrict windows to castle-themed rooms to keep them sensible\r\n    const isCastle =\r\n      room.envType === EnvType.CASTLE ||\r\n      room.level.environment.type === EnvType.CASTLE;\r\n    if (!isCastle) return;\r\n\r\n    if (\r\n      placeX !== undefined &&\r\n      placeY !== undefined &&\r\n      room.roomArray[placeX]?.[placeY] instanceof Wall\r\n    ) {\r\n      room.roomArray[placeX][placeY] = new Window(room, placeX, placeY);\r\n      return;\r\n    }\r\n\r\n    let walls: any[] = [];\r\n    for (let xx = room.roomX + 1; xx < room.roomX + room.width - 2; xx++) {\r\n      for (let yy = room.roomY; yy < room.roomY + room.height - 1; yy++) {\r\n        if (\r\n          room.roomArray[xx][yy] instanceof Wall &&\r\n          !(room.roomArray[xx][yy + 1] instanceof Wall)\r\n        ) {\r\n          walls.push(room.roomArray[xx][yy]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let bottomWalls: any[] = [];\r\n    for (let xx = room.roomX + 1; xx < room.roomX + room.width - 2; xx++) {\r\n      const yy = room.roomY + room.height - 1;\r\n      if (\r\n        room.roomArray[xx][yy] instanceof Wall &&\r\n        !(room.roomArray[xx][yy + 1] instanceof Wall)\r\n      ) {\r\n        bottomWalls.push(room.roomArray[xx][yy]);\r\n      }\r\n    }\r\n\r\n    const wallWindows = Game.rand(0, numWindows, rand);\r\n    const bottomWallWindows = numWindows - wallWindows;\r\n\r\n    for (let i = 0; i < wallWindows; i++) {\r\n      if (walls.length === 0) break;\r\n      const randomIndex = Game.rand(0, walls.length - 1, rand);\r\n      const t = walls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      room.roomArray[x][y] = new Window(room, x, y);\r\n    }\r\n\r\n    for (let i = 0; i < bottomWallWindows; i++) {\r\n      if (bottomWalls.length === 0) break;\r\n      const randomIndex = Game.rand(0, bottomWalls.length - 1, rand);\r\n      const t = bottomWalls.splice(randomIndex, 1)[0];\r\n      const x = t.x;\r\n      const y = t.y;\r\n      room.roomArray[x][y] = new Window(room, x, y, true);\r\n    }\r\n  }\r\n\r\n  private addRectangularTileArea<\r\n    T extends new (\r\n      room: Room,\r\n      x: number,\r\n      y: number,\r\n      leftEdge: boolean,\r\n      rightEdge: boolean,\r\n      topEdge: boolean,\r\n      bottomEdge: boolean,\r\n    ) => any,\r\n  >(room: Room, rand: () => number, TileClass: T) {\r\n    let w = Game.rand(2, 4, rand);\r\n    let h = Game.rand(2, 4, rand);\r\n    let xmin = room.roomX + 2;\r\n    let xmax = room.roomX + room.width - w - 2;\r\n    let ymin = room.roomY + 2;\r\n    let ymax = room.roomY + room.height - h - 2;\r\n    if (xmax < xmin || ymax < ymin) return;\r\n    let x = Game.rand(xmin, xmax, rand);\r\n    let y = Game.rand(ymin, ymax, rand);\r\n\r\n    let clear = true;\r\n\r\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\r\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\r\n        const tile = room.roomArray[xx][yy];\r\n        if (\r\n          (tile instanceof SpawnFloor && !tile.isSolid()) ||\r\n          //tile instanceof Wall ||\r\n          tile instanceof Pool ||\r\n          tile instanceof Chasm\r\n        )\r\n          clear = false;\r\n      }\r\n    }\r\n    if (!clear) {\r\n      console.warn(\"no space for \" + TileClass.name);\r\n    } else {\r\n      console.log(\"space for \" + TileClass.name);\r\n    }\r\n    if (!clear) return;\r\n    for (let xx = x - 1; xx < x + w + 1; xx++) {\r\n      for (let yy = y - 1; yy < y + h + 1; yy++) {\r\n        // add a floor border\r\n        if (xx === x - 1 || xx === x + w || yy === y - 1 || yy === y + h) {\r\n          const tile = room.roomArray[xx][yy];\r\n          if (\r\n            !(tile instanceof SpawnFloor && !tile.isSolid()) &&\r\n            !(tile instanceof Wall) &&\r\n            !(tile instanceof Pool) &&\r\n            !(tile instanceof Chasm)\r\n          )\r\n            room.roomArray[xx][yy] = new Floor(room, xx, yy);\r\n        } else\r\n          room.roomArray[xx][yy] = new TileClass(\r\n            room,\r\n            xx,\r\n            yy,\r\n            xx === x,\r\n            xx === x + w - 1,\r\n            yy === y,\r\n            yy === y + h - 1,\r\n          );\r\n      }\r\n    }\r\n  }\r\n  private addChasms(room: Room, rand: () => number) {\r\n    this.addRectangularTileArea(room, rand, Chasm);\r\n  }\r\n\r\n  private addMagmaPools(room: Room, rand: () => number) {\r\n    this.addRectangularTileArea(room, rand, MagmaPool);\r\n  }\r\n\r\n  private addPools(room: Room, rand: () => number) {\r\n    this.addRectangularTileArea(room, rand, Pool);\r\n  }\r\n\r\n  private addSpikeTraps(room: Room, numSpikes: number, rand: () => number) {\r\n    if (\r\n      room.level.environment.type === EnvType.FOREST ||\r\n      room.envType === EnvType.FOREST\r\n    )\r\n      return;\r\n    // add spikes\r\n    let tiles = room.getEmptyTiles();\r\n    for (let i = 0; i < numSpikes; i++) {\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (position === null) break;\r\n      const { x, y } = position;\r\n      room.roomArray[x][y] = new SpikeTrap(room, x, y);\r\n    }\r\n  }\r\n  // #endregion\r\n\r\n  // #region ADDING ENTITIES\r\n\r\n  /**\r\n   * Elegant enemy spawning that combines environment selection with progression control\r\n   */\r\n  private addEnemiesUnified(room: Room, numEnemies: number, envType?: EnvType) {\r\n    if (GameplaySettings.NO_ENEMIES === true) return;\r\n\r\n    // Get filtered enemies using our centralized logic\r\n    const availableEnemies = this.getAvailableEnemiesForRoom(room, envType);\r\n\r\n    if (availableEnemies.length === 0) {\r\n      console.log(\r\n        `No enemies available for environment ${envType || room.level.environment.type} at depth ${room.depth}`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Use existing spawning logic with filtered enemies\r\n    this.spawnEnemiesFromPool(room, numEnemies, availableEnemies);\r\n\r\n    // Add special enemies (spawners, occultists)\r\n    this.addSpecialEnemies(room);\r\n  }\r\n\r\n  /**\r\n   * Core method: Get available enemies filtered by environment and progression\r\n   */\r\n  private getAvailableEnemiesForRoom(\r\n    room: Room,\r\n    envType?: EnvType,\r\n  ): EnemyInfo[] {\r\n    const environment = envType || room.level.environment.type;\r\n    const envData = environmentData[environment];\r\n\r\n    // Use pre-calculated enemy pool instead of generating it for each room\r\n    const allowedEnemyIds = this.levelEnemyPoolIds;\r\n\r\n    // Filter environment enemies by allowed pool and add IDs\r\n    const availableEnemies = envData.enemies\r\n      .map((enemy) => ({\r\n        ...enemy,\r\n        id: enemyClassToId.get(enemy.class), // Add ID dynamically\r\n      }))\r\n      .filter(\r\n        (enemy) =>\r\n          enemy.id &&\r\n          allowedEnemyIds.includes(enemy.id) &&\r\n          (enemy.minDepth ?? 0) <= room.depth,\r\n      );\r\n\r\n    console.log(\r\n      `Depth ${room.depth}, Env ${environment}: Pool [${allowedEnemyIds.map((id) => enemyIdToName[id] || `Unknown(${id})`).join(\", \")} ] -> Available [${availableEnemies\r\n        .map((e) => enemyIdToName[e.id!] || `Unknown(${e.id})`)\r\n        .join(\", \")}]`,\r\n    );\r\n\r\n    return availableEnemies;\r\n  }\r\n\r\n  /**\r\n   * Spawn enemies from the filtered pool using existing logic\r\n   */\r\n  private spawnEnemiesFromPool(\r\n    room: Room,\r\n    numEnemies: number,\r\n    enemyPool: EnemyInfo[],\r\n  ) {\r\n    let tiles = room.getEmptyTiles();\r\n    if (tiles.length === 0) return;\r\n\r\n    // Existing door avoidance logic\r\n    const excludedCoords = new Set<string>();\r\n    for (const door of room.doors) {\r\n      for (let dx = -2; dx <= 2; dx++) {\r\n        for (let dy = -2; dy <= 2; dy++) {\r\n          excludedCoords.add(`${door.x + dx},${door.y + dy}`);\r\n        }\r\n      }\r\n    }\r\n    tiles = tiles.filter((tile) => !excludedCoords.has(`${tile.x},${tile.y}`));\r\n\r\n    // Spawn enemies\r\n    for (let i = 0; i < numEnemies; i++) {\r\n      if (tiles.length === 0) break;\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (position === null) break;\r\n      const { x, y } = position;\r\n\r\n      const selectedEnemy = Utils.randTableWeighted(enemyPool);\r\n      if (!selectedEnemy?.class?.add) continue;\r\n\r\n      const args = selectedEnemy.additionalParams || [];\r\n\r\n      // Handle special spawn logic\r\n      if (selectedEnemy.specialSpawnLogic === \"clearFloor\") {\r\n        const enemy = new selectedEnemy.class(room, room.game, x, y, ...args);\r\n        if (this.canPlaceBigEnemy(room, enemy, x, y, tiles)) {\r\n          room.entities.push(enemy);\r\n          this.clearFloorForBigEnemy(room, x, y, enemy.w, enemy.h, enemy);\r\n          this.removeTilesForEnemy(tiles, x, y, enemy.w, enemy.h);\r\n        } else {\r\n          numEnemies++; // Retry\r\n        }\r\n      } else {\r\n        selectedEnemy.class.add(room, room.game, x, y, ...args);\r\n        tiles = tiles.filter((t) => !(t.x === x && t.y === y));\r\n      }\r\n    }\r\n    console.log(\r\n      `Spawned ${numEnemies} enemies from pool for total empty tiles ${tiles.length}`,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add special enemies (spawners, occultists) - extracted for clarity\r\n   */\r\n  private addSpecialEnemies(room: Room) {\r\n    // Spawner logic - now based on room area and probability\r\n    if (room.depth > GameplaySettings.SPAWNER_MIN_DEPTH) {\r\n      this.addSpawners(room, Random.rand);\r\n    }\r\n\r\n    // Occultist logic - now based on room area and probability\r\n    if (room.depth > GameplaySettings.OCCULTIST_MIN_DEPTH) {\r\n      this.addOccultists(room, Random.rand);\r\n    }\r\n  }\r\n\r\n  // === ENEMY POOL GENERATION LOGIC (moved from Level) ===\r\n\r\n  /**\r\n   * Generate enemy pool IDs based on depth and progression rules\r\n   */\r\n  private generateEnemyPoolIds(depth: number): number[] {\r\n    // Derive pool from the CURRENT environment's enemies using their minDepth\r\n    const env = this.level.environment.type;\r\n    const envEnemies = environmentData[env].enemies;\r\n\r\n    const availableEnemies = envEnemies\r\n      .map((enemy) => ({\r\n        id: enemyClassToId.get(enemy.class),\r\n        minDepth: enemy.minDepth ?? 0,\r\n      }))\r\n      .filter((e) => typeof e.id === \"number\" && e.minDepth <= depth)\r\n      .map((e) => e.id as number);\r\n\r\n    // Get new enemies not yet encountered\r\n    const newEnemies = availableEnemies.filter(\r\n      (id) => !this.level.game.encounteredEnemies.includes(id),\r\n    );\r\n\r\n    // Add 1-2 new enemies per level (if limiting is enabled)\r\n    const newEnemiesToAddCount = GameplaySettings.LIMIT_ENEMY_TYPES\r\n      ? Math.min(newEnemies.length, GameplaySettings.NEW_ENEMIES_PER_LEVEL)\r\n      : newEnemies.length;\r\n\r\n    const newEnemiesToAdd = this.getRandomElements(\r\n      newEnemies,\r\n      newEnemiesToAddCount,\r\n    );\r\n    this.level.game.encounteredEnemies.push(...newEnemiesToAdd);\r\n\r\n    // Get current enemy pool\r\n    const enemyPoolIds = this.level.game.encounteredEnemies.slice();\r\n\r\n    // Limit variety if setting is enabled\r\n    const numberOfTypes = GameplaySettings.LIMIT_ENEMY_TYPES\r\n      ? this.getNumberOfEnemyTypes(depth)\r\n      : enemyPoolIds.length;\r\n\r\n    const selectedEnemyIds = this.getRandomElements(\r\n      enemyPoolIds,\r\n      numberOfTypes,\r\n    );\r\n    return Array.from(new Set(selectedEnemyIds)).slice(0, numberOfTypes);\r\n  }\r\n\r\n  /**\r\n   * Public method to get enemy pool for spawners and other external use\r\n   */\r\n  public getEnemyPoolForDepth(depth: number): number[] {\r\n    // Use pre-calculated pool instead of generating new one, but filter by depth if different\r\n    if (depth === this.level.depth) {\r\n      return this.levelEnemyPoolIds;\r\n    }\r\n    // If a different depth is requested, generate it on demand (for spawners that might spawn at different depths)\r\n    return this.generateEnemyPoolIds(depth);\r\n  }\r\n\r\n  /**\r\n   * Calculate number of enemy types for depth\r\n   */\r\n  private getNumberOfEnemyTypes(depth: number): number {\r\n    return depth === 0\r\n      ? GameplaySettings.DEPTH_ZERO_ENEMY_TYPES\r\n      : Math.ceil(Math.sqrt(depth + 1)) +\r\n          GameplaySettings.ENEMY_TYPES_BASE_COUNT;\r\n  }\r\n\r\n  /**\r\n   * Utility: Get random elements from array\r\n   */\r\n  private getRandomElements<T>(array: T[], count: number): T[] {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Random.rand() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled.slice(0, Math.min(count, shuffled.length));\r\n  }\r\n\r\n  /**\r\n   * Check if a big enemy can be placed at the given position\r\n   */\r\n  private canPlaceBigEnemy(\r\n    room: Room,\r\n    enemy: Entity,\r\n    x: number,\r\n    y: number,\r\n    tiles: Tile[],\r\n  ): boolean {\r\n    if (\r\n      enemy.x + enemy.w > room.roomX + room.width ||\r\n      enemy.y + enemy.h > room.roomY + room.height ||\r\n      enemy.x < room.roomX ||\r\n      enemy.y < room.roomY\r\n    ) {\r\n      return false;\r\n    }\r\n    // Check for walls/solid tiles under any part of the enemy\r\n    for (let xx = 0; xx < enemy.w; xx++) {\r\n      for (let yy = 0; yy < enemy.h; yy++) {\r\n        const tile = room.roomArray[x + xx]?.[y + yy];\r\n        if ((tile.x === x + xx || tile.y === y + yy) && tile.isSolid()) {\r\n          console.log(\"wall found\");\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Clear floor tiles for big enemies (preserves existing logic)\r\n   */\r\n  private clearFloorForBigEnemy(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    enemy: Entity,\r\n  ): void {\r\n    for (let xx = 0; xx < w; xx++) {\r\n      for (let yy = 0; yy < h; yy++) {\r\n        room.roomArray[x + xx][y + yy] = new Floor(room, x + xx, y + yy);\r\n        if (room.entities.some((e) => e.x === x + xx && e.y === y + yy)) {\r\n          room.entities = room.entities.filter(\r\n            (e) => (e.x !== x + xx && e.y !== y + yy) || e === enemy,\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove tiles that are now occupied by an enemy\r\n   */\r\n  private removeTilesForEnemy(\r\n    tiles: any[],\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n  ): void {\r\n    for (let xx = 0; xx < w; xx++) {\r\n      for (let yy = 0; yy < h; yy++) {\r\n        const index = tiles.findIndex((t) => t.x === x + xx && t.y === y + yy);\r\n        if (index !== -1) tiles.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addRandomEnemies(room: Room, multiplier: number = 1) {\r\n    const numEmptyTiles = room.getEmptyTiles().length;\r\n    const meanValue = (room.roomArea + numEmptyTiles) / 2;\r\n\r\n    const factor = Math.min(\r\n      (room.depth + GameplaySettings.ENEMY_DENSITY_DEPTH_OFFSET) *\r\n        GameplaySettings.ENEMY_DENSITY_DEPTH_MULTIPLIER,\r\n      GameplaySettings.MAX_ENEMY_DENSITY,\r\n    );\r\n\r\n    const baseEnemyCount = Math.ceil(\r\n      Math.max(\r\n        Utils.randomNormalInt(0, meanValue * factor),\r\n        meanValue * factor,\r\n      ),\r\n    );\r\n\r\n    // Cap at the number of empty tiles (hard limit)\r\n    const numEnemies = Math.min(baseEnemyCount, numEmptyTiles);\r\n\r\n    this.addEnemiesUnified(room, numEnemies * multiplier, room.envType);\r\n  }\r\n\r\n  private addSpawners(room: Room, rand: () => number, numSpawners?: number) {\r\n    let tiles = room.getEmptyTiles();\r\n    if (tiles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let lastSpawner = null;\r\n\r\n    // If numSpawners is provided, force generate that many\r\n    if (numSpawners !== undefined) {\r\n      for (let i = 0; i < numSpawners; i++) {\r\n        const position = room.getRandomEmptyPosition(tiles);\r\n        if (position === null) break;\r\n        const { x, y } = position;\r\n\r\n        const spawnTable = this.getEnemyPoolForDepth(\r\n          Math.max(0, room.depth),\r\n        ).filter((t) => t !== 7);\r\n\r\n        lastSpawner = Spawner.add(room, room.game, x, y, spawnTable);\r\n\r\n        // Remove used tile\r\n        tiles = tiles.filter((t) => !(t.x === x && t.y === y));\r\n      }\r\n    } else {\r\n      // Original random spawner logic with configurable parameters\r\n      const maxPossibleSpawners = Math.ceil(\r\n        room.roomArea / GameplaySettings.SPAWNER_AREA_THRESHOLD,\r\n      );\r\n\r\n      for (let i = 0; i < maxPossibleSpawners; i++) {\r\n        if (rand() > GameplaySettings.SPAWNER_SPAWN_CHANCE) continue;\r\n\r\n        const position = room.getRandomEmptyPosition(tiles);\r\n        if (position === null) break;\r\n        const { x, y } = position;\r\n\r\n        const spawnTable = this.getEnemyPoolForDepth(\r\n          Math.max(0, room.depth - 1),\r\n        ).filter((t) => t !== 7);\r\n\r\n        lastSpawner = Spawner.add(room, room.game, x, y, spawnTable);\r\n\r\n        tiles = tiles.filter((t) => !(t.x === x && t.y === y));\r\n      }\r\n    }\r\n    return lastSpawner;\r\n  }\r\n\r\n  private addOccultists(\r\n    room: Room,\r\n    rand: () => number,\r\n    numOccultists?: number,\r\n  ) {\r\n    let tiles = room.getEmptyTiles();\r\n    if (tiles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let lastOccultist = null;\r\n\r\n    // If numOccultists is provided, force generate that many\r\n    if (numOccultists !== undefined) {\r\n      for (let i = 0; i < numOccultists; i++) {\r\n        const position = room.getRandomEmptyPosition(tiles);\r\n        if (position === null) break;\r\n        const { x, y } = position;\r\n\r\n        lastOccultist = OccultistEnemy.add(room, room.game, x, y);\r\n\r\n        // Remove used tile\r\n        tiles = tiles.filter((t) => !(t.x === x && t.y === y));\r\n      }\r\n    } else {\r\n      // Original random occultist logic with configurable parameters\r\n      const maxPossibleOccultists = Math.ceil(\r\n        room.roomArea / GameplaySettings.OCCULTIST_AREA_THRESHOLD,\r\n      );\r\n\r\n      for (let i = 0; i < maxPossibleOccultists; i++) {\r\n        if (rand() > GameplaySettings.OCCULTIST_SPAWN_CHANCE) continue;\r\n\r\n        const position = room.getRandomEmptyPosition(tiles);\r\n        if (position === null) break;\r\n        const { x, y } = position;\r\n\r\n        lastOccultist = OccultistEnemy.add(room, room.game, x, y);\r\n\r\n        tiles = tiles.filter((t) => !(t.x === x && t.y === y));\r\n      }\r\n    }\r\n    return lastOccultist;\r\n  }\r\n\r\n  private addBosses(room: Room, depth: number) {\r\n    if (GameplaySettings.NO_ENEMIES === true) return;\r\n    let tiles = room.getEmptyTiles();\r\n    if (tiles.length === 0) {\r\n      //console.log(`No tiles left to spawn spawners`);\r\n      return;\r\n    }\r\n    if (!GameplaySettings.PRESET_BOSSES) {\r\n      let bosses = [\r\n        \"reaper\",\r\n        \"queen\",\r\n        \"bigskullenemy\",\r\n        \"bigzombieenemy\",\r\n        \"bigfrogenemy\",\r\n        \"exalter\",\r\n      ];\r\n\r\n      if (depth > 0) {\r\n        bosses.push(\"occultist\");\r\n        bosses = bosses.filter((b) => b !== \"queen\");\r\n      }\r\n      if (room.envType === EnvType.FOREST) {\r\n        bosses.push(\"bigfrogenemy\");\r\n      }\r\n      if (depth > 4) {\r\n        bosses.push(\"warden\");\r\n        bosses = bosses.filter(\r\n          (b) =>\r\n            b !== \"bigskullenemy\" &&\r\n            b !== \"bigzombieenemy\" &&\r\n            b !== \"occultist\",\r\n        );\r\n      }\r\n\r\n      const boss = Game.randTable(bosses, Random.rand);\r\n      console.log(\"bosses\", bosses, \"boss\", boss);\r\n\r\n      const position =\r\n        boss.startsWith(\"big\") || boss === \"warden\"\r\n          ? room.getBigRandomEmptyPosition(tiles)\r\n          : room.getRandomEmptyPosition(tiles);\r\n      if (position === null) return;\r\n      const { x, y } = position;\r\n\r\n      switch (boss) {\r\n        case \"reaper\":\r\n          const spawner = this.addSpawners(room, Random.rand, 1);\r\n          spawner.dropTable = [\"weapon\", \"equipment\"];\r\n          spawner.dropChance = 1;\r\n          break;\r\n        case \"queen\":\r\n          const queen = QueenEnemy.add(room, room.game, x, y);\r\n          queen.dropTable = [\"weapon\", \"equipment\"];\r\n          queen.dropChance = 1;\r\n          break;\r\n        case \"bigskullenemy\":\r\n          const bigSkull = BigSkullEnemy.add(room, room.game, x, y);\r\n          bigSkull.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n\r\n          break;\r\n        case \"occultist\":\r\n          const occultist = this.addOccultists(room, Random.rand, 1);\r\n          occultist.dropTable = [\"weapon\", \"equipment\"];\r\n          occultist.dropChance = 1;\r\n\r\n          break;\r\n        case \"bigzombieenemy\":\r\n          const bigZombie = BigZombieEnemy.add(room, room.game, x, y);\r\n          bigZombie.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n          bigZombie.dropChance = 1;\r\n          break;\r\n        case \"warden\":\r\n          const warden = WardenEnemy.add(room, room.game, x, y);\r\n          warden.dropTable = [\"weapon\", \"equipment\"];\r\n          warden.dropChance = 1;\r\n          break;\r\n        case \"bigfrogenemy\":\r\n          const bigFrog = BigFrogEnemy.add(room, room.game, x, y);\r\n          bigFrog.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n          break;\r\n        case \"exalter\":\r\n          const exalter = ExalterEnemy.add(room, room.game, x, y);\r\n          exalter.dropTable = [\"weapon\", \"equipment\"];\r\n          exalter.dropChance = 1;\r\n          break;\r\n      }\r\n    } else {\r\n      const position = room.getBigRandomEmptyPosition(tiles);\r\n      if (position === null) return;\r\n      const { x, y } = position;\r\n      switch (depth) {\r\n        case 0:\r\n          const bigZombie = BigZombieEnemy.add(room, room.game, x, y);\r\n          bigZombie.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n          bigZombie.dropChance = 1;\r\n\r\n          const queen = QueenEnemy.add(room, room.game, x, y);\r\n          queen.dropTable = [\"weapon\", \"equipment\"];\r\n          queen.dropChance = 1;\r\n\r\n          break;\r\n        case 1:\r\n          const bigSkull = BigSkullEnemy.add(room, room.game, x, y);\r\n          bigSkull.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n\r\n          const spawner = this.addSpawners(room, Random.rand, 1);\r\n          //spawner.dropTable = [\"weapon\", \"equipment\"];\r\n          spawner.dropChance = 1;\r\n          break;\r\n        case 2:\r\n          const spawner2 = this.addSpawners(room, Random.rand, 1);\r\n          //spawner.dropTable = [\"weapon\", \"equipment\"];\r\n          spawner2.dropChance = 1;\r\n\r\n          const occultist = this.addOccultists(room, Random.rand, 1);\r\n          //occultist.dropTable = [\"weapon\", \"equipment\"];\r\n          occultist.dropChance = 1;\r\n          break;\r\n        case 3:\r\n          const bigZombie2 = BigZombieEnemy.add(room, room.game, x, y);\r\n          bigZombie2.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n          bigZombie2.dropChance = 1;\r\n\r\n          const bigZombie3 = BigZombieEnemy.add(room, room.game, x, y);\r\n          bigZombie3.dropTable = [\r\n            \"weapon\",\r\n            \"equipment\",\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"tool\",\r\n          ];\r\n          bigZombie3.dropChance = 1;\r\n\r\n          const occultist2 = this.addOccultists(room, Random.rand, 1);\r\n          //occultist.dropTable = [\"weapon\", \"equipment\"];\r\n          occultist2.dropChance = 1;\r\n          break;\r\n        case 4:\r\n          const warden = WardenEnemy.add(room, room.game, x, y);\r\n          warden.dropTable = [\"weapon\", \"equipment\"];\r\n          warden.dropChance = 1;\r\n          break;\r\n        case 5:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addChests(room: Room, numChests: number, rand: () => number) {\r\n    // add chests\r\n    let tiles = room.getEmptyTiles();\r\n    for (let i = 0; i < numChests; i++) {\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (!position) {\r\n        // No more empty tiles available, break out of loop\r\n        break;\r\n      }\r\n      const { x, y } = position;\r\n      room.entities.push(new Chest(room, room.game, x, y));\r\n    }\r\n  }\r\n\r\n  addBombs(room: Room, numBombs: number, rand: () => number) {\r\n    let tiles = room.getEmptyTiles();\r\n    for (let i = 0; i < room.getEmptyTiles().length; i++) {\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (position === null) break;\r\n      const { x, y } = position;\r\n      Bomb.add(room, room.game, x, y);\r\n    }\r\n  }\r\n\r\n  private addResources(room: Room, numResources: number, rand: () => number) {\r\n    let tiles = room.getEmptyTiles();\r\n    for (let i = 0; i < numResources; i++) {\r\n      const position = room.getRandomEmptyPosition(tiles);\r\n      if (position === null) break;\r\n      const { x, y } = position;\r\n\r\n      let r = rand();\r\n      if (r <= (10 - room.depth ** 3) / 10)\r\n        CoalResource.add(room, room.game, x, y);\r\n      else if (r <= (10 - (room.depth - 2) ** 3) / 10)\r\n        GoldResource.add(room, room.game, x, y);\r\n      else EmeraldResource.add(room, room.game, x, y);\r\n    }\r\n  }\r\n\r\n  private addVendingMachine(\r\n    room: Room,\r\n    rand: () => number,\r\n    placeX?: number,\r\n    placeY?: number,\r\n    item?: Item,\r\n  ) {\r\n    const pos = room.getRandomEmptyPosition(room.getEmptyTiles());\r\n    if (pos === null) return;\r\n    let x = placeX ? placeX : pos.x;\r\n    let y = placeY ? placeY : pos.y;\r\n\r\n    let table =\r\n      room.depth > 0\r\n        ? [\r\n            1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 3, 4, 5, 5, 5,\r\n            5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7,\r\n          ]\r\n        : [1, 1, 1];\r\n    let type = Game.randTable(table, rand);\r\n    if (item) {\r\n      VendingMachine.add(room, room.game, x, y, item);\r\n      return;\r\n    }\r\n    switch (type) {\r\n      case 1:\r\n        VendingMachine.add(room, room.game, x, y, new Heart(room, x, y));\r\n        break;\r\n      case 2:\r\n        VendingMachine.add(room, room.game, x, y, new Candle(room, x, y));\r\n        break;\r\n      case 3:\r\n        VendingMachine.add(room, room.game, x, y, new Armor(room, x, y));\r\n        break;\r\n      case 4:\r\n        VendingMachine.add(room, room.game, x, y, new Spear(room, x, y));\r\n        break;\r\n      case 5:\r\n        VendingMachine.add(room, room.game, x, y, new Torch(room, x, y));\r\n        break;\r\n      case 6:\r\n        VendingMachine.add(room, room.game, x, y, new FishingRod(room, x, y));\r\n        break;\r\n      case 7:\r\n        VendingMachine.add(room, room.game, x, y, new Hammer(room, x, y));\r\n        break;\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region POPULATING METHODS\r\n\r\n  populateEmpty = (room: Room, rand: () => number) => {};\r\n\r\n  populateTreasure = (room: Room, rand: () => number) => {\r\n    this.addChests(room, 10, rand);\r\n  };\r\n\r\n  populateDungeon = (room: Room, rand: () => number) => {\r\n    let factor = Game.rand(1, 36, rand);\r\n    if (factor <= 6) this.placeVendingMachineInWall(room);\r\n\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populateBoss = (room: Room, rand: () => number) => {\r\n    this.addBosses(room, room.depth);\r\n  };\r\n\r\n  populateBigDungeon = (room: Room, rand: () => number) => {\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populateSpawner = (room: Room, rand: () => number) => {\r\n    Spawner.add(\r\n      room,\r\n      room.game,\r\n      Math.floor(room.roomX + room.width / 2),\r\n      Math.floor(room.roomY + room.height / 2),\r\n    );\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populatePuzzle = (room: Room, rand: () => number) => {\r\n    let d;\r\n\r\n    for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n      let y = room.roomY + Math.floor(room.height / 2);\r\n      if (x === room.roomX + Math.floor(room.width / 2)) {\r\n        d = new InsideLevelDoor(room, room.game, x, y + 1);\r\n        room.roomArray[x][y + 1] = d;\r\n      } else {\r\n        room.roomArray[x][y] = new Wall(room, x, y);\r\n      }\r\n    }\r\n\r\n    let x = Game.rand(room.roomX, room.roomX + room.width - 1, rand);\r\n    let y = Game.rand(\r\n      room.roomY + Math.floor(room.height / 2) + 3,\r\n      room.roomY + room.height - 2,\r\n      rand,\r\n    );\r\n\r\n    room.roomArray[x][y] = new Button(room, x, y, d);\r\n\r\n    let crateTiles = room\r\n      .getEmptyTiles()\r\n      .filter(\r\n        (t) =>\r\n          t.x >= room.roomX + 1 &&\r\n          t.x <= room.roomX + room.width - 2 &&\r\n          t.y >= room.roomY + Math.floor(room.height / 2) + 3 &&\r\n          t.y <= room.roomY + room.height - 2,\r\n      );\r\n    let numCrates = Game.randTable([1, 2, 2, 3, 4], rand);\r\n\r\n    for (let i = 0; i < numCrates; i++) {\r\n      let t = crateTiles.splice(\r\n        Game.rand(0, crateTiles.length - 1, rand),\r\n        1,\r\n      )[0];\r\n      if (t) room.entities.push(new Crate(room, room.game, t.x, t.y));\r\n    }\r\n\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populateSpikeCorridor = (room: Room, rand: () => number) => {\r\n    for (let x = room.roomX; x < room.roomX + room.width; x++) {\r\n      for (let y = room.roomY + 1; y < room.roomY + room.height - 1; y++) {\r\n        room.roomArray[x][y] = new SpikeTrap(room, x, y, Game.rand(0, 3, rand));\r\n      }\r\n    }\r\n    room.removeDoorObstructions();\r\n    // Removed: this.addRandomTorches(room, \"medium\");\r\n  };\r\n\r\n  populateCave = (room: Room, rand: () => number) => {\r\n    let factor = Game.rand(1, 36, rand);\r\n\r\n    // Removed: if (factor > 15) this.addSpikeTraps(...);\r\n    let numEmptyTiles = room.getEmptyTiles().length;\r\n    let numEnemies = Math.ceil(\r\n      numEmptyTiles * Game.randTable([0.25, 0.3, 0.35], rand),\r\n    );\r\n    //this.addEnemiesUnified(room, numEnemies, room.envType); // Use unified system directly\r\n    if (room.level.environment.type === EnvType.CAVE)\r\n      this.addResources(\r\n        room,\r\n        (numEmptyTiles - numEnemies) * Game.randTable([0.1, 0.2, 0.3], rand),\r\n        rand,\r\n      );\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populateUpLadder = (room: Room, rand: () => number) => {\r\n    // Removed: this.addRandomTorches(room, \"medium\");\r\n\r\n    const { x, y } = room.getRoomCenter();\r\n    room.roomArray[x - 1][y - 1] = new UpLadder(room, room.game, x - 1, y - 1);\r\n  };\r\n\r\n  populateDownLadder = (room: Room, rand: () => number) => {\r\n    // Removed: this.addTorches(room, 1, rand, room.roomX + 3, room.roomY);\r\n\r\n    const { x, y } = room.getRoomCenter();\r\n    room.roomArray[x + 1][y - 1] = new DownLadder(\r\n      room,\r\n      room.game,\r\n      x + 1,\r\n      y - 1,\r\n    );\r\n\r\n    const numChests = Math.ceil(Random.rand() * 5);\r\n\r\n    let tiles = room.getEmptyTiles();\r\n    tiles = tiles.filter((tile) => tile.x !== x || tile.y !== y);\r\n    let weaponDropped = false;\r\n    let toolDropped = false;\r\n    let lightDropped = false;\r\n    for (let i = 0; i < numChests; i++) {\r\n      if (tiles.length > 0) {\r\n        const position = room.getRandomEmptyPosition(tiles);\r\n        if (position === null) break;\r\n        const { x, y } = position;\r\n\r\n        let chest = new Chest(room, room.game, x, y);\r\n        /*\r\n        if (!weaponDropped) {\r\n          chest.getDrop([\"weapon\"], true);\r\n          weaponDropped = true;\r\n        } else \r\n         */\r\n\r\n        chest.getDrop(\r\n          [\r\n            \"consumable\",\r\n            \"gem\",\r\n            \"light\",\r\n            \"tool\",\r\n            \"fuel\",\r\n            \"backpack\",\r\n            \"weapon\",\r\n            \"coin\",\r\n          ],\r\n          false,\r\n        );\r\n\r\n        tiles.filter((tile) => tile.x !== x && tile.y !== y);\r\n        room.entities.push(chest);\r\n      }\r\n    }\r\n    if (room.depth === 0) this.populateWeaponGroup(room, tiles);\r\n  };\r\n\r\n  populateWeaponGroup = (room: Room, tiles: Tile[]) => {\r\n    const emptyTile = room.getRandomEmptyPosition(tiles);\r\n    const emptyTile2 = room.getRandomEmptyPosition(tiles, emptyTile);\r\n    const emptyTile3 = room.getRandomEmptyPosition(tiles, emptyTile2);\r\n\r\n    const weapons = new ItemGroup([\r\n      new Spear(room, emptyTile.x, emptyTile.y),\r\n      new Warhammer(room, emptyTile2.x, emptyTile2.y),\r\n      new Sword(room, emptyTile3.x, emptyTile3.y),\r\n    ]);\r\n    for (const item of weapons.items) {\r\n      item.grouped = true;\r\n      item.group = weapons;\r\n      room.items.push(item);\r\n    }\r\n  };\r\n\r\n  populateRopeHole = (room: Room, rand: () => number) => {\r\n    // Removed: this.addRandomTorches(room, \"medium\");\r\n\r\n    const { x, y } = room.getRoomCenter();\r\n\r\n    const environment = room.depth < 1 ? EnvType.FOREST : EnvType.CAVE;\r\n    //console.log(\"About to create DownLadder in rope hole\");\r\n    let d = new DownLadder(room, room.game, x, y, true, environment);\r\n    //console.log(\"DownLadder created, about to add to room array\");\r\n\r\n    // Delay adding to room array to avoid triggering side path generation during level setup\r\n    setTimeout(() => {\r\n      room.roomArray[x][y] = d;\r\n      //console.log(\"DownLadder added to room array successfully (delayed)\");\r\n    }, 0);\r\n  };\r\n\r\n  populateRopeCave = (room: Room, rand: () => number) => {\r\n    let message = \"\";\r\n    switch (room.envType) {\r\n      case EnvType.CAVE:\r\n        message = \"Cave\";\r\n        break;\r\n      case EnvType.MAGMA_CAVE:\r\n        message = \"Magma Cave\";\r\n        break;\r\n      case EnvType.FOREST:\r\n        message = \"Forest\";\r\n        break;\r\n      case EnvType.CASTLE:\r\n        message = \"Castle\";\r\n    }\r\n    room.name = message;\r\n    const { x, y } = room.getRoomCenter();\r\n    let upLadder = new UpLadder(room, room.game, x, y);\r\n    upLadder.isRope = true;\r\n    upLadder.isSidePath = true;\r\n    room.roomArray[x][y] = upLadder;\r\n    if (room.envType === EnvType.CAVE)\r\n      this.placeVendingMachineInWall(room, new Pickaxe(room, 0, 0));\r\n    else this.placeVendingMachineInWall(room);\r\n\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  populateShop = (room: Room, rand: () => number) => {\r\n    this.addTorches(room, 2, rand);\r\n    const { x, y } = room.getRoomCenter();\r\n    VendingMachine.add(room, room.game, x - 2, y - 1, new Shotgun(room, 0, 0));\r\n    VendingMachine.add(room, room.game, x + 2, y - 1, new Heart(room, 0, 0));\r\n    VendingMachine.add(room, room.game, x - 2, y + 2, new Armor(room, 0, 0));\r\n    VendingMachine.add(room, room.game, x + 2, y + 2, new Spear(room, 0, 0));\r\n\r\n    room.removeDoorObstructions();\r\n  };\r\n\r\n  // Many populate methods start with adding torches using the same pattern\r\n  private addRandomTorches(\r\n    room: Room,\r\n    intensity: \"none\" | \"low\" | \"medium\" | \"high\" = \"medium\",\r\n  ): void {\r\n    const torchPatterns = {\r\n      none: [0, 0, 0],\r\n      low: [0, 0, 0, 1, 1],\r\n      medium: [0, 0, 0, 1, 1, 2, 2, 3],\r\n      high: [1, 1, 2, 2, 3, 3, 4],\r\n    };\r\n    const randTorches = Game.randTable(torchPatterns[intensity], Random.rand);\r\n    this.addTorches(room, randTorches, Random.rand);\r\n  }\r\n\r\n  // Windows: random and by-area helpers mirroring torches\r\n  private addRandomWindows(\r\n    room: Room,\r\n    intensity: \"none\" | \"low\" | \"medium\" | \"high\" = \"medium\",\r\n  ): void {\r\n    const windowPatterns = {\r\n      none: [0, 0, 0],\r\n      low: [0, 0, 0, 1, 1],\r\n      medium: [0, 0, 0, 1, 1, 2, 2, 3],\r\n      high: [1, 1, 2, 2, 3, 3, 4],\r\n    };\r\n    const randWindows = Game.randTable(windowPatterns[intensity], Random.rand);\r\n    //this.addWindows(room, randWindows, Random.rand);\r\n  }\r\n\r\n  private addTorchesByArea = (room: Room) => {\r\n    let numTorches = Math.max(\r\n      1,\r\n      Math.floor(Math.sqrt(room.roomArea) / 3) -\r\n        Math.floor(Math.sqrt(room.depth)),\r\n    );\r\n    if (room.depth === 0) {\r\n      if (Random.rand() < 0.25) {\r\n        numTorches = 0;\r\n      }\r\n    } else {\r\n      // Exponential falloff starting at depth 1, approaching 90% chance\r\n      const falloffRate = 0.4; // Controls how quickly it approaches 90%\r\n      const maxChance = 0.9;\r\n      const chance =\r\n        maxChance * (1 - Math.exp(-falloffRate * (room.depth - 1)));\r\n      if (Random.rand() < chance) {\r\n        numTorches = 0;\r\n      }\r\n    }\r\n    this.addTorches(room, numTorches, Random.rand);\r\n  };\r\n\r\n  private addWindowsByArea = (room: Room) => {\r\n    // Only place windows in castle-themed rooms\r\n    const isCastle =\r\n      room.envType === EnvType.CASTLE ||\r\n      room.level.environment.type === EnvType.CASTLE;\r\n    if (!isCastle) return;\r\n\r\n    let numWindows = Math.max(\r\n      0,\r\n      Math.floor(Math.sqrt(room.roomArea) / 4) -\r\n        Math.floor(Math.sqrt(room.depth)),\r\n    );\r\n\r\n    // Slight randomness similar to torches\r\n    if (room.depth === 0) {\r\n      if (Random.rand() < 0.15) {\r\n        numWindows = 0;\r\n      }\r\n    }\r\n\r\n    //this.addWindows(room, numWindows, Random.rand);\r\n  };\r\n\r\n  /**\r\n   * Centralized method to add torches, spikes, and pools based on room type\r\n   */\r\n  private addEnvironmentalFeatures(room: Room, rand: () => number) {\r\n    const factor = Game.rand(1, 36, rand);\r\n\r\n    switch (room.type) {\r\n      case RoomType.START:\r\n        if (room.depth !== 0) {\r\n          // No torches for start rooms with upladder\r\n        } else {\r\n          this.addTorchesByArea(room);\r\n        }\r\n        break;\r\n\r\n      case RoomType.BOSS:\r\n        const bossDoor = room.getBossDoor();\r\n        this.addDoorTorches(room, bossDoor.x, bossDoor.y, bossDoor.doorDir);\r\n        this.addTorchesByArea(room);\r\n        this.addSpikeTraps(\r\n          room,\r\n          Game.randTable([0, 0, 0, 1, 1, 2, 5], rand),\r\n          rand,\r\n        );\r\n        break;\r\n\r\n      case RoomType.DUNGEON:\r\n        if (\r\n          this.level.environment.type === EnvType.CAVE ||\r\n          this.level.environment.type === EnvType.MAGMA_CAVE ||\r\n          this.level.environment.type === EnvType.FOREST\r\n        ) {\r\n          if (factor < 20) room.builder.addWallBlocksVariant(rand);\r\n        } else {\r\n          if (factor < 20) room.builder.addWallBlocks(rand);\r\n        }\r\n\r\n        if (room.envType !== EnvType.CASTLE) {\r\n          if (factor < 12) this.addPools(room, rand);\r\n\r\n          if (factor < 12) this.addChasms(room, rand);\r\n\r\n          if (factor < 12 && room.depth > 5) this.addMagmaPools(room, rand);\r\n        }\r\n\r\n        this.addTorchesByArea(room);\r\n        // Add windows for castle rooms\r\n        this.addWindowsByArea(room);\r\n        if (factor > 15)\r\n          this.addSpikeTraps(\r\n            room,\r\n            Game.randTable([0, 0, 0, 1, 1, 2, 3], rand),\r\n            rand,\r\n          );\r\n        break;\r\n\r\n      case RoomType.BIGDUNGEON:\r\n        if (factor < 5) room.builder.addWallBlocks(rand);\r\n\r\n        if (Game.rand(1, 4, rand) === 1) this.addChasms(room, rand);\r\n        this.addTorchesByArea(room);\r\n        if (Game.rand(1, 3, rand) === 1)\r\n          this.addSpikeTraps(room, Game.randTable([3, 5, 7, 8], rand), rand);\r\n        break;\r\n\r\n      case RoomType.CAVE:\r\n        if (\r\n          this.level.environment.type === EnvType.CAVE ||\r\n          this.level.environment.type === EnvType.MAGMA_CAVE ||\r\n          this.level.environment.type === EnvType.FOREST\r\n        ) {\r\n          if (factor < 20) room.builder.addWallBlocksVariant(rand);\r\n        } else {\r\n          if (factor < 20) room.builder.addWallBlocks(rand);\r\n        }\r\n\r\n        if (room.envType !== EnvType.CASTLE) {\r\n          if (factor < 12) this.addChasms(room, rand);\r\n\r\n          if (factor < 12) this.addPools(room, rand);\r\n          if (factor < 12 && room.depth > 5) this.addMagmaPools(room, rand);\r\n        }\r\n\r\n        if (this.level.environment.type === EnvType.CASTLE)\r\n          this.addTorchesByArea(room);\r\n        // Windows for castle cave-style rooms\r\n        this.addWindowsByArea(room);\r\n\r\n        break;\r\n\r\n      case RoomType.BIGCAVE:\r\n        if (factor > 15)\r\n          this.addSpikeTraps(\r\n            room,\r\n            Game.randTable([0, 0, 0, 1, 1, 2, 5], rand),\r\n            rand,\r\n          );\r\n        // Caves don't get torches by default\r\n        break;\r\n\r\n      case RoomType.TREASURE:\r\n        this.addTorchesByArea(room);\r\n        break;\r\n\r\n      case RoomType.SPAWNER:\r\n        this.addTorchesByArea(room);\r\n        break;\r\n\r\n      case RoomType.UPLADDER:\r\n        this.addRandomTorches(room, \"medium\");\r\n        break;\r\n\r\n      case RoomType.DOWNLADDER:\r\n        this.addTorches(room, 1, rand, room.roomX + 3, room.roomY);\r\n        break;\r\n\r\n      case RoomType.ROPEHOLE:\r\n        this.addRandomTorches(room, \"medium\");\r\n        break;\r\n\r\n      case RoomType.SPIKECORRIDOR:\r\n        this.addRandomTorches(room, \"medium\");\r\n        break;\r\n\r\n      case RoomType.SHOP:\r\n        this.addTorches(room, 2, rand);\r\n        break;\r\n\r\n      case RoomType.GRASS:\r\n        if (factor % 4 === 0) this.addChasms(room, rand);\r\n        if (factor % 3 === 0) this.addPools(room, rand);\r\n        this.addTorchesByArea(room);\r\n        if (factor > 15)\r\n          this.addSpikeTraps(\r\n            room,\r\n            Game.randTable([0, 0, 0, 1, 1, 2, 3], rand),\r\n            rand,\r\n          );\r\n        break;\r\n\r\n      default:\r\n        // No environmental features for other room types\r\n        break;\r\n    }\r\n  }\r\n\r\n  populate = (room: Room, rand: () => number) => {\r\n    room.name = \"\";\r\n    switch (room.type) {\r\n      case RoomType.START:\r\n        if (room.depth !== 0) {\r\n          this.populateUpLadder(room, rand);\r\n          this.placeVendingMachineInWall(room);\r\n        }\r\n\r\n        this.populateEmpty(room, rand);\r\n        room.name = \"FLOOR \" + -room.depth;\r\n\r\n        break;\r\n      case RoomType.BOSS:\r\n        this.populateBoss(room, rand);\r\n        room.name = \"BOSS\";\r\n        break;\r\n      case RoomType.DUNGEON:\r\n        if (\r\n          room.level.environment.type === EnvType.CAVE &&\r\n          Random.rand() <= 0.2\r\n        ) {\r\n          this.populateCave(room, rand);\r\n        } else {\r\n          this.populateDungeon(room, rand);\r\n        }\r\n        break;\r\n      case RoomType.BIGDUNGEON:\r\n        this.populateBigDungeon(room, rand);\r\n        break;\r\n\r\n      case RoomType.PUZZLE:\r\n        this.populatePuzzle(room, rand);\r\n        break;\r\n      case RoomType.SPIKECORRIDOR:\r\n        this.populateSpikeCorridor(room, rand);\r\n        break;\r\n      case RoomType.TREASURE:\r\n        this.populateTreasure(room, rand);\r\n        break;\r\n\r\n      case RoomType.GRASS:\r\n        this.populateDungeon(room, rand);\r\n        break;\r\n      case RoomType.BIGCAVE:\r\n        this.populateCave(room, rand);\r\n      case RoomType.CAVE:\r\n        this.populateCave(room, rand);\r\n        break;\r\n      case RoomType.UPLADDER:\r\n        this.populateUpLadder(room, rand);\r\n        room.name = \"FLOOR \" + -room.depth;\r\n\r\n        break;\r\n      case RoomType.DOWNLADDER:\r\n        this.populateDownLadder(room, rand);\r\n        room.name = \"FLOOR \" + -room.depth;\r\n        break;\r\n      case RoomType.ROPEHOLE:\r\n        this.populateRopeHole(room, rand);\r\n        break;\r\n      case RoomType.ROPECAVE:\r\n        this.populateRopeCave(room, rand);\r\n        break;\r\n      case RoomType.SHOP:\r\n        this.populateShop(room, rand);\r\n        break;\r\n      case RoomType.SPAWNER:\r\n        this.populateSpawner(room, rand);\r\n        break;\r\n    }\r\n    room.message = room.name;\r\n  };\r\n\r\n  /**\r\n   * Places a VendingMachine in an empty wall.\r\n   */\r\n  placeVendingMachineInWall(room: Room, item?: Item): void {\r\n    const emptyWalls = room.getEmptyWall();\r\n    if (emptyWalls.length === 0) return;\r\n\r\n    // Select a random empty wall\r\n    const selectedWall = Game.randTable(emptyWalls, Random.rand);\r\n    if (!selectedWall) return;\r\n\r\n    // Remove the selected wall\r\n    const removedWallInfo = room.removeEmptyWall(selectedWall);\r\n    if (!removedWallInfo) return;\r\n\r\n    const { x, y } = removedWallInfo;\r\n\r\n    // Create and add the VendingMachine\r\n    this.addVendingMachine(room, Random.rand, x, y, item);\r\n\r\n    room.roomArray[x][y] = selectedWall;\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Sound } from \"./sound\";\r\nimport { Howl, Howler } from \"howler\";\r\n\r\nexport class ReverbEngine {\r\n  private static audioContext: AudioContext;\r\n  private static convolver: ConvolverNode;\r\n  private static reverbBuffer: AudioBuffer | null = null;\r\n  private static gainNodes: Map<number, GainNode> = new Map();\r\n  private static originalRefreshBuffer: any;\r\n  private static mobileUnlockAttempted: boolean = false;\r\n  static initialized: boolean = false;\r\n\r\n  static isMobile(): boolean {\r\n    return Sound.isMobile;\r\n  }\r\n\r\n  // Mobile-specific audio context unlock\r\n  private static async unlockMobileAudio(): Promise<void> {\r\n    if (ReverbEngine.mobileUnlockAttempted || !ReverbEngine.isMobile()) {\r\n      return;\r\n    }\r\n\r\n    ReverbEngine.mobileUnlockAttempted = true;\r\n\r\n    try {\r\n      // Create a silent buffer and play it to unlock the audio context\r\n      const buffer = ReverbEngine.audioContext.createBuffer(1, 1, 22050);\r\n      const source = ReverbEngine.audioContext.createBufferSource();\r\n      source.buffer = buffer;\r\n      source.connect(ReverbEngine.audioContext.destination);\r\n\r\n      if (typeof source.start === \"undefined\") {\r\n        (source as any).noteOn(0);\r\n      } else {\r\n        source.start(0);\r\n      }\r\n\r\n      // Resume the context\r\n      if (ReverbEngine.audioContext.state === \"suspended\") {\r\n        await ReverbEngine.audioContext.resume();\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"[REVERB-MOBILE] Failed to unlock audio context:\", error);\r\n    }\r\n  }\r\n\r\n  // Helper function to get sound identifier for logging\r\n  private static getSoundName(sound: Howl): string {\r\n    const src = (sound as any)._src;\r\n    if (Array.isArray(src) && src.length > 0) {\r\n      return src[0].split(\"/\").pop() || \"unknown\";\r\n    } else if (typeof src === \"string\") {\r\n      return src.split(\"/\").pop() || \"unknown\";\r\n    }\r\n    return \"unknown\";\r\n  }\r\n\r\n  // General logging function to avoid repetition\r\n  private static logStep(\r\n    step: string,\r\n    soundName: string,\r\n    message: string,\r\n    soundId?: number,\r\n  ) {\r\n    const idStr = soundId !== undefined ? ` [ID:${soundId}]` : \"\";\r\n  }\r\n\r\n  public static async initialize() {\r\n    if (ReverbEngine.initialized) return;\r\n\r\n    let canInitialize = Game.inputReceived;\r\n\r\n    // For mobile, we need to be extra careful about timing\r\n    if (!canInitialize) {\r\n      try {\r\n        await new Promise<void>((resolve) => {\r\n          const checkInput = () => {\r\n            if (Game.inputReceived) {\r\n              resolve();\r\n              canInitialize = true;\r\n            } else {\r\n              requestAnimationFrame(checkInput);\r\n            }\r\n          };\r\n          checkInput();\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Failed to wait for input:\", error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !ReverbEngine.audioContext &&\r\n      !ReverbEngine.initialized &&\r\n      canInitialize\r\n    ) {\r\n      try {\r\n        // Wait for Howler to initialize its context\r\n        if (!Howler.ctx) {\r\n          await new Promise((resolve) => setTimeout(resolve, 100));\r\n        }\r\n\r\n        ReverbEngine.audioContext =\r\n          Howler.ctx ||\r\n          new (window.AudioContext || (window as any).webkitAudioContext)();\r\n\r\n        // Mobile-specific: Unlock audio context immediately after user interaction\r\n        if (ReverbEngine.isMobile()) {\r\n          await ReverbEngine.unlockMobileAudio();\r\n        }\r\n\r\n        // Resume context if suspended (common on mobile)\r\n        if (ReverbEngine.audioContext.state === \"suspended\") {\r\n          await ReverbEngine.audioContext.resume();\r\n        }\r\n\r\n        // Set up the convolver\r\n        ReverbEngine.convolver = ReverbEngine.audioContext.createConvolver();\r\n        ReverbEngine.convolver.connect(ReverbEngine.audioContext.destination);\r\n\r\n        await ReverbEngine.loadReverbBuffer(`res/SFX/impulses/small.mp3`);\r\n        ReverbEngine.setDefaultReverb();\r\n\r\n        // HOOK INTO _refreshBuffer METHOD\r\n        if (!ReverbEngine.originalRefreshBuffer) {\r\n          ReverbEngine.originalRefreshBuffer = Howl.prototype._refreshBuffer;\r\n\r\n          Howl.prototype._refreshBuffer = function (sound: any) {\r\n            const soundName = ReverbEngine.getSoundName(this);\r\n            ReverbEngine.logStep(\r\n              \"A\",\r\n              soundName,\r\n              \"Intercepted _refreshBuffer\",\r\n              sound._id,\r\n            );\r\n\r\n            // Mobile check: ensure audio context is not suspended\r\n            if (\r\n              ReverbEngine.isMobile() &&\r\n              ReverbEngine.audioContext.state === \"suspended\"\r\n            ) {\r\n              ReverbEngine.audioContext.resume().then(() => {\r\n                ReverbEngine.logStep(\r\n                  \"A-MOBILE\",\r\n                  soundName,\r\n                  \"Resumed suspended context\",\r\n                  sound._id,\r\n                );\r\n              });\r\n            }\r\n\r\n            // Call the original method first\r\n            ReverbEngine.originalRefreshBuffer.call(this, sound);\r\n\r\n            // Now intercept the connection and add our reverb routing\r\n            if (sound._node && sound._node.bufferSource) {\r\n              ReverbEngine.logStep(\r\n                \"B\",\r\n                soundName,\r\n                \"Setting up reverb routing\",\r\n                sound._id,\r\n              );\r\n\r\n              // Disconnect from the original destination\r\n              sound._node.bufferSource.disconnect();\r\n\r\n              // Create or get gain node for this sound\r\n              let gainNode = ReverbEngine.gainNodes.get(sound._id);\r\n              if (!gainNode) {\r\n                gainNode = ReverbEngine.audioContext.createGain();\r\n                const volume = (this as any)._volume || 1.0;\r\n                gainNode.gain.setValueAtTime(\r\n                  volume,\r\n                  ReverbEngine.audioContext.currentTime,\r\n                );\r\n                gainNode.connect(ReverbEngine.convolver);\r\n                ReverbEngine.gainNodes.set(sound._id, gainNode);\r\n                ReverbEngine.logStep(\r\n                  \"C\",\r\n                  soundName,\r\n                  `Created gain node with volume ${volume}`,\r\n                  sound._id,\r\n                );\r\n              }\r\n\r\n              // Connect buffer source to our gain node instead of the original destination\r\n              sound._node.bufferSource.connect(gainNode);\r\n              ReverbEngine.logStep(\r\n                \"D\",\r\n                soundName,\r\n                \"Connected to reverb gain node\",\r\n                sound._id,\r\n              );\r\n            }\r\n          };\r\n        }\r\n\r\n        ReverbEngine.initialized = true;\r\n        if (Sound.initialized) Sound.audioMuted = false;\r\n\r\n        const deviceType = ReverbEngine.isMobile() ? \"MOBILE\" : \"DESKTOP\";\r\n      } catch (error) {\r\n        console.error(\"Failed to initialize ReverbEngine:\", error);\r\n        ReverbEngine.initialized = true;\r\n        if (Sound.initialized) Sound.audioMuted = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Load a specified impulse response\r\n  private static async loadReverbBuffer(filePath: string) {\r\n    try {\r\n      const response = await fetch(filePath);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      ReverbEngine.reverbBuffer =\r\n        await ReverbEngine.audioContext.decodeAudioData(arrayBuffer);\r\n    } catch (error) {\r\n      console.error(\"Error loading reverb buffer:\", error);\r\n    }\r\n  }\r\n\r\n  // Set the default reverb buffer\r\n  private static setDefaultReverb() {\r\n    if (ReverbEngine.reverbBuffer) {\r\n      ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the reverb characteristics by specifying an impulse response file.\r\n   * @param filePath - The path to the impulse response file.\r\n   */\r\n  public static async setReverbImpulse(filePath: string): Promise<void> {\r\n    if (!ReverbEngine.initialized) return;\r\n    try {\r\n      await ReverbEngine.loadReverbBuffer(filePath);\r\n      if (ReverbEngine.reverbBuffer) {\r\n        ReverbEngine.convolver.buffer = ReverbEngine.reverbBuffer;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error setting reverb impulse:\", error);\r\n    }\r\n  }\r\n\r\n  // CONNECTION INTERCEPT APPROACH: The _refreshBuffer hook handles everything\r\n  public static applyReverb(sound: Howl): number {\r\n    const soundName = ReverbEngine.getSoundName(sound);\r\n\r\n    ReverbEngine.logStep(\r\n      \"E\",\r\n      soundName,\r\n      \"CONNECTION INTERCEPT - _refreshBuffer hook will handle reverb\",\r\n    );\r\n\r\n    if (!ReverbEngine.initialized) {\r\n      ReverbEngine.logStep(\r\n        \"E1\",\r\n        soundName,\r\n        \"Not initialized, playing without reverb\",\r\n      );\r\n      return sound.play();\r\n    }\r\n\r\n    // Mobile check: ensure we have an active audio context\r\n    if (\r\n      ReverbEngine.isMobile() &&\r\n      ReverbEngine.audioContext.state !== \"running\"\r\n    ) {\r\n      ReverbEngine.audioContext.resume().catch((error) => {\r\n        console.warn(\"[REVERB-MOBILE] Could not resume audio context:\", error);\r\n      });\r\n    }\r\n\r\n    // Just call play normally - our _refreshBuffer hook will handle the rest\r\n    return sound.play();\r\n  }\r\n\r\n  // Remove reverb from a given Howl sound\r\n  public static removeReverb(sound: Howl) {\r\n    const soundName = ReverbEngine.getSoundName(sound);\r\n\r\n    // Clean up any gain nodes associated with this sound\r\n    for (const [soundId, gainNode] of ReverbEngine.gainNodes.entries()) {\r\n      if (gainNode) {\r\n        gainNode.disconnect();\r\n        ReverbEngine.gainNodes.delete(soundId);\r\n      }\r\n    }\r\n\r\n    ReverbEngine.logStep(\r\n      \"R\",\r\n      soundName,\r\n      \"Reverb removed and gain nodes cleaned up\",\r\n    );\r\n  }\r\n\r\n  // Cleanup method\r\n  public static cleanup() {\r\n    // Restore original _refreshBuffer method\r\n    if (ReverbEngine.originalRefreshBuffer) {\r\n      Howl.prototype._refreshBuffer = ReverbEngine.originalRefreshBuffer;\r\n    }\r\n\r\n    // Clean up all gain nodes\r\n    for (const [soundId, gainNode] of ReverbEngine.gainNodes.entries()) {\r\n      if (gainNode) {\r\n        gainNode.disconnect();\r\n      }\r\n    }\r\n    ReverbEngine.gainNodes.clear();\r\n\r\n    if (ReverbEngine.convolver) {\r\n      ReverbEngine.convolver.disconnect();\r\n    }\r\n\r\n    if (\r\n      ReverbEngine.audioContext &&\r\n      ReverbEngine.audioContext.state !== \"closed\"\r\n    ) {\r\n      ReverbEngine.audioContext.close();\r\n    }\r\n    ReverbEngine.initialized = false;\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Random } from \"../utility/random\";\r\nimport { ReverbEngine } from \"./reverb\";\r\nimport { Howl, Howler } from \"howler\";\r\n\r\nexport class Sound {\r\n  static playerStoneFootsteps: Array<Howl>;\r\n  static playerGrassFootsteps: Array<Howl>;\r\n  static playerDirtFootsteps: Array<Howl>;\r\n  static enemyFootsteps: Array<Howl>;\r\n  static hitSounds: Array<Howl>;\r\n  static enemySpawnSound: Howl;\r\n  static chestSounds: Array<Howl>;\r\n  static coinPickupSounds: Array<Howl>;\r\n  static miningSounds: Array<Howl>;\r\n  static breakRockSound: Howl;\r\n  static hurtSounds: Array<Howl>;\r\n  static genericPickupSound: Howl;\r\n  static pushSounds: Array<Howl>;\r\n  static healSound: Howl;\r\n  static forestMusic: Howl;\r\n  static caveMusic: Howl;\r\n  static graveSound: Howl;\r\n  static ambientSound: Howl;\r\n  static goreSound: Howl;\r\n  static swingSounds: Array<Howl>;\r\n  static unlockSounds: Array<Howl>;\r\n  static doorOpenSounds: Array<Howl>;\r\n  static potSmashSounds: Array<Howl>;\r\n  static keyPickupSound: Howl;\r\n  static magicSound: Howl;\r\n  static wooshSounds: Array<Howl>;\r\n  static initialized: boolean = false;\r\n  static audioMuted: boolean = true;\r\n  static bombSounds: Array<Howl>;\r\n  static fuseBurnSound: Howl;\r\n  static fuseLoopSound: Howl;\r\n  static fuseStartSound: Howl;\r\n  static warHammerSound: Howl;\r\n  static sliceSound: Array<Howl>;\r\n  static shortSliceSound: Array<Howl>;\r\n  static backpackSound: Howl;\r\n  static smithSound: Howl;\r\n  static bushSounds: Array<Howl>;\r\n  static parrySounds: Array<Howl>;\r\n  static eatSounds: Array<Howl>;\r\n  static gruntSounds: Array<Howl>;\r\n  static lockedSound: Howl;\r\n  static woodSound: Howl;\r\n  static squishSound: Howl;\r\n  static fishingCastSounds: Array<Howl>;\r\n  static fishingReelSound: Howl;\r\n  static fishingCatchSounds: Array<Howl>;\r\n  static crushSounds: Array<Howl>;\r\n\r\n  static currentlyPlaying: Set<number> = new Set();\r\n\r\n  static readonly PRIORITY = {\r\n    AMBIENT: 1,\r\n    FOOTSTEPS: 2,\r\n    INTERACTIONS: 3,\r\n    COMBAT: 4,\r\n    CRITICAL: 5,\r\n  };\r\n\r\n  static isMobile: boolean = false;\r\n  static audioContextResumed: boolean = false;\r\n  static forestMusicId: number | null = null;\r\n  static caveMusicId: number | null = null;\r\n  static ambientSoundId: number | null = null;\r\n\r\n  static detectMobile() {\r\n    const userAgent =\r\n      navigator.userAgent || navigator.vendor || (window as any).opera;\r\n    Sound.isMobile =\r\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n        userAgent,\r\n      );\r\n    return Sound.isMobile;\r\n  }\r\n\r\n  static async enableAudioForMobile() {\r\n    if (Sound.audioContextResumed) return;\r\n\r\n    try {\r\n      if (Howler.ctx && Howler.ctx.state === \"suspended\") {\r\n        await Howler.ctx.resume();\r\n        Sound.audioContextResumed = true;\r\n        console.log(\"AudioContext resumed\");\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Could not resume AudioContext:\", error);\r\n    }\r\n  }\r\n\r\n  static addMobileAudioHandlers() {\r\n    const enableAudio = async () => {\r\n      await Sound.enableAudioForMobile();\r\n      if (Sound.audioMuted && ReverbEngine.initialized) {\r\n        Sound.audioMuted = false;\r\n        Howler.mute(false);\r\n      }\r\n    };\r\n\r\n    const events = [\"touchstart\", \"click\", \"keydown\"];\r\n    const handler = () => {\r\n      enableAudio();\r\n      events.forEach((event) => {\r\n        document.removeEventListener(event, handler);\r\n      });\r\n    };\r\n\r\n    events.forEach((event) => {\r\n      document.addEventListener(event, handler, { once: true });\r\n    });\r\n  }\r\n\r\n  static toggleMute() {\r\n    Sound.audioMuted = !Sound.audioMuted;\r\n    if (Sound.audioMuted) {\r\n      Howler.mute(true);\r\n    } else {\r\n      Howler.mute(false);\r\n      if (Sound.isMobile) {\r\n        Sound.enableAudioForMobile();\r\n      }\r\n    }\r\n  }\r\n\r\n  static loadSounds = async () => {\r\n    if (Sound.initialized) return;\r\n    Sound.initialized = true;\r\n\r\n    Sound.detectMobile();\r\n    if (Sound.isMobile) {\r\n      Sound.addMobileAudioHandlers();\r\n    }\r\n\r\n    if (ReverbEngine.initialized) {\r\n      Sound.audioMuted = false;\r\n    }\r\n\r\n    // Optimized Howl creation - always use Web Audio API for better performance\r\n    const createHowlArray = (\r\n      basePath: string,\r\n      indices: number[],\r\n      volume: number = 1.0,\r\n      maxConcurrent: number = 3,\r\n    ): Array<Howl> => {\r\n      return indices.map((i) => {\r\n        return new Howl({\r\n          src: [`${basePath}${i}.mp3`],\r\n          volume: volume,\r\n          preload: true,\r\n          html5: false, // Always use Web Audio API\r\n          pool: maxConcurrent,\r\n        });\r\n      });\r\n    };\r\n\r\n    const createHowl = (\r\n      src: string,\r\n      volume: number = 1.0,\r\n      loop: boolean = false,\r\n      maxConcurrent: number = 2,\r\n    ): Howl => {\r\n      return new Howl({\r\n        src: [src],\r\n        volume: volume,\r\n        preload: true,\r\n        loop: loop,\r\n        html5: false, // Always use Web Audio API\r\n        pool: maxConcurrent,\r\n      });\r\n    };\r\n\r\n    try {\r\n      // Load all sounds with optimized settings\r\n      Sound.magicSound = createHowl(\r\n        \"res/SFX/attacks/magic2.mp3\",\r\n        0.25,\r\n        false,\r\n        3,\r\n      );\r\n      Sound.warHammerSound = createHowl(\r\n        \"res/SFX/attacks/warhammer.mp3\",\r\n        1,\r\n        false,\r\n        3,\r\n      );\r\n      Sound.healSound = createHowl(\"res/SFX/items/powerup1.mp3\", 0.5, false, 1);\r\n      Sound.eatSounds = createHowlArray(\"res/SFX/items/eat\", [1, 2], 1.0, 5);\r\n      // Footstep sounds\r\n      Sound.playerStoneFootsteps = createHowlArray(\r\n        \"res/SFX/footsteps/stone/footstep\",\r\n        [1, 2, 3],\r\n        1.0,\r\n        4,\r\n      );\r\n      Sound.playerGrassFootsteps = createHowlArray(\r\n        \"res/SFX/footsteps/grass/footstep\",\r\n        [1, 2, 3, 6],\r\n        1.0,\r\n        4,\r\n      );\r\n      Sound.playerDirtFootsteps = createHowlArray(\r\n        \"res/SFX/footsteps/dirt/footstep\",\r\n        [1, 2, 3, 4, 5],\r\n        1.0,\r\n        4,\r\n      );\r\n      Sound.enemyFootsteps = createHowlArray(\r\n        \"res/SFX/footsteps/enemy/enemyfootstep\",\r\n        [1, 2, 3, 4, 5],\r\n        1.0,\r\n        4,\r\n      );\r\n\r\n      // Combat sounds\r\n      Sound.swingSounds = createHowlArray(\r\n        \"res/SFX/attacks/swing\",\r\n        [1, 2, 3, 4],\r\n        0.5,\r\n        6,\r\n      );\r\n      Sound.hitSounds = createHowlArray(\r\n        \"res/SFX/attacks/hurt\",\r\n        [1, 2, 3, 4],\r\n        0.5,\r\n        4,\r\n      );\r\n      Sound.hurtSounds = [createHowl(\"res/SFX/attacks/hit.mp3\", 0.3, false, 0)];\r\n      Sound.sliceSound = createHowlArray(\r\n        \"res/SFX/attacks/slice\",\r\n        [1, 2, 3],\r\n        0.5,\r\n        4,\r\n      );\r\n      Sound.shortSliceSound = createHowlArray(\r\n        \"res/SFX/attacks/sliceShort\",\r\n        [1, 2, 3],\r\n        0.5,\r\n        4,\r\n      );\r\n      Sound.parrySounds = createHowlArray(\r\n        \"res/SFX/attacks/parry\",\r\n        [1, 2],\r\n        0.5,\r\n        3,\r\n      );\r\n      Sound.gruntSounds = createHowlArray(\r\n        \"res/SFX/attacks/grunt\",\r\n        [1],\r\n        0.35,\r\n        1,\r\n      );\r\n\r\n      // Single sounds\r\n      Sound.enemySpawnSound = createHowl(\r\n        \"res/SFX/attacks/enemyspawn.mp3\",\r\n        0.7,\r\n        false,\r\n        3,\r\n      );\r\n      Sound.wooshSounds = createHowlArray(\r\n        \"res/SFX/attacks/woosh\",\r\n        [1, 2],\r\n        0.2,\r\n        3,\r\n      );\r\n\r\n      // Interaction sounds\r\n      Sound.chestSounds = createHowlArray(\r\n        \"res/SFX/chest/chest\",\r\n        [1, 2, 3],\r\n        0.5,\r\n        3,\r\n      );\r\n      Sound.coinPickupSounds = createHowlArray(\r\n        \"res/SFX/items/coins\",\r\n        [1, 2, 3, 4],\r\n        1.0,\r\n        5,\r\n      );\r\n      Sound.genericPickupSound = createHowl(\r\n        \"res/SFX/items/pickup.mp3\",\r\n        0.8,\r\n        false,\r\n        3,\r\n      );\r\n      Sound.keyPickupSound = createHowl(\r\n        \"res/SFX/items/keyPickup.mp3\",\r\n        1.0,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.backpackSound = createHowl(\r\n        \"res/SFX/items/backpack.mp3\",\r\n        0.75,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.smithSound = createHowl(\"res/SFX/items/smith.mp3\", 0.5, false, 2);\r\n      Sound.lockedSound = createHowl(\r\n        \"res/SFX/door/locked1.mp3\",\r\n        0.75,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.woodSound = createHowl(\r\n        \"res/SFX/objects/woodHit1.mp3\",\r\n        1.25,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.squishSound = createHowl(\r\n        \"res/SFX/attacks/squish1.mp3\",\r\n        0.75,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.crushSounds = createHowlArray(\r\n        \"res/SFX/attacks/crush\",\r\n        [1, 2],\r\n        0.4,\r\n        2,\r\n      );\r\n      // Mining sounds\r\n      Sound.miningSounds = createHowlArray(\r\n        \"res/SFX/resources/Pickaxe\",\r\n        [1, 2, 3, 4],\r\n        0.3,\r\n        3,\r\n      );\r\n      Sound.breakRockSound = createHowl(\r\n        \"res/SFX/resources/rockbreak.mp3\",\r\n        1.0,\r\n        false,\r\n        2,\r\n      );\r\n\r\n      // Door sounds\r\n      Sound.unlockSounds = createHowlArray(\"res/SFX/door/unlock\", [1], 0.5, 2);\r\n      Sound.doorOpenSounds = createHowlArray(\r\n        \"res/SFX/door/open\",\r\n        [1, 2],\r\n        0.5,\r\n        3,\r\n      );\r\n\r\n      // Object sounds\r\n      Sound.potSmashSounds = createHowlArray(\r\n        \"res/SFX/objects/potSmash\",\r\n        [1, 2, 3],\r\n        0.5,\r\n        3,\r\n      );\r\n      Sound.bushSounds = createHowlArray(\r\n        \"res/SFX/objects/plantHit\",\r\n        [1, 2],\r\n        0.75,\r\n        3,\r\n      );\r\n      Sound.pushSounds = createHowlArray(\r\n        \"res/SFX/pushing/push\",\r\n        [1, 2],\r\n        1.0,\r\n        3,\r\n      );\r\n      Sound.fishingCastSounds = createHowlArray(\r\n        \"res/SFX/fishing/cast\",\r\n        [1, 2],\r\n        0.5,\r\n        3,\r\n      );\r\n      Sound.fishingReelSound = createHowl(\r\n        \"res/SFX/fishing/catch.mp3\",\r\n        0.5,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.fishingCatchSounds = createHowlArray(\r\n        \"res/SFX/fishing/splash\",\r\n        [1, 2],\r\n        0.85,\r\n        3,\r\n      );\r\n      // Bomb sounds\r\n      Sound.bombSounds = createHowlArray(\r\n        \"res/SFX/attacks/explode\",\r\n        [1, 2],\r\n        0.7,\r\n        3,\r\n      );\r\n      Sound.fuseBurnSound = createHowl(\r\n        \"res/SFX/attacks/fuse.mp3\",\r\n        0.2,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.fuseLoopSound = createHowl(\r\n        \"res/SFX/attacks/fuseLoop.mp3\",\r\n        0.2,\r\n        true,\r\n        1,\r\n      );\r\n      Sound.fuseStartSound = createHowl(\r\n        \"res/SFX/attacks/fuseStart.mp3\",\r\n        0.2,\r\n        false,\r\n        2,\r\n      );\r\n\r\n      // Ambient sounds - critical for mobile\r\n      Sound.forestMusic = createHowl(\"res/music/forest1.mp3\", 0.25, true, 1);\r\n      Sound.caveMusic = createHowl(\"res/music/cave1.mp3\", 0.25, true, 1);\r\n      Sound.graveSound = createHowl(\r\n        \"res/SFX/attacks/skelespawn.mp3\",\r\n        1.0,\r\n        false,\r\n        2,\r\n      );\r\n      Sound.ambientSound = createHowl(\r\n        \"res/SFX/ambient/ambientDark2.mp3\",\r\n        0.3,\r\n        true,\r\n        1,\r\n      ); // Reduced volume\r\n      Sound.goreSound = createHowl(\r\n        \"res/SFX/misc Unused/gore2.mp3\",\r\n        0.5,\r\n        false,\r\n        2,\r\n      );\r\n\r\n      console.log(\"All sounds loaded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error loading sounds:\", error);\r\n    }\r\n  };\r\n\r\n  static playWithReverb(\r\n    sound: Howl,\r\n    priority: number = Sound.PRIORITY.INTERACTIONS,\r\n  ): number | null {\r\n    if (Sound.audioMuted) return null;\r\n\r\n    try {\r\n      // Simple volume-based priority system\r\n      if (\r\n        Sound.currentlyPlaying.size > 10 &&\r\n        priority < Sound.PRIORITY.COMBAT\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      let soundId: number | null = null;\r\n\r\n      // Always try to use reverb if available and not on mobile\r\n      if (ReverbEngine.initialized && !Sound.isMobile) {\r\n        soundId = ReverbEngine.applyReverb(sound);\r\n      } else {\r\n        soundId = sound.play();\r\n      }\r\n\r\n      if (soundId) {\r\n        Sound.currentlyPlaying.add(soundId);\r\n\r\n        // Clean up tracking\r\n        sound.once(\"end\", () => {\r\n          Sound.currentlyPlaying.delete(soundId);\r\n        });\r\n\r\n        // Fallback cleanup\r\n        setTimeout(() => {\r\n          Sound.currentlyPlaying.delete(soundId);\r\n        }, 5000);\r\n      }\r\n\r\n      return soundId;\r\n    } catch (error) {\r\n      console.error(\"Error playing sound:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static playerStoneFootstep = (environment: number) => {\r\n    if (Sound.audioMuted) return;\r\n    let sound = Sound.playerStoneFootsteps;\r\n    if (environment === 2) sound = Sound.playerGrassFootsteps;\r\n    if (environment === 1) sound = Sound.playerDirtFootsteps;\r\n\r\n    let f = Game.randTable(sound, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.FOOTSTEPS);\r\n  };\r\n\r\n  static enemyFootstep = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.enemyFootsteps, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.FOOTSTEPS);\r\n  };\r\n\r\n  static swing = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.swingSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static hit = (hard: boolean = false) => {\r\n    if (Sound.audioMuted) return;\r\n\r\n    let sounds = Sound.hitSounds.slice(hard ? 2 : 0, hard ? 3 : 2);\r\n\r\n    setTimeout(() => {\r\n      let f = Game.randTable(sounds, Random.rand);\r\n      this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n    }, 100);\r\n  };\r\n\r\n  static hurt = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.hurtSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.CRITICAL);\r\n  };\r\n\r\n  static enemySpawn = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.enemySpawnSound, Sound.PRIORITY.CRITICAL);\r\n  };\r\n\r\n  static chest = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.chestSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static potSmash = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.potSmashSounds, Random.rand);\r\n    this.delayPlay(\r\n      () => this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS),\r\n      100,\r\n    );\r\n  };\r\n\r\n  static pickupCoin = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.coinPickupSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static mine = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.miningSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static breakRock = () => {\r\n    if (Sound.audioMuted) return;\r\n    setTimeout(() => {\r\n      this.playWithReverb(Sound.breakRockSound, Sound.PRIORITY.INTERACTIONS);\r\n    }, 100);\r\n  };\r\n\r\n  static heal = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.healSound, Sound.PRIORITY.CRITICAL);\r\n  };\r\n\r\n  static genericPickup = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.genericPickupSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static keyPickup = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.keyPickupSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static push = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.pushSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static skeleSpawn = () => {\r\n    if (Sound.audioMuted) return;\r\n    // IMPORTANT: Original implementation set volume to 0.3 in this method\r\n    Sound.graveSound.volume(0.3);\r\n    this.playWithReverb(Sound.graveSound, Sound.PRIORITY.CRITICAL);\r\n  };\r\n\r\n  static unlock = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.unlockSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playCaveMusic = (index: number = 0) => {\r\n    if (Sound.audioMuted) return;\r\n\r\n    try {\r\n      // Stop any existing forest music\r\n      if (Sound.caveMusicId) {\r\n        Sound.caveMusic.stop(Sound.caveMusicId);\r\n      }\r\n\r\n      // Play new instance\r\n      Sound.caveMusicId = Sound.caveMusic.play();\r\n\r\n      // Handle mobile audio context\r\n      if (Sound.isMobile && !Sound.audioContextResumed) {\r\n        Sound.enableAudioForMobile();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error playing cave music:\", error);\r\n    }\r\n  };\r\n\r\n  static playForestMusic = (index: number = 0) => {\r\n    if (Sound.audioMuted) return;\r\n\r\n    try {\r\n      // Stop any existing forest music\r\n      if (Sound.forestMusicId) {\r\n        Sound.forestMusic.stop(Sound.forestMusicId);\r\n      }\r\n\r\n      // Play new instance\r\n      Sound.forestMusicId = Sound.forestMusic.play();\r\n\r\n      // Handle mobile audio context\r\n      if (Sound.isMobile && !Sound.audioContextResumed) {\r\n        Sound.enableAudioForMobile();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error playing forest music:\", error);\r\n    }\r\n  };\r\n\r\n  static doorOpen = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.doorOpenSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playAmbient = () => {\r\n    if (Sound.audioMuted) return;\r\n\r\n    try {\r\n      // Only play if not already playing\r\n      if (\r\n        !Sound.ambientSoundId ||\r\n        !Sound.ambientSound.playing(Sound.ambientSoundId)\r\n      ) {\r\n        Sound.ambientSoundId = Sound.ambientSound.play();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error playing ambient sound:\", error);\r\n    }\r\n  };\r\n\r\n  static stopAmbient = () => {\r\n    if (Sound.ambientSoundId) {\r\n      Sound.ambientSound.stop(Sound.ambientSoundId);\r\n      Sound.ambientSoundId = null;\r\n    }\r\n  };\r\n\r\n  static playFuse = () => {\r\n    if (Sound.audioMuted) return;\r\n\r\n    Sound.fuseStartSound.play();\r\n\r\n    Sound.fuseStartSound.once(\"end\", () => {\r\n      Sound.fuseLoopSound.play();\r\n    });\r\n  };\r\n\r\n  static stopFuse = () => {\r\n    Sound.fuseLoopSound.stop();\r\n    Sound.fuseStartSound.stop();\r\n  };\r\n\r\n  static playGore = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.goreSound, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static playBomb = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.bombSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.CRITICAL);\r\n  };\r\n\r\n  static playWarHammer = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.delayPlay(() => {\r\n      this.playWithReverb(Sound.hitSounds[2], Sound.PRIORITY.COMBAT);\r\n    }, 200);\r\n  };\r\n\r\n  static playMagic = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.magicSound, Sound.PRIORITY.COMBAT);\r\n    let f = Sound.wooshSounds[0];\r\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static playSlice = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.sliceSound, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static playShortSlice = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.shortSliceSound, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static playBackpack = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.backpackSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playSmith = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.smithSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playBush = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.bushSounds, Random.rand);\r\n    this.delayPlay(\r\n      () => this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS),\r\n      100,\r\n    );\r\n  };\r\n\r\n  static playParry = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.parrySounds, Random.rand);\r\n    this.delayPlay(() => this.playWithReverb(f, Sound.PRIORITY.CRITICAL), 100);\r\n  };\r\n\r\n  static playEat = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.eatSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playGrunt = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.gruntSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static playLocked = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.lockedSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playWood = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.delayPlay(() => {\r\n      this.playWithReverb(Sound.woodSound, Sound.PRIORITY.INTERACTIONS);\r\n    }, 150);\r\n  };\r\n\r\n  static playSquish = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.squishSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playFishingCast = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.fishingCastSounds, Random.rand);\r\n    this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playFishingReel = () => {\r\n    if (Sound.audioMuted) return;\r\n    this.playWithReverb(Sound.fishingReelSound, Sound.PRIORITY.INTERACTIONS);\r\n  };\r\n\r\n  static playFishingCatch = () => {\r\n    if (Sound.audioMuted) return;\r\n    let f = Game.randTable(Sound.fishingCatchSounds, Random.rand);\r\n    this.delayPlay(\r\n      () => this.playWithReverb(f, Sound.PRIORITY.INTERACTIONS),\r\n      100,\r\n    );\r\n  };\r\n\r\n  static playCrush = () => {\r\n    if (Sound.audioMuted) return;\r\n    let w = Sound.wooshSounds[1];\r\n    let f = Sound.crushSounds[1];\r\n    this.playWithReverb(w, Sound.PRIORITY.COMBAT);\r\n    this.delayPlay(() => {\r\n      this.playWithReverb(f, Sound.PRIORITY.COMBAT);\r\n    }, 200);\r\n    this.playWithReverb(w, Sound.PRIORITY.COMBAT);\r\n  };\r\n\r\n  static delayPlay = (method: () => void, delay: number) => {\r\n    setTimeout(method, delay);\r\n  };\r\n\r\n  static stopSound(sound: Howl) {\r\n    sound.stop();\r\n  }\r\n\r\n  static stopSoundWithReverb(sound: Howl) {\r\n    ReverbEngine.removeReverb(sound);\r\n    this.stopSound(sound);\r\n  }\r\n\r\n  static cleanup() {\r\n    Sound.currentlyPlaying.clear();\r\n    Howler.unload();\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Floor } from \"./floor\";\r\n\r\nexport class Bones extends Floor {\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      7,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room/room\";\r\nimport { Player } from \"../player/player\";\r\nimport { InsideLevelDoor } from \"./insideLevelDoor\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Enemy } from \"../entity/enemy/enemy\";\r\n\r\nexport class Button extends Tile {\r\n  // all are in grid units\r\n  w: number;\r\n  h: number;\r\n  pressed: boolean;\r\n  turnsSincePressed: number;\r\n  linkedDoor: InsideLevelDoor;\r\n\r\n  constructor(room: Room, x: number, y: number, linkedDoor: InsideLevelDoor) {\r\n    super(room, x, y);\r\n    this.w = 1;\r\n    this.h = 1;\r\n\r\n    this.pressed = false;\r\n    this.turnsSincePressed = 1;\r\n\r\n    this.linkedDoor = linkedDoor;\r\n  }\r\n\r\n  press = () => {\r\n    this.pressed = true;\r\n    this.linkedDoor.opened = true;\r\n  };\r\n\r\n  unpress = () => {\r\n    this.pressed = false;\r\n    this.linkedDoor.opened = false;\r\n  };\r\n\r\n  onCollide = (player: Player) => {\r\n    this.press();\r\n  };\r\n\r\n  onCollideEnemy = (enemy: Enemy) => {\r\n    this.press();\r\n  };\r\n\r\n  tickEnd = () => {\r\n    this.unpress();\r\n    for (const i in this.room.game.players) {\r\n      if (\r\n        this.room.game.players[i].x === this.x &&\r\n        this.room.game.players[i].y === this.y\r\n      )\r\n        this.press();\r\n    }\r\n    for (const e of this.room.entities) {\r\n      if (e.x === this.x && e.y === this.y) this.press();\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.pressed)\r\n      Game.drawTile(\r\n        18,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        17,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n}\r\n","import { Room } from \"../room/room\";\r\nimport { Game } from \"../game\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class Chasm extends Tile {\r\n  tileX: number;\r\n  tileY: number;\r\n  topEdge: boolean;\r\n  private _buffer: HTMLCanvasElement;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    leftEdge: boolean,\r\n    rightEdge: boolean,\r\n    topEdge: boolean,\r\n    bottomEdge: boolean,\r\n  ) {\r\n    super(room, x, y);\r\n\r\n    this.tileX = this.skin === 1 ? 24 : 20;\r\n    this.tileY = 1;\r\n\r\n    if (leftEdge) this.tileX--;\r\n    else if (rightEdge) this.tileX++;\r\n    if (topEdge) this.tileY--;\r\n    else if (bottomEdge) this.tileY++;\r\n\r\n    this.topEdge = topEdge;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    const ts = GameConstants.TILESIZE;\r\n    const tilesHigh = this.topEdge ? 2 : 1;\r\n\r\n    // Prepare/reuse offscreen buffer with correct size\r\n    if (\r\n      !this._buffer ||\r\n      this._buffer.width !== ts ||\r\n      this._buffer.height !== tilesHigh * ts\r\n    ) {\r\n      this._buffer = document.createElement(\"canvas\");\r\n      this._buffer.width = ts;\r\n      this._buffer.height = tilesHigh * ts;\r\n    }\r\n\r\n    const offCtx = this._buffer.getContext(\"2d\");\r\n    offCtx.clearRect(0, 0, this._buffer.width, this._buffer.height);\r\n\r\n    // Temporarily redirect Game.ctx to offscreen to reuse Game.drawTile\r\n    const mainCtx = Game.ctx;\r\n    const prevComp =\r\n      offCtx.globalCompositeOperation as GlobalCompositeOperation;\r\n    (Game as any).ctx = offCtx;\r\n\r\n    // 1) Mask\r\n    offCtx.globalCompositeOperation = \"source-over\";\r\n    Game.drawTile(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    // 2) Fill clipped by mask\r\n    offCtx.globalCompositeOperation = \"source-in\";\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    // 3) Background behind both (only for top edge variant which spans 2 tiles)\r\n    if (this.topEdge) {\r\n      offCtx.globalCompositeOperation = \"destination-over\";\r\n      Game.drawTile(\r\n        22,\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        0,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n\r\n    // Restore Game.ctx\r\n    (Game as any).ctx = mainCtx;\r\n    offCtx.globalCompositeOperation = prevComp;\r\n\r\n    // Blit to main canvas at world position\r\n    Game.ctx.save();\r\n    Game.ctx.globalCompositeOperation = \"source-over\";\r\n    Game.ctx.drawImage(this._buffer, this.x * ts, this.y * ts);\r\n    Game.ctx.restore();\r\n  };\r\n}\r\n","import { Room } from \"../../room/room\";\r\nimport { Player } from \"../../player/player\";\r\nimport { Entity } from \"../../entity/entity\";\r\nimport { Drawable } from \"../../drawable/drawable\";\r\nimport { GameConstants } from \"../../game/gameConstants\";\r\nimport { Game } from \"../../game\";\r\nimport { SkinType } from \"../../tile/tile\";\r\n\r\nexport abstract class Decoration extends Drawable {\r\n  x: number;\r\n  y: number;\r\n  room: Room;\r\n  skin: SkinType;\r\n  isDoor: boolean;\r\n  opacity: number;\r\n  applySkin: boolean;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super();\r\n    this.skin = room.skin;\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.isDoor = false;\r\n    this.opacity = 1;\r\n    this.applySkin = false;\r\n  }\r\n\r\n  shadeAmount = (offsetX: number = 0, offsetY: number = 0) => {\r\n    if (GameConstants.SMOOTH_LIGHTING) return 0;\r\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return false;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return false;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return false;\r\n  };\r\n  onCollide = (player: Player) => {};\r\n  onCollideEnemy = (enemy: Entity) => {};\r\n  tick = () => {};\r\n  tickEnd = () => {};\r\n\r\n  draw = (delta: number) => {};\r\n  drawUnderPlayer = (delta: number) => {\r\n    let tileY = 1;\r\n    if (this.applySkin) tileY = this.skin;\r\n\r\n    Game.drawTile(\r\n      1,\r\n      tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n  drawAbovePlayer = (delta: number) => {};\r\n  drawAboveShading = (delta: number) => {};\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Direction, Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\nimport { EntityType } from \"../entity/entity\";\r\nimport { Key } from \"../item/key\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { GameplaySettings } from \"../game/gameplaySettings\";\r\nimport { Passageway } from \"./passageway\";\r\n\r\nexport enum DoorDir {\r\n  North = \"North\",\r\n  East = \"East\",\r\n  South = \"South\",\r\n  West = \"West\",\r\n}\r\n\r\nexport enum DoorType {\r\n  DOOR,\r\n  LOCKEDDOOR,\r\n  GUARDEDDOOR,\r\n  TUNNELDOOR,\r\n}\r\n\r\nexport class Door extends Passageway {\r\n  globalId: string;\r\n  linkedDoor: Door;\r\n  opened: boolean;\r\n  doorDir: Direction;\r\n  guarded: boolean;\r\n  type: DoorType;\r\n  locked: boolean;\r\n  iconTileX: number;\r\n  iconXOffset: number;\r\n  iconYOffset: number;\r\n  unlocking: boolean;\r\n  iconAlpha: number;\r\n  tileXOffset: number;\r\n  tileX: number;\r\n  drawTopOf: boolean;\r\n  alpha: number;\r\n  startRoom: boolean;\r\n\r\n  enteredFrom:\r\n    | Direction.LEFT\r\n    | Direction.RIGHT\r\n    | Direction.DOWN\r\n    | Direction.UP\r\n    | null;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    doorDir: Direction,\r\n    doorType: DoorType,\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.globalId = IdGenerator.generate(\"D\");\r\n    this.opened = false;\r\n    this.doorDir = doorDir;\r\n    this.locked = false;\r\n    this.isDoor = true;\r\n    this.type = doorType;\r\n    this.iconTileX = 2;\r\n    this.iconXOffset = 0;\r\n    this.iconYOffset = 0;\r\n    this.unlocking = false;\r\n    this.iconAlpha = 1;\r\n    this.tileXOffset = 0;\r\n    this.tileX = 2;\r\n    this.drawTopOf = true;\r\n    let lightOffsetX = 0;\r\n    let lightOffsetY = 0;\r\n    this.alpha = 1;\r\n    this.enteredFrom = null;\r\n    switch (this.doorDir) {\r\n      case Direction.UP:\r\n        lightOffsetY = -0.5;\r\n      case Direction.DOWN:\r\n        lightOffsetY = 0.5;\r\n      case Direction.LEFT:\r\n        lightOffsetX = -0.5;\r\n      case Direction.RIGHT:\r\n        lightOffsetX = 0.5;\r\n    }\r\n    this.lightSource = new LightSource(x + 0.5, y + 0.5, 0, [0, 0, 0], 9);\r\n    this.room.lightSources.push(this.lightSource);\r\n\r\n    switch (this.type) {\r\n      case DoorType.GUARDEDDOOR:\r\n        if (GameplaySettings.NO_ENEMIES) break;\r\n        this.guard();\r\n        break;\r\n      case DoorType.LOCKEDDOOR:\r\n        this.lock();\r\n        break;\r\n      case DoorType.DOOR:\r\n        this.removeLock();\r\n        break;\r\n      case DoorType.TUNNELDOOR:\r\n        // this.tileX = ? find the right tile for this\r\n        this.locked = true;\r\n        this.iconTileX = 10;\r\n        this.iconXOffset = 1 / 32;\r\n        this.tileXOffset = 12;\r\n        this.drawTopOf = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  shadeAmount = (\r\n    offsetX: number = 0,\r\n    offsetY: number = 0,\r\n    disable: boolean = true,\r\n  ) => {\r\n    if (GameConstants.SMOOTH_LIGHTING && disable) return 0;\r\n    const vis = this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n    if (this.opened) return vis / 2;\r\n    else return vis;\r\n  };\r\n\r\n  openTunnelXOffset = () => {\r\n    if (this.type === DoorType.TUNNELDOOR) {\r\n      if (!this.opened) {\r\n        return 0;\r\n      } else {\r\n        return -3;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  guard = () => {\r\n    this.type = DoorType.GUARDEDDOOR;\r\n    this.locked = true;\r\n    this.iconTileX = 9;\r\n    this.iconXOffset = 1 / 32;\r\n  };\r\n\r\n  lock = () => {\r\n    this.type = DoorType.LOCKEDDOOR;\r\n    this.locked = true;\r\n    this.iconTileX = 10;\r\n    this.iconXOffset = 1 / 32;\r\n  };\r\n\r\n  removeLock = () => {\r\n    if (this.type !== DoorType.TUNNELDOOR) this.type = DoorType.DOOR;\r\n    this.locked = false;\r\n  };\r\n\r\n  removeLockIcon = () => {\r\n    this.iconYOffset = 0;\r\n    this.unlocking = false;\r\n    this.iconTileX = 2;\r\n    this.iconXOffset = 0;\r\n    this.iconAlpha = 1;\r\n  };\r\n\r\n  canUnlock = (player: Player) => {\r\n    if (this.type === DoorType.LOCKEDDOOR) {\r\n      let k = player.inventory.hasItem(Key);\r\n      if (k !== null) {\r\n        if (k.doorID === this.lockable.keyID) {\r\n          this.game.pushMessage(\"You use the key to unlock the door.\");\r\n\r\n          return true;\r\n        } else {\r\n          this.game.pushMessage(\"The key doesn't fit the lock.\");\r\n          return false;\r\n        }\r\n      } else\r\n        this.game.pushMessage(\"The door is locked tightly and won't budge.\");\r\n      return false;\r\n    }\r\n\r\n    if (this.type === DoorType.GUARDEDDOOR) {\r\n      this.room.checkForNoEnemies();\r\n      this.game.pushMessage(\r\n        \"There are still remaining foes guarding this door...\",\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.type === DoorType.TUNNELDOOR &&\r\n      (!this.opened || !this.linkedDoor.opened)\r\n    ) {\r\n      if (\r\n        this.linkedDoor === this.room.level.exitRoom.tunnelDoor ||\r\n        this.startRoom\r\n      ) {\r\n        this.game.pushMessage(\"The door refuses to budge from this side.\");\r\n        return false;\r\n      } else {\r\n        this.game.pushMessage(\r\n          \"You clear the debris, revealing a narrow tunnel.\",\r\n        );\r\n        return true;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  unlock = (player: Player) => {\r\n    if (this.type === DoorType.LOCKEDDOOR) {\r\n      let k = player.inventory.hasItem(Key);\r\n      if (k !== null) {\r\n        // remove key\r\n        player.inventory.removeItem(k);\r\n        Sound.unlock();\r\n        this.removeLock();\r\n        this.unlocking = true;\r\n      }\r\n    } else if (this.type === DoorType.TUNNELDOOR) {\r\n      this.locked = false;\r\n      this.unlocking = true;\r\n    }\r\n  };\r\n\r\n  unGuard = () => {\r\n    if (this.type === DoorType.GUARDEDDOOR) {\r\n      this.removeLock();\r\n      Sound.unlock();\r\n\r\n      this.game.tutorialActive = false;\r\n    }\r\n    setTimeout(() => {\r\n      this.removeLockIcon();\r\n    }, 1000);\r\n  };\r\n\r\n  link = (other: Door) => {\r\n    this.linkedDoor = other;\r\n  };\r\n\r\n  // Returns true if this door's room would be drawn before its linked door's room\r\n  // based on Game.drawRooms sorting (ascending by roomY + height)\r\n  isDrawnFirst = (): boolean => {\r\n    if (!this.linkedDoor || !this.linkedDoor.room) return false;\r\n    try {\r\n      const currentPathId = (this.game as any).currentPathId;\r\n      const roomsInPath = this.game.rooms.filter(\r\n        (r) => (r as any).pathId === currentPathId,\r\n      );\r\n      const sorted = roomsInPath\r\n        .slice()\r\n        .sort((a: any, b: any) => a.roomY + a.height - (b.roomY + b.height));\r\n      const thisIdx = sorted.indexOf(this.room as any);\r\n      const otherIdx = sorted.indexOf(this.linkedDoor.room as any);\r\n      if (thisIdx === -1 || otherIdx === -1) return false;\r\n      return thisIdx < otherIdx;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    if (this.locked) {\r\n      return true;\r\n    } else false;\r\n  };\r\n\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  onCollide = (player: Player) => {\r\n    if (!this.opened) {\r\n      Sound.doorOpen();\r\n      if (this.doorDir === Direction.LEFT) {\r\n        this.enteredFrom = Direction.LEFT;\r\n        this.linkedDoor.enteredFrom = Direction.LEFT;\r\n      }\r\n      if (this.doorDir === Direction.RIGHT) {\r\n        this.enteredFrom = Direction.RIGHT;\r\n        this.linkedDoor.enteredFrom = Direction.RIGHT;\r\n      }\r\n    }\r\n    this.opened = true;\r\n\r\n    this.linkedDoor.opened = true;\r\n\r\n    if (this.doorDir === Direction.UP || this.doorDir === Direction.DOWN) {\r\n      this.game.changeLevelThroughDoor(player, this.linkedDoor);\r\n    } else\r\n      this.game.changeLevelThroughDoor(\r\n        player,\r\n        this.linkedDoor,\r\n        this.linkedDoor.room.roomX - this.room.roomX > 0 ? 1 : -1,\r\n      );\r\n    if (this.type === DoorType.TUNNELDOOR && !this.startRoom) {\r\n      this.game.pushMessage(\"The tunnel leads you back to the start.\");\r\n    }\r\n    this.linkedDoor.removeLock();\r\n    this.linkedDoor.removeLockIcon();\r\n    this.removeLockIcon();\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.ctx.save();\r\n\r\n    if (this.doorDir === Direction.DOWN) {\r\n      Game.drawTile(\r\n        1,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n\r\n    if (this.doorDir === Direction.UP) {\r\n      //if top door\r\n      if (this.opened)\r\n        Game.drawTile(\r\n          6 + this.tileXOffset + this.openTunnelXOffset(),\r\n          this.skin,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(0, 1),\r\n        );\r\n      else\r\n        Game.drawTile(\r\n          3 + this.tileXOffset + this.openTunnelXOffset(),\r\n          this.skin,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(),\r\n        );\r\n    }\r\n\r\n    if (\r\n      this.doorDir !== Direction.UP &&\r\n      (this.isDrawnFirst() || !this.opened)\r\n      //!(this.opened && this.doorDir === Direction.RIGHT)\r\n    )\r\n      //if not top door\r\n      Game.drawTile(\r\n        1,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    //the following used to be in the drawaboveplayer function\r\n    if (this.doorDir === Direction.UP) {\r\n      //if top door\r\n      if (!this.drawTopOf) return;\r\n      if (!this.opened)\r\n        Game.drawTile(\r\n          13,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - 1,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(0, 1, false),\r\n        );\r\n      else\r\n        Game.drawTile(\r\n          14,\r\n          0,\r\n          1,\r\n          1,\r\n          this.x,\r\n          this.y - 1,\r\n          1,\r\n          1,\r\n          this.room.shadeColor,\r\n          this.shadeAmount(0, 1, false),\r\n        );\r\n    }\r\n    Game.ctx.restore();\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {};\r\n\r\n  drawAboveShading = (delta: number) => {\r\n    //if (this.type === DoorType.TUNNELDOOR) return;\r\n    this.updateFrame(delta);\r\n    Game.ctx.globalAlpha = this.iconAlpha;\r\n    let multiplier = 0.125;\r\n    if (this.unlocking === true) {\r\n      this.iconAlpha *= 0.92 ** delta;\r\n      this.iconYOffset -= 0.035 * delta;\r\n      multiplier = 0;\r\n      if (this.iconAlpha <= 0.01) {\r\n        this.removeLockIcon();\r\n      }\r\n    }\r\n    if (this.doorDir === Direction.UP) {\r\n      //if top door\r\n      Game.drawFX(\r\n        this.iconTileX,\r\n        2,\r\n        1,\r\n        1,\r\n        this.x + this.iconXOffset,\r\n        this.y -\r\n          1.25 +\r\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\r\n          this.iconYOffset,\r\n        1,\r\n        1,\r\n      );\r\n    } else {\r\n      if (this.doorDir === Direction.LEFT || this.doorDir === Direction.RIGHT)\r\n        this.iconYOffset = -0.5;\r\n      Game.drawFX(\r\n        this.iconTileX,\r\n        2,\r\n        1,\r\n        1,\r\n        this.x + this.iconXOffset,\r\n        this.y -\r\n          1.25 +\r\n          multiplier * Math.sin((this.frame * Math.PI) / 50) +\r\n          this.iconYOffset,\r\n        1,\r\n        1,\r\n      ); //if not top door\r\n    }\r\n    Game.ctx.globalAlpha = 1;\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { ChatMessage, Game } from \"../game\";\r\nimport { Room, RoomType } from \"../room/room\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\nimport { UpLadder } from \"./upLadder\";\r\nimport { EVENTS } from \"../event/events\";\r\nimport { EventEmitter } from \"../event/eventEmitter\";\r\nimport { globalEventBus } from \"../event/eventBus\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { EnvType } from \"../constants/environmentTypes\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { Lockable, LockType } from \"./lockable\";\r\nimport { Key } from \"../item/key\";\r\nimport { Passageway } from \"./passageway\";\r\nimport { SidePathManager, SidePathOptions } from \"../level/sidePathManager\";\r\n\r\nexport class DownLadder extends Passageway {\r\n  linkedRoom: Room;\r\n  isSidePath = false;\r\n  depth: number;\r\n  environment: EnvType;\r\n  lockable: Lockable;\r\n  opts?: SidePathOptions;\r\n  entryUpLadderPos?: { x: number; y: number };\r\n  private sidePathManager: SidePathManager;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    isSidePath: boolean = false,\r\n    environment: EnvType = EnvType.DUNGEON,\r\n    lockType: LockType = LockType.NONE,\r\n    opts?: SidePathOptions,\r\n    lockStateOverride?: { lockType: LockType; keyID?: number },\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.linkedRoom = null;\r\n    this.depth = room.depth;\r\n    this.isSidePath = isSidePath;\r\n    this.environment = environment;\r\n    this.opts = opts;\r\n    this.sidePathManager = new SidePathManager(game);\r\n\r\n    // Determine effective lock based on save override, generator intent, or explicit param\r\n    const effectiveLockType = lockStateOverride\r\n      ? lockStateOverride.lockType\r\n      : isSidePath && !GameConstants.DEVELOPER_MODE\r\n        ? LockType.LOCKED\r\n        : lockType;\r\n\r\n    // Initialize lockable using effective state (include saved keyID if provided)\r\n    this.lockable = new Lockable(game, {\r\n      lockType: effectiveLockType,\r\n      keyID: lockStateOverride?.keyID,\r\n      isTopDoor: false,\r\n    });\r\n\r\n    this.addLightSource();\r\n  }\r\n\r\n  getName = () => {\r\n    return this.isSidePath ? \"rope down\" : \"staircase down\";\r\n  };\r\n\r\n  generate = async () => {\r\n    if (!this.linkedRoom) {\r\n      await this.sidePathManager.generateFor(this);\r\n    } else {\r\n      console.log(\"LinkedRoom already exists:\", this.linkedRoom);\r\n    }\r\n  };\r\n\r\n  // Linking logic is handled by SidePathManager\r\n\r\n  onCollide = (player: Player) => {\r\n    let allPlayersHere = true;\r\n    for (const i in this.game.players) {\r\n      const pl = this.game.players[i];\r\n      const plRoom = (pl as any).getRoom\r\n        ? (pl as any).getRoom()\r\n        : this.game.levels[pl.depth].rooms[pl.levelID];\r\n      if (plRoom !== this.room || pl.x !== this.x || pl.y !== this.y) {\r\n        allPlayersHere = false;\r\n      }\r\n    }\r\n    if (allPlayersHere) {\r\n      globalEventBus.emit(EVENTS.LEVEL_GENERATION_STARTED, {});\r\n      this.generate().then(() => {\r\n        globalEventBus.emit(EVENTS.LEVEL_GENERATION_COMPLETED, {});\r\n        // Switch active path to this ladder's sidepath before transitioning\r\n        this.sidePathManager.switchToPathBeforeTransition(this);\r\n        for (const i in this.game.players) {\r\n          this.game.changeLevelThroughLadder(this.game.players[i], this);\r\n        }\r\n      });\r\n    } else {\r\n      if (player === this.game.players[this.game.localPlayerID])\r\n        this.game.pushMessage(\"all players must be present\");\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let xx = 4;\r\n    if (this.isSidePath) {\r\n      xx = 16;\r\n      if (this.lockable.isLocked()) xx = 17;\r\n    }\r\n    //if (this.environment === EnvType.FOREST) xx = 16;\r\n\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    Game.drawTile(\r\n      xx,\r\n      0, //this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawAboveShading = (delta: number) => {\r\n    // Update lockable animation\r\n    this.lockable.update(delta);\r\n\r\n    // Draw lock icon\r\n    this.lockable.drawIcon(this.x, this.y, delta);\r\n\r\n    // Update frame using parent method\r\n    this.updateFrame(delta);\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {};\r\n\r\n  isLocked(): boolean {\r\n    return this.lockable.isLocked();\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\n\r\nexport class Floor extends Tile {\r\n  // all are in grid units\r\n  variation: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.variation = 1;\r\n    if (this.skin == SkinType.DUNGEON)\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n    if (this.skin == SkinType.CAVE)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Random.rand);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n    if (this.skin == SkinType.FOREST)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Random.rand);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n    if (this.skin == SkinType.DESERT)\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n    if (this.skin == SkinType.MAGMA_CAVE) {\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n      if (\r\n        this.variation === 8 ||\r\n        this.variation === 9 ||\r\n        this.variation === 10\r\n      ) {\r\n        this.hasBloom = true;\r\n        this.bloomAlpha = 1;\r\n        this.bloomColor = \"#641900\";\r\n      }\r\n    }\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      this.variation,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\n\r\nexport class InsideLevelDoor extends Tile {\r\n  game: Game;\r\n  opened: boolean;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n    this.opened = false;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return !this.opened;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.opened)\r\n      Game.drawTile(\r\n        15,\r\n        1,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        3,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {\r\n    if (!this.opened)\r\n      Game.drawTile(\r\n        13,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    else\r\n      Game.drawTile(\r\n        14,\r\n        0,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Key } from \"../item/key\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Door } from \"./door\";\r\nimport { DownLadder } from \"./downLadder\";\r\nimport { UpLadder } from \"./upLadder\";\r\nimport { Random } from \"../utility/random\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\n\r\nexport enum LockType {\r\n  NONE = 0,\r\n  LOCKED = 1,\r\n  GUARDED = 2,\r\n  TUNNEL = 3,\r\n}\r\n\r\nexport interface LockableConfig {\r\n  lockType: LockType;\r\n  keyID?: number;\r\n  iconTileX?: number;\r\n  iconXOffset?: number;\r\n  isTopDoor?: boolean;\r\n}\r\n\r\nexport class Lockable {\r\n  private locked: boolean = false;\r\n  private unlocking: boolean = false;\r\n  private iconAlpha: number = 1;\r\n  private iconYOffset: number = 0;\r\n  private frame: number = 0;\r\n  private lockType: LockType;\r\n  keyID: number = 0;\r\n  private iconTileX: number;\r\n  private iconXOffset: number;\r\n  private isTopDoor: boolean;\r\n  private game: Game;\r\n\r\n  constructor(game: Game, config: LockableConfig) {\r\n    this.game = game;\r\n    this.lockType = config.lockType;\r\n    this.keyID = config.keyID || 0;\r\n    this.iconTileX = config.iconTileX || 2;\r\n    this.iconXOffset = config.iconXOffset || 0;\r\n    this.isTopDoor = config.isTopDoor || false;\r\n\r\n    this.initializeLockState();\r\n  }\r\n\r\n  private initializeLockState() {\r\n    switch (this.lockType) {\r\n      case LockType.LOCKED:\r\n        this.lock();\r\n        break;\r\n      case LockType.GUARDED:\r\n        this.guard();\r\n        break;\r\n      case LockType.TUNNEL:\r\n        this.lock();\r\n        this.iconTileX = 10;\r\n        this.iconXOffset = 1 / 32;\r\n        break;\r\n      case LockType.NONE:\r\n        this.removeLock();\r\n        break;\r\n    }\r\n  }\r\n\r\n  isLocked(): boolean {\r\n    return this.locked;\r\n  }\r\n\r\n  isUnlocking(): boolean {\r\n    return this.unlocking;\r\n  }\r\n\r\n  lock() {\r\n    this.locked = true;\r\n    this.iconTileX = 10;\r\n    this.iconXOffset = 1 / 32;\r\n  }\r\n\r\n  guard() {\r\n    this.lockType = LockType.GUARDED;\r\n    this.locked = true;\r\n    this.iconTileX = 9;\r\n    this.iconXOffset = 1 / 32;\r\n  }\r\n\r\n  removeLock() {\r\n    this.lockType = LockType.NONE;\r\n    this.locked = false;\r\n  }\r\n\r\n  removeLockIcon() {\r\n    this.iconYOffset = 0;\r\n    this.unlocking = false;\r\n    this.iconTileX = 2;\r\n    this.iconXOffset = 0;\r\n    this.iconAlpha = 1;\r\n  }\r\n\r\n  canUnlock(player: Player): boolean {\r\n    if (GameConstants.DEVELOPER_MODE) return true;\r\n    if (this.lockType === LockType.LOCKED) {\r\n      const key = this.hasKeyWithID(this.keyID, player);\r\n      console.log(this.keyID);\r\n      if (key !== null) {\r\n        this.game.pushMessage(\"You use the key to unlock.\");\r\n        console.log(\"key.doorID\", key.doorID, \"lock.keyID\", this.keyID);\r\n        return true;\r\n      }\r\n\r\n      // If no matching key, check if player has any key at all\r\n      const hasAnyKey = player.inventory.hasItem(Key);\r\n      if (hasAnyKey) {\r\n        this.game.pushMessage(\"The key doesn't fit the lock.\");\r\n      } else {\r\n        this.game.pushMessage(\"It's locked tightly and won't budge.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (this.lockType === LockType.GUARDED) {\r\n      // Check if room has no enemies - access through game.room\r\n      const hasEnemies = this.game.room.entities.some(\r\n        (entity) => entity.constructor.name.includes(\"Enemy\") && !entity.dead,\r\n      );\r\n      if (hasEnemies) {\r\n        this.game.pushMessage(\r\n          \"There are still remaining foes guarding this...\",\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  unlock(player: Player) {\r\n    if (this.lockType === LockType.LOCKED) {\r\n      const key = this.hasKeyWithID(this.keyID, player);\r\n      if (key !== null || GameConstants.DEVELOPER_MODE) {\r\n        player.inventory.removeItem(key);\r\n        Sound.unlock();\r\n        this.removeLock();\r\n        this.unlocking = true;\r\n      }\r\n    } else if (this.lockType === LockType.TUNNEL) {\r\n      this.locked = false;\r\n      this.unlocking = true;\r\n    }\r\n  }\r\n\r\n  hasKeyWithID(keyID: number, player: Player) {\r\n    const inventory = player.inventory;\r\n    for (const item of inventory.items) {\r\n      if (item instanceof Key) {\r\n        if (item.doorID === keyID) {\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  unGuard() {\r\n    if (this.lockType === LockType.GUARDED) {\r\n      this.removeLock();\r\n      Sound.unlock();\r\n      this.game.tutorialActive = false;\r\n    }\r\n    setTimeout(() => {\r\n      this.removeLockIcon();\r\n    }, 1000);\r\n  }\r\n\r\n  update(delta: number) {\r\n    if (this.frame > 100) this.frame = 0;\r\n    this.frame += 1 * delta;\r\n  }\r\n\r\n  drawIcon(x: number, y: number, delta: number) {\r\n    Game.ctx.globalAlpha = this.iconAlpha;\r\n\r\n    let multiplier = 0.125;\r\n    if (this.unlocking) {\r\n      this.iconAlpha *= 0.92 ** delta;\r\n      this.iconYOffset -= 0.035 * delta;\r\n      multiplier = 0;\r\n      if (this.iconAlpha <= 0.01) {\r\n        this.removeLockIcon();\r\n      }\r\n    }\r\n\r\n    const iconY = this.isTopDoor ? y - 1.25 : y - 1.25;\r\n\r\n    // Only draw the arrow if not unlocking and lockType is NONE\r\n    if (this.lockType === LockType.NONE && !this.unlocking) {\r\n      Game.drawFX(\r\n        2,\r\n        2,\r\n        1,\r\n        1,\r\n        x,\r\n        y - 1.25 + multiplier * Math.sin((this.frame * Math.PI) / 50),\r\n        1,\r\n        1,\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Draw the lock icon (even when unlocking, to show the fade animation)\r\n    Game.drawFX(\r\n      this.iconTileX,\r\n      2,\r\n      1,\r\n      1,\r\n      x + this.iconXOffset,\r\n      iconY +\r\n        multiplier * Math.sin((this.frame * Math.PI) / 50) +\r\n        this.iconYOffset,\r\n      1,\r\n      1,\r\n    );\r\n\r\n    Game.ctx.globalAlpha = 1;\r\n  }\r\n\r\n  setKey(key: Key) {\r\n    this.keyID = Lockable.generateID();\r\n    key.doorID = this.keyID;\r\n  }\r\n\r\n  static generateID() {\r\n    return Math.floor(Random.rand() * 1000000);\r\n  }\r\n}\r\n","import { Room } from \"../room/room\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\nimport { FishingSpot } from \"../entity/object/fishingSpot\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\n\r\nexport class MagmaPool extends Tile {\r\n  tileX: number;\r\n  tileY: number;\r\n  topEdge: boolean;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    leftEdge: boolean,\r\n    rightEdge: boolean,\r\n    topEdge: boolean,\r\n    bottomEdge: boolean,\r\n  ) {\r\n    super(room, x, y);\r\n\r\n    this.tileX = 24;\r\n    this.tileY = 4;\r\n\r\n    if (leftEdge) this.tileX--;\r\n    else if (rightEdge) this.tileX++;\r\n    if (topEdge) this.tileY--;\r\n    else if (bottomEdge) this.tileY++;\r\n\r\n    this.topEdge = topEdge;\r\n    const lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      0.5,\r\n      [200, 50, 0],\r\n      3,\r\n    );\r\n    this.room.lightSources.push(lightSource);\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#641900\";\r\n    this.bloomAlpha = 1;\r\n  }\r\n\r\n  interact = (): void => {\r\n    this.room.game.pushMessage(\"You jump into the pool.\");\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.topEdge)\r\n      Game.drawTile(\r\n        22,\r\n        3,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    Game.drawTile(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\nimport { Game } from \"../game\";\nimport { Room } from \"../room/room\";\nimport { Tile } from \"./tile\";\nimport { LightSource } from \"../lighting/lightSource\";\nimport { EnvType } from \"../constants/environmentTypes\";\nimport { Lockable } from \"./lockable\";\n\nexport abstract class Passageway extends Tile {\n  game: Game;\n  frame: number;\n  keyID: number;\n  lightSource?: LightSource;\n  environment: EnvType;\n  lockable: Lockable;\n  constructor(room: Room, game: Game, x: number, y: number) {\n    super(room, x, y);\n    this.game = game;\n    this.frame = 0;\n    this.keyID = 0;\n  }\n\n  // Common frame animation logic\n  protected updateFrame(delta: number): void {\n    if (this.frame > 100) this.frame = 0;\n    this.frame += 1 * delta;\n  }\n\n  // Common floating animation calculation\n  protected getFloatingOffset(): number {\n    return 0.125 * Math.sin((this.frame * Math.PI) / 50);\n  }\n\n  addLightSource = () => {\n    if (this.environment === EnvType.FOREST && !this.lockable.isLocked()) {\n      this.lightSource = new LightSource(\n        this.x + 0.5,\n        this.y + 0.5,\n        6,\n        [0, 100, 100],\n      );\n      this.room.lightSources.push(this.lightSource);\n    }\n  };\n}\n","import { Room } from \"../room/room\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\nimport { FishingSpot } from \"../entity/object/fishingSpot\";\r\n\r\nexport class Pool extends Tile {\r\n  tileX: number;\r\n  tileY: number;\r\n  topEdge: boolean;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    leftEdge: boolean,\r\n    rightEdge: boolean,\r\n    topEdge: boolean,\r\n    bottomEdge: boolean,\r\n  ) {\r\n    super(room, x, y);\r\n\r\n    this.tileX = this.skin === 1 ? 24 : 20;\r\n    this.tileY = 4;\r\n\r\n    if (leftEdge) this.tileX--;\r\n    else if (rightEdge) this.tileX++;\r\n    if (topEdge) this.tileY--;\r\n    else if (bottomEdge) this.tileY++;\r\n\r\n    this.topEdge = topEdge;\r\n    if (rightEdge || leftEdge || topEdge || bottomEdge) {\r\n      this.room.entities.push(\r\n        new FishingSpot(this.room, this.room.game, this.x, this.y),\r\n      );\r\n    }\r\n  }\r\n\r\n  interact = (): void => {\r\n    this.room.game.pushMessage(\"You jump into the pool.\");\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (this.topEdge)\r\n      Game.drawTile(\r\n        22,\r\n        3,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    Game.drawTile(\r\n      this.tileX,\r\n      this.tileY,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile, SkinType } from \"./tile\";\r\nimport { Room } from \"../room/room\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class SpawnFloor extends Tile {\r\n  // all are in grid units\r\n  variation: number;\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.variation = 1;\r\n    if (this.skin == SkinType.DUNGEON)\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n    if (this.skin == SkinType.CAVE)\r\n      //this.variation = Game.randTable([1, 1, 1, 1, 8, 9, 10, 12], Random.rand);\r\n      this.variation = Game.randTable(\r\n        [1, 1, 1, 1, 1, 1, 8, 8, 8, 9, 10, 10, 10, 10, 10, 12],\r\n        Random.rand,\r\n      );\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      this.variation,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class Spike extends Tile {\r\n  onCollide = (player: Player) => {\r\n    player.hurt(1, \"spike\");\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      11,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Tile } from \"./tile\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Crate } from \"../entity/object/crate\";\r\nimport { Barrel } from \"../entity/object/barrel\";\r\nimport { HitWarning } from \"../drawable/hitWarning\";\r\n\r\nexport class SpikeTrap extends Tile {\r\n  on: boolean;\r\n  tickCount: number;\r\n  frame: number;\r\n  t: number;\r\n\r\n  constructor(room: Room, x: number, y: number, tickCount?: number) {\r\n    super(room, x, y);\r\n    if (tickCount) this.tickCount = tickCount;\r\n    else this.tickCount = 0;\r\n    this.on = false;\r\n    this.frame = 0;\r\n    this.t = 0;\r\n    this.name = \"spike trap\";\r\n  }\r\n\r\n  tick = () => {\r\n    this.tickCount++;\r\n    if (this.tickCount >= 4) this.tickCount = 0;\r\n    this.on = this.tickCount === 0;\r\n\r\n    if (this.on) {\r\n      for (const i in this.room.game.players) {\r\n        if (\r\n          this.room ===\r\n            this.room.game.rooms[this.room.game.players[i].levelID] &&\r\n          this.room.game.players[i].x === this.x &&\r\n          this.room.game.players[i].y === this.y\r\n        )\r\n          this.room.game.players[i].hurt(0.5, \"spike trap\");\r\n      }\r\n    }\r\n\r\n    if (this.tickCount === 3)\r\n      this.room.hitwarnings.push(\r\n        new HitWarning(this.room.game, this.x, this.y, this.x, this.y, false),\r\n      );\r\n  };\r\n\r\n  tickEnd = () => {\r\n    if (this.on) {\r\n      for (const e of this.room.entities) {\r\n        if (e.x === this.x && e.y === this.y) {\r\n          e.hurt(null, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onCollideEnemy = (enemy: Entity) => {\r\n    if (this.on && !(enemy instanceof Crate || enemy instanceof Barrel))\r\n      enemy.hurt(null, 1);\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    //this.drawableY = this.y - 0.01;\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n\r\n    let rumbleOffsetX = 0;\r\n    this.t += delta;\r\n    if (!this.on && this.tickCount === 3) {\r\n      if (Math.floor(this.t) % 4 === 1) rumbleOffsetX = 0.0325;\r\n      if (Math.floor(this.t) % 4 === 3) rumbleOffsetX = -0.0325;\r\n    }\r\n    let frames = [0, 1, 2, 3, 3, 4, 2, 0];\r\n    let f = 6 + frames[Math.floor(this.frame)];\r\n    if (\r\n      this.tickCount === 1 ||\r\n      (this.tickCount === 0 && frames[Math.floor(this.frame)] === 0)\r\n    ) {\r\n      f = 5;\r\n    }\r\n    Game.drawObj(\r\n      f,\r\n      1,\r\n      1,\r\n      1,\r\n      this.x + rumbleOffsetX,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    Game.drawObj(\r\n      f,\r\n      0,\r\n      1,\r\n      1,\r\n      this.x + rumbleOffsetX,\r\n      this.y - 1,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(0, 0, false),\r\n    );\r\n\r\n    if (this.on && this.frame < frames.length - 1) {\r\n      if (frames[Math.floor(this.frame)] < 3) this.frame += 0.4 * delta;\r\n      else this.frame += 0.2 * delta;\r\n    }\r\n    if (!this.on) this.frame = 0;\r\n  };\r\n}\r\n","import { Room } from \"../room/room\";\r\nimport { Player } from \"../player/player\";\r\nimport { Entity } from \"../entity/entity\";\r\nimport { Drawable } from \"../drawable/drawable\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { IdGenerator } from \"../globalStateManager/IdGenerator\";\r\n\r\nexport enum SkinType {\r\n  DUNGEON = 0,\r\n  CAVE = 1,\r\n  FOREST = 2,\r\n  CASTLE = 3,\r\n  GLACIER = 4,\r\n  DARK_CASTLE = 5,\r\n  PLACEHOLDER = 6,\r\n  DESERT = 7,\r\n  MAGMA_CAVE = 8,\r\n}\r\n\r\nexport abstract class Tile extends Drawable {\r\n  globalId: string;\r\n  x: number;\r\n  y: number;\r\n  room: Room;\r\n  skin: SkinType;\r\n  isDoor: boolean;\r\n  opacity: number;\r\n  name: string = \"\";\r\n\r\n  constructor(room: Room, x: number, y: number) {\r\n    super();\r\n    this.globalId = IdGenerator.generate(\"T\");\r\n    this.skin = room.skin;\r\n    this.room = room;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.drawableY = y;\r\n    this.isDoor = false;\r\n    this.opacity = 1;\r\n  }\r\n\r\n  getName = () => {\r\n    return this.name;\r\n  };\r\n\r\n  hasPlayer = (player: Player) => {\r\n    if (player.x === this.x && player.y === this.y) return true;\r\n    else return false;\r\n  };\r\n\r\n  shadeAmount = (\r\n    offsetX: number = 0,\r\n    offsetY: number = 0,\r\n    disable: boolean = true,\r\n  ) => {\r\n    if (GameConstants.SMOOTH_LIGHTING && disable) return 0;\r\n    return this.room.softVis[this.x + offsetX][this.y + offsetY];\r\n  };\r\n\r\n  isSolid = (): boolean => {\r\n    return false;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return false;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    return false;\r\n  };\r\n  onCollide = (player: Player) => {};\r\n  onCollideEnemy = (enemy: Entity) => {};\r\n  tick = () => {};\r\n  tickEnd = () => {};\r\n\r\n  draw = (delta: number) => {};\r\n  drawUnderPlayer = (delta: number) => {};\r\n  drawAbovePlayer = (delta: number) => {};\r\n  drawAboveShading = (delta: number) => {};\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { Player } from \"../player/player\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Tile } from \"./tile\";\r\n\r\nexport class Trapdoor extends Tile {\r\n  game: Game;\r\n\r\n  constructor(room: Room, game: Game, x: number, y: number) {\r\n    super(room, x, y);\r\n    this.game = game;\r\n  }\r\n\r\n  draw = (delta: number) => {\r\n    Game.drawTile(\r\n      13,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  onCollide = (player: Player) => {\r\n    // TODO\r\n  };\r\n}\r\n","import { Player } from \"../player/player\";\r\nimport { Game } from \"../game\";\r\nimport { Room } from \"../room/room\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\nimport { SkinType, Tile } from \"./tile\";\r\nimport { DownLadder } from \"./downLadder\";\r\nimport { Sound } from \"../sound/sound\";\r\nimport { Lockable, LockType } from \"./lockable\";\r\nimport { Passageway } from \"./passageway\";\r\nimport { Shadow } from \"../drawable/shadow\";\r\n\r\nexport class UpLadder extends Passageway {\r\n  linkedRoom: Room;\r\n  isRope = false;\r\n  depth: number;\r\n  lockable: Lockable;\r\n  isSidePath = false;\r\n\r\n  constructor(\r\n    room: Room,\r\n    game: Game,\r\n    x: number,\r\n    y: number,\r\n    lockType: LockType = LockType.NONE,\r\n  ) {\r\n    super(room, game, x, y);\r\n    this.depth = room.depth;\r\n\r\n    // Initialize lockable with default config\r\n    this.lockable = new Lockable(game, {\r\n      lockType: lockType,\r\n      isTopDoor: true,\r\n    });\r\n  }\r\n\r\n  onCollide = (player: Player) => {\r\n    if (!this.game) {\r\n      console.error(\"Game instance is undefined in UpLadder:\", this);\r\n      return;\r\n    }\r\n\r\n    // Check if locked\r\n    if (this.lockable.isLocked()) {\r\n      if (this.lockable.canUnlock(player)) {\r\n        this.lockable.unlock(player);\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!this.linkedRoom) {\r\n        this.linkRoom();\r\n      }\r\n      // If we have an exact parent down-ladder coordinate recorded, stash it on the target room\r\n      const exitPos = (this as any).exitDownLadderPos as\r\n        | { x: number; y: number }\r\n        | undefined;\r\n      // If this is a rope (sidepath) exit, switch active path back to the linked room's path\r\n      if (this.isRope && this.linkedRoom) {\r\n        (this.game as any).currentPathId = this.linkedRoom.pathId || \"main\";\r\n      }\r\n      this.game.changeLevelThroughLadder(player, this);\r\n      if (exitPos && this.linkedRoom) {\r\n        (this.linkedRoom as any).__entryPositionFromLadder = exitPos;\r\n        try {\r\n          console.log(\r\n            `UpLadder.onCollide: wrote __entryPositionFromLadder (${exitPos.x}, ${exitPos.y}) onto parent room gid=${(this.linkedRoom as any)?.globalId}`,\r\n          );\r\n        } catch {}\r\n      }\r\n      Sound.forestMusic.pause();\r\n      Sound.caveMusic.pause();\r\n    } catch (error) {\r\n      console.error(\"Error during changeLevelThroughLadder:\", error);\r\n    }\r\n  };\r\n\r\n  getName = () => {\r\n    return this.isRope ? \"rope up\" : \"staircase up\";\r\n  };\r\n\r\n  linkRoom = () => {\r\n    // For sidepaths (rope), link back to the room that contains the DownLadder\r\n    if (this.isRope && !this.linkedRoom) {\r\n      const level = this.game.levels[this.depth];\r\n      if (level) {\r\n        // Prefer any room in an earlier mapGroup that contains a sidepath DownLadder\r\n        for (const candidate of level.rooms) {\r\n          if (candidate.mapGroup < this.room.mapGroup) {\r\n            for (\r\n              let x = candidate.roomX;\r\n              x < candidate.roomX + candidate.width;\r\n              x++\r\n            ) {\r\n              for (\r\n                let y = candidate.roomY;\r\n                y < candidate.roomY + candidate.height;\r\n                y++\r\n              ) {\r\n                const t = candidate.roomArray[x]?.[y];\r\n                if (t instanceof DownLadder && t.isSidePath) {\r\n                  this.linkedRoom = candidate;\r\n                  t.linkedRoom = this.room;\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // Fallback: link to level start if not found\r\n        // Prefer stable map lookup when available\r\n        const anyRoom = (level as any).roomsById\r\n          ? (level as any).roomsById.values().next().value\r\n          : level.rooms[0];\r\n        this.linkedRoom = level.startRoom || anyRoom;\r\n        return;\r\n      }\r\n    }\r\n    // Main path: link to previous depth exit\r\n    if (this.depth - 1 >= 0 && this.game.levels[this.depth - 1]) {\r\n      this.linkedRoom = this.game.levels[this.depth - 1].exitRoom;\r\n    }\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    let xx = 29;\r\n    let yy = 0;\r\n    if (this.isRope) {\r\n      xx = 16;\r\n      yy = 1;\r\n    }\r\n\r\n    Game.drawTile(\r\n      1,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    if (!this.isRope) {\r\n      Game.drawTile(\r\n        xx,\r\n        yy,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(0, -1, false),\r\n      );\r\n    } else {\r\n      Game.drawTile(\r\n        xx,\r\n        yy + 0,\r\n        1,\r\n        2,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        2,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(0, -1, false),\r\n      );\r\n    }\r\n    Game.drawTile(\r\n      xx,\r\n      yy + 1,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n    Shadow.draw(this.x, this.y + 0.25);\r\n  };\r\n\r\n  drawAboveShading = (delta: number) => {\r\n    // Update lockable animation\r\n    this.lockable.update(delta);\r\n\r\n    // Draw lock icon\r\n    this.lockable.drawIcon(this.x, this.y, delta);\r\n\r\n    // Original floating animation\r\n    if (this.frame > 100) this.frame = 0;\r\n    this.frame += 1 * delta;\r\n    let multiplier = 0.125;\r\n\r\n    Game.drawFX(\r\n      2,\r\n      2,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y - 1.25 + multiplier * Math.sin((this.frame * Math.PI) / 50),\r\n      1,\r\n      1,\r\n    );\r\n  };\r\n\r\n  drawAbovePlayer = (delta: number) => {\r\n    if (this.isRope)\r\n      Game.drawTile(\r\n        16,\r\n        1,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n  };\r\n\r\n  isLocked(): boolean {\r\n    return this.lockable.isLocked();\r\n  }\r\n}\r\n","import { Direction, Game } from \"../game\";\r\nimport { Room, WallDirection } from \"../room/room\";\r\nimport { Door, DoorDir } from \"./door\";\r\nimport { Tile } from \"./tile\";\r\nimport { WallInfo } from \"../room/room\";\r\nimport { GameConstants } from \"../game/gameConstants\";\r\n\r\nexport class Wall extends Tile {\r\n  private tileXOffset: number;\r\n  wallDirections: Array<WallDirection>;\r\n  room: Room;\r\n\r\n  constructor(\r\n    room: Room,\r\n    x: number,\r\n    y: number,\r\n    wallDirections?: Array<WallDirection>,\r\n  ) {\r\n    super(room, x, y);\r\n    this.isDoor = false;\r\n    this.tileXOffset = 6;\r\n    this.wallDirections = wallDirections || [];\r\n    this.opacity = 1;\r\n    this.room = room;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    const wallInfo = this.wallInfo();\r\n    if (!wallInfo) return false;\r\n    return (\r\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\r\n      wallInfo.isLeftWall ||\r\n      wallInfo.isRightWall\r\n    );\r\n  };\r\n\r\n  isInnerWall = (): boolean => {\r\n    const wallInfo = this.wallInfo();\r\n    return wallInfo?.isInnerWall || false;\r\n  };\r\n\r\n  get direction() {\r\n    let directions = [];\r\n    if (this.room.roomArray[this.x - 1][this.y] === null)\r\n      directions.push(Direction.LEFT);\r\n    if (this.room.roomArray[this.x + 1][this.y] === null)\r\n      directions.push(Direction.RIGHT);\r\n    if (this.room.roomArray[this.x][this.y - 1] === null)\r\n      directions.push(Direction.DOWN);\r\n    if (this.room.roomArray[this.x][this.y + 1] === null)\r\n      directions.push(Direction.UP);\r\n    if (directions.length == 1) return directions[0];\r\n    if (\r\n      directions.includes(Direction.UP) &&\r\n      directions.includes(Direction.LEFT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.UP_LEFT;\r\n    }\r\n    if (\r\n      directions.includes(Direction.UP) &&\r\n      directions.includes(Direction.RIGHT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.UP_RIGHT;\r\n    }\r\n    if (\r\n      directions.includes(Direction.DOWN) &&\r\n      directions.includes(Direction.LEFT)\r\n    ) {\r\n      this.opacity = 0.5;\r\n      return Direction.DOWN_LEFT;\r\n    }\r\n    return Direction.DOWN_RIGHT;\r\n  }\r\n\r\n  wallInfo = () => {\r\n    return this.room.wallInfo.get(`${this.x},${this.y}`);\r\n  };\r\n\r\n  // Returns the door tile directly below this wall if present.\r\n  // Early returns undefined if this wall is not marked as below a door wall.\r\n  getDoor = (): Door | undefined => {\r\n    const info = this.wallInfo();\r\n    if (!info || !info.isBelowDoorWall) return undefined;\r\n    const below = this.room.roomArray[this.x]?.[this.y + 1];\r\n    return below instanceof Door ? (below as Door) : undefined;\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawWall(delta);\r\n  };\r\n\r\n  drawWall = (delta: number) => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return;\r\n\r\n    // Set tileYOffset based on inner wall type\r\n    this.tileXOffset =\r\n      wallInfo.innerWallType === \"bottomInner\" ||\r\n      wallInfo.innerWallType === \"surroundedInner\"\r\n        ? 0\r\n        : 26;\r\n\r\n    // Only draw the bottom part of the wall if it's not at the bottom edge of the room\r\n    const isDrawnFirst = this.getDoor()?.isDrawnFirst();\r\n    if (\r\n      wallInfo.isDoorWall ||\r\n      wallInfo.isBelowDoorWall ||\r\n      (wallInfo.isTopWall && !wallInfo.isLeftWall && !wallInfo.isRightWall) ||\r\n      wallInfo.isInnerWall\r\n    ) {\r\n      if (\r\n        wallInfo.isBelowDoorWall &&\r\n        !isDrawnFirst &&\r\n        GameConstants.SMOOTH_LIGHTING\r\n      )\r\n        return;\r\n      const shadeAmount = GameConstants.SMOOTH_LIGHTING\r\n        ? this.shadeAmount()\r\n        : this.room.softVis[this.x][this.y + 1];\r\n\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        shadeAmount,\r\n      );\r\n    }\r\n\r\n    Game.drawTile(\r\n      2 + this.tileXOffset,\r\n      this.skin,\r\n      1,\r\n      1,\r\n      this.x,\r\n      this.y - 1,\r\n      1,\r\n      1,\r\n      this.room.shadeColor,\r\n      this.shadeAmount(),\r\n    );\r\n  };\r\n\r\n  drawTopLayer = (delta: number) => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    const room = this.room;\r\n    if (!wallInfo || !room) return;\r\n    if (wallInfo.isBottomWall && room.active)\r\n      Game.drawTile(\r\n        2 + this.tileXOffset,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 1,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(), //this.room.softVis[this.x][this.y + 1],\r\n      );\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\nimport { Room } from \"../room/room\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Wall } from \"./wall\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class WallTorch extends Wall {\r\n  frame: number;\r\n  private tileYOffset: number;\r\n  private isBottomWall: boolean;\r\n  private torchOffset: number;\r\n  lightSource: LightSource;\r\n\r\n  constructor(room: Room, x: number, y: number, isBottomWall?: boolean) {\r\n    super(room, x, y);\r\n\r\n    this.isBottomWall = isBottomWall;\r\n    this.torchOffset = isBottomWall ? 1 : 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5 - this.torchOffset,\r\n      5,\r\n      LevelConstants.TORCH_LIGHT_COLOR,\r\n      1.5,\r\n    );\r\n    this.room.lightSources.push(this.lightSource);\r\n    this.frame = Random.rand() * 12;\r\n    this.tileYOffset = 6;\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#FFA500\";\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return true;\r\n    return (\r\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\r\n      wallInfo.isLeftWall ||\r\n      wallInfo.isRightWall\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawWall(delta);\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) this.tileYOffset = 6;\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame >= 12) this.frame = 0;\r\n\r\n    this.tileYOffset =\r\n      wallInfo?.innerWallType === \"bottomInner\" ||\r\n      wallInfo?.innerWallType === \"surroundedInner\"\r\n        ? 0\r\n        : 6;\r\n    if (!this.isBottomWall) {\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n\r\n    Game.drawFX(\r\n      Math.floor(this.frame),\r\n      32,\r\n      1,\r\n      2,\r\n      this.x,\r\n      this.y - 1 - this.torchOffset,\r\n      1,\r\n      2,\r\n    );\r\n\r\n    if (this.isBottomWall) {\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 0.6,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Game } from \"../game\";\r\nimport { Tile } from \"./tile\";\r\nimport { Room } from \"../room/room\";\r\nimport { LightSource } from \"../lighting/lightSource\";\r\nimport { LevelConstants } from \"../level/levelConstants\";\r\nimport { Wall } from \"./wall\";\r\nimport { Random } from \"../utility/random\";\r\n\r\nexport class Window extends Wall {\r\n  frame: number;\r\n  private tileYOffset: number;\r\n  private isBottomWall: boolean;\r\n  //private torchOffset: number;\r\n  lightSource: LightSource;\r\n\r\n  constructor(room: Room, x: number, y: number, isBottomWall?: boolean) {\r\n    super(room, x, y);\r\n\r\n    this.isBottomWall = isBottomWall;\r\n    //this.torchOffset = isBottomWall ? 1 : 0;\r\n    this.lightSource = new LightSource(\r\n      this.x + 0.5,\r\n      this.y + 0.5,\r\n      20,\r\n      [135, 206, 235], //sky blue rgb array,\r\n      3,\r\n    );\r\n    this.room.lightSources.push(this.lightSource);\r\n    //this.frame = Random.rand() * 12;\r\n    //this.tileYOffset = 6;\r\n    this.hasBloom = true;\r\n    this.bloomColor = \"#00FFFF\"; //cyan\r\n    this.bloomAlpha = 1;\r\n    this.softBloomAlpha = 0;\r\n  }\r\n\r\n  isSolid = (): boolean => {\r\n    return true;\r\n  };\r\n  canCrushEnemy = (): boolean => {\r\n    return true;\r\n  };\r\n  isOpaque = (): boolean => {\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) return true;\r\n    return (\r\n      (!wallInfo.isTopWall && !wallInfo.isInnerWall) ||\r\n      wallInfo.isLeftWall ||\r\n      wallInfo.isRightWall\r\n    );\r\n  };\r\n\r\n  draw = (delta: number) => {\r\n    this.drawWall(delta);\r\n    const wallInfo = this.room.wallInfo.get(`${this.x},${this.y}`);\r\n    if (!wallInfo) this.tileYOffset = 6;\r\n    this.frame += 0.3 * delta;\r\n    if (this.frame >= 12) this.frame = 0;\r\n\r\n    this.tileYOffset =\r\n      wallInfo?.innerWallType === \"bottomInner\" ||\r\n      wallInfo?.innerWallType === \"surroundedInner\"\r\n        ? 0\r\n        : 6;\r\n    if (!this.isBottomWall) {\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        this.shadeAmount(),\r\n      );\r\n    }\r\n\r\n    if (this.isBottomWall) {\r\n      Game.drawTile(\r\n        0,\r\n        this.skin,\r\n        1,\r\n        1,\r\n        this.x,\r\n        this.y - 0.6,\r\n        1,\r\n        1,\r\n        this.room.shadeColor,\r\n        1,\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { Random } from \"./utility/random\";\n\nconst tips = [\n  \"Too dark? Equip a light source to light up the area around you.\",\n\n  \"Red X's show dangerous tiles, stay off of them to avoid taking damage.\",\n\n  \"If you kill an enemy, it can't hit you on the next turn.\",\n\n  \"Use weapon fragments on your weapon to repair broken weapons.\",\n\n  \"A yellow box around an item means it can be used on another item.\",\n\n  \"Lanterns can be refueled with coal.\",\n\n  \"Some objects can be pushed and kill enemies by crushing them.\",\n\n  \"Reapers spawn other enemies. Target them first to avoid being overrun.\",\n\n  \"Occultists apply a purple occult shield to enemies, giving them an extra health.\",\n\n  \"Killing an Occultist also removes the shields of each shielded enemy.\",\n\n  \"Some enemies have helmets, giving them extra health.\",\n\n  \"The shield absorbs one damage, and regenerates within 15 turns.\",\n\n  \"Explore alternate pathways like caves to gather resources to prepare for tough battles.\",\n\n  \"Vending machine sell useful items in exchange for coins.\",\n\n  \"Different enemies have different movement and attack patterns.\",\n\n  \"Frogs can only deal half damage, but can attack two tiles away in any direction.\",\n\n  \"Sometimes you will need to switch weapons mid-fight to use the best one for the situation.\",\n\n  \"Once you reach the end of a level you can get back to the beginning easily through tunnel doors.\",\n\n  \"Dual daggers give you an extra turn. After attacking you can attack or move again.\",\n\n  \"The Warhammer does two damage for taking out enemies with more than one health.\",\n\n  \"The spear has an attack range of two, so you can hit enemies from a safe distance.\",\n\n  \"Bombs can be placed to blow up enemies, just be sure to avoid blowing yourself up.\",\n\n  \"Mushrooms heal one half health.\",\n\n  \"Weapon blood can be applied to your weapon, giving it a powerful bleed effect upon attacking.\",\n\n  \"Weapon poison can be applied to your weapon poisoning enemies upon attacking.\",\n\n  \"The spellbook can attack multiple enemies from long range, great for getting out of tough situations.\",\n\n  \"Bishops can move diagonally and might sneak up on you if you aren't careful.\",\n\n  \"Rooks can move every turn and attack from any direction.\",\n\n  \"Queens can move any direction and have two health, but retreat when hit.\",\n\n  \"Dark? Equip light source.\",\n\n  \"Red X = danger. Avoid.\",\n\n  \"Kill enemy = safe next turn.\",\n\n  \"Use fragments to repair weapons.\",\n\n  \"Yellow box = usable on items.\",\n\n  \"Coal refuels lanterns.\",\n\n  \"Push objects to crush enemies.\",\n\n  \"Kill reapers first - they spawn enemies.\",\n\n  \"Occultists give enemies purple shields.\",\n\n  \"Kill occultist = remove all shields.\",\n\n  \"Helmets = extra enemy health.\",\n\n  \"Shield: 1 damage, regens in 15 turns.\",\n\n  \"Explore caves for resources.\",\n\n  \"Vending machines: coins for items.\",\n\n  \"Enemies have unique patterns.\",\n\n  \"Frogs: half damage, 2-tile range.\",\n\n  \"Switch weapons mid-fight.\",\n\n  \"Tunnel doors = quick return to start.\",\n\n  \"Dual daggers = extra turn after attack.\",\n\n  \"Warhammer: 2 damage vs multi-health.\",\n\n  \"Spear: 2-tile range.\",\n\n  \"Bombs blow up enemies (not you).\",\n\n  \"Mushrooms: heal 0.5 health.\",\n\n  \"Weapon blood = bleed effect.\",\n\n  \"Weapon poison = poison effect.\",\n\n  \"Spellbook: multi-enemy, long range.\",\n\n  \"Bishops: diagonal movement.\",\n\n  \"Rooks: move every turn, any direction.\",\n\n  \"Queens: 2 health, retreat when hit.\",\n];\n\nexport class Tips {\n  static getRandomTip(): string {\n    return tips[Math.floor(Random.rand() * tips.length)];\n  }\n}\n","import { EntityDirection } from \"../entity/entity\";\r\nimport { Direction } from \"../game\";\r\nimport { DownLadder } from \"../tile/downLadder\";\r\nimport { SpikeTrap } from \"../tile/spiketrap\";\r\nimport { Wall } from \"../tile/wall\";\r\nimport { Random } from \"./random\";\r\n\r\nexport namespace astar {\r\n  //================== start graph js\r\n  /* \r\n  graph.js http://github.com/bgrins/javascript-astar\r\n  MIT License\r\n  Creates a Graph class used in the astar search algorithm.\r\n  Includes Binary Heap (with modifications) from Marijn Haverbeke \r\n      URL: http://eloquentjavascript.net/appendix2.html\r\n      License: http://creativecommons.org/licenses/by/3.0/\r\n  */\r\n\r\n  export interface Position {\r\n    x: number;\r\n    y: number;\r\n  }\r\n\r\n  export enum GraphNodeType {\r\n    WALL,\r\n    OPEN,\r\n  }\r\n\r\n  let getTileCost = (tile) => {\r\n    if (tile)\r\n      return tile.isSolid() || tile.isDoor || tile instanceof DownLadder\r\n        ? 99999999\r\n        : 300;\r\n    else return 99999999;\r\n  };\r\n\r\n  export class Graph {\r\n    nodes: GraphNode[][];\r\n    elements: number[][];\r\n\r\n    constructor(grid: number[][]) {\r\n      this.elements = grid;\r\n      var nodes: GraphNode[][] = [];\r\n      var row: number[],\r\n        rowLength: number,\r\n        len = grid.length;\r\n      for (var x = 0; x < len; ++x) {\r\n        row = grid[x];\r\n        rowLength = row.length;\r\n        nodes[x] = new Array(rowLength); // optimum array with size\r\n        for (var y = 0; y < rowLength; ++y) {\r\n          nodes[x][y] = new GraphNode(x, y, row[y]);\r\n        }\r\n      }\r\n      this.nodes = nodes;\r\n    }\r\n\r\n    toString(): string {\r\n      var graphString = \"\\n\";\r\n      var nodes = this.nodes;\r\n      var rowDebug: string, row: GraphNode[], y: number, l: number;\r\n      for (var x = 0, len = nodes.length; x < len; ) {\r\n        rowDebug = \"\";\r\n        row = nodes[x++];\r\n        for (y = 0, l = row.length; y < l; ) {\r\n          rowDebug += row[y++].type + \" \";\r\n        }\r\n        graphString = graphString + rowDebug + \"\\n\";\r\n      }\r\n      return graphString;\r\n    }\r\n  }\r\n\r\n  export class GraphNode {\r\n    x: number;\r\n    y: number;\r\n    type: GraphNodeType;\r\n    data: any;\r\n    pos: Position;\r\n\r\n    constructor(x: number, y: number, type: GraphNodeType) {\r\n      this.data = {};\r\n      this.x = x;\r\n      this.y = y;\r\n      this.pos = { x: x, y: y };\r\n      this.type = type;\r\n    }\r\n\r\n    toString(): string {\r\n      return \"[\" + this.x + \" \" + this.y + \"]\";\r\n    }\r\n\r\n    isWall() {\r\n      return this.type == GraphNodeType.WALL;\r\n    }\r\n  }\r\n\r\n  export class BinaryHeap {\r\n    content: any[];\r\n    scoreFunction: (node: any) => number;\r\n\r\n    constructor(scoreFunction: (node: any) => number) {\r\n      this.content = [];\r\n      this.scoreFunction = scoreFunction;\r\n    }\r\n\r\n    push(node: any) {\r\n      // Add the new node to the end of the array.\r\n      this.content.push(node);\r\n      // Allow it to sink down.\r\n      this.sinkDown(this.content.length - 1);\r\n    }\r\n\r\n    pop() {\r\n      // Store the first node so we can return it later.\r\n      var result = this.content[0];\r\n      // Get the node at the end of the array.\r\n      var end = this.content.pop();\r\n      // If there are any elements left, put the end node at the\r\n      // start, and let it bubble up.\r\n      if (this.content.length > 0) {\r\n        this.content[0] = end;\r\n        this.bubbleUp(0);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    remove(node: any) {\r\n      var i = this.content.indexOf(node);\r\n\r\n      // When it is found, the process seen in 'pop' is repeated\r\n      // to fill up the hole.\r\n      var end = this.content.pop();\r\n      if (i !== this.content.length - 1) {\r\n        this.content[i] = end;\r\n        if (this.scoreFunction(end) < this.scoreFunction(node))\r\n          this.sinkDown(i);\r\n        else this.bubbleUp(i);\r\n      }\r\n    }\r\n\r\n    size() {\r\n      return this.content.length;\r\n    }\r\n\r\n    rescoreElement(node: any) {\r\n      this.sinkDown(this.content.indexOf(node));\r\n    }\r\n\r\n    sinkDown(n: number) {\r\n      // Fetch the element that has to be sunk.\r\n      var element = this.content[n];\r\n      // When at 0, an element can not sink any further.\r\n      while (n > 0) {\r\n        // Compute the parent element's index, and fetch it.\r\n        var parentN = ((n + 1) >> 1) - 1,\r\n          parent = this.content[parentN];\r\n        // Swap the elements if the parent is greater.\r\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n          this.content[parentN] = element;\r\n          this.content[n] = parent;\r\n          // Update 'n' to continue at the new position.\r\n          n = parentN;\r\n        } else {\r\n          // Found a parent that is less, no need to sink any further.\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    bubbleUp(n: number) {\r\n      // Look up the target element and its score.\r\n      var length = this.content.length,\r\n        element = this.content[n],\r\n        elemScore = this.scoreFunction(element);\r\n\r\n      while (true) {\r\n        // Compute the indices of the child elements.\r\n        var child2N = (n + 1) << 1,\r\n          child1N = child2N - 1;\r\n        // This is used to store the new position of the element,\r\n        // if any.\r\n        var swap = null;\r\n        // If the first child exists (is inside the array)...\r\n        if (child1N < length) {\r\n          // Look it up and compute its score.\r\n          var child1 = this.content[child1N],\r\n            child1Score = this.scoreFunction(child1);\r\n          // If the score is less than our element's, we need to swap.\r\n          if (child1Score < elemScore) swap = child1N;\r\n        }\r\n        // Do the same checks for the other child.\r\n        if (child2N < length) {\r\n          var child2 = this.content[child2N],\r\n            child2Score = this.scoreFunction(child2);\r\n          if (child2Score < (swap === null ? elemScore : child1Score))\r\n            swap = child2N;\r\n        }\r\n\r\n        // If the element needs to be moved, swap it, and continue.\r\n        if (swap !== null) {\r\n          this.content[n] = this.content[swap];\r\n          this.content[swap] = element;\r\n          n = swap;\r\n        } else {\r\n          // Otherwise, we are done.\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //end graph.js ==================\r\n\r\n  // javascript-astar\r\n  // http://github.com/bgrins/javascript-astar\r\n  // Freely distributable under the MIT License.\r\n  // Implements the astar search algorithm in javascript using a binary heap.\r\n  export interface AStarData {\r\n    f: number;\r\n    g: number;\r\n    h: number;\r\n    cost: number;\r\n    visited: boolean;\r\n    closed: boolean;\r\n    parent: AStarData;\r\n    pos: Position;\r\n    org: any;\r\n  }\r\n\r\n  export class AStar {\r\n    static NO_CHECK_START_POINT: boolean = false;\r\n    grid: AStarData[][];\r\n    constructor(\r\n      grid: any[][],\r\n      disablePoints?: Position[],\r\n      lastPlayerPosition?: Position,\r\n      enableCost?: boolean,\r\n    ) {\r\n      this.grid = [];\r\n      for (var x = 0, xl = grid.length; x < xl; x++) {\r\n        this.grid[x] = [];\r\n        for (var y = 0, yl = grid[x].length; y < yl; y++) {\r\n          var cost = getTileCost(grid[x][y]);\r\n          this.grid[x][y] = {\r\n            org: grid[x][y],\r\n            f: 0,\r\n            g: 0,\r\n            h: 0,\r\n            cost: cost,\r\n            visited: false,\r\n            closed: false,\r\n            pos: {\r\n              x: x,\r\n              y: y,\r\n            },\r\n            parent: null,\r\n          };\r\n        }\r\n      }\r\n      if (disablePoints !== undefined) {\r\n        for (var i = 0; i < disablePoints.length; i++) {\r\n          if (\r\n            disablePoints[i].x >= 0 &&\r\n            disablePoints[i].x < this.grid.length &&\r\n            disablePoints[i].y >= 0 &&\r\n            disablePoints[i].y < this.grid[0].length\r\n          )\r\n            this.grid[disablePoints[i].x][disablePoints[i].y].cost = 99999999;\r\n        }\r\n      }\r\n      if (lastPlayerPosition) {\r\n        if (\r\n          lastPlayerPosition.x >= 0 &&\r\n          lastPlayerPosition.x < this.grid.length &&\r\n          lastPlayerPosition.y >= 0 &&\r\n          lastPlayerPosition.y < this.grid[0].length\r\n        )\r\n          this.grid[lastPlayerPosition.x][lastPlayerPosition.y].cost = 0.5;\r\n      }\r\n    }\r\n\r\n    heap(): BinaryHeap {\r\n      return new BinaryHeap(function (node: AStarData) {\r\n        return node.f;\r\n      });\r\n    }\r\n\r\n    _find(org: any) {\r\n      for (var x = 0; x < this.grid.length; x++)\r\n        for (var y = 0; y < this.grid[x].length; y++)\r\n          if (this.grid[x][y].org == org) return this.grid[x][y];\r\n    }\r\n\r\n    _search(\r\n      start: any,\r\n      end: any,\r\n      diagonal?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      turnCostsExtra?: boolean,\r\n      turnDirection?: Direction,\r\n      heuristic?: Function,\r\n      diagonalsOmni?: boolean,\r\n      lastPlayerPosition?: Position,\r\n    ) {\r\n      heuristic = heuristic || this.manhattan;\r\n      diagonal = !!diagonal;\r\n      diagonalsOnly = !!diagonalsOnly;\r\n      turnCostsExtra = !!turnCostsExtra;\r\n      diagonalsOmni = !!diagonalsOmni;\r\n\r\n      var openHeap = this.heap();\r\n\r\n      var _start: AStarData, _end: AStarData;\r\n      if (start.x !== undefined && start.y !== undefined)\r\n        _start = this.grid[start.x][start.y];\r\n      else _start = this._find(start);\r\n\r\n      if (end.x !== undefined && end.y !== undefined)\r\n        _end = this.grid[end.x][end.y];\r\n      else _end = this._find(end);\r\n\r\n      if (AStar.NO_CHECK_START_POINT == false && _start.cost <= 0) return [];\r\n\r\n      openHeap.push(_start);\r\n\r\n      while (openHeap.size() > 0) {\r\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\r\n        var currentNode: AStarData = openHeap.pop();\r\n\r\n        // End case -- result has been found, return the traced path.\r\n        if (currentNode === _end) {\r\n          var curr = currentNode;\r\n          var ret = [];\r\n          while (curr.parent) {\r\n            ret.push(curr);\r\n            curr = curr.parent;\r\n          }\r\n          return ret.reverse();\r\n        }\r\n\r\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\r\n        currentNode.closed = true;\r\n\r\n        // Find all neighbors for the current node. Optionally find diagonal neighbors as well (false by default).\r\n        var neighbors = this.neighbors(\r\n          currentNode,\r\n          diagonal,\r\n          diagonalsOnly,\r\n          diagonalsOmni,\r\n        );\r\n\r\n        for (var i = 0, il = neighbors.length; i < il; i++) {\r\n          var neighbor = neighbors[i];\r\n\r\n          if (neighbor.closed || neighbor.cost <= 0) {\r\n            // Not a valid node to process, skip to next neighbor.\r\n            continue;\r\n          }\r\n\r\n          // The g score is the shortest distance from start to current node.\r\n          // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\r\n\r\n          var gScore = currentNode.g + neighbor.cost;\r\n          if (turnCostsExtra) {\r\n            var isTurn = false;\r\n            if (currentNode.parent)\r\n              isTurn = !(\r\n                (currentNode.parent.pos.x === currentNode.pos.x &&\r\n                  currentNode.pos.x === neighbor.pos.x) ||\r\n                (currentNode.parent.pos.y === currentNode.pos.y &&\r\n                  currentNode.pos.y === neighbor.pos.y)\r\n              );\r\n            else {\r\n              // initial step\r\n              isTurn = true;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 0 &&\r\n                neighbor.pos.y - currentNode.pos.y === -1 &&\r\n                turnDirection === Direction.UP\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 0 &&\r\n                neighbor.pos.y - currentNode.pos.y === 1 &&\r\n                turnDirection === Direction.DOWN\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === 1 &&\r\n                neighbor.pos.y - currentNode.pos.y === 0 &&\r\n                turnDirection === Direction.RIGHT\r\n              )\r\n                isTurn = false;\r\n              if (\r\n                neighbor.pos.x - currentNode.pos.x === -1 &&\r\n                neighbor.pos.y - currentNode.pos.y === 0 &&\r\n                turnDirection === Direction.LEFT\r\n              )\r\n                isTurn = false;\r\n            }\r\n            if (isTurn) gScore++;\r\n          }\r\n          var beenVisited = neighbor.visited;\r\n\r\n          if (!beenVisited || gScore < neighbor.g) {\r\n            // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\r\n            neighbor.visited = true;\r\n            neighbor.parent = currentNode;\r\n            neighbor.h =\r\n              neighbor.h ||\r\n              heuristic(neighbor.pos, _end.pos, lastPlayerPosition);\r\n            neighbor.g = gScore;\r\n            neighbor.f = neighbor.g + neighbor.h;\r\n\r\n            if (!beenVisited) {\r\n              // Pushing to heap will put it in proper place based on the 'f' value.\r\n              openHeap.push(neighbor);\r\n            } else {\r\n              // Already seen the node, but since it has been rescored we need to reorder it in the heap\r\n              openHeap.rescoreElement(neighbor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // No result was found - empty array signifies failure to find path.\r\n      return [];\r\n    }\r\n\r\n    static search(\r\n      grid: any[][],\r\n      start: any,\r\n      end: any,\r\n      disablePoints?: Position[],\r\n      diagonal?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      turnCostsExtra?: boolean,\r\n      turnDirection?: Direction,\r\n      heuristic?: Function,\r\n      diagonalsOmni?: boolean,\r\n      lastPlayerPosition?: Position,\r\n    ) {\r\n      var astar = new AStar(grid, disablePoints, lastPlayerPosition);\r\n      return astar._search(\r\n        start,\r\n        end,\r\n        diagonal,\r\n        diagonalsOnly,\r\n        turnCostsExtra,\r\n        turnDirection,\r\n        heuristic,\r\n        diagonalsOmni,\r\n      );\r\n    }\r\n\r\n    manhattan(pos0: Position, pos1: Position): number {\r\n      var d1 = Math.abs(pos1.x - pos0.x);\r\n      var d2 = Math.abs(pos1.y - pos0.y);\r\n      var heuristic = d1 + d2;\r\n\r\n      return heuristic;\r\n    }\r\n\r\n    neighbors(\r\n      node: AStarData,\r\n      diagonals?: boolean,\r\n      diagonalsOnly?: boolean,\r\n      diagonalsOmni?: boolean,\r\n    ): AStarData[] {\r\n      var grid = this.grid;\r\n      var ret = [];\r\n      var x = node.pos.x;\r\n      var y = node.pos.y;\r\n\r\n      if (!diagonalsOnly) {\r\n        // West\r\n        if (grid[x - 1] && grid[x - 1][y]) {\r\n          ret.push(grid[x - 1][y]);\r\n        }\r\n\r\n        // East\r\n        if (grid[x + 1] && grid[x + 1][y]) {\r\n          ret.push(grid[x + 1][y]);\r\n        }\r\n\r\n        // South\r\n        if (grid[x] && grid[x][y - 1]) {\r\n          ret.push(grid[x][y - 1]);\r\n        }\r\n\r\n        // North\r\n        if (grid[x] && grid[x][y + 1]) {\r\n          ret.push(grid[x][y + 1]);\r\n        }\r\n      }\r\n\r\n      if (diagonals) {\r\n        // Southwest\r\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\r\n          ret.push(grid[x - 1][y - 1]);\r\n        }\r\n\r\n        // Southeast\r\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\r\n          ret.push(grid[x + 1][y - 1]);\r\n        }\r\n\r\n        // Northwest\r\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\r\n          ret.push(grid[x - 1][y + 1]);\r\n        }\r\n\r\n        // Northeast\r\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\r\n          ret.push(grid[x + 1][y + 1]);\r\n        }\r\n      }\r\n      function getRandomBoolean(): boolean {\r\n        return Random.rand() < 0.5;\r\n      }\r\n      if (diagonalsOmni) {\r\n        const randomBool: boolean = getRandomBoolean();\r\n        // West\r\n        if (grid[x - 1] && grid[x - 1][y]) {\r\n          // Instead of pushing West, choose between Southwest and Northwest\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x - 1][y + 1]);\r\n            return;\r\n          }\r\n        }\r\n        // East\r\n        if (grid[x + 1] && grid[x + 1][y]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x + 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y + 1]);\r\n            return;\r\n          }\r\n        }\r\n        // South\r\n        if (grid[x] && grid[x][y - 1]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y - 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y - 1]);\r\n            return;\r\n          }\r\n        }\r\n        // North\r\n        if (grid[x] && grid[x][y + 1]) {\r\n          if (randomBool == true) {\r\n            ret.push(grid[x - 1][y + 1]);\r\n            return;\r\n          } else {\r\n            ret.push(grid[x + 1][y + 1]);\r\n            return;\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n  }\r\n}\r\n","// Minimal cookie helpers with chunking for larger payloads\n\nconst toK = (name: string) => encodeURIComponent(name);\nconst toV = (value: string) => encodeURIComponent(value);\n\nexport const setCookie = (name: string, value: string, maxAgeDays = 180) => {\n  try {\n    const maxAge = maxAgeDays * 24 * 60 * 60;\n    document.cookie = `${toK(name)}=${toV(value)}; path=/; max-age=${maxAge}`;\n    // Verify round-trip; if it failed (file:// or blocked), fallback to localStorage\n    const rt = getCookie(name);\n    if (rt === null) {\n      localStorage.setItem(name, value);\n    }\n  } catch {\n    try {\n      localStorage.setItem(name, value);\n    } catch {}\n  }\n};\n\nexport const getCookie = (name: string): string | null => {\n  try {\n    const key = toK(name) + \"=\";\n    const parts = document.cookie.split(/;\\s*/);\n    for (const part of parts) {\n      if (part.startsWith(key)) {\n        return decodeURIComponent(part.substring(key.length));\n      }\n    }\n  } catch {}\n  // Fallback to localStorage\n  try {\n    const v = localStorage.getItem(name);\n    return v === null ? null : v;\n  } catch {\n    return null;\n  }\n};\n\nexport const deleteCookie = (name: string) => {\n  try {\n    document.cookie = `${toK(name)}=; path=/; max-age=0`;\n  } catch {}\n  try {\n    localStorage.removeItem(name);\n  } catch {}\n};\n\n// Chunk large strings across multiple cookies\nconst CHUNK_SIZE = 3000; // stay well under 4KB after key/attrs\n\nexport const setCookieChunks = (\n  prefix: string,\n  value: string,\n  maxAgeDays = 30,\n) => {\n  // Clear existing chunks first\n  const meta = getCookie(`${prefix}_meta`);\n  if (meta) {\n    const total = parseInt(meta, 10);\n    if (Number.isFinite(total)) {\n      for (let i = 0; i < total; i++) deleteCookie(`${prefix}_${i}`);\n    }\n    deleteCookie(`${prefix}_meta`);\n  }\n\n  // Write new chunks\n  const total = Math.ceil(value.length / CHUNK_SIZE) || 1;\n  for (let i = 0; i < total; i++) {\n    const slice = value.slice(i * CHUNK_SIZE, (i + 1) * CHUNK_SIZE);\n    setCookie(`${prefix}_${i}`, slice, maxAgeDays);\n  }\n  setCookie(`${prefix}_meta`, String(total), maxAgeDays);\n};\n\nexport const getCookieChunks = (prefix: string): string | null => {\n  const meta = getCookie(`${prefix}_meta`);\n  if (!meta) return null;\n  const total = parseInt(meta, 10);\n  if (!Number.isFinite(total) || total <= 0) return null;\n  let out = \"\";\n  for (let i = 0; i < total; i++) {\n    const chunk = getCookie(`${prefix}_${i}`);\n    if (chunk === null) return null;\n    out += chunk;\n  }\n  return out;\n};\n","import * as UAParser from \"ua-parser-js\";\r\n\r\nexport interface DeviceInfo {\r\n  os: UAParser.IOS;\r\n  browser: UAParser.IBrowser;\r\n  device: UAParser.IDevice;\r\n  orientation: OrientationType;\r\n}\r\n\r\nexport const getDeviceInfo = (): DeviceInfo => {\r\n  const parser = new UAParser.UAParser(navigator.userAgent);\r\n  const result = parser.getResult();\r\n  const { browser, device, os } = result;\r\n\r\n  return {\r\n    os,\r\n    browser,\r\n    device,\r\n    orientation: screen.orientation.type,\r\n  };\r\n};\r\n","export class Random {\r\n  static state: number;\r\n\r\n  static setState = (state: number) => {\r\n    Random.state = state;\r\n  };\r\n\r\n  /**\r\n   * Generates a pseudorandom floating-point number using a xorshift algorithm.\r\n   *\r\n   * This method implements a 32-bit xorshift PRNG that modifies the internal state\r\n   * using three XOR operations with bit shifts (21 left, 35 right, 4 left).\r\n   * The algorithm is fast and suitable for games but should not be used for\r\n   * cryptographic purposes.\r\n   *\r\n   * @returns {number} A pseudorandom floating-point number in the range [0, 1).\r\n   *                   The value is uniformly distributed across this range.\r\n   *\r\n   * @example\r\n   * Random.setState(12345); // Set initial seed\r\n   * const randomValue = Random.rand(); // Returns something like 0.7234567891\r\n   *\r\n   * @see https://en.wikipedia.org/wiki/Xorshift for algorithm details\r\n   */\r\n  static rand = () => {\r\n    Random.state ^= Random.state << 21;\r\n    Random.state ^= Random.state >>> 35;\r\n    Random.state ^= Random.state << 4;\r\n    return (Random.state >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\n// copy and paste into browser console\r\n// let state;\r\n// let rand = () => { state ^= (state << 21); state ^= (state >>> 35); state ^= (state << 4); return (state >>> 0) / 4294967296; }\r\n","import { Game } from \"../game\";\r\nimport { Random } from \"./random\";\r\n\r\nexport class Utils {\r\n  static distance = (\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n  ) => {\r\n    return Math.sqrt((endX - startX) ** 2 + (endY - startY) ** 2);\r\n  };\r\n\r\n  static calculateExponentialFalloff = (\r\n    distance: number,\r\n    falloffRate: number,\r\n  ): number => {\r\n    return Math.exp(-falloffRate * distance);\r\n  };\r\n\r\n  // Corrected HSV to HEX conversion\r\n  static hsvToHex = (h: number, s: number, v: number): string => {\r\n    let c = v * s;\r\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n    let m = v - c;\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0;\r\n\r\n    if (h >= 0 && h < 60) {\r\n      r = c;\r\n      g = x;\r\n      b = 0;\r\n    } else if (h >= 60 && h < 120) {\r\n      r = x;\r\n      g = c;\r\n      b = 0;\r\n    } else if (h >= 120 && h < 180) {\r\n      r = 0;\r\n      g = c;\r\n      b = x;\r\n    } else if (h >= 180 && h < 240) {\r\n      r = 0;\r\n      g = x;\r\n      b = c;\r\n    } else if (h >= 240 && h < 300) {\r\n      r = x;\r\n      g = 0;\r\n      b = c;\r\n    } else {\r\n      r = c;\r\n      g = 0;\r\n      b = x;\r\n    }\r\n\r\n    // Convert to RGB values\r\n    const rFinal = Math.round((r + m) * 255);\r\n    const gFinal = Math.round((g + m) * 255);\r\n    const bFinal = Math.round((b + m) * 255);\r\n\r\n    return Utils.rgbToHex(rFinal, gFinal, bFinal);\r\n  };\r\n\r\n  // RGB to HEX conversion\r\n  static rgbToHex = (r: number, g: number, b: number): string => {\r\n    const toHex = (val: number) => {\r\n      const hex = val.toString(16);\r\n      return hex.length === 1 ? \"0\" + hex : hex;\r\n    };\r\n\r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n  };\r\n\r\n  /**\r\n   * Generates a random integer using a modified cosine distribution that approximates a normal distribution.\r\n   *\r\n   * @param min - The minimum value (inclusive) of the range\r\n   * @param max - The maximum value (inclusive) of the range\r\n   * @param options - Optional parameters to modify the distribution\r\n   * @param options.median - The value to skew the distribution towards (must be between min and max).\r\n   *                        Default is the middle of the range. This acts as the peak of the distribution curve.\r\n   * @returns A random integer between min and max (inclusive) following the specified distribution\r\n   *\r\n   * @example\r\n   * // Normal bell curve distribution between 0 and 10 (centered at 5)\r\n   * randomSineInt(0, 10)\r\n   *\r\n   * @example\r\n   * // Distribution skewed towards 7\r\n   * randomSineInt(0, 10, { median: 7 })\r\n   */\r\n  static randomSineInt = (\r\n    min: number,\r\n    max: number,\r\n    options: {\r\n      median?: number;\r\n    } = {},\r\n  ): number => {\r\n    const roundedMax = Math.ceil(max);\r\n    const roundedMin = Math.floor(min);\r\n    const range = roundedMax - roundedMin + 1;\r\n\r\n    const { median = roundedMin + (range - 1) / 2 } = options;\r\n\r\n    // Validate median is within range\r\n    const clampedMedian = Math.min(Math.max(median, roundedMin), roundedMax);\r\n\r\n    // Generate two random numbers for a more normal-like distribution\r\n    const x1 = Random.rand() * 2 * Math.PI;\r\n    const x2 = Random.rand() * 2 * Math.PI;\r\n\r\n    // Average two cosines to create smoother bell curve, normalized to [0,1]\r\n    const value = (Math.cos(x1) + Math.cos(x2) + 2) / 4;\r\n\r\n    // Calculate the relative median position in [0,1] range\r\n    const medianPosition = (clampedMedian - roundedMin) / (range - 1);\r\n\r\n    // Apply skewing by using a weighted average\r\n    const weight = 0.7; // How strong the skewing effect should be\r\n    const skewedValue =\r\n      value * (1 - weight) +\r\n      (value < 0.5\r\n        ? value * (medianPosition / 0.5)\r\n        : medianPosition + (value - 0.5) * 2 * (1 - medianPosition)) *\r\n        weight;\r\n\r\n    // Ensure we stay within bounds while avoiding edge cases\r\n    const epsilon = 0.001;\r\n    const boundedValue = Math.min(Math.max(skewedValue, epsilon), 1 - epsilon);\r\n\r\n    // Map to integer range\r\n    const result = Math.floor(boundedValue * range) + roundedMin;\r\n\r\n    return Math.min(Math.max(result, roundedMin), roundedMax);\r\n  };\r\n\r\n  static randTableWeighted = (table: any[]): any => {\r\n    // If table is empty, return null\r\n    if (!table || table.length === 0) return null;\r\n\r\n    // Check if items have weight property\r\n    const hasWeights = table.some(\r\n      (item) => item && typeof item.weight === \"number\",\r\n    );\r\n\r\n    if (!hasWeights) {\r\n      // Fallback to equal probability selection\r\n      return table[Game.rand(0, table.length - 1, Random.rand)];\r\n    }\r\n\r\n    // Calculate total weight\r\n    const totalWeight = table.reduce((sum, item) => {\r\n      return sum + (item && typeof item.weight === \"number\" ? item.weight : 0);\r\n    }, 0);\r\n\r\n    if (totalWeight <= 0) {\r\n      // If no valid weights, fallback to equal probability\r\n      return table[Game.rand(0, table.length - 1, Random.rand)];\r\n    }\r\n\r\n    // Generate random number between 0 and totalWeight\r\n    let randomValue = Random.rand() * totalWeight;\r\n\r\n    // Find the item that corresponds to this random value\r\n    for (const item of table) {\r\n      if (item && typeof item.weight === \"number\") {\r\n        randomValue -= item.weight;\r\n        if (randomValue <= 0) {\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Fallback (should rarely happen due to floating point precision)\r\n    return table[table.length - 1];\r\n  };\r\n\r\n  /**\r\n   * Generates a random integer using a real normal distribution.\r\n   *\r\n   * @param min - The value that represents -2 standard deviations from the mean\r\n   * @param max - The value that represents +2 standard deviations from the mean\r\n   * @param options - Optional parameters to modify the distribution\r\n   * @param options.median - The mean of the distribution (center point).\r\n   *                        Default is the middle of the range.\r\n   * @returns A random integer following a normal distribution, with negative values clamped to 0\r\n   *\r\n   * @example\r\n   * // Normal distribution centered at 5, with min/max representing ±2 std devs\r\n   * randomNormalInt(0, 10)\r\n   *\r\n   * @example\r\n   * // Normal distribution centered at 7\r\n   * randomNormalInt(0, 10, { median: 7 })\r\n   */\r\n  static randomNormalInt = (\r\n    min: number,\r\n    max: number,\r\n    options: {\r\n      median?: number;\r\n    } = {},\r\n  ): number => {\r\n    const { median = min + (max - min) / 2 } = options;\r\n\r\n    // Calculate standard deviation: (max - min) / 4 since min/max are ±2 std devs\r\n    const standardDeviation = (max - min) / 5;\r\n\r\n    // Box-Muller transform to generate normal distribution\r\n    // Generate two uniform random numbers\r\n    let u1 = Random.rand();\r\n    let u2 = Random.rand();\r\n\r\n    // Ensure u1 is not 0 to avoid log(0)\r\n    while (u1 === 0) {\r\n      u1 = Random.rand();\r\n    }\r\n\r\n    // Box-Muller transformation\r\n    const z0 = Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\r\n\r\n    // Scale and shift to desired mean and standard deviation\r\n    const normalValue = z0 * standardDeviation + median;\r\n\r\n    // Clamp negative values to 0\r\n    const clampedValue = Math.max(0, normalValue);\r\n\r\n    // Round to integer\r\n    return Math.round(clampedValue);\r\n  };\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.p = \"/dist/\";","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}